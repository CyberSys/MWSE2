{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About \u2693\ufe0e The Morrowind Script Extender makes additional functions available for use in Morrowind scripts, beyond those provided by the game's construction set. These extra functions allow modders to add features and behavior to scripts that would otherwise be impractical or impossible. Morrowind Modding Community Discord If you are looking for MWSE scripting advice or discussions, try the Morrowind Modding Community Discord . Installation \u2693\ufe0e Install the Visual Studio x86 2017 Redistributable is required for MWSE v2.0 on older versions of Windows. Note that you will need the x86 version, even if you already have the x64 redistributable installed. Install the Morrowind Code Patch modifies the game executable, and MWSE assumes you have at least the base patches performed for its own modifications. Install the Morrowind Graphic Extender XE (MGE XE) allows MWSE to be loaded. Run MWSE-Update.exe in your Morrowind install folder. This was downloaded and installed as part of MGE XE's installation. Contributing \u2693\ufe0e The Morrowind Script Extender is open source software that welcomes contributions in the forms of ideas, bug fixes, and new features. Requirements \u2693\ufe0e Visual Studio \u2693\ufe0e Contributing to MWSE requires a copy of Visual Studio 2022 , with the following features enabled: Workloads: Desktop development with C++ LuaJIT \u2693\ufe0e LuaJIT needs to be compiled once, and is included in the project. To compile, use Tools > Visual Studio Command Prompt and run the following: cd deps\\LuaJIT\\src msvcbuild.bat GitHub \u2693\ufe0e Code contributions are managed via GitHub . Discord \u2693\ufe0e Communication of features, designs, and requests are handled on Discord. See the #mwse channel in the Morrowind Modding Community Discord . Authors \u2693\ufe0e The following individuals have contributed to the Morrowind Script Extender. Anthony Garcia C3pa Charles Cooley (cdcooley) Cody Erekson (Fliggerty) FreshFish Grant McDorman Greatness7 Hrnchamd Merzasphor Michael Wallar (NullCascade) OperatorJack Pete Goodfellow (Petethegoat) Sebastien Levy (MetaBarj0) Tim Peters Timeslip","title":"About"},{"location":"#about","text":"The Morrowind Script Extender makes additional functions available for use in Morrowind scripts, beyond those provided by the game's construction set. These extra functions allow modders to add features and behavior to scripts that would otherwise be impractical or impossible. Morrowind Modding Community Discord If you are looking for MWSE scripting advice or discussions, try the Morrowind Modding Community Discord .","title":"About"},{"location":"#installation","text":"Install the Visual Studio x86 2017 Redistributable is required for MWSE v2.0 on older versions of Windows. Note that you will need the x86 version, even if you already have the x64 redistributable installed. Install the Morrowind Code Patch modifies the game executable, and MWSE assumes you have at least the base patches performed for its own modifications. Install the Morrowind Graphic Extender XE (MGE XE) allows MWSE to be loaded. Run MWSE-Update.exe in your Morrowind install folder. This was downloaded and installed as part of MGE XE's installation.","title":"Installation"},{"location":"#contributing","text":"The Morrowind Script Extender is open source software that welcomes contributions in the forms of ideas, bug fixes, and new features.","title":"Contributing"},{"location":"#requirements","text":"","title":"Requirements"},{"location":"#github","text":"Code contributions are managed via GitHub .","title":"GitHub"},{"location":"#discord","text":"Communication of features, designs, and requests are handled on Discord. See the #mwse channel in the Morrowind Modding Community Discord .","title":"Discord"},{"location":"#authors","text":"The following individuals have contributed to the Morrowind Script Extender. Anthony Garcia C3pa Charles Cooley (cdcooley) Cody Erekson (Fliggerty) FreshFish Grant McDorman Greatness7 Hrnchamd Merzasphor Michael Wallar (NullCascade) OperatorJack Pete Goodfellow (Petethegoat) Sebastien Levy (MetaBarj0) Tim Peters Timeslip","title":"Authors"},{"location":"apis/dofile/","text":"dofile \u2693\ufe0e Reads, loads, and excutes a lua file at a given path. Similar to the require and include functions, dofile allows the use of periods as a path delimiter. Unlike require , a path relative to Morrowind.exe may be given. dofile ( path ) Parameters : path (string)","title":"dofile"},{"location":"apis/dofile/#dofile","text":"Reads, loads, and excutes a lua file at a given path. Similar to the require and include functions, dofile allows the use of periods as a path delimiter. Unlike require , a path relative to Morrowind.exe may be given. dofile ( path ) Parameters : path (string)","title":"dofile"},{"location":"apis/event/","text":"event \u2693\ufe0e The event library helps to instruct mwse to call a given function when a specific action is taken in the game. Functions \u2693\ufe0e event.clear \u2693\ufe0e Removes all callbacks registered for a given event. event . clear ( eventId , options ) Parameters : eventId (string) options (table): Optional . event.register \u2693\ufe0e Registers a function to be called when an event is raised. event . register ( eventId , callback , options ) Parameters : eventId (string) callback (function) options (table): Optional . event.trigger \u2693\ufe0e Triggers an event. This can be used to trigger custom events with specific data. event . trigger ( eventId , payload , options ) Parameters : eventId (string) payload (table): Optional . options (table): Optional . event.unregister \u2693\ufe0e Unregisters a function previously registered for an event with event.register() . event . unregister ( eventId , callback , options ) Parameters : eventId (string) callback (function) options (table): Optional .","title":"event"},{"location":"apis/event/#event","text":"The event library helps to instruct mwse to call a given function when a specific action is taken in the game.","title":"event"},{"location":"apis/event/#functions","text":"","title":"Functions"},{"location":"apis/event/#eventclear","text":"Removes all callbacks registered for a given event. event . clear ( eventId , options ) Parameters : eventId (string) options (table): Optional .","title":"event.clear"},{"location":"apis/event/#eventregister","text":"Registers a function to be called when an event is raised. event . register ( eventId , callback , options ) Parameters : eventId (string) callback (function) options (table): Optional .","title":"event.register"},{"location":"apis/event/#eventtrigger","text":"Triggers an event. This can be used to trigger custom events with specific data. event . trigger ( eventId , payload , options ) Parameters : eventId (string) payload (table): Optional . options (table): Optional .","title":"event.trigger"},{"location":"apis/event/#eventunregister","text":"Unregisters a function previously registered for an event with event.register() . event . unregister ( eventId , callback , options ) Parameters : eventId (string) callback (function) options (table): Optional .","title":"event.unregister"},{"location":"apis/include/","text":"include \u2693\ufe0e Loads the given module. This functions identically to require , but will return nil instead of erroring if the module couldn't be found. The function starts by looking into the package.loaded table to determine whether modname is already loaded. If it is, then include returns the value stored at package.loaded[modname] . Otherwise, it tries to find a loader for the module. Intended use case for this function is for making interoperability between mods. You shouldn't include your own file, since any errors in the include d file will just be printed in the log as error on the include line. In other words, include is only used to check if a certain optional mod is present. local result = include ( modname ) Parameters : modname (string) Returns : result (table, nil) Example: Example local optionalModule = include ( \"optionalModule.file\" ) if optionalModule then -- do stuff with the optinalModule optionalModule . foo ( \"bar\" ) else mwse . log ( \"[MyMod] To enjoy all of this mod's features, please install optionalModule.\" ) -- do some other stuff end","title":"include"},{"location":"apis/include/#include","text":"Loads the given module. This functions identically to require , but will return nil instead of erroring if the module couldn't be found. The function starts by looking into the package.loaded table to determine whether modname is already loaded. If it is, then include returns the value stored at package.loaded[modname] . Otherwise, it tries to find a loader for the module. Intended use case for this function is for making interoperability between mods. You shouldn't include your own file, since any errors in the include d file will just be printed in the log as error on the include line. In other words, include is only used to check if a certain optional mod is present. local result = include ( modname ) Parameters : modname (string) Returns : result (table, nil) Example: Example local optionalModule = include ( \"optionalModule.file\" ) if optionalModule then -- do stuff with the optinalModule optionalModule . foo ( \"bar\" ) else mwse . log ( \"[MyMod] To enjoy all of this mod's features, please install optionalModule.\" ) -- do some other stuff end","title":"include"},{"location":"apis/json/","text":"json \u2693\ufe0e Provides support for interacting with json data through an extended dkjson module. Properties \u2693\ufe0e json.null \u2693\ufe0e You can use this value for setting explicit null values. Returns : result (number) json.version \u2693\ufe0e Current version of dkjson. Returns : result (string) Functions \u2693\ufe0e json.decode \u2693\ufe0e Decode string into a table. local result = json . decode ( s , position , nullValue ) Parameters : s (string) position (number): Default : 1 . nullValue (string, nil): Default : nil . Returns : result (table) json.encode \u2693\ufe0e Create a string representing the object. Object can be a table, a string, a number, a boolean, nil, json.null or any object with a function __tojson in its metatable. A table can only use strings and numbers as keys and its values have to be valid objects as well. It raises an error for any invalid data types or reference cycles. local result = json . encode ( object , state ) Parameters : object (table) state (table) Returns : result (string) json.loadfile \u2693\ufe0e Loads the contents of a file through json.decode. Files loaded from Data Files\\MWSE\\{fileName}.json. local result = json . loadfile ( fileName ) Parameters : fileName (string) Returns : result (table) json.quotestring \u2693\ufe0e Quote a UTF-8 string and escape critical characters using JSON escape sequences. This function is only necessary when you build your own __tojson functions. local result = json . quotestring ( s ) Parameters : s (string) Returns : result (string) json.savefile \u2693\ufe0e Saves a serializable table to Data Files\\MWSE\\{fileName}.json, using json.encode. json . savefile ( fileName , object , config ) Parameters : fileName (string) object (table) config (table): Optional .","title":"json"},{"location":"apis/json/#json","text":"Provides support for interacting with json data through an extended dkjson module.","title":"json"},{"location":"apis/json/#properties","text":"","title":"Properties"},{"location":"apis/json/#jsonnull","text":"You can use this value for setting explicit null values. Returns : result (number)","title":"json.null"},{"location":"apis/json/#jsonversion","text":"Current version of dkjson. Returns : result (string)","title":"json.version"},{"location":"apis/json/#functions","text":"","title":"Functions"},{"location":"apis/json/#jsondecode","text":"Decode string into a table. local result = json . decode ( s , position , nullValue ) Parameters : s (string) position (number): Default : 1 . nullValue (string, nil): Default : nil . Returns : result (table)","title":"json.decode"},{"location":"apis/json/#jsonencode","text":"Create a string representing the object. Object can be a table, a string, a number, a boolean, nil, json.null or any object with a function __tojson in its metatable. A table can only use strings and numbers as keys and its values have to be valid objects as well. It raises an error for any invalid data types or reference cycles. local result = json . encode ( object , state ) Parameters : object (table) state (table) Returns : result (string)","title":"json.encode"},{"location":"apis/json/#jsonloadfile","text":"Loads the contents of a file through json.decode. Files loaded from Data Files\\MWSE\\{fileName}.json. local result = json . loadfile ( fileName ) Parameters : fileName (string) Returns : result (table)","title":"json.loadfile"},{"location":"apis/json/#jsonquotestring","text":"Quote a UTF-8 string and escape critical characters using JSON escape sequences. This function is only necessary when you build your own __tojson functions. local result = json . quotestring ( s ) Parameters : s (string) Returns : result (string)","title":"json.quotestring"},{"location":"apis/json/#jsonsavefile","text":"Saves a serializable table to Data Files\\MWSE\\{fileName}.json, using json.encode. json . savefile ( fileName , object , config ) Parameters : fileName (string) object (table) config (table): Optional .","title":"json.savefile"},{"location":"apis/lfs/","text":"lfs \u2693\ufe0e LuaFileSystem is a Lua library developed to complement the set of functions related to file systems offered by the standard Lua distribution. This library has been further extended by MWSE. Functions \u2693\ufe0e lfs.attributes \u2693\ufe0e Returns a table with the file attributes corresponding to filepath (or nil followed by an error message and a system-dependent error code in case of error). If the second optional argument is given and is a string, then only the value of the named attribute is returned (this use is equivalent to lfs.attributes(filepath)[request_name], but the table is not created and only one attribute is retrieved from the O.S.). if a table is passed as the second argument, it (result_table) is filled with attributes and returned instead of a new table. The attributes are described as follows; attribute mode is a string, all the others are numbers, and the time related attributes use the same time reference of os.time: dev, mode, nlink, access, modification, change, size, permissions. local attributes , error = lfs . attributes ( path , request , resultTable ) Parameters : path (string): The path, relative to the current directory, to get attributes for. request (string): Optional . The specific attribute to look for. If provided, the return value becomes the requested value (or nil) instead of a table. resultTable (table): Optional . If provided, this table will be reused as the result table. If not provided, a new table is created. Returns : attributes (table, string, number, nil): All attributes in a table, the value of a specific attribute if one was requested, or nil on an error. error (string, nil): In the case of an error, a string describing the issue. lfs.chdir \u2693\ufe0e Changes the current working directory to the given path. Note that this is global. Do not use this function without restoring the previous directory at the end of your logic. Failure to do so can cause unrecoverable errors. local success , error = lfs . chdir ( path ) Parameters : path (string): The path to change to. Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue. lfs.currentdir \u2693\ufe0e Changes the current working directory to the given path. local path , error = lfs . currentdir () Returns : path (string, nil): The current working directory, or nil on an error. error (string, nil): In the case of an error, a string describing the issue. lfs.dir \u2693\ufe0e Creates a Lua iterator over the entries of a given directory. This can be used to create a for loop of directories. Be wary that current and parent directory markers may be available in the results. lfs . dir ( path ) Parameters : path (string): The path to iterate over. lfs.directoryexists \u2693\ufe0e Simple check to determine if a directory exists. local success = lfs . directoryexists ( path ) Parameters : path (string): The path to determine existance of. Returns : success (boolean): true if the directory exists. lfs.fileexists \u2693\ufe0e Simple check to determine if a file exists. local success = lfs . fileexists ( path ) Parameters : path (string): The path to determine existance of. Returns : success (boolean): true if the file exists. lfs.link \u2693\ufe0e Creates a link. This is a hard link by default. local success , error = lfs . link ( old , new , symlink ) Parameters : old (string): The object to link to. new (string): The name of the link. symlink (boolean): Optional . If true, the link will be symbolic instead. Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue. lfs.lock \u2693\ufe0e Locks a file or a part of it. This function works on open files; the file handle should be specified as the first argument. local success , error = lfs . lock ( filehandle , mode , start , length ) Parameters : filehandle ( ioFile ): The file handle to lock. mode (string): \"r\" for a read/shared lock, or \"w\" for a write/exclusive lock. start (number): Optional . The starting point of the file to lock. length (number): Optional . The length of the file, relative to start, to lock. Returns : success (boolean, nil): true if the operation was successful, or nil in the case of an error. error (string, nil): In the case of an error, a string describing the issue. In particular, if the lock exists and is not stale it returns the \"File exists\" message. lfs.lock_dir \u2693\ufe0e Creates a lockfile (called lockfile.lfs) in path if it does not exist and returns the lock. If the lock already exists checks if it's stale, using the second parameter (default for the second parameter is INT_MAX, which in practice means the lock will never be stale. The lock object has a method to free it. local success , error = lfs . lock_dir ( path ) Parameters : path (string): The path to lock. Returns : success ( lfsLock , nil): The lock object to manage, or nil in the case of an error. error (string, nil): In the case of an error, a string describing the issue. In particular, if the lock exists and is not stale it returns the \"File exists\" message. lfs.mkdir \u2693\ufe0e Creates a new directory. local success , error = lfs . mkdir ( dirname ) Parameters : dirname (string): The name of the new directory. Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue. lfs.rmdir \u2693\ufe0e Removes an existing directory. Unless using the recursive parameter, only empty directories can be removed. local success , error = lfs . rmdir ( dirname , recursive ) Parameters : dirname (string): The name of the directory to remove. recursive (boolean): Default : false . If true, all contents of the directory will be removed as well. Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue. lfs.setmode \u2693\ufe0e Sets the writing mode for a file. local success , errorOrOldMode = lfs . setmode ( file , mode ) Parameters : file ( ioFile ): The file to set mode for. mode (string): The file's new mode. Can be either \"binary\" or \"text\". Returns : success (boolean, nil): true in case of success, or nil on an error. errorOrOldMode (string): If succesful, this will be the previous file mode used. In the case of an error, a string describing the issue. lfs.touch \u2693\ufe0e Set access and modification times of a file. Both access and modified times are measured in seconds, matching the OS time function. local success , error = lfs . touch ( path , accessTime , modifiedTime ) Parameters : path (string): The path to touch. accessTime (number): Optional . The new access time to set. modifiedTime (number): Optional . The new last modified time to set Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue. lfs.unlock \u2693\ufe0e Unlocks a file or a part of it. This function works on open files; the file handle should be specified as the first argument. local success , error = lfs . unlock ( filehandle , mode , start , length ) Parameters : filehandle ( ioFile ): The file handle to unlock. mode (string): \"r\" for a read/shared lock, or \"w\" for a write/exclusive unlock. start (number): Optional . The starting point of the file to unlock. length (number): Optional . The length of the file, relative to start, to unlock. Returns : success (boolean, nil): true if the operation was successful, or nil in the case of an error. error (string, nil): In the case of an error, a string describing the issue. In particular, if the lock exists and is not stale it returns the \"File exists\" message.","title":"lfs"},{"location":"apis/lfs/#lfs","text":"LuaFileSystem is a Lua library developed to complement the set of functions related to file systems offered by the standard Lua distribution. This library has been further extended by MWSE.","title":"lfs"},{"location":"apis/lfs/#functions","text":"","title":"Functions"},{"location":"apis/lfs/#lfsattributes","text":"Returns a table with the file attributes corresponding to filepath (or nil followed by an error message and a system-dependent error code in case of error). If the second optional argument is given and is a string, then only the value of the named attribute is returned (this use is equivalent to lfs.attributes(filepath)[request_name], but the table is not created and only one attribute is retrieved from the O.S.). if a table is passed as the second argument, it (result_table) is filled with attributes and returned instead of a new table. The attributes are described as follows; attribute mode is a string, all the others are numbers, and the time related attributes use the same time reference of os.time: dev, mode, nlink, access, modification, change, size, permissions. local attributes , error = lfs . attributes ( path , request , resultTable ) Parameters : path (string): The path, relative to the current directory, to get attributes for. request (string): Optional . The specific attribute to look for. If provided, the return value becomes the requested value (or nil) instead of a table. resultTable (table): Optional . If provided, this table will be reused as the result table. If not provided, a new table is created. Returns : attributes (table, string, number, nil): All attributes in a table, the value of a specific attribute if one was requested, or nil on an error. error (string, nil): In the case of an error, a string describing the issue.","title":"lfs.attributes"},{"location":"apis/lfs/#lfschdir","text":"Changes the current working directory to the given path. Note that this is global. Do not use this function without restoring the previous directory at the end of your logic. Failure to do so can cause unrecoverable errors. local success , error = lfs . chdir ( path ) Parameters : path (string): The path to change to. Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue.","title":"lfs.chdir"},{"location":"apis/lfs/#lfscurrentdir","text":"Changes the current working directory to the given path. local path , error = lfs . currentdir () Returns : path (string, nil): The current working directory, or nil on an error. error (string, nil): In the case of an error, a string describing the issue.","title":"lfs.currentdir"},{"location":"apis/lfs/#lfsdir","text":"Creates a Lua iterator over the entries of a given directory. This can be used to create a for loop of directories. Be wary that current and parent directory markers may be available in the results. lfs . dir ( path ) Parameters : path (string): The path to iterate over.","title":"lfs.dir"},{"location":"apis/lfs/#lfsdirectoryexists","text":"Simple check to determine if a directory exists. local success = lfs . directoryexists ( path ) Parameters : path (string): The path to determine existance of. Returns : success (boolean): true if the directory exists.","title":"lfs.directoryexists"},{"location":"apis/lfs/#lfsfileexists","text":"Simple check to determine if a file exists. local success = lfs . fileexists ( path ) Parameters : path (string): The path to determine existance of. Returns : success (boolean): true if the file exists.","title":"lfs.fileexists"},{"location":"apis/lfs/#lfslink","text":"Creates a link. This is a hard link by default. local success , error = lfs . link ( old , new , symlink ) Parameters : old (string): The object to link to. new (string): The name of the link. symlink (boolean): Optional . If true, the link will be symbolic instead. Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue.","title":"lfs.link"},{"location":"apis/lfs/#lfslock","text":"Locks a file or a part of it. This function works on open files; the file handle should be specified as the first argument. local success , error = lfs . lock ( filehandle , mode , start , length ) Parameters : filehandle ( ioFile ): The file handle to lock. mode (string): \"r\" for a read/shared lock, or \"w\" for a write/exclusive lock. start (number): Optional . The starting point of the file to lock. length (number): Optional . The length of the file, relative to start, to lock. Returns : success (boolean, nil): true if the operation was successful, or nil in the case of an error. error (string, nil): In the case of an error, a string describing the issue. In particular, if the lock exists and is not stale it returns the \"File exists\" message.","title":"lfs.lock"},{"location":"apis/lfs/#lfslock_dir","text":"Creates a lockfile (called lockfile.lfs) in path if it does not exist and returns the lock. If the lock already exists checks if it's stale, using the second parameter (default for the second parameter is INT_MAX, which in practice means the lock will never be stale. The lock object has a method to free it. local success , error = lfs . lock_dir ( path ) Parameters : path (string): The path to lock. Returns : success ( lfsLock , nil): The lock object to manage, or nil in the case of an error. error (string, nil): In the case of an error, a string describing the issue. In particular, if the lock exists and is not stale it returns the \"File exists\" message.","title":"lfs.lock_dir"},{"location":"apis/lfs/#lfsmkdir","text":"Creates a new directory. local success , error = lfs . mkdir ( dirname ) Parameters : dirname (string): The name of the new directory. Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue.","title":"lfs.mkdir"},{"location":"apis/lfs/#lfsrmdir","text":"Removes an existing directory. Unless using the recursive parameter, only empty directories can be removed. local success , error = lfs . rmdir ( dirname , recursive ) Parameters : dirname (string): The name of the directory to remove. recursive (boolean): Default : false . If true, all contents of the directory will be removed as well. Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue.","title":"lfs.rmdir"},{"location":"apis/lfs/#lfssetmode","text":"Sets the writing mode for a file. local success , errorOrOldMode = lfs . setmode ( file , mode ) Parameters : file ( ioFile ): The file to set mode for. mode (string): The file's new mode. Can be either \"binary\" or \"text\". Returns : success (boolean, nil): true in case of success, or nil on an error. errorOrOldMode (string): If succesful, this will be the previous file mode used. In the case of an error, a string describing the issue.","title":"lfs.setmode"},{"location":"apis/lfs/#lfstouch","text":"Set access and modification times of a file. Both access and modified times are measured in seconds, matching the OS time function. local success , error = lfs . touch ( path , accessTime , modifiedTime ) Parameters : path (string): The path to touch. accessTime (number): Optional . The new access time to set. modifiedTime (number): Optional . The new last modified time to set Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue.","title":"lfs.touch"},{"location":"apis/lfs/#lfsunlock","text":"Unlocks a file or a part of it. This function works on open files; the file handle should be specified as the first argument. local success , error = lfs . unlock ( filehandle , mode , start , length ) Parameters : filehandle ( ioFile ): The file handle to unlock. mode (string): \"r\" for a read/shared lock, or \"w\" for a write/exclusive unlock. start (number): Optional . The starting point of the file to unlock. length (number): Optional . The length of the file, relative to start, to unlock. Returns : success (boolean, nil): true if the operation was successful, or nil in the case of an error. error (string, nil): In the case of an error, a string describing the issue. In particular, if the lock exists and is not stale it returns the \"File exists\" message.","title":"lfs.unlock"},{"location":"apis/lpeg/","text":"lpeg \u2693\ufe0e Provides pattern-matching based on Parsing Expression Grammars (PEGs). The documentation provided here is only meant to be a quick reference. Please review the complete documentation (with in-depth discussion and many examples) at: http://www.inf.puc-rio.br/~roberto/lpeg/ There is also a copy in the MWSE repo at: deps/lpeg/lpeg.html Functions \u2693\ufe0e lpeg.B \u2693\ufe0e Returns a pattern that matches only if the input string at the current position is preceded by pattern p. Pattern p must match only strings with some fixed length, and it cannot contain captures. Like the and predicate, this pattern never consumes any input, independently of success or failure. local result = lpeg . B ( p ) Parameters : p (pattern): The input pattern. Returns : result (pattern) lpeg.C \u2693\ufe0e Create a simple capture pattern, which captures the substring of the subject that matches pattern p. The captured value is a string. If p has other captures, their values are returned after this one. local result = lpeg . C ( p ) Parameters : p (pattern): The pattern to capture against. Returns : result (pattern) lpeg.Carg \u2693\ufe0e Create an argument capture. This pattern matches the empty string and produces the value given as the nth extra argument given in the call to lpeg.match. local result = lpeg . Carg ( n ) Parameters : n (number): The argument to produce. Returns : result (pattern) lpeg.Cb \u2693\ufe0e Create a back capture. This pattern matches the empty string and produces the values produced by the most recent group capture named name (where name can be any Lua value). Most recent means the last complete outermost group capture with the given name. A Complete capture means that the entire pattern corresponding to the capture has matched. An Outermost capture means that the capture is not inside another complete capture. In the same way that LPeg does not specify when it evaluates captures, it does not specify whether it reuses values previously produced by the group or re-evaluates them. local result = lpeg . Cb ( name ) Parameters : name (value): The group capture to produce. Returns : result (pattern) lpeg.Cc \u2693\ufe0e Create a constant capture. This pattern matches the empty string and produces all given values as its captured values. local result = lpeg . Cc ( unknown ) Parameters : unnamed (values): Optional . The values to produce. Returns : result (pattern) lpeg.Cf \u2693\ufe0e Create a fold capture. If pattern p produces a list of captures C1 C2 ... Cn, this capture will produce the value function f(...f(f(C1, C2), C3)..., Cn), that is, it will fold (or accumulate, or reduce) the captures from p using function f. This capture assumes that p should produce at least one capture with at least one value (of any type), which becomes the initial value of an accumulator. (If you need a specific initial value, you may prefix a constant capture to p.) For each subsequent capture, LPeg calls f with this accumulator as the first argument and all values produced by the capture as extra arguments; the first result from this call becomes the new value for the accumulator. The final value of the accumulator becomes the captured value. local result = lpeg . Cf ( p , f ) Parameters : p (pattern): The pattern to fold with f. f (function): The function to use to fold p. Returns : result (pattern) lpeg.Cg \u2693\ufe0e Create a group capture. It groups all values returned by pattern p into a single capture. The group may be anonymous (if no name is given) or named with the given name (which can be any non-nil Lua value). An anonymous group serves to join values from several captures into a single capture. A named group has a different behavior. In most situations, a named group returns no values at all. Its values are only relevant for a following back capture or when used inside a table capture. local result = lpeg . Cg ( p , name ) Parameters : p (pattern): The pattern to capture with. name (value): Optional . The name of the group. Returns : result (pattern) lpeg.Cmt \u2693\ufe0e Create a match-time capture. Unlike all other captures, this one is evaluated immediately when a match occurs (even if it is part of a larger pattern that fails later). It forces the immediate evaluation of all its nested captures and then calls function f. The given function gets as arguments the entire subject, the current position (after the match of pattern p), plus any capture values produced by p. The first value returned by f defines how the match happens. If the call returns a number, the match succeeds and the returned number becomes the new current position. (Assuming a subject s and current position i, the returned number must be in the range [i, len(s) + 1].) If the call returns true, the match succeeds without consuming any input. (So, to return true is equivalent to return i.) If the call returns false, nil, or no value, the match fails. Any extra values returned by f become the values produced by the capture. local result = lpeg . Cmt ( p , f ) Parameters : p (pattern): The pattern to capture with. f (function): The function to call to evaluate matches. Returns : result (pattern) lpeg.Cp \u2693\ufe0e Create a position capture. It matches the empty string and captures the position in the subject where the match occurs. The captured value is a number. local result = lpeg . Cp () Returns : result (pattern) lpeg.Cs \u2693\ufe0e Create a substitution capture, which captures the substring of the subject that matches pattern p, with substitutions. For any capture inside p with a value, the substring that matched the capture is replaced by the capture value (which should be a string). The final captured value is the string resulting from all replacements. local result = lpeg . Cs ( p ) Parameters : p (pattern): The pattern to capture with. Returns : result (pattern) lpeg.Ct \u2693\ufe0e Create a table capture. This capture returns a table with all values from all anonymous captures made by pattern p inside this table in successive integer keys, starting at 1. Moreover, for each named capture group created by p, the first value of the group is put into the table with the group name as its key. The captured value is only the table. local result = lpeg . Ct ( p ) Parameters : p (pattern): The pattern to capture with. Returns : result (pattern) lpeg.locale \u2693\ufe0e Return a table with patterns for matching some character classes according to the current locale. The table has fields named alnum, alpha, cntrl, digit, graph, lower, print, punct, space, upper, and xdigit, each one containing a correspondent pattern. Each pattern matches any single character that belongs to its class. If called with an argument table, then it creates those fields inside the given table and returns that table. local result = lpeg . locale ( t ) Parameters : t (table): Optional . The table to update. Returns : result (table) lpeg.match \u2693\ufe0e Attempt to match the given pattern against the subject string. If the match succeeds, return the index in the subject of the first character after the match, or the captured values (if the pattern captured any value). An optional numeric argument init makes the match start at that position in the subject string. As usual in Lua libraries, a negative value counts from the end. Unlike typical pattern-matching functions, match works only in anchored mode; that is, it tries to match the pattern with a prefix of the given subject string (at position init), not with an arbitrary substring of the subject. So, if we want to find a pattern anywhere in a string, we must either write a loop in Lua or write a pattern that matches anywhere. This second approach is easy and quite efficient; see examples in the full documentation for details. local result = lpeg . match ( p , subject , init ) Parameters : p (pattern): The pattern to match. subject (string): The string to match against. init (number): Optional . Start the match at this position in subject. Returns : result (values) Example: Simple Match local lpeg = require ( \"lpeg\" ) local function onLoaded ( e ) -- matches a word followed by end-of-string p = lpeg . R ( \"az\" ) ^ 1 * - 1 mwse . log ( p : match ( \"hello\" )) --> 6 mwse . log ( lpeg . match ( p , \"hello\" )) --> 6 mwse . log ( p : match ( \"1 hello\" )) --> nil end event . register ( \"loaded\" , onLoaded ) lpeg.P \u2693\ufe0e Converts the given value into a proper lpeg pattern. If the argument is a pattern, it is returned unmodified. If the argument is a string, it is translated to a pattern that matches the string literally. If the argument is a non-negative number n, the result is a pattern that matches exactly n characters. If the argument is a negative number -n, the result is a pattern that succeeds only if the input string has less than n characters left: lpeg.P(-n) is equivalent to -lpeg.P(n). See the unary minus operation in the full documentation for details. If the argument is a boolean, the result is a pattern that always succeeds or always fails (according to the boolean value), without consuming any input. If the argument is a table, it is interpreted as a grammar. See Grammars in the full documentation for details. If the argument is a function, returns a pattern equivalent to a match-time capture over the empty string. local result = lpeg . P ( value ) Parameters : value (multiple): The value to convert to a pattern. Returns : result (pattern) lpeg.R \u2693\ufe0e Returns a pattern that matches any single character belonging to one of the given ranges. Each range is a string xy of length 2, representing all characters with code between the codes of x and y (both inclusive). As an example, the pattern lpeg.R(\"09\") matches any digit, and lpeg.R(\"az\", \"AZ\") matches any ASCII letter. local result = lpeg . R ( p ) Parameters : p (pattern): The input pattern. Returns : result (pattern) Example: Simple Match local lpeg = require ( \"lpeg\" ) local function onLoaded ( e ) -- matches a word followed by end-of-string p = lpeg . R ( \"az\" ) ^ 1 * - 1 mwse . log ( p : match ( \"hello\" )) --> 6 mwse . log ( lpeg . match ( p , \"hello\" )) --> 6 mwse . log ( p : match ( \"1 hello\" )) --> nil end event . register ( \"loaded\" , onLoaded ) lpeg.S \u2693\ufe0e Returns a pattern that matches any single character that appears in the given string. As an example, the pattern lpeg.S(\"+-*/\") matches any arithmetic operator. Note that, if s is a character (that is, a string of length 1), then lpeg.P(s) is equivalent to lpeg.S(s) which is equivalent to lpeg.R(s..s). Note also that both lpeg.S(\"\") and lpeg.R() are patterns that always fail. local result = lpeg . S ( s ) Parameters : s (string): The input string. Returns : result (pattern) lpeg.setmaxstack \u2693\ufe0e Set a limit for the size of the backtrack stack used by LPeg to track calls and choices. The default limit is 400. Most well-written patterns need little backtrack levels and therefore you seldom need to change this limit; before changing it you should try to rewrite your pattern to avoid the need for extra space. Nevertheless, a few useful patterns may overflow. Also, with recursive grammars, subjects with deep recursion may also need larger limits. lpeg . setmaxstack ( max ) Parameters : max (number): The new stack size. lpeg.type \u2693\ufe0e If the given value is a pattern, return the string \"pattern\". Otherwise return nil. local result = lpeg . type ( value ) Parameters : value (value): The item to evaulate. Returns : result (string) lpeg.V \u2693\ufe0e Create a non-terminal (a variable) for a grammar. The created non-terminal refers to the rule indexed by v in the enclosing grammar. See Grammars in the full documentation for details. local result = lpeg . V ( v ) Parameters : v (string): The index of the desired rule. Returns : result (pattern) lpeg.version \u2693\ufe0e Return a string with the running version of lpeg. local result = lpeg . version () Returns : result (string)","title":"lpeg"},{"location":"apis/lpeg/#lpeg","text":"Provides pattern-matching based on Parsing Expression Grammars (PEGs). The documentation provided here is only meant to be a quick reference. Please review the complete documentation (with in-depth discussion and many examples) at: http://www.inf.puc-rio.br/~roberto/lpeg/ There is also a copy in the MWSE repo at: deps/lpeg/lpeg.html","title":"lpeg"},{"location":"apis/lpeg/#functions","text":"","title":"Functions"},{"location":"apis/lpeg/#lpegb","text":"Returns a pattern that matches only if the input string at the current position is preceded by pattern p. Pattern p must match only strings with some fixed length, and it cannot contain captures. Like the and predicate, this pattern never consumes any input, independently of success or failure. local result = lpeg . B ( p ) Parameters : p (pattern): The input pattern. Returns : result (pattern)","title":"lpeg.B"},{"location":"apis/lpeg/#lpegc","text":"Create a simple capture pattern, which captures the substring of the subject that matches pattern p. The captured value is a string. If p has other captures, their values are returned after this one. local result = lpeg . C ( p ) Parameters : p (pattern): The pattern to capture against. Returns : result (pattern)","title":"lpeg.C"},{"location":"apis/lpeg/#lpegcarg","text":"Create an argument capture. This pattern matches the empty string and produces the value given as the nth extra argument given in the call to lpeg.match. local result = lpeg . Carg ( n ) Parameters : n (number): The argument to produce. Returns : result (pattern)","title":"lpeg.Carg"},{"location":"apis/lpeg/#lpegcb","text":"Create a back capture. This pattern matches the empty string and produces the values produced by the most recent group capture named name (where name can be any Lua value). Most recent means the last complete outermost group capture with the given name. A Complete capture means that the entire pattern corresponding to the capture has matched. An Outermost capture means that the capture is not inside another complete capture. In the same way that LPeg does not specify when it evaluates captures, it does not specify whether it reuses values previously produced by the group or re-evaluates them. local result = lpeg . Cb ( name ) Parameters : name (value): The group capture to produce. Returns : result (pattern)","title":"lpeg.Cb"},{"location":"apis/lpeg/#lpegcc","text":"Create a constant capture. This pattern matches the empty string and produces all given values as its captured values. local result = lpeg . Cc ( unknown ) Parameters : unnamed (values): Optional . The values to produce. Returns : result (pattern)","title":"lpeg.Cc"},{"location":"apis/lpeg/#lpegcf","text":"Create a fold capture. If pattern p produces a list of captures C1 C2 ... Cn, this capture will produce the value function f(...f(f(C1, C2), C3)..., Cn), that is, it will fold (or accumulate, or reduce) the captures from p using function f. This capture assumes that p should produce at least one capture with at least one value (of any type), which becomes the initial value of an accumulator. (If you need a specific initial value, you may prefix a constant capture to p.) For each subsequent capture, LPeg calls f with this accumulator as the first argument and all values produced by the capture as extra arguments; the first result from this call becomes the new value for the accumulator. The final value of the accumulator becomes the captured value. local result = lpeg . Cf ( p , f ) Parameters : p (pattern): The pattern to fold with f. f (function): The function to use to fold p. Returns : result (pattern)","title":"lpeg.Cf"},{"location":"apis/lpeg/#lpegcg","text":"Create a group capture. It groups all values returned by pattern p into a single capture. The group may be anonymous (if no name is given) or named with the given name (which can be any non-nil Lua value). An anonymous group serves to join values from several captures into a single capture. A named group has a different behavior. In most situations, a named group returns no values at all. Its values are only relevant for a following back capture or when used inside a table capture. local result = lpeg . Cg ( p , name ) Parameters : p (pattern): The pattern to capture with. name (value): Optional . The name of the group. Returns : result (pattern)","title":"lpeg.Cg"},{"location":"apis/lpeg/#lpegcmt","text":"Create a match-time capture. Unlike all other captures, this one is evaluated immediately when a match occurs (even if it is part of a larger pattern that fails later). It forces the immediate evaluation of all its nested captures and then calls function f. The given function gets as arguments the entire subject, the current position (after the match of pattern p), plus any capture values produced by p. The first value returned by f defines how the match happens. If the call returns a number, the match succeeds and the returned number becomes the new current position. (Assuming a subject s and current position i, the returned number must be in the range [i, len(s) + 1].) If the call returns true, the match succeeds without consuming any input. (So, to return true is equivalent to return i.) If the call returns false, nil, or no value, the match fails. Any extra values returned by f become the values produced by the capture. local result = lpeg . Cmt ( p , f ) Parameters : p (pattern): The pattern to capture with. f (function): The function to call to evaluate matches. Returns : result (pattern)","title":"lpeg.Cmt"},{"location":"apis/lpeg/#lpegcp","text":"Create a position capture. It matches the empty string and captures the position in the subject where the match occurs. The captured value is a number. local result = lpeg . Cp () Returns : result (pattern)","title":"lpeg.Cp"},{"location":"apis/lpeg/#lpegcs","text":"Create a substitution capture, which captures the substring of the subject that matches pattern p, with substitutions. For any capture inside p with a value, the substring that matched the capture is replaced by the capture value (which should be a string). The final captured value is the string resulting from all replacements. local result = lpeg . Cs ( p ) Parameters : p (pattern): The pattern to capture with. Returns : result (pattern)","title":"lpeg.Cs"},{"location":"apis/lpeg/#lpegct","text":"Create a table capture. This capture returns a table with all values from all anonymous captures made by pattern p inside this table in successive integer keys, starting at 1. Moreover, for each named capture group created by p, the first value of the group is put into the table with the group name as its key. The captured value is only the table. local result = lpeg . Ct ( p ) Parameters : p (pattern): The pattern to capture with. Returns : result (pattern)","title":"lpeg.Ct"},{"location":"apis/lpeg/#lpeglocale","text":"Return a table with patterns for matching some character classes according to the current locale. The table has fields named alnum, alpha, cntrl, digit, graph, lower, print, punct, space, upper, and xdigit, each one containing a correspondent pattern. Each pattern matches any single character that belongs to its class. If called with an argument table, then it creates those fields inside the given table and returns that table. local result = lpeg . locale ( t ) Parameters : t (table): Optional . The table to update. Returns : result (table)","title":"lpeg.locale"},{"location":"apis/lpeg/#lpegmatch","text":"Attempt to match the given pattern against the subject string. If the match succeeds, return the index in the subject of the first character after the match, or the captured values (if the pattern captured any value). An optional numeric argument init makes the match start at that position in the subject string. As usual in Lua libraries, a negative value counts from the end. Unlike typical pattern-matching functions, match works only in anchored mode; that is, it tries to match the pattern with a prefix of the given subject string (at position init), not with an arbitrary substring of the subject. So, if we want to find a pattern anywhere in a string, we must either write a loop in Lua or write a pattern that matches anywhere. This second approach is easy and quite efficient; see examples in the full documentation for details. local result = lpeg . match ( p , subject , init ) Parameters : p (pattern): The pattern to match. subject (string): The string to match against. init (number): Optional . Start the match at this position in subject. Returns : result (values) Example: Simple Match local lpeg = require ( \"lpeg\" ) local function onLoaded ( e ) -- matches a word followed by end-of-string p = lpeg . R ( \"az\" ) ^ 1 * - 1 mwse . log ( p : match ( \"hello\" )) --> 6 mwse . log ( lpeg . match ( p , \"hello\" )) --> 6 mwse . log ( p : match ( \"1 hello\" )) --> nil end event . register ( \"loaded\" , onLoaded )","title":"lpeg.match"},{"location":"apis/lpeg/#lpegp","text":"Converts the given value into a proper lpeg pattern. If the argument is a pattern, it is returned unmodified. If the argument is a string, it is translated to a pattern that matches the string literally. If the argument is a non-negative number n, the result is a pattern that matches exactly n characters. If the argument is a negative number -n, the result is a pattern that succeeds only if the input string has less than n characters left: lpeg.P(-n) is equivalent to -lpeg.P(n). See the unary minus operation in the full documentation for details. If the argument is a boolean, the result is a pattern that always succeeds or always fails (according to the boolean value), without consuming any input. If the argument is a table, it is interpreted as a grammar. See Grammars in the full documentation for details. If the argument is a function, returns a pattern equivalent to a match-time capture over the empty string. local result = lpeg . P ( value ) Parameters : value (multiple): The value to convert to a pattern. Returns : result (pattern)","title":"lpeg.P"},{"location":"apis/lpeg/#lpegr","text":"Returns a pattern that matches any single character belonging to one of the given ranges. Each range is a string xy of length 2, representing all characters with code between the codes of x and y (both inclusive). As an example, the pattern lpeg.R(\"09\") matches any digit, and lpeg.R(\"az\", \"AZ\") matches any ASCII letter. local result = lpeg . R ( p ) Parameters : p (pattern): The input pattern. Returns : result (pattern) Example: Simple Match local lpeg = require ( \"lpeg\" ) local function onLoaded ( e ) -- matches a word followed by end-of-string p = lpeg . R ( \"az\" ) ^ 1 * - 1 mwse . log ( p : match ( \"hello\" )) --> 6 mwse . log ( lpeg . match ( p , \"hello\" )) --> 6 mwse . log ( p : match ( \"1 hello\" )) --> nil end event . register ( \"loaded\" , onLoaded )","title":"lpeg.R"},{"location":"apis/lpeg/#lpegs","text":"Returns a pattern that matches any single character that appears in the given string. As an example, the pattern lpeg.S(\"+-*/\") matches any arithmetic operator. Note that, if s is a character (that is, a string of length 1), then lpeg.P(s) is equivalent to lpeg.S(s) which is equivalent to lpeg.R(s..s). Note also that both lpeg.S(\"\") and lpeg.R() are patterns that always fail. local result = lpeg . S ( s ) Parameters : s (string): The input string. Returns : result (pattern)","title":"lpeg.S"},{"location":"apis/lpeg/#lpegsetmaxstack","text":"Set a limit for the size of the backtrack stack used by LPeg to track calls and choices. The default limit is 400. Most well-written patterns need little backtrack levels and therefore you seldom need to change this limit; before changing it you should try to rewrite your pattern to avoid the need for extra space. Nevertheless, a few useful patterns may overflow. Also, with recursive grammars, subjects with deep recursion may also need larger limits. lpeg . setmaxstack ( max ) Parameters : max (number): The new stack size.","title":"lpeg.setmaxstack"},{"location":"apis/lpeg/#lpegtype","text":"If the given value is a pattern, return the string \"pattern\". Otherwise return nil. local result = lpeg . type ( value ) Parameters : value (value): The item to evaulate. Returns : result (string)","title":"lpeg.type"},{"location":"apis/lpeg/#lpegv","text":"Create a non-terminal (a variable) for a grammar. The created non-terminal refers to the rule indexed by v in the enclosing grammar. See Grammars in the full documentation for details. local result = lpeg . V ( v ) Parameters : v (string): The index of the desired rule. Returns : result (pattern)","title":"lpeg.V"},{"location":"apis/lpeg/#lpegversion","text":"Return a string with the running version of lpeg. local result = lpeg . version () Returns : result (string)","title":"lpeg.version"},{"location":"apis/math/","text":"math \u2693\ufe0e This library is an interface to the standard C math library. This library has been further extended by MWSE. The functions implemented by MWSE are listed here. It provides all its functions inside the table math. Properties \u2693\ufe0e math.epsilon \u2693\ufe0e The machine epsilon available for double-precision numbers. This is the difference between 1.0 and the next representable value using lua numbers. Returns : result (number) math.fepsilon \u2693\ufe0e The machine epsilon available for single-precision numbers. This is the difference between 1.0 and the next representable value for many Morrowind structures. Returns : result (number) Functions \u2693\ufe0e math.clamp \u2693\ufe0e Returns a value, limited by upper and lower bounds. local result = math . clamp ( value , min , max ) Parameters : value (number) min (number) max (number) Returns : result (number) math.isclose \u2693\ufe0e This function compares a and b and returns true if they are close together. This can be useful when comparing floating-point numbers with some degree of tolerance. local result = math . isclose ( a , b , absoluteTolerance , relativeTolerance ) Parameters : a (number): First value. b (number): Second value. absoluteTolerance (number): Default : math.epsilon . The absolute difference allowed between the two numbers. A value of 0.01 will only allow the values to differ by 0.01. relativeTolerance (number): Default : 1e-09 . The relative difference allowed between the two numbers. A value of 0.01 will only allow the values to differ by 1%. Returns : result (number) math.lerp \u2693\ufe0e Performs linear interpolation between values v0 and v1. Returns a value that is t percent between them. local result = math . lerp ( v0 , v1 , t ) Parameters : v0 (number): First value. v1 (number): Second value. t (number): The decimal percentage used to calculate a point between v0 and v1. Returns : result (number) math.remap \u2693\ufe0e Returns a value, scaled from expected values [lowIn, highIn] to [lowOut, highOut]. For example, a value of 7 remapped from [0,10] to [0,100] would be 70. local result = math . remap ( value , lowIn , highIn , lowOut , highOut ) Parameters : value (number) lowIn (number) highIn (number) lowOut (number) highOut (number) Returns : result (number) math.round \u2693\ufe0e Rounds a number to a given count of digits. local result = math . round ( value , digits ) Parameters : value (number) digits (number) Returns : result (number)","title":"math"},{"location":"apis/math/#math","text":"This library is an interface to the standard C math library. This library has been further extended by MWSE. The functions implemented by MWSE are listed here. It provides all its functions inside the table math.","title":"math"},{"location":"apis/math/#properties","text":"","title":"Properties"},{"location":"apis/math/#mathepsilon","text":"The machine epsilon available for double-precision numbers. This is the difference between 1.0 and the next representable value using lua numbers. Returns : result (number)","title":"math.epsilon"},{"location":"apis/math/#mathfepsilon","text":"The machine epsilon available for single-precision numbers. This is the difference between 1.0 and the next representable value for many Morrowind structures. Returns : result (number)","title":"math.fepsilon"},{"location":"apis/math/#functions","text":"","title":"Functions"},{"location":"apis/math/#mathclamp","text":"Returns a value, limited by upper and lower bounds. local result = math . clamp ( value , min , max ) Parameters : value (number) min (number) max (number) Returns : result (number)","title":"math.clamp"},{"location":"apis/math/#mathisclose","text":"This function compares a and b and returns true if they are close together. This can be useful when comparing floating-point numbers with some degree of tolerance. local result = math . isclose ( a , b , absoluteTolerance , relativeTolerance ) Parameters : a (number): First value. b (number): Second value. absoluteTolerance (number): Default : math.epsilon . The absolute difference allowed between the two numbers. A value of 0.01 will only allow the values to differ by 0.01. relativeTolerance (number): Default : 1e-09 . The relative difference allowed between the two numbers. A value of 0.01 will only allow the values to differ by 1%. Returns : result (number)","title":"math.isclose"},{"location":"apis/math/#mathlerp","text":"Performs linear interpolation between values v0 and v1. Returns a value that is t percent between them. local result = math . lerp ( v0 , v1 , t ) Parameters : v0 (number): First value. v1 (number): Second value. t (number): The decimal percentage used to calculate a point between v0 and v1. Returns : result (number)","title":"math.lerp"},{"location":"apis/math/#mathremap","text":"Returns a value, scaled from expected values [lowIn, highIn] to [lowOut, highOut]. For example, a value of 7 remapped from [0,10] to [0,100] would be 70. local result = math . remap ( value , lowIn , highIn , lowOut , highOut ) Parameters : value (number) lowIn (number) highIn (number) lowOut (number) highOut (number) Returns : result (number)","title":"math.remap"},{"location":"apis/math/#mathround","text":"Rounds a number to a given count of digits. local result = math . round ( value , digits ) Parameters : value (number) digits (number) Returns : result (number)","title":"math.round"},{"location":"apis/mge/","text":"mge \u2693\ufe0e The mge library allows MGE XE mwscript functions to be called. This is not always ideal, and this library is deprecated. Functions \u2693\ufe0e mge.clearHUD \u2693\ufe0e Clears elements from the HUD. Wrapper for MGEWipeHUDElements. mge . clearHUD () mge.disableCameraShake \u2693\ufe0e Disables MGE XE's camera shake effect. Wrapper for mwscript's MGEDisableCameraShake. mge . disableCameraShake () mge.disableHUD \u2693\ufe0e Disables a HUD element. If a HUD ID is provided, this is a warpper for MGEDisableHUD, otherwise it is a wrapper for MGENIDDisableHUD. mge . disableHUD ( hud ) Parameters : hud (string): Optional . mge.disableShader \u2693\ufe0e Disables a shader. Wrapper for mwscript's MGEDisableShader. mge . disableShader ( shader ) Parameters : shader (string) mge.disableZoom \u2693\ufe0e Disables the MGE XE zoom effect. Wrapper for MGEDisableZoom. mge . disableZoom () mge.enableCameraShake \u2693\ufe0e Enables MGE XE's camera shake effect. Wrapper for mwscript's MGEEnableCameraShake. mge . enableCameraShake ( magnitude , acceleration ) Parameters : magnitude (number): Optional . acceleration (number): Optional . mge.enabled \u2693\ufe0e Determines if the MGE XE interface is enabled. local enabled = mge . enabled () Returns : enabled (boolean) mge.enableHUD \u2693\ufe0e Enables a HUD element. If a HUD ID is provided, this is a warpper for MGEEnableHUD, otherwise it is a wrapper for MGENIDEnableHUD. mge . enableHUD ( hud ) Parameters : hud (string): Optional . mge.enableShader \u2693\ufe0e Enables a shader. Wrapper for mwscript's MGEEnableShader. mge . enableShader ( shader ) Parameters : shader (string) mge.enableZoom \u2693\ufe0e Enables the MGE XE zoom effect. Wrapper for MGEEnableZoom. mge . enableZoom () mge.freeHUD \u2693\ufe0e Frees a HUD element. If a HUD ID is provided, this is a warpper for MGEFreeHUD, otherwise it is a wrapper for MGENIDFreeHUD. mge . freeHUD ( hud ) Parameters : hud (string): Optional . mge.fullscreenHUD \u2693\ufe0e Makes a HUD element fullscreen. If a HUD ID is provided, this is a warpper for MGEFullscreenHUD, otherwise it is a wrapper for MGENIDFullscreenHUD. mge . fullscreenHUD ( hud ) Parameters : hud (string): Optional . mge.getScreenHeight \u2693\ufe0e Gets the window's vertical resolution. Wrapper for mwscript's MGEGetHeight. local result = mge . getScreenHeight () Returns : result (number) mge.getScreenRotation \u2693\ufe0e Wrapper for MGEGetScreenRotation. local result = mge . getScreenRotation () Returns : result (number) mge.getScreenWidth \u2693\ufe0e Gets the window's horizontal resolution. Wrapper for mwscript's MGEGetWidth. local result = mge . getScreenWidth () Returns : result (number) mge.getUIScale \u2693\ufe0e Returns the UI scaling used. local result = mge . getUIScale () Returns : result (number) mge.getVersion \u2693\ufe0e Gets the MGE version. Wrapper for MGEGetVersion. local result = mge . getVersion () Returns : result (number) mge.getZoom \u2693\ufe0e Wrapper for MGEGetZoom. local result = mge . getZoom () Returns : result (number) mge.loadHUD \u2693\ufe0e Loads a HUD element. This is a warpper for MGELoadHUD. mge . loadHUD ({ hud = ..., texture = ..., enable = ... }) Parameters : params (table) hud (string) texture (string) enable (boolean): Optional . mge.log \u2693\ufe0e This function writes information to the mgeXE.log file in the user's installation directory. Wrapper for mwscript's MGELog function. mge . log ( message ) Parameters : message (string) mge.modScreenRotation \u2693\ufe0e Wrapper for MGERotateScreenBy. mge . modScreenRotation ( rotation ) Parameters : rotation (number) mge.positionHUD \u2693\ufe0e Positions a HUD element. If a HUD ID is provided, this is a warpper for MGEPositionHUD, otherwise it is a wrapper for MGENIDPositionHUD. mge . positionHUD ( hud , x , y ) Parameters : hud (string): Optional . x (number) y (number) mge.scaleHUD \u2693\ufe0e Scales a HUD element. If a HUD ID is provided, this is a warpper for MGEScaleHUD, otherwise it is a wrapper for MGENIDScaleHUD. mge . scaleHUD ( hud , x , y ) Parameters : hud (string): Optional . x (number) y (number) mge.selectHUD \u2693\ufe0e Selects a HUD element, to assume for future HUD calls. mge . selectHUD ( hud ) Parameters : hud (string) mge.setCameraShakeAcceleration \u2693\ufe0e Wrapper for MGECameraShakeZoom. mge . setCameraShakeAcceleration ( acceleration ) Parameters : acceleration (number) mge.setCameraShakeMagnitude \u2693\ufe0e Wrapper for MGESetCameraShakeMagnitude. mge . setCameraShakeMagnitude ( magnitude ) Parameters : magnitude (number) mge.setHUDEffect \u2693\ufe0e Sets the effect for a HUD element. If a HUD ID is provided, this is a warpper for MGEChangeHUDEffect, otherwise it is a wrapper for MGENIDChangeHUDEffect. mge . setHUDEffect ( hud , effect ) Parameters : hud (string): Optional . effect (string) mge.setHUDEffectFloat \u2693\ufe0e Sets the effect float variable for a HUD element. This is a wrapper for MGENIDSetHUDEffectFloat. mge . setHUDEffectFloat ( hud , variable , value ) Parameters : hud (string): Optional . variable (string) value (number) mge.setHUDEffectLong \u2693\ufe0e Sets the effect long variable for a HUD element. This is a wrapper for MGENIDSetHUDEffectLong. mge . setHUDEffectLong ( hud , variable , value ) Parameters : hud (string): Optional . variable (string) value (number) mge.setHUDEffectVector4 \u2693\ufe0e Sets the effect vector variable for a HUD element. This is a wrapper for MGENIDSetHUDEffectVec. mge . setHUDEffectVector4 ( hud , variable , value ) Parameters : hud (string): Optional . variable (string) value (table): A table of 4 values. mge.setHUDTexture \u2693\ufe0e Sets the texture for a given HUD element. If a HUD ID is provided, this is a warpper for MGEChangeHUDTexture, otherwise it is a wrapper for MGENIDChangeHUDTexture. mge . setHUDTexture ( hud , texture ) Parameters : hud (string) texture (string) mge.setScreenRotation \u2693\ufe0e Wrapper for MGERotateScreen. mge . setScreenRotation ( rotation ) Parameters : rotation (number) mge.setShaderFloat \u2693\ufe0e Sets a shader's float variable. Wrapper for mwscript's MGEShaderSetFloat. mge . setShaderFloat ( shader , variable , value ) Parameters : shader (string) variable (string) value (number) mge.setShaderLong \u2693\ufe0e Sets a shader's long variable. Wrapper for mwscript's MGEShaderSetLong. mge . setShaderLong ( shader , variable , value ) Parameters : shader (string) variable (string) value (number) mge.setShaderVector4 \u2693\ufe0e Sets a shader's vector variable. Wrapper for mwscript's MGEShaderSetVector. mge . setShaderVector4 ( shader , variable , value ) Parameters : shader (string) variable (string) value (table): A table of 4 values. mge.setZoom \u2693\ufe0e Wrapper for MGEZoom, or MGESetZoom if set to animate. mge . setZoom ( amount , animate ) Parameters : amount (number) animate (boolean): Optional . mge.startScreenRotation \u2693\ufe0e Enables MGE XE's screen spin effect. Wrapper for mwscript's MGEScreenSpin. mge . startScreenRotation () mge.stopScreenRotation \u2693\ufe0e Disables MGE XE's screen spin effect. Wrapper for mwscript's MGEStopSpinSpin. mge . stopScreenRotation () mge.stopZoom \u2693\ufe0e Wrapper for MGEStopZoom. mge . stopZoom () mge.toggleZoom \u2693\ufe0e Toggles the MGE XE zoom effect. Wrapper for MGEToggleZoom. mge . toggleZoom () mge.unselectHUD \u2693\ufe0e Cancels selection for a HUD element. Wrapper for mwscript's MGECancelWithHUD. mge . unselectHUD ( hud ) Parameters : hud (string) mge.zoomIn \u2693\ufe0e Wrapper for MGEZoomIn, or MGEZoomInBy if an amount is provided. mge . zoomIn ( amount ) Parameters : amount (number): Optional . mge.zoomOut \u2693\ufe0e Wrapper for MGEZoomOut, or MGEZoomOutBy if an amount is provided. mge . zoomOut ( amount ) Parameters : amount (number): Optional .","title":"mge"},{"location":"apis/mge/#mge","text":"The mge library allows MGE XE mwscript functions to be called. This is not always ideal, and this library is deprecated.","title":"mge"},{"location":"apis/mge/#functions","text":"","title":"Functions"},{"location":"apis/mge/#mgeclearhud","text":"Clears elements from the HUD. Wrapper for MGEWipeHUDElements. mge . clearHUD ()","title":"mge.clearHUD"},{"location":"apis/mge/#mgedisablecamerashake","text":"Disables MGE XE's camera shake effect. Wrapper for mwscript's MGEDisableCameraShake. mge . disableCameraShake ()","title":"mge.disableCameraShake"},{"location":"apis/mge/#mgedisablehud","text":"Disables a HUD element. If a HUD ID is provided, this is a warpper for MGEDisableHUD, otherwise it is a wrapper for MGENIDDisableHUD. mge . disableHUD ( hud ) Parameters : hud (string): Optional .","title":"mge.disableHUD"},{"location":"apis/mge/#mgedisableshader","text":"Disables a shader. Wrapper for mwscript's MGEDisableShader. mge . disableShader ( shader ) Parameters : shader (string)","title":"mge.disableShader"},{"location":"apis/mge/#mgedisablezoom","text":"Disables the MGE XE zoom effect. Wrapper for MGEDisableZoom. mge . disableZoom ()","title":"mge.disableZoom"},{"location":"apis/mge/#mgeenablecamerashake","text":"Enables MGE XE's camera shake effect. Wrapper for mwscript's MGEEnableCameraShake. mge . enableCameraShake ( magnitude , acceleration ) Parameters : magnitude (number): Optional . acceleration (number): Optional .","title":"mge.enableCameraShake"},{"location":"apis/mge/#mgeenabled","text":"Determines if the MGE XE interface is enabled. local enabled = mge . enabled () Returns : enabled (boolean)","title":"mge.enabled"},{"location":"apis/mge/#mgeenablehud","text":"Enables a HUD element. If a HUD ID is provided, this is a warpper for MGEEnableHUD, otherwise it is a wrapper for MGENIDEnableHUD. mge . enableHUD ( hud ) Parameters : hud (string): Optional .","title":"mge.enableHUD"},{"location":"apis/mge/#mgeenableshader","text":"Enables a shader. Wrapper for mwscript's MGEEnableShader. mge . enableShader ( shader ) Parameters : shader (string)","title":"mge.enableShader"},{"location":"apis/mge/#mgeenablezoom","text":"Enables the MGE XE zoom effect. Wrapper for MGEEnableZoom. mge . enableZoom ()","title":"mge.enableZoom"},{"location":"apis/mge/#mgefreehud","text":"Frees a HUD element. If a HUD ID is provided, this is a warpper for MGEFreeHUD, otherwise it is a wrapper for MGENIDFreeHUD. mge . freeHUD ( hud ) Parameters : hud (string): Optional .","title":"mge.freeHUD"},{"location":"apis/mge/#mgefullscreenhud","text":"Makes a HUD element fullscreen. If a HUD ID is provided, this is a warpper for MGEFullscreenHUD, otherwise it is a wrapper for MGENIDFullscreenHUD. mge . fullscreenHUD ( hud ) Parameters : hud (string): Optional .","title":"mge.fullscreenHUD"},{"location":"apis/mge/#mgegetscreenheight","text":"Gets the window's vertical resolution. Wrapper for mwscript's MGEGetHeight. local result = mge . getScreenHeight () Returns : result (number)","title":"mge.getScreenHeight"},{"location":"apis/mge/#mgegetscreenrotation","text":"Wrapper for MGEGetScreenRotation. local result = mge . getScreenRotation () Returns : result (number)","title":"mge.getScreenRotation"},{"location":"apis/mge/#mgegetscreenwidth","text":"Gets the window's horizontal resolution. Wrapper for mwscript's MGEGetWidth. local result = mge . getScreenWidth () Returns : result (number)","title":"mge.getScreenWidth"},{"location":"apis/mge/#mgegetuiscale","text":"Returns the UI scaling used. local result = mge . getUIScale () Returns : result (number)","title":"mge.getUIScale"},{"location":"apis/mge/#mgegetversion","text":"Gets the MGE version. Wrapper for MGEGetVersion. local result = mge . getVersion () Returns : result (number)","title":"mge.getVersion"},{"location":"apis/mge/#mgegetzoom","text":"Wrapper for MGEGetZoom. local result = mge . getZoom () Returns : result (number)","title":"mge.getZoom"},{"location":"apis/mge/#mgeloadhud","text":"Loads a HUD element. This is a warpper for MGELoadHUD. mge . loadHUD ({ hud = ..., texture = ..., enable = ... }) Parameters : params (table) hud (string) texture (string) enable (boolean): Optional .","title":"mge.loadHUD"},{"location":"apis/mge/#mgelog","text":"This function writes information to the mgeXE.log file in the user's installation directory. Wrapper for mwscript's MGELog function. mge . log ( message ) Parameters : message (string)","title":"mge.log"},{"location":"apis/mge/#mgemodscreenrotation","text":"Wrapper for MGERotateScreenBy. mge . modScreenRotation ( rotation ) Parameters : rotation (number)","title":"mge.modScreenRotation"},{"location":"apis/mge/#mgepositionhud","text":"Positions a HUD element. If a HUD ID is provided, this is a warpper for MGEPositionHUD, otherwise it is a wrapper for MGENIDPositionHUD. mge . positionHUD ( hud , x , y ) Parameters : hud (string): Optional . x (number) y (number)","title":"mge.positionHUD"},{"location":"apis/mge/#mgescalehud","text":"Scales a HUD element. If a HUD ID is provided, this is a warpper for MGEScaleHUD, otherwise it is a wrapper for MGENIDScaleHUD. mge . scaleHUD ( hud , x , y ) Parameters : hud (string): Optional . x (number) y (number)","title":"mge.scaleHUD"},{"location":"apis/mge/#mgeselecthud","text":"Selects a HUD element, to assume for future HUD calls. mge . selectHUD ( hud ) Parameters : hud (string)","title":"mge.selectHUD"},{"location":"apis/mge/#mgesetcamerashakeacceleration","text":"Wrapper for MGECameraShakeZoom. mge . setCameraShakeAcceleration ( acceleration ) Parameters : acceleration (number)","title":"mge.setCameraShakeAcceleration"},{"location":"apis/mge/#mgesetcamerashakemagnitude","text":"Wrapper for MGESetCameraShakeMagnitude. mge . setCameraShakeMagnitude ( magnitude ) Parameters : magnitude (number)","title":"mge.setCameraShakeMagnitude"},{"location":"apis/mge/#mgesethudeffect","text":"Sets the effect for a HUD element. If a HUD ID is provided, this is a warpper for MGEChangeHUDEffect, otherwise it is a wrapper for MGENIDChangeHUDEffect. mge . setHUDEffect ( hud , effect ) Parameters : hud (string): Optional . effect (string)","title":"mge.setHUDEffect"},{"location":"apis/mge/#mgesethudeffectfloat","text":"Sets the effect float variable for a HUD element. This is a wrapper for MGENIDSetHUDEffectFloat. mge . setHUDEffectFloat ( hud , variable , value ) Parameters : hud (string): Optional . variable (string) value (number)","title":"mge.setHUDEffectFloat"},{"location":"apis/mge/#mgesethudeffectlong","text":"Sets the effect long variable for a HUD element. This is a wrapper for MGENIDSetHUDEffectLong. mge . setHUDEffectLong ( hud , variable , value ) Parameters : hud (string): Optional . variable (string) value (number)","title":"mge.setHUDEffectLong"},{"location":"apis/mge/#mgesethudeffectvector4","text":"Sets the effect vector variable for a HUD element. This is a wrapper for MGENIDSetHUDEffectVec. mge . setHUDEffectVector4 ( hud , variable , value ) Parameters : hud (string): Optional . variable (string) value (table): A table of 4 values.","title":"mge.setHUDEffectVector4"},{"location":"apis/mge/#mgesethudtexture","text":"Sets the texture for a given HUD element. If a HUD ID is provided, this is a warpper for MGEChangeHUDTexture, otherwise it is a wrapper for MGENIDChangeHUDTexture. mge . setHUDTexture ( hud , texture ) Parameters : hud (string) texture (string)","title":"mge.setHUDTexture"},{"location":"apis/mge/#mgesetscreenrotation","text":"Wrapper for MGERotateScreen. mge . setScreenRotation ( rotation ) Parameters : rotation (number)","title":"mge.setScreenRotation"},{"location":"apis/mge/#mgesetshaderfloat","text":"Sets a shader's float variable. Wrapper for mwscript's MGEShaderSetFloat. mge . setShaderFloat ( shader , variable , value ) Parameters : shader (string) variable (string) value (number)","title":"mge.setShaderFloat"},{"location":"apis/mge/#mgesetshaderlong","text":"Sets a shader's long variable. Wrapper for mwscript's MGEShaderSetLong. mge . setShaderLong ( shader , variable , value ) Parameters : shader (string) variable (string) value (number)","title":"mge.setShaderLong"},{"location":"apis/mge/#mgesetshadervector4","text":"Sets a shader's vector variable. Wrapper for mwscript's MGEShaderSetVector. mge . setShaderVector4 ( shader , variable , value ) Parameters : shader (string) variable (string) value (table): A table of 4 values.","title":"mge.setShaderVector4"},{"location":"apis/mge/#mgesetzoom","text":"Wrapper for MGEZoom, or MGESetZoom if set to animate. mge . setZoom ( amount , animate ) Parameters : amount (number) animate (boolean): Optional .","title":"mge.setZoom"},{"location":"apis/mge/#mgestartscreenrotation","text":"Enables MGE XE's screen spin effect. Wrapper for mwscript's MGEScreenSpin. mge . startScreenRotation ()","title":"mge.startScreenRotation"},{"location":"apis/mge/#mgestopscreenrotation","text":"Disables MGE XE's screen spin effect. Wrapper for mwscript's MGEStopSpinSpin. mge . stopScreenRotation ()","title":"mge.stopScreenRotation"},{"location":"apis/mge/#mgestopzoom","text":"Wrapper for MGEStopZoom. mge . stopZoom ()","title":"mge.stopZoom"},{"location":"apis/mge/#mgetogglezoom","text":"Toggles the MGE XE zoom effect. Wrapper for MGEToggleZoom. mge . toggleZoom ()","title":"mge.toggleZoom"},{"location":"apis/mge/#mgeunselecthud","text":"Cancels selection for a HUD element. Wrapper for mwscript's MGECancelWithHUD. mge . unselectHUD ( hud ) Parameters : hud (string)","title":"mge.unselectHUD"},{"location":"apis/mge/#mgezoomin","text":"Wrapper for MGEZoomIn, or MGEZoomInBy if an amount is provided. mge . zoomIn ( amount ) Parameters : amount (number): Optional .","title":"mge.zoomIn"},{"location":"apis/mge/#mgezoomout","text":"Wrapper for MGEZoomOut, or MGEZoomOutBy if an amount is provided. mge . zoomOut ( amount ) Parameters : amount (number): Optional .","title":"mge.zoomOut"},{"location":"apis/mwscript/","text":"mwscript \u2693\ufe0e Warning This API is deprecated. See below for more information about what to use instead. The mwscript library allows vanilla mwscript functions to be called. This is not always ideal, and this library is deprecated. Avoid using it if at all possible. Functions \u2693\ufe0e mwscript.activate \u2693\ufe0e Use tes3reference:activate() or tes3.setAIActivate() instead. Wrapper for the Activate mwscript function. mwscript . activate ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. mwscript.addItem \u2693\ufe0e Use tes3.addItem() , tes3inventory:addItem() , or depending on your needs tes3mobileActor:equip() instead. Wrapper for the AddItem mwscript function. local executed = mwscript . addItem ({ reference = ..., item = ..., count = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to be added. count (number): Default : 1 . The number of items to be added. Returns : executed (boolean) mwscript.addSoulGem \u2693\ufe0e use tes3.addItem() with the soul parameter instead. Wrapper for the AddSoulGem mwscript function. local executed = mwscript . addSoulGem ({ reference = ..., creature = ..., soulgem = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. creature ( tes3creature , string): The creature to be stored in the soul gem. soulgem ( tes3misc , string): The soul gem to store the soul in. Returns : executed (boolean) mwscript.addSpell \u2693\ufe0e Use tes3.addSpell() or tes3spellList:add() instead. Wrapper for the AddSpell mwscript function. local executed = mwscript . addSpell ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. spell ( tes3spell , string) Returns : executed (boolean) mwscript.addToLevCreature \u2693\ufe0e Use tes3leveledCreature:insert() instead. Wrapper for the AddToLevCreature mwscript function. local executed = mwscript . addToLevCreature ({ list = ..., creature = ..., level = ... }) Parameters : params (table) list ( tes3leveledCreature , string): Leveled creature list to add a creature to. creature ( tes3actor , string): Creature to add to the list. level (number): Default : 0 . Minimum level for the creature to spawn. Returns : executed (boolean) mwscript.addToLevItem \u2693\ufe0e Use tes3leveledItem:insert() instead. Wrapper for the AddToLevItem mwscript function. local executed = mwscript . addToLevItem ({ list = ..., item = ..., level = ... }) Parameters : params (table) list ( tes3leveledItem , string): Leveled item list to add a creature to. item ( tes3item , string): Item to add to the list. level (number): Default : 0 . Minimum level for the item to spawn. Returns : executed (boolean) mwscript.addTopic \u2693\ufe0e Wrapper for the AddTopic mwscript function. local executed = mwscript . addTopic ({ topic = ... }) Parameters : params (table) topic ( tes3dialogue , string) Returns : executed (boolean) mwscript.aiTravel \u2693\ufe0e Use tes3.setAITravel() instead. Wrapper for the AITravel mwscript function. local executed = mwscript . aiTravel ({ reference = ..., x = ..., y = ..., z = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. x (number) y (number) z (number) Returns : executed (boolean) mwscript.disable \u2693\ufe0e Use tes3reference:disable() or tes3.setEnabled() instead. Wrapper for the Disable mwscript function. local executed = mwscript . disable ({ reference = ..., modify = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. modify (boolean): Default : true . Set the object as modified. Returns : executed (boolean) mwscript.drop \u2693\ufe0e Use tes3.dropItem() or tes3inventory:dropItem() instead. Wrapper for the Drop mwscript function. local executed = mwscript . drop ({ reference = ..., item = ..., count = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to be dropped. count (number): Default : 1 . The number of items to drop. Returns : executed (boolean) mwscript.enable \u2693\ufe0e Use tes3.setEnabled() or tes3reference:enable() instead. Wrapper for the Enable mwscript function. local executed = mwscript . enable ({ reference = ..., modify = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. modify (boolean): Default : true . Set the object as modified. Returns : executed (boolean) mwscript.equip \u2693\ufe0e Use tes3mobileActor:equip() or tes3mobileActor.combatSession:changeEquipment() instead. Wrapper for the Equip mwscript function. local executed = mwscript . equip ({ reference = ..., item = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to be equipped. Returns : executed (boolean) mwscript.explodeSpell \u2693\ufe0e Use tes3.cast() instead. Wrapper for the ExplodeSpell mwscript function. local executed = mwscript . explodeSpell ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. spell ( tes3spell , string) Returns : executed (boolean) mwscript.getButtonPressed \u2693\ufe0e Use tes3.messageBox() instead. Wrapper for the GetButtonPressed mwscript function. local buttonIndex = mwscript . getButtonPressed () Returns : buttonIndex (number) mwscript.getDetected \u2693\ufe0e Use tes3mobileActor.isPlayerDetected or depending on what you are doing, detectSneak event may be desirable. Wrapper for the GetDetected mwscript function. local result = mwscript . getDetected ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. target ( tes3reference , tes3mobileActor , string): Actor to check detection for. Returns : result (boolean) mwscript.getDisabled \u2693\ufe0e Use object.disabled on any object inheriting from tes3baseObject . Wrapper for the GetDisabled mwscript function. local result = mwscript . getDisabled ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. Returns : result (boolean) mwscript.getDistance \u2693\ufe0e Use tes3reference.position or tes3mobileActor.position to compute the distance or depending on the desired effect, tes3mobileActor.playerDistance . Wrapper for the GetDistance mwscript function. local result = mwscript . getDistance ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. target ( tes3reference , tes3mobileActor , string): Actor to check distance to. Returns : result (boolean) mwscript.getItemCount \u2693\ufe0e Use tes3.getItemCount() instead. Wrapper for the GetItemCount mwscript function. local result = mwscript . getItemCount ({ reference = ..., item = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string) Returns : result (number) mwscript.getPCJumping \u2693\ufe0e Use tes3.mobilePlayer.isJumping instead. Wrapper for the GetPCJumping mwscript function. local result = mwscript . getPCJumping () Returns : result (boolean) mwscript.getPCRunning \u2693\ufe0e Use tes3.mobilePlayer.isRunning instead. Wrapper for the GetPCRunning mwscript function. local result = mwscript . getPCRunning () Returns : result (boolean) mwscript.getPCSneaking \u2693\ufe0e Use tes3.mobilePlayer.isSneaking instead. Wrapper for the GetPCSneaking mwscript function. local result = mwscript . getPCSneaking () Returns : result (boolean) mwscript.getReference \u2693\ufe0e Use tes3globalScript.reference instead. Returns the script target for the currently running Morrowind script, if any. local result = mwscript . getReference () Returns : result ( tes3reference ) mwscript.getScript \u2693\ufe0e Returns the currently running Morrowind script, if any. local result = mwscript . getScript () Returns : result ( tes3script ) mwscript.getSpellEffects \u2693\ufe0e Use tes3.isAffectedBy() or tes3mobileActor:isAffectedByObject() instead. Wrapper for the GetSpellEffects mwscript function. local result = mwscript . getSpellEffects ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. spell ( tes3spell , string) Returns : result (boolean) mwscript.hasItemEquipped \u2693\ufe0e Use tes3actor:hasItemEquipped() or tes3.getEquippedItem() instead. Wrapper for the HasItemEquipped mwscript function. local result = mwscript . hasItemEquipped ({ reference = ..., item = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to check for. Returns : result (boolean) mwscript.placeAtPC \u2693\ufe0e Use tes3.createReference() instead. Wrapper for the PlaceAtPC mwscript function. local lastPlacedReference = mwscript . placeAtPC ({ reference = ..., object = ..., count = ..., distance = ..., direction = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. object ( tes3object , string): The object to place. count (number): Default : 1 . distance (number): Default : 256 . direction (number): Default : 1 . Returns : lastPlacedReference ( tes3reference ) mwscript.playSound \u2693\ufe0e Use tes3.playSound() , tes3sound:play() method, or tes3.playItemPickupSound() instead. Wrapper for the PlaySound mwscript function. local result = mwscript . playSound ({ reference = ..., sound = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. sound ( tes3sound , string) Returns : result (boolean) mwscript.position \u2693\ufe0e Set tes3reference.position or tes3mobileActor.position to desired new position instead, or use tes3.positionCell() . Wrapper for the Position mwscript function. local executed = mwscript . position ({ reference = ..., cell = ..., x = ..., y = ..., z = ..., rotation = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. cell (string) x (number): Default : 0 . y (number): Default : 0 . z (number): Default : 0 . rotation (number): Default : 0 . Returns : executed (boolean) mwscript.positionCell \u2693\ufe0e Use tes3.positionCell() instead. Wrapper for the PositionCell mwscript function. local executed = mwscript . positionCell ({ reference = ..., cell = ..., x = ..., y = ..., z = ..., rotation = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. cell (string) x (number): Default : 0 . y (number): Default : 0 . z (number): Default : 0 . rotation (number): Default : 0 . Returns : executed (boolean) mwscript.removeItem \u2693\ufe0e Use tes3.removeItem() , tes3.removeItemData() or tes3inventory:removeItem() instead. Wrapper for the RemoveItem mwscript function. local executed = mwscript . removeItem ({ reference = ..., item = ..., count = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to be added. count (number): Default : 1 . The number of items to be added. Returns : executed (boolean) mwscript.removeSpell \u2693\ufe0e Use tes3.removeSpell() or tes3spellList:remove() instead. Wrapper for the RemoveSpell mwscript function. local executed = mwscript . removeSpell ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. spell ( tes3spell , string) Returns : executed (boolean) mwscript.scriptRunning \u2693\ufe0e Wrapper for the ScriptRunning mwscript function. local result = mwscript . scriptRunning ({ script = ... }) Parameters : params (table) script ( tes3script , string) Returns : result (boolean) mwscript.setLevel \u2693\ufe0e Use tes3npc.level instead. Wrapper for the SetLevel mwscript function. local executed = mwscript . setLevel ({ reference = ..., level = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. level (number) Returns : executed (boolean) mwscript.startCombat \u2693\ufe0e Use tes3mobileActor:startCombat() instead. Wrapper for the StartCombat mwscript function. local executed = mwscript . startCombat ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. target ( tes3reference , tes3mobileActor , string): Actor to start combat with. Returns : executed (boolean) mwscript.startScript \u2693\ufe0e Use tes3.runLegacyScript() instead. Wrapper for the StartCombat mwscript function. local executed = mwscript . startScript ({ reference = ..., script = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. script ( tes3script , string) Returns : executed (boolean) mwscript.stopCombat \u2693\ufe0e Use tes3mobileActor:stopCombat() instead. Wrapper for the StopCombat mwscript function. local executed = mwscript . stopCombat ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. target ( tes3reference , tes3mobileActor , string): Actor to stop combat with. Returns : executed (boolean) mwscript.stopScript \u2693\ufe0e Wrapper for the StopCombat mwscript function. local executed = mwscript . stopScript ({ reference = ..., script = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. script ( tes3script , string) Returns : executed (boolean) mwscript.stopSound \u2693\ufe0e Use tes3.removeSound() or tes3sound:stop() instead. Wrapper for the StopSound mwscript function. local result = mwscript . stopSound ({ reference = ..., sound = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. sound ( tes3sound , string) Returns : result (boolean) mwscript.wakeUpPC \u2693\ufe0e Use tes3.wakeUp() instead. Wrapper for the WakeUpPC mwscript function. mwscript . wakeUpPC ()","title":"mwscript"},{"location":"apis/mwscript/#mwscript","text":"Warning This API is deprecated. See below for more information about what to use instead. The mwscript library allows vanilla mwscript functions to be called. This is not always ideal, and this library is deprecated. Avoid using it if at all possible.","title":"mwscript"},{"location":"apis/mwscript/#functions","text":"","title":"Functions"},{"location":"apis/mwscript/#mwscriptactivate","text":"Use tes3reference:activate() or tes3.setAIActivate() instead. Wrapper for the Activate mwscript function. mwscript . activate ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference.","title":"mwscript.activate"},{"location":"apis/mwscript/#mwscriptadditem","text":"Use tes3.addItem() , tes3inventory:addItem() , or depending on your needs tes3mobileActor:equip() instead. Wrapper for the AddItem mwscript function. local executed = mwscript . addItem ({ reference = ..., item = ..., count = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to be added. count (number): Default : 1 . The number of items to be added. Returns : executed (boolean)","title":"mwscript.addItem"},{"location":"apis/mwscript/#mwscriptaddsoulgem","text":"use tes3.addItem() with the soul parameter instead. Wrapper for the AddSoulGem mwscript function. local executed = mwscript . addSoulGem ({ reference = ..., creature = ..., soulgem = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. creature ( tes3creature , string): The creature to be stored in the soul gem. soulgem ( tes3misc , string): The soul gem to store the soul in. Returns : executed (boolean)","title":"mwscript.addSoulGem"},{"location":"apis/mwscript/#mwscriptaddspell","text":"Use tes3.addSpell() or tes3spellList:add() instead. Wrapper for the AddSpell mwscript function. local executed = mwscript . addSpell ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. spell ( tes3spell , string) Returns : executed (boolean)","title":"mwscript.addSpell"},{"location":"apis/mwscript/#mwscriptaddtolevcreature","text":"Use tes3leveledCreature:insert() instead. Wrapper for the AddToLevCreature mwscript function. local executed = mwscript . addToLevCreature ({ list = ..., creature = ..., level = ... }) Parameters : params (table) list ( tes3leveledCreature , string): Leveled creature list to add a creature to. creature ( tes3actor , string): Creature to add to the list. level (number): Default : 0 . Minimum level for the creature to spawn. Returns : executed (boolean)","title":"mwscript.addToLevCreature"},{"location":"apis/mwscript/#mwscriptaddtolevitem","text":"Use tes3leveledItem:insert() instead. Wrapper for the AddToLevItem mwscript function. local executed = mwscript . addToLevItem ({ list = ..., item = ..., level = ... }) Parameters : params (table) list ( tes3leveledItem , string): Leveled item list to add a creature to. item ( tes3item , string): Item to add to the list. level (number): Default : 0 . Minimum level for the item to spawn. Returns : executed (boolean)","title":"mwscript.addToLevItem"},{"location":"apis/mwscript/#mwscriptaddtopic","text":"Wrapper for the AddTopic mwscript function. local executed = mwscript . addTopic ({ topic = ... }) Parameters : params (table) topic ( tes3dialogue , string) Returns : executed (boolean)","title":"mwscript.addTopic"},{"location":"apis/mwscript/#mwscriptaitravel","text":"Use tes3.setAITravel() instead. Wrapper for the AITravel mwscript function. local executed = mwscript . aiTravel ({ reference = ..., x = ..., y = ..., z = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. x (number) y (number) z (number) Returns : executed (boolean)","title":"mwscript.aiTravel"},{"location":"apis/mwscript/#mwscriptdisable","text":"Use tes3reference:disable() or tes3.setEnabled() instead. Wrapper for the Disable mwscript function. local executed = mwscript . disable ({ reference = ..., modify = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. modify (boolean): Default : true . Set the object as modified. Returns : executed (boolean)","title":"mwscript.disable"},{"location":"apis/mwscript/#mwscriptdrop","text":"Use tes3.dropItem() or tes3inventory:dropItem() instead. Wrapper for the Drop mwscript function. local executed = mwscript . drop ({ reference = ..., item = ..., count = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to be dropped. count (number): Default : 1 . The number of items to drop. Returns : executed (boolean)","title":"mwscript.drop"},{"location":"apis/mwscript/#mwscriptenable","text":"Use tes3.setEnabled() or tes3reference:enable() instead. Wrapper for the Enable mwscript function. local executed = mwscript . enable ({ reference = ..., modify = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. modify (boolean): Default : true . Set the object as modified. Returns : executed (boolean)","title":"mwscript.enable"},{"location":"apis/mwscript/#mwscriptequip","text":"Use tes3mobileActor:equip() or tes3mobileActor.combatSession:changeEquipment() instead. Wrapper for the Equip mwscript function. local executed = mwscript . equip ({ reference = ..., item = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to be equipped. Returns : executed (boolean)","title":"mwscript.equip"},{"location":"apis/mwscript/#mwscriptexplodespell","text":"Use tes3.cast() instead. Wrapper for the ExplodeSpell mwscript function. local executed = mwscript . explodeSpell ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. spell ( tes3spell , string) Returns : executed (boolean)","title":"mwscript.explodeSpell"},{"location":"apis/mwscript/#mwscriptgetbuttonpressed","text":"Use tes3.messageBox() instead. Wrapper for the GetButtonPressed mwscript function. local buttonIndex = mwscript . getButtonPressed () Returns : buttonIndex (number)","title":"mwscript.getButtonPressed"},{"location":"apis/mwscript/#mwscriptgetdetected","text":"Use tes3mobileActor.isPlayerDetected or depending on what you are doing, detectSneak event may be desirable. Wrapper for the GetDetected mwscript function. local result = mwscript . getDetected ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. target ( tes3reference , tes3mobileActor , string): Actor to check detection for. Returns : result (boolean)","title":"mwscript.getDetected"},{"location":"apis/mwscript/#mwscriptgetdisabled","text":"Use object.disabled on any object inheriting from tes3baseObject . Wrapper for the GetDisabled mwscript function. local result = mwscript . getDisabled ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. Returns : result (boolean)","title":"mwscript.getDisabled"},{"location":"apis/mwscript/#mwscriptgetdistance","text":"Use tes3reference.position or tes3mobileActor.position to compute the distance or depending on the desired effect, tes3mobileActor.playerDistance . Wrapper for the GetDistance mwscript function. local result = mwscript . getDistance ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. target ( tes3reference , tes3mobileActor , string): Actor to check distance to. Returns : result (boolean)","title":"mwscript.getDistance"},{"location":"apis/mwscript/#mwscriptgetitemcount","text":"Use tes3.getItemCount() instead. Wrapper for the GetItemCount mwscript function. local result = mwscript . getItemCount ({ reference = ..., item = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string) Returns : result (number)","title":"mwscript.getItemCount"},{"location":"apis/mwscript/#mwscriptgetpcjumping","text":"Use tes3.mobilePlayer.isJumping instead. Wrapper for the GetPCJumping mwscript function. local result = mwscript . getPCJumping () Returns : result (boolean)","title":"mwscript.getPCJumping"},{"location":"apis/mwscript/#mwscriptgetpcrunning","text":"Use tes3.mobilePlayer.isRunning instead. Wrapper for the GetPCRunning mwscript function. local result = mwscript . getPCRunning () Returns : result (boolean)","title":"mwscript.getPCRunning"},{"location":"apis/mwscript/#mwscriptgetpcsneaking","text":"Use tes3.mobilePlayer.isSneaking instead. Wrapper for the GetPCSneaking mwscript function. local result = mwscript . getPCSneaking () Returns : result (boolean)","title":"mwscript.getPCSneaking"},{"location":"apis/mwscript/#mwscriptgetreference","text":"Use tes3globalScript.reference instead. Returns the script target for the currently running Morrowind script, if any. local result = mwscript . getReference () Returns : result ( tes3reference )","title":"mwscript.getReference"},{"location":"apis/mwscript/#mwscriptgetscript","text":"Returns the currently running Morrowind script, if any. local result = mwscript . getScript () Returns : result ( tes3script )","title":"mwscript.getScript"},{"location":"apis/mwscript/#mwscriptgetspelleffects","text":"Use tes3.isAffectedBy() or tes3mobileActor:isAffectedByObject() instead. Wrapper for the GetSpellEffects mwscript function. local result = mwscript . getSpellEffects ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. spell ( tes3spell , string) Returns : result (boolean)","title":"mwscript.getSpellEffects"},{"location":"apis/mwscript/#mwscripthasitemequipped","text":"Use tes3actor:hasItemEquipped() or tes3.getEquippedItem() instead. Wrapper for the HasItemEquipped mwscript function. local result = mwscript . hasItemEquipped ({ reference = ..., item = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to check for. Returns : result (boolean)","title":"mwscript.hasItemEquipped"},{"location":"apis/mwscript/#mwscriptplaceatpc","text":"Use tes3.createReference() instead. Wrapper for the PlaceAtPC mwscript function. local lastPlacedReference = mwscript . placeAtPC ({ reference = ..., object = ..., count = ..., distance = ..., direction = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. object ( tes3object , string): The object to place. count (number): Default : 1 . distance (number): Default : 256 . direction (number): Default : 1 . Returns : lastPlacedReference ( tes3reference )","title":"mwscript.placeAtPC"},{"location":"apis/mwscript/#mwscriptplaysound","text":"Use tes3.playSound() , tes3sound:play() method, or tes3.playItemPickupSound() instead. Wrapper for the PlaySound mwscript function. local result = mwscript . playSound ({ reference = ..., sound = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. sound ( tes3sound , string) Returns : result (boolean)","title":"mwscript.playSound"},{"location":"apis/mwscript/#mwscriptposition","text":"Set tes3reference.position or tes3mobileActor.position to desired new position instead, or use tes3.positionCell() . Wrapper for the Position mwscript function. local executed = mwscript . position ({ reference = ..., cell = ..., x = ..., y = ..., z = ..., rotation = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. cell (string) x (number): Default : 0 . y (number): Default : 0 . z (number): Default : 0 . rotation (number): Default : 0 . Returns : executed (boolean)","title":"mwscript.position"},{"location":"apis/mwscript/#mwscriptpositioncell","text":"Use tes3.positionCell() instead. Wrapper for the PositionCell mwscript function. local executed = mwscript . positionCell ({ reference = ..., cell = ..., x = ..., y = ..., z = ..., rotation = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. cell (string) x (number): Default : 0 . y (number): Default : 0 . z (number): Default : 0 . rotation (number): Default : 0 . Returns : executed (boolean)","title":"mwscript.positionCell"},{"location":"apis/mwscript/#mwscriptremoveitem","text":"Use tes3.removeItem() , tes3.removeItemData() or tes3inventory:removeItem() instead. Wrapper for the RemoveItem mwscript function. local executed = mwscript . removeItem ({ reference = ..., item = ..., count = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to be added. count (number): Default : 1 . The number of items to be added. Returns : executed (boolean)","title":"mwscript.removeItem"},{"location":"apis/mwscript/#mwscriptremovespell","text":"Use tes3.removeSpell() or tes3spellList:remove() instead. Wrapper for the RemoveSpell mwscript function. local executed = mwscript . removeSpell ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. spell ( tes3spell , string) Returns : executed (boolean)","title":"mwscript.removeSpell"},{"location":"apis/mwscript/#mwscriptscriptrunning","text":"Wrapper for the ScriptRunning mwscript function. local result = mwscript . scriptRunning ({ script = ... }) Parameters : params (table) script ( tes3script , string) Returns : result (boolean)","title":"mwscript.scriptRunning"},{"location":"apis/mwscript/#mwscriptsetlevel","text":"Use tes3npc.level instead. Wrapper for the SetLevel mwscript function. local executed = mwscript . setLevel ({ reference = ..., level = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. level (number) Returns : executed (boolean)","title":"mwscript.setLevel"},{"location":"apis/mwscript/#mwscriptstartcombat","text":"Use tes3mobileActor:startCombat() instead. Wrapper for the StartCombat mwscript function. local executed = mwscript . startCombat ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. target ( tes3reference , tes3mobileActor , string): Actor to start combat with. Returns : executed (boolean)","title":"mwscript.startCombat"},{"location":"apis/mwscript/#mwscriptstartscript","text":"Use tes3.runLegacyScript() instead. Wrapper for the StartCombat mwscript function. local executed = mwscript . startScript ({ reference = ..., script = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. script ( tes3script , string) Returns : executed (boolean)","title":"mwscript.startScript"},{"location":"apis/mwscript/#mwscriptstopcombat","text":"Use tes3mobileActor:stopCombat() instead. Wrapper for the StopCombat mwscript function. local executed = mwscript . stopCombat ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. target ( tes3reference , tes3mobileActor , string): Actor to stop combat with. Returns : executed (boolean)","title":"mwscript.stopCombat"},{"location":"apis/mwscript/#mwscriptstopscript","text":"Wrapper for the StopCombat mwscript function. local executed = mwscript . stopScript ({ reference = ..., script = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. script ( tes3script , string) Returns : executed (boolean)","title":"mwscript.stopScript"},{"location":"apis/mwscript/#mwscriptstopsound","text":"Use tes3.removeSound() or tes3sound:stop() instead. Wrapper for the StopSound mwscript function. local result = mwscript . stopSound ({ reference = ..., sound = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. sound ( tes3sound , string) Returns : result (boolean)","title":"mwscript.stopSound"},{"location":"apis/mwscript/#mwscriptwakeuppc","text":"Use tes3.wakeUp() instead. Wrapper for the WakeUpPC mwscript function. mwscript . wakeUpPC ()","title":"mwscript.wakeUpPC"},{"location":"apis/mwse/","text":"mwse \u2693\ufe0e The mwse library provides methods for interacting with MWSE itself, rather than direct TES3 objects. Properties \u2693\ufe0e mwse.buildDate \u2693\ufe0e A numerical representation of the date that version of MWSE currently being used was built on. Formatted as YYYYMMDD. Returns : result (number) Example: Check if the user has minimal required MWSE build installed. -- Ensure we have the features we need. if ( mwse . buildDate == nil or mwse . buildDate < 20210817 ) then mwse . log ( \"[Example] Build date of %s does not meet minimum build date of 20210817.\" , mwse . buildDate ) return end mwse.gameTimers \u2693\ufe0e The mwseTimerController responsible for game-type timers. Returns : result ( mwseTimerController ) mwse.realTimers \u2693\ufe0e The mwseTimerController responsible for real-type timers. Returns : result ( mwseTimerController ) mwse.simulateTimers \u2693\ufe0e The mwseTimerController responsible for simulate-type timers. Returns : result ( mwseTimerController ) mwse.version \u2693\ufe0e A numerical representation of the release version of MWSE currently being used. Formatted as AAABBBCCC, where A is the major version, BBB is the minor version, and CCC is the patch version. BBB and CCC are forward-padded. It is usually better to use mwse.buildDate instead. Returns : result (number) Functions \u2693\ufe0e mwse.clearScriptOverride \u2693\ufe0e Configures MWSE to no longer execute a lua function instead when a script would run. This undoes the work of mwse.overrideScript . local result = mwse . clearScriptOverride ( scriptId ) Parameters : scriptId (string) Returns : result (boolean) mwse.getVersion \u2693\ufe0e Equivalent to mwse.version. local result = mwse . getVersion () Returns : result (number) mwse.getVirtualMemoryUsage \u2693\ufe0e Returns the amount of memory used, in bytes. local result = mwse . getVirtualMemoryUsage () Returns : result (number) mwse.loadConfig \u2693\ufe0e Loads a config table from Data Files\\MWSE\\config\\{fileName}.json. If the default values table is passed, empty keys in the config will be filled in using its values. Additionally, if no file exists, the function will return the default table. local result = mwse . loadConfig ( fileName , defaults ) Parameters : fileName (string): The non-extensioned name of the config file. defaults (table): Optional . A table of default values. Returns : result (table) mwse.loadTranslations \u2693\ufe0e Loads translations from the i18n folder for a given mod. This is locale-aware, using the result from tes3.getLanguage() . See the mod translations guide for more information. local i18n = mwse . loadTranslations ( mod ) Parameters : mod (string): Name of the folder that your main.lua mod can be found in. Returns : i18n (function): The callable translation results. mwse.log \u2693\ufe0e This function writes information to the mwse.log file in the user's installation directory. The message accepts formatting and additional parameters matching string.format's usage. mwse . log ( message , formatValues ) Parameters : message (string) formatValues (variadic): Optional . mwse.longToString \u2693\ufe0e Converts a TES3 object type (e.g. from tes3.objectType) into an uppercase, 4-character string. local result = mwse . longToString ( type ) Parameters : type (number) Returns : result (string) mwse.overrideScript \u2693\ufe0e Configures MWSE to execute a given function instead when a script would run. local result = mwse . overrideScript ( scriptId , callback ) Parameters : scriptId (string) callback (function) Returns : result (boolean) mwse.saveConfig \u2693\ufe0e Saves a config table to Data Files\\MWSE\\config\\{fileName}.json. local result = mwse . saveConfig ( fileName , object , config ) Parameters : fileName (string) object (unknown) config (table): Optional . Returns : result (table) mwse.stringToLong \u2693\ufe0e Converts an uppercase, 4-character string into a TES3 object type. local result = mwse . stringToLong ( tag ) Parameters : tag (string) Returns : result (number)","title":"mwse"},{"location":"apis/mwse/#mwse","text":"The mwse library provides methods for interacting with MWSE itself, rather than direct TES3 objects.","title":"mwse"},{"location":"apis/mwse/#properties","text":"","title":"Properties"},{"location":"apis/mwse/#mwsebuilddate","text":"A numerical representation of the date that version of MWSE currently being used was built on. Formatted as YYYYMMDD. Returns : result (number) Example: Check if the user has minimal required MWSE build installed. -- Ensure we have the features we need. if ( mwse . buildDate == nil or mwse . buildDate < 20210817 ) then mwse . log ( \"[Example] Build date of %s does not meet minimum build date of 20210817.\" , mwse . buildDate ) return end","title":"mwse.buildDate"},{"location":"apis/mwse/#mwsegametimers","text":"The mwseTimerController responsible for game-type timers. Returns : result ( mwseTimerController )","title":"mwse.gameTimers"},{"location":"apis/mwse/#mwserealtimers","text":"The mwseTimerController responsible for real-type timers. Returns : result ( mwseTimerController )","title":"mwse.realTimers"},{"location":"apis/mwse/#mwsesimulatetimers","text":"The mwseTimerController responsible for simulate-type timers. Returns : result ( mwseTimerController )","title":"mwse.simulateTimers"},{"location":"apis/mwse/#mwseversion","text":"A numerical representation of the release version of MWSE currently being used. Formatted as AAABBBCCC, where A is the major version, BBB is the minor version, and CCC is the patch version. BBB and CCC are forward-padded. It is usually better to use mwse.buildDate instead. Returns : result (number)","title":"mwse.version"},{"location":"apis/mwse/#functions","text":"","title":"Functions"},{"location":"apis/mwse/#mwseclearscriptoverride","text":"Configures MWSE to no longer execute a lua function instead when a script would run. This undoes the work of mwse.overrideScript . local result = mwse . clearScriptOverride ( scriptId ) Parameters : scriptId (string) Returns : result (boolean)","title":"mwse.clearScriptOverride"},{"location":"apis/mwse/#mwsegetversion","text":"Equivalent to mwse.version. local result = mwse . getVersion () Returns : result (number)","title":"mwse.getVersion"},{"location":"apis/mwse/#mwsegetvirtualmemoryusage","text":"Returns the amount of memory used, in bytes. local result = mwse . getVirtualMemoryUsage () Returns : result (number)","title":"mwse.getVirtualMemoryUsage"},{"location":"apis/mwse/#mwseloadconfig","text":"Loads a config table from Data Files\\MWSE\\config\\{fileName}.json. If the default values table is passed, empty keys in the config will be filled in using its values. Additionally, if no file exists, the function will return the default table. local result = mwse . loadConfig ( fileName , defaults ) Parameters : fileName (string): The non-extensioned name of the config file. defaults (table): Optional . A table of default values. Returns : result (table)","title":"mwse.loadConfig"},{"location":"apis/mwse/#mwseloadtranslations","text":"Loads translations from the i18n folder for a given mod. This is locale-aware, using the result from tes3.getLanguage() . See the mod translations guide for more information. local i18n = mwse . loadTranslations ( mod ) Parameters : mod (string): Name of the folder that your main.lua mod can be found in. Returns : i18n (function): The callable translation results.","title":"mwse.loadTranslations"},{"location":"apis/mwse/#mwselog","text":"This function writes information to the mwse.log file in the user's installation directory. The message accepts formatting and additional parameters matching string.format's usage. mwse . log ( message , formatValues ) Parameters : message (string) formatValues (variadic): Optional .","title":"mwse.log"},{"location":"apis/mwse/#mwselongtostring","text":"Converts a TES3 object type (e.g. from tes3.objectType) into an uppercase, 4-character string. local result = mwse . longToString ( type ) Parameters : type (number) Returns : result (string)","title":"mwse.longToString"},{"location":"apis/mwse/#mwseoverridescript","text":"Configures MWSE to execute a given function instead when a script would run. local result = mwse . overrideScript ( scriptId , callback ) Parameters : scriptId (string) callback (function) Returns : result (boolean)","title":"mwse.overrideScript"},{"location":"apis/mwse/#mwsesaveconfig","text":"Saves a config table to Data Files\\MWSE\\config\\{fileName}.json. local result = mwse . saveConfig ( fileName , object , config ) Parameters : fileName (string) object (unknown) config (table): Optional . Returns : result (table)","title":"mwse.saveConfig"},{"location":"apis/mwse/#mwsestringtolong","text":"Converts an uppercase, 4-character string into a TES3 object type. local result = mwse . stringToLong ( tag ) Parameters : tag (string) Returns : result (number)","title":"mwse.stringToLong"},{"location":"apis/mwse.stack/","text":"mwse.stack \u2693\ufe0e The stack library provides functions to interact with the mwse mwscript stack, for dealing with custom mwscript extensions. Functions \u2693\ufe0e mwse.stack.clear \u2693\ufe0e Purges all elements from the stack. mwse . stack . clear () mwse.stack.dump \u2693\ufe0e Prints all values on the stack in hex format to the log file. mwse . stack . dump () mwse.stack.empty \u2693\ufe0e Determines if the stack is empty. local result = mwse . stack . empty () Returns : result (boolean) mwse.stack.popFloat \u2693\ufe0e Pops a value of mwscript type \"float\" off of the stack. local unnamed1 = mwse . stack . popFloat () Returns : unnamed (number): Optional . mwse.stack.popLong \u2693\ufe0e Pops a value of mwscript type \"long\" off of the stack. local unnamed1 = mwse . stack . popLong () Returns : unnamed (number): Optional . mwse.stack.popObject \u2693\ufe0e Pops a value of mwscript type \"long\" off of the stack, and tries to reinterpret as a game object. local unnamed1 = mwse . stack . popObject () Returns : unnamed ( tes3baseObject ): Optional . mwse.stack.popShort \u2693\ufe0e Pops a value of mwscript type \"short\" off of the stack. local unnamed1 = mwse . stack . popShort () Returns : unnamed (number): Optional . mwse.stack.popString \u2693\ufe0e Pops a value of mwscript type \"long\" off of the stack, and tries to reinterpret as a string. local unnamed1 = mwse . stack . popString () Returns : unnamed (string): Optional . mwse.stack.pushFloat \u2693\ufe0e Pushes a value of mwscript type \"float\" onto the stack. local result = mwse . stack . pushFloat ( value ) Parameters : value (number) Returns : result (nil) mwse.stack.pushLong \u2693\ufe0e Pushes a value of mwscript type \"long\" onto the stack. local result = mwse . stack . pushLong ( value ) Parameters : value (number) Returns : result (nil) mwse.stack.pushObject \u2693\ufe0e Pushes a value of mwscript type \"long\" onto the stack, which matches the address of a given game object. local result = mwse . stack . pushObject ( value ) Parameters : value ( tes3baseObject ) Returns : result (nil) mwse.stack.pushShort \u2693\ufe0e Pushes a value of mwscript type \"short\" onto the stack. local result = mwse . stack . pushShort ( value ) Parameters : value (number) Returns : result (nil) mwse.stack.pushString \u2693\ufe0e Adds a string to mwse's string storage, and pushes a value of mwscript type \"long\" onto the stack that represents the string. local result = mwse . stack . pushString ( value ) Parameters : value (string) Returns : result (nil) mwse.stack.size \u2693\ufe0e Returns the number of elements currently on the stack. local result = mwse . stack . size () Returns : result (number)","title":"mwse.stack"},{"location":"apis/mwse.stack/#mwsestack","text":"The stack library provides functions to interact with the mwse mwscript stack, for dealing with custom mwscript extensions.","title":"mwse.stack"},{"location":"apis/mwse.stack/#functions","text":"","title":"Functions"},{"location":"apis/mwse.stack/#mwsestackclear","text":"Purges all elements from the stack. mwse . stack . clear ()","title":"mwse.stack.clear"},{"location":"apis/mwse.stack/#mwsestackdump","text":"Prints all values on the stack in hex format to the log file. mwse . stack . dump ()","title":"mwse.stack.dump"},{"location":"apis/mwse.stack/#mwsestackempty","text":"Determines if the stack is empty. local result = mwse . stack . empty () Returns : result (boolean)","title":"mwse.stack.empty"},{"location":"apis/mwse.stack/#mwsestackpopfloat","text":"Pops a value of mwscript type \"float\" off of the stack. local unnamed1 = mwse . stack . popFloat () Returns : unnamed (number): Optional .","title":"mwse.stack.popFloat"},{"location":"apis/mwse.stack/#mwsestackpoplong","text":"Pops a value of mwscript type \"long\" off of the stack. local unnamed1 = mwse . stack . popLong () Returns : unnamed (number): Optional .","title":"mwse.stack.popLong"},{"location":"apis/mwse.stack/#mwsestackpopobject","text":"Pops a value of mwscript type \"long\" off of the stack, and tries to reinterpret as a game object. local unnamed1 = mwse . stack . popObject () Returns : unnamed ( tes3baseObject ): Optional .","title":"mwse.stack.popObject"},{"location":"apis/mwse.stack/#mwsestackpopshort","text":"Pops a value of mwscript type \"short\" off of the stack. local unnamed1 = mwse . stack . popShort () Returns : unnamed (number): Optional .","title":"mwse.stack.popShort"},{"location":"apis/mwse.stack/#mwsestackpopstring","text":"Pops a value of mwscript type \"long\" off of the stack, and tries to reinterpret as a string. local unnamed1 = mwse . stack . popString () Returns : unnamed (string): Optional .","title":"mwse.stack.popString"},{"location":"apis/mwse.stack/#mwsestackpushfloat","text":"Pushes a value of mwscript type \"float\" onto the stack. local result = mwse . stack . pushFloat ( value ) Parameters : value (number) Returns : result (nil)","title":"mwse.stack.pushFloat"},{"location":"apis/mwse.stack/#mwsestackpushlong","text":"Pushes a value of mwscript type \"long\" onto the stack. local result = mwse . stack . pushLong ( value ) Parameters : value (number) Returns : result (nil)","title":"mwse.stack.pushLong"},{"location":"apis/mwse.stack/#mwsestackpushobject","text":"Pushes a value of mwscript type \"long\" onto the stack, which matches the address of a given game object. local result = mwse . stack . pushObject ( value ) Parameters : value ( tes3baseObject ) Returns : result (nil)","title":"mwse.stack.pushObject"},{"location":"apis/mwse.stack/#mwsestackpushshort","text":"Pushes a value of mwscript type \"short\" onto the stack. local result = mwse . stack . pushShort ( value ) Parameters : value (number) Returns : result (nil)","title":"mwse.stack.pushShort"},{"location":"apis/mwse.stack/#mwsestackpushstring","text":"Adds a string to mwse's string storage, and pushes a value of mwscript type \"long\" onto the stack that represents the string. local result = mwse . stack . pushString ( value ) Parameters : value (string) Returns : result (nil)","title":"mwse.stack.pushString"},{"location":"apis/mwse.stack/#mwsestacksize","text":"Returns the number of elements currently on the stack. local result = mwse . stack . size () Returns : result (number)","title":"mwse.stack.size"},{"location":"apis/mwse.string/","text":"mwse.string \u2693\ufe0e The mwse string library provides functions for interacting with mwscript string storage. Functions \u2693\ufe0e mwse.string.create \u2693\ufe0e Creates a string in storage, and returns the numerical key for it. If the string is already in storage, the previous key will be returned. local result = mwse . string . create ( unknown ) Parameters : unnamed (string) Returns : result (number) mwse.string.get \u2693\ufe0e Returns the numerical key for a given string in storage, or nil if the string isn't in storage. local unnamed1 = mwse . string . get ( unknown ) Parameters : unnamed (string) Returns : unnamed (number): Optional .","title":"mwse.string"},{"location":"apis/mwse.string/#mwsestring","text":"The mwse string library provides functions for interacting with mwscript string storage.","title":"mwse.string"},{"location":"apis/mwse.string/#functions","text":"","title":"Functions"},{"location":"apis/mwse.string/#mwsestringcreate","text":"Creates a string in storage, and returns the numerical key for it. If the string is already in storage, the previous key will be returned. local result = mwse . string . create ( unknown ) Parameters : unnamed (string) Returns : result (number)","title":"mwse.string.create"},{"location":"apis/mwse.string/#mwsestringget","text":"Returns the numerical key for a given string in storage, or nil if the string isn't in storage. local unnamed1 = mwse . string . get ( unknown ) Parameters : unnamed (string) Returns : unnamed (number): Optional .","title":"mwse.string.get"},{"location":"apis/os/","text":"os \u2693\ufe0e Provides various OS-specific functions. Functions \u2693\ufe0e os.clock \u2693\ufe0e Return CPU time since Lua started in seconds. local result = os.clock () Returns : result (number) os.createProcess \u2693\ufe0e Passes command to be executed by an operating system. Unlike os.execute , this will not display a console prompt that interrupts the game and cannot run direct shell commands. local executor = os . createProcess ({ command = ..., async = ... }) Parameters : params (table) command (string): The command to run. async (boolean): Default : true . If set to false, Morrowind will halt execution until the program finishes. Returns : executor ( mwseLuaExecutor ): A handle to the executor. This can be used to check if the program has errored, finished, and to get the program's output. os.execute \u2693\ufe0e Passes command to be executed by an operating system shell. To open a program to run in the background and monitor its output, use os.createProcess . local exitCode = os.execute ( command ) Parameters : command (string): The command to run. Returns : exitCode (number): The exit code of the program. os.getClipboardText \u2693\ufe0e Returns the current clipboard text, if any is available. local result = os . getClipboardText () Returns : result (string, nil) os.openURL \u2693\ufe0e Opens the given url in the default browser. This has an advantage over using os.execute(\"show https://my.url\") in that it does not create a command prompt window. os . openURL ( url ) Parameters : url (string): The URL to open. os.setClipboardText \u2693\ufe0e Sets the current clipboard text. If nil is passed, the clipboard will be cleared instead. If either operation fails, the function returns false. local result = os . setClipboardText ( text ) Parameters : text (string, nil): Optional . The text to put in the clipboard. If nil is provided instead, then the clipboard will be cleared. Returns : result (boolean)","title":"os"},{"location":"apis/os/#os","text":"Provides various OS-specific functions.","title":"os"},{"location":"apis/os/#functions","text":"","title":"Functions"},{"location":"apis/os/#osclock","text":"Return CPU time since Lua started in seconds. local result = os.clock () Returns : result (number)","title":"os.clock"},{"location":"apis/os/#oscreateprocess","text":"Passes command to be executed by an operating system. Unlike os.execute , this will not display a console prompt that interrupts the game and cannot run direct shell commands. local executor = os . createProcess ({ command = ..., async = ... }) Parameters : params (table) command (string): The command to run. async (boolean): Default : true . If set to false, Morrowind will halt execution until the program finishes. Returns : executor ( mwseLuaExecutor ): A handle to the executor. This can be used to check if the program has errored, finished, and to get the program's output.","title":"os.createProcess"},{"location":"apis/os/#osexecute","text":"Passes command to be executed by an operating system shell. To open a program to run in the background and monitor its output, use os.createProcess . local exitCode = os.execute ( command ) Parameters : command (string): The command to run. Returns : exitCode (number): The exit code of the program.","title":"os.execute"},{"location":"apis/os/#osgetclipboardtext","text":"Returns the current clipboard text, if any is available. local result = os . getClipboardText () Returns : result (string, nil)","title":"os.getClipboardText"},{"location":"apis/os/#osopenurl","text":"Opens the given url in the default browser. This has an advantage over using os.execute(\"show https://my.url\") in that it does not create a command prompt window. os . openURL ( url ) Parameters : url (string): The URL to open.","title":"os.openURL"},{"location":"apis/os/#ossetclipboardtext","text":"Sets the current clipboard text. If nil is passed, the clipboard will be cleared instead. If either operation fails, the function returns false. local result = os . setClipboardText ( text ) Parameters : text (string, nil): Optional . The text to put in the clipboard. If nil is provided instead, then the clipboard will be cleared. Returns : result (boolean)","title":"os.setClipboardText"},{"location":"apis/re/","text":"re \u2693\ufe0e Provides a regular expression style syntax for pattern usage with lpeg. The documentation provided here is only meant to be a quick reference. Please review the complete documentation (with in-depth discussion and many examples) at: http://www.inf.puc-rio.br/~roberto/lpeg/re.html There is also a copy in the MWSE repo at: deps/lpeg/re.html Functions \u2693\ufe0e re.compile \u2693\ufe0e Compiles the given string and returns an equivalent lpeg pattern. The given string may define either an expression or a grammar. The optional defs table provides extra Lua values to be used by the pattern. local result = re . compile ( s , defs ) Parameters : s (string): The string to compile. defs (table): Optional . Extra lua values to be used by the pattern. Returns : result (pattern) re.find \u2693\ufe0e Searches the given pattern in the given subject. If it finds a match, returns the index where this occurrence starts and the index where it ends. Otherwise, returns nil. An optional numeric argument init makes the search starts at that position in the subject string. As usual in Lua libraries, a negative value counts from the end. local result = re . find ( subject , pattern , init ) Parameters : subject (string): The string to search. pattern (string): The pattern to search with. init (number): Optional . Start at this position in the subject string. Returns : result (number) Example: Simple Find local re = require ( \"re\" ) local function onLoaded ( e ) -- find the position of the first numeral in a string mwse . log ( \"%d %d\" , re . find ( \"the number 423 is odd\" , \"[0-9]+\" )) --> 12 14 end event . register ( \"loaded\" , onLoaded ) re.gsub \u2693\ufe0e Does a global substitution, replacing all occurrences of pattern in the given subject by replacement. local result = re . gsub ( subject , pattern , replacement ) Parameters : subject (string): The string to search. pattern (string): The pattern to search with. replacement (string): Replace all matches with this string. Returns : result (string) Example: Simple Substitution local re = require ( \"re\" ) local function onLoaded ( e ) -- returns a string with all vowels replaced by . mwse . log ( re . gsub ( \"hello World\" , \"[aeiou]\" , \".\" )) --> h.ll. W.rld end event . register ( \"loaded\" , onLoaded ) re.match \u2693\ufe0e Matches the given pattern against the given subject, returning all captures. local result = re . match ( subject , pattern ) Parameters : subject (string): The string to search. pattern (string): The pattern to search with. Returns : result (string) Example: Simple Match local re = require ( \"re\" ) local function onLoaded ( e ) -- returns all words in a string mwse . log ( \"%s %s %s %s\" , re . match ( \"the number 423 is odd\" , \"({%a+} / .)*\" )) --> the number is odd -- returns the first numeral in a string mwse . log ( re . match ( \"the number 423 is odd\" , \"s <- {%d+} / . s\" )) --> 423 end event . register ( \"loaded\" , onLoaded ) re.updatelocale \u2693\ufe0e Updates the pre-defined character classes to the current locale. re . updatelocale ()","title":"re"},{"location":"apis/re/#re","text":"Provides a regular expression style syntax for pattern usage with lpeg. The documentation provided here is only meant to be a quick reference. Please review the complete documentation (with in-depth discussion and many examples) at: http://www.inf.puc-rio.br/~roberto/lpeg/re.html There is also a copy in the MWSE repo at: deps/lpeg/re.html","title":"re"},{"location":"apis/re/#functions","text":"","title":"Functions"},{"location":"apis/re/#recompile","text":"Compiles the given string and returns an equivalent lpeg pattern. The given string may define either an expression or a grammar. The optional defs table provides extra Lua values to be used by the pattern. local result = re . compile ( s , defs ) Parameters : s (string): The string to compile. defs (table): Optional . Extra lua values to be used by the pattern. Returns : result (pattern)","title":"re.compile"},{"location":"apis/re/#refind","text":"Searches the given pattern in the given subject. If it finds a match, returns the index where this occurrence starts and the index where it ends. Otherwise, returns nil. An optional numeric argument init makes the search starts at that position in the subject string. As usual in Lua libraries, a negative value counts from the end. local result = re . find ( subject , pattern , init ) Parameters : subject (string): The string to search. pattern (string): The pattern to search with. init (number): Optional . Start at this position in the subject string. Returns : result (number) Example: Simple Find local re = require ( \"re\" ) local function onLoaded ( e ) -- find the position of the first numeral in a string mwse . log ( \"%d %d\" , re . find ( \"the number 423 is odd\" , \"[0-9]+\" )) --> 12 14 end event . register ( \"loaded\" , onLoaded )","title":"re.find"},{"location":"apis/re/#regsub","text":"Does a global substitution, replacing all occurrences of pattern in the given subject by replacement. local result = re . gsub ( subject , pattern , replacement ) Parameters : subject (string): The string to search. pattern (string): The pattern to search with. replacement (string): Replace all matches with this string. Returns : result (string) Example: Simple Substitution local re = require ( \"re\" ) local function onLoaded ( e ) -- returns a string with all vowels replaced by . mwse . log ( re . gsub ( \"hello World\" , \"[aeiou]\" , \".\" )) --> h.ll. W.rld end event . register ( \"loaded\" , onLoaded )","title":"re.gsub"},{"location":"apis/re/#rematch","text":"Matches the given pattern against the given subject, returning all captures. local result = re . match ( subject , pattern ) Parameters : subject (string): The string to search. pattern (string): The pattern to search with. Returns : result (string) Example: Simple Match local re = require ( \"re\" ) local function onLoaded ( e ) -- returns all words in a string mwse . log ( \"%s %s %s %s\" , re . match ( \"the number 423 is odd\" , \"({%a+} / .)*\" )) --> the number is odd -- returns the first numeral in a string mwse . log ( re . match ( \"the number 423 is odd\" , \"s <- {%d+} / . s\" )) --> 423 end event . register ( \"loaded\" , onLoaded )","title":"re.match"},{"location":"apis/re/#reupdatelocale","text":"Updates the pre-defined character classes to the current locale. re . updatelocale ()","title":"re.updatelocale"},{"location":"apis/string/","text":"string \u2693\ufe0e This library provides generic functions for string manipulation, such as finding and extracting substrings, and pattern matching. When indexing a string in Lua, the first character is at position 1 (not at 0, as in C). Indices are allowed to be negative and are interpreted as indexing backwards, from the end of the string. Thus, the last character is at position -1, and so on. Functions \u2693\ufe0e string.endswith \u2693\ufe0e Returns true if a string ends with a given pattern. local result = string . endswith ( s , pattern ) Parameters : s (string) pattern (string) Returns : result (boolean) string.format \u2693\ufe0e This function creates a string, given various values. The first parameter follows the printf format, with the additional option of %q to automatically quote a string. Specifier Output Example %d Signed decimal integer. -392 %i Same as %d . -392 %u Unsigned decimal integer. 7235 %o Unsigned octal. 610 %x Unsigned hexadecimal integer. 7fa %X As %x , but uppercase. 7FA %f Decimal floating point, lowercase. 392.65 %F Decimal floating point, uppercase. 392.65 %e Scientific notation (mantissa/exponent), lowercase. 3.9265e+2 %E Scientific notation (mantissa/exponent), uppercase. 3.9265E+2 %g Use the shortest representation: %e or %f. 392.65 %G Use the shortest representation: %E or %F. 392.65 %a Hexadecimal floating point, lowercase. -0xc.90fep-2 %A Hexadecimal floating point, uppercase. -0XC.90FEP-2 %c Character. a %s String of characters. sample %q Quoted string of characters. \"sample\" %p Pointer address. b8000000 %% The literal % character. % local result = string.format ( format , unknown ) Parameters : format (string): The format string to use for the output. unnamed (values): Optional . Values to format into the given string. Returns : result (string) string.insert \u2693\ufe0e Returns a string where one string has been inserted into another at a given position. local inserted = string . insert ( s1 , s2 , position ) Parameters : s1 (string): The string to insert into. s2 (string): The string to insert. position (number): The position to insert s2 into s1. Returns : inserted (string): A copy of s1 with s2 inserted into it. string.multifind \u2693\ufe0e Performs the logic of find, using a table of patterns. If any of the available patterns match, the matching pattern is returned followed by the normal results of the find. string . multifind ( s , pattern , index , plain ) Parameters : s (string): The string to perform finds on. pattern (table): An array-style table that contains pattern strings. index (number): Default : 1 . Start index of the find. plain (boolean): If true, a normal search instead of a pattern search will be performed. string.split \u2693\ufe0e Returns an array-style table with str split by sep . The sep erator is not part of the results. By default the sep erator is %s , splitting the given str ing by spaces. local split = string . split ( str , sep ) Parameters : str (string): The string to split. sep (string): Default : \"%s\" . The token to split the string by. Returns : split (table) string.startswith \u2693\ufe0e Returns true if a string begins with a given pattern. local result = string . startswith ( s , pattern ) Parameters : s (string) pattern (string) Returns : result (boolean) string.trim \u2693\ufe0e Returns a copy of the string, with whitespace removed from the start and end. local trimmed = string . trim ( s ) Parameters : s (string) Returns : trimmed (string)","title":"string"},{"location":"apis/string/#string","text":"This library provides generic functions for string manipulation, such as finding and extracting substrings, and pattern matching. When indexing a string in Lua, the first character is at position 1 (not at 0, as in C). Indices are allowed to be negative and are interpreted as indexing backwards, from the end of the string. Thus, the last character is at position -1, and so on.","title":"string"},{"location":"apis/string/#functions","text":"","title":"Functions"},{"location":"apis/string/#stringendswith","text":"Returns true if a string ends with a given pattern. local result = string . endswith ( s , pattern ) Parameters : s (string) pattern (string) Returns : result (boolean)","title":"string.endswith"},{"location":"apis/string/#stringformat","text":"This function creates a string, given various values. The first parameter follows the printf format, with the additional option of %q to automatically quote a string. Specifier Output Example %d Signed decimal integer. -392 %i Same as %d . -392 %u Unsigned decimal integer. 7235 %o Unsigned octal. 610 %x Unsigned hexadecimal integer. 7fa %X As %x , but uppercase. 7FA %f Decimal floating point, lowercase. 392.65 %F Decimal floating point, uppercase. 392.65 %e Scientific notation (mantissa/exponent), lowercase. 3.9265e+2 %E Scientific notation (mantissa/exponent), uppercase. 3.9265E+2 %g Use the shortest representation: %e or %f. 392.65 %G Use the shortest representation: %E or %F. 392.65 %a Hexadecimal floating point, lowercase. -0xc.90fep-2 %A Hexadecimal floating point, uppercase. -0XC.90FEP-2 %c Character. a %s String of characters. sample %q Quoted string of characters. \"sample\" %p Pointer address. b8000000 %% The literal % character. % local result = string.format ( format , unknown ) Parameters : format (string): The format string to use for the output. unnamed (values): Optional . Values to format into the given string. Returns : result (string)","title":"string.format"},{"location":"apis/string/#stringinsert","text":"Returns a string where one string has been inserted into another at a given position. local inserted = string . insert ( s1 , s2 , position ) Parameters : s1 (string): The string to insert into. s2 (string): The string to insert. position (number): The position to insert s2 into s1. Returns : inserted (string): A copy of s1 with s2 inserted into it.","title":"string.insert"},{"location":"apis/string/#stringmultifind","text":"Performs the logic of find, using a table of patterns. If any of the available patterns match, the matching pattern is returned followed by the normal results of the find. string . multifind ( s , pattern , index , plain ) Parameters : s (string): The string to perform finds on. pattern (table): An array-style table that contains pattern strings. index (number): Default : 1 . Start index of the find. plain (boolean): If true, a normal search instead of a pattern search will be performed.","title":"string.multifind"},{"location":"apis/string/#stringsplit","text":"Returns an array-style table with str split by sep . The sep erator is not part of the results. By default the sep erator is %s , splitting the given str ing by spaces. local split = string . split ( str , sep ) Parameters : str (string): The string to split. sep (string): Default : \"%s\" . The token to split the string by. Returns : split (table)","title":"string.split"},{"location":"apis/string/#stringstartswith","text":"Returns true if a string begins with a given pattern. local result = string . startswith ( s , pattern ) Parameters : s (string) pattern (string) Returns : result (boolean)","title":"string.startswith"},{"location":"apis/string/#stringtrim","text":"Returns a copy of the string, with whitespace removed from the start and end. local trimmed = string . trim ( s ) Parameters : s (string) Returns : trimmed (string)","title":"string.trim"},{"location":"apis/table/","text":"table \u2693\ufe0e This library provides generic functions for table manipulation. It provides all its functions inside the table table. Functions \u2693\ufe0e table.bininsert \u2693\ufe0e Inserts a given value through BinaryInsert into the table sorted by [, comp]. If 'comp' is given, then it must be a function that receives two table elements, and returns true when the first is less than the second, e.g. comp = function(a, b) return a > b end, will give a sorted table, with the biggest value on position 1. [, comp] behaves as in table.sort(table, value [, comp]) returns the index where 'value' was inserted local result = table . bininsert ( t , value , comp ) Parameters : t (table) value (unknown) comp (unknown): Optional . Returns : result (number) table.binsearch \u2693\ufe0e Performs a binary search for a given value. If the value is found: It returns a table holding all the mathing indices (e.g. { startindice,endindice } ) endindice may be the same as startindice if only one matching indice was found If compval is given: then it must be a function that takes one value and returns a second value2, to be compared with the input value, e.g.: compvalue = function( value ) return value[1] end If reversed is set to true: then the search assumes that the table is sorted in reverse order (largest value at position 1) note when reversed is given compval must be given as well, it can be nil/_ in this case Return value: on success: a table holding matching indices (e.g. { startindice,endindice } ) on failure: nil local result = table . binsearch ( t , value , compval , reversed ) Parameters : t (table) value (unknown) compval (unknown): Optional . reversed (unknown): Optional . Returns : result (table) table.choice \u2693\ufe0e Returns a random element from the given table. local result = table . choice ( t ) Parameters : t (table) Returns : result (unknown) table.clear \u2693\ufe0e This clears all keys and values from a table, but preserves the allocated array/hash sizes. This is useful when a table, which is linked from multiple places, needs to be cleared and/or when recycling a table for use by the same context. This avoids managing backlinks, saves an allocation and the overhead of incremental array/hash part growth. Please note this function is meant for very specific situations. In most cases it's better to replace the (usually single) link with a new table and let the garbage collection do its work. table . clear ( table ) Parameters : table (table): The table to clear. table.copy \u2693\ufe0e Shallowly copies a table's contents to a destination table. If no destination table is provided, a new table will be created. Note that sub tables will not be copied, and will still refer to the same data. local result = table . copy ( from , to ) Parameters : from (table) to (table): Optional . Returns : result (table) table.copymissing \u2693\ufe0e Copies a table's contents from one table to another, including subtitles. If a non-table key is already defined, it will not be overwritten. Metatables are not copied. table . copymissing ( to , from ) Parameters : to (table) from (table) table.deepcopy \u2693\ufe0e Copies a table's contents. All subtables will also be copied, as will any metatable. local result = table . deepcopy ( t ) Parameters : t (table) Returns : result (table) table.empty \u2693\ufe0e Returns true if the table is empty, otherwise, it returns false. local result = table . empty ( t ) Parameters : t (table) Returns : result (boolean) table.find \u2693\ufe0e Returns the key for a given value, or nil if the table does not contain the value. local result = table . find ( t , value ) Parameters : t (table) value (unknown) Returns : result (unknown) table.invert \u2693\ufe0e Returns a copy of t with the keys and values flipped. local result = table . invert ( t ) Parameters : t (table) Returns : result (table) table.keys \u2693\ufe0e Returns an array-style table of all keys in the given table, t. Optionally, it will sort the returned table. local keys = table . keys ( t , sort ) Parameters : t (table): The table to get keys for. sort (boolean, function, nil): Optional . If true, the returned table will be sorted. If a function is passed, the table will be sorted using the given function. Returns : keys (table): An array of all table keys. table.new \u2693\ufe0e This creates a pre-sized table. This is useful for big tables if the final table size is known and automatic table resizing is too expensive. local newTable = table . new ( narray , nhash ) Parameters : narray (number): A hint for how many elements the table will have as a sequence. nhash (number): A hint for how many other elements the table will have. Returns : newTable (table): The pre-sized table that was created. table.removevalue \u2693\ufe0e Removes a value from a given table. Returns true if the value was successfully removed. local result = table . removevalue ( t , value ) Parameters : t (table) value (unknown) Returns : result (boolean) table.size \u2693\ufe0e Returns the number of elements inside the table. Unlike the length operator (#) this will work with any table. local result = table . size ( t ) Parameters : t (table) Returns : result (number) table.traverse \u2693\ufe0e This function is used to iterate over values and its subtables in the table. Each \"node\" is an object with a children table of other \"nodes\", each of which might have their own children. For example, a sceneNode is made up of niNodes, and each niNodes can have a list of niNode children. This is best used for recursive data structures like UI elements and sceneNodes etc. local result = table . traverse ( t , k ) Parameters : t (table): A table to transverse. k (unknown): Default : children . The key of a table inside t object. Returns : result (iterator) Example: Iterate over all scene nodes attached to player. local function onLoaded () mwse . log ( \"Player's scene graph:\" ) for node in table . traverse ({ tes3 . player . sceneNode }) do mwse . log ( \"%s : %s\" , node . RTTI . name , node . name ) end end event . register ( \"loaded\" , onLoaded ) table.values \u2693\ufe0e Returns an array-style table of all values in the given table, t. Optionally, it will sort the returned table. local values = table . values ( t , sort ) Parameters : t (table): The table to get values for. sort (boolean, function, nil): Optional . If true, the returned table will be sorted. If a function is passed, the table will be sorted using the given function. Returns : values (table): An array of all table values.","title":"table"},{"location":"apis/table/#table","text":"This library provides generic functions for table manipulation. It provides all its functions inside the table table.","title":"table"},{"location":"apis/table/#functions","text":"","title":"Functions"},{"location":"apis/table/#tablebininsert","text":"Inserts a given value through BinaryInsert into the table sorted by [, comp]. If 'comp' is given, then it must be a function that receives two table elements, and returns true when the first is less than the second, e.g. comp = function(a, b) return a > b end, will give a sorted table, with the biggest value on position 1. [, comp] behaves as in table.sort(table, value [, comp]) returns the index where 'value' was inserted local result = table . bininsert ( t , value , comp ) Parameters : t (table) value (unknown) comp (unknown): Optional . Returns : result (number)","title":"table.bininsert"},{"location":"apis/table/#tablebinsearch","text":"Performs a binary search for a given value. If the value is found: It returns a table holding all the mathing indices (e.g. { startindice,endindice } ) endindice may be the same as startindice if only one matching indice was found If compval is given: then it must be a function that takes one value and returns a second value2, to be compared with the input value, e.g.: compvalue = function( value ) return value[1] end If reversed is set to true: then the search assumes that the table is sorted in reverse order (largest value at position 1) note when reversed is given compval must be given as well, it can be nil/_ in this case Return value: on success: a table holding matching indices (e.g. { startindice,endindice } ) on failure: nil local result = table . binsearch ( t , value , compval , reversed ) Parameters : t (table) value (unknown) compval (unknown): Optional . reversed (unknown): Optional . Returns : result (table)","title":"table.binsearch"},{"location":"apis/table/#tablechoice","text":"Returns a random element from the given table. local result = table . choice ( t ) Parameters : t (table) Returns : result (unknown)","title":"table.choice"},{"location":"apis/table/#tableclear","text":"This clears all keys and values from a table, but preserves the allocated array/hash sizes. This is useful when a table, which is linked from multiple places, needs to be cleared and/or when recycling a table for use by the same context. This avoids managing backlinks, saves an allocation and the overhead of incremental array/hash part growth. Please note this function is meant for very specific situations. In most cases it's better to replace the (usually single) link with a new table and let the garbage collection do its work. table . clear ( table ) Parameters : table (table): The table to clear.","title":"table.clear"},{"location":"apis/table/#tablecopy","text":"Shallowly copies a table's contents to a destination table. If no destination table is provided, a new table will be created. Note that sub tables will not be copied, and will still refer to the same data. local result = table . copy ( from , to ) Parameters : from (table) to (table): Optional . Returns : result (table)","title":"table.copy"},{"location":"apis/table/#tablecopymissing","text":"Copies a table's contents from one table to another, including subtitles. If a non-table key is already defined, it will not be overwritten. Metatables are not copied. table . copymissing ( to , from ) Parameters : to (table) from (table)","title":"table.copymissing"},{"location":"apis/table/#tabledeepcopy","text":"Copies a table's contents. All subtables will also be copied, as will any metatable. local result = table . deepcopy ( t ) Parameters : t (table) Returns : result (table)","title":"table.deepcopy"},{"location":"apis/table/#tableempty","text":"Returns true if the table is empty, otherwise, it returns false. local result = table . empty ( t ) Parameters : t (table) Returns : result (boolean)","title":"table.empty"},{"location":"apis/table/#tablefind","text":"Returns the key for a given value, or nil if the table does not contain the value. local result = table . find ( t , value ) Parameters : t (table) value (unknown) Returns : result (unknown)","title":"table.find"},{"location":"apis/table/#tableinvert","text":"Returns a copy of t with the keys and values flipped. local result = table . invert ( t ) Parameters : t (table) Returns : result (table)","title":"table.invert"},{"location":"apis/table/#tablekeys","text":"Returns an array-style table of all keys in the given table, t. Optionally, it will sort the returned table. local keys = table . keys ( t , sort ) Parameters : t (table): The table to get keys for. sort (boolean, function, nil): Optional . If true, the returned table will be sorted. If a function is passed, the table will be sorted using the given function. Returns : keys (table): An array of all table keys.","title":"table.keys"},{"location":"apis/table/#tablenew","text":"This creates a pre-sized table. This is useful for big tables if the final table size is known and automatic table resizing is too expensive. local newTable = table . new ( narray , nhash ) Parameters : narray (number): A hint for how many elements the table will have as a sequence. nhash (number): A hint for how many other elements the table will have. Returns : newTable (table): The pre-sized table that was created.","title":"table.new"},{"location":"apis/table/#tableremovevalue","text":"Removes a value from a given table. Returns true if the value was successfully removed. local result = table . removevalue ( t , value ) Parameters : t (table) value (unknown) Returns : result (boolean)","title":"table.removevalue"},{"location":"apis/table/#tablesize","text":"Returns the number of elements inside the table. Unlike the length operator (#) this will work with any table. local result = table . size ( t ) Parameters : t (table) Returns : result (number)","title":"table.size"},{"location":"apis/table/#tabletraverse","text":"This function is used to iterate over values and its subtables in the table. Each \"node\" is an object with a children table of other \"nodes\", each of which might have their own children. For example, a sceneNode is made up of niNodes, and each niNodes can have a list of niNode children. This is best used for recursive data structures like UI elements and sceneNodes etc. local result = table . traverse ( t , k ) Parameters : t (table): A table to transverse. k (unknown): Default : children . The key of a table inside t object. Returns : result (iterator) Example: Iterate over all scene nodes attached to player. local function onLoaded () mwse . log ( \"Player's scene graph:\" ) for node in table . traverse ({ tes3 . player . sceneNode }) do mwse . log ( \"%s : %s\" , node . RTTI . name , node . name ) end end event . register ( \"loaded\" , onLoaded )","title":"table.traverse"},{"location":"apis/table/#tablevalues","text":"Returns an array-style table of all values in the given table, t. Optionally, it will sort the returned table. local values = table . values ( t , sort ) Parameters : t (table): The table to get values for. sort (boolean, function, nil): Optional . If true, the returned table will be sorted. If a function is passed, the table will be sorted using the given function. Returns : values (table): An array of all table values.","title":"table.values"},{"location":"apis/tes3/","text":"tes3 \u2693\ufe0e The tes3 library provides the majority of the functions for interacting with the game system. Properties \u2693\ufe0e tes3.animationState \u2693\ufe0e Constant values relating to animation state. tes3.dataHandler \u2693\ufe0e One of the core game objects. Returns : result ( tes3dataHandler ) tes3.game \u2693\ufe0e One of the core game objects. Returns : result ( tes3game ) tes3.installDirectory \u2693\ufe0e The currently executed root Morrowind installation path. Returns : result (string) tes3.magicSchoolSkill \u2693\ufe0e This table is used to convert numerical magic school IDs to their respective skill IDs. These constants will return their respective tes3.skill constants. Returns : result (number) Example: Convert magic school from event data to a respective skill local function OnSpellFailed ( e ) local skill = tes3 . magicSchoolSkill [ e . expGainSchool ] -- Note: e.expGainSchool is a value in tes3.magicSchool constants table tes3 . mobilePlayer : exerciseSkill ( skill , 100 ) end event . register ( \"spellCastedFailure\" , OnSpellFailed ) tes3.mobilePlayer \u2693\ufe0e The player's mobile actor. Returns : result ( tes3mobilePlayer ) tes3.player \u2693\ufe0e A reference to the player. Returns : result ( tes3reference ) tes3.worldController \u2693\ufe0e One of the core game objects. Returns : result ( tes3worldController ) Functions \u2693\ufe0e tes3.addArmorSlot \u2693\ufe0e Registers a new armor slot. Adds a new place for armor pieces with a matching slot number to equip to. local wasAdded = tes3 . addArmorSlot ({ slot = ..., name = ..., weight = ..., scalar = ... }) Parameters : params (table) slot (number): Armor slot number. A number greater than 10 to configure a slot for. name (string) weight (number): Default : 0 . A stand-in for the armor base weight value, typically controlled by a GMST (e.g. iHelmWeight). scalar (number): Default : 0.1 . A multiplier with range 0.0-1.0 that controls how much of an item's armor value applies to a character's overall armor rating. For comparison, standard chest armor uses 0.3, helmets, greaves and pauldrons use 0.1, and gauntlets use 0.05. Returns : wasAdded (boolean) tes3.addClothingSlot \u2693\ufe0e Registers a new clothing slot. Adds a new place for clothing pieces with a matching slot number to equip to. tes3 . addClothingSlot ({ slot = ..., name = ... }) Parameters : params (table) slot (number): Clothing slot number. A number greater than 9 to configure a slot for. name (string) tes3.addItem \u2693\ufe0e Adds an item to a given reference's inventory or mobile's inventory. local addedCount = tes3 . addItem ({ reference = ..., item = ..., itemData = ..., soul = ..., count = ..., playSound = ..., limit = ..., reevaluateEquipment = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to give items to. item ( tes3item , tes3leveledItem , string): The item to add. If a leveled item is passed, it will be resolved and added. itemData ( tes3itemData ): Optional . The item data for the item. soul ( tes3creature ): Optional . For creating filled soul gems. count (number): Default : 1 . The maximum number of items to add. playSound (boolean): Default : true . If false, the up/down sound for the item won't be played. limit (boolean): If false, items can be placed into containers that shouldn't normally be allowed. This includes organic containers, and containers that are full. reevaluateEquipment (boolean): Default : true . If true, and the item added is armor, clothing, or a weapon, the actor will reevaluate its equipment choices to see if the new item is worth equipping. This does not affect the player. updateGUI (boolean): Default : true . If false, the function won't manually resync the player's GUI state. This can result in some optimizations, though tes3ui.forcePlayerInventoryUpdate() must manually be called after all inventory updates are finished. Returns : addedCount (number) tes3.addItemData \u2693\ufe0e Creates an item data if there is room for a new stack in a given inventory. This can be then used to add custom user data or adjust an item's condition. This will return nil if no item data could be allocated for the item -- for example if the reference doesn't have the item in their inventory or each item of that type already has item data. local createdData = tes3 . addItemData ({ to = ..., item = ..., updateGUI = ... }) Parameters : params (table) to ( tes3reference , tes3mobileActor , string): The reference or mobile whose inventory will be modified. item ( tes3item , string): The item to create item data for. updateGUI (boolean): Default : true . If false, the player or contents menu won't be updated. Returns : createdData ( tes3itemData ) tes3.addJournalEntry \u2693\ufe0e This function creates a new journal entry. It can be called once the world controller is loaded. tes3 . addJournalEntry ({ text = ..., showMessage = ... }) Parameters : params (table) text (string): The text of the new Journal entry. showMessage (boolean): Default : true . If this parameter is true, a \"Your journal has been updated\" message will be displayed. tes3.addMagicEffect \u2693\ufe0e This function creates a new custom magic effect. The effect can be scripted through lua. This function should be used inside magicEffectsResolved event callback. local effect = tes3 . addMagicEffect ({ id = ..., name = ..., baseCost = ..., school = ..., size = ..., sizeCap = ..., speed = ..., description = ..., lighting = ..., icon = ..., particleTexture = ..., castSound = ..., boltSound = ..., hitSound = ..., areaSound = ..., castVFX = ..., boltVFX = ..., hitVFX = ..., areaVFX = ..., allowEnchanting = ..., allowSpellmaking = ..., appliesOnce = ..., canCastSelf = ..., canCastTarget = ..., canCastTouch = ..., casterLinked = ..., hasContinuousVFX = ..., hasNoDuration = ..., hasNoMagnitude = ..., illegalDaedra = ..., isHarmful = ..., nonRecastable = ..., targetsAttributes = ..., targetsSkills = ..., unreflectable = ..., usesNegativeLighting = ..., onTick = ..., onCollision = ... }) Parameters : params (table) id (number): Id of the new effect. Maps to newly claimed tes3.effect constants with tes3.claimSpellEffectId() . If the effect of this id already exists, an error will be thrown. name (string): Default : Unnamed Effect . Name of the effect. baseCost (number): Default : 1 . Base magicka cost for the effect. school (number): Default : tes3.magicSchool.alteration . The magic school the new effect will be assigned to. Maps to tes3.magicSchool constants. size (number): Default : 1 . The size scale for the spells containing this magic effect. sizeCap (number): Default : 1 . The maximum possible size of the projectile. speed (number): Default : 1 . description (string): Default : No description available. . Description for the effect. lighting (table): Optional . x (number): Default : 1 . Value of red color channel. In range of 0 - 1. y (number): Default : 1 . Value of green color channel. In range of 0 - 1. z (number): Default : 1 . Value of blue color channel. In range of 0 - 1. icon (string): Path to the effect icon. Must be a string no longer than 31 characters long. Use double \\ as path separator. particleTexture (string): Path to the particle texture to use for the effect. Must be a string no longer than 31 characters long. castSound (string): The sound ID which will be played on casting a spell with this effect. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used. boltSound (string): The sound ID which will be played when a spell with this effect is in flight. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used. hitSound (string): The sound ID which will be played when a spell with this effect hits something. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used. areaSound (string): The sound ID which will be played on area of effect impact. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used. castVFX ( tes3physicalObject ): Optional . The visual played when a spell with this effect is cast. boltVFX ( tes3physicalObject ): Optional . The visual played when a spell with this effect is in flight. hitVFX ( tes3physicalObject ): Optional . The visual played when a spell with this effect hits something. areaVFX ( tes3physicalObject ): Optional . The visual played when a spell with this effect, with area of effect hits something. allowEnchanting (boolean): Default : true . A flag which controls whether this effect can be used in a custom enchantment. allowSpellmaking (boolean): Default : true . A flag which controls whether this effect can be used in a custom spell. appliesOnce (boolean): Default : true . A flag which controls whether this effect applies once or is a ticking effect. canCastSelf (boolean): Default : true . A flag which controls whether this effect can be used with cast on self range. canCastTarget (boolean): Default : true . A flag which controls whether this effect can be used with cast on target range. canCastTouch (boolean): Default : true . A flag which controls whether this effect can be used with cast on touch range. casterLinked (boolean): Default : true . hasContinuousVFX (boolean): Default : true . A flag which controls whether the effect's visual is continuously played during the whole duration of the effect. hasNoDuration (boolean): Default : true . A flag which controls whether this effect doesn't have duration. hasNoMagnitude (boolean): Default : true . A flag which controls whether this effect doesn't have magnitude. illegalDaedra (boolean): Default : true . A flag which controls whether this effect is illegal to use in public, because it summons Daedra. Note: this mechanic is not implemented in the game. Some mods might rely on this parameter. isHarmful (boolean): Default : true . A flag which controls whether this effect is considered harmful and casting it can be considered as an attack. nonRecastable (boolean): Default : true . A flag which controls whether this effect can be recast while it already is in duration. targetsAttributes (boolean): Default : true . A flag which controls whether this effect targets a certain attribute or attributes. targetsSkills (boolean): Default : true . A flag which controls whether this effect targets a certain skill or skills. unreflectable (boolean): Default : true . A flag which controls whether this effect can be reflected. usesNegativeLighting (boolean): Default : true . A flag which controls whether this effect uses negative lighting. onTick (function): Optional . A function which will be called on each tick of a spell containing this effect. A table tickParams will be passed to the callback function. Note: dt (frame time) scaling is handled automatically. tickParams (table) effectId (number) sourceInstance ( tes3magicSourceInstance ): Access to the magic source of the effect instance. deltaTime (number): The time passed since the last tick of the spell. effectInstance ( tes3magicEffectInstance ): Access to the magic effect instance. effectIndex (number): The index of the effect in the spell. In addition, a function registerd as onTick can also call the following methods: trigger( triggerParams ): Allows the effect to run through the normal spell event system. Parameters: triggerParams (table) negateOnExpiry (boolean): Optional. Default: true If this flag is true , the effect will be negated on expiry. isUncapped (boolean): Optional. attribute (number): Optional. Default: tes3.effectAttribute.nonResistable The attribute used in resistance calculations agains this effect. Maps to values in tes3.effectAttribute namespace. type (number): Optional. Default: tes3.effectEventType.boolean . This flag controls how the effect behaves. For example, tes3.effectEventType.modStatistic will make the effect work as calling tes3.modStatistic . Maps to values in tes3.effectEventType namespace. value (number): Optional. Default: 0 . The variable this effect changes. resistanceCheck(resistParams) (function): Optional. The function passed as resistanceCheck will be used on any of the game's spell resistance checks. For example, the only effect in vanilla Morrowind that implements this function is Water Walking. It disallows using a spell with Water Walking when the player is deep underwater, by setting it as expired. So, returning true from this function will set your effect to expired, and depending on your trigger code may stop processing. The function passed here must returns boolean values. Parameters resistParams (table) sourceInstance ( tes3magicSourceInstance ): Access to the magic source of the effect instance. effectInstance ( tes3magicEffectInstance ): Access to the magic effect instance. effectIndex (number): The index of the effect in the spell. triggerBoundWeapon( id ): Performs vanilla weapon summoning logic. It will create a summoned version of the weapon with provided ID. Parameters: id (string): The ID of the weapon object to summon. triggerBoundArmor( params ): Performs vanilla armor summoning logic. It can summon one or two armor objects with provided ID(s). Parameters: params (table) id (string): The ID of the armor object to summon. id2 (string): Optional. The ID of the additional armor object to summon. triggerSummon( id ): Performs vanilla creature summoning logic. It will create a summoned version of a creature with provided ID. Parameters: id (string): The ID of the creature object to summon. onCollision (function): Optional . A function which will be called when a spell containing this spell effect collides with something. Returns : effect ( tes3effect ) Example: Fire Damage effect -- Claiming an ID is needed before actually -- creating an effect with that ID tes3 . claimSpellEffectId ( \"customFireDmg\" , 220 ) local function onFireDmgTick ( tickParams ) -- This will print current health for any actor our spell hit tes3 . messageBox ( \"%s, health: %s\" , tickParams . effectInstance . target . object . id , tickParams . effectInstance . target . mobile . health . current ) tickParams : trigger ({ type = tes3 . effectEventType . modStatistic , -- The resistance attribute against Fire Damage should be Resist Fire attribute = tes3 . effectAttribute . resistFire , value = tickParams . effectInstance . target . mobile . health , negateOnExpiry = false , isUncapped = true , }) end event . register ( \"magicEffectsResolved\" , function () tes3 . addMagicEffect ({ -- The ID we claimed before is now available in tes3.effect namespace id = tes3 . effect . customFireDmg , -- This information if just copied from the Construction Set -- name = \"Fire Damage\" , description = ( \"This spell effect produces a manifestation of elemental fire. Upon \" .. \"contact with an object, this manifestation explodes, causing damage.\" ), baseCost = 5 , school = tes3 . magicSchool . destruction , size = 1.25 , sizeCap = 50 , speed = 1 , lighting = { x = 0.99 , y = 0.26 , z = 0.53 }, usesNegativeLighting = false , icon = \"s \\\\ Tx_S_fire_damage.tga\" , particleTexture = \"vfx_firealpha00A.tga\" , castSound = \"destruction cast\" , castVFX = \"VFX_DestructCast\" , boltSound = \"destruction bolt\" , boltVFX = \"VFX_DestructBolt\" , hitSound = \"destruction hit\" , hitVFX = \"VFX_DestructHit\" , areaSound = \"destruction area\" , areaVFX = \"VFX_DestructArea\" , -- -- appliesOnce = false , hasNoDuration = false , hasNoMagnitude = false , illegalDaedra = false , unreflectable = false , casterLinked = false , nonRecastable = false , targetsAttributes = false , targetsSkills = false , onTick = onFireDmgTick , }) end ) event . register ( \"loaded\" , function () local spell1 = tes3 . createObject ({ objectType = tes3 . objectType . spell }) tes3 . setSourceless ( spell1 ) spell1 . name = \"TEST SPELL - self\" spell1 . magickaCost = 1 local effect = spell1 . effects [ 1 ] effect . id = tes3 . effect . customFireDmg effect . rangeType = tes3 . effectRange . self effect . min = 10 effect . max = 10 effect . duration = 10 effect . radius = 0 effect . skill = - 1 effect . attribute = - 1 local spell2 = tes3 . createObject ({ objectType = tes3 . objectType . spell }) tes3 . setSourceless ( spell2 ) spell2 . name = \"TEST SPELL - target\" spell2 . magickaCost = 1 local effect = spell2 . effects [ 1 ] effect . id = tes3 . effect . customFireDmg effect . rangeType = tes3 . effectRange . target effect . min = 3 effect . max = 3 effect . duration = 10 effect . radius = 15 effect . skill = - 1 effect . attribute = - 1 local spell3 = tes3 . createObject ({ objectType = tes3 . objectType . spell }) tes3 . setSourceless ( spell3 ) spell3 . name = \"TEST SPELL - touch\" spell3 . magickaCost = 1 local effect = spell3 . effects [ 1 ] effect . id = tes3 . effect . customFireDmg effect . rangeType = tes3 . effectRange . touch effect . min = 3 effect . max = 3 effect . duration = 10 effect . radius = 0 effect . skill = - 1 effect . attribute = - 1 tes3 . addSpell ({ reference = tes3 . mobilePlayer , spell = spell1 }) tes3 . addSpell ({ reference = tes3 . mobilePlayer , spell = spell2 }) tes3 . addSpell ({ reference = tes3 . mobilePlayer , spell = spell3 }) end ) tes3.addSoulGem \u2693\ufe0e Causes a misc item to be recognized as a soul gem, so that it can be used for soul trapping. local wasAdded = tes3 . addSoulGem ({ item = ... }) Parameters : params (table) item ( tes3misc , string): The item to recognize as a soul gem. Returns : wasAdded (boolean) tes3.addSpell \u2693\ufe0e Adds a spell to an actor's spell list. If the spell is passive, the effects will be applied. local wasAdded = tes3 . addSpell ({ reference = ..., actor = ..., spell = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to give the spell to. To manipulate an actor without specifying any particular reference, use actor instead. actor ( tes3actor , string): Who to give the spell to. Providing a base actor can be done before a save has been loaded, but may not correctly update effects for instanced versions of that actor in an active save. spell ( tes3spell , string): The spell to add. updateGUI (boolean): Default : true . If true, the GUI will be updated respsecting the adding of the spell. This can be useful to disable when batch-adding many spells. The batch should be ended with tes3.updateMagicGUI to reflect the changes. Returns : wasAdded (boolean): True if the spell was successfully added. This can be false if the actor's race or birthsign already contains the spell. tes3.adjustSoundVolume \u2693\ufe0e Changes the volume of a sound that is playing on a given reference. tes3 . adjustSoundVolume ({ sound = ..., reference = ..., mixChannel = ..., volume = ... }) Parameters : params (table) sound ( tes3sound , string): The sound object, or id of the sound to look for. reference ( tes3reference , tes3mobileActor , string): The reference to attach the sound to. mixChannel (number): Default : tes3.audioMixType.effects . The channel to base volume off of. Maps to tes3.audioMixType constants. volume (number): Default : 1.0 . A value between 0.0 and 1.0 to scale the volume off of. tes3.advanceTime \u2693\ufe0e Advances the game time. Can be used to simulate player resting. local hoursPassed = tes3 . advanceTime ({ hours = ..., resting = ..., updateEnvironment = ... }) Parameters : params (table) hours (number): How many hours to progress. resting (boolean): Optional . Should advancing time count as resting? If set to true invokes usual sleeping mechanics: health, fatigue and magicka restoration, and possible rest interruption. The length of the rest will be equal to hours parameter, rounded down to nearest natural number. updateEnvironment (boolean): Default : true . Controls if the weather system is updated for each hour passed. Returns : hoursPassed (number) tes3.applyMagicSource \u2693\ufe0e local instance = tes3 . applyMagicSource ({ reference = ..., source = ..., name = ..., effects = ..., createCopy = ..., fromStack = ..., castChance = ..., target = ..., bypassResistances = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): A reference on which the magic source will be applied. source ( tes3object ): Optional . A magic source to apply. name (string): Optional . If applying alchemy as a source, you can specifiy a name for the magic source. effects (table): Optional . A table of custom effects to apply as a potion. Maximal number of effects is 8. id (boolean): Default : -1 . ID of the effect. skill (number): Default : -1 . If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Skill, a skill should be provided. This also applies to any custom spell effect which operates on a certain skill. This value maps to tes3.skill constants. attribute (number): Default : -1 . If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Attribute, an attribute should be provided. This also applies to any custom spell effect which operates on a certain attribute. This value maps to tes3.attribute constants. range (number): Default : tes3.effectRange.self . The range of the effect. This maps to tes3.effectRange constants. radius (number): Default : 0 . The radius of the effect. duration (number): Default : 0 . Number of seconds the effect is going to be active. min (number): Default : 0 . The minimal magintude of the effect per tick. max (number): Default : 0 . The maximal magnitude of the effect per tick. createCopy (boolean): Optional . This parameter controls whether the function will return the original magic source or a copy of the magic source. This parameter is only used if source is alchemy. fromStack ( tes3equipmentStack ): Optional . The piece of equipment this magic source is coming from. The fromStack has to be an already equipped item from tes3actor.equipment. This will probably change in the future. castChance (number): Optional . This parameter allows overriding the casting chance of the magic source. target ( tes3reference , tes3mobileActor , string): Optional . The target of the magic. bypassResistances (boolean): Optional . Is this effect going to bypass magic resistance? Returns : instance ( tes3magicSourceInstance ) tes3.beginTransform \u2693\ufe0e Changes a reference to werewolf form. This function works only on a reference infected with Lycanthropy, be it the player or any other reference. Returns true if successful. local success = tes3 . beginTransform ({ reference = ... }) Parameters : params (table) reference ( tes3reference ): A reference to change to werewolf form. Returns : success (boolean) tes3.calculatePrice \u2693\ufe0e Calculates a price, given a merchant and associated trading data. This is useful beyond accessing the object's .value field in that it raises the appropriate events to let other mods modify the values. local price = tes3 . calculatePrice ({ object = ..., basePrice = ..., buying = ..., selling = ..., merchant = ..., bartering = ..., repairing = ..., training = ..., count = ..., itemData = ..., skill = ... }) Parameters : params (table) object ( tes3object ): Optional . The object to calculate the price for. If not provided, basePrice is required. basePrice (number): Optional . The base price to calculate the end price for. This defaults to the object param's value , if provided. This parameter is required if object is not provided. buying (boolean): Default : true . If true , uses the logic for buying a service/item. This is exclusive with selling . selling (boolean): If true , uses the logic for selling an item. This is exclusive with buying . merchant ( tes3mobileActor ): The merchant to use for calculating the price. bartering (boolean): If true , a calcBarterPrice or calcRepairPrice event will be triggered. repairing (boolean): If true , a calcRepairPrice event will be triggered. training (boolean): If true , a calcTrainingPrice event will be triggered, passing the given skill ID. count (number): Default : 1 . If bartering , the count passed to the calcBarterPrice event. itemData ( tes3itemData ): Optional . If bartering or repairing , the item data passed to the calcBarterPrice or calcRepairPrice event. skill (number): If training , the skill ID passed to the calcTrainingPrice event. Returns : price (number): The calculated price, filtered by events. tes3.cancelAnimationLoop \u2693\ufe0e Signals looping animations on the actor to stop looping and play to the end. The animation will continue, playing past the loop point until the end frame. Useful for exiting looping animations cleanly. tes3 . cancelAnimationLoop ({ reference = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference to the actor. tes3.canRest \u2693\ufe0e This function returns true if player can rest. local canRest = tes3 . canRest ({ checkForEnemies = ..., checkForSolidGround = ..., showMessage = ... }) Parameters : params (table) checkForEnemies (boolean): Default : true . Perform a check whether there are enemies nearby before opening rest menu. If there are, false is returned. checkForSolidGround (boolean): Default : true . Perform a check if the player is underwater. If underwater, false is returned. showMessage (boolean): If true, a messagebox will be shown if the player can't rest because some condition isn't met. Returns : canRest (boolean) tes3.cast \u2693\ufe0e Casts a spell from a given reference to a target reference. Touch effects will hit the target at any range, while target effects will create a projectile. By default, the spell always casts successfully and does not consume magicka. By default, an actor casting will stop and perform its cast animation, but the 'instant' flag can start the cast instantly, and allow more control over the spell. When the caster is the player, the target parameter is optional; without a target, the player's touch effects will only hit targets in front of them, and target effects will create a projectile in the direction the player is facing. Currently as a limitation, instant must be true to allow the player to cast spells. local executed = tes3 . cast ({ reference = ..., target = ..., spell = ..., instant = ..., alwaysSucceeds = ..., bypassResistances = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The caster reference. target ( tes3reference , tes3mobileActor , string): The target reference. Optional only if the caster is the player. spell ( tes3spell , string): The spell the caster uses. instant (boolean): When true, the spell is cast instantly. No animation is performed. alwaysSucceeds (boolean): Default : true . When true, the spell cannot fail and does not consume magicka. When false, it is cast using the actor's spell skill, and requires and takes enough magicka to cast. Only applies when 'instant' is true. bypassResistances (boolean): The spell will bypass the target's resistances. Only applies when 'instant' is true. Returns : executed (boolean) Example: This is an example of how to use tes3.cast instead of mwscript.explodeSpell -- The following code can be tested in-game by pressing Alt + l or Alt + k event . register ( \"keyDown\" , function ( e ) if e . isAltDown then tes3 . messageBox ( \"mwscript.explodeSpell\" ) mwscript . explodeSpell ({ reference = tes3 . game . playerTarget , spell = \"proj_trap_spell\" }) end end , { filter = tes3 . scanCode . l }) event . register ( \"keyDown\" , function ( e ) if e . isAltDown then tes3 . messageBox ( \"tes3.cast\" ) -- This will behave the same as will mwscript.explodeSpell() tes3 . cast ({ target = tes3 . game . playerTarget , reference = tes3 . game . playerTarget , spell = \"proj_trap_spell\" , }) end end , { filter = tes3 . scanCode . k }) tes3.checkMerchantOffersService \u2693\ufe0e Checks if a merchant will offer a service to you, including dialogue checks like disposition and faction membership. A specific service can be checked, or if no service is given, a generic dialogue check is made. If the service is refused, the dialogue reply for the refusal may also be returned (it may be nil, as there may not always be a reply available). local offersService , refusalReply = tes3 . checkMerchantOffersService ( reference , service ) Parameters : reference ( tes3reference , tes3mobileActor , string) service (number): Optional . The specific service to check for availability. Uses the tes3.merchantService constants. Returns : offersService (boolean) refusalReply ( tes3dialogueInfo ) tes3.checkMerchantTradesItem \u2693\ufe0e Determines if a merchant trades in a given item. local trades = tes3 . checkMerchantTradesItem ({ item = ..., reference = ... }) Parameters : params (table) item ( tes3item , string) reference ( tes3reference , tes3mobileActor , string) Returns : trades (boolean) tes3.claimSpellEffectId \u2693\ufe0e This function is used to claim a unique spell effect name and id. This is needed before actually creating a new effect by calling tes3.addMagicEffect() . A claimed effect id is then available as: tes3.effect.effectName (just like any other spell effect). For examples of this function in practice see tes3.addMagicEffect() example. tes3 . claimSpellEffectId ({ name = ..., id = ... }) Parameters : params (table) name (string): The name of the new spell effect. Must be unique. An error will be thrown if it's non-unique. id (number): A unique number representing the new spell effect. An error will be thrown if it's non-unique. tes3.clearMarkLocation \u2693\ufe0e This function deletes the player's mark location. tes3 . clearMarkLocation () tes3.createObject \u2693\ufe0e Create an object and returns it. The created object will be part of the saved game. Supported object types are those that have their own create function, such as tes3activator for example. local createdObject = tes3 . createObject ({ objectType = ..., getIfExists = ... }) Parameters : params (table) objectType (number): Maps to tes3.objectType constants. Used to filter object type to create. getIfExists (boolean): Default : true . If true , an existing object of the same type and ID will be returned instead of creating a new one. Returns : createdObject ( tes3activator , tes3alchemy , tes3container , tes3enchantment , tes3misc , tes3sound , tes3spell , tes3static , tes3weapon ) Example: Creates a tes3misc object local miscItemId = \"create_misc_item_id\" local miscItemName = \"create_misc_item_name\" mwse . log ( \"creating a misc item of id %s\" , miscItemId ) -- local miscItem = tes3misc.create( { -- id = miscItemId, -- name = miscItemName -- } ) local miscItem = tes3 . createObject ({ objectType = tes3 . objectType . miscItem , id = miscItemId , name = miscItemName }) if ( miscItem ~= nil ) then mwse . log ( \"misc item created : id is %s\" , miscItemId ) else mwse . log ( \"failed to create a misc item of id %s\" , miscItemId ) return end tes3 . createReference ( { object = miscItem , position = tes3 . getPlayerEyePosition (), orientation = 0 , cell = tes3 . getPlayerCell () } ) mwse . log ( \"created a reference of a misc item of id %s\" , miscItem . id ) Example: Creates a tes3static object local staticId = \"create_static_id\" mwse . log ( \"creating a static of id %s\" , staticId ) -- local static = tes3static.create( { -- id = staticId, -- mesh = \"d\\\\door_dwrv_main00.nif\" -- } ) local static = tes3 . createObject ( { objectType = tes3 . objectType . static , id = staticId , mesh = [[d\\door_dwrv_main00.nif]] } ) if ( static ~= nil ) then mwse . log ( \"static created : id is %s\" , staticId ) else mwse . log ( \"failed to create a static of id %s\" , staticId ) return end tes3 . createReference ( { object = static , position = tes3 . getPlayerEyePosition (), orientation = 0 , cell = tes3 . getPlayerCell () } ) mwse . log ( \"created a reference of static of id %s\" , static . id ) tes3.createReference \u2693\ufe0e Similar to mwscript's PlaceAtPC or PlaceAtMe, this creates a new reference in the game world. local newReference = tes3 . createReference ({ object = ..., position = ..., orientation = ..., cell = ..., scale = ... }) Parameters : params (table) object ( tes3physicalObject , string): The object to create a reference of. position ( tes3vector3 , table): The location to create the reference at. orientation ( tes3vector3 , table): The new orientation for the created reference. cell ( tes3cell , string, table): Optional . The cell to create the reference in. This is only needed for interior cells. scale (number): Default : 1 . A scale for the reference. Returns : newReference ( tes3reference ) tes3.decrementKillCount \u2693\ufe0e Decreases player's kill count of a certain type of actor by one. tes3 . decrementKillCount ({ actor = ... }) Parameters : params (table) actor ( tes3actor , string): The actor (or their ID). tes3.deleteObject \u2693\ufe0e Deletes a game object from the system. This can be dangerous, use with caution. tes3 . deleteObject ( object ) Parameters : object ( tes3object ): The object to delete. tes3.disableKey \u2693\ufe0e Disables the use of a keyboard key. tes3 . disableKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace. tes3.dropItem \u2693\ufe0e Drops one or more items from a reference's inventory onto the ground at their feet. It will unequip the item if it is equipped. The return value will be nil if no matching item was found. local createdReference = tes3 . dropItem ({ reference = ..., item = ..., itemData = ..., matchNoItemData = ..., count = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference whose inventory will be modified. item ( tes3item , string): The item to drop. itemData ( tes3itemData ): Optional . The item data of the specific item to drop. Without this, the first matching item in the inventory will drop. matchNoItemData (boolean): If true, matches an item without item data. This can be used when you want to drop an item that isn't equipped (equipped items always have item data). count (number): Default : 1 . The number of items to drop. updateGUI (boolean): Default : true . If false, the player or contents menu won't be updated. Returns : createdReference ( tes3reference ) tes3.enableKey \u2693\ufe0e Enables the use of a keyboard key. tes3 . enableKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace. tes3.fadeIn \u2693\ufe0e Similar to the vanilla FadeIn mwscript command. tes3 . fadeIn ({ fader = ..., duration = ... }) Parameters : params (table) fader ( tes3fader ): Optional . Defaults to the transition fader. duration (number): Default : 1.0 . Time, in seconds, for the fade. tes3.fadeOut \u2693\ufe0e Similar to the vanilla FadeOut mwscript command. tes3 . fadeOut ({ fader = ..., duration = ... }) Parameters : params (table) fader ( tes3fader ): Optional . Defaults to the transition fader. duration (number): Default : 1.0 . Time, in seconds, for the fade. tes3.fadeTo \u2693\ufe0e Similar to the vanilla FadeTo mwscript command. tes3 . fadeTo ({ fader = ..., duration = ..., value = ... }) Parameters : params (table) fader ( tes3fader ): Optional . Defaults to the transition fader. duration (number): Default : 1.0 . Time, in seconds, for the fade. value (number): Default : 1.0 . tes3.findActorsInProximity \u2693\ufe0e Searches for active mobile actors which are within range distance from the reference or position argument. It only finds mobiles which have active AI, and can include the player. This function is used by the game for area-of-effect hits. It has a small amount of overhead, so try not to use it too much. local mobileList = tes3 . findActorsInProximity ({ reference = ..., position = ..., range = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The position to search from, taken from a reference. Uses the position of the centre of the body if the reference is an actor. position ( tes3vector3 ): Optional . The position to search from. range (number): The distance around the position to search. An actor is included if the centre of their body is in range. Returns : mobileList (table) tes3.findBirthsign \u2693\ufe0e Fetches the core game birthsign object for a given birthsign ID. If the birthsign with a given ID doesn't exist, nil is returned. local birthsign = tes3 . findBirthsign ({ id = ... }) Parameters : params (table) id (string): ID of the birthsign to search for. Returns : birthsign ( tes3birthsign ) tes3.findClass \u2693\ufe0e Fetches the core game character class object for a given class ID. If the class with a given ID doesn't exist, nil is returned. local class = tes3 . findClass ({ id = ... }) Parameters : params (table) id (string): ID of the class to search for. Returns : class ( tes3class ) tes3.findClosestExteriorReferenceOfObject \u2693\ufe0e Using the same engine function used by the vanilla intervention spells, locations the first reference of a given object in the exterior world. local reference = tes3 . findClosestExteriorReferenceOfObject ({ object = ..., position = ... }) Parameters : params (table) object ( tes3physicalObject , string): The object to search for. position ( tes3vector3 ): Optional . The position to search from. Must be an exterior position. Defaults to the last exterior position of the player if no position is provided. Returns : reference ( tes3reference ) tes3.findDialogue \u2693\ufe0e Locates a root dialogue topic that can then be filtered down for a specific actor to return a specific dialogue info. Specify either topic , or both type and page for other types of dialogue. For example, tes3.findDialogue({type = tes3.dialogueType.greeting, page = tes3.dialoguePage.greeting.greeting0}) will return the \"Greeting 0\" topic, which is not available using a topic ID. local dialogue = tes3 . findDialogue ({ topic = ..., type = ..., page = ... }) Parameters : params (table) topic (string): Optional . The dialogue topic to look for. type (number): Optional . The type of dialogue to look for. Uses tes3.dialogueType constants. page (number): Optional . The page of dialogue to fetch. Uses tes3.dialoguePage constants. Returns : dialogue ( tes3dialogue ) tes3.findGlobal \u2693\ufe0e Fetches the core game object that represents a global variable. local globalVariable = tes3 . findGlobal ( id ) Parameters : id (string) Returns : globalVariable ( tes3globalVariable ) tes3.findGMST \u2693\ufe0e Fetches the core game object that represents a game setting. While this function accepts a name, it is recommended to use the tes3.GMST constants. local gameSetting = tes3 . findGMST ( id ) Parameters : id (number, string) Returns : gameSetting ( tes3gameSetting ) Example: Document all GMST Default Values -- Converter table for a GMST's type to something more user-friendly. local typeNames = { s = \"string\" , i = \"integer\" , f = \"float\" , } -- Write our markdown header. local f = assert ( io.open ( \"Data Files \\\\ MWSE \\\\ tmp \\\\ GMSTs.md\" , \"w\" )) f : write ( \"# GMSTs \\n\\n \" ) f : write ( \"Index | Type | Identifier | Default Value \\n \" ) f : write ( \"----- | ------- | -------------------------------- | -------------------------------------------- \\n \" ) -- Go through all our GMSTs... for id = 0 , 1520 do -- Write out most of the info. local gmst = tes3 . findGMST ( id ) f : write ( string.format ( \"%-5d | %-7s | %-32s | \" , gmst . index , typeNames [ gmst . type ], gmst . id )) -- Customize how the value is written based on its type. if ( gmst . type == \"s\" ) then -- Remove linebreaks and escape them. local value = gmst . defaultValue value = string.gsub ( value , \" \\r \" , \" \\\\ r\" ) value = string.gsub ( value , \" \\n \" , \" \\\\ n\" ) f : write ( string.format ( \"` \\\" %s \\\" `\" , value )) elseif ( gmst . type == \"f\" ) then f : write ( string.format ( \"`%.4f`\" , gmst . defaultValue )) else f : write ( string.format ( \"`%d`\" , gmst . defaultValue )) end f : write ( \" \\n \" ) end -- Close up our file. f : close () Example: Retrieve value of a GMST local oldGMST = tes3 . findGMST ( \"sServiceTrainingTitle\" ). value -- oldGMST is now \"Training\" -- Now let's change the message to something more appropriate. tes3 . findGMST ( \"sServiceTrainingTitle\" ). value = \"Cheat\" tes3.findRegion \u2693\ufe0e Fetches the core game region object for a given region ID. If the region with a given ID doesn't exist, nil is returned. local region = tes3 . findRegion ({ id = ... }) Parameters : params (table) id (string): ID of the region to search for. Returns : region ( tes3region ) tes3.force1stPerson \u2693\ufe0e Forces the player's POV to first person the next simulation frame, and returns true if the POV has been changed. local changedPOV = tes3 . force1stPerson () Returns : changedPOV (boolean) tes3.force3rdPerson \u2693\ufe0e Forces the player's POV to third person the next simulation frame, and returns true if the POV has been changed. local changedPOV = tes3 . force3rdPerson () Returns : changedPOV (boolean) tes3.get3rdPersonCameraOffset \u2693\ufe0e Returns the camera's offset from the player's head while in 3rd person view. Note this function can be used once WorldController and MobilePlayer have finished initializing. local cameraOffset = tes3 . get3rdPersonCameraOffset () Returns : cameraOffset ( tes3vector3 ) tes3.getActiveCells \u2693\ufe0e Returns a table of active cells. If indoors, the table will have only one entry. If outdoors, the 9 surrounding cells will be provided. local cells = tes3 . getActiveCells () Returns : cells (table) tes3.getAnimationGroups \u2693\ufe0e This function fetches a reference's attached animation groups. local animData = tes3 . getAnimationGroups ({ reference = ... }) Parameters : params (table) reference ( tes3reference ): A reference whose animation groups to fetch. Returns : animData (table) tes3.getAnimationTiming \u2693\ufe0e This function fetches a reference's attached animation groups' timings. local result = tes3 . getAnimationTiming ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): A reference whose animation groups' timings to fetch. Returns : result (table) tes3.getArchiveList \u2693\ufe0e Returns a 1-indexed table of active archives. local archives = tes3 . getArchiveList () Returns : archives (table) tes3.getAttachment \u2693\ufe0e Fetches an attachment with a given type. tes3 . getAttachment ( reference , attachment ) Parameters : reference ( tes3reference ) attachment (string) tes3.getAttributeName \u2693\ufe0e Returns the lowercase identifying name of an attribute for a given numerical, 0-based index. E.g. \"strength\". local name = tes3 . getAttributeName ( attributeId ) Parameters : attributeId (number): The attribute id to get the name of, from tes3.attributeName constants. Returns : name (string) tes3.getCameraPosition \u2693\ufe0e Returns the camera's position. local vector3 = tes3 . getCameraPosition () Returns : vector3 ( tes3vector3 ) tes3.getCameraVector \u2693\ufe0e Returns the camera look vector. local vector3 = tes3 . getCameraVector () Returns : vector3 ( tes3vector3 ) tes3.getCell \u2693\ufe0e Finds a cell, either by an id or an X/Y grid position. local cell = tes3 . getCell ({ id = ..., x = ..., y = ... }) Parameters : params (table) id (string): The cell's ID. If not provided, x and y must be. x (number) y (number) Returns : cell ( tes3cell ) tes3.getCumulativeDaysForMonth \u2693\ufe0e Gets the number of days that have passed leading up to the start of a given month. local days = tes3 . getCumulativeDaysForMonth ( month ) Parameters : month (number): The 0-based month index. Returns : days (number) tes3.getCurrentAIPackageId \u2693\ufe0e Returns an actor's current AI package ID, just as the mwscript function GetCurrentAIPackage would. local packageID = tes3 . getCurrentAIPackageId ( reference ) Parameters : reference ( tes3mobileActor , tes3reference ) Returns : packageID (number) tes3.getCurrentWeather \u2693\ufe0e Gets the currently active weather, from the player's current region. local weather = tes3 . getCurrentWeather () Returns : weather ( tes3weather ) tes3.getCursorPosition \u2693\ufe0e Returns a table with values x and y that contain the current cursor position. local table = tes3 . getCursorPosition () Returns : table (table) tes3.getDaysInMonth \u2693\ufe0e Returns the number of days in a given month. This may be altered if a Morrowind Code Patch feature was installed. local dayCount = tes3 . getDaysInMonth ( month ) Parameters : month (number) Returns : dayCount (number) tes3.getDialogueInfo \u2693\ufe0e Locates and returns a Dialogue Info by a given id. This involves file IO and is an expensive call. Results should be cached. local dialogueInfo = tes3 . getDialogueInfo ( dialogue , id ) Parameters : dialogue ( tes3dialogue , string): The dialogue that the info belongs to. id (string): The numerical, unique id for the info object. Returns : dialogueInfo ( tes3dialogueInfo ) tes3.getEffectMagnitude \u2693\ufe0e This function returns the total magnitude and total unresisted magnitude of a certain spell effect affecting a reference. It returns a pair of numbers, the first being the post-resistance magnitude (see examples). The unresisted magnitude is the magnitude before the actor's resistances are applied; it is always an integer, so it is used in some UI elements. local magnitude , unresistedMagnitude = tes3 . getEffectMagnitude ({ reference = ..., effect = ..., skill = ..., attribute = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): An associated mobile should exist for this function to be able to work. effect (number): Effect ID. Can be any of the predefined spell effects, or one added by tes3.claimSpellEffectId() . Maps to values of tes3.effect constants skill (number): Default : -1 . If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Skill, a skill should be provided. This also applies to any custom spell effect which operates on a certain skill. This value maps to tes3.skill constants. attribute (number): Default : -1 . If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Attribute, an attribute should be provided. This also applies to any custom spell effect which operates on a certain attribute. This value maps to tes3.attribute constants. Returns : magnitude, unresistedMagnitude (number, number) Example: Get both magnitudes. local magnitude , unresistedMagnitude = tes3 . getEffectMagnitude { reference = tes3 . player , effect = tes3 . effect . fireDamage } tes3 . messageBox ( string.format ( \"fortify speed: %f (%f)\" , magnitude , unresistedMagnitude )) Example: Get magnitude after resistances are applied. local magnitude = tes3 . getEffectMagnitude { reference = tes3 . player , effect = tes3 . effect . fortifyAttribute , attribute = tes3 . attribute . speed } tes3 . messageBox ( string.format ( \"fortify speed: %f\" , magnitude )) tes3.getEquippedItem \u2693\ufe0e Returns an actor's equipped item stack, provided a given filter local stack = tes3 . getEquippedItem ({ actor = ..., enchanted = ..., objectType = ..., slot = ..., type = ... }) Parameters : params (table) actor ( tes3reference , tes3mobileActor , tes3actor ) enchanted (boolean): Optional . If true, filters to enchanted items. objectType (number): Optional . Maps to tes3.objectType constants. Used to filter equipment by type. slot (number): Optional . Maps to tes3.armorSlot or tes3.clothingSlot . Used to filter equipment by slot. type (number): Optional . Maps to tes3.weaponType . Used to filter equipment by type. Returns : stack ( tes3equipmentStack ) Example: Get Player\u2019s Equipped Light local equippedLightStack = tes3 . getEquippedItem ({ actor = tes3 . player , objectType = tes3 . objectType . light }) if ( equippedLightStack ) then mwse . log ( \"Equipped light: %s\" , equippedLightStack . object . id ) else mwse . log ( \"No light equipped.\" ) end Example: Get Player\u2019s Shield local equippedShieldStack = tes3 . getEquippedItem ({ actor = tes3 . player , objectType = tes3 . objectType . armor , slot = tes3 . armorSlot . shield }) if ( equippedShieldStack ) then mwse . log ( \"Equipped shield: %s\" , equippedShieldStack . object . id ) else mwse . log ( \"No shield equipped.\" ) end tes3.getFaction \u2693\ufe0e Fetches the core game faction object for a given faction ID. local faction = tes3 . getFaction ( id ) Parameters : id (string) Returns : faction ( tes3faction ) tes3.getFileExists \u2693\ufe0e Determines if a file exists in the user's Data Files. local exists = tes3 . getFileExists ( path ) Parameters : path (string) Returns : exists (boolean) tes3.getFileSource \u2693\ufe0e Determines if a file exists on the filesystem or inside of a bsa. The returned string will be \"file\" or \"bsa\". local exists = tes3 . getFileSource ( path ) Parameters : path (string) Returns : exists (string) tes3.getGlobal \u2693\ufe0e Retrieves the value of a global value, or nil if the global could not be found. local value = tes3 . getGlobal ( id ) Parameters : id (string) Returns : value (number) tes3.getInputBinding \u2693\ufe0e Gets the input configuration for a given keybind. local inputConfig = tes3 . getInputBinding ( keybind ) Parameters : keybind (number): Maps to tes3.keybind constants. Returns : inputConfig ( tes3inputConfig ) tes3.getItemCount \u2693\ufe0e Returns the amount of a certain item that can be found in a reference's inventory. local count = tes3 . getItemCount ({ reference = ..., item = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to get the item count for. Must be a reference that has an inventory. item ( tes3item , string): The item to get the count of. Returns : count (number): The absolute value of the stack count in the reference's inventory. tes3.getItemIsStolen \u2693\ufe0e This function checks item's stolen flag. local isStolen = tes3 . getItemIsStolen ( item , from ) Parameters : item ( tes3item ): The item to check. from ( tes3baseObject ): Where the item was stolen from. Returns : isStolen (boolean) tes3.getJournalIndex \u2693\ufe0e Gets the index of a given journal, or nil if no valid journal could be found. local index = tes3 . getJournalIndex ({ id = ... }) Parameters : params (table) id ( tes3dialogue , string) Returns : index (number) tes3.getKillCount \u2693\ufe0e Returns how many times the player killed an actor. If no actor is specified, total number of kills player commited will be returned. local count = tes3 . getKillCount ({ actor = ... }) Parameters : params (table) actor ( tes3actor , string): Optional . The actor (or their ID) for whom to retrieve player's kill count. Returns : count (number) tes3.getKillCounts \u2693\ufe0e Returns a table with complete player kill counts. The table returned is formated so actor IDs are table keys and kill count of that type of actor is value. local killMap = tes3 . getKillCounts () Returns : killMap (table) tes3.getLanguage \u2693\ufe0e Gets the language as an ISO string (e.g. \"eng\"), determined by the language entry in Morrowind.ini and the detected executable. local code = tes3 . getLanguage () Returns : code (string) tes3.getLanguageCode \u2693\ufe0e Gets the language code, determined by the language entry in Morrowind.ini and the detected executable. local code = tes3 . getLanguageCode () Returns : code (number) tes3.getLastExteriorPosition \u2693\ufe0e Returns the last exterior position of the player. local vector3 = tes3 . getLastExteriorPosition () Returns : vector3 ( tes3vector3 ) tes3.getLocked \u2693\ufe0e Determines if a given reference is a locked door or container. local isLocked = tes3 . getLocked ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) Returns : isLocked (boolean) tes3.getLockLevel \u2693\ufe0e Gets an locked reference's lock level. If no lock data is available, it will return nil. local level = tes3 . getLockLevel ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) Returns : level (number) tes3.getMagicEffect \u2693\ufe0e Fetches the core game Magic Effect object for a given ID. local magicEffect = tes3 . getMagicEffect ( id ) Parameters : id (number) Returns : magicEffect ( tes3magicEffect ) tes3.getMagicEffectName \u2693\ufe0e Returns the complex name of a magic effect, taking into account attribute or skill values. local complexName = tes3 . getMagicEffectName ({ effect = ..., attribute = ..., skill = ... }) Parameters : params (table) effect (number): The effect ID to get the name of. attribute (number): Optional . The attribute ID to use, if applicable. skill (number): Optional . The skill ID to use, if applicable. Returns : complexName (string) tes3.getMagicSourceInstanceBySerial \u2693\ufe0e Fetches an instance of the magic source of a given serial number. local magicSourceInstance = tes3 . getMagicSourceInstanceBySerial ({ serialNumber = ... }) Parameters : params (table) serialNumber (number) Returns : magicSourceInstance ( tes3magicSourceInstance ) tes3.getModList \u2693\ufe0e Fetches the list of the active ESM and ESP files. local modList = tes3 . getModList () Returns : modList (table) tes3.getObject \u2693\ufe0e Fetches the core game object for a given object ID. local object = tes3 . getObject ( id ) Parameters : id (string) Returns : object ( tes3object ) tes3.getOwner \u2693\ufe0e Returns the object's owner, or nil if the object is unowned. local object = tes3 . getOwner ( reference ) Parameters : reference ( tes3reference ) Returns : object ( tes3object ) tes3.getPlayerActivationDistance \u2693\ufe0e This function returns the distance that the player can activate objects with. This is a sum of the iMaxActivateDist GMST value and the player's telekinesis strength. local result = tes3 . getPlayerActivationDistance () Returns : result (number) tes3.getPlayerCell \u2693\ufe0e Fetches the cell that the player is currently in. local result = tes3 . getPlayerCell () Returns : result ( tes3cell ) tes3.getPlayerEyePosition \u2693\ufe0e Returns the position of the player's eyes. local position = tes3 . getPlayerEyePosition () Returns : position ( tes3vector3 ) tes3.getPlayerEyeVector \u2693\ufe0e Returns the look direction of the player's eyes. local position = tes3 . getPlayerEyeVector () Returns : position ( tes3vector3 ) tes3.getPlayerGold \u2693\ufe0e Gets the gold count carried by the player. local goldCount = tes3 . getPlayerGold () Returns : goldCount (number) tes3.getPlayerTarget \u2693\ufe0e This function is used to see what the player is looking at. Unlike a real raycast, this does not work in all circumstances. As a general rule, it will return the reference if the information box is shown when it is looked at. local result = tes3 . getPlayerTarget () Returns : result ( tes3reference ) tes3.getQuickKey \u2693\ufe0e This function retrieves data for a quick key. local result = tes3 . getQuickKey ({ slot = ... }) Parameters : params (table) slot (number): The key to retrieve data for. This is a value between 1 and 9. Returns : result ( tes3quickKey ) tes3.getReference \u2693\ufe0e Fetches the first reference for a given base object ID. local reference = tes3 . getReference ( id ) Parameters : id (string) Returns : reference ( tes3reference ) tes3.getRegion \u2693\ufe0e Gets the current region the player is in. This checks the player's current cell first, but will fall back to the last exterior cell. local region = tes3 . getRegion ( useDoors ) Parameters : useDoors (boolean): Optional . Returns : region ( tes3region ) tes3.getScript \u2693\ufe0e Locates and returns a script by a given id. local script = tes3 . getScript ( id ) Parameters : id (string) Returns : script ( tes3script ) tes3.getSimulationTimestamp \u2693\ufe0e Returns a UNIX-style timestamp based on in-world simulation time since the start of the era. local timestamp = tes3 . getSimulationTimestamp () Returns : timestamp (number) tes3.getSkill \u2693\ufe0e Fetches the core game object for a given skill ID. local skill = tes3 . getSkill ( id ) Parameters : id (number): Maps to tes3.skill constants. Returns : skill ( tes3skill ) tes3.getSkillName \u2693\ufe0e Returns the identifying name of a skill for a given numerical, 0-based index. E.g. \"Enchant\". local name = tes3 . getSkillName () Returns : name (string) tes3.getSound \u2693\ufe0e Locates and returns a sound by a given id. local sound = tes3 . getSound ( id ) Parameters : id (string) Returns : sound ( tes3sound ) tes3.getSoundGenerator \u2693\ufe0e Returns a sound generator by a given creature id and type. local soundGenerator = tes3 . getSoundGenerator ( creatureId , soundType ) Parameters : creatureId (string) soundType (number): Maps to tes3.soundGenType constants. Returns : soundGenerator ( tes3soundGenerator ) tes3.getSoundPlaying \u2693\ufe0e Without a reference, this function returns true if the sound is playing unattached or on any reference. With a reference, it returns true if the sound is playing on that specific reference. local soundIsPlaying = tes3 . getSoundPlaying ({ sound = ..., reference = ... }) Parameters : params (table) sound ( tes3sound , string): The sound object, or the ID of the sound to look for. reference ( tes3reference , tes3mobileActor , string): Optional . Returns : soundIsPlaying (boolean) tes3.getSpecializationName \u2693\ufe0e Returns the lowercase identifying name of a specialization type for a given numerical, 0-based index. E.g. \"magic\". local name = tes3 . getSpecializationName () Returns : name (string) tes3.getTopMenu \u2693\ufe0e Gets the top-level UI menu. local menu = tes3 . getTopMenu () Returns : menu ( tes3uiElement ) tes3.getTrap \u2693\ufe0e Gets the trap on a given reference. local spell = tes3 . getTrap ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) Returns : spell ( tes3spell ) tes3.getVanityMode \u2693\ufe0e The function returns true if the player is in the vanity mode. Vanity mode is triggered by a period of inactivity from the player or by a tes3.setVanityMode() function. The view is switched to third person (if not already), and the camera is orbiting slowly around the player character. local result = tes3 . getVanityMode () Returns : result (boolean): Is the vanity mode currently active? tes3.getViewportSize \u2693\ufe0e Returns both the viewport width and the viewport height. Note that this is the real resolution of the screen. For a value scaled by MGE's menu scaling, see the same-named function in the tes3ui namespace. To get the scale used, check getViewportScale in the tes3ui namespace. local width , height = tes3 . getViewportSize () Returns : width (number): The width of the viewport. height (number): The height of the viewport. tes3.getWerewolfKillCount \u2693\ufe0e Returns the number of kills player commited as a Werewolf. local werewolfKills = tes3 . getWerewolfKillCount () Returns : werewolfKills (number) tes3.hammerKey \u2693\ufe0e Simulates hammering a key. tes3 . hammerKey ( keyCode ) Parameters : keyCode (number) tes3.hasCodePatchFeature \u2693\ufe0e Attempts to determine if a given Morrowind Code Patch feature is enabled. This may not be possible, in which case nil will be returned. local state = tes3 . hasCodePatchFeature ( id ) Parameters : id (number): The id of the feature. Maps to values in tes3.codePatchFeature constants. Returns : state (boolean, nil) tes3.hasOwnershipAccess \u2693\ufe0e Determines if a reference has access to another object, including its inventory. References have access to their own things, and the player has access to dead NPC's items. local hasAccess = tes3 . hasOwnershipAccess ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Default : tes3.player . The actor to check permissions for. target ( tes3reference , tes3mobileActor , string): The reference to check access of. Returns : hasAccess (boolean) tes3.hasSpell \u2693\ufe0e Determines if the player has access to a given spell. local hasSpell = tes3 . hasSpell ({ reference = ..., actor = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to check the spell list of. To check an actor without specifying any particular reference, use actor instead. actor ( tes3actor , string): Who to check the spell list of. Providing a base actor can be done before a save has been loaded, but may not correctly update effects for instanced versions of that actor in an active save. spell ( tes3spell , string): The spell to check. Returns : hasSpell (boolean): True if the spell exists in the actor's spell list, race spell list, or birthsign spell list. tes3.incrementKillCount \u2693\ufe0e Increases player's kill count of a certain type of actor by one. tes3 . incrementKillCount ({ actor = ... }) Parameters : params (table) actor ( tes3actor , string): The actor (or their ID) for whom to increase player's kill count. tes3.is3rdPerson \u2693\ufe0e Returns if the game is in 3rd person. local state = tes3 . is3rdPerson () Returns : state (boolean) tes3.isAffectedBy \u2693\ufe0e This function performs a check whether the provided reference is affected by a certain object or magic effect. Note reference.object.spells:contains(spellID) will give the same output as this function for abilities, diseases, and curses, because having them in your spell list also makes them affect you. local isAffectedBy = tes3 . isAffectedBy ({ reference = ..., effect = ..., object = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) effect (number): Optional . A numerical identifier of the magic effect to perform a check for. Maps to tes3.effect constant, including those claimed with tes3.claimSpellEffectId() , and then added with tes3.addMagicEffect() . object ( tes3alchemy , tes3enchantment , tes3spell , tes3magicEffect , string): Optional . An object to perform a check for. Returns : isAffectedBy (boolean) tes3.isKeyEqual \u2693\ufe0e Compares two key objects and returns their equality. Returns true if the objects are equal, false otherwise. local equal = tes3 . isKeyEqual ({ actual = ..., expected = ... }) Parameters : params (table) actual (table): The key object that is being compared. keyCode (number): Value of the actual key scan code, such as the letter p . Maps to tes3.scanCode.* . isShiftDown (boolean): Value of whether the shift key is pressed. isControlDown (boolean): Value of whether the control key is pressed. isAltDown (boolean): Value of whether the alt key is pressed. isSuperDown (boolean): Value of whether the super (Windows key) key is pressed. expected (table): The key object that is being compared against. keyCode (number): Value of the expected key scan code, such as the letter p . Maps to tes3.scanCode.* . isShiftDown (boolean): Value of whether the shift key is expected to be pressed. isControlDown (boolean): Value of whether the control key is expected to be pressed. isAltDown (boolean): Value of whether the alt key is expected to be pressed. isSuperDown (boolean): Value of whether the super (Windows key) key is pressed. Returns : equal (boolean) tes3.isModActive \u2693\ufe0e Determines if the player has a given ESP or ESM file active. local result = tes3 . isModActive ( filename ) Parameters : filename (string): The filename of the mod to find, including the extension. Returns : result (boolean) tes3.iterate \u2693\ufe0e This function returns a function that iterates over a tes3iterator object. This is useful for for loops. Note that tes3iterator objects support iteration with pairs() function. local function = tes3 . iterate ( iterator ) Parameters : iterator ( tes3iterator ) Returns : function (function) tes3.iterateObjects \u2693\ufe0e Iteration function used for looping over game options. local object = tes3 . iterateObjects ( filter ) Parameters : filter (number): Maps to tes3.objectType constants. Returns : object ( tes3object ) tes3.loadAnimation \u2693\ufe0e Loads an animation and uses it to override existing animations on an actor. Animation groups present in the file will replace the actor's animation groups. The actor's model must be already loaded into memory to have its animations modified. The overridden animations only persist until the actor is unloaded. Calling this more than once will remove the previous animation override before loading the new animation. Therefore, if applying animations to the player, you should call this before every playAnimation so that different animation mods can co-exist. For NPCs under your mod's control, you only need to do it when the player enters the cell containing the NPC. Calling this without a file argument will reset the reference's animations to default. tes3 . loadAnimation ({ reference = ..., file = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference to the actor that is having its animations modified. file (string): Optional . The specified animation base file that will be loaded. e.g. For an animation composed of files anim.nif, xanim.nif and xanim.kf, you should pass file=\"anim.nif\". The animation target skeleton must match the skeleton of the actor to work. i.e. 3rd person anims for NPCs and tes3.player, 1st person anims for firstPersonReference. tes3.loadGame \u2693\ufe0e Loads a game. tes3 . loadGame ( filename ) Parameters : filename (string): The full filename of the save that we want to load, including extension. tes3.loadMesh \u2693\ufe0e Loads a mesh file and provides a scene graph object. local model = tes3 . loadMesh ( path , useCache ) Parameters : path (string): Path, relative to Data Files/Meshes. useCache (boolean): Default : true . If false, a new object will be created even if it had been previously loaded. Returns : model ( niNode ) tes3.loadSourceTexture \u2693\ufe0e Loads a source texture file and provides the niSourceTexture object. local texture = tes3 . loadSourceTexture ( path , useCache ) Parameters : path (string): Path, relative to Data Files/Textures. useCache (boolean): Default : true . If false, a new object will be created even if it had been previously loaded. Returns : texture ( niSourceTexture ) tes3.lock \u2693\ufe0e Locks an object, and optionally sets a locked reference's lock level. Returns true if the object can be and wasn't already locked. local locked = tes3 . lock ({ reference = ..., level = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) level (number): Optional . Returns : locked (boolean) tes3.loopTArray \u2693\ufe0e This function returns a function that iterates over a tes3tarray object. This is useful for for loops. local iterationFunction = tes3 . loopTArray ( tarray ) Parameters : tarray (tes3tarray) Returns : iterationFunction (function) tes3.makeSafeObjectHandle \u2693\ufe0e Returns a safe handle for the object. To use the object use :getObject() . To check if it still exists use :valid() . local object = tes3 . makeSafeObjectHandle ( unknown , unknown , unknown ) Parameters : Returns : object ( tes3object ) tes3.menuMode \u2693\ufe0e Returns true if the player is currently in menu mode. local inMenuMode = tes3 . menuMode () Returns : inMenuMode (boolean) tes3.messageBox \u2693\ufe0e Displays a message box. This may be a simple toast-style message, or a box with choice buttons. local element = tes3 . messageBox ({ message = ..., buttons = ..., callback = ..., showInDialog = ..., duration = ... }, formatAdditions ) Parameters : messageOrParams (string, table) message (string) buttons (table): Optional . An array of strings to use for buttons. callback (function) showInDialog (boolean): Default : true . Specifying showInDialog = false forces the toast-style message, which is not shown in the dialog menu. duration (number): Optional . Overrides how long the toast-style message remains visible. formatAdditions (variadic): Optional . Only used if messageOrParams is a string. Returns : element ( tes3uiElement , nil): The UI menu created for the notification, if any. tes3.modStatistic \u2693\ufe0e Modifies a statistic on a given actor. This should be used instead of manually setting values on the game structures, to ensure that events and GUI elements are properly handled. Either skill, attribute, or name must be provided. tes3 . modStatistic ({ reference = ..., name = ..., attribute = ..., skill = ..., base = ..., current = ..., value = ..., limit = ..., limitToBase = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string) name (string): Optional . A generic name of an attribute to set. attribute (number): Optional . The attribute to set. skill (number): Optional . The skill to set. base (number): Optional . If set, the base value will be modified. current (number): Optional . If set, the current value will be modified. value (number): Optional . If set, both the base and current value will be modified. limit (boolean): If set, the attribute won't rise above 100 or fall below 0. limitToBase (boolean): If set, the attribute's current value won't rise above its base value. Useful for health, magicka, and fatigue. Example: Decrease Health of an Actor tes3 . modStatistic ({ reference = tes3 . mobilePlayer , name = \"health\" , current = - 10 }) Example: Restore Magicka without Overflowing tes3 . modStatistic ({ reference = tes3 . mobilePlayer , name = \"magicka\" , current = 20 , limitToBase = true }) tes3.newGame \u2693\ufe0e Starts a new game. tes3 . newGame () tes3.onMainMenu \u2693\ufe0e Returns true if the player is on the main menu, and hasn't loaded a game yet. local onMainMenu = tes3 . onMainMenu () Returns : onMainMenu (boolean) tes3.persuade \u2693\ufe0e Attempts a persuasion attempt on an actor, potentially adjusting their disposition. Returns true if the attempt was a success. local success = tes3 . persuade ({ actor = ..., index = ..., modifier = ... }) Parameters : params (table) actor ( tes3mobileActor , tes3reference , string): The actor to try to persuade. index (number): Optional . If an index is provided, 0-indexed with the following results: admire, intimidate, taunt, bribe (10), bribe (100), bribe (1000). modifier (number): Optional . If no index is provided, this is the direct modifier to try. Returns : success (boolean) tes3.playAnimation \u2693\ufe0e Plays a given animation group. Optional flags can be used to define how the group starts. When 'group' is specified, the actor AI is paused while playing the animation, as if in an idle state. When one or more of 'lower', 'upper', or 'shield' are specified without 'group', the actor AI retains control, and the animations are layered. e.g. tes3.playAnimation{reference = ..., upper = tes3.animationGroup.idle3, loopCount = 0} will play the idle3 animation once (without looping) on the upper body, while the player or NPC is still able to walk around. Using 'upper' defers combat actions until the animation is done. Using 'shield' still allows combat actions. As a special case, tes3.playAnimation{reference = ..., group = 0} returns control to the AI, as the AI knows that is the actor's neutral idle state. tes3 . playAnimation ({ reference = ..., group = ..., lower = ..., upper = ..., shield = ..., startFlag = ..., loopCount = ..., mesh = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference that will play the animation. group (number): Optional . The animation group id to start playing -- a value from 0 to 149. Applies the animation to the whole body. Maps to tes3.animationGroup constants. lower (number): Optional . Sets the animation group id for the lower body. This is used to combine different animations for each body section. Maps to tes3.animationGroup constants. upper (number): Optional . Sets the animation group id for the upper body. This is used to combine different animations for each body section. Maps to tes3.animationGroup constants. shield (number): Optional . Sets the animation group id for the shield arm. This is used to combine different animations for each body section. Maps to tes3.animationGroup constants. startFlag (number): Default : tes3.animationStartFlag.immediate . A flag for starting the group with, using tes3.animationStartFlag constants. loopCount (number): Default : -1 . If provided, the animation will repeat its loop section a given number of times. To make an animation play through once, set loopCount = 0. Defaults to infinite looping. mesh (string): Optional . Deprecated. Please use tes3.loadAnimation (check its documentation) before calling playAnimation . You can also use loadAnimation to reset loaded animations to default. tes3.playItemPickupSound \u2693\ufe0e Plays the sound responsible for picking up or putting down an item. local executed = tes3 . playItemPickupSound ({ reference = ..., item = ..., pickup = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The reference to attach the sound to. item ( tes3item ) pickup (boolean): Default : true . If false, the place down item will be used. Returns : executed (boolean) tes3.playSound \u2693\ufe0e Plays a sound on a given reference. Provides control over volume (including volume channel), pitch, and loop control. Note : MP3 sound files can only be played if they are inside \\Vo\\ folder. The files must conform to the MPEG Layer-3, 64 Kbps 44100 kHz, 16-bit mono specification. local executed = tes3 . playSound ({ sound = ..., reference = ..., loop = ..., mixChannel = ..., volume = ..., pitch = ..., soundPath = ... }) Parameters : params (table) sound ( tes3sound , string): The sound object, or id of the sound to look for. reference ( tes3reference , tes3mobileActor , string): Optional . The reference to attach the sound to. loop (boolean): If true, the sound will loop. mixChannel (number): Default : tes3.audioMixType.effects . The channel to base volume off of. Maps to tes3.audioMixType constants. volume (number): Default : 1.0 . A value between 0.0 and 1.0 to scale the volume off of. pitch (number): Default : 1.0 . The pitch-shift multiplier. For 22kHz audio (most typical) it can have the range [0.005, 4.5]; for 44kHz audio it can have the range [0.0025, 2.25]. soundPath (string): Optional . The path to a custom soundfile (useful for playing sounds that are not registered in the Construction Set). Starts in Data Files\\Sound. Returns : executed (boolean) tes3.playVoiceover \u2693\ufe0e Causes a target actor to play a voiceover. local played = tes3 . playVoiceover ({ actor = ..., voiceover = ... }) Parameters : params (table) actor ( tes3mobileActor , tes3reference , string): The actor to play a voiceover. voiceover (number): Maps to tes3.voiceover constants. Returns : played (boolean) tes3.positionCell \u2693\ufe0e Positions a reference to another place. local executed = tes3 . positionCell ({ reference = ..., cell = ..., position = ..., orientation = ..., forceCellChange = ..., suppressFader = ..., teleportCompanions = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Default : tes3.mobilePlayer . The reference to reposition. cell ( tes3cell ): Optional . The cell to move the reference to. If not provided, the reference will be moved to a cell in the exterior worldspace at the position provided. position ( tes3vector3 , table): The position to move the reference to. orientation ( tes3vector3 , table): Optional . The new orientation of the reference. forceCellChange (boolean): Optional . When true, forces the game to update a reference that has moved within a single cell, as if it was moved into a new cell. suppressFader (boolean): Optional . When moving the player, can be used to prevent the fade in and out visual effect. teleportCompanions (boolean): Default : true . If used on the player, determines if companions should also be teleported. Returns : executed (boolean) tes3.pushKey \u2693\ufe0e Simulates pushing a keyboard key. tes3 . pushKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace. tes3.random \u2693\ufe0e Returns a value from Morrowind's random number generator. This is not preferrable to lua's math.random function, but may be necessary for reproducing Morrowind's generation. tes3 . random ( seed ) Parameters : seed (number): Optional . If provided, it the number generator is seeded with this value. Pointers to objects may be used, such as a reference's sceneNode, to create a consistent if less than random seed. tes3.rayTest \u2693\ufe0e Performs a ray test and returns various information related to the result(s). If findAll is set, the result will be a table of results, otherwise only the first result is returned. local result = tes3 . rayTest ({ position = ..., direction = ..., findAll = ..., maxDistance = ..., sort = ..., useModelBounds = ..., useModelCoordinates = ..., useBackTriangles = ..., observeAppCullFlag = ..., root = ..., ignoreSkinned = ..., returnColor = ..., returnNormal = ..., returnSmoothNormal = ..., returnTexture = ..., ignore = ... }) Parameters : params (table) position ( tes3vector3 , table): Position of the ray origin. direction ( tes3vector3 , table): Direction of the ray. Does not have to be unit length. findAll (boolean): If true, the ray test won't stop after the first result. maxDistance (number): Optional . The maximum distance that the test will run. sort (boolean): Default : true . If true, the results will be sorted by distance from the origin position. useModelBounds (boolean): If true, model bounds will be tested for intersection. Otherwise triangles will be used. useModelCoordinates (boolean): If true, model coordinates will be used instead of world coordinates. useBackTriangles (boolean): Include intersections with back-facing triangles. observeAppCullFlag (boolean): Default : true . Ignore intersections with culled (hidden) models. root (node ): Default*: tes3.game.worldSceneGraphRoot . Node pointer to node scene. ignoreSkinned (boolean): Ignore results from skinned objects. returnColor (boolean): Calculate and return the vertex color at intersections. returnNormal (boolean): Default : true . Calculate and return the vertex normal at intersections. returnSmoothNormal (boolean): Use normal interpolation for calculating vertex normals. returnTexture (boolean): Calculate and return the texture coordinate at intersections. ignore (table): Optional . An array of references and/or scene graph nodes to cull from the result(s). Returns : result ( niPickRecord , table) Example: Get Activation Target local hitResult = tes3 . rayTest ({ position = tes3 . getPlayerEyePosition (), direction = tes3 . getPlayerEyeVector () }) local hitReference = hitResult and hitResult . reference if ( hitReference == nil ) then return end tes3 . messageBox ( \"The player is looking at a '%s'\" , hitReference . object . name or hitReference . object . id ) Example: Get Camera Target local hitResult = tes3 . rayTest ({ position = tes3 . getCameraPosition (), direction = tes3 . getCameraVector () }) local hitReference = hitResult and hitResult . reference if ( hitReference == nil ) then return end tes3 . messageBox ( \"The camera is looking at a '%s'\" , hitReference . object . name or hitReference . object . id ) Example: Multiple Results local results = tes3 . rayTest { tes3 . getCameraPosition (), direction = tes3 . getCameraVector (), findAll = true } if results then for i , hit in pairs ( results ) do mwse . log ( \"Ray hit #%d: %s\" , i , hit . reference or \"<non-reference>\" ); end end Example: Save rayTest result for use at a later point local result = tes3 . rayTest { -- result can get invalidated position = tes3 . getPlayerEyePosition (), direction = tes3 . getPlayerEyeVector (), ignore = { tes3 . player } } local ref if result then ref = tes3 . makeSafeObjectHandle ( result . reference ) end -- Before using ref, now we can chack if it is valid if ref : valid () then -- Now we can safely do something with ref end tes3.releaseKey \u2693\ufe0e Simulates releasing a keyboard key. tes3 . releaseKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace. tes3.removeEffects \u2693\ufe0e Removes magic effects from a given reference. Requires that either the effect or castType parameter be provided. tes3 . removeEffects ( reference , effect , castType , chance , removeSpell ) Parameters : reference ( tes3reference ): Target reference to remove effects from. effect (number): Optional . Maps to tes3.effect constants. castType (number): Optional . Maps to tes3.spellType constants. chance (number): Default : 100 . The chance for the effect to be removed. removeSpell (boolean): Optional . If removing by cast type, determines if the spell should be removed from the target's spell list. Defaults to true if castType is not tes3.spellType.spell. This causes diseases and curses to be removed when dispelled. Example: Simulating a Dispel local function example ( e ) -- We only care about the player if ( e . mobile . objectType ~= tes3 . objectType . mobilePlayer ) then return end local cell = tes3 . mobilePlayer . cell if ( cell . isInterior and not cell . hasWater ) then return end local waterLevel = cell . waterLevel local headPosition = tes3 . mobilePlayer . position . z + tes3 . mobilePlayer . height local underwater = headPosition < waterLevel if underwater then -- There is a 50 % chance that any Water Breathing effect will be removed from the player tes3 . removeEffects ({ reference = tes3 . player , chance = 50 , effect = tes3 . effect . waterBreathing , }) end end event . register ( \"initialized\" , function () event . register ( \"calcMoveSpeed\" , example ) end ) tes3.removeItem \u2693\ufe0e Removes an item from a given reference's inventory. local removedCount = tes3 . removeItem ({ reference = ..., item = ..., itemData = ..., deleteItemData = ..., count = ..., playSound = ..., reevaluateEquipment = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to remove items from. item ( tes3item , string): The item to remove. itemData ( tes3itemData ): Optional . The item data for the exact item to remove. deleteItemData ( tes3itemData ): Optional . Whether to delete the item data after remove succeeds. Automatically set if itemData is used. Does not need to be specified for normal usage. count (number): Default : 1 . The maximum number of items to remove. playSound (boolean): Default : true . If false, the up/down sound for the item won't be played. reevaluateEquipment (boolean): Default : true . If true, and the item removed is armor, clothing, or a weapon, the actor will reevaluate its equipment choices to see if it needs to equip a new item. This does not affect the player. updateGUI (boolean): Default : true . If false, the function won't manually resync the player's GUI state. This can result in some optimizations, though tes3ui.forcePlayerInventoryUpdate() must manually be called after all inventory updates are finished. Returns : removedCount (number) tes3.removeItemData \u2693\ufe0e Removes and deletes item data from a given reference, or from their inventory. If no itemData is provided, it will be removed from the reference itself. local wasRemoved = tes3 . removeItemData ({ from = ..., item = ..., itemData = ..., force = ..., ignoreOwnership = ..., updateGUI = ... }) Parameters : params (table) from ( tes3reference , tes3mobileActor , string): The reference or mobile whose inventory will be modified. item ( tes3item , string): The item to remove item data for. itemData ( tes3itemData ): Optional . The exact item data to remove. If no itemData is provided, the itemData from the reference itself will be removed. force (boolean): If true, no checks are made to see if the item data should be deleted. It will always be purged. ignoreOwnership (boolean): Default : true . If force is false, a check will be made to see if the item data is empty and can be deleted. By default this ignores any ownership data. Setting this to false will override that behavior. updateGUI (boolean): Default : true . If false, the player or contents menu won't be updated. Returns : wasRemoved (boolean) tes3.removeSound \u2693\ufe0e Stops a sound playing. Without a reference, it will match unattached sounds. With a reference, it will only match a sound playing on that specific reference. tes3 . removeSound ({ sound = ..., reference = ... }) Parameters : params (table) sound ( tes3sound , string): The sound object, or id of the sound to look for. reference ( tes3reference , tes3mobileActor , string): Optional . The reference the sound is attached to. tes3.removeSpell \u2693\ufe0e Removes a spell from an actor's spell list. If the spell is passive, any active effects from that spell are retired. local wasRemoved = tes3 . removeSpell ({ reference = ..., actor = ..., spell = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to remove the spell from. To manipulate an actor without specifying any particular reference, use actor instead. actor ( tes3actor , string): Who to remove the spell from. Providing a base actor can be done before a save has been loaded, but may not correctly update effects for instanced versions of that actor in an active save. spell ( tes3spell , string): The spell to remove. updateGUI (boolean): Default : true . If true, the GUI will be updated respecting the removal of the spell. This can be useful to disable when batch-removing many spells. The batch should be ended with tes3.updateMagicGUI to reflect the changes. Returns : wasRemoved (boolean): True if the spell was successfully removed. This can be false if the spell comes from a race or birthsign. tes3.runLegacyScript \u2693\ufe0e This function will compile and run a mwscript chunk of code. This is not ideal to use, but can be used for features not yet exposed to lua. local executed = tes3 . runLegacyScript ({ script = ..., source = ..., command = ..., variables = ..., reference = ..., dialogue = ..., info = ... }) Parameters : params (table) script ( tes3script ): Default : tes3.worldController.scriptGlobals . The base script to base the execution from. source (number): The compilation source to use. Defaults to tes3.scriptSource.default command (string): The script text to compile and run. variables (tes3scriptVariables): Optional . If a reference is provided, the reference's variables will be used. reference ( tes3reference , tes3mobileActor , string): The reference to target for execution. dialogue ( tes3dialogue , string): Optional . If compiling for dialogue context, the dialogue associated with the script. info ( tes3dialogueInfo ): Optional . The info associated with the dialogue. Returns : executed (boolean) tes3.saveGame \u2693\ufe0e Saves the game. local saved = tes3 . saveGame ({ file = ..., name = ... }) Parameters : params (table) file (string): Default : \"quiksave\" . The filename of the save that will be created, without extension. name (string): Default : \"Quicksave\" . The display name of the save. Returns : saved (boolean) tes3.say \u2693\ufe0e Plays a sound file, with an optional alteration and subtitle. Note : MP3 voice files must conform to the MPEG Layer-3, 64 Kbps 44100 kHz, 16-bit mono specification. tes3 . say ({ reference = ..., soundPath = ..., pitch = ..., volume = ..., forceSubtitle = ..., subtitle = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to make say something. soundPath (string): A path to a valid sound file. pitch (number): Default : 1 . A pitch shift to adjust the sound with. volume (number): Default : 1 . The volume to play the sound at, relative to the voice mix channel. forceSubtitle (boolean): If true a subtitle will be shown, even if subtitles are disabled. subtitle (string): Optional . The subtitle to show if subtitles are enabled, or if forceSubtitle is set. tes3.set3rdPersonCameraOffset \u2693\ufe0e Changes the 3rd person camera's offset from the player's head. Note this function can be used once WorldController and MobilePlayer have finished initializing. tes3 . set3rdPersonCameraOffset ( offset ) Parameters : offset ( tes3vector3 ): The offset vector. tes3.setAIActivate \u2693\ufe0e Configures a mobile actor to activate an object. tes3 . setAIActivate ({ reference = ..., target = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ) target ( tes3reference ) reset (boolean): Default : true . tes3.setAIEscort \u2693\ufe0e Configures a mobile actor to escort another actor to a destination. tes3 . setAIEscort ({ reference = ..., target = ..., destination = ..., duration = ..., cell = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ) target ( tes3reference , tes3mobileActor ) destination ( tes3vector3 , table) duration (number): Optional . cell ( tes3cell , string): Optional . reset (boolean): Default : true . tes3.setAIFollow \u2693\ufe0e Configures a mobile actor to follow another actor to a destination. tes3 . setAIFollow ({ reference = ..., target = ..., destination = ..., duration = ..., cell = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ) target ( tes3reference , tes3mobileActor ) destination ( tes3vector3 , table): Optional . duration (number): Optional . cell ( tes3cell , string): Optional . reset (boolean): Default : true . tes3.setAITravel \u2693\ufe0e Configures a mobile actor to travel to a destination. tes3 . setAITravel ({ reference = ..., destination = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ) destination ( tes3vector3 , table) reset (boolean): Default : true . tes3.setAIWander \u2693\ufe0e Configures a mobile actor to wander around a cell. tes3 . setAIWander ({ reference = ..., idles = ..., range = ..., duration = ..., time = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ) idles (table) range (number): Optional . duration (number): Optional . time (number): Optional . reset (boolean): Default : true . tes3.setAnimationTiming \u2693\ufe0e This function sets a reference's animation groups' timings to a specified value. tes3 . setAnimationTiming ({ reference = ..., timing = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): A reference whose animation groups' timings to set. timing (number, table): If one parameter is provided, all animation data timings will be set to the timing provided. If a table with 3 timings is provided, animation data timings will be set accordingly. tes3.setDestination \u2693\ufe0e Sets or changes the destination of a door to a new location. tes3 . setDestination ({ reference = ..., position = ..., orientation = ..., cell = ... }) Parameters : params (table) reference ( tes3reference ): The door reference that will be updated. position ( tes3vector3 , table): The new coordinates of the transition. orientation ( tes3vector3 , table): The new rotation to use after transition. cell ( tes3cell , string): Optional . The cell to transition to, if transitioning to an interior. tes3.setEnabled \u2693\ufe0e Enables or disables a reference. local success = tes3 . setEnabled ({ reference = ..., toggle = ..., enabled = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to enable/disable. toggle (boolean): If true, the enabled state will be toggled. enabled (boolean): Default : true . If not toggling, setting enabled to true will enable the reference or to false will disable the reference. Returns : success (boolean) tes3.setGlobal \u2693\ufe0e Sets the value of a global value. If the global could not be found, the function returns false. local value = tes3 . setGlobal ( id , value ) Parameters : id (string) value (number) Returns : value (boolean) tes3.setItemIsStolen \u2693\ufe0e This function changes an item's stolen flag. Morrowind handles stealing by marking the base item (not the inventory stack) with NPCs that you have stolen that item from. The NPC will recognize an item as stolen if they are marked as stolen on the base item. tes3 . setItemIsStolen ( item , from , stolen ) Parameters : item ( tes3item ): The item whose stolen flag to modify. from ( tes3baseObject ): The location the item is stolen from. stolen (boolean): Default : true . If this parameter is set to true, the item will be flagged as stolen. Otherwise, the item's stolen flag will be removed. tes3.setJournalIndex \u2693\ufe0e Sets the index of a given journal in a way similar to the mwscript function SetJournalIndex. local wasSet = tes3 . setJournalIndex ({ id = ..., index = ..., speaker = ..., showMessage = ... }) Parameters : params (table) id ( tes3dialogue , string) index (number) speaker ( tes3mobileActor , tes3reference , string) showMessage (boolean): If set, a message may be shown to the player. Returns : wasSet (boolean) tes3.setKillCount \u2693\ufe0e Sets player's kill count of a certain type of actor. tes3 . setKillCount ({ actor = ..., count = ... }) Parameters : params (table) actor ( tes3actor , string): The actor (or their ID) for whom to set player's kill count. count (number): Number of kills that will be set. tes3.setLockLevel \u2693\ufe0e Sets a locked reference's lock level. This does not lock the object. local set = tes3 . setLockLevel ({ reference = ..., level = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) level (number) Returns : set (boolean) tes3.setMarkLocation \u2693\ufe0e This function sets the player's mark location to the one specified. tes3 . setMarkLocation ({ position = ..., rotation = ..., cell = ... }) Parameters : params (table) position ( tes3vector3 ): Coordinates of the mark's position. rotation (number): Default : Player's current rotation. . This argument controls which direction the player's mark location will be facing. cell ( tes3cell ): Optional . A cell in which the mark should be placed. tes3.setOwner \u2693\ufe0e This function sets the owner of a reference. tes3 . setOwner ({ reference = ..., remove = ..., owner = ..., requiredGlobal = ..., requiredRank = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): A reference whose owner to set. remove (boolean): Optional . If this parameter is set to true, reference's owner field will be removed. owner ( tes3npc , tes3faction , string): Assigns this NPC or a faction as the owner of the reference. requiredGlobal ( tes3globalVariable ): Optional . If owner is set to NPC, requiredGlobal variable can be set. requiredRank (number): Default : 0 . If owner is set to faction, requitedRank variable controls minimal rank in faction the player has to have to be able to freely take the reference. tes3.setPlayerControlState \u2693\ufe0e Enables or disables player's controls state. local changedControlState = tes3 . setPlayerControlState ({ enabled = ..., attack = ..., jumping = ..., magic = ..., vanity = ..., viewSwitch = ... }) Parameters : params (table) enabled (boolean): Optional . Setting this to false will disable any kind of control. attack (boolean): Optional . If this is false, it will block player from attacking. jumping (boolean): Optional . If this is false, it will block player from jumping. magic (boolean): Optional . If this is false, it will block player from using magic. vanity (boolean): Optional . If this is false, it will block player from going to vanity mode. viewSwitch (boolean): Optional . If this is false, it will block player changing view mod from 1st to 3rd person camera and vice versa. Returns : changedControlState (boolean) tes3.setSourceless \u2693\ufe0e Sets an object (of any kind) to be sourceless, which are objects the game does not store in savegames. This can be useful for mod-created temporary objects which are not necessary to save. tes3 . setSourceless ({ object = ..., sourceless = ... }) Parameters : params (table) object ( tes3baseObject ): The object whose sourceless flag to modify. sourceless (boolean): Default : true . Allows flagging an object as sourceless or undoing that action. tes3.setStatistic \u2693\ufe0e Sets a statistic on a given actor. This should be used instead of manually setting values on the game structures, to ensure that events and GUI elements are properly handled. Either skill, attribute, or name must be provided. tes3 . setStatistic ({ attribute = ..., base = ..., current = ..., limit = ..., name = ..., reference = ..., skill = ..., value = ... }) Parameters : params (table) attribute (number): Optional . The attribute to set. base (number): Optional . If set, the base value will be set. current (number): Optional . If set, the current value will be set. limit (boolean): If set, the attribute won't rise above 100 or fall below 0. name (string): Optional . A generic name of an attribute to set. reference ( tes3mobileActor , tes3reference , string) skill (number): Optional . The skill to set. value (number): Optional . If set, both the base and current value will be set. tes3.setTrap \u2693\ufe0e Sets the trap on a given reference. local trapped = tes3 . setTrap ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) spell ( tes3spell , string) Returns : trapped (boolean) tes3.setVanityMode \u2693\ufe0e Toggles the camera into vanity mode. In vanity mode the camera is in third person and it is orbiting slowly around the player character. Returns true if changed to vanity mode. Note that unlike the vanity mode caused by not doing anything for a while, this vanity mode must be toggled to go off. local changedVanityMode = tes3 . setVanityMode ({ enabled = ..., checkVanityDisabled = ..., toggle = ... }) Parameters : params (table) enabled (boolean): Default : true . This flag sets the vanity mode as enabled or disabled. checkVanityDisabled (boolean): Default : true . This will prevent changing vanity mode according to vanityDisabled flag on tes3.mobilePlayer. toggle (boolean): Optional . When this flag is set to true. The vanity mode will be toggled. If the player was in vanity mode, this will make the player leave vanity mode. Conversly, if the player wasn't in the vanity mode, this will turn on the vanity mode. Returns : changedVanityMode (boolean) tes3.setWerewolfKillCount \u2693\ufe0e Sets player's kill count as a werewolf. tes3 . setWerewolfKillCount ({ count = ... }) Parameters : params (table) count (number): Number of kills. tes3.showAlchemyMenu \u2693\ufe0e This function opens alchemy menu. tes3 . showAlchemyMenu () tes3.showRepairServiceMenu \u2693\ufe0e Opens the service repair menu. tes3 . showRepairServiceMenu () tes3.showRestMenu \u2693\ufe0e This function opens the resting menu and returns true on success. If the player can't rest currently, it returns false. Various parameters can be used to allow resting in situations not normally possible. local success = tes3 . showRestMenu ({ checkForEnemies = ..., checkForSolidGround = ..., checkSleepingIllegal = ..., checkIsWerewolf = ..., showMessage = ..., resting = ..., waiting = ... }) Parameters : params (table) checkForEnemies (boolean): Default : true . Perform a check whether there are enemies nearby before opening rest menu. If there are, false is returned. checkForSolidGround (boolean): Default : true . Perform a check if the player is underwater. If underwater, false is returned. checkSleepingIllegal (boolean): Default : true . Perform a check if the sleeping in the current cell is illegal. If illegal, then the player will be prompted to wait instead of rest. checkIsWerewolf (boolean): Default : true . Perform a check if the player is Werewolf. If they are, then the player will be prompted to wait instead of rest. showMessage (boolean): Default : true . Should a messagebox be shown if the player can't open resting menu because some condition isn't met. resting (boolean): Default : true . Should this be a rest? waiting (boolean): Optional . Or, is this a wait? Returns : success (boolean) tes3.skipAnimationFrame \u2693\ufe0e Skips a given reference's animation for a single frame. tes3 . skipAnimationFrame ({ reference = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference whose animation frame will be skipped. tes3.streamMusic \u2693\ufe0e This function interrupts the current music to play the specified music track. local executed = tes3 . streamMusic ({ path = ..., situation = ..., crossfade = ... }) Parameters : params (table) path (string): Path to the music file, relative to Data Files/music/. situation (number): Default : tes3.musicSituation.uninterruptible . Determines what kind of gameplay situation the music should stay active for. Explore music plays during non-combat, and ends when combat starts. Combat music starts during combat, and ends when combat ends. Uninterruptible music always plays, ending only when the track does. This value maps to tes3.musicSituation constants. crossfade (number): Default : 1.0 . The duration in seconds of the crossfade from the old to the new track. The default is 1.0. Returns : executed (boolean) tes3.tapKey \u2693\ufe0e Simulates tapping a keyboard key. tes3 . tapKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace. tes3.testLineOfSight \u2693\ufe0e Checks if there is a clear line of sight between two references, or two points in space, in the same method that the game uses for actor vision. You should pass two references, or two positions and heights. Only certain object types count as blocking for the purposes of the test: Statics, activators, containers, doors, and lights with non-zero weight. The collision root node is used for testing, if present in the model. local hasLineOfSight = tes3 . testLineOfSight ({ reference1 = ..., reference2 = ..., position1 = ..., height1 = ..., position2 = ..., height2 = ... }) Parameters : params (table) reference1 ( tes3reference ): Position of the starting point of the LoS check. For actors, this point is set to position of this reference's head. For other objects the starting point is at the top of its bounding box. reference2 ( tes3reference ): Position of the ending point of the LoS check. For actors, this point is set to position of this reference's head. For other objects the ending point is at the top of its bounding box. position1 ( tes3vector3 , table): Position of the starting point of the LoS check. Modified by height1. height1 ( tes3vector3 , table): Optional . Moves the starting point upwards (+Z direction) by this amount. Normally used to simulate head height from a position that is on the ground. Defaults to 0. position2 ( tes3vector3 , table): Position of the ending point of the LoS check. Modified by height2. height2 ( tes3vector3 , table): Optional . Moves the starting point upwards (+Z direction) by this amount. Normally used to simulate head height from a position that is on the ground. Defaults to 0. Returns : hasLineOfSight (boolean) tes3.togglePOV \u2693\ufe0e Forces a toggle of the player's POV the next simulation frame, and returns if the player was previously in 3rd person. Multiple calls in the same frame will not stack. local was3rdPerson = tes3 . togglePOV () Returns : was3rdPerson (boolean) tes3.transferItem \u2693\ufe0e Moves one or more items from one reference to another. Returns the actual amount of items successfully transferred. local transferredCount = tes3 . transferItem ({ from = ..., to = ..., item = ..., itemData = ..., count = ..., playSound = ..., limitCapacity = ..., reevaluateEquipment = ..., updateGUI = ... }) Parameters : params (table) from ( tes3reference , tes3mobileActor , string): Who to take items from. to ( tes3reference , tes3mobileActor , string): Who to give items to. item ( tes3item , string): The item to transfer. itemData ( tes3itemData ): Optional . The specific item data to transfer if, for example, you want to transfer a specific player item. count (number): Default : 1 . The maximum number of items to transfer. playSound (boolean): Default : true . If false, the up/down sound for the item won't be played. limitCapacity (boolean): Default : true . If false, items can be placed into containers that shouldn't normally be allowed. This includes organic containers, and containers that are full. reevaluateEquipment (boolean): Default : true . If true, and the item transferred is armor, clothing, or a weapon, the actors will reevaluate their equipment choices to see if the new item is worth equipping. This does not affect the player. updateGUI (boolean): Default : true . If false, the function won't manually resync the player's GUI state. This can result in some optimizations, though tes3ui.forcePlayerInventoryUpdate() must manually be called after all inventory updates are finished. Returns : transferredCount (number) tes3.triggerCrime \u2693\ufe0e Emulates the player committing a crime. local executed = tes3 . triggerCrime ({ criminal = ..., forceDetection = ..., type = ..., value = ..., victim = ... }) Parameters : params (table) criminal ( tes3mobileActor , tes3reference , string): Default : tes3.mobilePlayer . forceDetection (boolean): Can be set to true to ignore normal detection checks. type (number): Default : tes3.crimeType.stealing . Maps to tes3.crimeType constants. value (number): Penalty for the crime. Defaults to 25 for pickpocketing. victim ( tes3mobileActor , tes3reference , string): Default : tes3.mobilePlayer . Returns : executed (boolean) tes3.undoTransform \u2693\ufe0e Changes a reference back from werewolf form to human. This function works only on a reference infected with Lycanthropy, be it the player or any other reference. Returns true if successful. local success = tes3 . undoTransform ({ reference = ... }) Parameters : params (table) reference ( tes3reference ): A reference to change back to human. Returns : success (boolean) tes3.unhammerKey \u2693\ufe0e Stops simulating hammering a keyboard key. tes3 . unhammerKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace. tes3.unlock \u2693\ufe0e Unlocks an object. Returns true if the object can be and wasn't already unlocked. local unlocked = tes3 . unlock ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) Returns : unlocked (boolean) tes3.updateInventoryGUI \u2693\ufe0e Forces the GUI to update inventory-relevant elements for a given reference. This can be used after many calls to inventory-manipulating functions while passing updateGUI as false to resync inventory tiles, container weights, and companion data. tes3 . updateInventoryGUI ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to update GUI elements for. tes3.updateJournal \u2693\ufe0e Updates the journal index in a way similar to the mwscript function Journal. local wasSet = tes3 . updateJournal ({ id = ..., index = ..., showMessage = ... }) Parameters : params (table) id ( tes3dialogue , string) index (number) showMessage (boolean): If set, a message may be shown to the player. Returns : wasSet (boolean) tes3.updateMagicGUI \u2693\ufe0e Forces the GUI to update magic-relevant elements for a given reference. This can be used after many calls to magic- or magic item-manipulating functions while passing updateGUI as false to resync inventory tiles, container weights, and companion data. tes3 . updateMagicGUI ({ reference = ..., updateSpells = ..., updateEnchantments = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to update GUI elements for. updateSpells (boolean): Default : true . Determines if the spell and power lists are refreshed. updateEnchantments (boolean): Default : true . Determines if the enchanted items list is refreshed. tes3.wakeUp \u2693\ufe0e This function wakes player up and returns true if successful. Note this function returns false if WorldController or MobilePlayer aren't initialized, and if the player is not sleeping or waiting local wokeUp = tes3 . wakeUp () Returns : wokeUp (boolean)","title":"tes3"},{"location":"apis/tes3/#tes3","text":"The tes3 library provides the majority of the functions for interacting with the game system.","title":"tes3"},{"location":"apis/tes3/#properties","text":"","title":"Properties"},{"location":"apis/tes3/#tes3animationstate","text":"Constant values relating to animation state.","title":"tes3.animationState"},{"location":"apis/tes3/#tes3datahandler","text":"One of the core game objects. Returns : result ( tes3dataHandler )","title":"tes3.dataHandler"},{"location":"apis/tes3/#tes3game","text":"One of the core game objects. Returns : result ( tes3game )","title":"tes3.game"},{"location":"apis/tes3/#tes3installdirectory","text":"The currently executed root Morrowind installation path. Returns : result (string)","title":"tes3.installDirectory"},{"location":"apis/tes3/#tes3magicschoolskill","text":"This table is used to convert numerical magic school IDs to their respective skill IDs. These constants will return their respective tes3.skill constants. Returns : result (number) Example: Convert magic school from event data to a respective skill local function OnSpellFailed ( e ) local skill = tes3 . magicSchoolSkill [ e . expGainSchool ] -- Note: e.expGainSchool is a value in tes3.magicSchool constants table tes3 . mobilePlayer : exerciseSkill ( skill , 100 ) end event . register ( \"spellCastedFailure\" , OnSpellFailed )","title":"tes3.magicSchoolSkill"},{"location":"apis/tes3/#tes3mobileplayer","text":"The player's mobile actor. Returns : result ( tes3mobilePlayer )","title":"tes3.mobilePlayer"},{"location":"apis/tes3/#tes3player","text":"A reference to the player. Returns : result ( tes3reference )","title":"tes3.player"},{"location":"apis/tes3/#tes3worldcontroller","text":"One of the core game objects. Returns : result ( tes3worldController )","title":"tes3.worldController"},{"location":"apis/tes3/#functions","text":"","title":"Functions"},{"location":"apis/tes3/#tes3addarmorslot","text":"Registers a new armor slot. Adds a new place for armor pieces with a matching slot number to equip to. local wasAdded = tes3 . addArmorSlot ({ slot = ..., name = ..., weight = ..., scalar = ... }) Parameters : params (table) slot (number): Armor slot number. A number greater than 10 to configure a slot for. name (string) weight (number): Default : 0 . A stand-in for the armor base weight value, typically controlled by a GMST (e.g. iHelmWeight). scalar (number): Default : 0.1 . A multiplier with range 0.0-1.0 that controls how much of an item's armor value applies to a character's overall armor rating. For comparison, standard chest armor uses 0.3, helmets, greaves and pauldrons use 0.1, and gauntlets use 0.05. Returns : wasAdded (boolean)","title":"tes3.addArmorSlot"},{"location":"apis/tes3/#tes3addclothingslot","text":"Registers a new clothing slot. Adds a new place for clothing pieces with a matching slot number to equip to. tes3 . addClothingSlot ({ slot = ..., name = ... }) Parameters : params (table) slot (number): Clothing slot number. A number greater than 9 to configure a slot for. name (string)","title":"tes3.addClothingSlot"},{"location":"apis/tes3/#tes3additem","text":"Adds an item to a given reference's inventory or mobile's inventory. local addedCount = tes3 . addItem ({ reference = ..., item = ..., itemData = ..., soul = ..., count = ..., playSound = ..., limit = ..., reevaluateEquipment = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to give items to. item ( tes3item , tes3leveledItem , string): The item to add. If a leveled item is passed, it will be resolved and added. itemData ( tes3itemData ): Optional . The item data for the item. soul ( tes3creature ): Optional . For creating filled soul gems. count (number): Default : 1 . The maximum number of items to add. playSound (boolean): Default : true . If false, the up/down sound for the item won't be played. limit (boolean): If false, items can be placed into containers that shouldn't normally be allowed. This includes organic containers, and containers that are full. reevaluateEquipment (boolean): Default : true . If true, and the item added is armor, clothing, or a weapon, the actor will reevaluate its equipment choices to see if the new item is worth equipping. This does not affect the player. updateGUI (boolean): Default : true . If false, the function won't manually resync the player's GUI state. This can result in some optimizations, though tes3ui.forcePlayerInventoryUpdate() must manually be called after all inventory updates are finished. Returns : addedCount (number)","title":"tes3.addItem"},{"location":"apis/tes3/#tes3additemdata","text":"Creates an item data if there is room for a new stack in a given inventory. This can be then used to add custom user data or adjust an item's condition. This will return nil if no item data could be allocated for the item -- for example if the reference doesn't have the item in their inventory or each item of that type already has item data. local createdData = tes3 . addItemData ({ to = ..., item = ..., updateGUI = ... }) Parameters : params (table) to ( tes3reference , tes3mobileActor , string): The reference or mobile whose inventory will be modified. item ( tes3item , string): The item to create item data for. updateGUI (boolean): Default : true . If false, the player or contents menu won't be updated. Returns : createdData ( tes3itemData )","title":"tes3.addItemData"},{"location":"apis/tes3/#tes3addjournalentry","text":"This function creates a new journal entry. It can be called once the world controller is loaded. tes3 . addJournalEntry ({ text = ..., showMessage = ... }) Parameters : params (table) text (string): The text of the new Journal entry. showMessage (boolean): Default : true . If this parameter is true, a \"Your journal has been updated\" message will be displayed.","title":"tes3.addJournalEntry"},{"location":"apis/tes3/#tes3addmagiceffect","text":"This function creates a new custom magic effect. The effect can be scripted through lua. This function should be used inside magicEffectsResolved event callback. local effect = tes3 . addMagicEffect ({ id = ..., name = ..., baseCost = ..., school = ..., size = ..., sizeCap = ..., speed = ..., description = ..., lighting = ..., icon = ..., particleTexture = ..., castSound = ..., boltSound = ..., hitSound = ..., areaSound = ..., castVFX = ..., boltVFX = ..., hitVFX = ..., areaVFX = ..., allowEnchanting = ..., allowSpellmaking = ..., appliesOnce = ..., canCastSelf = ..., canCastTarget = ..., canCastTouch = ..., casterLinked = ..., hasContinuousVFX = ..., hasNoDuration = ..., hasNoMagnitude = ..., illegalDaedra = ..., isHarmful = ..., nonRecastable = ..., targetsAttributes = ..., targetsSkills = ..., unreflectable = ..., usesNegativeLighting = ..., onTick = ..., onCollision = ... }) Parameters : params (table) id (number): Id of the new effect. Maps to newly claimed tes3.effect constants with tes3.claimSpellEffectId() . If the effect of this id already exists, an error will be thrown. name (string): Default : Unnamed Effect . Name of the effect. baseCost (number): Default : 1 . Base magicka cost for the effect. school (number): Default : tes3.magicSchool.alteration . The magic school the new effect will be assigned to. Maps to tes3.magicSchool constants. size (number): Default : 1 . The size scale for the spells containing this magic effect. sizeCap (number): Default : 1 . The maximum possible size of the projectile. speed (number): Default : 1 . description (string): Default : No description available. . Description for the effect. lighting (table): Optional . x (number): Default : 1 . Value of red color channel. In range of 0 - 1. y (number): Default : 1 . Value of green color channel. In range of 0 - 1. z (number): Default : 1 . Value of blue color channel. In range of 0 - 1. icon (string): Path to the effect icon. Must be a string no longer than 31 characters long. Use double \\ as path separator. particleTexture (string): Path to the particle texture to use for the effect. Must be a string no longer than 31 characters long. castSound (string): The sound ID which will be played on casting a spell with this effect. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used. boltSound (string): The sound ID which will be played when a spell with this effect is in flight. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used. hitSound (string): The sound ID which will be played when a spell with this effect hits something. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used. areaSound (string): The sound ID which will be played on area of effect impact. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used. castVFX ( tes3physicalObject ): Optional . The visual played when a spell with this effect is cast. boltVFX ( tes3physicalObject ): Optional . The visual played when a spell with this effect is in flight. hitVFX ( tes3physicalObject ): Optional . The visual played when a spell with this effect hits something. areaVFX ( tes3physicalObject ): Optional . The visual played when a spell with this effect, with area of effect hits something. allowEnchanting (boolean): Default : true . A flag which controls whether this effect can be used in a custom enchantment. allowSpellmaking (boolean): Default : true . A flag which controls whether this effect can be used in a custom spell. appliesOnce (boolean): Default : true . A flag which controls whether this effect applies once or is a ticking effect. canCastSelf (boolean): Default : true . A flag which controls whether this effect can be used with cast on self range. canCastTarget (boolean): Default : true . A flag which controls whether this effect can be used with cast on target range. canCastTouch (boolean): Default : true . A flag which controls whether this effect can be used with cast on touch range. casterLinked (boolean): Default : true . hasContinuousVFX (boolean): Default : true . A flag which controls whether the effect's visual is continuously played during the whole duration of the effect. hasNoDuration (boolean): Default : true . A flag which controls whether this effect doesn't have duration. hasNoMagnitude (boolean): Default : true . A flag which controls whether this effect doesn't have magnitude. illegalDaedra (boolean): Default : true . A flag which controls whether this effect is illegal to use in public, because it summons Daedra. Note: this mechanic is not implemented in the game. Some mods might rely on this parameter. isHarmful (boolean): Default : true . A flag which controls whether this effect is considered harmful and casting it can be considered as an attack. nonRecastable (boolean): Default : true . A flag which controls whether this effect can be recast while it already is in duration. targetsAttributes (boolean): Default : true . A flag which controls whether this effect targets a certain attribute or attributes. targetsSkills (boolean): Default : true . A flag which controls whether this effect targets a certain skill or skills. unreflectable (boolean): Default : true . A flag which controls whether this effect can be reflected. usesNegativeLighting (boolean): Default : true . A flag which controls whether this effect uses negative lighting. onTick (function): Optional . A function which will be called on each tick of a spell containing this effect. A table tickParams will be passed to the callback function. Note: dt (frame time) scaling is handled automatically. tickParams (table) effectId (number) sourceInstance ( tes3magicSourceInstance ): Access to the magic source of the effect instance. deltaTime (number): The time passed since the last tick of the spell. effectInstance ( tes3magicEffectInstance ): Access to the magic effect instance. effectIndex (number): The index of the effect in the spell. In addition, a function registerd as onTick can also call the following methods: trigger( triggerParams ): Allows the effect to run through the normal spell event system. Parameters: triggerParams (table) negateOnExpiry (boolean): Optional. Default: true If this flag is true , the effect will be negated on expiry. isUncapped (boolean): Optional. attribute (number): Optional. Default: tes3.effectAttribute.nonResistable The attribute used in resistance calculations agains this effect. Maps to values in tes3.effectAttribute namespace. type (number): Optional. Default: tes3.effectEventType.boolean . This flag controls how the effect behaves. For example, tes3.effectEventType.modStatistic will make the effect work as calling tes3.modStatistic . Maps to values in tes3.effectEventType namespace. value (number): Optional. Default: 0 . The variable this effect changes. resistanceCheck(resistParams) (function): Optional. The function passed as resistanceCheck will be used on any of the game's spell resistance checks. For example, the only effect in vanilla Morrowind that implements this function is Water Walking. It disallows using a spell with Water Walking when the player is deep underwater, by setting it as expired. So, returning true from this function will set your effect to expired, and depending on your trigger code may stop processing. The function passed here must returns boolean values. Parameters resistParams (table) sourceInstance ( tes3magicSourceInstance ): Access to the magic source of the effect instance. effectInstance ( tes3magicEffectInstance ): Access to the magic effect instance. effectIndex (number): The index of the effect in the spell. triggerBoundWeapon( id ): Performs vanilla weapon summoning logic. It will create a summoned version of the weapon with provided ID. Parameters: id (string): The ID of the weapon object to summon. triggerBoundArmor( params ): Performs vanilla armor summoning logic. It can summon one or two armor objects with provided ID(s). Parameters: params (table) id (string): The ID of the armor object to summon. id2 (string): Optional. The ID of the additional armor object to summon. triggerSummon( id ): Performs vanilla creature summoning logic. It will create a summoned version of a creature with provided ID. Parameters: id (string): The ID of the creature object to summon. onCollision (function): Optional . A function which will be called when a spell containing this spell effect collides with something. Returns : effect ( tes3effect ) Example: Fire Damage effect -- Claiming an ID is needed before actually -- creating an effect with that ID tes3 . claimSpellEffectId ( \"customFireDmg\" , 220 ) local function onFireDmgTick ( tickParams ) -- This will print current health for any actor our spell hit tes3 . messageBox ( \"%s, health: %s\" , tickParams . effectInstance . target . object . id , tickParams . effectInstance . target . mobile . health . current ) tickParams : trigger ({ type = tes3 . effectEventType . modStatistic , -- The resistance attribute against Fire Damage should be Resist Fire attribute = tes3 . effectAttribute . resistFire , value = tickParams . effectInstance . target . mobile . health , negateOnExpiry = false , isUncapped = true , }) end event . register ( \"magicEffectsResolved\" , function () tes3 . addMagicEffect ({ -- The ID we claimed before is now available in tes3.effect namespace id = tes3 . effect . customFireDmg , -- This information if just copied from the Construction Set -- name = \"Fire Damage\" , description = ( \"This spell effect produces a manifestation of elemental fire. Upon \" .. \"contact with an object, this manifestation explodes, causing damage.\" ), baseCost = 5 , school = tes3 . magicSchool . destruction , size = 1.25 , sizeCap = 50 , speed = 1 , lighting = { x = 0.99 , y = 0.26 , z = 0.53 }, usesNegativeLighting = false , icon = \"s \\\\ Tx_S_fire_damage.tga\" , particleTexture = \"vfx_firealpha00A.tga\" , castSound = \"destruction cast\" , castVFX = \"VFX_DestructCast\" , boltSound = \"destruction bolt\" , boltVFX = \"VFX_DestructBolt\" , hitSound = \"destruction hit\" , hitVFX = \"VFX_DestructHit\" , areaSound = \"destruction area\" , areaVFX = \"VFX_DestructArea\" , -- -- appliesOnce = false , hasNoDuration = false , hasNoMagnitude = false , illegalDaedra = false , unreflectable = false , casterLinked = false , nonRecastable = false , targetsAttributes = false , targetsSkills = false , onTick = onFireDmgTick , }) end ) event . register ( \"loaded\" , function () local spell1 = tes3 . createObject ({ objectType = tes3 . objectType . spell }) tes3 . setSourceless ( spell1 ) spell1 . name = \"TEST SPELL - self\" spell1 . magickaCost = 1 local effect = spell1 . effects [ 1 ] effect . id = tes3 . effect . customFireDmg effect . rangeType = tes3 . effectRange . self effect . min = 10 effect . max = 10 effect . duration = 10 effect . radius = 0 effect . skill = - 1 effect . attribute = - 1 local spell2 = tes3 . createObject ({ objectType = tes3 . objectType . spell }) tes3 . setSourceless ( spell2 ) spell2 . name = \"TEST SPELL - target\" spell2 . magickaCost = 1 local effect = spell2 . effects [ 1 ] effect . id = tes3 . effect . customFireDmg effect . rangeType = tes3 . effectRange . target effect . min = 3 effect . max = 3 effect . duration = 10 effect . radius = 15 effect . skill = - 1 effect . attribute = - 1 local spell3 = tes3 . createObject ({ objectType = tes3 . objectType . spell }) tes3 . setSourceless ( spell3 ) spell3 . name = \"TEST SPELL - touch\" spell3 . magickaCost = 1 local effect = spell3 . effects [ 1 ] effect . id = tes3 . effect . customFireDmg effect . rangeType = tes3 . effectRange . touch effect . min = 3 effect . max = 3 effect . duration = 10 effect . radius = 0 effect . skill = - 1 effect . attribute = - 1 tes3 . addSpell ({ reference = tes3 . mobilePlayer , spell = spell1 }) tes3 . addSpell ({ reference = tes3 . mobilePlayer , spell = spell2 }) tes3 . addSpell ({ reference = tes3 . mobilePlayer , spell = spell3 }) end )","title":"tes3.addMagicEffect"},{"location":"apis/tes3/#tes3addsoulgem","text":"Causes a misc item to be recognized as a soul gem, so that it can be used for soul trapping. local wasAdded = tes3 . addSoulGem ({ item = ... }) Parameters : params (table) item ( tes3misc , string): The item to recognize as a soul gem. Returns : wasAdded (boolean)","title":"tes3.addSoulGem"},{"location":"apis/tes3/#tes3addspell","text":"Adds a spell to an actor's spell list. If the spell is passive, the effects will be applied. local wasAdded = tes3 . addSpell ({ reference = ..., actor = ..., spell = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to give the spell to. To manipulate an actor without specifying any particular reference, use actor instead. actor ( tes3actor , string): Who to give the spell to. Providing a base actor can be done before a save has been loaded, but may not correctly update effects for instanced versions of that actor in an active save. spell ( tes3spell , string): The spell to add. updateGUI (boolean): Default : true . If true, the GUI will be updated respsecting the adding of the spell. This can be useful to disable when batch-adding many spells. The batch should be ended with tes3.updateMagicGUI to reflect the changes. Returns : wasAdded (boolean): True if the spell was successfully added. This can be false if the actor's race or birthsign already contains the spell.","title":"tes3.addSpell"},{"location":"apis/tes3/#tes3adjustsoundvolume","text":"Changes the volume of a sound that is playing on a given reference. tes3 . adjustSoundVolume ({ sound = ..., reference = ..., mixChannel = ..., volume = ... }) Parameters : params (table) sound ( tes3sound , string): The sound object, or id of the sound to look for. reference ( tes3reference , tes3mobileActor , string): The reference to attach the sound to. mixChannel (number): Default : tes3.audioMixType.effects . The channel to base volume off of. Maps to tes3.audioMixType constants. volume (number): Default : 1.0 . A value between 0.0 and 1.0 to scale the volume off of.","title":"tes3.adjustSoundVolume"},{"location":"apis/tes3/#tes3advancetime","text":"Advances the game time. Can be used to simulate player resting. local hoursPassed = tes3 . advanceTime ({ hours = ..., resting = ..., updateEnvironment = ... }) Parameters : params (table) hours (number): How many hours to progress. resting (boolean): Optional . Should advancing time count as resting? If set to true invokes usual sleeping mechanics: health, fatigue and magicka restoration, and possible rest interruption. The length of the rest will be equal to hours parameter, rounded down to nearest natural number. updateEnvironment (boolean): Default : true . Controls if the weather system is updated for each hour passed. Returns : hoursPassed (number)","title":"tes3.advanceTime"},{"location":"apis/tes3/#tes3applymagicsource","text":"local instance = tes3 . applyMagicSource ({ reference = ..., source = ..., name = ..., effects = ..., createCopy = ..., fromStack = ..., castChance = ..., target = ..., bypassResistances = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): A reference on which the magic source will be applied. source ( tes3object ): Optional . A magic source to apply. name (string): Optional . If applying alchemy as a source, you can specifiy a name for the magic source. effects (table): Optional . A table of custom effects to apply as a potion. Maximal number of effects is 8. id (boolean): Default : -1 . ID of the effect. skill (number): Default : -1 . If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Skill, a skill should be provided. This also applies to any custom spell effect which operates on a certain skill. This value maps to tes3.skill constants. attribute (number): Default : -1 . If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Attribute, an attribute should be provided. This also applies to any custom spell effect which operates on a certain attribute. This value maps to tes3.attribute constants. range (number): Default : tes3.effectRange.self . The range of the effect. This maps to tes3.effectRange constants. radius (number): Default : 0 . The radius of the effect. duration (number): Default : 0 . Number of seconds the effect is going to be active. min (number): Default : 0 . The minimal magintude of the effect per tick. max (number): Default : 0 . The maximal magnitude of the effect per tick. createCopy (boolean): Optional . This parameter controls whether the function will return the original magic source or a copy of the magic source. This parameter is only used if source is alchemy. fromStack ( tes3equipmentStack ): Optional . The piece of equipment this magic source is coming from. The fromStack has to be an already equipped item from tes3actor.equipment. This will probably change in the future. castChance (number): Optional . This parameter allows overriding the casting chance of the magic source. target ( tes3reference , tes3mobileActor , string): Optional . The target of the magic. bypassResistances (boolean): Optional . Is this effect going to bypass magic resistance? Returns : instance ( tes3magicSourceInstance )","title":"tes3.applyMagicSource"},{"location":"apis/tes3/#tes3begintransform","text":"Changes a reference to werewolf form. This function works only on a reference infected with Lycanthropy, be it the player or any other reference. Returns true if successful. local success = tes3 . beginTransform ({ reference = ... }) Parameters : params (table) reference ( tes3reference ): A reference to change to werewolf form. Returns : success (boolean)","title":"tes3.beginTransform"},{"location":"apis/tes3/#tes3calculateprice","text":"Calculates a price, given a merchant and associated trading data. This is useful beyond accessing the object's .value field in that it raises the appropriate events to let other mods modify the values. local price = tes3 . calculatePrice ({ object = ..., basePrice = ..., buying = ..., selling = ..., merchant = ..., bartering = ..., repairing = ..., training = ..., count = ..., itemData = ..., skill = ... }) Parameters : params (table) object ( tes3object ): Optional . The object to calculate the price for. If not provided, basePrice is required. basePrice (number): Optional . The base price to calculate the end price for. This defaults to the object param's value , if provided. This parameter is required if object is not provided. buying (boolean): Default : true . If true , uses the logic for buying a service/item. This is exclusive with selling . selling (boolean): If true , uses the logic for selling an item. This is exclusive with buying . merchant ( tes3mobileActor ): The merchant to use for calculating the price. bartering (boolean): If true , a calcBarterPrice or calcRepairPrice event will be triggered. repairing (boolean): If true , a calcRepairPrice event will be triggered. training (boolean): If true , a calcTrainingPrice event will be triggered, passing the given skill ID. count (number): Default : 1 . If bartering , the count passed to the calcBarterPrice event. itemData ( tes3itemData ): Optional . If bartering or repairing , the item data passed to the calcBarterPrice or calcRepairPrice event. skill (number): If training , the skill ID passed to the calcTrainingPrice event. Returns : price (number): The calculated price, filtered by events.","title":"tes3.calculatePrice"},{"location":"apis/tes3/#tes3cancelanimationloop","text":"Signals looping animations on the actor to stop looping and play to the end. The animation will continue, playing past the loop point until the end frame. Useful for exiting looping animations cleanly. tes3 . cancelAnimationLoop ({ reference = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference to the actor.","title":"tes3.cancelAnimationLoop"},{"location":"apis/tes3/#tes3canrest","text":"This function returns true if player can rest. local canRest = tes3 . canRest ({ checkForEnemies = ..., checkForSolidGround = ..., showMessage = ... }) Parameters : params (table) checkForEnemies (boolean): Default : true . Perform a check whether there are enemies nearby before opening rest menu. If there are, false is returned. checkForSolidGround (boolean): Default : true . Perform a check if the player is underwater. If underwater, false is returned. showMessage (boolean): If true, a messagebox will be shown if the player can't rest because some condition isn't met. Returns : canRest (boolean)","title":"tes3.canRest"},{"location":"apis/tes3/#tes3cast","text":"Casts a spell from a given reference to a target reference. Touch effects will hit the target at any range, while target effects will create a projectile. By default, the spell always casts successfully and does not consume magicka. By default, an actor casting will stop and perform its cast animation, but the 'instant' flag can start the cast instantly, and allow more control over the spell. When the caster is the player, the target parameter is optional; without a target, the player's touch effects will only hit targets in front of them, and target effects will create a projectile in the direction the player is facing. Currently as a limitation, instant must be true to allow the player to cast spells. local executed = tes3 . cast ({ reference = ..., target = ..., spell = ..., instant = ..., alwaysSucceeds = ..., bypassResistances = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The caster reference. target ( tes3reference , tes3mobileActor , string): The target reference. Optional only if the caster is the player. spell ( tes3spell , string): The spell the caster uses. instant (boolean): When true, the spell is cast instantly. No animation is performed. alwaysSucceeds (boolean): Default : true . When true, the spell cannot fail and does not consume magicka. When false, it is cast using the actor's spell skill, and requires and takes enough magicka to cast. Only applies when 'instant' is true. bypassResistances (boolean): The spell will bypass the target's resistances. Only applies when 'instant' is true. Returns : executed (boolean) Example: This is an example of how to use tes3.cast instead of mwscript.explodeSpell -- The following code can be tested in-game by pressing Alt + l or Alt + k event . register ( \"keyDown\" , function ( e ) if e . isAltDown then tes3 . messageBox ( \"mwscript.explodeSpell\" ) mwscript . explodeSpell ({ reference = tes3 . game . playerTarget , spell = \"proj_trap_spell\" }) end end , { filter = tes3 . scanCode . l }) event . register ( \"keyDown\" , function ( e ) if e . isAltDown then tes3 . messageBox ( \"tes3.cast\" ) -- This will behave the same as will mwscript.explodeSpell() tes3 . cast ({ target = tes3 . game . playerTarget , reference = tes3 . game . playerTarget , spell = \"proj_trap_spell\" , }) end end , { filter = tes3 . scanCode . k })","title":"tes3.cast"},{"location":"apis/tes3/#tes3checkmerchantoffersservice","text":"Checks if a merchant will offer a service to you, including dialogue checks like disposition and faction membership. A specific service can be checked, or if no service is given, a generic dialogue check is made. If the service is refused, the dialogue reply for the refusal may also be returned (it may be nil, as there may not always be a reply available). local offersService , refusalReply = tes3 . checkMerchantOffersService ( reference , service ) Parameters : reference ( tes3reference , tes3mobileActor , string) service (number): Optional . The specific service to check for availability. Uses the tes3.merchantService constants. Returns : offersService (boolean) refusalReply ( tes3dialogueInfo )","title":"tes3.checkMerchantOffersService"},{"location":"apis/tes3/#tes3checkmerchanttradesitem","text":"Determines if a merchant trades in a given item. local trades = tes3 . checkMerchantTradesItem ({ item = ..., reference = ... }) Parameters : params (table) item ( tes3item , string) reference ( tes3reference , tes3mobileActor , string) Returns : trades (boolean)","title":"tes3.checkMerchantTradesItem"},{"location":"apis/tes3/#tes3claimspelleffectid","text":"This function is used to claim a unique spell effect name and id. This is needed before actually creating a new effect by calling tes3.addMagicEffect() . A claimed effect id is then available as: tes3.effect.effectName (just like any other spell effect). For examples of this function in practice see tes3.addMagicEffect() example. tes3 . claimSpellEffectId ({ name = ..., id = ... }) Parameters : params (table) name (string): The name of the new spell effect. Must be unique. An error will be thrown if it's non-unique. id (number): A unique number representing the new spell effect. An error will be thrown if it's non-unique.","title":"tes3.claimSpellEffectId"},{"location":"apis/tes3/#tes3clearmarklocation","text":"This function deletes the player's mark location. tes3 . clearMarkLocation ()","title":"tes3.clearMarkLocation"},{"location":"apis/tes3/#tes3createobject","text":"Create an object and returns it. The created object will be part of the saved game. Supported object types are those that have their own create function, such as tes3activator for example. local createdObject = tes3 . createObject ({ objectType = ..., getIfExists = ... }) Parameters : params (table) objectType (number): Maps to tes3.objectType constants. Used to filter object type to create. getIfExists (boolean): Default : true . If true , an existing object of the same type and ID will be returned instead of creating a new one. Returns : createdObject ( tes3activator , tes3alchemy , tes3container , tes3enchantment , tes3misc , tes3sound , tes3spell , tes3static , tes3weapon ) Example: Creates a tes3misc object local miscItemId = \"create_misc_item_id\" local miscItemName = \"create_misc_item_name\" mwse . log ( \"creating a misc item of id %s\" , miscItemId ) -- local miscItem = tes3misc.create( { -- id = miscItemId, -- name = miscItemName -- } ) local miscItem = tes3 . createObject ({ objectType = tes3 . objectType . miscItem , id = miscItemId , name = miscItemName }) if ( miscItem ~= nil ) then mwse . log ( \"misc item created : id is %s\" , miscItemId ) else mwse . log ( \"failed to create a misc item of id %s\" , miscItemId ) return end tes3 . createReference ( { object = miscItem , position = tes3 . getPlayerEyePosition (), orientation = 0 , cell = tes3 . getPlayerCell () } ) mwse . log ( \"created a reference of a misc item of id %s\" , miscItem . id ) Example: Creates a tes3static object local staticId = \"create_static_id\" mwse . log ( \"creating a static of id %s\" , staticId ) -- local static = tes3static.create( { -- id = staticId, -- mesh = \"d\\\\door_dwrv_main00.nif\" -- } ) local static = tes3 . createObject ( { objectType = tes3 . objectType . static , id = staticId , mesh = [[d\\door_dwrv_main00.nif]] } ) if ( static ~= nil ) then mwse . log ( \"static created : id is %s\" , staticId ) else mwse . log ( \"failed to create a static of id %s\" , staticId ) return end tes3 . createReference ( { object = static , position = tes3 . getPlayerEyePosition (), orientation = 0 , cell = tes3 . getPlayerCell () } ) mwse . log ( \"created a reference of static of id %s\" , static . id )","title":"tes3.createObject"},{"location":"apis/tes3/#tes3createreference","text":"Similar to mwscript's PlaceAtPC or PlaceAtMe, this creates a new reference in the game world. local newReference = tes3 . createReference ({ object = ..., position = ..., orientation = ..., cell = ..., scale = ... }) Parameters : params (table) object ( tes3physicalObject , string): The object to create a reference of. position ( tes3vector3 , table): The location to create the reference at. orientation ( tes3vector3 , table): The new orientation for the created reference. cell ( tes3cell , string, table): Optional . The cell to create the reference in. This is only needed for interior cells. scale (number): Default : 1 . A scale for the reference. Returns : newReference ( tes3reference )","title":"tes3.createReference"},{"location":"apis/tes3/#tes3decrementkillcount","text":"Decreases player's kill count of a certain type of actor by one. tes3 . decrementKillCount ({ actor = ... }) Parameters : params (table) actor ( tes3actor , string): The actor (or their ID).","title":"tes3.decrementKillCount"},{"location":"apis/tes3/#tes3deleteobject","text":"Deletes a game object from the system. This can be dangerous, use with caution. tes3 . deleteObject ( object ) Parameters : object ( tes3object ): The object to delete.","title":"tes3.deleteObject"},{"location":"apis/tes3/#tes3disablekey","text":"Disables the use of a keyboard key. tes3 . disableKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace.","title":"tes3.disableKey"},{"location":"apis/tes3/#tes3dropitem","text":"Drops one or more items from a reference's inventory onto the ground at their feet. It will unequip the item if it is equipped. The return value will be nil if no matching item was found. local createdReference = tes3 . dropItem ({ reference = ..., item = ..., itemData = ..., matchNoItemData = ..., count = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference whose inventory will be modified. item ( tes3item , string): The item to drop. itemData ( tes3itemData ): Optional . The item data of the specific item to drop. Without this, the first matching item in the inventory will drop. matchNoItemData (boolean): If true, matches an item without item data. This can be used when you want to drop an item that isn't equipped (equipped items always have item data). count (number): Default : 1 . The number of items to drop. updateGUI (boolean): Default : true . If false, the player or contents menu won't be updated. Returns : createdReference ( tes3reference )","title":"tes3.dropItem"},{"location":"apis/tes3/#tes3enablekey","text":"Enables the use of a keyboard key. tes3 . enableKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace.","title":"tes3.enableKey"},{"location":"apis/tes3/#tes3fadein","text":"Similar to the vanilla FadeIn mwscript command. tes3 . fadeIn ({ fader = ..., duration = ... }) Parameters : params (table) fader ( tes3fader ): Optional . Defaults to the transition fader. duration (number): Default : 1.0 . Time, in seconds, for the fade.","title":"tes3.fadeIn"},{"location":"apis/tes3/#tes3fadeout","text":"Similar to the vanilla FadeOut mwscript command. tes3 . fadeOut ({ fader = ..., duration = ... }) Parameters : params (table) fader ( tes3fader ): Optional . Defaults to the transition fader. duration (number): Default : 1.0 . Time, in seconds, for the fade.","title":"tes3.fadeOut"},{"location":"apis/tes3/#tes3fadeto","text":"Similar to the vanilla FadeTo mwscript command. tes3 . fadeTo ({ fader = ..., duration = ..., value = ... }) Parameters : params (table) fader ( tes3fader ): Optional . Defaults to the transition fader. duration (number): Default : 1.0 . Time, in seconds, for the fade. value (number): Default : 1.0 .","title":"tes3.fadeTo"},{"location":"apis/tes3/#tes3findactorsinproximity","text":"Searches for active mobile actors which are within range distance from the reference or position argument. It only finds mobiles which have active AI, and can include the player. This function is used by the game for area-of-effect hits. It has a small amount of overhead, so try not to use it too much. local mobileList = tes3 . findActorsInProximity ({ reference = ..., position = ..., range = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The position to search from, taken from a reference. Uses the position of the centre of the body if the reference is an actor. position ( tes3vector3 ): Optional . The position to search from. range (number): The distance around the position to search. An actor is included if the centre of their body is in range. Returns : mobileList (table)","title":"tes3.findActorsInProximity"},{"location":"apis/tes3/#tes3findbirthsign","text":"Fetches the core game birthsign object for a given birthsign ID. If the birthsign with a given ID doesn't exist, nil is returned. local birthsign = tes3 . findBirthsign ({ id = ... }) Parameters : params (table) id (string): ID of the birthsign to search for. Returns : birthsign ( tes3birthsign )","title":"tes3.findBirthsign"},{"location":"apis/tes3/#tes3findclass","text":"Fetches the core game character class object for a given class ID. If the class with a given ID doesn't exist, nil is returned. local class = tes3 . findClass ({ id = ... }) Parameters : params (table) id (string): ID of the class to search for. Returns : class ( tes3class )","title":"tes3.findClass"},{"location":"apis/tes3/#tes3findclosestexteriorreferenceofobject","text":"Using the same engine function used by the vanilla intervention spells, locations the first reference of a given object in the exterior world. local reference = tes3 . findClosestExteriorReferenceOfObject ({ object = ..., position = ... }) Parameters : params (table) object ( tes3physicalObject , string): The object to search for. position ( tes3vector3 ): Optional . The position to search from. Must be an exterior position. Defaults to the last exterior position of the player if no position is provided. Returns : reference ( tes3reference )","title":"tes3.findClosestExteriorReferenceOfObject"},{"location":"apis/tes3/#tes3finddialogue","text":"Locates a root dialogue topic that can then be filtered down for a specific actor to return a specific dialogue info. Specify either topic , or both type and page for other types of dialogue. For example, tes3.findDialogue({type = tes3.dialogueType.greeting, page = tes3.dialoguePage.greeting.greeting0}) will return the \"Greeting 0\" topic, which is not available using a topic ID. local dialogue = tes3 . findDialogue ({ topic = ..., type = ..., page = ... }) Parameters : params (table) topic (string): Optional . The dialogue topic to look for. type (number): Optional . The type of dialogue to look for. Uses tes3.dialogueType constants. page (number): Optional . The page of dialogue to fetch. Uses tes3.dialoguePage constants. Returns : dialogue ( tes3dialogue )","title":"tes3.findDialogue"},{"location":"apis/tes3/#tes3findglobal","text":"Fetches the core game object that represents a global variable. local globalVariable = tes3 . findGlobal ( id ) Parameters : id (string) Returns : globalVariable ( tes3globalVariable )","title":"tes3.findGlobal"},{"location":"apis/tes3/#tes3findgmst","text":"Fetches the core game object that represents a game setting. While this function accepts a name, it is recommended to use the tes3.GMST constants. local gameSetting = tes3 . findGMST ( id ) Parameters : id (number, string) Returns : gameSetting ( tes3gameSetting ) Example: Document all GMST Default Values -- Converter table for a GMST's type to something more user-friendly. local typeNames = { s = \"string\" , i = \"integer\" , f = \"float\" , } -- Write our markdown header. local f = assert ( io.open ( \"Data Files \\\\ MWSE \\\\ tmp \\\\ GMSTs.md\" , \"w\" )) f : write ( \"# GMSTs \\n\\n \" ) f : write ( \"Index | Type | Identifier | Default Value \\n \" ) f : write ( \"----- | ------- | -------------------------------- | -------------------------------------------- \\n \" ) -- Go through all our GMSTs... for id = 0 , 1520 do -- Write out most of the info. local gmst = tes3 . findGMST ( id ) f : write ( string.format ( \"%-5d | %-7s | %-32s | \" , gmst . index , typeNames [ gmst . type ], gmst . id )) -- Customize how the value is written based on its type. if ( gmst . type == \"s\" ) then -- Remove linebreaks and escape them. local value = gmst . defaultValue value = string.gsub ( value , \" \\r \" , \" \\\\ r\" ) value = string.gsub ( value , \" \\n \" , \" \\\\ n\" ) f : write ( string.format ( \"` \\\" %s \\\" `\" , value )) elseif ( gmst . type == \"f\" ) then f : write ( string.format ( \"`%.4f`\" , gmst . defaultValue )) else f : write ( string.format ( \"`%d`\" , gmst . defaultValue )) end f : write ( \" \\n \" ) end -- Close up our file. f : close () Example: Retrieve value of a GMST local oldGMST = tes3 . findGMST ( \"sServiceTrainingTitle\" ). value -- oldGMST is now \"Training\" -- Now let's change the message to something more appropriate. tes3 . findGMST ( \"sServiceTrainingTitle\" ). value = \"Cheat\"","title":"tes3.findGMST"},{"location":"apis/tes3/#tes3findregion","text":"Fetches the core game region object for a given region ID. If the region with a given ID doesn't exist, nil is returned. local region = tes3 . findRegion ({ id = ... }) Parameters : params (table) id (string): ID of the region to search for. Returns : region ( tes3region )","title":"tes3.findRegion"},{"location":"apis/tes3/#tes3force1stperson","text":"Forces the player's POV to first person the next simulation frame, and returns true if the POV has been changed. local changedPOV = tes3 . force1stPerson () Returns : changedPOV (boolean)","title":"tes3.force1stPerson"},{"location":"apis/tes3/#tes3force3rdperson","text":"Forces the player's POV to third person the next simulation frame, and returns true if the POV has been changed. local changedPOV = tes3 . force3rdPerson () Returns : changedPOV (boolean)","title":"tes3.force3rdPerson"},{"location":"apis/tes3/#tes3get3rdpersoncameraoffset","text":"Returns the camera's offset from the player's head while in 3rd person view. Note this function can be used once WorldController and MobilePlayer have finished initializing. local cameraOffset = tes3 . get3rdPersonCameraOffset () Returns : cameraOffset ( tes3vector3 )","title":"tes3.get3rdPersonCameraOffset"},{"location":"apis/tes3/#tes3getactivecells","text":"Returns a table of active cells. If indoors, the table will have only one entry. If outdoors, the 9 surrounding cells will be provided. local cells = tes3 . getActiveCells () Returns : cells (table)","title":"tes3.getActiveCells"},{"location":"apis/tes3/#tes3getanimationgroups","text":"This function fetches a reference's attached animation groups. local animData = tes3 . getAnimationGroups ({ reference = ... }) Parameters : params (table) reference ( tes3reference ): A reference whose animation groups to fetch. Returns : animData (table)","title":"tes3.getAnimationGroups"},{"location":"apis/tes3/#tes3getanimationtiming","text":"This function fetches a reference's attached animation groups' timings. local result = tes3 . getAnimationTiming ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): A reference whose animation groups' timings to fetch. Returns : result (table)","title":"tes3.getAnimationTiming"},{"location":"apis/tes3/#tes3getarchivelist","text":"Returns a 1-indexed table of active archives. local archives = tes3 . getArchiveList () Returns : archives (table)","title":"tes3.getArchiveList"},{"location":"apis/tes3/#tes3getattachment","text":"Fetches an attachment with a given type. tes3 . getAttachment ( reference , attachment ) Parameters : reference ( tes3reference ) attachment (string)","title":"tes3.getAttachment"},{"location":"apis/tes3/#tes3getattributename","text":"Returns the lowercase identifying name of an attribute for a given numerical, 0-based index. E.g. \"strength\". local name = tes3 . getAttributeName ( attributeId ) Parameters : attributeId (number): The attribute id to get the name of, from tes3.attributeName constants. Returns : name (string)","title":"tes3.getAttributeName"},{"location":"apis/tes3/#tes3getcameraposition","text":"Returns the camera's position. local vector3 = tes3 . getCameraPosition () Returns : vector3 ( tes3vector3 )","title":"tes3.getCameraPosition"},{"location":"apis/tes3/#tes3getcameravector","text":"Returns the camera look vector. local vector3 = tes3 . getCameraVector () Returns : vector3 ( tes3vector3 )","title":"tes3.getCameraVector"},{"location":"apis/tes3/#tes3getcell","text":"Finds a cell, either by an id or an X/Y grid position. local cell = tes3 . getCell ({ id = ..., x = ..., y = ... }) Parameters : params (table) id (string): The cell's ID. If not provided, x and y must be. x (number) y (number) Returns : cell ( tes3cell )","title":"tes3.getCell"},{"location":"apis/tes3/#tes3getcumulativedaysformonth","text":"Gets the number of days that have passed leading up to the start of a given month. local days = tes3 . getCumulativeDaysForMonth ( month ) Parameters : month (number): The 0-based month index. Returns : days (number)","title":"tes3.getCumulativeDaysForMonth"},{"location":"apis/tes3/#tes3getcurrentaipackageid","text":"Returns an actor's current AI package ID, just as the mwscript function GetCurrentAIPackage would. local packageID = tes3 . getCurrentAIPackageId ( reference ) Parameters : reference ( tes3mobileActor , tes3reference ) Returns : packageID (number)","title":"tes3.getCurrentAIPackageId"},{"location":"apis/tes3/#tes3getcurrentweather","text":"Gets the currently active weather, from the player's current region. local weather = tes3 . getCurrentWeather () Returns : weather ( tes3weather )","title":"tes3.getCurrentWeather"},{"location":"apis/tes3/#tes3getcursorposition","text":"Returns a table with values x and y that contain the current cursor position. local table = tes3 . getCursorPosition () Returns : table (table)","title":"tes3.getCursorPosition"},{"location":"apis/tes3/#tes3getdaysinmonth","text":"Returns the number of days in a given month. This may be altered if a Morrowind Code Patch feature was installed. local dayCount = tes3 . getDaysInMonth ( month ) Parameters : month (number) Returns : dayCount (number)","title":"tes3.getDaysInMonth"},{"location":"apis/tes3/#tes3getdialogueinfo","text":"Locates and returns a Dialogue Info by a given id. This involves file IO and is an expensive call. Results should be cached. local dialogueInfo = tes3 . getDialogueInfo ( dialogue , id ) Parameters : dialogue ( tes3dialogue , string): The dialogue that the info belongs to. id (string): The numerical, unique id for the info object. Returns : dialogueInfo ( tes3dialogueInfo )","title":"tes3.getDialogueInfo"},{"location":"apis/tes3/#tes3geteffectmagnitude","text":"This function returns the total magnitude and total unresisted magnitude of a certain spell effect affecting a reference. It returns a pair of numbers, the first being the post-resistance magnitude (see examples). The unresisted magnitude is the magnitude before the actor's resistances are applied; it is always an integer, so it is used in some UI elements. local magnitude , unresistedMagnitude = tes3 . getEffectMagnitude ({ reference = ..., effect = ..., skill = ..., attribute = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): An associated mobile should exist for this function to be able to work. effect (number): Effect ID. Can be any of the predefined spell effects, or one added by tes3.claimSpellEffectId() . Maps to values of tes3.effect constants skill (number): Default : -1 . If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Skill, a skill should be provided. This also applies to any custom spell effect which operates on a certain skill. This value maps to tes3.skill constants. attribute (number): Default : -1 . If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Attribute, an attribute should be provided. This also applies to any custom spell effect which operates on a certain attribute. This value maps to tes3.attribute constants. Returns : magnitude, unresistedMagnitude (number, number) Example: Get both magnitudes. local magnitude , unresistedMagnitude = tes3 . getEffectMagnitude { reference = tes3 . player , effect = tes3 . effect . fireDamage } tes3 . messageBox ( string.format ( \"fortify speed: %f (%f)\" , magnitude , unresistedMagnitude )) Example: Get magnitude after resistances are applied. local magnitude = tes3 . getEffectMagnitude { reference = tes3 . player , effect = tes3 . effect . fortifyAttribute , attribute = tes3 . attribute . speed } tes3 . messageBox ( string.format ( \"fortify speed: %f\" , magnitude ))","title":"tes3.getEffectMagnitude"},{"location":"apis/tes3/#tes3getequippeditem","text":"Returns an actor's equipped item stack, provided a given filter local stack = tes3 . getEquippedItem ({ actor = ..., enchanted = ..., objectType = ..., slot = ..., type = ... }) Parameters : params (table) actor ( tes3reference , tes3mobileActor , tes3actor ) enchanted (boolean): Optional . If true, filters to enchanted items. objectType (number): Optional . Maps to tes3.objectType constants. Used to filter equipment by type. slot (number): Optional . Maps to tes3.armorSlot or tes3.clothingSlot . Used to filter equipment by slot. type (number): Optional . Maps to tes3.weaponType . Used to filter equipment by type. Returns : stack ( tes3equipmentStack ) Example: Get Player\u2019s Equipped Light local equippedLightStack = tes3 . getEquippedItem ({ actor = tes3 . player , objectType = tes3 . objectType . light }) if ( equippedLightStack ) then mwse . log ( \"Equipped light: %s\" , equippedLightStack . object . id ) else mwse . log ( \"No light equipped.\" ) end Example: Get Player\u2019s Shield local equippedShieldStack = tes3 . getEquippedItem ({ actor = tes3 . player , objectType = tes3 . objectType . armor , slot = tes3 . armorSlot . shield }) if ( equippedShieldStack ) then mwse . log ( \"Equipped shield: %s\" , equippedShieldStack . object . id ) else mwse . log ( \"No shield equipped.\" ) end","title":"tes3.getEquippedItem"},{"location":"apis/tes3/#tes3getfaction","text":"Fetches the core game faction object for a given faction ID. local faction = tes3 . getFaction ( id ) Parameters : id (string) Returns : faction ( tes3faction )","title":"tes3.getFaction"},{"location":"apis/tes3/#tes3getfileexists","text":"Determines if a file exists in the user's Data Files. local exists = tes3 . getFileExists ( path ) Parameters : path (string) Returns : exists (boolean)","title":"tes3.getFileExists"},{"location":"apis/tes3/#tes3getfilesource","text":"Determines if a file exists on the filesystem or inside of a bsa. The returned string will be \"file\" or \"bsa\". local exists = tes3 . getFileSource ( path ) Parameters : path (string) Returns : exists (string)","title":"tes3.getFileSource"},{"location":"apis/tes3/#tes3getglobal","text":"Retrieves the value of a global value, or nil if the global could not be found. local value = tes3 . getGlobal ( id ) Parameters : id (string) Returns : value (number)","title":"tes3.getGlobal"},{"location":"apis/tes3/#tes3getinputbinding","text":"Gets the input configuration for a given keybind. local inputConfig = tes3 . getInputBinding ( keybind ) Parameters : keybind (number): Maps to tes3.keybind constants. Returns : inputConfig ( tes3inputConfig )","title":"tes3.getInputBinding"},{"location":"apis/tes3/#tes3getitemcount","text":"Returns the amount of a certain item that can be found in a reference's inventory. local count = tes3 . getItemCount ({ reference = ..., item = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to get the item count for. Must be a reference that has an inventory. item ( tes3item , string): The item to get the count of. Returns : count (number): The absolute value of the stack count in the reference's inventory.","title":"tes3.getItemCount"},{"location":"apis/tes3/#tes3getitemisstolen","text":"This function checks item's stolen flag. local isStolen = tes3 . getItemIsStolen ( item , from ) Parameters : item ( tes3item ): The item to check. from ( tes3baseObject ): Where the item was stolen from. Returns : isStolen (boolean)","title":"tes3.getItemIsStolen"},{"location":"apis/tes3/#tes3getjournalindex","text":"Gets the index of a given journal, or nil if no valid journal could be found. local index = tes3 . getJournalIndex ({ id = ... }) Parameters : params (table) id ( tes3dialogue , string) Returns : index (number)","title":"tes3.getJournalIndex"},{"location":"apis/tes3/#tes3getkillcount","text":"Returns how many times the player killed an actor. If no actor is specified, total number of kills player commited will be returned. local count = tes3 . getKillCount ({ actor = ... }) Parameters : params (table) actor ( tes3actor , string): Optional . The actor (or their ID) for whom to retrieve player's kill count. Returns : count (number)","title":"tes3.getKillCount"},{"location":"apis/tes3/#tes3getkillcounts","text":"Returns a table with complete player kill counts. The table returned is formated so actor IDs are table keys and kill count of that type of actor is value. local killMap = tes3 . getKillCounts () Returns : killMap (table)","title":"tes3.getKillCounts"},{"location":"apis/tes3/#tes3getlanguage","text":"Gets the language as an ISO string (e.g. \"eng\"), determined by the language entry in Morrowind.ini and the detected executable. local code = tes3 . getLanguage () Returns : code (string)","title":"tes3.getLanguage"},{"location":"apis/tes3/#tes3getlanguagecode","text":"Gets the language code, determined by the language entry in Morrowind.ini and the detected executable. local code = tes3 . getLanguageCode () Returns : code (number)","title":"tes3.getLanguageCode"},{"location":"apis/tes3/#tes3getlastexteriorposition","text":"Returns the last exterior position of the player. local vector3 = tes3 . getLastExteriorPosition () Returns : vector3 ( tes3vector3 )","title":"tes3.getLastExteriorPosition"},{"location":"apis/tes3/#tes3getlocked","text":"Determines if a given reference is a locked door or container. local isLocked = tes3 . getLocked ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) Returns : isLocked (boolean)","title":"tes3.getLocked"},{"location":"apis/tes3/#tes3getlocklevel","text":"Gets an locked reference's lock level. If no lock data is available, it will return nil. local level = tes3 . getLockLevel ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) Returns : level (number)","title":"tes3.getLockLevel"},{"location":"apis/tes3/#tes3getmagiceffect","text":"Fetches the core game Magic Effect object for a given ID. local magicEffect = tes3 . getMagicEffect ( id ) Parameters : id (number) Returns : magicEffect ( tes3magicEffect )","title":"tes3.getMagicEffect"},{"location":"apis/tes3/#tes3getmagiceffectname","text":"Returns the complex name of a magic effect, taking into account attribute or skill values. local complexName = tes3 . getMagicEffectName ({ effect = ..., attribute = ..., skill = ... }) Parameters : params (table) effect (number): The effect ID to get the name of. attribute (number): Optional . The attribute ID to use, if applicable. skill (number): Optional . The skill ID to use, if applicable. Returns : complexName (string)","title":"tes3.getMagicEffectName"},{"location":"apis/tes3/#tes3getmagicsourceinstancebyserial","text":"Fetches an instance of the magic source of a given serial number. local magicSourceInstance = tes3 . getMagicSourceInstanceBySerial ({ serialNumber = ... }) Parameters : params (table) serialNumber (number) Returns : magicSourceInstance ( tes3magicSourceInstance )","title":"tes3.getMagicSourceInstanceBySerial"},{"location":"apis/tes3/#tes3getmodlist","text":"Fetches the list of the active ESM and ESP files. local modList = tes3 . getModList () Returns : modList (table)","title":"tes3.getModList"},{"location":"apis/tes3/#tes3getobject","text":"Fetches the core game object for a given object ID. local object = tes3 . getObject ( id ) Parameters : id (string) Returns : object ( tes3object )","title":"tes3.getObject"},{"location":"apis/tes3/#tes3getowner","text":"Returns the object's owner, or nil if the object is unowned. local object = tes3 . getOwner ( reference ) Parameters : reference ( tes3reference ) Returns : object ( tes3object )","title":"tes3.getOwner"},{"location":"apis/tes3/#tes3getplayeractivationdistance","text":"This function returns the distance that the player can activate objects with. This is a sum of the iMaxActivateDist GMST value and the player's telekinesis strength. local result = tes3 . getPlayerActivationDistance () Returns : result (number)","title":"tes3.getPlayerActivationDistance"},{"location":"apis/tes3/#tes3getplayercell","text":"Fetches the cell that the player is currently in. local result = tes3 . getPlayerCell () Returns : result ( tes3cell )","title":"tes3.getPlayerCell"},{"location":"apis/tes3/#tes3getplayereyeposition","text":"Returns the position of the player's eyes. local position = tes3 . getPlayerEyePosition () Returns : position ( tes3vector3 )","title":"tes3.getPlayerEyePosition"},{"location":"apis/tes3/#tes3getplayereyevector","text":"Returns the look direction of the player's eyes. local position = tes3 . getPlayerEyeVector () Returns : position ( tes3vector3 )","title":"tes3.getPlayerEyeVector"},{"location":"apis/tes3/#tes3getplayergold","text":"Gets the gold count carried by the player. local goldCount = tes3 . getPlayerGold () Returns : goldCount (number)","title":"tes3.getPlayerGold"},{"location":"apis/tes3/#tes3getplayertarget","text":"This function is used to see what the player is looking at. Unlike a real raycast, this does not work in all circumstances. As a general rule, it will return the reference if the information box is shown when it is looked at. local result = tes3 . getPlayerTarget () Returns : result ( tes3reference )","title":"tes3.getPlayerTarget"},{"location":"apis/tes3/#tes3getquickkey","text":"This function retrieves data for a quick key. local result = tes3 . getQuickKey ({ slot = ... }) Parameters : params (table) slot (number): The key to retrieve data for. This is a value between 1 and 9. Returns : result ( tes3quickKey )","title":"tes3.getQuickKey"},{"location":"apis/tes3/#tes3getreference","text":"Fetches the first reference for a given base object ID. local reference = tes3 . getReference ( id ) Parameters : id (string) Returns : reference ( tes3reference )","title":"tes3.getReference"},{"location":"apis/tes3/#tes3getregion","text":"Gets the current region the player is in. This checks the player's current cell first, but will fall back to the last exterior cell. local region = tes3 . getRegion ( useDoors ) Parameters : useDoors (boolean): Optional . Returns : region ( tes3region )","title":"tes3.getRegion"},{"location":"apis/tes3/#tes3getscript","text":"Locates and returns a script by a given id. local script = tes3 . getScript ( id ) Parameters : id (string) Returns : script ( tes3script )","title":"tes3.getScript"},{"location":"apis/tes3/#tes3getsimulationtimestamp","text":"Returns a UNIX-style timestamp based on in-world simulation time since the start of the era. local timestamp = tes3 . getSimulationTimestamp () Returns : timestamp (number)","title":"tes3.getSimulationTimestamp"},{"location":"apis/tes3/#tes3getskill","text":"Fetches the core game object for a given skill ID. local skill = tes3 . getSkill ( id ) Parameters : id (number): Maps to tes3.skill constants. Returns : skill ( tes3skill )","title":"tes3.getSkill"},{"location":"apis/tes3/#tes3getskillname","text":"Returns the identifying name of a skill for a given numerical, 0-based index. E.g. \"Enchant\". local name = tes3 . getSkillName () Returns : name (string)","title":"tes3.getSkillName"},{"location":"apis/tes3/#tes3getsound","text":"Locates and returns a sound by a given id. local sound = tes3 . getSound ( id ) Parameters : id (string) Returns : sound ( tes3sound )","title":"tes3.getSound"},{"location":"apis/tes3/#tes3getsoundgenerator","text":"Returns a sound generator by a given creature id and type. local soundGenerator = tes3 . getSoundGenerator ( creatureId , soundType ) Parameters : creatureId (string) soundType (number): Maps to tes3.soundGenType constants. Returns : soundGenerator ( tes3soundGenerator )","title":"tes3.getSoundGenerator"},{"location":"apis/tes3/#tes3getsoundplaying","text":"Without a reference, this function returns true if the sound is playing unattached or on any reference. With a reference, it returns true if the sound is playing on that specific reference. local soundIsPlaying = tes3 . getSoundPlaying ({ sound = ..., reference = ... }) Parameters : params (table) sound ( tes3sound , string): The sound object, or the ID of the sound to look for. reference ( tes3reference , tes3mobileActor , string): Optional . Returns : soundIsPlaying (boolean)","title":"tes3.getSoundPlaying"},{"location":"apis/tes3/#tes3getspecializationname","text":"Returns the lowercase identifying name of a specialization type for a given numerical, 0-based index. E.g. \"magic\". local name = tes3 . getSpecializationName () Returns : name (string)","title":"tes3.getSpecializationName"},{"location":"apis/tes3/#tes3gettopmenu","text":"Gets the top-level UI menu. local menu = tes3 . getTopMenu () Returns : menu ( tes3uiElement )","title":"tes3.getTopMenu"},{"location":"apis/tes3/#tes3gettrap","text":"Gets the trap on a given reference. local spell = tes3 . getTrap ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) Returns : spell ( tes3spell )","title":"tes3.getTrap"},{"location":"apis/tes3/#tes3getvanitymode","text":"The function returns true if the player is in the vanity mode. Vanity mode is triggered by a period of inactivity from the player or by a tes3.setVanityMode() function. The view is switched to third person (if not already), and the camera is orbiting slowly around the player character. local result = tes3 . getVanityMode () Returns : result (boolean): Is the vanity mode currently active?","title":"tes3.getVanityMode"},{"location":"apis/tes3/#tes3getviewportsize","text":"Returns both the viewport width and the viewport height. Note that this is the real resolution of the screen. For a value scaled by MGE's menu scaling, see the same-named function in the tes3ui namespace. To get the scale used, check getViewportScale in the tes3ui namespace. local width , height = tes3 . getViewportSize () Returns : width (number): The width of the viewport. height (number): The height of the viewport.","title":"tes3.getViewportSize"},{"location":"apis/tes3/#tes3getwerewolfkillcount","text":"Returns the number of kills player commited as a Werewolf. local werewolfKills = tes3 . getWerewolfKillCount () Returns : werewolfKills (number)","title":"tes3.getWerewolfKillCount"},{"location":"apis/tes3/#tes3hammerkey","text":"Simulates hammering a key. tes3 . hammerKey ( keyCode ) Parameters : keyCode (number)","title":"tes3.hammerKey"},{"location":"apis/tes3/#tes3hascodepatchfeature","text":"Attempts to determine if a given Morrowind Code Patch feature is enabled. This may not be possible, in which case nil will be returned. local state = tes3 . hasCodePatchFeature ( id ) Parameters : id (number): The id of the feature. Maps to values in tes3.codePatchFeature constants. Returns : state (boolean, nil)","title":"tes3.hasCodePatchFeature"},{"location":"apis/tes3/#tes3hasownershipaccess","text":"Determines if a reference has access to another object, including its inventory. References have access to their own things, and the player has access to dead NPC's items. local hasAccess = tes3 . hasOwnershipAccess ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Default : tes3.player . The actor to check permissions for. target ( tes3reference , tes3mobileActor , string): The reference to check access of. Returns : hasAccess (boolean)","title":"tes3.hasOwnershipAccess"},{"location":"apis/tes3/#tes3hasspell","text":"Determines if the player has access to a given spell. local hasSpell = tes3 . hasSpell ({ reference = ..., actor = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to check the spell list of. To check an actor without specifying any particular reference, use actor instead. actor ( tes3actor , string): Who to check the spell list of. Providing a base actor can be done before a save has been loaded, but may not correctly update effects for instanced versions of that actor in an active save. spell ( tes3spell , string): The spell to check. Returns : hasSpell (boolean): True if the spell exists in the actor's spell list, race spell list, or birthsign spell list.","title":"tes3.hasSpell"},{"location":"apis/tes3/#tes3incrementkillcount","text":"Increases player's kill count of a certain type of actor by one. tes3 . incrementKillCount ({ actor = ... }) Parameters : params (table) actor ( tes3actor , string): The actor (or their ID) for whom to increase player's kill count.","title":"tes3.incrementKillCount"},{"location":"apis/tes3/#tes3is3rdperson","text":"Returns if the game is in 3rd person. local state = tes3 . is3rdPerson () Returns : state (boolean)","title":"tes3.is3rdPerson"},{"location":"apis/tes3/#tes3isaffectedby","text":"This function performs a check whether the provided reference is affected by a certain object or magic effect. Note reference.object.spells:contains(spellID) will give the same output as this function for abilities, diseases, and curses, because having them in your spell list also makes them affect you. local isAffectedBy = tes3 . isAffectedBy ({ reference = ..., effect = ..., object = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) effect (number): Optional . A numerical identifier of the magic effect to perform a check for. Maps to tes3.effect constant, including those claimed with tes3.claimSpellEffectId() , and then added with tes3.addMagicEffect() . object ( tes3alchemy , tes3enchantment , tes3spell , tes3magicEffect , string): Optional . An object to perform a check for. Returns : isAffectedBy (boolean)","title":"tes3.isAffectedBy"},{"location":"apis/tes3/#tes3iskeyequal","text":"Compares two key objects and returns their equality. Returns true if the objects are equal, false otherwise. local equal = tes3 . isKeyEqual ({ actual = ..., expected = ... }) Parameters : params (table) actual (table): The key object that is being compared. keyCode (number): Value of the actual key scan code, such as the letter p . Maps to tes3.scanCode.* . isShiftDown (boolean): Value of whether the shift key is pressed. isControlDown (boolean): Value of whether the control key is pressed. isAltDown (boolean): Value of whether the alt key is pressed. isSuperDown (boolean): Value of whether the super (Windows key) key is pressed. expected (table): The key object that is being compared against. keyCode (number): Value of the expected key scan code, such as the letter p . Maps to tes3.scanCode.* . isShiftDown (boolean): Value of whether the shift key is expected to be pressed. isControlDown (boolean): Value of whether the control key is expected to be pressed. isAltDown (boolean): Value of whether the alt key is expected to be pressed. isSuperDown (boolean): Value of whether the super (Windows key) key is pressed. Returns : equal (boolean)","title":"tes3.isKeyEqual"},{"location":"apis/tes3/#tes3ismodactive","text":"Determines if the player has a given ESP or ESM file active. local result = tes3 . isModActive ( filename ) Parameters : filename (string): The filename of the mod to find, including the extension. Returns : result (boolean)","title":"tes3.isModActive"},{"location":"apis/tes3/#tes3iterate","text":"This function returns a function that iterates over a tes3iterator object. This is useful for for loops. Note that tes3iterator objects support iteration with pairs() function. local function = tes3 . iterate ( iterator ) Parameters : iterator ( tes3iterator ) Returns : function (function)","title":"tes3.iterate"},{"location":"apis/tes3/#tes3iterateobjects","text":"Iteration function used for looping over game options. local object = tes3 . iterateObjects ( filter ) Parameters : filter (number): Maps to tes3.objectType constants. Returns : object ( tes3object )","title":"tes3.iterateObjects"},{"location":"apis/tes3/#tes3loadanimation","text":"Loads an animation and uses it to override existing animations on an actor. Animation groups present in the file will replace the actor's animation groups. The actor's model must be already loaded into memory to have its animations modified. The overridden animations only persist until the actor is unloaded. Calling this more than once will remove the previous animation override before loading the new animation. Therefore, if applying animations to the player, you should call this before every playAnimation so that different animation mods can co-exist. For NPCs under your mod's control, you only need to do it when the player enters the cell containing the NPC. Calling this without a file argument will reset the reference's animations to default. tes3 . loadAnimation ({ reference = ..., file = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference to the actor that is having its animations modified. file (string): Optional . The specified animation base file that will be loaded. e.g. For an animation composed of files anim.nif, xanim.nif and xanim.kf, you should pass file=\"anim.nif\". The animation target skeleton must match the skeleton of the actor to work. i.e. 3rd person anims for NPCs and tes3.player, 1st person anims for firstPersonReference.","title":"tes3.loadAnimation"},{"location":"apis/tes3/#tes3loadgame","text":"Loads a game. tes3 . loadGame ( filename ) Parameters : filename (string): The full filename of the save that we want to load, including extension.","title":"tes3.loadGame"},{"location":"apis/tes3/#tes3loadmesh","text":"Loads a mesh file and provides a scene graph object. local model = tes3 . loadMesh ( path , useCache ) Parameters : path (string): Path, relative to Data Files/Meshes. useCache (boolean): Default : true . If false, a new object will be created even if it had been previously loaded. Returns : model ( niNode )","title":"tes3.loadMesh"},{"location":"apis/tes3/#tes3loadsourcetexture","text":"Loads a source texture file and provides the niSourceTexture object. local texture = tes3 . loadSourceTexture ( path , useCache ) Parameters : path (string): Path, relative to Data Files/Textures. useCache (boolean): Default : true . If false, a new object will be created even if it had been previously loaded. Returns : texture ( niSourceTexture )","title":"tes3.loadSourceTexture"},{"location":"apis/tes3/#tes3lock","text":"Locks an object, and optionally sets a locked reference's lock level. Returns true if the object can be and wasn't already locked. local locked = tes3 . lock ({ reference = ..., level = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) level (number): Optional . Returns : locked (boolean)","title":"tes3.lock"},{"location":"apis/tes3/#tes3looptarray","text":"This function returns a function that iterates over a tes3tarray object. This is useful for for loops. local iterationFunction = tes3 . loopTArray ( tarray ) Parameters : tarray (tes3tarray) Returns : iterationFunction (function)","title":"tes3.loopTArray"},{"location":"apis/tes3/#tes3makesafeobjecthandle","text":"Returns a safe handle for the object. To use the object use :getObject() . To check if it still exists use :valid() . local object = tes3 . makeSafeObjectHandle ( unknown , unknown , unknown ) Parameters : Returns : object ( tes3object )","title":"tes3.makeSafeObjectHandle"},{"location":"apis/tes3/#tes3menumode","text":"Returns true if the player is currently in menu mode. local inMenuMode = tes3 . menuMode () Returns : inMenuMode (boolean)","title":"tes3.menuMode"},{"location":"apis/tes3/#tes3messagebox","text":"Displays a message box. This may be a simple toast-style message, or a box with choice buttons. local element = tes3 . messageBox ({ message = ..., buttons = ..., callback = ..., showInDialog = ..., duration = ... }, formatAdditions ) Parameters : messageOrParams (string, table) message (string) buttons (table): Optional . An array of strings to use for buttons. callback (function) showInDialog (boolean): Default : true . Specifying showInDialog = false forces the toast-style message, which is not shown in the dialog menu. duration (number): Optional . Overrides how long the toast-style message remains visible. formatAdditions (variadic): Optional . Only used if messageOrParams is a string. Returns : element ( tes3uiElement , nil): The UI menu created for the notification, if any.","title":"tes3.messageBox"},{"location":"apis/tes3/#tes3modstatistic","text":"Modifies a statistic on a given actor. This should be used instead of manually setting values on the game structures, to ensure that events and GUI elements are properly handled. Either skill, attribute, or name must be provided. tes3 . modStatistic ({ reference = ..., name = ..., attribute = ..., skill = ..., base = ..., current = ..., value = ..., limit = ..., limitToBase = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string) name (string): Optional . A generic name of an attribute to set. attribute (number): Optional . The attribute to set. skill (number): Optional . The skill to set. base (number): Optional . If set, the base value will be modified. current (number): Optional . If set, the current value will be modified. value (number): Optional . If set, both the base and current value will be modified. limit (boolean): If set, the attribute won't rise above 100 or fall below 0. limitToBase (boolean): If set, the attribute's current value won't rise above its base value. Useful for health, magicka, and fatigue. Example: Decrease Health of an Actor tes3 . modStatistic ({ reference = tes3 . mobilePlayer , name = \"health\" , current = - 10 }) Example: Restore Magicka without Overflowing tes3 . modStatistic ({ reference = tes3 . mobilePlayer , name = \"magicka\" , current = 20 , limitToBase = true })","title":"tes3.modStatistic"},{"location":"apis/tes3/#tes3newgame","text":"Starts a new game. tes3 . newGame ()","title":"tes3.newGame"},{"location":"apis/tes3/#tes3onmainmenu","text":"Returns true if the player is on the main menu, and hasn't loaded a game yet. local onMainMenu = tes3 . onMainMenu () Returns : onMainMenu (boolean)","title":"tes3.onMainMenu"},{"location":"apis/tes3/#tes3persuade","text":"Attempts a persuasion attempt on an actor, potentially adjusting their disposition. Returns true if the attempt was a success. local success = tes3 . persuade ({ actor = ..., index = ..., modifier = ... }) Parameters : params (table) actor ( tes3mobileActor , tes3reference , string): The actor to try to persuade. index (number): Optional . If an index is provided, 0-indexed with the following results: admire, intimidate, taunt, bribe (10), bribe (100), bribe (1000). modifier (number): Optional . If no index is provided, this is the direct modifier to try. Returns : success (boolean)","title":"tes3.persuade"},{"location":"apis/tes3/#tes3playanimation","text":"Plays a given animation group. Optional flags can be used to define how the group starts. When 'group' is specified, the actor AI is paused while playing the animation, as if in an idle state. When one or more of 'lower', 'upper', or 'shield' are specified without 'group', the actor AI retains control, and the animations are layered. e.g. tes3.playAnimation{reference = ..., upper = tes3.animationGroup.idle3, loopCount = 0} will play the idle3 animation once (without looping) on the upper body, while the player or NPC is still able to walk around. Using 'upper' defers combat actions until the animation is done. Using 'shield' still allows combat actions. As a special case, tes3.playAnimation{reference = ..., group = 0} returns control to the AI, as the AI knows that is the actor's neutral idle state. tes3 . playAnimation ({ reference = ..., group = ..., lower = ..., upper = ..., shield = ..., startFlag = ..., loopCount = ..., mesh = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference that will play the animation. group (number): Optional . The animation group id to start playing -- a value from 0 to 149. Applies the animation to the whole body. Maps to tes3.animationGroup constants. lower (number): Optional . Sets the animation group id for the lower body. This is used to combine different animations for each body section. Maps to tes3.animationGroup constants. upper (number): Optional . Sets the animation group id for the upper body. This is used to combine different animations for each body section. Maps to tes3.animationGroup constants. shield (number): Optional . Sets the animation group id for the shield arm. This is used to combine different animations for each body section. Maps to tes3.animationGroup constants. startFlag (number): Default : tes3.animationStartFlag.immediate . A flag for starting the group with, using tes3.animationStartFlag constants. loopCount (number): Default : -1 . If provided, the animation will repeat its loop section a given number of times. To make an animation play through once, set loopCount = 0. Defaults to infinite looping. mesh (string): Optional . Deprecated. Please use tes3.loadAnimation (check its documentation) before calling playAnimation . You can also use loadAnimation to reset loaded animations to default.","title":"tes3.playAnimation"},{"location":"apis/tes3/#tes3playitempickupsound","text":"Plays the sound responsible for picking up or putting down an item. local executed = tes3 . playItemPickupSound ({ reference = ..., item = ..., pickup = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The reference to attach the sound to. item ( tes3item ) pickup (boolean): Default : true . If false, the place down item will be used. Returns : executed (boolean)","title":"tes3.playItemPickupSound"},{"location":"apis/tes3/#tes3playsound","text":"Plays a sound on a given reference. Provides control over volume (including volume channel), pitch, and loop control. Note : MP3 sound files can only be played if they are inside \\Vo\\ folder. The files must conform to the MPEG Layer-3, 64 Kbps 44100 kHz, 16-bit mono specification. local executed = tes3 . playSound ({ sound = ..., reference = ..., loop = ..., mixChannel = ..., volume = ..., pitch = ..., soundPath = ... }) Parameters : params (table) sound ( tes3sound , string): The sound object, or id of the sound to look for. reference ( tes3reference , tes3mobileActor , string): Optional . The reference to attach the sound to. loop (boolean): If true, the sound will loop. mixChannel (number): Default : tes3.audioMixType.effects . The channel to base volume off of. Maps to tes3.audioMixType constants. volume (number): Default : 1.0 . A value between 0.0 and 1.0 to scale the volume off of. pitch (number): Default : 1.0 . The pitch-shift multiplier. For 22kHz audio (most typical) it can have the range [0.005, 4.5]; for 44kHz audio it can have the range [0.0025, 2.25]. soundPath (string): Optional . The path to a custom soundfile (useful for playing sounds that are not registered in the Construction Set). Starts in Data Files\\Sound. Returns : executed (boolean)","title":"tes3.playSound"},{"location":"apis/tes3/#tes3playvoiceover","text":"Causes a target actor to play a voiceover. local played = tes3 . playVoiceover ({ actor = ..., voiceover = ... }) Parameters : params (table) actor ( tes3mobileActor , tes3reference , string): The actor to play a voiceover. voiceover (number): Maps to tes3.voiceover constants. Returns : played (boolean)","title":"tes3.playVoiceover"},{"location":"apis/tes3/#tes3positioncell","text":"Positions a reference to another place. local executed = tes3 . positionCell ({ reference = ..., cell = ..., position = ..., orientation = ..., forceCellChange = ..., suppressFader = ..., teleportCompanions = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Default : tes3.mobilePlayer . The reference to reposition. cell ( tes3cell ): Optional . The cell to move the reference to. If not provided, the reference will be moved to a cell in the exterior worldspace at the position provided. position ( tes3vector3 , table): The position to move the reference to. orientation ( tes3vector3 , table): Optional . The new orientation of the reference. forceCellChange (boolean): Optional . When true, forces the game to update a reference that has moved within a single cell, as if it was moved into a new cell. suppressFader (boolean): Optional . When moving the player, can be used to prevent the fade in and out visual effect. teleportCompanions (boolean): Default : true . If used on the player, determines if companions should also be teleported. Returns : executed (boolean)","title":"tes3.positionCell"},{"location":"apis/tes3/#tes3pushkey","text":"Simulates pushing a keyboard key. tes3 . pushKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace.","title":"tes3.pushKey"},{"location":"apis/tes3/#tes3random","text":"Returns a value from Morrowind's random number generator. This is not preferrable to lua's math.random function, but may be necessary for reproducing Morrowind's generation. tes3 . random ( seed ) Parameters : seed (number): Optional . If provided, it the number generator is seeded with this value. Pointers to objects may be used, such as a reference's sceneNode, to create a consistent if less than random seed.","title":"tes3.random"},{"location":"apis/tes3/#tes3raytest","text":"Performs a ray test and returns various information related to the result(s). If findAll is set, the result will be a table of results, otherwise only the first result is returned. local result = tes3 . rayTest ({ position = ..., direction = ..., findAll = ..., maxDistance = ..., sort = ..., useModelBounds = ..., useModelCoordinates = ..., useBackTriangles = ..., observeAppCullFlag = ..., root = ..., ignoreSkinned = ..., returnColor = ..., returnNormal = ..., returnSmoothNormal = ..., returnTexture = ..., ignore = ... }) Parameters : params (table) position ( tes3vector3 , table): Position of the ray origin. direction ( tes3vector3 , table): Direction of the ray. Does not have to be unit length. findAll (boolean): If true, the ray test won't stop after the first result. maxDistance (number): Optional . The maximum distance that the test will run. sort (boolean): Default : true . If true, the results will be sorted by distance from the origin position. useModelBounds (boolean): If true, model bounds will be tested for intersection. Otherwise triangles will be used. useModelCoordinates (boolean): If true, model coordinates will be used instead of world coordinates. useBackTriangles (boolean): Include intersections with back-facing triangles. observeAppCullFlag (boolean): Default : true . Ignore intersections with culled (hidden) models. root (node ): Default*: tes3.game.worldSceneGraphRoot . Node pointer to node scene. ignoreSkinned (boolean): Ignore results from skinned objects. returnColor (boolean): Calculate and return the vertex color at intersections. returnNormal (boolean): Default : true . Calculate and return the vertex normal at intersections. returnSmoothNormal (boolean): Use normal interpolation for calculating vertex normals. returnTexture (boolean): Calculate and return the texture coordinate at intersections. ignore (table): Optional . An array of references and/or scene graph nodes to cull from the result(s). Returns : result ( niPickRecord , table) Example: Get Activation Target local hitResult = tes3 . rayTest ({ position = tes3 . getPlayerEyePosition (), direction = tes3 . getPlayerEyeVector () }) local hitReference = hitResult and hitResult . reference if ( hitReference == nil ) then return end tes3 . messageBox ( \"The player is looking at a '%s'\" , hitReference . object . name or hitReference . object . id ) Example: Get Camera Target local hitResult = tes3 . rayTest ({ position = tes3 . getCameraPosition (), direction = tes3 . getCameraVector () }) local hitReference = hitResult and hitResult . reference if ( hitReference == nil ) then return end tes3 . messageBox ( \"The camera is looking at a '%s'\" , hitReference . object . name or hitReference . object . id ) Example: Multiple Results local results = tes3 . rayTest { tes3 . getCameraPosition (), direction = tes3 . getCameraVector (), findAll = true } if results then for i , hit in pairs ( results ) do mwse . log ( \"Ray hit #%d: %s\" , i , hit . reference or \"<non-reference>\" ); end end Example: Save rayTest result for use at a later point local result = tes3 . rayTest { -- result can get invalidated position = tes3 . getPlayerEyePosition (), direction = tes3 . getPlayerEyeVector (), ignore = { tes3 . player } } local ref if result then ref = tes3 . makeSafeObjectHandle ( result . reference ) end -- Before using ref, now we can chack if it is valid if ref : valid () then -- Now we can safely do something with ref end","title":"tes3.rayTest"},{"location":"apis/tes3/#tes3releasekey","text":"Simulates releasing a keyboard key. tes3 . releaseKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace.","title":"tes3.releaseKey"},{"location":"apis/tes3/#tes3removeeffects","text":"Removes magic effects from a given reference. Requires that either the effect or castType parameter be provided. tes3 . removeEffects ( reference , effect , castType , chance , removeSpell ) Parameters : reference ( tes3reference ): Target reference to remove effects from. effect (number): Optional . Maps to tes3.effect constants. castType (number): Optional . Maps to tes3.spellType constants. chance (number): Default : 100 . The chance for the effect to be removed. removeSpell (boolean): Optional . If removing by cast type, determines if the spell should be removed from the target's spell list. Defaults to true if castType is not tes3.spellType.spell. This causes diseases and curses to be removed when dispelled. Example: Simulating a Dispel local function example ( e ) -- We only care about the player if ( e . mobile . objectType ~= tes3 . objectType . mobilePlayer ) then return end local cell = tes3 . mobilePlayer . cell if ( cell . isInterior and not cell . hasWater ) then return end local waterLevel = cell . waterLevel local headPosition = tes3 . mobilePlayer . position . z + tes3 . mobilePlayer . height local underwater = headPosition < waterLevel if underwater then -- There is a 50 % chance that any Water Breathing effect will be removed from the player tes3 . removeEffects ({ reference = tes3 . player , chance = 50 , effect = tes3 . effect . waterBreathing , }) end end event . register ( \"initialized\" , function () event . register ( \"calcMoveSpeed\" , example ) end )","title":"tes3.removeEffects"},{"location":"apis/tes3/#tes3removeitem","text":"Removes an item from a given reference's inventory. local removedCount = tes3 . removeItem ({ reference = ..., item = ..., itemData = ..., deleteItemData = ..., count = ..., playSound = ..., reevaluateEquipment = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to remove items from. item ( tes3item , string): The item to remove. itemData ( tes3itemData ): Optional . The item data for the exact item to remove. deleteItemData ( tes3itemData ): Optional . Whether to delete the item data after remove succeeds. Automatically set if itemData is used. Does not need to be specified for normal usage. count (number): Default : 1 . The maximum number of items to remove. playSound (boolean): Default : true . If false, the up/down sound for the item won't be played. reevaluateEquipment (boolean): Default : true . If true, and the item removed is armor, clothing, or a weapon, the actor will reevaluate its equipment choices to see if it needs to equip a new item. This does not affect the player. updateGUI (boolean): Default : true . If false, the function won't manually resync the player's GUI state. This can result in some optimizations, though tes3ui.forcePlayerInventoryUpdate() must manually be called after all inventory updates are finished. Returns : removedCount (number)","title":"tes3.removeItem"},{"location":"apis/tes3/#tes3removeitemdata","text":"Removes and deletes item data from a given reference, or from their inventory. If no itemData is provided, it will be removed from the reference itself. local wasRemoved = tes3 . removeItemData ({ from = ..., item = ..., itemData = ..., force = ..., ignoreOwnership = ..., updateGUI = ... }) Parameters : params (table) from ( tes3reference , tes3mobileActor , string): The reference or mobile whose inventory will be modified. item ( tes3item , string): The item to remove item data for. itemData ( tes3itemData ): Optional . The exact item data to remove. If no itemData is provided, the itemData from the reference itself will be removed. force (boolean): If true, no checks are made to see if the item data should be deleted. It will always be purged. ignoreOwnership (boolean): Default : true . If force is false, a check will be made to see if the item data is empty and can be deleted. By default this ignores any ownership data. Setting this to false will override that behavior. updateGUI (boolean): Default : true . If false, the player or contents menu won't be updated. Returns : wasRemoved (boolean)","title":"tes3.removeItemData"},{"location":"apis/tes3/#tes3removesound","text":"Stops a sound playing. Without a reference, it will match unattached sounds. With a reference, it will only match a sound playing on that specific reference. tes3 . removeSound ({ sound = ..., reference = ... }) Parameters : params (table) sound ( tes3sound , string): The sound object, or id of the sound to look for. reference ( tes3reference , tes3mobileActor , string): Optional . The reference the sound is attached to.","title":"tes3.removeSound"},{"location":"apis/tes3/#tes3removespell","text":"Removes a spell from an actor's spell list. If the spell is passive, any active effects from that spell are retired. local wasRemoved = tes3 . removeSpell ({ reference = ..., actor = ..., spell = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to remove the spell from. To manipulate an actor without specifying any particular reference, use actor instead. actor ( tes3actor , string): Who to remove the spell from. Providing a base actor can be done before a save has been loaded, but may not correctly update effects for instanced versions of that actor in an active save. spell ( tes3spell , string): The spell to remove. updateGUI (boolean): Default : true . If true, the GUI will be updated respecting the removal of the spell. This can be useful to disable when batch-removing many spells. The batch should be ended with tes3.updateMagicGUI to reflect the changes. Returns : wasRemoved (boolean): True if the spell was successfully removed. This can be false if the spell comes from a race or birthsign.","title":"tes3.removeSpell"},{"location":"apis/tes3/#tes3runlegacyscript","text":"This function will compile and run a mwscript chunk of code. This is not ideal to use, but can be used for features not yet exposed to lua. local executed = tes3 . runLegacyScript ({ script = ..., source = ..., command = ..., variables = ..., reference = ..., dialogue = ..., info = ... }) Parameters : params (table) script ( tes3script ): Default : tes3.worldController.scriptGlobals . The base script to base the execution from. source (number): The compilation source to use. Defaults to tes3.scriptSource.default command (string): The script text to compile and run. variables (tes3scriptVariables): Optional . If a reference is provided, the reference's variables will be used. reference ( tes3reference , tes3mobileActor , string): The reference to target for execution. dialogue ( tes3dialogue , string): Optional . If compiling for dialogue context, the dialogue associated with the script. info ( tes3dialogueInfo ): Optional . The info associated with the dialogue. Returns : executed (boolean)","title":"tes3.runLegacyScript"},{"location":"apis/tes3/#tes3savegame","text":"Saves the game. local saved = tes3 . saveGame ({ file = ..., name = ... }) Parameters : params (table) file (string): Default : \"quiksave\" . The filename of the save that will be created, without extension. name (string): Default : \"Quicksave\" . The display name of the save. Returns : saved (boolean)","title":"tes3.saveGame"},{"location":"apis/tes3/#tes3say","text":"Plays a sound file, with an optional alteration and subtitle. Note : MP3 voice files must conform to the MPEG Layer-3, 64 Kbps 44100 kHz, 16-bit mono specification. tes3 . say ({ reference = ..., soundPath = ..., pitch = ..., volume = ..., forceSubtitle = ..., subtitle = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to make say something. soundPath (string): A path to a valid sound file. pitch (number): Default : 1 . A pitch shift to adjust the sound with. volume (number): Default : 1 . The volume to play the sound at, relative to the voice mix channel. forceSubtitle (boolean): If true a subtitle will be shown, even if subtitles are disabled. subtitle (string): Optional . The subtitle to show if subtitles are enabled, or if forceSubtitle is set.","title":"tes3.say"},{"location":"apis/tes3/#tes3set3rdpersoncameraoffset","text":"Changes the 3rd person camera's offset from the player's head. Note this function can be used once WorldController and MobilePlayer have finished initializing. tes3 . set3rdPersonCameraOffset ( offset ) Parameters : offset ( tes3vector3 ): The offset vector.","title":"tes3.set3rdPersonCameraOffset"},{"location":"apis/tes3/#tes3setaiactivate","text":"Configures a mobile actor to activate an object. tes3 . setAIActivate ({ reference = ..., target = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ) target ( tes3reference ) reset (boolean): Default : true .","title":"tes3.setAIActivate"},{"location":"apis/tes3/#tes3setaiescort","text":"Configures a mobile actor to escort another actor to a destination. tes3 . setAIEscort ({ reference = ..., target = ..., destination = ..., duration = ..., cell = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ) target ( tes3reference , tes3mobileActor ) destination ( tes3vector3 , table) duration (number): Optional . cell ( tes3cell , string): Optional . reset (boolean): Default : true .","title":"tes3.setAIEscort"},{"location":"apis/tes3/#tes3setaifollow","text":"Configures a mobile actor to follow another actor to a destination. tes3 . setAIFollow ({ reference = ..., target = ..., destination = ..., duration = ..., cell = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ) target ( tes3reference , tes3mobileActor ) destination ( tes3vector3 , table): Optional . duration (number): Optional . cell ( tes3cell , string): Optional . reset (boolean): Default : true .","title":"tes3.setAIFollow"},{"location":"apis/tes3/#tes3setaitravel","text":"Configures a mobile actor to travel to a destination. tes3 . setAITravel ({ reference = ..., destination = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ) destination ( tes3vector3 , table) reset (boolean): Default : true .","title":"tes3.setAITravel"},{"location":"apis/tes3/#tes3setaiwander","text":"Configures a mobile actor to wander around a cell. tes3 . setAIWander ({ reference = ..., idles = ..., range = ..., duration = ..., time = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ) idles (table) range (number): Optional . duration (number): Optional . time (number): Optional . reset (boolean): Default : true .","title":"tes3.setAIWander"},{"location":"apis/tes3/#tes3setanimationtiming","text":"This function sets a reference's animation groups' timings to a specified value. tes3 . setAnimationTiming ({ reference = ..., timing = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): A reference whose animation groups' timings to set. timing (number, table): If one parameter is provided, all animation data timings will be set to the timing provided. If a table with 3 timings is provided, animation data timings will be set accordingly.","title":"tes3.setAnimationTiming"},{"location":"apis/tes3/#tes3setdestination","text":"Sets or changes the destination of a door to a new location. tes3 . setDestination ({ reference = ..., position = ..., orientation = ..., cell = ... }) Parameters : params (table) reference ( tes3reference ): The door reference that will be updated. position ( tes3vector3 , table): The new coordinates of the transition. orientation ( tes3vector3 , table): The new rotation to use after transition. cell ( tes3cell , string): Optional . The cell to transition to, if transitioning to an interior.","title":"tes3.setDestination"},{"location":"apis/tes3/#tes3setenabled","text":"Enables or disables a reference. local success = tes3 . setEnabled ({ reference = ..., toggle = ..., enabled = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to enable/disable. toggle (boolean): If true, the enabled state will be toggled. enabled (boolean): Default : true . If not toggling, setting enabled to true will enable the reference or to false will disable the reference. Returns : success (boolean)","title":"tes3.setEnabled"},{"location":"apis/tes3/#tes3setglobal","text":"Sets the value of a global value. If the global could not be found, the function returns false. local value = tes3 . setGlobal ( id , value ) Parameters : id (string) value (number) Returns : value (boolean)","title":"tes3.setGlobal"},{"location":"apis/tes3/#tes3setitemisstolen","text":"This function changes an item's stolen flag. Morrowind handles stealing by marking the base item (not the inventory stack) with NPCs that you have stolen that item from. The NPC will recognize an item as stolen if they are marked as stolen on the base item. tes3 . setItemIsStolen ( item , from , stolen ) Parameters : item ( tes3item ): The item whose stolen flag to modify. from ( tes3baseObject ): The location the item is stolen from. stolen (boolean): Default : true . If this parameter is set to true, the item will be flagged as stolen. Otherwise, the item's stolen flag will be removed.","title":"tes3.setItemIsStolen"},{"location":"apis/tes3/#tes3setjournalindex","text":"Sets the index of a given journal in a way similar to the mwscript function SetJournalIndex. local wasSet = tes3 . setJournalIndex ({ id = ..., index = ..., speaker = ..., showMessage = ... }) Parameters : params (table) id ( tes3dialogue , string) index (number) speaker ( tes3mobileActor , tes3reference , string) showMessage (boolean): If set, a message may be shown to the player. Returns : wasSet (boolean)","title":"tes3.setJournalIndex"},{"location":"apis/tes3/#tes3setkillcount","text":"Sets player's kill count of a certain type of actor. tes3 . setKillCount ({ actor = ..., count = ... }) Parameters : params (table) actor ( tes3actor , string): The actor (or their ID) for whom to set player's kill count. count (number): Number of kills that will be set.","title":"tes3.setKillCount"},{"location":"apis/tes3/#tes3setlocklevel","text":"Sets a locked reference's lock level. This does not lock the object. local set = tes3 . setLockLevel ({ reference = ..., level = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) level (number) Returns : set (boolean)","title":"tes3.setLockLevel"},{"location":"apis/tes3/#tes3setmarklocation","text":"This function sets the player's mark location to the one specified. tes3 . setMarkLocation ({ position = ..., rotation = ..., cell = ... }) Parameters : params (table) position ( tes3vector3 ): Coordinates of the mark's position. rotation (number): Default : Player's current rotation. . This argument controls which direction the player's mark location will be facing. cell ( tes3cell ): Optional . A cell in which the mark should be placed.","title":"tes3.setMarkLocation"},{"location":"apis/tes3/#tes3setowner","text":"This function sets the owner of a reference. tes3 . setOwner ({ reference = ..., remove = ..., owner = ..., requiredGlobal = ..., requiredRank = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): A reference whose owner to set. remove (boolean): Optional . If this parameter is set to true, reference's owner field will be removed. owner ( tes3npc , tes3faction , string): Assigns this NPC or a faction as the owner of the reference. requiredGlobal ( tes3globalVariable ): Optional . If owner is set to NPC, requiredGlobal variable can be set. requiredRank (number): Default : 0 . If owner is set to faction, requitedRank variable controls minimal rank in faction the player has to have to be able to freely take the reference.","title":"tes3.setOwner"},{"location":"apis/tes3/#tes3setplayercontrolstate","text":"Enables or disables player's controls state. local changedControlState = tes3 . setPlayerControlState ({ enabled = ..., attack = ..., jumping = ..., magic = ..., vanity = ..., viewSwitch = ... }) Parameters : params (table) enabled (boolean): Optional . Setting this to false will disable any kind of control. attack (boolean): Optional . If this is false, it will block player from attacking. jumping (boolean): Optional . If this is false, it will block player from jumping. magic (boolean): Optional . If this is false, it will block player from using magic. vanity (boolean): Optional . If this is false, it will block player from going to vanity mode. viewSwitch (boolean): Optional . If this is false, it will block player changing view mod from 1st to 3rd person camera and vice versa. Returns : changedControlState (boolean)","title":"tes3.setPlayerControlState"},{"location":"apis/tes3/#tes3setsourceless","text":"Sets an object (of any kind) to be sourceless, which are objects the game does not store in savegames. This can be useful for mod-created temporary objects which are not necessary to save. tes3 . setSourceless ({ object = ..., sourceless = ... }) Parameters : params (table) object ( tes3baseObject ): The object whose sourceless flag to modify. sourceless (boolean): Default : true . Allows flagging an object as sourceless or undoing that action.","title":"tes3.setSourceless"},{"location":"apis/tes3/#tes3setstatistic","text":"Sets a statistic on a given actor. This should be used instead of manually setting values on the game structures, to ensure that events and GUI elements are properly handled. Either skill, attribute, or name must be provided. tes3 . setStatistic ({ attribute = ..., base = ..., current = ..., limit = ..., name = ..., reference = ..., skill = ..., value = ... }) Parameters : params (table) attribute (number): Optional . The attribute to set. base (number): Optional . If set, the base value will be set. current (number): Optional . If set, the current value will be set. limit (boolean): If set, the attribute won't rise above 100 or fall below 0. name (string): Optional . A generic name of an attribute to set. reference ( tes3mobileActor , tes3reference , string) skill (number): Optional . The skill to set. value (number): Optional . If set, both the base and current value will be set.","title":"tes3.setStatistic"},{"location":"apis/tes3/#tes3settrap","text":"Sets the trap on a given reference. local trapped = tes3 . setTrap ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) spell ( tes3spell , string) Returns : trapped (boolean)","title":"tes3.setTrap"},{"location":"apis/tes3/#tes3setvanitymode","text":"Toggles the camera into vanity mode. In vanity mode the camera is in third person and it is orbiting slowly around the player character. Returns true if changed to vanity mode. Note that unlike the vanity mode caused by not doing anything for a while, this vanity mode must be toggled to go off. local changedVanityMode = tes3 . setVanityMode ({ enabled = ..., checkVanityDisabled = ..., toggle = ... }) Parameters : params (table) enabled (boolean): Default : true . This flag sets the vanity mode as enabled or disabled. checkVanityDisabled (boolean): Default : true . This will prevent changing vanity mode according to vanityDisabled flag on tes3.mobilePlayer. toggle (boolean): Optional . When this flag is set to true. The vanity mode will be toggled. If the player was in vanity mode, this will make the player leave vanity mode. Conversly, if the player wasn't in the vanity mode, this will turn on the vanity mode. Returns : changedVanityMode (boolean)","title":"tes3.setVanityMode"},{"location":"apis/tes3/#tes3setwerewolfkillcount","text":"Sets player's kill count as a werewolf. tes3 . setWerewolfKillCount ({ count = ... }) Parameters : params (table) count (number): Number of kills.","title":"tes3.setWerewolfKillCount"},{"location":"apis/tes3/#tes3showalchemymenu","text":"This function opens alchemy menu. tes3 . showAlchemyMenu ()","title":"tes3.showAlchemyMenu"},{"location":"apis/tes3/#tes3showrepairservicemenu","text":"Opens the service repair menu. tes3 . showRepairServiceMenu ()","title":"tes3.showRepairServiceMenu"},{"location":"apis/tes3/#tes3showrestmenu","text":"This function opens the resting menu and returns true on success. If the player can't rest currently, it returns false. Various parameters can be used to allow resting in situations not normally possible. local success = tes3 . showRestMenu ({ checkForEnemies = ..., checkForSolidGround = ..., checkSleepingIllegal = ..., checkIsWerewolf = ..., showMessage = ..., resting = ..., waiting = ... }) Parameters : params (table) checkForEnemies (boolean): Default : true . Perform a check whether there are enemies nearby before opening rest menu. If there are, false is returned. checkForSolidGround (boolean): Default : true . Perform a check if the player is underwater. If underwater, false is returned. checkSleepingIllegal (boolean): Default : true . Perform a check if the sleeping in the current cell is illegal. If illegal, then the player will be prompted to wait instead of rest. checkIsWerewolf (boolean): Default : true . Perform a check if the player is Werewolf. If they are, then the player will be prompted to wait instead of rest. showMessage (boolean): Default : true . Should a messagebox be shown if the player can't open resting menu because some condition isn't met. resting (boolean): Default : true . Should this be a rest? waiting (boolean): Optional . Or, is this a wait? Returns : success (boolean)","title":"tes3.showRestMenu"},{"location":"apis/tes3/#tes3skipanimationframe","text":"Skips a given reference's animation for a single frame. tes3 . skipAnimationFrame ({ reference = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference whose animation frame will be skipped.","title":"tes3.skipAnimationFrame"},{"location":"apis/tes3/#tes3streammusic","text":"This function interrupts the current music to play the specified music track. local executed = tes3 . streamMusic ({ path = ..., situation = ..., crossfade = ... }) Parameters : params (table) path (string): Path to the music file, relative to Data Files/music/. situation (number): Default : tes3.musicSituation.uninterruptible . Determines what kind of gameplay situation the music should stay active for. Explore music plays during non-combat, and ends when combat starts. Combat music starts during combat, and ends when combat ends. Uninterruptible music always plays, ending only when the track does. This value maps to tes3.musicSituation constants. crossfade (number): Default : 1.0 . The duration in seconds of the crossfade from the old to the new track. The default is 1.0. Returns : executed (boolean)","title":"tes3.streamMusic"},{"location":"apis/tes3/#tes3tapkey","text":"Simulates tapping a keyboard key. tes3 . tapKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace.","title":"tes3.tapKey"},{"location":"apis/tes3/#tes3testlineofsight","text":"Checks if there is a clear line of sight between two references, or two points in space, in the same method that the game uses for actor vision. You should pass two references, or two positions and heights. Only certain object types count as blocking for the purposes of the test: Statics, activators, containers, doors, and lights with non-zero weight. The collision root node is used for testing, if present in the model. local hasLineOfSight = tes3 . testLineOfSight ({ reference1 = ..., reference2 = ..., position1 = ..., height1 = ..., position2 = ..., height2 = ... }) Parameters : params (table) reference1 ( tes3reference ): Position of the starting point of the LoS check. For actors, this point is set to position of this reference's head. For other objects the starting point is at the top of its bounding box. reference2 ( tes3reference ): Position of the ending point of the LoS check. For actors, this point is set to position of this reference's head. For other objects the ending point is at the top of its bounding box. position1 ( tes3vector3 , table): Position of the starting point of the LoS check. Modified by height1. height1 ( tes3vector3 , table): Optional . Moves the starting point upwards (+Z direction) by this amount. Normally used to simulate head height from a position that is on the ground. Defaults to 0. position2 ( tes3vector3 , table): Position of the ending point of the LoS check. Modified by height2. height2 ( tes3vector3 , table): Optional . Moves the starting point upwards (+Z direction) by this amount. Normally used to simulate head height from a position that is on the ground. Defaults to 0. Returns : hasLineOfSight (boolean)","title":"tes3.testLineOfSight"},{"location":"apis/tes3/#tes3togglepov","text":"Forces a toggle of the player's POV the next simulation frame, and returns if the player was previously in 3rd person. Multiple calls in the same frame will not stack. local was3rdPerson = tes3 . togglePOV () Returns : was3rdPerson (boolean)","title":"tes3.togglePOV"},{"location":"apis/tes3/#tes3transferitem","text":"Moves one or more items from one reference to another. Returns the actual amount of items successfully transferred. local transferredCount = tes3 . transferItem ({ from = ..., to = ..., item = ..., itemData = ..., count = ..., playSound = ..., limitCapacity = ..., reevaluateEquipment = ..., updateGUI = ... }) Parameters : params (table) from ( tes3reference , tes3mobileActor , string): Who to take items from. to ( tes3reference , tes3mobileActor , string): Who to give items to. item ( tes3item , string): The item to transfer. itemData ( tes3itemData ): Optional . The specific item data to transfer if, for example, you want to transfer a specific player item. count (number): Default : 1 . The maximum number of items to transfer. playSound (boolean): Default : true . If false, the up/down sound for the item won't be played. limitCapacity (boolean): Default : true . If false, items can be placed into containers that shouldn't normally be allowed. This includes organic containers, and containers that are full. reevaluateEquipment (boolean): Default : true . If true, and the item transferred is armor, clothing, or a weapon, the actors will reevaluate their equipment choices to see if the new item is worth equipping. This does not affect the player. updateGUI (boolean): Default : true . If false, the function won't manually resync the player's GUI state. This can result in some optimizations, though tes3ui.forcePlayerInventoryUpdate() must manually be called after all inventory updates are finished. Returns : transferredCount (number)","title":"tes3.transferItem"},{"location":"apis/tes3/#tes3triggercrime","text":"Emulates the player committing a crime. local executed = tes3 . triggerCrime ({ criminal = ..., forceDetection = ..., type = ..., value = ..., victim = ... }) Parameters : params (table) criminal ( tes3mobileActor , tes3reference , string): Default : tes3.mobilePlayer . forceDetection (boolean): Can be set to true to ignore normal detection checks. type (number): Default : tes3.crimeType.stealing . Maps to tes3.crimeType constants. value (number): Penalty for the crime. Defaults to 25 for pickpocketing. victim ( tes3mobileActor , tes3reference , string): Default : tes3.mobilePlayer . Returns : executed (boolean)","title":"tes3.triggerCrime"},{"location":"apis/tes3/#tes3undotransform","text":"Changes a reference back from werewolf form to human. This function works only on a reference infected with Lycanthropy, be it the player or any other reference. Returns true if successful. local success = tes3 . undoTransform ({ reference = ... }) Parameters : params (table) reference ( tes3reference ): A reference to change back to human. Returns : success (boolean)","title":"tes3.undoTransform"},{"location":"apis/tes3/#tes3unhammerkey","text":"Stops simulating hammering a keyboard key. tes3 . unhammerKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace.","title":"tes3.unhammerKey"},{"location":"apis/tes3/#tes3unlock","text":"Unlocks an object. Returns true if the object can be and wasn't already unlocked. local unlocked = tes3 . unlock ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) Returns : unlocked (boolean)","title":"tes3.unlock"},{"location":"apis/tes3/#tes3updateinventorygui","text":"Forces the GUI to update inventory-relevant elements for a given reference. This can be used after many calls to inventory-manipulating functions while passing updateGUI as false to resync inventory tiles, container weights, and companion data. tes3 . updateInventoryGUI ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to update GUI elements for.","title":"tes3.updateInventoryGUI"},{"location":"apis/tes3/#tes3updatejournal","text":"Updates the journal index in a way similar to the mwscript function Journal. local wasSet = tes3 . updateJournal ({ id = ..., index = ..., showMessage = ... }) Parameters : params (table) id ( tes3dialogue , string) index (number) showMessage (boolean): If set, a message may be shown to the player. Returns : wasSet (boolean)","title":"tes3.updateJournal"},{"location":"apis/tes3/#tes3updatemagicgui","text":"Forces the GUI to update magic-relevant elements for a given reference. This can be used after many calls to magic- or magic item-manipulating functions while passing updateGUI as false to resync inventory tiles, container weights, and companion data. tes3 . updateMagicGUI ({ reference = ..., updateSpells = ..., updateEnchantments = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to update GUI elements for. updateSpells (boolean): Default : true . Determines if the spell and power lists are refreshed. updateEnchantments (boolean): Default : true . Determines if the enchanted items list is refreshed.","title":"tes3.updateMagicGUI"},{"location":"apis/tes3/#tes3wakeup","text":"This function wakes player up and returns true if successful. Note this function returns false if WorldController or MobilePlayer aren't initialized, and if the player is not sleeping or waiting local wokeUp = tes3 . wakeUp () Returns : wokeUp (boolean)","title":"tes3.wakeUp"},{"location":"apis/tes3ui/","text":"tes3ui \u2693\ufe0e The tes3ui library provides access to manipulating the game's GUI. Functions \u2693\ufe0e tes3ui.acquireTextInput \u2693\ufe0e Sends all text input to the specified element. Calling this function with a nil argument will release text input and allow keybinds to work. Suppresses most keybinds while active, except the Journal open/close keybind (it's up to the individual menu implementation). Only one element can have control of input, and there is no automatic restoration of control if one element takes control from another. Be careful of conflicts with other users of this function. tes3ui . acquireTextInput ( element ) Parameters : element ( tes3uiElement ): Optional . tes3ui.captureMouseDrag \u2693\ufe0e When used in a mouse event, causes the element to capture further mouse events even when the cursor goes outside the element. Setting mouse capture should always be accompanied by releasing it on a complementary event. This is commonly used for dragging, so that it can continue even if the mouse moves slightly outside the element. The capture is always removed when the element is destroyed. The capture may also be removed when the mouse is released, but this is not reliable, as the engine forgets what to do if there is input from any other controller while the mouse is held down. tes3ui . captureMouseDrag ( capture ) Parameters : capture (boolean): Turns on mouse capture for the element currently processing a mouse event if true, sending all further mouse events to that element. Turns off capture if false. Example: Basic Usage element : register ( \"mouseDown\" , function ( e ) -- Capture must be inside a mouse event. tes3ui . captureMouseDrag ( true ) end ) element : register ( \"mouseRelease\" , function ( e ) -- Release may be anywhere. tes3ui . captureMouseDrag ( false ) end ) tes3ui.closeJournal \u2693\ufe0e Closes the Journal. local result = tes3ui . closeJournal () Returns : result (boolean) tes3ui.createHelpLayerMenu \u2693\ufe0e Creates a help layer menu. Help layer menus include notifications and tooltips that are always above the rest of the interface. The game realizes this using a separate menu root and set of functions. Note, to create tooltips with the correct behaviour, use tes3ui.createTooltipMenu. Unlike standard menus, help layer menus are always created with a fixed frame. local result = tes3ui . createHelpLayerMenu ({ id = ... }) Parameters : params (table) id (number): The menu\u2019s ID. The menu can be later accessed by tes3ui.findHelpLayerMenu(id). Returns : result ( tes3uiElement ) tes3ui.createMenu \u2693\ufe0e Creates a top-level menu. local result = tes3ui . createMenu ({ id = ..., dragFrame = ..., fixedFrame = ..., loadable = ... }) Parameters : params (table) id (number): The menu\u2019s ID. The menu can be later accessed by tes3ui.findMenu(id). dragFrame (boolean): Constructs a draggable and resizeable frame and background for the menu. It is similar to the stats, inventory, magic and map menus in the standard UI. After construction, position and minimum dimensions should be set. fixedFrame (boolean): Constructs a fixed (non-draggable) frame and background for the menu. The layout system should automatically centre and size it to fit whatever is added to the menu. loadable (boolean): Default : true . If set to false, calls to loadMenuPosition will fail. Returns : result ( tes3uiElement ) tes3ui.createTooltipMenu \u2693\ufe0e Creates a tooltip menu, which can be an empty menu or an item tooltip. This should be called from within a tooltip event callback. These automatically follow the mouse cursor, and are also destroyed automatically when the mouse leaves the originating element. Creating an item tooltip will invoke the uiObjectTooltip event. local result = tes3ui . createTooltipMenu ({ item = ..., itemData = ... }) Parameters : params (table) item ( tes3item , string): Optional . The item to create a tooltip for. If not specified, the tooltip will be empty. itemData ( tes3itemData ): Optional . The item data for the item. Returns : result ( tes3uiElement ) Example: Add an item tooltip to a new element local button = menu : createButton { text = \"- Item -\" } local item = tes3 . getObject ( \"iron_shield\" ) button : register ( \"help\" , function ( e ) local tooltip = tes3ui . createTooltipMenu { item = item } tooltip : createLabel { text = \"Additional custom text\" } end ) tes3ui.enterMenuMode \u2693\ufe0e Requests menu mode be activated on a menu with a given id. local result = tes3ui . enterMenuMode ( id ) Parameters : id (number) Returns : result (boolean) tes3ui.findHelpLayerMenu \u2693\ufe0e Locates a help layer menu through its id. Help layer menus include notifications and tooltips that are always above the rest of the interface. The game realizes this using a separate menu root and set of functions. local result = tes3ui . findHelpLayerMenu ( id ) Parameters : id (number) Returns : result ( tes3uiElement ) tes3ui.findMenu \u2693\ufe0e Locates a top-level menu through its id. local result = tes3ui . findMenu ( id ) Parameters : id (number): The ID of the menu to locate. Returns : result ( tes3uiElement ) tes3ui.forcePlayerInventoryUpdate \u2693\ufe0e Forces the game to update the inventory tile GUI elements. Unlike tes3ui.updateInventoryTiles, this will force-resync the player's inventory to the GUI, rather than updating what is already in the GUI system. tes3ui . forcePlayerInventoryUpdate () tes3ui.getInventorySelectType \u2693\ufe0e Determines what sort of search is being done when performing an inventory selection, e.g. \"alembic\" or \"ingredient\" or \"soulGemFilled\". local result = tes3ui . getInventorySelectType () Returns : result (string) tes3ui.getMenuOnTop \u2693\ufe0e Returns the top-most, active menu. local result = tes3ui . getMenuOnTop () Returns : result ( tes3uiElement ) tes3ui.getPalette \u2693\ufe0e Gets a standard palette color. Returns an array containing the RGB color values, in the range [0.0, 1.0]. Standard Color Names : active_color , active_over_color , active_pressed_color , answer_color , answer_over_color , answer_pressed_color , background_color , big_answer_color , big_answer_over_color , big_answer_pressed_color , big_header_color , big_link_color , big_link_over_color , big_link_pressed_color , big_normal_color , big_normal_over_color , big_normal_pressed_color , big_notify_color , black_color , count_color , disabled_color , disabled_over_color , disabled_pressed_color , fatigue_color , focus_color , header_color , health_color , health_npc_color , journal_finished_quest_color , journal_finished_quest_over_color , journal_finished_quest_pressed_color , journal_link_color , journal_link_over_color , journal_link_pressed_color , journal_topic_color , journal_topic_over_color , journal_topic_pressed_color , link_color , link_over_color , link_pressed_color , magic_color , magic_fill_color , misc_color , negative_color , normal_color , normal_over_color , normal_pressed_color , notify_color , positive_color , weapon_fill_color , white_color local result = tes3ui . getPalette ( name ) Parameters : name (string): The name of the palette color. Returns : result (table) tes3ui.getServiceActor \u2693\ufe0e Returns the mobile actor currently providing services to the player. local result = tes3ui . getServiceActor () Returns : result ( tes3mobileActor ) tes3ui.getViewportScale \u2693\ufe0e Returns the UI scale, set in MGE. local scale = tes3ui . getViewportScale () Returns : scale (number): The UI scale value set from MGE. tes3ui.getViewportSize \u2693\ufe0e Returns both the viewport width and the viewport height. Note that this value is not necessarily the real resolution of the screen. For that value, see the same-named function in the tes3 namespace. To get the scale used, check getViewportScale . local width , height = tes3ui . getViewportSize () Returns : width (number): The scaled width of the viewport. height (number): The scaled height of the viewport. tes3ui.leaveMenuMode \u2693\ufe0e Requests menu mode be deactivated on a menu with a given id. local result = tes3ui . leaveMenuMode () Returns : result (boolean) tes3ui.logToConsole \u2693\ufe0e Logs a message to the console. tes3ui . logToConsole ( text , isCommand ) Parameters : text (string) isCommand (boolean) tes3ui.lookupID \u2693\ufe0e local executed = tes3ui . lookupID ( unknown ) Parameters : unnamed Returns : executed (string) tes3ui.menuMode \u2693\ufe0e Checks if the game is in menu mode. local result = tes3ui . menuMode () Returns : result (boolean) tes3ui.refreshTooltip \u2693\ufe0e Causes the tooltip to be redisplayed. This will not use a configured delay. This will not function if the help menu does not currently exist, or if it is not currently visible. tes3ui . refreshTooltip () tes3ui.registerID \u2693\ufe0e Registers a UI element name, returning a UI_ID. Once a property is registered, this function always returns the same UI_ID. These UI_IDs are used by the API to locate elements that may not exist (a weak reference), instead of by element name. The registry namespace is shared between Property and UI_ID. It is advisable to use a namespace prefix to avoid collisions with other mods. local result = tes3ui . registerID ( s ) Parameters : s (string) Returns : result (number) tes3ui.registerProperty \u2693\ufe0e Registers a property name, returning a Property. Once a property is registered, this function always returns the same Property. The registry namespace is shared between Property and UI_ID. It is advisable to use a namespace prefix to avoid collisions with other mods. local result = tes3ui . registerProperty ( s ) Parameters : s (string) Returns : result (number) tes3ui.showBookMenu \u2693\ufe0e Displays the book menu with arbitrary text. Paging is automatically handled. It needs to follow book text conventions as in the Construction Set. In essence, it uses HTML syntax. Important: every book needs to end with a <BR> statement to be displayed properly. See bookGetText for an example of properly formatted book text. tes3ui . showBookMenu ( text ) Parameters : text (string) tes3ui.showDialogueMessage \u2693\ufe0e tes3ui . showDialogueMessage ({ text = ..., style = ..., answerIndex = ... }) Parameters : params (table) text (string): Default : ``. The text of the shown message. style (number): Default : 0 . answerIndex (number): Default : 0 . tes3ui.showInventorySelectMenu \u2693\ufe0e tes3ui . showInventorySelectMenu ({ actorRef = ..., callback = ..., filter = ..., title = ..., noResultsText = ..., noResultsCallback = ..., leaveMenuMode = ... }) Parameters : params (table) actorRef ( tes3reference ): Default : tes3player . callback (function): Optional . filter (function, string): Optional . title (string): noResultsText (string): Optional . noResultsCallback (function): Optional . leaveMenuMode (boolean): Optional . Is the menu going to be closed or open after closing Inventory Select Menu. By default, it will be in the state before this function was called. tes3ui.showScrollMenu \u2693\ufe0e Displays the scroll menu with arbitrary text. It needs to follow book text conventions as in the Construction Set. In essence, it uses HTML syntax. Important: every book needs to end with a <BR> statement to be displayed properly. See bookGetText for an example of properly formatted scroll text. tes3ui . showScrollMenu ( text ) Parameters : text (string) tes3ui.stealHelpMenu \u2693\ufe0e tes3ui . stealHelpMenu () tes3ui.suppressTooltip \u2693\ufe0e Controls hiding of world object tooltips. tes3ui . suppressTooltip ( suppress ) Parameters : suppress (boolean): Turns on suppression if true, immediately hiding any active tooltip and further world object tooltips. Turns off suppression if false. tes3ui.updateBarterMenuTiles \u2693\ufe0e Forces the game to update the barter menu's tile GUI elements. tes3ui . updateBarterMenuTiles () tes3ui.updateContentsMenuTiles \u2693\ufe0e Forces the game to update the contents menu's tile GUI elements. tes3ui . updateContentsMenuTiles () tes3ui.updateDialogDisposition \u2693\ufe0e Forces the game to update the dialog disposition GUI element. tes3ui . updateDialogDisposition () tes3ui.updateEnchantingMenu \u2693\ufe0e Forces the game to update the enchanting menu GUI. tes3ui . updateEnchantingMenu () tes3ui.updateInventoryCharacterImage \u2693\ufe0e Tells the game to update the character image in the player's inventory. It will update immediately if the inventory is open, or the next time the inventory is opened otherwise. tes3ui . updateInventoryCharacterImage () tes3ui.updateInventorySelectTiles \u2693\ufe0e Forces the game to update the inventory selection GUI elements. tes3ui . updateInventorySelectTiles () tes3ui.updateInventoryTiles \u2693\ufe0e Forces the game to update the inventory tile GUI elements. tes3ui . updateInventoryTiles () tes3ui.updateSpellmakingMenu \u2693\ufe0e Forces the game to update the spellmaking menu GUI. tes3ui . updateSpellmakingMenu ()","title":"tes3ui"},{"location":"apis/tes3ui/#tes3ui","text":"The tes3ui library provides access to manipulating the game's GUI.","title":"tes3ui"},{"location":"apis/tes3ui/#functions","text":"","title":"Functions"},{"location":"apis/tes3ui/#tes3uiacquiretextinput","text":"Sends all text input to the specified element. Calling this function with a nil argument will release text input and allow keybinds to work. Suppresses most keybinds while active, except the Journal open/close keybind (it's up to the individual menu implementation). Only one element can have control of input, and there is no automatic restoration of control if one element takes control from another. Be careful of conflicts with other users of this function. tes3ui . acquireTextInput ( element ) Parameters : element ( tes3uiElement ): Optional .","title":"tes3ui.acquireTextInput"},{"location":"apis/tes3ui/#tes3uicapturemousedrag","text":"When used in a mouse event, causes the element to capture further mouse events even when the cursor goes outside the element. Setting mouse capture should always be accompanied by releasing it on a complementary event. This is commonly used for dragging, so that it can continue even if the mouse moves slightly outside the element. The capture is always removed when the element is destroyed. The capture may also be removed when the mouse is released, but this is not reliable, as the engine forgets what to do if there is input from any other controller while the mouse is held down. tes3ui . captureMouseDrag ( capture ) Parameters : capture (boolean): Turns on mouse capture for the element currently processing a mouse event if true, sending all further mouse events to that element. Turns off capture if false. Example: Basic Usage element : register ( \"mouseDown\" , function ( e ) -- Capture must be inside a mouse event. tes3ui . captureMouseDrag ( true ) end ) element : register ( \"mouseRelease\" , function ( e ) -- Release may be anywhere. tes3ui . captureMouseDrag ( false ) end )","title":"tes3ui.captureMouseDrag"},{"location":"apis/tes3ui/#tes3uiclosejournal","text":"Closes the Journal. local result = tes3ui . closeJournal () Returns : result (boolean)","title":"tes3ui.closeJournal"},{"location":"apis/tes3ui/#tes3uicreatehelplayermenu","text":"Creates a help layer menu. Help layer menus include notifications and tooltips that are always above the rest of the interface. The game realizes this using a separate menu root and set of functions. Note, to create tooltips with the correct behaviour, use tes3ui.createTooltipMenu. Unlike standard menus, help layer menus are always created with a fixed frame. local result = tes3ui . createHelpLayerMenu ({ id = ... }) Parameters : params (table) id (number): The menu\u2019s ID. The menu can be later accessed by tes3ui.findHelpLayerMenu(id). Returns : result ( tes3uiElement )","title":"tes3ui.createHelpLayerMenu"},{"location":"apis/tes3ui/#tes3uicreatemenu","text":"Creates a top-level menu. local result = tes3ui . createMenu ({ id = ..., dragFrame = ..., fixedFrame = ..., loadable = ... }) Parameters : params (table) id (number): The menu\u2019s ID. The menu can be later accessed by tes3ui.findMenu(id). dragFrame (boolean): Constructs a draggable and resizeable frame and background for the menu. It is similar to the stats, inventory, magic and map menus in the standard UI. After construction, position and minimum dimensions should be set. fixedFrame (boolean): Constructs a fixed (non-draggable) frame and background for the menu. The layout system should automatically centre and size it to fit whatever is added to the menu. loadable (boolean): Default : true . If set to false, calls to loadMenuPosition will fail. Returns : result ( tes3uiElement )","title":"tes3ui.createMenu"},{"location":"apis/tes3ui/#tes3uicreatetooltipmenu","text":"Creates a tooltip menu, which can be an empty menu or an item tooltip. This should be called from within a tooltip event callback. These automatically follow the mouse cursor, and are also destroyed automatically when the mouse leaves the originating element. Creating an item tooltip will invoke the uiObjectTooltip event. local result = tes3ui . createTooltipMenu ({ item = ..., itemData = ... }) Parameters : params (table) item ( tes3item , string): Optional . The item to create a tooltip for. If not specified, the tooltip will be empty. itemData ( tes3itemData ): Optional . The item data for the item. Returns : result ( tes3uiElement ) Example: Add an item tooltip to a new element local button = menu : createButton { text = \"- Item -\" } local item = tes3 . getObject ( \"iron_shield\" ) button : register ( \"help\" , function ( e ) local tooltip = tes3ui . createTooltipMenu { item = item } tooltip : createLabel { text = \"Additional custom text\" } end )","title":"tes3ui.createTooltipMenu"},{"location":"apis/tes3ui/#tes3uientermenumode","text":"Requests menu mode be activated on a menu with a given id. local result = tes3ui . enterMenuMode ( id ) Parameters : id (number) Returns : result (boolean)","title":"tes3ui.enterMenuMode"},{"location":"apis/tes3ui/#tes3uifindhelplayermenu","text":"Locates a help layer menu through its id. Help layer menus include notifications and tooltips that are always above the rest of the interface. The game realizes this using a separate menu root and set of functions. local result = tes3ui . findHelpLayerMenu ( id ) Parameters : id (number) Returns : result ( tes3uiElement )","title":"tes3ui.findHelpLayerMenu"},{"location":"apis/tes3ui/#tes3uifindmenu","text":"Locates a top-level menu through its id. local result = tes3ui . findMenu ( id ) Parameters : id (number): The ID of the menu to locate. Returns : result ( tes3uiElement )","title":"tes3ui.findMenu"},{"location":"apis/tes3ui/#tes3uiforceplayerinventoryupdate","text":"Forces the game to update the inventory tile GUI elements. Unlike tes3ui.updateInventoryTiles, this will force-resync the player's inventory to the GUI, rather than updating what is already in the GUI system. tes3ui . forcePlayerInventoryUpdate ()","title":"tes3ui.forcePlayerInventoryUpdate"},{"location":"apis/tes3ui/#tes3uigetinventoryselecttype","text":"Determines what sort of search is being done when performing an inventory selection, e.g. \"alembic\" or \"ingredient\" or \"soulGemFilled\". local result = tes3ui . getInventorySelectType () Returns : result (string)","title":"tes3ui.getInventorySelectType"},{"location":"apis/tes3ui/#tes3uigetmenuontop","text":"Returns the top-most, active menu. local result = tes3ui . getMenuOnTop () Returns : result ( tes3uiElement )","title":"tes3ui.getMenuOnTop"},{"location":"apis/tes3ui/#tes3uigetpalette","text":"Gets a standard palette color. Returns an array containing the RGB color values, in the range [0.0, 1.0]. Standard Color Names : active_color , active_over_color , active_pressed_color , answer_color , answer_over_color , answer_pressed_color , background_color , big_answer_color , big_answer_over_color , big_answer_pressed_color , big_header_color , big_link_color , big_link_over_color , big_link_pressed_color , big_normal_color , big_normal_over_color , big_normal_pressed_color , big_notify_color , black_color , count_color , disabled_color , disabled_over_color , disabled_pressed_color , fatigue_color , focus_color , header_color , health_color , health_npc_color , journal_finished_quest_color , journal_finished_quest_over_color , journal_finished_quest_pressed_color , journal_link_color , journal_link_over_color , journal_link_pressed_color , journal_topic_color , journal_topic_over_color , journal_topic_pressed_color , link_color , link_over_color , link_pressed_color , magic_color , magic_fill_color , misc_color , negative_color , normal_color , normal_over_color , normal_pressed_color , notify_color , positive_color , weapon_fill_color , white_color local result = tes3ui . getPalette ( name ) Parameters : name (string): The name of the palette color. Returns : result (table)","title":"tes3ui.getPalette"},{"location":"apis/tes3ui/#tes3uigetserviceactor","text":"Returns the mobile actor currently providing services to the player. local result = tes3ui . getServiceActor () Returns : result ( tes3mobileActor )","title":"tes3ui.getServiceActor"},{"location":"apis/tes3ui/#tes3uigetviewportscale","text":"Returns the UI scale, set in MGE. local scale = tes3ui . getViewportScale () Returns : scale (number): The UI scale value set from MGE.","title":"tes3ui.getViewportScale"},{"location":"apis/tes3ui/#tes3uigetviewportsize","text":"Returns both the viewport width and the viewport height. Note that this value is not necessarily the real resolution of the screen. For that value, see the same-named function in the tes3 namespace. To get the scale used, check getViewportScale . local width , height = tes3ui . getViewportSize () Returns : width (number): The scaled width of the viewport. height (number): The scaled height of the viewport.","title":"tes3ui.getViewportSize"},{"location":"apis/tes3ui/#tes3uileavemenumode","text":"Requests menu mode be deactivated on a menu with a given id. local result = tes3ui . leaveMenuMode () Returns : result (boolean)","title":"tes3ui.leaveMenuMode"},{"location":"apis/tes3ui/#tes3uilogtoconsole","text":"Logs a message to the console. tes3ui . logToConsole ( text , isCommand ) Parameters : text (string) isCommand (boolean)","title":"tes3ui.logToConsole"},{"location":"apis/tes3ui/#tes3uilookupid","text":"local executed = tes3ui . lookupID ( unknown ) Parameters : unnamed Returns : executed (string)","title":"tes3ui.lookupID"},{"location":"apis/tes3ui/#tes3uimenumode","text":"Checks if the game is in menu mode. local result = tes3ui . menuMode () Returns : result (boolean)","title":"tes3ui.menuMode"},{"location":"apis/tes3ui/#tes3uirefreshtooltip","text":"Causes the tooltip to be redisplayed. This will not use a configured delay. This will not function if the help menu does not currently exist, or if it is not currently visible. tes3ui . refreshTooltip ()","title":"tes3ui.refreshTooltip"},{"location":"apis/tes3ui/#tes3uiregisterid","text":"Registers a UI element name, returning a UI_ID. Once a property is registered, this function always returns the same UI_ID. These UI_IDs are used by the API to locate elements that may not exist (a weak reference), instead of by element name. The registry namespace is shared between Property and UI_ID. It is advisable to use a namespace prefix to avoid collisions with other mods. local result = tes3ui . registerID ( s ) Parameters : s (string) Returns : result (number)","title":"tes3ui.registerID"},{"location":"apis/tes3ui/#tes3uiregisterproperty","text":"Registers a property name, returning a Property. Once a property is registered, this function always returns the same Property. The registry namespace is shared between Property and UI_ID. It is advisable to use a namespace prefix to avoid collisions with other mods. local result = tes3ui . registerProperty ( s ) Parameters : s (string) Returns : result (number)","title":"tes3ui.registerProperty"},{"location":"apis/tes3ui/#tes3uishowbookmenu","text":"Displays the book menu with arbitrary text. Paging is automatically handled. It needs to follow book text conventions as in the Construction Set. In essence, it uses HTML syntax. Important: every book needs to end with a <BR> statement to be displayed properly. See bookGetText for an example of properly formatted book text. tes3ui . showBookMenu ( text ) Parameters : text (string)","title":"tes3ui.showBookMenu"},{"location":"apis/tes3ui/#tes3uishowdialoguemessage","text":"tes3ui . showDialogueMessage ({ text = ..., style = ..., answerIndex = ... }) Parameters : params (table) text (string): Default : ``. The text of the shown message. style (number): Default : 0 . answerIndex (number): Default : 0 .","title":"tes3ui.showDialogueMessage"},{"location":"apis/tes3ui/#tes3uishowinventoryselectmenu","text":"tes3ui . showInventorySelectMenu ({ actorRef = ..., callback = ..., filter = ..., title = ..., noResultsText = ..., noResultsCallback = ..., leaveMenuMode = ... }) Parameters : params (table) actorRef ( tes3reference ): Default : tes3player . callback (function): Optional . filter (function, string): Optional . title (string): noResultsText (string): Optional . noResultsCallback (function): Optional . leaveMenuMode (boolean): Optional . Is the menu going to be closed or open after closing Inventory Select Menu. By default, it will be in the state before this function was called.","title":"tes3ui.showInventorySelectMenu"},{"location":"apis/tes3ui/#tes3uishowscrollmenu","text":"Displays the scroll menu with arbitrary text. It needs to follow book text conventions as in the Construction Set. In essence, it uses HTML syntax. Important: every book needs to end with a <BR> statement to be displayed properly. See bookGetText for an example of properly formatted scroll text. tes3ui . showScrollMenu ( text ) Parameters : text (string)","title":"tes3ui.showScrollMenu"},{"location":"apis/tes3ui/#tes3uistealhelpmenu","text":"tes3ui . stealHelpMenu ()","title":"tes3ui.stealHelpMenu"},{"location":"apis/tes3ui/#tes3uisuppresstooltip","text":"Controls hiding of world object tooltips. tes3ui . suppressTooltip ( suppress ) Parameters : suppress (boolean): Turns on suppression if true, immediately hiding any active tooltip and further world object tooltips. Turns off suppression if false.","title":"tes3ui.suppressTooltip"},{"location":"apis/tes3ui/#tes3uiupdatebartermenutiles","text":"Forces the game to update the barter menu's tile GUI elements. tes3ui . updateBarterMenuTiles ()","title":"tes3ui.updateBarterMenuTiles"},{"location":"apis/tes3ui/#tes3uiupdatecontentsmenutiles","text":"Forces the game to update the contents menu's tile GUI elements. tes3ui . updateContentsMenuTiles ()","title":"tes3ui.updateContentsMenuTiles"},{"location":"apis/tes3ui/#tes3uiupdatedialogdisposition","text":"Forces the game to update the dialog disposition GUI element. tes3ui . updateDialogDisposition ()","title":"tes3ui.updateDialogDisposition"},{"location":"apis/tes3ui/#tes3uiupdateenchantingmenu","text":"Forces the game to update the enchanting menu GUI. tes3ui . updateEnchantingMenu ()","title":"tes3ui.updateEnchantingMenu"},{"location":"apis/tes3ui/#tes3uiupdateinventorycharacterimage","text":"Tells the game to update the character image in the player's inventory. It will update immediately if the inventory is open, or the next time the inventory is opened otherwise. tes3ui . updateInventoryCharacterImage ()","title":"tes3ui.updateInventoryCharacterImage"},{"location":"apis/tes3ui/#tes3uiupdateinventoryselecttiles","text":"Forces the game to update the inventory selection GUI elements. tes3ui . updateInventorySelectTiles ()","title":"tes3ui.updateInventorySelectTiles"},{"location":"apis/tes3ui/#tes3uiupdateinventorytiles","text":"Forces the game to update the inventory tile GUI elements. tes3ui . updateInventoryTiles ()","title":"tes3ui.updateInventoryTiles"},{"location":"apis/tes3ui/#tes3uiupdatespellmakingmenu","text":"Forces the game to update the spellmaking menu GUI. tes3ui . updateSpellmakingMenu ()","title":"tes3ui.updateSpellmakingMenu"},{"location":"apis/timer/","text":"timer \u2693\ufe0e The timer library provides helper functions for creating delayed executors. Properties \u2693\ufe0e timer.active \u2693\ufe0e Constant to represent a timer that is actively running. timer.expired \u2693\ufe0e Constant to represent a timer that has completed. timer.game \u2693\ufe0e Constant to represent timers that run based on in-world time. Duration measured in game-scale hours. timer.paused \u2693\ufe0e Constant to represent a timer that is paused. timer.real \u2693\ufe0e Constant to represent timers that run in real-time. timer.simulate \u2693\ufe0e Constant to represent timers that run when the game isn't paused. It matches the simulate event's timing. If the game is simulating, simulate events and simulate timers progress. Duration is measured in seconds. Functions \u2693\ufe0e timer.delayOneFrame \u2693\ufe0e Creates a timer that will finish the next frame. It defaults to the next simulation frame. local timer = timer . delayOneFrame ( callback , type ) Parameters : callback (function): The callback function that will execute when the timer expires. type (number): Default : timer.simulate . Type of the timer. This value can be timer.simulate , timer.game or timer.real . Returns : timer ( mwseTimer ) timer.register \u2693\ufe0e Registers a named timer with a callback to persist between game sessions. Bear in mind that nothing in MWSE is sandboxed, so all the registered timers are in the global namespace. Consider prefixing your timer with mod name or something else to avoid name collisions. For instance, iceCreamMod:myTimer . timer . register ({ name = ..., fn = ... }) Parameters : params (table) name (string): Name of the registered timer. fn (function): A callback function for the timer. Example: Show a Message After 1 Day local function showMessage () tes3 . messageBox ( \"One day later...\" ) end timer . register ( \"testExample:OneDayTimer\" , showMessage ) timer . start ({ type = timer . game , persist = true , iterations = 1 , duration = 24 , callback = \"testExample:OneDayTimer\" -- Notice that the callback isn't a function, but a custom timer. }) timer.start \u2693\ufe0e Creates a timer. local timer = timer . start ({ type = ..., duration = ..., callback = ..., iterations = ..., persist = ... }) Parameters : params (table) type (number): Default : timer.simulate . Type of the timer. This value can be timer.simulate , timer.game or timer.real . duration (number): Duration of the timer. The method of time passing depends on the timer type. callback (function): The callback function that will execute when the timer expires. iterations (number): Default : 1 . The number of iterations to run. Use -1 for infinite looping. persist (boolean): Default : true . Registering a timer with persist flag set to true will serialize the callback string in the save to persist between sessions. Only a registered timer will persist between sessions. See timer.register() . Returns : timer ( mwseTimer ) Example: Show a Countdown Message local timeLeft = 0 ; local function onTimerExpired () timeLeft = timeLeft - 1 tes3 . messageBox ( \"%d seconds left\" , timeLeft ) end local function onActivate ( eventData ) if ( eventData . activator == tes3 . player ) then timeLeft = 10 timer . start { duration = 1 , iterations = 10 , type = timer . simulate , callback = onTimerExpired } end end event . register ( \"activate\" , onActivate )","title":"timer"},{"location":"apis/timer/#timer","text":"The timer library provides helper functions for creating delayed executors.","title":"timer"},{"location":"apis/timer/#properties","text":"","title":"Properties"},{"location":"apis/timer/#timeractive","text":"Constant to represent a timer that is actively running.","title":"timer.active"},{"location":"apis/timer/#timerexpired","text":"Constant to represent a timer that has completed.","title":"timer.expired"},{"location":"apis/timer/#timergame","text":"Constant to represent timers that run based on in-world time. Duration measured in game-scale hours.","title":"timer.game"},{"location":"apis/timer/#timerpaused","text":"Constant to represent a timer that is paused.","title":"timer.paused"},{"location":"apis/timer/#timerreal","text":"Constant to represent timers that run in real-time.","title":"timer.real"},{"location":"apis/timer/#timersimulate","text":"Constant to represent timers that run when the game isn't paused. It matches the simulate event's timing. If the game is simulating, simulate events and simulate timers progress. Duration is measured in seconds.","title":"timer.simulate"},{"location":"apis/timer/#functions","text":"","title":"Functions"},{"location":"apis/timer/#timerdelayoneframe","text":"Creates a timer that will finish the next frame. It defaults to the next simulation frame. local timer = timer . delayOneFrame ( callback , type ) Parameters : callback (function): The callback function that will execute when the timer expires. type (number): Default : timer.simulate . Type of the timer. This value can be timer.simulate , timer.game or timer.real . Returns : timer ( mwseTimer )","title":"timer.delayOneFrame"},{"location":"apis/timer/#timerregister","text":"Registers a named timer with a callback to persist between game sessions. Bear in mind that nothing in MWSE is sandboxed, so all the registered timers are in the global namespace. Consider prefixing your timer with mod name or something else to avoid name collisions. For instance, iceCreamMod:myTimer . timer . register ({ name = ..., fn = ... }) Parameters : params (table) name (string): Name of the registered timer. fn (function): A callback function for the timer. Example: Show a Message After 1 Day local function showMessage () tes3 . messageBox ( \"One day later...\" ) end timer . register ( \"testExample:OneDayTimer\" , showMessage ) timer . start ({ type = timer . game , persist = true , iterations = 1 , duration = 24 , callback = \"testExample:OneDayTimer\" -- Notice that the callback isn't a function, but a custom timer. })","title":"timer.register"},{"location":"apis/timer/#timerstart","text":"Creates a timer. local timer = timer . start ({ type = ..., duration = ..., callback = ..., iterations = ..., persist = ... }) Parameters : params (table) type (number): Default : timer.simulate . Type of the timer. This value can be timer.simulate , timer.game or timer.real . duration (number): Duration of the timer. The method of time passing depends on the timer type. callback (function): The callback function that will execute when the timer expires. iterations (number): Default : 1 . The number of iterations to run. Use -1 for infinite looping. persist (boolean): Default : true . Registering a timer with persist flag set to true will serialize the callback string in the save to persist between sessions. Only a registered timer will persist between sessions. See timer.register() . Returns : timer ( mwseTimer ) Example: Show a Countdown Message local timeLeft = 0 ; local function onTimerExpired () timeLeft = timeLeft - 1 tes3 . messageBox ( \"%d seconds left\" , timeLeft ) end local function onActivate ( eventData ) if ( eventData . activator == tes3 . player ) then timeLeft = 10 timer . start { duration = 1 , iterations = 10 , type = timer . simulate , callback = onTimerExpired } end end event . register ( \"activate\" , onActivate )","title":"timer.start"},{"location":"events/absorbedMagic/","text":"absorbedMagic \u2693\ufe0e This event is triggered after magic absorption absorbs and cancels a magic effect, and just before magic absorption gives magicka to the target. It can control the amount of magicka restored. This event occurs once per effect restored, so a multi-effect spell may trigger this multiple times. The default amount restored is equal to the casting cost of the entire spell, which is the vanilla behaviour. --- @param e absorbedMagicEventData local function absorbedMagicCallback ( e ) end event . register ( \"absorbedMagic\" , absorbedMagicCallback ) Tip This event can be filtered based on the target event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e absorb (number): The amount of magicka to restore to the actor. mobile ( tes3mobileActor ): Read-only . The mobile actor that absorbed the spell. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The actor that absorbed the spell.","title":"absorbedMagic"},{"location":"events/absorbedMagic/#absorbedmagic","text":"This event is triggered after magic absorption absorbs and cancels a magic effect, and just before magic absorption gives magicka to the target. It can control the amount of magicka restored. This event occurs once per effect restored, so a multi-effect spell may trigger this multiple times. The default amount restored is equal to the casting cost of the entire spell, which is the vanilla behaviour. --- @param e absorbedMagicEventData local function absorbedMagicCallback ( e ) end event . register ( \"absorbedMagic\" , absorbedMagicCallback ) Tip This event can be filtered based on the target event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"absorbedMagic"},{"location":"events/absorbedMagic/#event-data","text":"absorb (number): The amount of magicka to restore to the actor. mobile ( tes3mobileActor ): Read-only . The mobile actor that absorbed the spell. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The actor that absorbed the spell.","title":"Event Data"},{"location":"events/activate/","text":"activate \u2693\ufe0e This event is invoked whenever something is activated, typically by the player. Activation is usually done with the associated activate/use key, but may also be forced by scripts. Non-player actors may also activate objects, such as when opening doors, or via MWSE functions like tes3.activate() . Some examples of when the activate event fires includes: When a door is used. When an item is picked up. When someone attempts to open a container. --- @param e activateEventData local function activateCallback ( e ) end event . register ( \"activate\" , activateCallback ) Tip This event can be filtered based on the target event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e activator ( tes3reference ): Read-only . The actor attempting to trigger the event. target ( tes3reference ): Read-only . The reference that is being activated. Examples \u2693\ufe0e Example: Prevent the player from activating NPCs local function myOnActivateCallback ( e ) -- We only care if the PC is activating something. if ( e . activator ~= tes3 . player ) then return end -- If the player targets an NPC, block the activation. if ( e . target . object . objectType == tes3 . objectType . npc ) then return false end end event . register ( \"activate\" , myOnActivateCallback ) Example: Show a message for what the player is activating -- Show the id when the player activates an object. local function myOnActivateCallback ( e ) if ( e . activator == tes3 . player ) then tes3 . messageBox ({ message = \"Activated \" .. e . target . object . id }) end end event . register ( \"activate\" , myOnActivateCallback )","title":"activate"},{"location":"events/activate/#activate","text":"This event is invoked whenever something is activated, typically by the player. Activation is usually done with the associated activate/use key, but may also be forced by scripts. Non-player actors may also activate objects, such as when opening doors, or via MWSE functions like tes3.activate() . Some examples of when the activate event fires includes: When a door is used. When an item is picked up. When someone attempts to open a container. --- @param e activateEventData local function activateCallback ( e ) end event . register ( \"activate\" , activateCallback ) Tip This event can be filtered based on the target event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"activate"},{"location":"events/activate/#event-data","text":"activator ( tes3reference ): Read-only . The actor attempting to trigger the event. target ( tes3reference ): Read-only . The reference that is being activated.","title":"Event Data"},{"location":"events/activate/#examples","text":"Example: Prevent the player from activating NPCs local function myOnActivateCallback ( e ) -- We only care if the PC is activating something. if ( e . activator ~= tes3 . player ) then return end -- If the player targets an NPC, block the activation. if ( e . target . object . objectType == tes3 . objectType . npc ) then return false end end event . register ( \"activate\" , myOnActivateCallback ) Example: Show a message for what the player is activating -- Show the id when the player activates an object. local function myOnActivateCallback ( e ) if ( e . activator == tes3 . player ) then tes3 . messageBox ({ message = \"Activated \" .. e . target . object . id }) end end event . register ( \"activate\" , myOnActivateCallback )","title":"Examples"},{"location":"events/activationTargetChanged/","text":"activationTargetChanged \u2693\ufe0e This event is raised when the potential activation target for the player changes. --- @param e activationTargetChangedEventData local function activationTargetChangedCallback ( e ) end event . register ( \"activationTargetChanged\" , activationTargetChangedCallback ) Tip This event can be filtered based on the current event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e current ( tes3reference ): Read-only . The activation target for the player, should they press the activation key. previous ( tes3reference ): Read-only . The previous activation target.","title":"activationTargetChanged"},{"location":"events/activationTargetChanged/#activationtargetchanged","text":"This event is raised when the potential activation target for the player changes. --- @param e activationTargetChangedEventData local function activationTargetChangedCallback ( e ) end event . register ( \"activationTargetChanged\" , activationTargetChangedCallback ) Tip This event can be filtered based on the current event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"activationTargetChanged"},{"location":"events/activationTargetChanged/#event-data","text":"current ( tes3reference ): Read-only . The activation target for the player, should they press the activation key. previous ( tes3reference ): Read-only . The previous activation target.","title":"Event Data"},{"location":"events/addSound/","text":"addSound \u2693\ufe0e This event is triggered when a sound is played by the game or when tes3.playSound() is called. --- @param e addSoundEventData local function addSoundCallback ( e ) end event . register ( \"addSound\" , addSoundCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e flags (number): Read-only . A flag whether the sound is looping or not. 0 means the sound doesn't loop, 1 means the sound loops. isVoiceover (boolean): A flag whether the sound is a voiced line, which are usually found in the Sound\\Vo data folder. pitch (number): Pitch of the sound. reference ( tes3reference ): The reference which is emiting the sound. sound ( tes3sound ): The sound going to be played. volume (number): The volume of the sound. Volume = 1 means 100 % loudness. Values lower than 1 make the sound quiter.","title":"addSound"},{"location":"events/addSound/#addsound","text":"This event is triggered when a sound is played by the game or when tes3.playSound() is called. --- @param e addSoundEventData local function addSoundCallback ( e ) end event . register ( \"addSound\" , addSoundCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"addSound"},{"location":"events/addSound/#event-data","text":"flags (number): Read-only . A flag whether the sound is looping or not. 0 means the sound doesn't loop, 1 means the sound loops. isVoiceover (boolean): A flag whether the sound is a voiced line, which are usually found in the Sound\\Vo data folder. pitch (number): Pitch of the sound. reference ( tes3reference ): The reference which is emiting the sound. sound ( tes3sound ): The sound going to be played. volume (number): The volume of the sound. Volume = 1 means 100 % loudness. Values lower than 1 make the sound quiter.","title":"Event Data"},{"location":"events/addTempSound/","text":"addTempSound \u2693\ufe0e --- @param e addTempSoundEventData local function addTempSoundCallback ( e ) end event . register ( \"addTempSound\" , addTempSoundCallback ) Tip This event can be filtered based on the sound event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e flags (number): Read-only . A flag whether the sound is looping or not. 0 means the sound doesn't loop, 1 means the sound loops. isVoiceover (boolean): A flag whether the sound is a voiced line, which are usually found in the Sound\\Vo data folder. path (string): The path to the sound to play, relative to Data Files\\Sounds pitch (number): Pitch of the sound. reference ( tes3reference ): The reference which is emiting the sound. sound ( tes3sound ): volume (number): The volume of the sound. Volume = 1 means 100 % loudness. Values lower than 1 make the sound quiter.","title":"addTempSound"},{"location":"events/addTempSound/#addtempsound","text":"--- @param e addTempSoundEventData local function addTempSoundCallback ( e ) end event . register ( \"addTempSound\" , addTempSoundCallback ) Tip This event can be filtered based on the sound event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"addTempSound"},{"location":"events/addTempSound/#event-data","text":"flags (number): Read-only . A flag whether the sound is looping or not. 0 means the sound doesn't loop, 1 means the sound loops. isVoiceover (boolean): A flag whether the sound is a voiced line, which are usually found in the Sound\\Vo data folder. path (string): The path to the sound to play, relative to Data Files\\Sounds pitch (number): Pitch of the sound. reference ( tes3reference ): The reference which is emiting the sound. sound ( tes3sound ): volume (number): The volume of the sound. Volume = 1 means 100 % loudness. Values lower than 1 make the sound quiter.","title":"Event Data"},{"location":"events/attack/","text":"attack \u2693\ufe0e This event is invoked whenever an actor makes an attack with their fists or a weapon, or a creature makes any attack. It occurs at the release time of the attack, such as the downstroke of a melee weapon or when an arrow is shot. Lockpicks and probes do not invoke this event. --- @param e attackEventData local function attackCallback ( e ) end event . register ( \"attack\" , attackCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor making the attack. reference ( tes3reference ): Read-only . A shortcut to the reference that is attacking. targetMobile ( tes3mobileActor ): Read-only . The mobile actor being attacked. targetReference ( tes3reference ): Read-only . A shortcut to the reference being attacked. Examples \u2693\ufe0e Example: Show a Message when the Player Attacks local function myOnAttackCallback ( e ) -- Someone other than the player is attacking. if ( e . reference ~= tes3 . player ) then return end -- We hit someone! if ( e . targetReference ~= nil ) then tes3 . messageBox ( \"You hit %s!\" , e . targetReference . object . name or e . targetReference . object . id ) end end event . register ( \"attack\" , myOnAttackCallback )","title":"attack"},{"location":"events/attack/#attack","text":"This event is invoked whenever an actor makes an attack with their fists or a weapon, or a creature makes any attack. It occurs at the release time of the attack, such as the downstroke of a melee weapon or when an arrow is shot. Lockpicks and probes do not invoke this event. --- @param e attackEventData local function attackCallback ( e ) end event . register ( \"attack\" , attackCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"attack"},{"location":"events/attack/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor making the attack. reference ( tes3reference ): Read-only . A shortcut to the reference that is attacking. targetMobile ( tes3mobileActor ): Read-only . The mobile actor being attacked. targetReference ( tes3reference ): Read-only . A shortcut to the reference being attacked.","title":"Event Data"},{"location":"events/attack/#examples","text":"Example: Show a Message when the Player Attacks local function myOnAttackCallback ( e ) -- Someone other than the player is attacking. if ( e . reference ~= tes3 . player ) then return end -- We hit someone! if ( e . targetReference ~= nil ) then tes3 . messageBox ( \"You hit %s!\" , e . targetReference . object . name or e . targetReference . object . id ) end end event . register ( \"attack\" , myOnAttackCallback )","title":"Examples"},{"location":"events/attackStart/","text":"attackStart \u2693\ufe0e This event is invoked whenever an actor starts an attack with their fists or a weapon, or a creature makes any attack. More precisely, it is when the actor raises a melee weapon or draws an arrow. There is not necessarily a target in range, or any target at all for the player. --- @param e attackStartEventData local function attackStartCallback ( e ) end event . register ( \"attackStart\" , attackStartCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e attackSpeed (number): The speed multiplier of the attack animation, normally equal to the weapon speed (1.0 for no equipped weapon). May be changed to change the current attack's speed. See also tes3actorAnimationController to change animation speed during the attack. attackType (number): A number from the tes3.physicalAttackType enumeration identifying the physical attack type. Can be tes3.physicalAttackType.slash , .chop , .thrust , .projectile , .creature1 , .creature2 , or .creature3 . May be changed to change the attack's type if the original attack was slash, chop, or thrust. mobile ( tes3mobileActor ): Read-only . The mobile actor making the attack. reference ( tes3reference ): Read-only . A shortcut to the reference that is attacking.","title":"attackStart"},{"location":"events/attackStart/#attackstart","text":"This event is invoked whenever an actor starts an attack with their fists or a weapon, or a creature makes any attack. More precisely, it is when the actor raises a melee weapon or draws an arrow. There is not necessarily a target in range, or any target at all for the player. --- @param e attackStartEventData local function attackStartCallback ( e ) end event . register ( \"attackStart\" , attackStartCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"attackStart"},{"location":"events/attackStart/#event-data","text":"attackSpeed (number): The speed multiplier of the attack animation, normally equal to the weapon speed (1.0 for no equipped weapon). May be changed to change the current attack's speed. See also tes3actorAnimationController to change animation speed during the attack. attackType (number): A number from the tes3.physicalAttackType enumeration identifying the physical attack type. Can be tes3.physicalAttackType.slash , .chop , .thrust , .projectile , .creature1 , .creature2 , or .creature3 . May be changed to change the attack's type if the original attack was slash, chop, or thrust. mobile ( tes3mobileActor ): Read-only . The mobile actor making the attack. reference ( tes3reference ): Read-only . A shortcut to the reference that is attacking.","title":"Event Data"},{"location":"events/barterOffer/","text":"barterOffer \u2693\ufe0e This event is called when a potentially successful barter offer is made by the player. Potentially successful means both parties have the required funds to make the trade. --- @param e barterOfferEventData local function barterOfferCallback ( e ) end event . register ( \"barterOffer\" , barterOfferCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e buying (table): Read-only . Table of tes3inventoryTile objects being bought. These items will be transfered to player's inventory on a successful bartering event. mobile ( tes3mobileActor ): Read-only . The mobile actor of the merchant the player is interacting with. offer (number): Read-only . Offered gold amount. selling (table): Read-only . Table of tes3inventoryTile objects being sold. These items will be transfered to bartender's inventory on a successful bartering event. success (boolean): Whether the trade was accepted or not. value (number): Read-only . Total value in gold of items being traded. Negative means the player owes coin, positive means the player gets coin.","title":"barterOffer"},{"location":"events/barterOffer/#barteroffer","text":"This event is called when a potentially successful barter offer is made by the player. Potentially successful means both parties have the required funds to make the trade. --- @param e barterOfferEventData local function barterOfferCallback ( e ) end event . register ( \"barterOffer\" , barterOfferCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"barterOffer"},{"location":"events/barterOffer/#event-data","text":"buying (table): Read-only . Table of tes3inventoryTile objects being bought. These items will be transfered to player's inventory on a successful bartering event. mobile ( tes3mobileActor ): Read-only . The mobile actor of the merchant the player is interacting with. offer (number): Read-only . Offered gold amount. selling (table): Read-only . Table of tes3inventoryTile objects being sold. These items will be transfered to bartender's inventory on a successful bartering event. success (boolean): Whether the trade was accepted or not. value (number): Read-only . Total value in gold of items being traded. Negative means the player owes coin, positive means the player gets coin.","title":"Event Data"},{"location":"events/bodyPartAssigned/","text":"bodyPartAssigned \u2693\ufe0e Allows reading and overwriting body part assignments. --- @param e bodyPartAssignedEventData local function bodyPartAssignedCallback ( e ) end event . register ( \"bodyPartAssigned\" , bodyPartAssignedCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e bodyPart ( tes3bodyPart ): The body part object assigned. index (number): Read-only . The body slot index of the newly assigned body part. Maps to values in tes3.activeBodyPart constants. isFirstPerson (boolean): Read-only . A flag that controls whether the newly assigned body part is used while the camera is in the first person. manager ( tes3bodyPartManager ): Read-only . The access to the body part manager that is associated with the reference that had a body part assigned. object ( tes3physicalObject ): Read-only . Access to the physical object for the assigned body part. reference ( tes3reference ): Read-only . The reference for the actor whose body part was assigned.","title":"bodyPartAssigned"},{"location":"events/bodyPartAssigned/#bodypartassigned","text":"Allows reading and overwriting body part assignments. --- @param e bodyPartAssignedEventData local function bodyPartAssignedCallback ( e ) end event . register ( \"bodyPartAssigned\" , bodyPartAssignedCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"bodyPartAssigned"},{"location":"events/bodyPartAssigned/#event-data","text":"bodyPart ( tes3bodyPart ): The body part object assigned. index (number): Read-only . The body slot index of the newly assigned body part. Maps to values in tes3.activeBodyPart constants. isFirstPerson (boolean): Read-only . A flag that controls whether the newly assigned body part is used while the camera is in the first person. manager ( tes3bodyPartManager ): Read-only . The access to the body part manager that is associated with the reference that had a body part assigned. object ( tes3physicalObject ): Read-only . Access to the physical object for the assigned body part. reference ( tes3reference ): Read-only . The reference for the actor whose body part was assigned.","title":"Event Data"},{"location":"events/bodyPartsUpdated/","text":"bodyPartsUpdated \u2693\ufe0e This event is triggered when an actor's body parts have finished updating. This typically triggers when an actor is first rendered, or when their equipment changes. --- @param e bodyPartsUpdatedEventData local function bodyPartsUpdatedCallback ( e ) end event . register ( \"bodyPartsUpdated\" , bodyPartsUpdatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor whose body parts were updated. reference ( tes3reference ): Read-only . The reference for the actor whose body parts were updated.","title":"bodyPartsUpdated"},{"location":"events/bodyPartsUpdated/#bodypartsupdated","text":"This event is triggered when an actor's body parts have finished updating. This typically triggers when an actor is first rendered, or when their equipment changes. --- @param e bodyPartsUpdatedEventData local function bodyPartsUpdatedCallback ( e ) end event . register ( \"bodyPartsUpdated\" , bodyPartsUpdatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"bodyPartsUpdated"},{"location":"events/bodyPartsUpdated/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor whose body parts were updated. reference ( tes3reference ): Read-only . The reference for the actor whose body parts were updated.","title":"Event Data"},{"location":"events/bookGetText/","text":"bookGetText \u2693\ufe0e This event is raised when a book's text is about to be displayed. By providing your own text, you can overwrite what is going to be displayed. --- @param e bookGetTextEventData local function bookGetTextCallback ( e ) end event . register ( \"bookGetText\" , bookGetTextCallback ) Tip This event can be filtered based on the book event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e book ( tes3book ): Read-only . The book whose text is being retrieved. text (string): If set, the book's text will be overwritten with this value. It needs to follow book text conventions as in the Construction Set. In essence, it uses HTML syntax. Important: every book needs to end with a <BR> statement to be displayed properly. Examples \u2693\ufe0e Example: Change the text of a book local newText = [[ <DIV ALIGN=\"LEFT\"><FONT COLOR=\"000000\" SIZE=\"3\" FACE=\"Magic Cards\"><BR> Sweetroll <BR> ]] local function example ( e ) e . text = newText end event . register ( \"bookGetText\" , example )","title":"bookGetText"},{"location":"events/bookGetText/#bookgettext","text":"This event is raised when a book's text is about to be displayed. By providing your own text, you can overwrite what is going to be displayed. --- @param e bookGetTextEventData local function bookGetTextCallback ( e ) end event . register ( \"bookGetText\" , bookGetTextCallback ) Tip This event can be filtered based on the book event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"bookGetText"},{"location":"events/bookGetText/#event-data","text":"book ( tes3book ): Read-only . The book whose text is being retrieved. text (string): If set, the book's text will be overwritten with this value. It needs to follow book text conventions as in the Construction Set. In essence, it uses HTML syntax. Important: every book needs to end with a <BR> statement to be displayed properly.","title":"Event Data"},{"location":"events/bookGetText/#examples","text":"Example: Change the text of a book local newText = [[ <DIV ALIGN=\"LEFT\"><FONT COLOR=\"000000\" SIZE=\"3\" FACE=\"Magic Cards\"><BR> Sweetroll <BR> ]] local function example ( e ) e . text = newText end event . register ( \"bookGetText\" , example )","title":"Examples"},{"location":"events/buttonPressed/","text":"buttonPressed \u2693\ufe0e The buttonPressed event is unique in that it is invoked only when using tes3.messageBox to present buttons to the player. --- @param e buttonPressedEventData local function buttonPressedCallback ( e ) end event . register ( \"buttonPressed\" , buttonPressedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e button (number): Read-only . The button index, 0-based, that was pressed.","title":"buttonPressed"},{"location":"events/buttonPressed/#buttonpressed","text":"The buttonPressed event is unique in that it is invoked only when using tes3.messageBox to present buttons to the player. --- @param e buttonPressedEventData local function buttonPressedCallback ( e ) end event . register ( \"buttonPressed\" , buttonPressedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"buttonPressed"},{"location":"events/buttonPressed/#event-data","text":"button (number): Read-only . The button index, 0-based, that was pressed.","title":"Event Data"},{"location":"events/calcArmorPieceHit/","text":"calcArmorPieceHit \u2693\ufe0e This event is raised just after determining which armor piece, if any, was hit with an attack. The slots can be modified, to draw focus onto specific armor slots. The following table is used by default to determine what armor piece is hit: Roll (1-100) Slot Fallback 1-29 Cuirass None 30-34 Shield Cuirass 35-39 Shield Left Pauldron 40-49 Left Pauldron None 50-59 Right Pauldron None 60-69 Greaves None 70-79 Helmet None 80-89 Boots None 90-94 Right Gauntlet Right Bracer 95-100 Left Gauntlet Left Bracer --- @param e calcArmorPieceHitEventData local function calcArmorPieceHitCallback ( e ) end event . register ( \"calcArmorPieceHit\" , calcArmorPieceHitCallback ) Tip This event can be filtered based on the reference.baseObject event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e fallback (number): A secondary slot to check for equipment on, if no armor is found using the primary slot. mobile ( tes3mobileActor ): Read-only . The mobile who is being hit. reference ( tes3reference ): Read-only . A shortcut to the mobile's reference. slot (number): The primary slot that is targeted.","title":"calcArmorPieceHit"},{"location":"events/calcArmorPieceHit/#calcarmorpiecehit","text":"This event is raised just after determining which armor piece, if any, was hit with an attack. The slots can be modified, to draw focus onto specific armor slots. The following table is used by default to determine what armor piece is hit: Roll (1-100) Slot Fallback 1-29 Cuirass None 30-34 Shield Cuirass 35-39 Shield Left Pauldron 40-49 Left Pauldron None 50-59 Right Pauldron None 60-69 Greaves None 70-79 Helmet None 80-89 Boots None 90-94 Right Gauntlet Right Bracer 95-100 Left Gauntlet Left Bracer --- @param e calcArmorPieceHitEventData local function calcArmorPieceHitCallback ( e ) end event . register ( \"calcArmorPieceHit\" , calcArmorPieceHitCallback ) Tip This event can be filtered based on the reference.baseObject event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcArmorPieceHit"},{"location":"events/calcArmorPieceHit/#event-data","text":"fallback (number): A secondary slot to check for equipment on, if no armor is found using the primary slot. mobile ( tes3mobileActor ): Read-only . The mobile who is being hit. reference ( tes3reference ): Read-only . A shortcut to the mobile's reference. slot (number): The primary slot that is targeted.","title":"Event Data"},{"location":"events/calcArmorRating/","text":"calcArmorRating \u2693\ufe0e This event is fired before an actor's armor rating has been calculated, and can be used to override the armor that the actor is given. --- @param e calcArmorRatingEventData local function calcArmorRatingCallback ( e ) end event . register ( \"calcArmorRating\" , calcArmorRatingCallback ) Tip This event can be filtered based on the armor event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e armor ( tes3armor ): Read-only . The armor piece whose AR is being calculated. armorRating (number): If set, the given armor rating will be used instead of the one calculated. mobile ( tes3mobileActor ): Read-only . The mobile whose AR is being calculated. May not always be available. npc ( tes3npc ): Read-only . The NPC object whose AR is being calculated. May not always be available. reference ( tes3reference ): Read-only . A shortcut to the mobile's reference. May not always be available.","title":"calcArmorRating"},{"location":"events/calcArmorRating/#calcarmorrating","text":"This event is fired before an actor's armor rating has been calculated, and can be used to override the armor that the actor is given. --- @param e calcArmorRatingEventData local function calcArmorRatingCallback ( e ) end event . register ( \"calcArmorRating\" , calcArmorRatingCallback ) Tip This event can be filtered based on the armor event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcArmorRating"},{"location":"events/calcArmorRating/#event-data","text":"armor ( tes3armor ): Read-only . The armor piece whose AR is being calculated. armorRating (number): If set, the given armor rating will be used instead of the one calculated. mobile ( tes3mobileActor ): Read-only . The mobile whose AR is being calculated. May not always be available. npc ( tes3npc ): Read-only . The NPC object whose AR is being calculated. May not always be available. reference ( tes3reference ): Read-only . A shortcut to the mobile's reference. May not always be available.","title":"Event Data"},{"location":"events/calcBarterPrice/","text":"calcBarterPrice \u2693\ufe0e This event is raised when an item price is being determined when bartering. --- @param e calcBarterPriceEventData local function calcBarterPriceCallback ( e ) end event . register ( \"calcBarterPrice\" , calcBarterPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e basePrice (number): Read-only . The base price of the item, before any event modifications. buying (boolean): Read-only . If true, the player is buying, otherwise the player is selling. count (number): Read-only . The number of items being bartered. item ( tes3item ): Read-only . The item, if any, that is being bartered. itemData ( tes3itemData ): Read-only . The item data for the bartered item. mobile ( tes3mobileActor ): Read-only . The mobile actor for who is selling or buying. May not always be available. price (number): The price of the item. This can be modified, but ensure that the buy/sell price is matched or there will be odd behavior. reference ( tes3reference ): Read-only . A shortcut to the mobile's reference. May not always be available.","title":"calcBarterPrice"},{"location":"events/calcBarterPrice/#calcbarterprice","text":"This event is raised when an item price is being determined when bartering. --- @param e calcBarterPriceEventData local function calcBarterPriceCallback ( e ) end event . register ( \"calcBarterPrice\" , calcBarterPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcBarterPrice"},{"location":"events/calcBarterPrice/#event-data","text":"basePrice (number): Read-only . The base price of the item, before any event modifications. buying (boolean): Read-only . If true, the player is buying, otherwise the player is selling. count (number): Read-only . The number of items being bartered. item ( tes3item ): Read-only . The item, if any, that is being bartered. itemData ( tes3itemData ): Read-only . The item data for the bartered item. mobile ( tes3mobileActor ): Read-only . The mobile actor for who is selling or buying. May not always be available. price (number): The price of the item. This can be modified, but ensure that the buy/sell price is matched or there will be odd behavior. reference ( tes3reference ): Read-only . A shortcut to the mobile's reference. May not always be available.","title":"Event Data"},{"location":"events/calcFlySpeed/","text":"calcFlySpeed \u2693\ufe0e One of the movement events, calcFlySpeed is used when calculating movement speeds when levitating or otherwise flying. The movement event flow is described below: Flying: calcFlySpeed -> calcMoveSpeed --- @param e calcFlySpeedEventData local function calcFlySpeedCallback ( e ) end event . register ( \"calcFlySpeed\" , calcFlySpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 5 for this event.","title":"calcFlySpeed"},{"location":"events/calcFlySpeed/#calcflyspeed","text":"One of the movement events, calcFlySpeed is used when calculating movement speeds when levitating or otherwise flying. The movement event flow is described below: Flying: calcFlySpeed -> calcMoveSpeed --- @param e calcFlySpeedEventData local function calcFlySpeedCallback ( e ) end event . register ( \"calcFlySpeed\" , calcFlySpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcFlySpeed"},{"location":"events/calcFlySpeed/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 5 for this event.","title":"Event Data"},{"location":"events/calcHitChance/","text":"calcHitChance \u2693\ufe0e This event is raised when determining the hit chance for an actor. --- @param e calcHitChanceEventData local function calcHitChanceCallback ( e ) end event . register ( \"calcHitChance\" , calcHitChanceCallback ) Tip This event can be filtered based on the attacker.baseObject event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e attacker ( tes3reference ): Read-only . A shortcut to the mobile's reference. attackerMobile ( tes3mobileActor ): Read-only . The mobile who is making the attack. hitChance (number): The hit chance for the actor. This may be adjusted. target ( tes3reference ): Read-only . A shortcut to the target mobile's reference. May not always be available. targetMobile ( tes3mobileActor ): Read-only . The mobile who is being attacked. May not always be available.","title":"calcHitChance"},{"location":"events/calcHitChance/#calchitchance","text":"This event is raised when determining the hit chance for an actor. --- @param e calcHitChanceEventData local function calcHitChanceCallback ( e ) end event . register ( \"calcHitChance\" , calcHitChanceCallback ) Tip This event can be filtered based on the attacker.baseObject event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcHitChance"},{"location":"events/calcHitChance/#event-data","text":"attacker ( tes3reference ): Read-only . A shortcut to the mobile's reference. attackerMobile ( tes3mobileActor ): Read-only . The mobile who is making the attack. hitChance (number): The hit chance for the actor. This may be adjusted. target ( tes3reference ): Read-only . A shortcut to the target mobile's reference. May not always be available. targetMobile ( tes3mobileActor ): Read-only . The mobile who is being attacked. May not always be available.","title":"Event Data"},{"location":"events/calcMoveSpeed/","text":"calcMoveSpeed \u2693\ufe0e This event is called when an actor\u2019s movement speed is calculated. The event allows modification of this value, to dehardcode actor movement speeds. Invoked after all other movement speed events are finished. The movement event flow is described below: Walking: calcWalkSpeed -> calcMoveSpeed Running: calcWalkSpeed -> calcRunSpeed -> calcMoveSpeed Swimming: calcWalkSpeed -> calcSwimSpeed -> calcMoveSpeed Swimming (while running): calcWalkSpeed -> calcSwimSpeed -> calcSwimRunSpeed -> calcMoveSpeed Flying: calcFlySpeed -> calcMoveSpeed --- @param e calcMoveSpeedEventData local function calcMoveSpeedCallback ( e ) end event . register ( \"calcMoveSpeed\" , calcMoveSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 0 for this event. Examples \u2693\ufe0e Example: 20% Faster Player Movement local function onCalcMoveSpeed ( e ) if ( e . reference == tes3 . player ) then e . speed = e . speed * 1.2 end end event . register ( tes3 . event . calcMoveSpeed , onCalcMoveSpeed )","title":"calcMoveSpeed"},{"location":"events/calcMoveSpeed/#calcmovespeed","text":"This event is called when an actor\u2019s movement speed is calculated. The event allows modification of this value, to dehardcode actor movement speeds. Invoked after all other movement speed events are finished. The movement event flow is described below: Walking: calcWalkSpeed -> calcMoveSpeed Running: calcWalkSpeed -> calcRunSpeed -> calcMoveSpeed Swimming: calcWalkSpeed -> calcSwimSpeed -> calcMoveSpeed Swimming (while running): calcWalkSpeed -> calcSwimSpeed -> calcSwimRunSpeed -> calcMoveSpeed Flying: calcFlySpeed -> calcMoveSpeed --- @param e calcMoveSpeedEventData local function calcMoveSpeedCallback ( e ) end event . register ( \"calcMoveSpeed\" , calcMoveSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcMoveSpeed"},{"location":"events/calcMoveSpeed/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 0 for this event.","title":"Event Data"},{"location":"events/calcMoveSpeed/#examples","text":"Example: 20% Faster Player Movement local function onCalcMoveSpeed ( e ) if ( e . reference == tes3 . player ) then e . speed = e . speed * 1.2 end end event . register ( tes3 . event . calcMoveSpeed , onCalcMoveSpeed )","title":"Examples"},{"location":"events/calcRepairPrice/","text":"calcRepairPrice \u2693\ufe0e This event is called when determining the price of repairing an item. It can be used to override the repair cost. --- @param e calcRepairPriceEventData local function calcRepairPriceCallback ( e ) end event . register ( \"calcRepairPrice\" , calcRepairPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e basePrice (number): Read-only . The price before adjustment. item ( tes3item ): Read-only . The item to be repaired. itemData ( tes3item ): Read-only . Variable node. The data associated with item. This may be nil. mobile ( tes3mobileActor ): Read-only . The mobile actor of the merchant the player is interacting with. price (number): The adjusted price of repairing item. reference ( tes3reference ): Read-only . mobile\u2019s related reference.","title":"calcRepairPrice"},{"location":"events/calcRepairPrice/#calcrepairprice","text":"This event is called when determining the price of repairing an item. It can be used to override the repair cost. --- @param e calcRepairPriceEventData local function calcRepairPriceCallback ( e ) end event . register ( \"calcRepairPrice\" , calcRepairPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcRepairPrice"},{"location":"events/calcRepairPrice/#event-data","text":"basePrice (number): Read-only . The price before adjustment. item ( tes3item ): Read-only . The item to be repaired. itemData ( tes3item ): Read-only . Variable node. The data associated with item. This may be nil. mobile ( tes3mobileActor ): Read-only . The mobile actor of the merchant the player is interacting with. price (number): The adjusted price of repairing item. reference ( tes3reference ): Read-only . mobile\u2019s related reference.","title":"Event Data"},{"location":"events/calcRestInterrupt/","text":"calcRestInterrupt \u2693\ufe0e This event is called when the player is about to start resting. The hour and count of creatures can be modified, or disabled. Blocking this event blocks any interrupting spawn. --- @param e calcRestInterruptEventData local function calcRestInterruptCallback ( e ) end event . register ( \"calcRestInterrupt\" , calcRestInterruptCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e count (number): The number of creatures interrupting rest. Set to 0 to prevent a spawn. hour (number): The hour of rest remaining that the rest will be interrupted on. resting (boolean): Read-only . If true, the player is attempting to rest, as opposed to wait. waiting (boolean): Read-only . If true, the player is attempting to wait, as opposed to rest.","title":"calcRestInterrupt"},{"location":"events/calcRestInterrupt/#calcrestinterrupt","text":"This event is called when the player is about to start resting. The hour and count of creatures can be modified, or disabled. Blocking this event blocks any interrupting spawn. --- @param e calcRestInterruptEventData local function calcRestInterruptCallback ( e ) end event . register ( \"calcRestInterrupt\" , calcRestInterruptCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcRestInterrupt"},{"location":"events/calcRestInterrupt/#event-data","text":"count (number): The number of creatures interrupting rest. Set to 0 to prevent a spawn. hour (number): The hour of rest remaining that the rest will be interrupted on. resting (boolean): Read-only . If true, the player is attempting to rest, as opposed to wait. waiting (boolean): Read-only . If true, the player is attempting to wait, as opposed to rest.","title":"Event Data"},{"location":"events/calcRunSpeed/","text":"calcRunSpeed \u2693\ufe0e One of the movement events, calcRunSpeed is used when calculating when the player is running, but not swimming or flying. The movement event flow is described below: Running: calcWalkSpeed -> calcRunSpeed -> calcMoveSpeed --- @param e calcRunSpeedEventData local function calcRunSpeedCallback ( e ) end event . register ( \"calcRunSpeed\" , calcRunSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 2 for this event.","title":"calcRunSpeed"},{"location":"events/calcRunSpeed/#calcrunspeed","text":"One of the movement events, calcRunSpeed is used when calculating when the player is running, but not swimming or flying. The movement event flow is described below: Running: calcWalkSpeed -> calcRunSpeed -> calcMoveSpeed --- @param e calcRunSpeedEventData local function calcRunSpeedCallback ( e ) end event . register ( \"calcRunSpeed\" , calcRunSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcRunSpeed"},{"location":"events/calcRunSpeed/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 2 for this event.","title":"Event Data"},{"location":"events/calcSoulValue/","text":"calcSoulValue \u2693\ufe0e This event is raised when determining the value of a soul, unmodified by GMSTs. The value can be modified, or used to provide a soul value to NPCs who would normally not be allowed one. --- @param e calcSoulValueEventData local function calcSoulValueCallback ( e ) end event . register ( \"calcSoulValue\" , calcSoulValueCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e actor ( tes3creature , tes3npc ): Read-only . The actor whose soul is being evaluated. value (number): The value of the actor's soul.","title":"calcSoulValue"},{"location":"events/calcSoulValue/#calcsoulvalue","text":"This event is raised when determining the value of a soul, unmodified by GMSTs. The value can be modified, or used to provide a soul value to NPCs who would normally not be allowed one. --- @param e calcSoulValueEventData local function calcSoulValueCallback ( e ) end event . register ( \"calcSoulValue\" , calcSoulValueCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcSoulValue"},{"location":"events/calcSoulValue/#event-data","text":"actor ( tes3creature , tes3npc ): Read-only . The actor whose soul is being evaluated. value (number): The value of the actor's soul.","title":"Event Data"},{"location":"events/calcSpellPrice/","text":"calcSpellPrice \u2693\ufe0e This event is called when determining the cost of purchasing a spell. The price can be modified. --- @param e calcSpellPriceEventData local function calcSpellPriceCallback ( e ) end event . register ( \"calcSpellPrice\" , calcSpellPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e basePrice (number): Read-only . The price before adjustment. mobile ( tes3mobileActor ): Read-only . The mobile actor of the merchant the player is interacting with. price (number): The adjusted price of spell. reference ( tes3reference ): Read-only . mobile\u2019s related reference. spell ( tes3spell ): Read-only . The spell currently being purchased.","title":"calcSpellPrice"},{"location":"events/calcSpellPrice/#calcspellprice","text":"This event is called when determining the cost of purchasing a spell. The price can be modified. --- @param e calcSpellPriceEventData local function calcSpellPriceCallback ( e ) end event . register ( \"calcSpellPrice\" , calcSpellPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcSpellPrice"},{"location":"events/calcSpellPrice/#event-data","text":"basePrice (number): Read-only . The price before adjustment. mobile ( tes3mobileActor ): Read-only . The mobile actor of the merchant the player is interacting with. price (number): The adjusted price of spell. reference ( tes3reference ): Read-only . mobile\u2019s related reference. spell ( tes3spell ): Read-only . The spell currently being purchased.","title":"Event Data"},{"location":"events/calcSunDamageScalar/","text":"calcSunDamageScalar \u2693\ufe0e calcSunDamageScalar is used when calculating the amount of damage to apply for the Sun Damage magic effect. --- @param e calcSunDamageScalarEventData local function calcSunDamageScalarCallback ( e ) end event . register ( \"calcSunDamageScalar\" , calcSunDamageScalarCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e damage (number): The previously calculated sun damage.","title":"calcSunDamageScalar"},{"location":"events/calcSunDamageScalar/#calcsundamagescalar","text":"calcSunDamageScalar is used when calculating the amount of damage to apply for the Sun Damage magic effect. --- @param e calcSunDamageScalarEventData local function calcSunDamageScalarCallback ( e ) end event . register ( \"calcSunDamageScalar\" , calcSunDamageScalarCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcSunDamageScalar"},{"location":"events/calcSunDamageScalar/#event-data","text":"damage (number): The previously calculated sun damage.","title":"Event Data"},{"location":"events/calcSwimRunSpeed/","text":"calcSwimRunSpeed \u2693\ufe0e One of the movement events, calcSwimRunSpeed is used when calculating the movement speed while in water when running. The movement event flow is described below: Swimming (while running): calcWalkSpeed -> calcSwimSpeed -> calcSwimRunSpeed -> calcMoveSpeed --- @param e calcSwimRunSpeedEventData local function calcSwimRunSpeedCallback ( e ) end event . register ( \"calcSwimRunSpeed\" , calcSwimRunSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 4 for this event.","title":"calcSwimRunSpeed"},{"location":"events/calcSwimRunSpeed/#calcswimrunspeed","text":"One of the movement events, calcSwimRunSpeed is used when calculating the movement speed while in water when running. The movement event flow is described below: Swimming (while running): calcWalkSpeed -> calcSwimSpeed -> calcSwimRunSpeed -> calcMoveSpeed --- @param e calcSwimRunSpeedEventData local function calcSwimRunSpeedCallback ( e ) end event . register ( \"calcSwimRunSpeed\" , calcSwimRunSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcSwimRunSpeed"},{"location":"events/calcSwimRunSpeed/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 4 for this event.","title":"Event Data"},{"location":"events/calcSwimSpeed/","text":"calcSwimSpeed \u2693\ufe0e One of the movement events, calcSwimSpeed is used when calculating the movement speed while in water when running. The movement event flow is described below: Swimming: calcWalkSpeed -> calcSwimSpeed -> calcMoveSpeed Swimming (while running): calcWalkSpeed -> calcSwimSpeed -> calcSwimRunSpeed -> calcMoveSpeed --- @param e calcSwimSpeedEventData local function calcSwimSpeedCallback ( e ) end event . register ( \"calcSwimSpeed\" , calcSwimSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 3 for this event.","title":"calcSwimSpeed"},{"location":"events/calcSwimSpeed/#calcswimspeed","text":"One of the movement events, calcSwimSpeed is used when calculating the movement speed while in water when running. The movement event flow is described below: Swimming: calcWalkSpeed -> calcSwimSpeed -> calcMoveSpeed Swimming (while running): calcWalkSpeed -> calcSwimSpeed -> calcSwimRunSpeed -> calcMoveSpeed --- @param e calcSwimSpeedEventData local function calcSwimSpeedCallback ( e ) end event . register ( \"calcSwimSpeed\" , calcSwimSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcSwimSpeed"},{"location":"events/calcSwimSpeed/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 3 for this event.","title":"Event Data"},{"location":"events/calcTrainingPrice/","text":"calcTrainingPrice \u2693\ufe0e This event is called when determining the cost of training, and can be used to modify the given price. --- @param e calcTrainingPriceEventData local function calcTrainingPriceCallback ( e ) end event . register ( \"calcTrainingPrice\" , calcTrainingPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e basePrice (number): Read-only . The price before adjustment. mobile ( tes3mobileActor ): Read-only . The mobile actor of the trainer the player is interacting with. price (number): The adjusted price of the training. reference ( tes3reference ): Read-only . mobile\u2019s related reference. skill ( tes3statisticSkill ): Read-only . The ID of the skill to be trained. skillId (number): Read-only . The ID of the skill to be trained.","title":"calcTrainingPrice"},{"location":"events/calcTrainingPrice/#calctrainingprice","text":"This event is called when determining the cost of training, and can be used to modify the given price. --- @param e calcTrainingPriceEventData local function calcTrainingPriceCallback ( e ) end event . register ( \"calcTrainingPrice\" , calcTrainingPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcTrainingPrice"},{"location":"events/calcTrainingPrice/#event-data","text":"basePrice (number): Read-only . The price before adjustment. mobile ( tes3mobileActor ): Read-only . The mobile actor of the trainer the player is interacting with. price (number): The adjusted price of the training. reference ( tes3reference ): Read-only . mobile\u2019s related reference. skill ( tes3statisticSkill ): Read-only . The ID of the skill to be trained. skillId (number): Read-only . The ID of the skill to be trained.","title":"Event Data"},{"location":"events/calcTravelPrice/","text":"calcTravelPrice \u2693\ufe0e This event is called when determining the price of traveling, and can be used to modify the given price. --- @param e calcTravelPriceEventData local function calcTravelPriceCallback ( e ) end event . register ( \"calcTravelPrice\" , calcTravelPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e basePrice (number): Read-only . The price before adjustment. companions (table): Read-only . A table of companions ( tes3reference s) that will travel with the player, or nil if no companions are present. destination ( tes3reference ): Read-only . The travel marker that marks the destination. mobile ( tes3mobileActor ): Read-only . The mobile actor of the merchant the player is interacting with. price (number): The adjusted price of travelling. reference ( tes3reference ): Read-only . mobile\u2019s related reference.","title":"calcTravelPrice"},{"location":"events/calcTravelPrice/#calctravelprice","text":"This event is called when determining the price of traveling, and can be used to modify the given price. --- @param e calcTravelPriceEventData local function calcTravelPriceCallback ( e ) end event . register ( \"calcTravelPrice\" , calcTravelPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcTravelPrice"},{"location":"events/calcTravelPrice/#event-data","text":"basePrice (number): Read-only . The price before adjustment. companions (table): Read-only . A table of companions ( tes3reference s) that will travel with the player, or nil if no companions are present. destination ( tes3reference ): Read-only . The travel marker that marks the destination. mobile ( tes3mobileActor ): Read-only . The mobile actor of the merchant the player is interacting with. price (number): The adjusted price of travelling. reference ( tes3reference ): Read-only . mobile\u2019s related reference.","title":"Event Data"},{"location":"events/calcWalkSpeed/","text":"calcWalkSpeed \u2693\ufe0e One of the movement events, calcWalkSpeed is used when calculating the base walk speed. Nearly every other movement speed event starts with this, with the exception of calcFlySpeed . The movement event flow is described below: Walking: calcWalkSpeed -> calcMoveSpeed Running: calcWalkSpeed -> calcRunSpeed -> calcMoveSpeed Swimming: calcWalkSpeed -> calcSwimSpeed -> calcMoveSpeed Swimming (while running): calcWalkSpeed -> calcSwimSpeed -> calcSwimRunSpeed -> calcMoveSpeed --- @param e calcWalkSpeedEventData local function calcWalkSpeedCallback ( e ) end event . register ( \"calcWalkSpeed\" , calcWalkSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 1 for this event.","title":"calcWalkSpeed"},{"location":"events/calcWalkSpeed/#calcwalkspeed","text":"One of the movement events, calcWalkSpeed is used when calculating the base walk speed. Nearly every other movement speed event starts with this, with the exception of calcFlySpeed . The movement event flow is described below: Walking: calcWalkSpeed -> calcMoveSpeed Running: calcWalkSpeed -> calcRunSpeed -> calcMoveSpeed Swimming: calcWalkSpeed -> calcSwimSpeed -> calcMoveSpeed Swimming (while running): calcWalkSpeed -> calcSwimSpeed -> calcSwimRunSpeed -> calcMoveSpeed --- @param e calcWalkSpeedEventData local function calcWalkSpeedCallback ( e ) end event . register ( \"calcWalkSpeed\" , calcWalkSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcWalkSpeed"},{"location":"events/calcWalkSpeed/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 1 for this event.","title":"Event Data"},{"location":"events/cellActivated/","text":"cellActivated \u2693\ufe0e This event is triggered when a cell is activated. --- @param e cellActivatedEventData local function cellActivatedCallback ( e ) end event . register ( \"cellActivated\" , cellActivatedCallback ) Tip This event can be filtered based on the cell event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e cell ( tes3cell ): Read-only . The cell which was activated.","title":"cellActivated"},{"location":"events/cellActivated/#cellactivated","text":"This event is triggered when a cell is activated. --- @param e cellActivatedEventData local function cellActivatedCallback ( e ) end event . register ( \"cellActivated\" , cellActivatedCallback ) Tip This event can be filtered based on the cell event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"cellActivated"},{"location":"events/cellActivated/#event-data","text":"cell ( tes3cell ): Read-only . The cell which was activated.","title":"Event Data"},{"location":"events/cellChanged/","text":"cellChanged \u2693\ufe0e The cellChanged event is occurs when the player changes cells. This might occur from going through a door, using intervention or recall spells, or from scripted repositioning. --- @param e cellChangedEventData local function cellChangedCallback ( e ) end event . register ( \"cellChanged\" , cellChangedCallback ) Tip This event can be filtered based on the cell event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e cell ( tes3cell ): Read-only . The new cell that the player has entered. previousCell ( tes3cell ): Read-only . The previous cell that the player came from. This will be nil when loading a game.","title":"cellChanged"},{"location":"events/cellChanged/#cellchanged","text":"The cellChanged event is occurs when the player changes cells. This might occur from going through a door, using intervention or recall spells, or from scripted repositioning. --- @param e cellChangedEventData local function cellChangedCallback ( e ) end event . register ( \"cellChanged\" , cellChangedCallback ) Tip This event can be filtered based on the cell event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"cellChanged"},{"location":"events/cellChanged/#event-data","text":"cell ( tes3cell ): Read-only . The new cell that the player has entered. previousCell ( tes3cell ): Read-only . The previous cell that the player came from. This will be nil when loading a game.","title":"Event Data"},{"location":"events/cellDeactivated/","text":"cellDeactivated \u2693\ufe0e This event is triggered when a cell is deactivated. --- @param e cellDeactivatedEventData local function cellDeactivatedCallback ( e ) end event . register ( \"cellDeactivated\" , cellDeactivatedCallback ) Tip This event can be filtered based on the cell event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e cell ( tes3cell ): Read-only . The cell which was deactivated.","title":"cellDeactivated"},{"location":"events/cellDeactivated/#celldeactivated","text":"This event is triggered when a cell is deactivated. --- @param e cellDeactivatedEventData local function cellDeactivatedCallback ( e ) end event . register ( \"cellDeactivated\" , cellDeactivatedCallback ) Tip This event can be filtered based on the cell event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"cellDeactivated"},{"location":"events/cellDeactivated/#event-data","text":"cell ( tes3cell ): Read-only . The cell which was deactivated.","title":"Event Data"},{"location":"events/collideWater/","text":"collideWater \u2693\ufe0e This event is triggered when a mobile object collides with water and all the frames during the collision. --- @param e collideWaterEventData local function collideWaterCallback ( e ) end event . register ( \"collideWater\" , collideWaterCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e inWater (boolean): Read-only . mobile ( tes3mobileObject ): Read-only . Mobile object which collided. reference ( tes3mobileObject ): Read-only . mobile 's reference.","title":"collideWater"},{"location":"events/collideWater/#collidewater","text":"This event is triggered when a mobile object collides with water and all the frames during the collision. --- @param e collideWaterEventData local function collideWaterCallback ( e ) end event . register ( \"collideWater\" , collideWaterCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"collideWater"},{"location":"events/collideWater/#event-data","text":"inWater (boolean): Read-only . mobile ( tes3mobileObject ): Read-only . Mobile object which collided. reference ( tes3mobileObject ): Read-only . mobile 's reference.","title":"Event Data"},{"location":"events/collision/","text":"collision \u2693\ufe0e This event is triggered on a collision and all the frames during the collision. --- @param e collisionEventData local function collisionCallback ( e ) end event . register ( \"collision\" , collisionCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileObject ): Read-only . Mobile object which collided with its target reference. reference ( tes3reference ): Read-only . Mobile object's associated reference. target ( tes3reference ): Read-only . Reference which mobile object has collided with.","title":"collision"},{"location":"events/collision/#collision","text":"This event is triggered on a collision and all the frames during the collision. --- @param e collisionEventData local function collisionCallback ( e ) end event . register ( \"collision\" , collisionCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"collision"},{"location":"events/collision/#event-data","text":"mobile ( tes3mobileObject ): Read-only . Mobile object which collided with its target reference. reference ( tes3reference ): Read-only . Mobile object's associated reference. target ( tes3reference ): Read-only . Reference which mobile object has collided with.","title":"Event Data"},{"location":"events/combatStart/","text":"combatStart \u2693\ufe0e The combatStart event occurs when combat is about to begin between two actors. This event allows scripts to prevent combat from starting. --- @param e combatStartEventData local function combatStartCallback ( e ) end event . register ( \"combatStart\" , combatStartCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e actor ( tes3mobileActor ): Read-only . The mobile actor who is entering combat. target ( tes3mobileActor ): Read-only . The mobile actor who combat is being triggered against.","title":"combatStart"},{"location":"events/combatStart/#combatstart","text":"The combatStart event occurs when combat is about to begin between two actors. This event allows scripts to prevent combat from starting. --- @param e combatStartEventData local function combatStartCallback ( e ) end event . register ( \"combatStart\" , combatStartCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"combatStart"},{"location":"events/combatStart/#event-data","text":"actor ( tes3mobileActor ): Read-only . The mobile actor who is entering combat. target ( tes3mobileActor ): Read-only . The mobile actor who combat is being triggered against.","title":"Event Data"},{"location":"events/combatStarted/","text":"combatStarted \u2693\ufe0e The combatStarted event occurs after combat has began between two actors. This event is preceded by the combatStart event. --- @param e combatStartedEventData local function combatStartedCallback ( e ) end event . register ( \"combatStarted\" , combatStartedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e actor ( tes3mobileActor ): Read-only . The mobile actor who has entered combat. target ( tes3mobileActor ): Read-only . The mobile actor who combat has been triggered against.","title":"combatStarted"},{"location":"events/combatStarted/#combatstarted","text":"The combatStarted event occurs after combat has began between two actors. This event is preceded by the combatStart event. --- @param e combatStartedEventData local function combatStartedCallback ( e ) end event . register ( \"combatStarted\" , combatStartedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"combatStarted"},{"location":"events/combatStarted/#event-data","text":"actor ( tes3mobileActor ): Read-only . The mobile actor who has entered combat. target ( tes3mobileActor ): Read-only . The mobile actor who combat has been triggered against.","title":"Event Data"},{"location":"events/combatStop/","text":"combatStop \u2693\ufe0e The combatStop event occurs when an actor is about to leave combat. This event allows scripts to prevent combat from stopping. --- @param e combatStopEventData local function combatStopCallback ( e ) end event . register ( \"combatStop\" , combatStopCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e actor ( tes3mobileActor ): Read-only . The mobile actor who is exiting combat.","title":"combatStop"},{"location":"events/combatStop/#combatstop","text":"The combatStop event occurs when an actor is about to leave combat. This event allows scripts to prevent combat from stopping. --- @param e combatStopEventData local function combatStopCallback ( e ) end event . register ( \"combatStop\" , combatStopCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"combatStop"},{"location":"events/combatStop/#event-data","text":"actor ( tes3mobileActor ): Read-only . The mobile actor who is exiting combat.","title":"Event Data"},{"location":"events/combatStopped/","text":"combatStopped \u2693\ufe0e The combatStopped event occurs after an actor has left combat. This event is preceded by the combatStop event. --- @param e combatStoppedEventData local function combatStoppedCallback ( e ) end event . register ( \"combatStopped\" , combatStoppedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e actor ( tes3mobileActor ): Read-only . The mobile actor who has left combat.","title":"combatStopped"},{"location":"events/combatStopped/#combatstopped","text":"The combatStopped event occurs after an actor has left combat. This event is preceded by the combatStop event. --- @param e combatStoppedEventData local function combatStoppedCallback ( e ) end event . register ( \"combatStopped\" , combatStoppedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"combatStopped"},{"location":"events/combatStopped/#event-data","text":"actor ( tes3mobileActor ): Read-only . The mobile actor who has left combat.","title":"Event Data"},{"location":"events/containerClosed/","text":"containerClosed \u2693\ufe0e This event is raised when a container is closed. --- @param e containerClosedEventData local function containerClosedCallback ( e ) end event . register ( \"containerClosed\" , containerClosedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e reference ( tes3reference ): Read-only . The reference of the container that was closed.","title":"containerClosed"},{"location":"events/containerClosed/#containerclosed","text":"This event is raised when a container is closed. --- @param e containerClosedEventData local function containerClosedCallback ( e ) end event . register ( \"containerClosed\" , containerClosedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"containerClosed"},{"location":"events/containerClosed/#event-data","text":"reference ( tes3reference ): Read-only . The reference of the container that was closed.","title":"Event Data"},{"location":"events/convertReferenceToItem/","text":"convertReferenceToItem \u2693\ufe0e This event is raised when an in-world tes3reference for an item is about to be converted to fit into a tes3itemStack . --- @param e convertReferenceToItemEventData local function convertReferenceToItemCallback ( e ) end event . register ( \"convertReferenceToItem\" , convertReferenceToItemCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e reference ( tes3reference ): Read-only . The reference about to be converted.","title":"convertReferenceToItem"},{"location":"events/convertReferenceToItem/#convertreferencetoitem","text":"This event is raised when an in-world tes3reference for an item is about to be converted to fit into a tes3itemStack . --- @param e convertReferenceToItemEventData local function convertReferenceToItemCallback ( e ) end event . register ( \"convertReferenceToItem\" , convertReferenceToItemCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"convertReferenceToItem"},{"location":"events/convertReferenceToItem/#event-data","text":"reference ( tes3reference ): Read-only . The reference about to be converted.","title":"Event Data"},{"location":"events/crimeWitnessed/","text":"crimeWitnessed \u2693\ufe0e This event fires when a crime is witnessed by an actor. --- @param e crimeWitnessedEventData local function crimeWitnessedCallback ( e ) end event . register ( \"crimeWitnessed\" , crimeWitnessedCallback ) Tip This event can be filtered based on the type event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e position ( tes3vector3 ): Read-only . The position that the crime ocurred at. realTimestamp (number): Read-only . The timestamp that the crime ocurred at. type (string): Read-only . The type of crime that was committed. value (number): Read-only . The bounty value of the crime. witness ( tes3reference ): Read-only . The reference that witnessed the crime. witnessMobile ( tes3mobileActor ): Read-only . The mobile actor of the reference that witnessed the crime.","title":"crimeWitnessed"},{"location":"events/crimeWitnessed/#crimewitnessed","text":"This event fires when a crime is witnessed by an actor. --- @param e crimeWitnessedEventData local function crimeWitnessedCallback ( e ) end event . register ( \"crimeWitnessed\" , crimeWitnessedCallback ) Tip This event can be filtered based on the type event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"crimeWitnessed"},{"location":"events/crimeWitnessed/#event-data","text":"position ( tes3vector3 ): Read-only . The position that the crime ocurred at. realTimestamp (number): Read-only . The timestamp that the crime ocurred at. type (string): Read-only . The type of crime that was committed. value (number): Read-only . The bounty value of the crime. witness ( tes3reference ): Read-only . The reference that witnessed the crime. witnessMobile ( tes3mobileActor ): Read-only . The mobile actor of the reference that witnessed the crime.","title":"Event Data"},{"location":"events/damage/","text":"damage \u2693\ufe0e The damage event triggers before an actor is damaged. The damage value can be modified, or the damage can be prevented completely by blocking the event. --- @param e damageEventData local function damageCallback ( e ) end event . register ( \"damage\" , damageCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e activeMagicEffect ( tes3magicEffect ): Read-only . Magic effect which will cause the damage. Can be nil . attacker ( tes3mobileActor ): Read-only . The mobile actor dealing the damage. Can be nil . attackerReference ( tes3reference ): Read-only . The attacker mobile's associated reference. Can be nil . damage (number): The amount of damage done. magicEffectInstance ( tes3magicEffectInstance ): An instance of the magic effect in the spell that will cause the damage. Can be nil . magicSourceInstance ( tes3magicSourceInstance ): A tes3magicSourceInstance object of a spell that will cause the damage. Can be nil . mobile ( tes3mobileActor ): Read-only . The mobile actor that is taking damage. projectile ( tes3mobileProjectile ): Read-only . Projectile that will deal the damage. Can be nil . reference ( tes3reference ): Read-only . The mobile\u2019s associated reference. source (string): Read-only . The origin of damage. These damage sources are present as tes3.damageSource constants. See the example. Damage with tes3.damageSource.shield source comes from magic shields. Other sources are self-explanatory. Examples \u2693\ufe0e Example: Change fall damage -- Change fall damage if player is a Bosmer local function onDamage ( e ) -- We only care if the player took some damage if e . reference ~= tes3 . player then return end -- Check if the damage was caused by a fall if e . source ~= tes3 . damageSource . fall then return end -- Check weather the player is a Bosmer if e . reference . object . race . id : lower () == \"bosmer\" then -- This is the same as tes3.player.object.race.id:lower() == \"bosmer\" -- Taunt the player tes3 . messageBox ( \"Ha ha ha, you broke your leg Bosmer\" ) -- Double the damage. He is Fargoth's cousin after all e . damage = e . damage * 2 end end event . register ( \"damage\" , onDamage )","title":"damage"},{"location":"events/damage/#damage","text":"The damage event triggers before an actor is damaged. The damage value can be modified, or the damage can be prevented completely by blocking the event. --- @param e damageEventData local function damageCallback ( e ) end event . register ( \"damage\" , damageCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"damage"},{"location":"events/damage/#event-data","text":"activeMagicEffect ( tes3magicEffect ): Read-only . Magic effect which will cause the damage. Can be nil . attacker ( tes3mobileActor ): Read-only . The mobile actor dealing the damage. Can be nil . attackerReference ( tes3reference ): Read-only . The attacker mobile's associated reference. Can be nil . damage (number): The amount of damage done. magicEffectInstance ( tes3magicEffectInstance ): An instance of the magic effect in the spell that will cause the damage. Can be nil . magicSourceInstance ( tes3magicSourceInstance ): A tes3magicSourceInstance object of a spell that will cause the damage. Can be nil . mobile ( tes3mobileActor ): Read-only . The mobile actor that is taking damage. projectile ( tes3mobileProjectile ): Read-only . Projectile that will deal the damage. Can be nil . reference ( tes3reference ): Read-only . The mobile\u2019s associated reference. source (string): Read-only . The origin of damage. These damage sources are present as tes3.damageSource constants. See the example. Damage with tes3.damageSource.shield source comes from magic shields. Other sources are self-explanatory.","title":"Event Data"},{"location":"events/damage/#examples","text":"Example: Change fall damage -- Change fall damage if player is a Bosmer local function onDamage ( e ) -- We only care if the player took some damage if e . reference ~= tes3 . player then return end -- Check if the damage was caused by a fall if e . source ~= tes3 . damageSource . fall then return end -- Check weather the player is a Bosmer if e . reference . object . race . id : lower () == \"bosmer\" then -- This is the same as tes3.player.object.race.id:lower() == \"bosmer\" -- Taunt the player tes3 . messageBox ( \"Ha ha ha, you broke your leg Bosmer\" ) -- Double the damage. He is Fargoth's cousin after all e . damage = e . damage * 2 end end event . register ( \"damage\" , onDamage )","title":"Examples"},{"location":"events/damageHandToHand/","text":"damageHandToHand \u2693\ufe0e The damageHandToHand event triggers before an actor takes fatigue damage from hand-to-hand combat. It does not trigger on health damage, but the damage event will. The fatigueDamage value can be modified, or can be prevented completely by blocking the event. The player as attacker will gain hand-to-hand experience only if fatigueDamage is greater than zero. --- @param e damageHandToHandEventData local function damageHandToHandCallback ( e ) end event . register ( \"damageHandToHand\" , damageHandToHandCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e attacker ( tes3mobileActor ): Read-only . The mobile actor dealing the damage. Can be nil. attackerReference ( tes3reference ): Read-only . The attacker mobile's associated reference. Can be nil. fatigueDamage (number): The amount of fatigue damage done. mobile ( tes3mobileActor ): Read-only . The mobile actor that is taking fatigue damage. reference ( tes3reference ): Read-only . The mobile\u2019s associated reference.","title":"damageHandToHand"},{"location":"events/damageHandToHand/#damagehandtohand","text":"The damageHandToHand event triggers before an actor takes fatigue damage from hand-to-hand combat. It does not trigger on health damage, but the damage event will. The fatigueDamage value can be modified, or can be prevented completely by blocking the event. The player as attacker will gain hand-to-hand experience only if fatigueDamage is greater than zero. --- @param e damageHandToHandEventData local function damageHandToHandCallback ( e ) end event . register ( \"damageHandToHand\" , damageHandToHandCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"damageHandToHand"},{"location":"events/damageHandToHand/#event-data","text":"attacker ( tes3mobileActor ): Read-only . The mobile actor dealing the damage. Can be nil. attackerReference ( tes3reference ): Read-only . The attacker mobile's associated reference. Can be nil. fatigueDamage (number): The amount of fatigue damage done. mobile ( tes3mobileActor ): Read-only . The mobile actor that is taking fatigue damage. reference ( tes3reference ): Read-only . The mobile\u2019s associated reference.","title":"Event Data"},{"location":"events/damaged/","text":"damaged \u2693\ufe0e The damaged event triggers after an actor has been damaged. --- @param e damagedEventData local function damagedCallback ( e ) end event . register ( \"damaged\" , damagedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e activeMagicEffect ( tes3magicEffect ): Read-only . Magic effect which caused damage. Can be nil . attacker ( tes3mobileActor ): Read-only . The mobile actor dealing the damage. Can be nil . attackerReference ( tes3reference ): Read-only . The attacker mobile's associated reference. Can be nil . damage (number): Read-only . The amount of damage done. killingBlow (boolean): Read-only . If true, the damage killed the target. magicEffectInstance ( tes3magicEffectInstance ): An instance of the magic effect in the spell that caused damage. Can be nil . magicSourceInstance ( tes3magicSourceInstance ): A tes3magicSourceInstance object of a spell that caused damage. Can be nil . mobile ( tes3mobileActor ): Read-only . The mobile actor that took damage. projectile ( tes3mobileProjectile ): Read-only . Projectile that dealt the damage. Can be nil . reference ( tes3reference ): Read-only . The mobile\u2019s associated reference. source (string): Read-only . The origin of damage. These damage sources are present as tes3.damageSource constants. See the example. Damage with tes3.damageSource.shield source comes from magic shields. Other sources are self-explanatory. Examples \u2693\ufe0e Example: Notify the player that their arrow/bolt killed their opponent -- Print a message if player's arrow killed its target local function onDamaged ( e ) -- We only care if the player did the damage if e . attackerReference ~= tes3 . player then return end -- Check if the damage was caused by a projectile, but not by a spell, so it must be an arrow or a bolt if e . projectile ~= nil and e . magicSourceInstance == nil then -- Did the damage kill the target? if e . killingBlow == true then tes3 . messageBox ( \"Your arrow felled its target!\" ) end end end event . register ( \"damaged\" , onDamaged ) Example: Detect that the player died from drowning local function onDamaged ( e ) -- We only care if the player recieved the damage if e . reference ~= tes3 . player then return end -- Does the damage come from drowining? if e . source ~= tes3 . damageSource . suffocation then return end -- Is the player in Mudan Grotto? if tes3 . mobilePlayer . cell . id : lower () == \"mudan grotto\" then -- Did the damage kill the player? if e . killingBlow == true then tes3 . messageBox ( \"You died diving for treasure!\" ) end end end event . register ( \"damaged\" , onDamaged )","title":"damaged"},{"location":"events/damaged/#damaged","text":"The damaged event triggers after an actor has been damaged. --- @param e damagedEventData local function damagedCallback ( e ) end event . register ( \"damaged\" , damagedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"damaged"},{"location":"events/damaged/#event-data","text":"activeMagicEffect ( tes3magicEffect ): Read-only . Magic effect which caused damage. Can be nil . attacker ( tes3mobileActor ): Read-only . The mobile actor dealing the damage. Can be nil . attackerReference ( tes3reference ): Read-only . The attacker mobile's associated reference. Can be nil . damage (number): Read-only . The amount of damage done. killingBlow (boolean): Read-only . If true, the damage killed the target. magicEffectInstance ( tes3magicEffectInstance ): An instance of the magic effect in the spell that caused damage. Can be nil . magicSourceInstance ( tes3magicSourceInstance ): A tes3magicSourceInstance object of a spell that caused damage. Can be nil . mobile ( tes3mobileActor ): Read-only . The mobile actor that took damage. projectile ( tes3mobileProjectile ): Read-only . Projectile that dealt the damage. Can be nil . reference ( tes3reference ): Read-only . The mobile\u2019s associated reference. source (string): Read-only . The origin of damage. These damage sources are present as tes3.damageSource constants. See the example. Damage with tes3.damageSource.shield source comes from magic shields. Other sources are self-explanatory.","title":"Event Data"},{"location":"events/damaged/#examples","text":"Example: Notify the player that their arrow/bolt killed their opponent -- Print a message if player's arrow killed its target local function onDamaged ( e ) -- We only care if the player did the damage if e . attackerReference ~= tes3 . player then return end -- Check if the damage was caused by a projectile, but not by a spell, so it must be an arrow or a bolt if e . projectile ~= nil and e . magicSourceInstance == nil then -- Did the damage kill the target? if e . killingBlow == true then tes3 . messageBox ( \"Your arrow felled its target!\" ) end end end event . register ( \"damaged\" , onDamaged ) Example: Detect that the player died from drowning local function onDamaged ( e ) -- We only care if the player recieved the damage if e . reference ~= tes3 . player then return end -- Does the damage come from drowining? if e . source ~= tes3 . damageSource . suffocation then return end -- Is the player in Mudan Grotto? if tes3 . mobilePlayer . cell . id : lower () == \"mudan grotto\" then -- Did the damage kill the player? if e . killingBlow == true then tes3 . messageBox ( \"You died diving for treasure!\" ) end end end event . register ( \"damaged\" , onDamaged )","title":"Examples"},{"location":"events/damagedHandToHand/","text":"damagedHandToHand \u2693\ufe0e The damagedHandToHand event triggers after an actor takes fatigue damage from hand-to-hand combat. It does not trigger on health damage, but the damaged event will. --- @param e damagedHandToHandEventData local function damagedHandToHandCallback ( e ) end event . register ( \"damagedHandToHand\" , damagedHandToHandCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e attacker ( tes3mobileActor ): Read-only . The mobile actor dealing the damage. Can be nil. attackerReference ( tes3reference ): Read-only . The attacker mobile's associated reference. Can be nil. fatigueDamage (number): Read-only . The amount of fatigue damage done. mobile ( tes3mobileActor ): Read-only . The mobile actor that took fatigue damage. reference ( tes3reference ): Read-only . The mobile\u2019s associated reference.","title":"damagedHandToHand"},{"location":"events/damagedHandToHand/#damagedhandtohand","text":"The damagedHandToHand event triggers after an actor takes fatigue damage from hand-to-hand combat. It does not trigger on health damage, but the damaged event will. --- @param e damagedHandToHandEventData local function damagedHandToHandCallback ( e ) end event . register ( \"damagedHandToHand\" , damagedHandToHandCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"damagedHandToHand"},{"location":"events/damagedHandToHand/#event-data","text":"attacker ( tes3mobileActor ): Read-only . The mobile actor dealing the damage. Can be nil. attackerReference ( tes3reference ): Read-only . The attacker mobile's associated reference. Can be nil. fatigueDamage (number): Read-only . The amount of fatigue damage done. mobile ( tes3mobileActor ): Read-only . The mobile actor that took fatigue damage. reference ( tes3reference ): Read-only . The mobile\u2019s associated reference.","title":"Event Data"},{"location":"events/death/","text":"death \u2693\ufe0e This event triggers when an actor dies. --- @param e deathEventData local function deathCallback ( e ) end event . register ( \"death\" , deathCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor that has died. reference ( tes3reference ): Read-only . mobile\u2019s associated reference.","title":"death"},{"location":"events/death/#death","text":"This event triggers when an actor dies. --- @param e deathEventData local function deathCallback ( e ) end event . register ( \"death\" , deathCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"death"},{"location":"events/death/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor that has died. reference ( tes3reference ): Read-only . mobile\u2019s associated reference.","title":"Event Data"},{"location":"events/detectSneak/","text":"detectSneak \u2693\ufe0e This event is invoked whenever an actor is checking if they can detect another actor sneaking. --- @param e detectSneakEventData local function detectSneakCallback ( e ) end event . register ( \"detectSneak\" , detectSneakCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e detector ( tes3mobileActor ): Read-only . The mobile actor that is doing the detecting. isDetected (boolean): The previous detection calculated, starting with the base engine result. target ( tes3mobileActor ): Read-only . The mobile actor that is possibly being detected.","title":"detectSneak"},{"location":"events/detectSneak/#detectsneak","text":"This event is invoked whenever an actor is checking if they can detect another actor sneaking. --- @param e detectSneakEventData local function detectSneakCallback ( e ) end event . register ( \"detectSneak\" , detectSneakCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"detectSneak"},{"location":"events/detectSneak/#event-data","text":"detector ( tes3mobileActor ): Read-only . The mobile actor that is doing the detecting. isDetected (boolean): The previous detection calculated, starting with the base engine result. target ( tes3mobileActor ): Read-only . The mobile actor that is possibly being detected.","title":"Event Data"},{"location":"events/determineAction/","text":"determineAction \u2693\ufe0e This event fires when an actor determines an action in a combat session. --- @param e determineActionEventData local function determineActionCallback ( e ) end event . register ( \"determineAction\" , determineActionCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e session ( tes3combatSession ): Read-only . The combat session the action is being determined for.","title":"determineAction"},{"location":"events/determineAction/#determineaction","text":"This event fires when an actor determines an action in a combat session. --- @param e determineActionEventData local function determineActionCallback ( e ) end event . register ( \"determineAction\" , determineActionCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"determineAction"},{"location":"events/determineAction/#event-data","text":"session ( tes3combatSession ): Read-only . The combat session the action is being determined for.","title":"Event Data"},{"location":"events/determinedAction/","text":"determinedAction \u2693\ufe0e This event fires when an actor has determined an action in a combat session. --- @param e determinedActionEventData local function determinedActionCallback ( e ) end event . register ( \"determinedAction\" , determinedActionCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e session ( tes3combatSession ): Read-only . The combat session the action has been determined for.","title":"determinedAction"},{"location":"events/determinedAction/#determinedaction","text":"This event fires when an actor has determined an action in a combat session. --- @param e determinedActionEventData local function determinedActionCallback ( e ) end event . register ( \"determinedAction\" , determinedActionCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"determinedAction"},{"location":"events/determinedAction/#event-data","text":"session ( tes3combatSession ): Read-only . The combat session the action has been determined for.","title":"Event Data"},{"location":"events/enchantChargeUse/","text":"enchantChargeUse \u2693\ufe0e This event is triggered just before an on-strike or on-use enchantment is used by any actor, and also by the UI system to label enchant charges. It allows modification of the charge required to use an enchantment. --- @param e enchantChargeUseEventData local function enchantChargeUseCallback ( e ) end event . register ( \"enchantChargeUse\" , enchantChargeUseCallback ) Tip This event can be filtered based on the caster event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e caster ( tes3reference ): Read-only . The caster of the enchantment. charge (number): The charge required to cast the enchantment. May be modified. isCast (boolean): True if the calculation is for a on-strike or on-use action, false if for UI enchant charge display. The type of action is found at e.source.castType . source ( tes3enchantment ): Read-only . The enchantment being used or examined by the UI.","title":"enchantChargeUse"},{"location":"events/enchantChargeUse/#enchantchargeuse","text":"This event is triggered just before an on-strike or on-use enchantment is used by any actor, and also by the UI system to label enchant charges. It allows modification of the charge required to use an enchantment. --- @param e enchantChargeUseEventData local function enchantChargeUseCallback ( e ) end event . register ( \"enchantChargeUse\" , enchantChargeUseCallback ) Tip This event can be filtered based on the caster event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"enchantChargeUse"},{"location":"events/enchantChargeUse/#event-data","text":"caster ( tes3reference ): Read-only . The caster of the enchantment. charge (number): The charge required to cast the enchantment. May be modified. isCast (boolean): True if the calculation is for a on-strike or on-use action, false if for UI enchant charge display. The type of action is found at e.source.castType . source ( tes3enchantment ): Read-only . The enchantment being used or examined by the UI.","title":"Event Data"},{"location":"events/enterFrame/","text":"enterFrame \u2693\ufe0e The enterFrame event occurs at the start of every frame, including when the game is paused or in menu mode. --- @param e enterFrameEventData local function enterFrameCallback ( e ) end event . register ( \"enterFrame\" , enterFrameCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e delta (number): Read-only . The number of seconds since the last frame. menuMode (boolean): Read-only . If the game is paused- in the inventory or a menu, etc. timestamp (number): Read-only . The number of hours since the beginning of the 3rd Era (similar to the Unix Epoch).","title":"enterFrame"},{"location":"events/enterFrame/#enterframe","text":"The enterFrame event occurs at the start of every frame, including when the game is paused or in menu mode. --- @param e enterFrameEventData local function enterFrameCallback ( e ) end event . register ( \"enterFrame\" , enterFrameCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"enterFrame"},{"location":"events/enterFrame/#event-data","text":"delta (number): Read-only . The number of seconds since the last frame. menuMode (boolean): Read-only . If the game is paused- in the inventory or a menu, etc. timestamp (number): Read-only . The number of hours since the beginning of the 3rd Era (similar to the Unix Epoch).","title":"Event Data"},{"location":"events/equip/","text":"equip \u2693\ufe0e The equip event fires when an actor is about to equip an item, i.e. just before the item is equipped. This event allows scripts to block equipping. See equipped _ for the post-equip event. The item must not be removed from the inventory during this event, as the item and item data is still being referenced by the initiator of the equip action. If you want to consume the item, block the equip and remove it at a later time. Removing the item during this event can cause inventory desync bugs. --- @param e equipEventData local function equipCallback ( e ) end event . register ( \"equip\" , equipCallback ) Tip This event can be filtered based on the item event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e item ( tes3baseObject ): Read-only . The object being equipped. itemData ( tes3itemData ): Read-only . The item data of item. reference ( tes3reference ): Read-only . The reference to the mobile actor that is equipping the item.","title":"equip"},{"location":"events/equip/#equip","text":"The equip event fires when an actor is about to equip an item, i.e. just before the item is equipped. This event allows scripts to block equipping. See equipped _ for the post-equip event. The item must not be removed from the inventory during this event, as the item and item data is still being referenced by the initiator of the equip action. If you want to consume the item, block the equip and remove it at a later time. Removing the item during this event can cause inventory desync bugs. --- @param e equipEventData local function equipCallback ( e ) end event . register ( \"equip\" , equipCallback ) Tip This event can be filtered based on the item event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"equip"},{"location":"events/equip/#event-data","text":"item ( tes3baseObject ): Read-only . The object being equipped. itemData ( tes3itemData ): Read-only . The item data of item. reference ( tes3reference ): Read-only . The reference to the mobile actor that is equipping the item.","title":"Event Data"},{"location":"events/equipmentReevaluated/","text":"equipmentReevaluated \u2693\ufe0e The equipmentReevaluated event fires after an actor has gone through its items and determined if anything in its inventory is better than what it currently has equipped. This event can be used to force equip new, custom equipment slots if needed. --- @param e equipmentReevaluatedEventData local function equipmentReevaluatedCallback ( e ) end event . register ( \"equipmentReevaluated\" , equipmentReevaluatedCallback ) Tip This event can be filtered based on the item event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e actor ( tes3actor ): Read-only . The actor that has reevaluated their equipment. mobile ( tes3mobileActor ): Read-only . The mobile actor that has reevaluated their equipment. reference ( tes3reference ): Read-only . The reference that has reevaluated their equipment.","title":"equipmentReevaluated"},{"location":"events/equipmentReevaluated/#equipmentreevaluated","text":"The equipmentReevaluated event fires after an actor has gone through its items and determined if anything in its inventory is better than what it currently has equipped. This event can be used to force equip new, custom equipment slots if needed. --- @param e equipmentReevaluatedEventData local function equipmentReevaluatedCallback ( e ) end event . register ( \"equipmentReevaluated\" , equipmentReevaluatedCallback ) Tip This event can be filtered based on the item event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"equipmentReevaluated"},{"location":"events/equipmentReevaluated/#event-data","text":"actor ( tes3actor ): Read-only . The actor that has reevaluated their equipment. mobile ( tes3mobileActor ): Read-only . The mobile actor that has reevaluated their equipment. reference ( tes3reference ): Read-only . The reference that has reevaluated their equipment.","title":"Event Data"},{"location":"events/equipped/","text":"equipped \u2693\ufe0e The equipped event fires after an actor has successfully equipped an item. This event is preceded by the equip event. --- @param e equippedEventData local function equippedCallback ( e ) end event . register ( \"equipped\" , equippedCallback ) Tip This event can be filtered based on the item event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e actor ( tes3actor ): Read-only . The actor that has equipped the item. item ( tes3baseObject ): Read-only . The object that has been equipped. itemData ( tes3itemData ): Read-only . The item data of item. mobile ( tes3mobileActor ): Read-only . The mobile actor that has equipped the item. reference ( tes3reference ): Read-only . The reference to the mobile actor that has equipped the item.","title":"equipped"},{"location":"events/equipped/#equipped","text":"The equipped event fires after an actor has successfully equipped an item. This event is preceded by the equip event. --- @param e equippedEventData local function equippedCallback ( e ) end event . register ( \"equipped\" , equippedCallback ) Tip This event can be filtered based on the item event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"equipped"},{"location":"events/equipped/#event-data","text":"actor ( tes3actor ): Read-only . The actor that has equipped the item. item ( tes3baseObject ): Read-only . The object that has been equipped. itemData ( tes3itemData ): Read-only . The item data of item. mobile ( tes3mobileActor ): Read-only . The mobile actor that has equipped the item. reference ( tes3reference ): Read-only . The reference to the mobile actor that has equipped the item.","title":"Event Data"},{"location":"events/exerciseSkill/","text":"exerciseSkill \u2693\ufe0e This event is invoked whenever the player gains experience in a skill. The event can be blocked to prevent progress. Additionally, both the skill gaining experience and the progress gained can be changed. --- @param e exerciseSkillEventData local function exerciseSkillCallback ( e ) end event . register ( \"exerciseSkill\" , exerciseSkillCallback ) Tip This event can be filtered based on the skill event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e progress (number): The amount of experience that skill is gaining. Note that experience is not on a scale of 1 to 100. This value is modifiable. skill (number): The ID of the skill that is gaining experience. The IDs used are available in Lua by their indentifier in the tes3.skill namespace. This can be changed to provide experience to a different skill.","title":"exerciseSkill"},{"location":"events/exerciseSkill/#exerciseskill","text":"This event is invoked whenever the player gains experience in a skill. The event can be blocked to prevent progress. Additionally, both the skill gaining experience and the progress gained can be changed. --- @param e exerciseSkillEventData local function exerciseSkillCallback ( e ) end event . register ( \"exerciseSkill\" , exerciseSkillCallback ) Tip This event can be filtered based on the skill event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"exerciseSkill"},{"location":"events/exerciseSkill/#event-data","text":"progress (number): The amount of experience that skill is gaining. Note that experience is not on a scale of 1 to 100. This value is modifiable. skill (number): The ID of the skill that is gaining experience. The IDs used are available in Lua by their indentifier in the tes3.skill namespace. This can be changed to provide experience to a different skill.","title":"Event Data"},{"location":"events/filterBarterMenu/","text":"filterBarterMenu \u2693\ufe0e This event fires when an item in the barter menu is filtered. --- @param e filterBarterMenuEventData local function filterBarterMenuCallback ( e ) end event . register ( \"filterBarterMenu\" , filterBarterMenuCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e item ( tes3item ): Read-only . The item being filtered. itemData ( tes3itemData ): Read-only . The item data for the item being filtered. tile ( tes3inventoryTile ): Read-only . The inventory tile being filtered.","title":"filterBarterMenu"},{"location":"events/filterBarterMenu/#filterbartermenu","text":"This event fires when an item in the barter menu is filtered. --- @param e filterBarterMenuEventData local function filterBarterMenuCallback ( e ) end event . register ( \"filterBarterMenu\" , filterBarterMenuCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"filterBarterMenu"},{"location":"events/filterBarterMenu/#event-data","text":"item ( tes3item ): Read-only . The item being filtered. itemData ( tes3itemData ): Read-only . The item data for the item being filtered. tile ( tes3inventoryTile ): Read-only . The inventory tile being filtered.","title":"Event Data"},{"location":"events/filterContentsMenu/","text":"filterContentsMenu \u2693\ufe0e This event fires when an item in the contents menu is filtered. --- @param e filterContentsMenuEventData local function filterContentsMenuCallback ( e ) end event . register ( \"filterContentsMenu\" , filterContentsMenuCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e item ( tes3item ): Read-only . The item being filtered. itemData ( tes3itemData ): Read-only . The item data for the item being filtered. tile ( tes3inventoryTile ): Read-only . The inventory tile being filtered.","title":"filterContentsMenu"},{"location":"events/filterContentsMenu/#filtercontentsmenu","text":"This event fires when an item in the contents menu is filtered. --- @param e filterContentsMenuEventData local function filterContentsMenuCallback ( e ) end event . register ( \"filterContentsMenu\" , filterContentsMenuCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"filterContentsMenu"},{"location":"events/filterContentsMenu/#event-data","text":"item ( tes3item ): Read-only . The item being filtered. itemData ( tes3itemData ): Read-only . The item data for the item being filtered. tile ( tes3inventoryTile ): Read-only . The inventory tile being filtered.","title":"Event Data"},{"location":"events/filterInventory/","text":"filterInventory \u2693\ufe0e This event fires when an item in the inventory is filtered. --- @param e filterInventoryEventData local function filterInventoryCallback ( e ) end event . register ( \"filterInventory\" , filterInventoryCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e item ( tes3item ): Read-only . The item being filtered. itemData ( tes3itemData ): Read-only . The item data for the item being filtered. tile ( tes3inventoryTile ): Read-only . The inventory tile being filtered.","title":"filterInventory"},{"location":"events/filterInventory/#filterinventory","text":"This event fires when an item in the inventory is filtered. --- @param e filterInventoryEventData local function filterInventoryCallback ( e ) end event . register ( \"filterInventory\" , filterInventoryCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"filterInventory"},{"location":"events/filterInventory/#event-data","text":"item ( tes3item ): Read-only . The item being filtered. itemData ( tes3itemData ): Read-only . The item data for the item being filtered. tile ( tes3inventoryTile ): Read-only . The inventory tile being filtered.","title":"Event Data"},{"location":"events/filterInventorySelect/","text":"filterInventorySelect \u2693\ufe0e This event fires when an inventory filter has been selected for an item. --- @param e filterInventorySelectEventData local function filterInventorySelectCallback ( e ) end event . register ( \"filterInventorySelect\" , filterInventorySelectCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e item ( tes3item ): Read-only . The item being filtered. itemData ( tes3itemData ): Read-only . The item data for the item being filtered. type (string): Read-only . The inventory filter type.","title":"filterInventorySelect"},{"location":"events/filterInventorySelect/#filterinventoryselect","text":"This event fires when an inventory filter has been selected for an item. --- @param e filterInventorySelectEventData local function filterInventorySelectCallback ( e ) end event . register ( \"filterInventorySelect\" , filterInventorySelectCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"filterInventorySelect"},{"location":"events/filterInventorySelect/#event-data","text":"item ( tes3item ): Read-only . The item being filtered. itemData ( tes3itemData ): Read-only . The item data for the item being filtered. type (string): Read-only . The inventory filter type.","title":"Event Data"},{"location":"events/filterSoulGemTarget/","text":"filterSoulGemTarget \u2693\ufe0e This event fires when a soul gem target is filtered --- @param e filterSoulGemTargetEventData local function filterSoulGemTargetCallback ( e ) end event . register ( \"filterSoulGemTarget\" , filterSoulGemTargetCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e filter (boolean): Setting this to false or nil will prevent the mobile 's soul to end up in the soulGem . Setting this to true will make the opposite. mobile ( tes3mobileActor ): Read-only . The mobile actor whose soul is to be soultrapped. reference ( tes3reference ): Read-only . The reference. soulGem ( tes3misc ): Read-only . The soul gem object. Examples \u2693\ufe0e Example: Example local function onInitialized () tes3 . addSoulGem ({ item = \"vivec_soul_container\" }) end event . register ( \"initialized\" , onInitialized ) local function onFilterSoulGemTarget ( e ) -- Make it so Vivec can only be trapped by a special container. if ( e . reference . baseObject . id : lower () == \"vivec\" ) then return e . soulGem . id == \"vivec_soul_container\" end end event . register ( \"filterSoulGemTarget\" , onFilterSoulGemTarget )","title":"filterSoulGemTarget"},{"location":"events/filterSoulGemTarget/#filtersoulgemtarget","text":"This event fires when a soul gem target is filtered --- @param e filterSoulGemTargetEventData local function filterSoulGemTargetCallback ( e ) end event . register ( \"filterSoulGemTarget\" , filterSoulGemTargetCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"filterSoulGemTarget"},{"location":"events/filterSoulGemTarget/#event-data","text":"filter (boolean): Setting this to false or nil will prevent the mobile 's soul to end up in the soulGem . Setting this to true will make the opposite. mobile ( tes3mobileActor ): Read-only . The mobile actor whose soul is to be soultrapped. reference ( tes3reference ): Read-only . The reference. soulGem ( tes3misc ): Read-only . The soul gem object.","title":"Event Data"},{"location":"events/filterSoulGemTarget/#examples","text":"Example: Example local function onInitialized () tes3 . addSoulGem ({ item = \"vivec_soul_container\" }) end event . register ( \"initialized\" , onInitialized ) local function onFilterSoulGemTarget ( e ) -- Make it so Vivec can only be trapped by a special container. if ( e . reference . baseObject . id : lower () == \"vivec\" ) then return e . soulGem . id == \"vivec_soul_container\" end end event . register ( \"filterSoulGemTarget\" , onFilterSoulGemTarget )","title":"Examples"},{"location":"events/infoFilter/","text":"infoFilter \u2693\ufe0e This event fires when a dialogue info object is filtered. --- @param e infoFilterEventData local function infoFilterCallback ( e ) end event . register ( \"infoFilter\" , infoFilterCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e actor ( tes3object ): Read-only . The actor. dialogue ( tes3dialogue ): Read-only . The dialogue object. info ( tes3dialogueInfo ): Read-only . The dialogue info object. passes (boolean): Read-only . Indicates if the filter passes. reference ( tes3reference ): Read-only . The reference. source (number): Read-only . The source.","title":"infoFilter"},{"location":"events/infoFilter/#infofilter","text":"This event fires when a dialogue info object is filtered. --- @param e infoFilterEventData local function infoFilterCallback ( e ) end event . register ( \"infoFilter\" , infoFilterCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"infoFilter"},{"location":"events/infoFilter/#event-data","text":"actor ( tes3object ): Read-only . The actor. dialogue ( tes3dialogue ): Read-only . The dialogue object. info ( tes3dialogueInfo ): Read-only . The dialogue info object. passes (boolean): Read-only . Indicates if the filter passes. reference ( tes3reference ): Read-only . The reference. source (number): Read-only . The source.","title":"Event Data"},{"location":"events/infoGetText/","text":"infoGetText \u2693\ufe0e This event fires when a dialogue info object text is retrieved. --- @param e infoGetTextEventData local function infoGetTextCallback ( e ) end event . register ( \"infoGetText\" , infoGetTextCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e info ( tes3dialogueInfo ): Read-only . The dialogue info object. loadOriginalText (method): Loads the original text for the info from the game files, bypassing this event.","title":"infoGetText"},{"location":"events/infoGetText/#infogettext","text":"This event fires when a dialogue info object text is retrieved. --- @param e infoGetTextEventData local function infoGetTextCallback ( e ) end event . register ( \"infoGetText\" , infoGetTextCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"infoGetText"},{"location":"events/infoGetText/#event-data","text":"info ( tes3dialogueInfo ): Read-only . The dialogue info object. loadOriginalText (method): Loads the original text for the info from the game files, bypassing this event.","title":"Event Data"},{"location":"events/infoLinkResolve/","text":"infoLinkResolve \u2693\ufe0e This event fires when a dialogue hyperlink is being resolved to a topic, during UI layout (not on link activation). --- @param e infoLinkResolveEventData local function infoLinkResolveCallback ( e ) end event . register ( \"infoLinkResolve\" , infoLinkResolveCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e topic (string): The topic that activates when this hyperlink is clicked. Initially set to the link text. Set this value to change the target topic.","title":"infoLinkResolve"},{"location":"events/infoLinkResolve/#infolinkresolve","text":"This event fires when a dialogue hyperlink is being resolved to a topic, during UI layout (not on link activation). --- @param e infoLinkResolveEventData local function infoLinkResolveCallback ( e ) end event . register ( \"infoLinkResolve\" , infoLinkResolveCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"infoLinkResolve"},{"location":"events/infoLinkResolve/#event-data","text":"topic (string): The topic that activates when this hyperlink is clicked. Initially set to the link text. Set this value to change the target topic.","title":"Event Data"},{"location":"events/infoResponse/","text":"infoResponse \u2693\ufe0e This event fires when a dialogue response is triggered. --- @param e infoResponseEventData local function infoResponseCallback ( e ) end event . register ( \"infoResponse\" , infoResponseCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e command (string): Read-only . The command. dialogue ( tes3dialogue ): Read-only . The dialogue object. info ( tes3dialogueInfo ): Read-only . The dialogue info object. reference ( tes3reference ): Read-only . The reference. variables (tes3scriptVariables): Read-only . The script variables.","title":"infoResponse"},{"location":"events/infoResponse/#inforesponse","text":"This event fires when a dialogue response is triggered. --- @param e infoResponseEventData local function infoResponseCallback ( e ) end event . register ( \"infoResponse\" , infoResponseCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"infoResponse"},{"location":"events/infoResponse/#event-data","text":"command (string): Read-only . The command. dialogue ( tes3dialogue ): Read-only . The dialogue object. info ( tes3dialogueInfo ): Read-only . The dialogue info object. reference ( tes3reference ): Read-only . The reference. variables (tes3scriptVariables): Read-only . The script variables.","title":"Event Data"},{"location":"events/initialized/","text":"initialized \u2693\ufe0e The initialized event fires when game code has finished initializing, and all .esm and .esp files have been loaded. --- @param e initializedEventData local function initializedCallback ( e ) end event . register ( \"initialized\" , initializedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"initialized"},{"location":"events/initialized/#initialized","text":"The initialized event fires when game code has finished initializing, and all .esm and .esp files have been loaded. --- @param e initializedEventData local function initializedCallback ( e ) end event . register ( \"initialized\" , initializedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"initialized"},{"location":"events/isGuard/","text":"isGuard \u2693\ufe0e The isGuard event triggers whenever the game engine checks if an NPC object is a guard. The guard status can be modified. This alone will not make an NPC behave like a guard, though. --- @param e isGuardEventData local function isGuardCallback ( e ) end event . register ( \"isGuard\" , isGuardCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e isGuard (boolean): The previously calculated guard status. npc ( tes3npc ): Read-only . The NPC that the guard status is being checked for.","title":"isGuard"},{"location":"events/isGuard/#isguard","text":"The isGuard event triggers whenever the game engine checks if an NPC object is a guard. The guard status can be modified. This alone will not make an NPC behave like a guard, though. --- @param e isGuardEventData local function isGuardCallback ( e ) end event . register ( \"isGuard\" , isGuardCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"isGuard"},{"location":"events/isGuard/#event-data","text":"isGuard (boolean): The previously calculated guard status. npc ( tes3npc ): Read-only . The NPC that the guard status is being checked for.","title":"Event Data"},{"location":"events/itemDropped/","text":"itemDropped \u2693\ufe0e This event fires when an item is dropped. --- @param e itemDroppedEventData local function itemDroppedCallback ( e ) end event . register ( \"itemDropped\" , itemDroppedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e reference ( tes3reference ): Read-only . The reference.","title":"itemDropped"},{"location":"events/itemDropped/#itemdropped","text":"This event fires when an item is dropped. --- @param e itemDroppedEventData local function itemDroppedCallback ( e ) end event . register ( \"itemDropped\" , itemDroppedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"itemDropped"},{"location":"events/itemDropped/#event-data","text":"reference ( tes3reference ): Read-only . The reference.","title":"Event Data"},{"location":"events/itemTileUpdated/","text":"itemTileUpdated \u2693\ufe0e This event is fired whenever an inventory item tile is updated, as well as when the tile is created. This can be used to easily manipulate or extend the appearance of inventory tiles. --- @param e itemTileUpdatedEventData local function itemTileUpdatedCallback ( e ) end event . register ( \"itemTileUpdated\" , itemTileUpdatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e element ( tes3uiElement ): Read-only . The UI element that the tile is displayed on. item ( tes3item ): Read-only . The tile's item. itemData ( tes3itemData ): Read-only . The tile's item data, if any. menu ( tes3uiElement ): Read-only . The root menu of the tile. This will typically be the MenuInventory, MenuContents, or MenuBarter menus. tile ( tes3inventoryTile ): Read-only . The tile data itself. This typically contains references to all the other event fields, among other tile-specific information.","title":"itemTileUpdated"},{"location":"events/itemTileUpdated/#itemtileupdated","text":"This event is fired whenever an inventory item tile is updated, as well as when the tile is created. This can be used to easily manipulate or extend the appearance of inventory tiles. --- @param e itemTileUpdatedEventData local function itemTileUpdatedCallback ( e ) end event . register ( \"itemTileUpdated\" , itemTileUpdatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"itemTileUpdated"},{"location":"events/itemTileUpdated/#event-data","text":"element ( tes3uiElement ): Read-only . The UI element that the tile is displayed on. item ( tes3item ): Read-only . The tile's item. itemData ( tes3itemData ): Read-only . The tile's item data, if any. menu ( tes3uiElement ): Read-only . The root menu of the tile. This will typically be the MenuInventory, MenuContents, or MenuBarter menus. tile ( tes3inventoryTile ): Read-only . The tile data itself. This typically contains references to all the other event fields, among other tile-specific information.","title":"Event Data"},{"location":"events/journal/","text":"journal \u2693\ufe0e The journal event is invoked when a journal state progresses. --- @param e journalEventData local function journalCallback ( e ) end event . register ( \"journal\" , journalCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e index (number): Read-only . The new index of the journal state. info ( tes3dialogueInfo ): Read-only . The info for the newly set journal index. new (boolean): Read-only . If true, the journal is newly added to the player. This effectively means that index has increased past 0. previousIndex (number): Read-only . The previous index of the journal state. previousInfo ( tes3dialogueInfo , nil): Read-only . The info for the previously set journal index. If the journal entry is new ly added, this will be nil . topic ( tes3dialogue ): Read-only . The topic that dictates the journal entry.","title":"journal"},{"location":"events/journal/#journal","text":"The journal event is invoked when a journal state progresses. --- @param e journalEventData local function journalCallback ( e ) end event . register ( \"journal\" , journalCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"journal"},{"location":"events/journal/#event-data","text":"index (number): Read-only . The new index of the journal state. info ( tes3dialogueInfo ): Read-only . The info for the newly set journal index. new (boolean): Read-only . If true, the journal is newly added to the player. This effectively means that index has increased past 0. previousIndex (number): Read-only . The previous index of the journal state. previousInfo ( tes3dialogueInfo , nil): Read-only . The info for the previously set journal index. If the journal entry is new ly added, this will be nil . topic ( tes3dialogue ): Read-only . The topic that dictates the journal entry.","title":"Event Data"},{"location":"events/key/","text":"key \u2693\ufe0e The key event fires when a key up or key down input is detected. It is preferred that the keyDown and keyUp events are used instead. --- @param e keyEventData local function keyCallback ( e ) end event . register ( \"key\" , keyCallback ) Tip This event can be filtered based on the keyCode event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e isAltDown (number): Read-only . True if either alt key is held. isControlDown (number): Read-only . True if either control key is held. isShiftDown (number): Read-only . True if either shift key is held. isSuperDown (number): Read-only . True if super (Windows key) is held. keyCode (number): Read-only . The scan code of the key that raised the event. pressed (boolean): Read-only . True if this is a key down event, false for a key up event. Examples \u2693\ufe0e Example: Show a Message when Ctrl-Z is Pressed function myOnKeyCallback ( e ) if ( e . pressed and e . isControlDown ) then tes3 . messageBox ({ message = \"You pressed Ctrl-Z, but you can't undo all your mistakes.\" }) end end -- Filter by the scan code to get Z key presses only. event . register ( \"key\" , myOnKeyCallback , { filter = tes3 . scanCode . z } )","title":"key"},{"location":"events/key/#key","text":"The key event fires when a key up or key down input is detected. It is preferred that the keyDown and keyUp events are used instead. --- @param e keyEventData local function keyCallback ( e ) end event . register ( \"key\" , keyCallback ) Tip This event can be filtered based on the keyCode event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"key"},{"location":"events/key/#event-data","text":"isAltDown (number): Read-only . True if either alt key is held. isControlDown (number): Read-only . True if either control key is held. isShiftDown (number): Read-only . True if either shift key is held. isSuperDown (number): Read-only . True if super (Windows key) is held. keyCode (number): Read-only . The scan code of the key that raised the event. pressed (boolean): Read-only . True if this is a key down event, false for a key up event.","title":"Event Data"},{"location":"events/key/#examples","text":"Example: Show a Message when Ctrl-Z is Pressed function myOnKeyCallback ( e ) if ( e . pressed and e . isControlDown ) then tes3 . messageBox ({ message = \"You pressed Ctrl-Z, but you can't undo all your mistakes.\" }) end end -- Filter by the scan code to get Z key presses only. event . register ( \"key\" , myOnKeyCallback , { filter = tes3 . scanCode . z } )","title":"Examples"},{"location":"events/keyDown/","text":"keyDown \u2693\ufe0e The key event fires when a key is pressed. --- @param e keyDownEventData local function keyDownCallback ( e ) end event . register ( \"keyDown\" , keyDownCallback ) Tip This event can be filtered based on the keyCode event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e isAltDown (number): Read-only . True if either alt key is held. isControlDown (number): Read-only . True if either control key is held. isShiftDown (number): Read-only . True if either shift key is held. isSuperDown (number): Read-only . True if super (Windows key) is held. keyCode (number): Read-only . The scan code of the key that raised the event. Examples \u2693\ufe0e Example: Show a Message when Ctrl-Z is Pressed function myOnKeyCallback ( e ) if ( e . isControlDown ) then tes3 . messageBox ({ message = \"You pressed Ctrl-Z, but you can't undo all your mistakes.\" }) end end -- Filter by the scan code to get Z key presses only. event . register ( \"key\" , myOnKeyCallback , { filter = tes3 . scanCode . z } )","title":"keyDown"},{"location":"events/keyDown/#keydown","text":"The key event fires when a key is pressed. --- @param e keyDownEventData local function keyDownCallback ( e ) end event . register ( \"keyDown\" , keyDownCallback ) Tip This event can be filtered based on the keyCode event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"keyDown"},{"location":"events/keyDown/#event-data","text":"isAltDown (number): Read-only . True if either alt key is held. isControlDown (number): Read-only . True if either control key is held. isShiftDown (number): Read-only . True if either shift key is held. isSuperDown (number): Read-only . True if super (Windows key) is held. keyCode (number): Read-only . The scan code of the key that raised the event.","title":"Event Data"},{"location":"events/keyDown/#examples","text":"Example: Show a Message when Ctrl-Z is Pressed function myOnKeyCallback ( e ) if ( e . isControlDown ) then tes3 . messageBox ({ message = \"You pressed Ctrl-Z, but you can't undo all your mistakes.\" }) end end -- Filter by the scan code to get Z key presses only. event . register ( \"key\" , myOnKeyCallback , { filter = tes3 . scanCode . z } )","title":"Examples"},{"location":"events/keyUp/","text":"keyUp \u2693\ufe0e The key event fires when a key is released. --- @param e keyUpEventData local function keyUpCallback ( e ) end event . register ( \"keyUp\" , keyUpCallback ) Tip This event can be filtered based on the keyCode event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e isAltDown (number): Read-only . True if either alt key is held. isControlDown (number): Read-only . True if either control key is held. isShiftDown (number): Read-only . True if either shift key is held. isSuperDown (number): Read-only . True if super (Windows key) is held. keyCode (number): Read-only . The scan code of the key that raised the event.","title":"keyUp"},{"location":"events/keyUp/#keyup","text":"The key event fires when a key is released. --- @param e keyUpEventData local function keyUpCallback ( e ) end event . register ( \"keyUp\" , keyUpCallback ) Tip This event can be filtered based on the keyCode event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"keyUp"},{"location":"events/keyUp/#event-data","text":"isAltDown (number): Read-only . True if either alt key is held. isControlDown (number): Read-only . True if either control key is held. isShiftDown (number): Read-only . True if either shift key is held. isSuperDown (number): Read-only . True if super (Windows key) is held. keyCode (number): Read-only . The scan code of the key that raised the event.","title":"Event Data"},{"location":"events/levelUp/","text":"levelUp \u2693\ufe0e This even is called whenever the player successfully finishes leveling up. --- @param e levelUpEventData local function levelUpCallback ( e ) end event . register ( \"levelUp\" , levelUpCallback ) Tip This event can be filtered based on the level event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e level (number): Read-only . The new level obtained.","title":"levelUp"},{"location":"events/levelUp/#levelup","text":"This even is called whenever the player successfully finishes leveling up. --- @param e levelUpEventData local function levelUpCallback ( e ) end event . register ( \"levelUp\" , levelUpCallback ) Tip This event can be filtered based on the level event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"levelUp"},{"location":"events/levelUp/#event-data","text":"level (number): Read-only . The new level obtained.","title":"Event Data"},{"location":"events/leveledCreaturePicked/","text":"leveledCreaturePicked \u2693\ufe0e This event is called after any leveled creature list is resolved. The event may be filtered by its list, and its pick can be overwritten. While this event allows for customization, the leveled list may be altered directly as well. --- @param e leveledCreaturePickedEventData local function leveledCreaturePickedCallback ( e ) end event . register ( \"leveledCreaturePicked\" , leveledCreaturePickedCallback ) Tip This event can be filtered based on the list event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e cell ( tes3cell , nil): The cell associated with the pick, if any. This may be the spawner 's cell, the temporarily created empty cell, or the cell the player's sleep was interrupted in. list ( tes3leveledCreature ): Read-only . The list responsible for creating a pick. pick ( tes3creature , nil): The result of the pick by vanilla mechanism. This can be modified to change the result to something else. source (string): The context that the creature is being spawned in. Valid values include: \"reference\" for when spawned from a placed leveled spawn; \"emptyCell\" for when the player is exploring empty, undefined exterior cells; \"sleepInterrupt\" for when a random creature is chosen to attack the player when resting; and \"script\" for otherwise scripted picking. spawner ( tes3reference , nil): If spawned from a placed leveled creature reference, this is a handle to the creating reference.","title":"leveledCreaturePicked"},{"location":"events/leveledCreaturePicked/#leveledcreaturepicked","text":"This event is called after any leveled creature list is resolved. The event may be filtered by its list, and its pick can be overwritten. While this event allows for customization, the leveled list may be altered directly as well. --- @param e leveledCreaturePickedEventData local function leveledCreaturePickedCallback ( e ) end event . register ( \"leveledCreaturePicked\" , leveledCreaturePickedCallback ) Tip This event can be filtered based on the list event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"leveledCreaturePicked"},{"location":"events/leveledCreaturePicked/#event-data","text":"cell ( tes3cell , nil): The cell associated with the pick, if any. This may be the spawner 's cell, the temporarily created empty cell, or the cell the player's sleep was interrupted in. list ( tes3leveledCreature ): Read-only . The list responsible for creating a pick. pick ( tes3creature , nil): The result of the pick by vanilla mechanism. This can be modified to change the result to something else. source (string): The context that the creature is being spawned in. Valid values include: \"reference\" for when spawned from a placed leveled spawn; \"emptyCell\" for when the player is exploring empty, undefined exterior cells; \"sleepInterrupt\" for when a random creature is chosen to attack the player when resting; and \"script\" for otherwise scripted picking. spawner ( tes3reference , nil): If spawned from a placed leveled creature reference, this is a handle to the creating reference.","title":"Event Data"},{"location":"events/leveledItemPicked/","text":"leveledItemPicked \u2693\ufe0e This event is called after any leveled item list is resolved. --- @param e leveledItemPickedEventData local function leveledItemPickedCallback ( e ) end event . register ( \"leveledItemPicked\" , leveledItemPickedCallback ) Tip This event can be filtered based on the list event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e list ( tes3leveledItem ): Read-only . The list responsible for creating a pick. pick ( tes3item ): The result of the pick by vanilla mechanism. spawner ( tes3reference , nil): The reference for the inventory that the item is being picked in. In many cases this may be nil .","title":"leveledItemPicked"},{"location":"events/leveledItemPicked/#leveleditempicked","text":"This event is called after any leveled item list is resolved. --- @param e leveledItemPickedEventData local function leveledItemPickedCallback ( e ) end event . register ( \"leveledItemPicked\" , leveledItemPickedCallback ) Tip This event can be filtered based on the list event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"leveledItemPicked"},{"location":"events/leveledItemPicked/#event-data","text":"list ( tes3leveledItem ): Read-only . The list responsible for creating a pick. pick ( tes3item ): The result of the pick by vanilla mechanism. spawner ( tes3reference , nil): The reference for the inventory that the item is being picked in. In many cases this may be nil .","title":"Event Data"},{"location":"events/load/","text":"load \u2693\ufe0e The load event fires when the game is about to load. This event allows scripts to block loading. --- @param e loadEventData local function loadCallback ( e ) end event . register ( \"load\" , loadCallback ) Tip This event can be filtered based on the filename event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e filename (string): The filename of the save we want to load, not including file extension. Can be modified to redirect to another save. newGame (boolean): Read-only . If true, a new game is being started. quickload (boolean): Read-only . If true, the load came from the quickload system.","title":"load"},{"location":"events/load/#load","text":"The load event fires when the game is about to load. This event allows scripts to block loading. --- @param e loadEventData local function loadCallback ( e ) end event . register ( \"load\" , loadCallback ) Tip This event can be filtered based on the filename event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"load"},{"location":"events/load/#event-data","text":"filename (string): The filename of the save we want to load, not including file extension. Can be modified to redirect to another save. newGame (boolean): Read-only . If true, a new game is being started. quickload (boolean): Read-only . If true, the load came from the quickload system.","title":"Event Data"},{"location":"events/loaded/","text":"loaded \u2693\ufe0e The loaded event fires after the game has been successfully loaded. This event is preceded by the load event. --- @param e loadedEventData local function loadedCallback ( e ) end event . register ( \"loaded\" , loadedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e filename (string): Read-only . The filename of the save that was loaded, not including file extension. newGame (boolean): Read-only . If true, a new game was started. quickload (boolean): Read-only . If true, the load came from the quickload system.","title":"loaded"},{"location":"events/loaded/#loaded","text":"The loaded event fires after the game has been successfully loaded. This event is preceded by the load event. --- @param e loadedEventData local function loadedCallback ( e ) end event . register ( \"loaded\" , loadedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"loaded"},{"location":"events/loaded/#event-data","text":"filename (string): Read-only . The filename of the save that was loaded, not including file extension. newGame (boolean): Read-only . If true, a new game was started. quickload (boolean): Read-only . If true, the load came from the quickload system.","title":"Event Data"},{"location":"events/lockPick/","text":"lockPick \u2693\ufe0e This event fires when a lock is being picked. --- @param e lockPickEventData local function lockPickCallback ( e ) end event . register ( \"lockPick\" , lockPickCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e chance (number): Read-only . The chance the lockpick will be successful. lockData (tes3lockAttachmentNode): Read-only . The lock data of the reference. lockPresent (boolean): Read-only . Indicates if a lock is present on the reference. picker ( tes3mobileNPC ): Read-only . The Mobile NPC doing the disarming. reference ( tes3reference ): Read-only . The reference that triggered the event (container, door, etc.). tool ( tes3item ): Read-only . The item the picker is using to pick the lock. toolItemData ( tes3itemData ): Read-only . The item data for the tool.","title":"lockPick"},{"location":"events/lockPick/#lockpick","text":"This event fires when a lock is being picked. --- @param e lockPickEventData local function lockPickCallback ( e ) end event . register ( \"lockPick\" , lockPickCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"lockPick"},{"location":"events/lockPick/#event-data","text":"chance (number): Read-only . The chance the lockpick will be successful. lockData (tes3lockAttachmentNode): Read-only . The lock data of the reference. lockPresent (boolean): Read-only . Indicates if a lock is present on the reference. picker ( tes3mobileNPC ): Read-only . The Mobile NPC doing the disarming. reference ( tes3reference ): Read-only . The reference that triggered the event (container, door, etc.). tool ( tes3item ): Read-only . The item the picker is using to pick the lock. toolItemData ( tes3itemData ): Read-only . The item data for the tool.","title":"Event Data"},{"location":"events/magicCasted/","text":"magicCasted \u2693\ufe0e This event is triggered when any spell or enchant is cast successfully, or when any alchemy item is used. This includes spells cast via scripts. For spells, this occurs at the end of the casting animation. For spells and enchants, it is just after the magic projectile has been constructed. --- @param e magicCastedEventData local function magicCastedCallback ( e ) end event . register ( \"magicCasted\" , magicCastedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e caster ( tes3reference ): Read-only . The caster of the spell. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches caster.","title":"magicCasted"},{"location":"events/magicCasted/#magiccasted","text":"This event is triggered when any spell or enchant is cast successfully, or when any alchemy item is used. This includes spells cast via scripts. For spells, this occurs at the end of the casting animation. For spells and enchants, it is just after the magic projectile has been constructed. --- @param e magicCastedEventData local function magicCastedCallback ( e ) end event . register ( \"magicCasted\" , magicCastedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"magicCasted"},{"location":"events/magicCasted/#event-data","text":"caster ( tes3reference ): Read-only . The caster of the spell. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches caster.","title":"Event Data"},{"location":"events/magicEffectsResolved/","text":"magicEffectsResolved \u2693\ufe0e This event triggers after all magic effect links have been resolved. This event is used to add new spell effect by using tes3.addSpellEffect() function. For examples of this event in practice see tes3.addMagicEffect() example. --- @param e magicEffectsResolvedEventData local function magicEffectsResolvedCallback ( e ) end event . register ( \"magicEffectsResolved\" , magicEffectsResolvedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"magicEffectsResolved"},{"location":"events/magicEffectsResolved/#magiceffectsresolved","text":"This event triggers after all magic effect links have been resolved. This event is used to add new spell effect by using tes3.addSpellEffect() function. For examples of this event in practice see tes3.addMagicEffect() example. --- @param e magicEffectsResolvedEventData local function magicEffectsResolvedCallback ( e ) end event . register ( \"magicEffectsResolved\" , magicEffectsResolvedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"magicEffectsResolved"},{"location":"events/menuEnter/","text":"menuEnter \u2693\ufe0e The menuEnter event fires when the player enters menu mode. --- @param e menuEnterEventData local function menuEnterCallback ( e ) end event . register ( \"menuEnter\" , menuEnterCallback ) Tip This event can be filtered based on the menu.name event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e menu ( tes3uiElement ): Read-only . The new top-level menu. menuMode (boolean): Read-only . Always true for this event. This parameter is only useful when registering the same callback for menuEnter and menuExit events.","title":"menuEnter"},{"location":"events/menuEnter/#menuenter","text":"The menuEnter event fires when the player enters menu mode. --- @param e menuEnterEventData local function menuEnterCallback ( e ) end event . register ( \"menuEnter\" , menuEnterCallback ) Tip This event can be filtered based on the menu.name event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"menuEnter"},{"location":"events/menuEnter/#event-data","text":"menu ( tes3uiElement ): Read-only . The new top-level menu. menuMode (boolean): Read-only . Always true for this event. This parameter is only useful when registering the same callback for menuEnter and menuExit events.","title":"Event Data"},{"location":"events/menuExit/","text":"menuExit \u2693\ufe0e The menuExit event fires when the player leaves menu mode. --- @param e menuExitEventData local function menuExitCallback ( e ) end event . register ( \"menuExit\" , menuExitCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e menuMode (boolean): Read-only . Always true for this event. This parameter is only useful when registering the same callback for menuEnter and menuExit events.","title":"menuExit"},{"location":"events/menuExit/#menuexit","text":"The menuExit event fires when the player leaves menu mode. --- @param e menuExitEventData local function menuExitCallback ( e ) end event . register ( \"menuExit\" , menuExitCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"menuExit"},{"location":"events/menuExit/#event-data","text":"menuMode (boolean): Read-only . Always true for this event. This parameter is only useful when registering the same callback for menuEnter and menuExit events.","title":"Event Data"},{"location":"events/meshLoaded/","text":"meshLoaded \u2693\ufe0e This event is triggered when a mesh is loaded. --- @param e meshLoadedEventData local function meshLoadedCallback ( e ) end event . register ( \"meshLoaded\" , meshLoadedCallback ) Tip This event can be filtered based on the path event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e node ( niAVObject ): The niAVObject-derived object of the loaded mesh. path (string): The path to the mesh, relative to Data Files\\Meshes","title":"meshLoaded"},{"location":"events/meshLoaded/#meshloaded","text":"This event is triggered when a mesh is loaded. --- @param e meshLoadedEventData local function meshLoadedCallback ( e ) end event . register ( \"meshLoaded\" , meshLoadedCallback ) Tip This event can be filtered based on the path event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"meshLoaded"},{"location":"events/meshLoaded/#event-data","text":"node ( niAVObject ): The niAVObject-derived object of the loaded mesh. path (string): The path to the mesh, relative to Data Files\\Meshes","title":"Event Data"},{"location":"events/mobileActivated/","text":"mobileActivated \u2693\ufe0e This event is called when a Mobile Actor is activated. This may be the first time that a given Reference has an associated Mobile Actor attached to it. Typically this happens when transitioning through cells. When the player enters a cell, the mobileActivated event will fire for each new actor. When the player leaves the cell, the mobileDeactivated event is called. --- @param e mobileActivatedEventData local function mobileActivatedCallback ( e ) end event . register ( \"mobileActivated\" , mobileActivatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The activated mobile. reference ( tes3reference ): Read-only . The reference that the mobile has been activated for.","title":"mobileActivated"},{"location":"events/mobileActivated/#mobileactivated","text":"This event is called when a Mobile Actor is activated. This may be the first time that a given Reference has an associated Mobile Actor attached to it. Typically this happens when transitioning through cells. When the player enters a cell, the mobileActivated event will fire for each new actor. When the player leaves the cell, the mobileDeactivated event is called. --- @param e mobileActivatedEventData local function mobileActivatedCallback ( e ) end event . register ( \"mobileActivated\" , mobileActivatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"mobileActivated"},{"location":"events/mobileActivated/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The activated mobile. reference ( tes3reference ): Read-only . The reference that the mobile has been activated for.","title":"Event Data"},{"location":"events/mobileDeactivated/","text":"mobileDeactivated \u2693\ufe0e This event is called when a Mobile Actor is deactivated. Typically this happens when transitioning through cells. When the player enters a cell, the mobileActivated event will fire for each new actor. When the player leaves the cell, the mobileDeactivated event is called. --- @param e mobileDeactivatedEventData local function mobileDeactivatedCallback ( e ) end event . register ( \"mobileDeactivated\" , mobileDeactivatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e reference ( tes3reference ): Read-only . The reference that the mobile has been deactivated for.","title":"mobileDeactivated"},{"location":"events/mobileDeactivated/#mobiledeactivated","text":"This event is called when a Mobile Actor is deactivated. Typically this happens when transitioning through cells. When the player enters a cell, the mobileActivated event will fire for each new actor. When the player leaves the cell, the mobileDeactivated event is called. --- @param e mobileDeactivatedEventData local function mobileDeactivatedCallback ( e ) end event . register ( \"mobileDeactivated\" , mobileDeactivatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"mobileDeactivated"},{"location":"events/mobileDeactivated/#event-data","text":"reference ( tes3reference ): Read-only . The reference that the mobile has been deactivated for.","title":"Event Data"},{"location":"events/mouseAxis/","text":"mouseAxis \u2693\ufe0e The mouseAxis event fires when the mouse is moved, providing deltaX and deltaY values. --- @param e mouseAxisEventData local function mouseAxisCallback ( e ) end event . register ( \"mouseAxis\" , mouseAxisCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e deltaX (number): Read-only . The difference in horizontal mouse position from the previous frame. deltaY (number): Read-only . The difference in vertical mouse position from the previous frame. isAltDown (number): Read-only . True if alt is held. isControlDown (number): Read-only . True if control is held. isSuperDown (number): Read-only . True if super (Windows key) is held.","title":"mouseAxis"},{"location":"events/mouseAxis/#mouseaxis","text":"The mouseAxis event fires when the mouse is moved, providing deltaX and deltaY values. --- @param e mouseAxisEventData local function mouseAxisCallback ( e ) end event . register ( \"mouseAxis\" , mouseAxisCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"mouseAxis"},{"location":"events/mouseAxis/#event-data","text":"deltaX (number): Read-only . The difference in horizontal mouse position from the previous frame. deltaY (number): Read-only . The difference in vertical mouse position from the previous frame. isAltDown (number): Read-only . True if alt is held. isControlDown (number): Read-only . True if control is held. isSuperDown (number): Read-only . True if super (Windows key) is held.","title":"Event Data"},{"location":"events/mouseButtonDown/","text":"mouseButtonDown \u2693\ufe0e The mouseButtonDown event fires when a button on the mouse is pressed. --- @param e mouseButtonDownEventData local function mouseButtonDownCallback ( e ) end event . register ( \"mouseButtonDown\" , mouseButtonDownCallback ) Tip This event can be filtered based on the button event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e button (number): Read-only . The button index that was pressed. isAltDown (number): Read-only . True if alt is held. isControlDown (number): Read-only . True if control is held. isSuperDown (number): Read-only . True if super (Windows key) is held.","title":"mouseButtonDown"},{"location":"events/mouseButtonDown/#mousebuttondown","text":"The mouseButtonDown event fires when a button on the mouse is pressed. --- @param e mouseButtonDownEventData local function mouseButtonDownCallback ( e ) end event . register ( \"mouseButtonDown\" , mouseButtonDownCallback ) Tip This event can be filtered based on the button event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"mouseButtonDown"},{"location":"events/mouseButtonDown/#event-data","text":"button (number): Read-only . The button index that was pressed. isAltDown (number): Read-only . True if alt is held. isControlDown (number): Read-only . True if control is held. isSuperDown (number): Read-only . True if super (Windows key) is held.","title":"Event Data"},{"location":"events/mouseButtonUp/","text":"mouseButtonUp \u2693\ufe0e The mouseButtonDown event fires when a button on the mouse is released. --- @param e mouseButtonUpEventData local function mouseButtonUpCallback ( e ) end event . register ( \"mouseButtonUp\" , mouseButtonUpCallback ) Tip This event can be filtered based on the button event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e button (number): Read-only . The button index that was released. isAltDown (number): Read-only . True if alt is held. isControlDown (number): Read-only . True if control is held. isSuperDown (number): Read-only . True if super (Windows key) is held.","title":"mouseButtonUp"},{"location":"events/mouseButtonUp/#mousebuttonup","text":"The mouseButtonDown event fires when a button on the mouse is released. --- @param e mouseButtonUpEventData local function mouseButtonUpCallback ( e ) end event . register ( \"mouseButtonUp\" , mouseButtonUpCallback ) Tip This event can be filtered based on the button event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"mouseButtonUp"},{"location":"events/mouseButtonUp/#event-data","text":"button (number): Read-only . The button index that was released. isAltDown (number): Read-only . True if alt is held. isControlDown (number): Read-only . True if control is held. isSuperDown (number): Read-only . True if super (Windows key) is held.","title":"Event Data"},{"location":"events/mouseWheel/","text":"mouseWheel \u2693\ufe0e The mouseWheel event fires when the mouse wheel is used, providing a delta value. --- @param e mouseWheelEventData local function mouseWheelCallback ( e ) end event . register ( \"mouseWheel\" , mouseWheelCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e delta (number): Read-only . The direction and strength of the mouse wheel movement. This value is hardware dependent. isAltDown (number): Read-only . True if alt is held. isControlDown (number): Read-only . True if control is held. isSuperDown (number): Read-only . True if super (Windows key) is held.","title":"mouseWheel"},{"location":"events/mouseWheel/#mousewheel","text":"The mouseWheel event fires when the mouse wheel is used, providing a delta value. --- @param e mouseWheelEventData local function mouseWheelCallback ( e ) end event . register ( \"mouseWheel\" , mouseWheelCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"mouseWheel"},{"location":"events/mouseWheel/#event-data","text":"delta (number): Read-only . The direction and strength of the mouse wheel movement. This value is hardware dependent. isAltDown (number): Read-only . True if alt is held. isControlDown (number): Read-only . True if control is held. isSuperDown (number): Read-only . True if super (Windows key) is held.","title":"Event Data"},{"location":"events/musicSelectTrack/","text":"musicSelectTrack \u2693\ufe0e The musicSelectTrack event occurs when new music is needed after a playing music track ends, or the combat situation changes. It allows you to select your own music for the current conditions by setting eventData.music. However, it does not control transitions to combat music, which in the future will be available in another event. --- @param e musicSelectTrackEventData local function musicSelectTrackCallback ( e ) end event . register ( \"musicSelectTrack\" , musicSelectTrackCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e music (string): Optional . If set to the path of a given track (relative to Data Files/music), it will play the given path instead of a random one. situation (number): Read-only . Maps to tes3.musicSituation , indicating combat or non-combat music.","title":"musicSelectTrack"},{"location":"events/musicSelectTrack/#musicselecttrack","text":"The musicSelectTrack event occurs when new music is needed after a playing music track ends, or the combat situation changes. It allows you to select your own music for the current conditions by setting eventData.music. However, it does not control transitions to combat music, which in the future will be available in another event. --- @param e musicSelectTrackEventData local function musicSelectTrackCallback ( e ) end event . register ( \"musicSelectTrack\" , musicSelectTrackCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"musicSelectTrack"},{"location":"events/musicSelectTrack/#event-data","text":"music (string): Optional . If set to the path of a given track (relative to Data Files/music), it will play the given path instead of a random one. situation (number): Read-only . Maps to tes3.musicSituation , indicating combat or non-combat music.","title":"Event Data"},{"location":"events/objectInvalidated/","text":"objectInvalidated \u2693\ufe0e This event is raised when reference is invalidated. This includes being removed from memory. This event can be used to safely remove references from tables. --- @param e objectInvalidatedEventData local function objectInvalidatedCallback ( e ) end event . register ( \"objectInvalidated\" , objectInvalidatedCallback ) Tip This event can be filtered based on the object event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e object ( tes3baseObject ): Read-only . The object being invalidated. Can be a tes3reference.","title":"objectInvalidated"},{"location":"events/objectInvalidated/#objectinvalidated","text":"This event is raised when reference is invalidated. This includes being removed from memory. This event can be used to safely remove references from tables. --- @param e objectInvalidatedEventData local function objectInvalidatedCallback ( e ) end event . register ( \"objectInvalidated\" , objectInvalidatedCallback ) Tip This event can be filtered based on the object event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"objectInvalidated"},{"location":"events/objectInvalidated/#event-data","text":"object ( tes3baseObject ): Read-only . The object being invalidated. Can be a tes3reference.","title":"Event Data"},{"location":"events/playGroup/","text":"playGroup \u2693\ufe0e --- @param e playGroupEventData local function playGroupCallback ( e ) end event . register ( \"playGroup\" , playGroupCallback ) Tip This event can be filtered based on the reference event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e animationData (tes3animationData): flags (number): group (number): index (number): loopCount (number): reference ( tes3reference ):","title":"playGroup"},{"location":"events/playGroup/#playgroup","text":"--- @param e playGroupEventData local function playGroupCallback ( e ) end event . register ( \"playGroup\" , playGroupCallback ) Tip This event can be filtered based on the reference event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"playGroup"},{"location":"events/playGroup/#event-data","text":"animationData (tes3animationData): flags (number): group (number): index (number): loopCount (number): reference ( tes3reference ):","title":"Event Data"},{"location":"events/playItemSound/","text":"playItemSound \u2693\ufe0e --- @param e playItemSoundEventData local function playItemSoundCallback ( e ) end event . register ( \"playItemSound\" , playItemSoundCallback ) Tip This event can be filtered based on the item event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e item ( tes3baseObject ): reference ( tes3reference ): state (number):","title":"playItemSound"},{"location":"events/playItemSound/#playitemsound","text":"--- @param e playItemSoundEventData local function playItemSoundCallback ( e ) end event . register ( \"playItemSound\" , playItemSoundCallback ) Tip This event can be filtered based on the item event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"playItemSound"},{"location":"events/playItemSound/#event-data","text":"item ( tes3baseObject ): reference ( tes3reference ): state (number):","title":"Event Data"},{"location":"events/postInfoResponse/","text":"postInfoResponse \u2693\ufe0e This event fires immediately after a dialogue response is processed. --- @param e postInfoResponseEventData local function postInfoResponseCallback ( e ) end event . register ( \"postInfoResponse\" , postInfoResponseCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e command (string): Read-only . The command. dialogue ( tes3dialogue ): Read-only . The dialogue object. info ( tes3dialogueInfo ): Read-only . The dialogue info object. reference ( tes3reference ): Read-only . The reference. variables (tes3scriptVariables): Read-only . The script variables.","title":"postInfoResponse"},{"location":"events/postInfoResponse/#postinforesponse","text":"This event fires immediately after a dialogue response is processed. --- @param e postInfoResponseEventData local function postInfoResponseCallback ( e ) end event . register ( \"postInfoResponse\" , postInfoResponseCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"postInfoResponse"},{"location":"events/postInfoResponse/#event-data","text":"command (string): Read-only . The command. dialogue ( tes3dialogue ): Read-only . The dialogue object. info ( tes3dialogueInfo ): Read-only . The dialogue info object. reference ( tes3reference ): Read-only . The reference. variables (tes3scriptVariables): Read-only . The script variables.","title":"Event Data"},{"location":"events/potionBrewFailed/","text":"potionBrewFailed \u2693\ufe0e The potionBrewFailed event is raised when the player fails a potion brew attempt. --- @param e potionBrewFailedEventData local function potionBrewFailedCallback ( e ) end event . register ( \"potionBrewFailed\" , potionBrewFailedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e alembic ( tes3apparatus ): Read-only . The alembic apparatus used to create the potion. calcinator ( tes3apparatus ): Read-only . The calcinator apparatus used to create the potion. ingredients (table): Read-only . An array of up to 4 tes3ingredient objects, which were used to create the potion. mortar ( tes3apparatus ): Read-only . The mortar apparatus used to create the potion. retort ( tes3apparatus ): Read-only . The retort apparatus used to create the potion.","title":"potionBrewFailed"},{"location":"events/potionBrewFailed/#potionbrewfailed","text":"The potionBrewFailed event is raised when the player fails a potion brew attempt. --- @param e potionBrewFailedEventData local function potionBrewFailedCallback ( e ) end event . register ( \"potionBrewFailed\" , potionBrewFailedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"potionBrewFailed"},{"location":"events/potionBrewFailed/#event-data","text":"alembic ( tes3apparatus ): Read-only . The alembic apparatus used to create the potion. calcinator ( tes3apparatus ): Read-only . The calcinator apparatus used to create the potion. ingredients (table): Read-only . An array of up to 4 tes3ingredient objects, which were used to create the potion. mortar ( tes3apparatus ): Read-only . The mortar apparatus used to create the potion. retort ( tes3apparatus ): Read-only . The retort apparatus used to create the potion.","title":"Event Data"},{"location":"events/potionBrewSkillCheck/","text":"potionBrewSkillCheck \u2693\ufe0e This event is triggered when the player attempts to brew a potion. It controls both the strength of the potion's effects, and if the brew is successful. These both use the player's stats, so the game combines them into one function. Because the potion effects are not determined yet, the potion data is not available. When using this event, use the example as a template for your own code. --- @param e potionBrewSkillCheckEventData local function potionBrewSkillCheckCallback ( e ) end event . register ( \"potionBrewSkillCheck\" , potionBrewSkillCheckCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e alembic ( tes3apparatus ): Read-only . The alembic apparatus used to create the potion. calcinator ( tes3apparatus ): Read-only . The calcinator apparatus used to create the potion. ingredients (table): Read-only . An array of up to 4 tes3ingredient objects, which were used to create the potion. mortar ( tes3apparatus ): Read-only . The mortar apparatus used to create the potion. potionStrength (number): Can be modified. The strength multiplier used to scale the potion effects. For each different effect, it can modify magnitude, duration, or both. This is initially equal to -1 if the potion failed to brew. retort ( tes3apparatus ): Read-only . The retort apparatus used to create the potion. success (boolean): Can be modified. Whether the brewing is successful. Examples \u2693\ufe0e Example: Vanilla potion skill check function local function brewSkillCheck ( e ) local player = tes3 . mobilePlayer local x = player . alchemy . current + 0.1 * player . intelligence . current + 0.1 * player . luck . current local roll = math.floor ( 100 * math.random ()) if ( roll <= x ) then local fPotionStrengthMult = tes3 . findGMST ( tes3 . gmst . fPotionStrengthMult ). value e . potionStrength = fPotionStrengthMult * e . mortar . quality * x e . success = true else e . potionStrength = - 1 e . success = false end end event . register ( \"potionBrewSkillCheck\" , brewSkillCheck )","title":"potionBrewSkillCheck"},{"location":"events/potionBrewSkillCheck/#potionbrewskillcheck","text":"This event is triggered when the player attempts to brew a potion. It controls both the strength of the potion's effects, and if the brew is successful. These both use the player's stats, so the game combines them into one function. Because the potion effects are not determined yet, the potion data is not available. When using this event, use the example as a template for your own code. --- @param e potionBrewSkillCheckEventData local function potionBrewSkillCheckCallback ( e ) end event . register ( \"potionBrewSkillCheck\" , potionBrewSkillCheckCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"potionBrewSkillCheck"},{"location":"events/potionBrewSkillCheck/#event-data","text":"alembic ( tes3apparatus ): Read-only . The alembic apparatus used to create the potion. calcinator ( tes3apparatus ): Read-only . The calcinator apparatus used to create the potion. ingredients (table): Read-only . An array of up to 4 tes3ingredient objects, which were used to create the potion. mortar ( tes3apparatus ): Read-only . The mortar apparatus used to create the potion. potionStrength (number): Can be modified. The strength multiplier used to scale the potion effects. For each different effect, it can modify magnitude, duration, or both. This is initially equal to -1 if the potion failed to brew. retort ( tes3apparatus ): Read-only . The retort apparatus used to create the potion. success (boolean): Can be modified. Whether the brewing is successful.","title":"Event Data"},{"location":"events/potionBrewSkillCheck/#examples","text":"Example: Vanilla potion skill check function local function brewSkillCheck ( e ) local player = tes3 . mobilePlayer local x = player . alchemy . current + 0.1 * player . intelligence . current + 0.1 * player . luck . current local roll = math.floor ( 100 * math.random ()) if ( roll <= x ) then local fPotionStrengthMult = tes3 . findGMST ( tes3 . gmst . fPotionStrengthMult ). value e . potionStrength = fPotionStrengthMult * e . mortar . quality * x e . success = true else e . potionStrength = - 1 e . success = false end end event . register ( \"potionBrewSkillCheck\" , brewSkillCheck )","title":"Examples"},{"location":"events/potionBrewed/","text":"potionBrewed \u2693\ufe0e The potionBrewed event is raised when the player brews a new potion. --- @param e potionBrewedEventData local function potionBrewedCallback ( e ) end event . register ( \"potionBrewed\" , potionBrewedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e alembic ( tes3apparatus ): Read-only . The alembic apparatus used to create the potion. calcinator ( tes3apparatus ): Read-only . The calcinator apparatus used to create the potion. ingredients (table): Read-only . An array of up to 4 tes3ingredient objects, which were used to create the potion. mortar ( tes3apparatus ): Read-only . The mortar apparatus used to create the potion. object ( tes3alchemy ): Read-only . The potion created by the player. retort ( tes3apparatus ): Read-only . The retort apparatus used to create the potion. Examples \u2693\ufe0e Example: Replace a brewed potion with a modified version event . register ( \"potionBrewed\" , function ( e ) local p = { [ \"name\" ] = \"[*]\" .. e . object . name , [ \"mesh\" ] = e . object . mesh , [ \"icon\" ] = e . object . icon , [ \"weight\" ] = e . object . weight * 2 , [ \"value\" ] = e . object . value * 50 , [ \"effects\" ] = {}, } for i = 1 , 8 do p . effects [ i ] = e . object . effects [ i ] end local newPotion = tes3alchemy . create ( p ) tes3 . removeItem { reference = tes3 . player , item = e . object , playSound = false } tes3 . addItem { reference = tes3 . player , item = newPotion , playSound = false } end )","title":"potionBrewed"},{"location":"events/potionBrewed/#potionbrewed","text":"The potionBrewed event is raised when the player brews a new potion. --- @param e potionBrewedEventData local function potionBrewedCallback ( e ) end event . register ( \"potionBrewed\" , potionBrewedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"potionBrewed"},{"location":"events/potionBrewed/#event-data","text":"alembic ( tes3apparatus ): Read-only . The alembic apparatus used to create the potion. calcinator ( tes3apparatus ): Read-only . The calcinator apparatus used to create the potion. ingredients (table): Read-only . An array of up to 4 tes3ingredient objects, which were used to create the potion. mortar ( tes3apparatus ): Read-only . The mortar apparatus used to create the potion. object ( tes3alchemy ): Read-only . The potion created by the player. retort ( tes3apparatus ): Read-only . The retort apparatus used to create the potion.","title":"Event Data"},{"location":"events/potionBrewed/#examples","text":"Example: Replace a brewed potion with a modified version event . register ( \"potionBrewed\" , function ( e ) local p = { [ \"name\" ] = \"[*]\" .. e . object . name , [ \"mesh\" ] = e . object . mesh , [ \"icon\" ] = e . object . icon , [ \"weight\" ] = e . object . weight * 2 , [ \"value\" ] = e . object . value * 50 , [ \"effects\" ] = {}, } for i = 1 , 8 do p . effects [ i ] = e . object . effects [ i ] end local newPotion = tes3alchemy . create ( p ) tes3 . removeItem { reference = tes3 . player , item = e . object , playSound = false } tes3 . addItem { reference = tes3 . player , item = newPotion , playSound = false } end )","title":"Examples"},{"location":"events/powerRecharged/","text":"powerRecharged \u2693\ufe0e This event triggers when a power is recharged, and may be used again. In Morrowind, powers are a type of spells which may be cast once per day and don't cost any magicka. --- @param e powerRechargedEventData local function powerRechargedCallback ( e ) end event . register ( \"powerRecharged\" , powerRechargedCallback ) Tip This event can be filtered based on the power event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The actor whose power recharged. power ( tes3spell ): Read-only . A power which recharged. reference ( tes3reference ): Read-only . Mobile\u2019s associated reference.","title":"powerRecharged"},{"location":"events/powerRecharged/#powerrecharged","text":"This event triggers when a power is recharged, and may be used again. In Morrowind, powers are a type of spells which may be cast once per day and don't cost any magicka. --- @param e powerRechargedEventData local function powerRechargedCallback ( e ) end event . register ( \"powerRecharged\" , powerRechargedCallback ) Tip This event can be filtered based on the power event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"powerRecharged"},{"location":"events/powerRecharged/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The actor whose power recharged. power ( tes3spell ): Read-only . A power which recharged. reference ( tes3reference ): Read-only . Mobile\u2019s associated reference.","title":"Event Data"},{"location":"events/preLevelUp/","text":"preLevelUp \u2693\ufe0e This event is triggered just before the player levels up. --- @param e preLevelUpEventData local function preLevelUpCallback ( e ) end event . register ( \"preLevelUp\" , preLevelUpCallback ) Tip This event can be filtered based on the level event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e level (number): Read-only . The new level about to be obtained.","title":"preLevelUp"},{"location":"events/preLevelUp/#prelevelup","text":"This event is triggered just before the player levels up. --- @param e preLevelUpEventData local function preLevelUpCallback ( e ) end event . register ( \"preLevelUp\" , preLevelUpCallback ) Tip This event can be filtered based on the level event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"preLevelUp"},{"location":"events/preLevelUp/#event-data","text":"level (number): Read-only . The new level about to be obtained.","title":"Event Data"},{"location":"events/preventRest/","text":"preventRest \u2693\ufe0e This event can be used to prevent player from resting by returning false. --- @param e preventRestEventData local function preventRestCallback ( e ) end event . register ( \"preventRest\" , preventRestCallback ) Tip This event can be filtered based on the mobile event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . Mobile actor which is preventing the player from resting reference ( tes3reference ): Read-only . Mobile\u2019s associated reference.","title":"preventRest"},{"location":"events/preventRest/#preventrest","text":"This event can be used to prevent player from resting by returning false. --- @param e preventRestEventData local function preventRestCallback ( e ) end event . register ( \"preventRest\" , preventRestCallback ) Tip This event can be filtered based on the mobile event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"preventRest"},{"location":"events/preventRest/#event-data","text":"mobile ( tes3mobileActor ): Read-only . Mobile actor which is preventing the player from resting reference ( tes3reference ): Read-only . Mobile\u2019s associated reference.","title":"Event Data"},{"location":"events/projectileExpire/","text":"projectileExpire \u2693\ufe0e The projectileExpire event fires just prior to a fired projectile expiring. --- @param e projectileExpireEventData local function projectileExpireCallback ( e ) end event . register ( \"projectileExpire\" , projectileExpireCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e firingReference ( tes3reference ): Read-only . Reference to the actor that fired the projectile. firingWeapon ( tes3weapon ): Read-only . The weapon that fired the projectile. mobile ( tes3mobileProjectile ): Read-only . The mobile projectile that is expiring.","title":"projectileExpire"},{"location":"events/projectileExpire/#projectileexpire","text":"The projectileExpire event fires just prior to a fired projectile expiring. --- @param e projectileExpireEventData local function projectileExpireCallback ( e ) end event . register ( \"projectileExpire\" , projectileExpireCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"projectileExpire"},{"location":"events/projectileExpire/#event-data","text":"firingReference ( tes3reference ): Read-only . Reference to the actor that fired the projectile. firingWeapon ( tes3weapon ): Read-only . The weapon that fired the projectile. mobile ( tes3mobileProjectile ): Read-only . The mobile projectile that is expiring.","title":"Event Data"},{"location":"events/projectileHitActor/","text":"projectileHitActor \u2693\ufe0e The projectileHitActor event fires when a projectile collides with an actor. --- @param e projectileHitActorEventData local function projectileHitActorCallback ( e ) end event . register ( \"projectileHitActor\" , projectileHitActorCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e firingReference ( tes3reference ): Read-only . Reference to the actor that fired the projectile. firingWeapon ( tes3weapon ): Read-only . The weapon that fired the projectile. mobile ( tes3mobileProjectile ): Read-only . The mobile projectile that is expiring. target ( tes3reference ): Read-only . Reference to the actor that was hit.","title":"projectileHitActor"},{"location":"events/projectileHitActor/#projectilehitactor","text":"The projectileHitActor event fires when a projectile collides with an actor. --- @param e projectileHitActorEventData local function projectileHitActorCallback ( e ) end event . register ( \"projectileHitActor\" , projectileHitActorCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"projectileHitActor"},{"location":"events/projectileHitActor/#event-data","text":"firingReference ( tes3reference ): Read-only . Reference to the actor that fired the projectile. firingWeapon ( tes3weapon ): Read-only . The weapon that fired the projectile. mobile ( tes3mobileProjectile ): Read-only . The mobile projectile that is expiring. target ( tes3reference ): Read-only . Reference to the actor that was hit.","title":"Event Data"},{"location":"events/projectileHitObject/","text":"projectileHitObject \u2693\ufe0e The projectileHitObject event fires when a projectile collides with an object. --- @param e projectileHitObjectEventData local function projectileHitObjectCallback ( e ) end event . register ( \"projectileHitObject\" , projectileHitObjectCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e collisionPoint ( tes3vector3 ): Read-only . The collision point of the mobile projectile. firingReference ( tes3reference ): Read-only . Reference to the actor that fired the projectile. firingWeapon ( tes3weapon ): Read-only . The weapon that fired the projectile. mobile ( tes3mobileProjectile ): Read-only . The mobile projectile that is expiring. target ( tes3reference ): Read-only . Reference to the object that was hit.","title":"projectileHitObject"},{"location":"events/projectileHitObject/#projectilehitobject","text":"The projectileHitObject event fires when a projectile collides with an object. --- @param e projectileHitObjectEventData local function projectileHitObjectCallback ( e ) end event . register ( \"projectileHitObject\" , projectileHitObjectCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"projectileHitObject"},{"location":"events/projectileHitObject/#event-data","text":"collisionPoint ( tes3vector3 ): Read-only . The collision point of the mobile projectile. firingReference ( tes3reference ): Read-only . Reference to the actor that fired the projectile. firingWeapon ( tes3weapon ): Read-only . The weapon that fired the projectile. mobile ( tes3mobileProjectile ): Read-only . The mobile projectile that is expiring. target ( tes3reference ): Read-only . Reference to the object that was hit.","title":"Event Data"},{"location":"events/projectileHitTerrain/","text":"projectileHitTerrain \u2693\ufe0e The projectileHitTerrain event fires when a projectile collides with terrain. --- @param e projectileHitTerrainEventData local function projectileHitTerrainCallback ( e ) end event . register ( \"projectileHitTerrain\" , projectileHitTerrainCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e collisionPoint ( tes3vector3 ): Read-only . The collision point of the mobile projectile. firingReference ( tes3reference ): Read-only . Reference to the actor that fired the projectile. firingWeapon ( tes3weapon ): Read-only . The weapon that fired the projectile. mobile ( tes3mobileProjectile ): Read-only . The mobile projectile that is expiring. position ( tes3vector3 ): Read-only . The position of the mobile projectile. velocity ( tes3vector3 ): Read-only . The velocity of the mobile projectile.","title":"projectileHitTerrain"},{"location":"events/projectileHitTerrain/#projectilehitterrain","text":"The projectileHitTerrain event fires when a projectile collides with terrain. --- @param e projectileHitTerrainEventData local function projectileHitTerrainCallback ( e ) end event . register ( \"projectileHitTerrain\" , projectileHitTerrainCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"projectileHitTerrain"},{"location":"events/projectileHitTerrain/#event-data","text":"collisionPoint ( tes3vector3 ): Read-only . The collision point of the mobile projectile. firingReference ( tes3reference ): Read-only . Reference to the actor that fired the projectile. firingWeapon ( tes3weapon ): Read-only . The weapon that fired the projectile. mobile ( tes3mobileProjectile ): Read-only . The mobile projectile that is expiring. position ( tes3vector3 ): Read-only . The position of the mobile projectile. velocity ( tes3vector3 ): Read-only . The velocity of the mobile projectile.","title":"Event Data"},{"location":"events/referenceActivated/","text":"referenceActivated \u2693\ufe0e This event is triggered when a reference is activated. --- @param e referenceActivatedEventData local function referenceActivatedCallback ( e ) end event . register ( \"referenceActivated\" , referenceActivatedCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e reference ( tes3reference ): Read-only . The reference which was activated.","title":"referenceActivated"},{"location":"events/referenceActivated/#referenceactivated","text":"This event is triggered when a reference is activated. --- @param e referenceActivatedEventData local function referenceActivatedCallback ( e ) end event . register ( \"referenceActivated\" , referenceActivatedCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"referenceActivated"},{"location":"events/referenceActivated/#event-data","text":"reference ( tes3reference ): Read-only . The reference which was activated.","title":"Event Data"},{"location":"events/referenceDeactivated/","text":"referenceDeactivated \u2693\ufe0e This event is triggered when a reference is deactivated. --- @param e referenceDeactivatedEventData local function referenceDeactivatedCallback ( e ) end event . register ( \"referenceDeactivated\" , referenceDeactivatedCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e reference ( tes3reference ): Read-only . The reference which was deactivated.","title":"referenceDeactivated"},{"location":"events/referenceDeactivated/#referencedeactivated","text":"This event is triggered when a reference is deactivated. --- @param e referenceDeactivatedEventData local function referenceDeactivatedCallback ( e ) end event . register ( \"referenceDeactivated\" , referenceDeactivatedCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"referenceDeactivated"},{"location":"events/referenceDeactivated/#event-data","text":"reference ( tes3reference ): Read-only . The reference which was deactivated.","title":"Event Data"},{"location":"events/referenceSceneNodeCreated/","text":"referenceSceneNodeCreated \u2693\ufe0e This event fires when a SceneNode is created for a reference. --- @param e referenceSceneNodeCreatedEventData local function referenceSceneNodeCreatedCallback ( e ) end event . register ( \"referenceSceneNodeCreated\" , referenceSceneNodeCreatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e reference ( tes3reference ): Read-only . Reference that the SceneNode was created for.","title":"referenceSceneNodeCreated"},{"location":"events/referenceSceneNodeCreated/#referencescenenodecreated","text":"This event fires when a SceneNode is created for a reference. --- @param e referenceSceneNodeCreatedEventData local function referenceSceneNodeCreatedCallback ( e ) end event . register ( \"referenceSceneNodeCreated\" , referenceSceneNodeCreatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"referenceSceneNodeCreated"},{"location":"events/referenceSceneNodeCreated/#event-data","text":"reference ( tes3reference ): Read-only . Reference that the SceneNode was created for.","title":"Event Data"},{"location":"events/restInterrupt/","text":"restInterrupt \u2693\ufe0e This event is invoked when a rest is about to be interrupted. The ambushing spawn can be overridden by changing the creature parameter. --- @param e restInterruptEventData local function restInterruptCallback ( e ) end event . register ( \"restInterrupt\" , restInterruptCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e creature ( tes3creature , tes3npc , tes3leveledCreature ): The creature that is interrupting rest. Can be set to a creature, NPC, or leveled creature. resting (boolean): Read-only . If true, the player is attempting to rest, as opposed to wait. waiting (boolean): Read-only . If true, the player is attempting to wait, as opposed to rest.","title":"restInterrupt"},{"location":"events/restInterrupt/#restinterrupt","text":"This event is invoked when a rest is about to be interrupted. The ambushing spawn can be overridden by changing the creature parameter. --- @param e restInterruptEventData local function restInterruptCallback ( e ) end event . register ( \"restInterrupt\" , restInterruptCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"restInterrupt"},{"location":"events/restInterrupt/#event-data","text":"creature ( tes3creature , tes3npc , tes3leveledCreature ): The creature that is interrupting rest. Can be set to a creature, NPC, or leveled creature. resting (boolean): Read-only . If true, the player is attempting to rest, as opposed to wait. waiting (boolean): Read-only . If true, the player is attempting to wait, as opposed to rest.","title":"Event Data"},{"location":"events/save/","text":"save \u2693\ufe0e The save event fires when the game is about to save. This event allows scripts to block saving. --- @param e saveEventData local function saveCallback ( e ) end event . register ( \"save\" , saveCallback ) Tip This event can be filtered based on the filename event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e filename (string): The filename of the save, not including file extension. name (string): The user facing name of the save, shown in the load/save game menu.","title":"save"},{"location":"events/save/#save","text":"The save event fires when the game is about to save. This event allows scripts to block saving. --- @param e saveEventData local function saveCallback ( e ) end event . register ( \"save\" , saveCallback ) Tip This event can be filtered based on the filename event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"save"},{"location":"events/save/#event-data","text":"filename (string): The filename of the save, not including file extension. name (string): The user facing name of the save, shown in the load/save game menu.","title":"Event Data"},{"location":"events/saved/","text":"saved \u2693\ufe0e The saved event fires after the game has successfully been saved. This event is preceded by the save event. --- @param e savedEventData local function savedCallback ( e ) end event . register ( \"saved\" , savedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e filename (string): The filename of the save, not including file extension. name (string): The user facing name of the save, shown in the load/save game menu.","title":"saved"},{"location":"events/saved/#saved","text":"The saved event fires after the game has successfully been saved. This event is preceded by the save event. --- @param e savedEventData local function savedCallback ( e ) end event . register ( \"saved\" , savedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"saved"},{"location":"events/saved/#event-data","text":"filename (string): The filename of the save, not including file extension. name (string): The user facing name of the save, shown in the load/save game menu.","title":"Event Data"},{"location":"events/simulate/","text":"simulate \u2693\ufe0e The simulate event occurs at the start of every frame, excluding when the game is paused or in menu mode. --- @param e simulateEventData local function simulateCallback ( e ) end event . register ( \"simulate\" , simulateCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e delta (number): Read-only . The number of seconds since the last frame. menuMode (boolean): Read-only . Always false, maintained only for consistency with the enterFrame event. timestamp (number): Read-only . The number of hours since the beginning of the 3rd Era (similar to the Unix Epoch).","title":"simulate"},{"location":"events/simulate/#simulate","text":"The simulate event occurs at the start of every frame, excluding when the game is paused or in menu mode. --- @param e simulateEventData local function simulateCallback ( e ) end event . register ( \"simulate\" , simulateCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"simulate"},{"location":"events/simulate/#event-data","text":"delta (number): Read-only . The number of seconds since the last frame. menuMode (boolean): Read-only . Always false, maintained only for consistency with the enterFrame event. timestamp (number): Read-only . The number of hours since the beginning of the 3rd Era (similar to the Unix Epoch).","title":"Event Data"},{"location":"events/skillRaised/","text":"skillRaised \u2693\ufe0e This event is invoked whenever the player naturally gains a new level a skill. This is typically through exercise, training, or reading books. --- @param e skillRaisedEventData local function skillRaisedCallback ( e ) end event . register ( \"skillRaised\" , skillRaisedCallback ) Tip This event can be filtered based on the skill event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e level (number): Read-only . The new level of the skill. skill (number): Read-only . The skill that gained a new level experience. source (string): The source of the skill raise. Maps to values in tes3.skillRaiseSource enumeration.","title":"skillRaised"},{"location":"events/skillRaised/#skillraised","text":"This event is invoked whenever the player naturally gains a new level a skill. This is typically through exercise, training, or reading books. --- @param e skillRaisedEventData local function skillRaisedCallback ( e ) end event . register ( \"skillRaised\" , skillRaisedCallback ) Tip This event can be filtered based on the skill event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"skillRaised"},{"location":"events/skillRaised/#event-data","text":"level (number): Read-only . The new level of the skill. skill (number): Read-only . The skill that gained a new level experience. source (string): The source of the skill raise. Maps to values in tes3.skillRaiseSource enumeration.","title":"Event Data"},{"location":"events/soundObjectPlay/","text":"soundObjectPlay \u2693\ufe0e --- @param e soundObjectPlayEventData local function soundObjectPlayCallback ( e ) end event . register ( \"soundObjectPlay\" , soundObjectPlayCallback ) Tip This event can be filtered based on the sound event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e flags (number): isNot3D (boolean): pitch (number): sound ( tes3sound ): volume (number):","title":"soundObjectPlay"},{"location":"events/soundObjectPlay/#soundobjectplay","text":"--- @param e soundObjectPlayEventData local function soundObjectPlayCallback ( e ) end event . register ( \"soundObjectPlay\" , soundObjectPlayCallback ) Tip This event can be filtered based on the sound event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"soundObjectPlay"},{"location":"events/soundObjectPlay/#event-data","text":"flags (number): isNot3D (boolean): pitch (number): sound ( tes3sound ): volume (number):","title":"Event Data"},{"location":"events/spellCast/","text":"spellCast \u2693\ufe0e This event is triggered just before a spell cast is resolved, at the end of the casting animation. It can control the success chance of the spell cast. --- @param e spellCastEventData local function spellCastCallback ( e ) end event . register ( \"spellCast\" , spellCastCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e castChance (number): The percentage chance of the caster successfully casting the spell. May be modified. Setting it to 0 will cause the cast to fail. caster ( tes3reference ): Read-only . The caster of the spell. source ( tes3spell ): Read-only . The magic source. weakestSchool (number): Read-only . Of all the magic effects in the spell, there is a magic school which the caster has the lowest skill at casting. This school determines which skill will gain experience on a successful cast.","title":"spellCast"},{"location":"events/spellCast/#spellcast","text":"This event is triggered just before a spell cast is resolved, at the end of the casting animation. It can control the success chance of the spell cast. --- @param e spellCastEventData local function spellCastCallback ( e ) end event . register ( \"spellCast\" , spellCastCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"spellCast"},{"location":"events/spellCast/#event-data","text":"castChance (number): The percentage chance of the caster successfully casting the spell. May be modified. Setting it to 0 will cause the cast to fail. caster ( tes3reference ): Read-only . The caster of the spell. source ( tes3spell ): Read-only . The magic source. weakestSchool (number): Read-only . Of all the magic effects in the spell, there is a magic school which the caster has the lowest skill at casting. This school determines which skill will gain experience on a successful cast.","title":"Event Data"},{"location":"events/spellCasted/","text":"spellCasted \u2693\ufe0e This event is triggered when any spell is cast successfully; this includes spells cast via scripts. This occurs at the end of the casting animation, just after the magic projectile has been constructed. --- @param e spellCastedEventData local function spellCastedCallback ( e ) end event . register ( \"spellCasted\" , spellCastedCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e caster ( tes3reference ): Read-only . The caster of the spell. expGainSchool (number): Of all the magic effects in the spell, there is a magic school which the caster has the lowest skill at casting. This school determines which skill will gain experience on a successful cast. This school can be altered, or set to nil to remove experience gain, possibly in favour of your own experience calculation. source ( tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches caster.","title":"spellCasted"},{"location":"events/spellCasted/#spellcasted","text":"This event is triggered when any spell is cast successfully; this includes spells cast via scripts. This occurs at the end of the casting animation, just after the magic projectile has been constructed. --- @param e spellCastedEventData local function spellCastedCallback ( e ) end event . register ( \"spellCasted\" , spellCastedCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"spellCasted"},{"location":"events/spellCasted/#event-data","text":"caster ( tes3reference ): Read-only . The caster of the spell. expGainSchool (number): Of all the magic effects in the spell, there is a magic school which the caster has the lowest skill at casting. This school determines which skill will gain experience on a successful cast. This school can be altered, or set to nil to remove experience gain, possibly in favour of your own experience calculation. source ( tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches caster.","title":"Event Data"},{"location":"events/spellCastedFailure/","text":"spellCastedFailure \u2693\ufe0e This event is triggered when any spell fails to cast due to failing the cast chance check. It does not trigger when there is insufficient magicka. --- @param e spellCastedFailureEventData local function spellCastedFailureCallback ( e ) end event . register ( \"spellCastedFailure\" , spellCastedFailureCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e caster ( tes3reference ): Read-only . The caster of the spell. expGainSchool (number): Of all the magic effects in the spell, there is a magic school which the caster has the lowest skill at casting. This school determines which skill will gain experience on a successful cast. This school can be altered, or set to nil to remove experience gain, possibly in favour of your own experience calculation. source ( tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches caster.","title":"spellCastedFailure"},{"location":"events/spellCastedFailure/#spellcastedfailure","text":"This event is triggered when any spell fails to cast due to failing the cast chance check. It does not trigger when there is insufficient magicka. --- @param e spellCastedFailureEventData local function spellCastedFailureCallback ( e ) end event . register ( \"spellCastedFailure\" , spellCastedFailureCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"spellCastedFailure"},{"location":"events/spellCastedFailure/#event-data","text":"caster ( tes3reference ): Read-only . The caster of the spell. expGainSchool (number): Of all the magic effects in the spell, there is a magic school which the caster has the lowest skill at casting. This school determines which skill will gain experience on a successful cast. This school can be altered, or set to nil to remove experience gain, possibly in favour of your own experience calculation. source ( tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches caster.","title":"Event Data"},{"location":"events/spellCreated/","text":"spellCreated \u2693\ufe0e This event is triggered when a new spell is created using spellmaking services or by a script using tes3spell.create() . --- @param e spellCreatedEventData local function spellCreatedCallback ( e ) end event . register ( \"spellCreated\" , spellCreatedCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e source (string): Was the origin of the spell spellmaker or a script? Maps to values in tes3.spellSource namespace. spell ( tes3spell ): A spell which was created.","title":"spellCreated"},{"location":"events/spellCreated/#spellcreated","text":"This event is triggered when a new spell is created using spellmaking services or by a script using tes3spell.create() . --- @param e spellCreatedEventData local function spellCreatedCallback ( e ) end event . register ( \"spellCreated\" , spellCreatedCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"spellCreated"},{"location":"events/spellCreated/#event-data","text":"source (string): Was the origin of the spell spellmaker or a script? Maps to values in tes3.spellSource namespace. spell ( tes3spell ): A spell which was created.","title":"Event Data"},{"location":"events/spellMagickaUse/","text":"spellMagickaUse \u2693\ufe0e This event is triggered just before a spell or power is used by any actor. It allows modification of the magicka required to cast the spell. Magicka cost change is not reflected in the UI system, because the UI does not expect spell costs to change. --- @param e spellMagickaUseEventData local function spellMagickaUseCallback ( e ) end event . register ( \"spellMagickaUse\" , spellMagickaUseCallback ) Tip This event can be filtered based on the caster event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e caster ( tes3reference ): Read-only . The caster of the spell. cost (number): The magicka cost required to cast the spell. May be modified. This value is rounded to an integer when used by the engine. instance ( tes3magicSourceInstance ): The magic source instance. spell ( tes3spell ): Read-only . The spell being cast.","title":"spellMagickaUse"},{"location":"events/spellMagickaUse/#spellmagickause","text":"This event is triggered just before a spell or power is used by any actor. It allows modification of the magicka required to cast the spell. Magicka cost change is not reflected in the UI system, because the UI does not expect spell costs to change. --- @param e spellMagickaUseEventData local function spellMagickaUseCallback ( e ) end event . register ( \"spellMagickaUse\" , spellMagickaUseCallback ) Tip This event can be filtered based on the caster event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"spellMagickaUse"},{"location":"events/spellMagickaUse/#event-data","text":"caster ( tes3reference ): Read-only . The caster of the spell. cost (number): The magicka cost required to cast the spell. May be modified. This value is rounded to an integer when used by the engine. instance ( tes3magicSourceInstance ): The magic source instance. spell ( tes3spell ): Read-only . The spell being cast.","title":"Event Data"},{"location":"events/spellResist/","text":"spellResist \u2693\ufe0e This event is used when calculating a creature's spell resistance, and allows Lua scripts to override the behavior of spell resistance by changing the resistedPercent value. This can be used to enable willpower-based resistance checks, provide specific resistances to specific spells, spells that heal instead of harm, and a variety of new mechanics. --- @param e spellResistEventData local function spellResistCallback ( e ) end event . register ( \"spellResist\" , spellResistCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e caster ( tes3reference ): Read-only . The caster of the spell. effect ( tes3effect ): Read-only . The specific effect that triggered the event. This is equal as doing e.source.effects[effectIndex] . This field may not always be available. effectIndex (number): Read-only . The index of the effect in source's effects list. effectInstance ( tes3magicEffectInstance ): Read-only . The unique instance of the magic effect. resistAttribute (number): Read-only . The attribute resisted. This is an index into a tes3mobileActor.effectAttributes . Note that the index here is 0-based, while Lua is 1-based. resistedPercent (number): The percent of the spell that has been resisted. This can be modified, but a value outside the range of 0 to 100 does not have consistent effects. For fire damage, for example, a value over 100 causes the spell to heal the target instead of harming them. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. spellCastChance (number): Read-only . The cast chance of the magic source. This is only available if the source is a spell or an enchantment. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches caster.","title":"spellResist"},{"location":"events/spellResist/#spellresist","text":"This event is used when calculating a creature's spell resistance, and allows Lua scripts to override the behavior of spell resistance by changing the resistedPercent value. This can be used to enable willpower-based resistance checks, provide specific resistances to specific spells, spells that heal instead of harm, and a variety of new mechanics. --- @param e spellResistEventData local function spellResistCallback ( e ) end event . register ( \"spellResist\" , spellResistCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"spellResist"},{"location":"events/spellResist/#event-data","text":"caster ( tes3reference ): Read-only . The caster of the spell. effect ( tes3effect ): Read-only . The specific effect that triggered the event. This is equal as doing e.source.effects[effectIndex] . This field may not always be available. effectIndex (number): Read-only . The index of the effect in source's effects list. effectInstance ( tes3magicEffectInstance ): Read-only . The unique instance of the magic effect. resistAttribute (number): Read-only . The attribute resisted. This is an index into a tes3mobileActor.effectAttributes . Note that the index here is 0-based, while Lua is 1-based. resistedPercent (number): The percent of the spell that has been resisted. This can be modified, but a value outside the range of 0 to 100 does not have consistent effects. For fire damage, for example, a value over 100 causes the spell to heal the target instead of harming them. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. spellCastChance (number): Read-only . The cast chance of the magic source. This is only available if the source is a spell or an enchantment. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches caster.","title":"Event Data"},{"location":"events/spellTick/","text":"spellTick \u2693\ufe0e The spellTick event happens every frame that an effect is active on a target. This can be used to aid in scripted spells, cancel active spells, or otherwise monitor spell activity on actors. --- @param e spellTickEventData local function spellTickCallback ( e ) end event . register ( \"spellTick\" , spellTickCallback ) Tip This event can be filtered based on the source event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e caster ( tes3reference ): Read-only . The caster of the spell. deltaTime (number): Read-only . The number of seconds since the last spell tick. effect ( tes3magicEffect ): Read-only . The individual effect structure on source. effectId (number): Read-only . The magic effect ID that is being ticked. effectIndex (number): Read-only . The index of the effect in source\u2019s effects list. effectInstance ( tes3magicEffectInstance ): Read-only . The unique instance of the magic effect. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches caster.","title":"spellTick"},{"location":"events/spellTick/#spelltick","text":"The spellTick event happens every frame that an effect is active on a target. This can be used to aid in scripted spells, cancel active spells, or otherwise monitor spell activity on actors. --- @param e spellTickEventData local function spellTickCallback ( e ) end event . register ( \"spellTick\" , spellTickCallback ) Tip This event can be filtered based on the source event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"spellTick"},{"location":"events/spellTick/#event-data","text":"caster ( tes3reference ): Read-only . The caster of the spell. deltaTime (number): Read-only . The number of seconds since the last spell tick. effect ( tes3magicEffect ): Read-only . The individual effect structure on source. effectId (number): Read-only . The magic effect ID that is being ticked. effectIndex (number): Read-only . The index of the effect in source\u2019s effects list. effectInstance ( tes3magicEffectInstance ): Read-only . The unique instance of the magic effect. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches caster.","title":"Event Data"},{"location":"events/topicAdded/","text":"topicAdded \u2693\ufe0e This event is raised when the player gains access to a new dialogue topic. --- @param e topicAddedEventData local function topicAddedCallback ( e ) end event . register ( \"topicAdded\" , topicAddedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e topic ( tes3dialogue ): Read-only . The topic that was newly added to the player's list of topics.","title":"topicAdded"},{"location":"events/topicAdded/#topicadded","text":"This event is raised when the player gains access to a new dialogue topic. --- @param e topicAddedEventData local function topicAddedCallback ( e ) end event . register ( \"topicAdded\" , topicAddedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"topicAdded"},{"location":"events/topicAdded/#event-data","text":"topic ( tes3dialogue ): Read-only . The topic that was newly added to the player's list of topics.","title":"Event Data"},{"location":"events/trapDisarm/","text":"trapDisarm \u2693\ufe0e This event fires when a trap is being disarmed. --- @param e trapDisarmEventData local function trapDisarmCallback ( e ) end event . register ( \"trapDisarm\" , trapDisarmCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e chance (number): Read-only . The chance the trap disarm will be successful. disarmer ( tes3mobileNPC ): Read-only . The Mobile NPC doing the disarming. lockData (tes3lockAttachmentNode): Read-only . The lock data of the reference. reference ( tes3reference ): Read-only . The reference that triggered the event (container, door, etc.). tool ( tes3item ): Read-only . The item the disarmer is using to disarm the trap. toolItemData ( tes3itemData ): Read-only . The item data for the tool. trapPresent (boolean): Read-only . Indicates if a trap is present on the reference.","title":"trapDisarm"},{"location":"events/trapDisarm/#trapdisarm","text":"This event fires when a trap is being disarmed. --- @param e trapDisarmEventData local function trapDisarmCallback ( e ) end event . register ( \"trapDisarm\" , trapDisarmCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"trapDisarm"},{"location":"events/trapDisarm/#event-data","text":"chance (number): Read-only . The chance the trap disarm will be successful. disarmer ( tes3mobileNPC ): Read-only . The Mobile NPC doing the disarming. lockData (tes3lockAttachmentNode): Read-only . The lock data of the reference. reference ( tes3reference ): Read-only . The reference that triggered the event (container, door, etc.). tool ( tes3item ): Read-only . The item the disarmer is using to disarm the trap. toolItemData ( tes3itemData ): Read-only . The item data for the tool. trapPresent (boolean): Read-only . Indicates if a trap is present on the reference.","title":"Event Data"},{"location":"events/uiActivated/","text":"uiActivated \u2693\ufe0e This event is invoked after a UI menu has been built or made visible, at the point that all menu elements contain updated data. Supported Menus : MenuAlchemy , MenuAttributes , MenuAttributesList (Enchanting/spellmaking effect attribute), MenuAudio (Options, audio), MenuBarter , MenuBirthSign , MenuBook , MenuChooseClass , MenuClassChoice , MenuClassMessage , MenuConsole , MenuContents (Container/NPC inventory), MenuCreateClass , MenuCtrls (Options, controls), MenuDialog , MenuEnchantment , MenuInput , MenuInputSave , MenuInventory (Player inventory), MenuInventorySelect (Item selector), MenuJournal , MenuLevelUp , MenuLoad , MenuLoading , MenuMagic (Spell/enchanted item selector), MenuMagicSelect , MenuMap , MenuMapNoteEdit , MenuMessage , MenuMulti (Status bars, current weapon/magic, active effects and minimap), MenuName , MenuNotify1 , MenuNotify2 , MenuNotify3 , MenuOptions (Main menu), MenuPersuasion , MenuPrefs (Options, prefs), MenuQuantity , MenuQuick (Quick keys), MenuRaceSex , MenuRepair , MenuRestWait , MenuSave , MenuScroll , MenuServiceRepair , MenuServiceSpells , MenuServiceTraining , MenuServiceTravel , MenuSetValues (Enchanting/spellmaking effect values), MenuSkills , MenuSkillsList (Enchanting/spellmaking effect skill), MenuSpecialization , MenuSpellmaking , MenuStat (Player attributes, skills, factions etc.), MenuStatReview , MenuSwimFillBar , MenuTimePass , MenuTopic , MenuVideo (Options, video) --- @param e uiActivatedEventData local function uiActivatedCallback ( e ) end event . register ( \"uiActivated\" , uiActivatedCallback ) Tip This event can be filtered based on the element.name event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e element ( tes3uiElement ): Read-only . The menu element that was created. The event is filtered on element.name. newlyCreated (boolean): Read-only . true if the menu was created for the first time or destroyed and re-created; false if it was made visible after being hidden. This can be used when adding custom elements to a menu, as elements previously added will still exist if the menu was hidden. If the menu was re-created, the elements will need to be added again.","title":"uiActivated"},{"location":"events/uiActivated/#uiactivated","text":"This event is invoked after a UI menu has been built or made visible, at the point that all menu elements contain updated data. Supported Menus : MenuAlchemy , MenuAttributes , MenuAttributesList (Enchanting/spellmaking effect attribute), MenuAudio (Options, audio), MenuBarter , MenuBirthSign , MenuBook , MenuChooseClass , MenuClassChoice , MenuClassMessage , MenuConsole , MenuContents (Container/NPC inventory), MenuCreateClass , MenuCtrls (Options, controls), MenuDialog , MenuEnchantment , MenuInput , MenuInputSave , MenuInventory (Player inventory), MenuInventorySelect (Item selector), MenuJournal , MenuLevelUp , MenuLoad , MenuLoading , MenuMagic (Spell/enchanted item selector), MenuMagicSelect , MenuMap , MenuMapNoteEdit , MenuMessage , MenuMulti (Status bars, current weapon/magic, active effects and minimap), MenuName , MenuNotify1 , MenuNotify2 , MenuNotify3 , MenuOptions (Main menu), MenuPersuasion , MenuPrefs (Options, prefs), MenuQuantity , MenuQuick (Quick keys), MenuRaceSex , MenuRepair , MenuRestWait , MenuSave , MenuScroll , MenuServiceRepair , MenuServiceSpells , MenuServiceTraining , MenuServiceTravel , MenuSetValues (Enchanting/spellmaking effect values), MenuSkills , MenuSkillsList (Enchanting/spellmaking effect skill), MenuSpecialization , MenuSpellmaking , MenuStat (Player attributes, skills, factions etc.), MenuStatReview , MenuSwimFillBar , MenuTimePass , MenuTopic , MenuVideo (Options, video) --- @param e uiActivatedEventData local function uiActivatedCallback ( e ) end event . register ( \"uiActivated\" , uiActivatedCallback ) Tip This event can be filtered based on the element.name event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"uiActivated"},{"location":"events/uiActivated/#event-data","text":"element ( tes3uiElement ): Read-only . The menu element that was created. The event is filtered on element.name. newlyCreated (boolean): Read-only . true if the menu was created for the first time or destroyed and re-created; false if it was made visible after being hidden. This can be used when adding custom elements to a menu, as elements previously added will still exist if the menu was hidden. If the menu was re-created, the elements will need to be added again.","title":"Event Data"},{"location":"events/uiEvent/","text":"uiEvent \u2693\ufe0e uiEvent is triggered through various UI events. This includes scrolling through panes, clicking buttons, selecting icons, or a host of other UI-related activities. --- @param e uiEventEventData local function uiEventCallback ( e ) end event . register ( \"uiEvent\" , uiEventCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e block ( tes3uiElement ): Read-only . The UI element that is firing this event. parent ( tes3uiElement ): Read-only . The calling element's parent. property (number): Read-only . The property identifier that is being triggered. var1 (number): Read-only . One of two undefined variables related to the event. var2 (number): Read-only . One of two undefined variables related to the event.","title":"uiEvent"},{"location":"events/uiEvent/#uievent","text":"uiEvent is triggered through various UI events. This includes scrolling through panes, clicking buttons, selecting icons, or a host of other UI-related activities. --- @param e uiEventEventData local function uiEventCallback ( e ) end event . register ( \"uiEvent\" , uiEventCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"uiEvent"},{"location":"events/uiEvent/#event-data","text":"block ( tes3uiElement ): Read-only . The UI element that is firing this event. parent ( tes3uiElement ): Read-only . The calling element's parent. property (number): Read-only . The property identifier that is being triggered. var1 (number): Read-only . One of two undefined variables related to the event. var2 (number): Read-only . One of two undefined variables related to the event.","title":"Event Data"},{"location":"events/uiObjectTooltip/","text":"uiObjectTooltip \u2693\ufe0e The uiObjectTooltip event triggers when a new tooltip is displayed for all in-world objects and items, and inventory tiles in all dialogues. The tooltip will be already be built. Tooltips for inventory tiles are built on mouseover, while tooltips for in-world objects are rebuilt every frame. --- @param e uiObjectTooltipEventData local function uiObjectTooltipCallback ( e ) end event . register ( \"uiObjectTooltip\" , uiObjectTooltipCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e count (number): Read-only . The number of items in the stack. itemData ( tes3itemData ): Read-only . The item data of object, if any. object ( tes3physicalObject ): Read-only . The object being examined. reference ( tes3reference ): Read-only . The reference being examined. Only valid for in-world objects. For inventory tiles it will always be nil. tooltip ( tes3uiElement ): Read-only . The newly created tooltip element. Due to timeouts and target changes, it may be destroyed at any time.","title":"uiObjectTooltip"},{"location":"events/uiObjectTooltip/#uiobjecttooltip","text":"The uiObjectTooltip event triggers when a new tooltip is displayed for all in-world objects and items, and inventory tiles in all dialogues. The tooltip will be already be built. Tooltips for inventory tiles are built on mouseover, while tooltips for in-world objects are rebuilt every frame. --- @param e uiObjectTooltipEventData local function uiObjectTooltipCallback ( e ) end event . register ( \"uiObjectTooltip\" , uiObjectTooltipCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"uiObjectTooltip"},{"location":"events/uiObjectTooltip/#event-data","text":"count (number): Read-only . The number of items in the stack. itemData ( tes3itemData ): Read-only . The item data of object, if any. object ( tes3physicalObject ): Read-only . The object being examined. reference ( tes3reference ): Read-only . The reference being examined. Only valid for in-world objects. For inventory tiles it will always be nil. tooltip ( tes3uiElement ): Read-only . The newly created tooltip element. Due to timeouts and target changes, it may be destroyed at any time.","title":"Event Data"},{"location":"events/uiPreEvent/","text":"uiPreEvent \u2693\ufe0e uiPreEvent is triggered through various UI events. This includes scrolling through panes, clicking buttons, selecting icons, or a host of other UI-related activities. This event fires before uiEvent, and has the additional advantage of being able to be blocked. --- @param e uiPreEventEventData local function uiPreEventCallback ( e ) end event . register ( \"uiPreEvent\" , uiPreEventCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e block ( tes3uiElement ): Read-only . The UI element that is firing this event. parent ( tes3uiElement ): Read-only . The calling element's parent. property (number): Read-only . The property identifier that is being triggered. var1 (number): Read-only . One of two undefined variables related to the event. var2 (number): Read-only . One of two undefined variables related to the event.","title":"uiPreEvent"},{"location":"events/uiPreEvent/#uipreevent","text":"uiPreEvent is triggered through various UI events. This includes scrolling through panes, clicking buttons, selecting icons, or a host of other UI-related activities. This event fires before uiEvent, and has the additional advantage of being able to be blocked. --- @param e uiPreEventEventData local function uiPreEventCallback ( e ) end event . register ( \"uiPreEvent\" , uiPreEventCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"uiPreEvent"},{"location":"events/uiPreEvent/#event-data","text":"block ( tes3uiElement ): Read-only . The UI element that is firing this event. parent ( tes3uiElement ): Read-only . The calling element's parent. property (number): Read-only . The property identifier that is being triggered. var1 (number): Read-only . One of two undefined variables related to the event. var2 (number): Read-only . One of two undefined variables related to the event.","title":"Event Data"},{"location":"events/uiRefreshed/","text":"uiRefreshed \u2693\ufe0e This event is invoked after a UI menu has been created or recreated. This can be useful for when important game subcomponents are destroyed and remade, without the entire UI being activated. Supported Elements : MenuStat_scroll_pane --- @param e uiRefreshedEventData local function uiRefreshedCallback ( e ) end event . register ( \"uiRefreshed\" , uiRefreshedCallback ) Tip This event can be filtered based on the element.name event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e element ( tes3uiElement ): Read-only . The menu element that was recreated or refreshed. The event is filtered on element.name newlyCreated (boolean): Read-only . true if the menu was created for the first time or destroyed and re-created; false if it was made visible after being hidden. This can be used when adding custom elements to a menu, as elements previously added will still exist if the menu was hidden. If the menu was re-created, the elements will need to be added again.","title":"uiRefreshed"},{"location":"events/uiRefreshed/#uirefreshed","text":"This event is invoked after a UI menu has been created or recreated. This can be useful for when important game subcomponents are destroyed and remade, without the entire UI being activated. Supported Elements : MenuStat_scroll_pane --- @param e uiRefreshedEventData local function uiRefreshedCallback ( e ) end event . register ( \"uiRefreshed\" , uiRefreshedCallback ) Tip This event can be filtered based on the element.name event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"uiRefreshed"},{"location":"events/uiRefreshed/#event-data","text":"element ( tes3uiElement ): Read-only . The menu element that was recreated or refreshed. The event is filtered on element.name newlyCreated (boolean): Read-only . true if the menu was created for the first time or destroyed and re-created; false if it was made visible after being hidden. This can be used when adding custom elements to a menu, as elements previously added will still exist if the menu was hidden. If the menu was re-created, the elements will need to be added again.","title":"Event Data"},{"location":"events/uiShowRestMenu/","text":"uiShowRestMenu \u2693\ufe0e The uiShowRestMenu event is raised when the rest menu is about to be displayed. It allows the callback to change if sleeping is allowed, or to prevent the UI from showing at all. --- @param e uiShowRestMenuEventData local function uiShowRestMenuCallback ( e ) end event . register ( \"uiShowRestMenu\" , uiShowRestMenuCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e allowRest (boolean): true if the player is allowed to sleep (determined primarily from the cell flags), or false if they must wait instead. This value can be modified. scripted (boolean): Read-only . This value is true when the menu is shown from using the ShowRestMenu or equivalent function.","title":"uiShowRestMenu"},{"location":"events/uiShowRestMenu/#uishowrestmenu","text":"The uiShowRestMenu event is raised when the rest menu is about to be displayed. It allows the callback to change if sleeping is allowed, or to prevent the UI from showing at all. --- @param e uiShowRestMenuEventData local function uiShowRestMenuCallback ( e ) end event . register ( \"uiShowRestMenu\" , uiShowRestMenuCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"uiShowRestMenu"},{"location":"events/uiShowRestMenu/#event-data","text":"allowRest (boolean): true if the player is allowed to sleep (determined primarily from the cell flags), or false if they must wait instead. This value can be modified. scripted (boolean): Read-only . This value is true when the menu is shown from using the ShowRestMenu or equivalent function.","title":"Event Data"},{"location":"events/uiSpellTooltip/","text":"uiSpellTooltip \u2693\ufe0e The uiSpellTooltip event triggers when a new tooltip is displayed for a spell. The tooltip will be already be built. --- @param e uiSpellTooltipEventData local function uiSpellTooltipCallback ( e ) end event . register ( \"uiSpellTooltip\" , uiSpellTooltipCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e spell ( tes3spell ): Read-only . The spell being examined. tooltip ( tes3uiElement ): Read-only . The newly created tooltip element. Due to timeouts and target changes, it may be destroyed at any time.","title":"uiSpellTooltip"},{"location":"events/uiSpellTooltip/#uispelltooltip","text":"The uiSpellTooltip event triggers when a new tooltip is displayed for a spell. The tooltip will be already be built. --- @param e uiSpellTooltipEventData local function uiSpellTooltipCallback ( e ) end event . register ( \"uiSpellTooltip\" , uiSpellTooltipCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"uiSpellTooltip"},{"location":"events/uiSpellTooltip/#event-data","text":"spell ( tes3spell ): Read-only . The spell being examined. tooltip ( tes3uiElement ): Read-only . The newly created tooltip element. Due to timeouts and target changes, it may be destroyed at any time.","title":"Event Data"},{"location":"events/unequipped/","text":"unequipped \u2693\ufe0e The unequipped event fires after an actor has successfully equipped an item. --- @param e unequippedEventData local function unequippedCallback ( e ) end event . register ( \"unequipped\" , unequippedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e actor ( tes3actor ): Read-only . The actor that has unequipped the item. item ( tes3baseObject ): Read-only . The object that has been unequipped. itemData ( tes3itemData ): Read-only . The item data of item. mobile ( tes3mobileActor ): Read-only . The mobile actor that has unequipped the item. reference ( tes3reference ): Read-only . actor\u2019s associated reference.","title":"unequipped"},{"location":"events/unequipped/#unequipped","text":"The unequipped event fires after an actor has successfully equipped an item. --- @param e unequippedEventData local function unequippedCallback ( e ) end event . register ( \"unequipped\" , unequippedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"unequipped"},{"location":"events/unequipped/#event-data","text":"actor ( tes3actor ): Read-only . The actor that has unequipped the item. item ( tes3baseObject ): Read-only . The object that has been unequipped. itemData ( tes3itemData ): Read-only . The item data of item. mobile ( tes3mobileActor ): Read-only . The mobile actor that has unequipped the item. reference ( tes3reference ): Read-only . actor\u2019s associated reference.","title":"Event Data"},{"location":"events/weaponReadied/","text":"weaponReadied \u2693\ufe0e This event is called when a weapon is readied, and pairs with the weaponUnreadied event. It can be used to reliably tell if a specific weapon is readied for attack. This does not necessarily mean that the animation state has changed for the first time. --- @param e weaponReadiedEventData local function weaponReadiedCallback ( e ) end event . register ( \"weaponReadied\" , weaponReadiedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e reference ( tes3reference ): Read-only . The reference associated with the change in readied weapon. weaponStack ( tes3baseObject ): Read-only . The bundle that contains the newly readied weapon and its associated data.","title":"weaponReadied"},{"location":"events/weaponReadied/#weaponreadied","text":"This event is called when a weapon is readied, and pairs with the weaponUnreadied event. It can be used to reliably tell if a specific weapon is readied for attack. This does not necessarily mean that the animation state has changed for the first time. --- @param e weaponReadiedEventData local function weaponReadiedCallback ( e ) end event . register ( \"weaponReadied\" , weaponReadiedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"weaponReadied"},{"location":"events/weaponReadied/#event-data","text":"reference ( tes3reference ): Read-only . The reference associated with the change in readied weapon. weaponStack ( tes3baseObject ): Read-only . The bundle that contains the newly readied weapon and its associated data.","title":"Event Data"},{"location":"events/weaponUnreadied/","text":"weaponUnreadied \u2693\ufe0e This event is called when a weapon is no longer readied, and pairs with the weaponReadied event. It can be used to reliably tell if a specific weapon is readied for attack. This does not necessarily mean that the animation state has changed for the first time. If an actor equips a weapon while having their hands up to attack with, the event will fire for the new weapon. --- @param e weaponUnreadiedEventData local function weaponUnreadiedCallback ( e ) end event . register ( \"weaponUnreadied\" , weaponUnreadiedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e reference ( tes3reference ): Read-only . The reference associated with the change in readied weapon.","title":"weaponUnreadied"},{"location":"events/weaponUnreadied/#weaponunreadied","text":"This event is called when a weapon is no longer readied, and pairs with the weaponReadied event. It can be used to reliably tell if a specific weapon is readied for attack. This does not necessarily mean that the animation state has changed for the first time. If an actor equips a weapon while having their hands up to attack with, the event will fire for the new weapon. --- @param e weaponUnreadiedEventData local function weaponUnreadiedCallback ( e ) end event . register ( \"weaponUnreadied\" , weaponUnreadiedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"weaponUnreadied"},{"location":"events/weaponUnreadied/#event-data","text":"reference ( tes3reference ): Read-only . The reference associated with the change in readied weapon.","title":"Event Data"},{"location":"events/weatherChangedImmediate/","text":"weatherChangedImmediate \u2693\ufe0e The weatherChangedImmediate event occurs when the currently simulated weather is changed without transition. This can occur when going from an interior to an exterior in a new region, or while resting. This can interrupt weather transitions, which means the weatherTransitionFinished event will not be triggered. --- @param e weatherChangedImmediateEventData local function weatherChangedImmediateCallback ( e ) end event . register ( \"weatherChangedImmediate\" , weatherChangedImmediateCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e to ( tes3weather ): The weather object that is the new current weather. Can be modified to change behavior.","title":"weatherChangedImmediate"},{"location":"events/weatherChangedImmediate/#weatherchangedimmediate","text":"The weatherChangedImmediate event occurs when the currently simulated weather is changed without transition. This can occur when going from an interior to an exterior in a new region, or while resting. This can interrupt weather transitions, which means the weatherTransitionFinished event will not be triggered. --- @param e weatherChangedImmediateEventData local function weatherChangedImmediateCallback ( e ) end event . register ( \"weatherChangedImmediate\" , weatherChangedImmediateCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"weatherChangedImmediate"},{"location":"events/weatherChangedImmediate/#event-data","text":"to ( tes3weather ): The weather object that is the new current weather. Can be modified to change behavior.","title":"Event Data"},{"location":"events/weatherCycled/","text":"weatherCycled \u2693\ufe0e The weatherCycled event occurs when region weathers are randomized. This occurs at an interval set by the ini option \u201cHours Between Weather Changes\u201d. Regions may select the same weather as before, and there will be no transition in this case. --- @param e weatherCycledEventData local function weatherCycledCallback ( e ) end event . register ( \"weatherCycled\" , weatherCycledCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"weatherCycled"},{"location":"events/weatherCycled/#weathercycled","text":"The weatherCycled event occurs when region weathers are randomized. This occurs at an interval set by the ini option \u201cHours Between Weather Changes\u201d. Regions may select the same weather as before, and there will be no transition in this case. --- @param e weatherCycledEventData local function weatherCycledCallback ( e ) end event . register ( \"weatherCycled\" , weatherCycledCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"weatherCycled"},{"location":"events/weatherTransitionFinished/","text":"weatherTransitionFinished \u2693\ufe0e The weatherTransitionFinished event occurs when the currently simulated weather finished transitioning to a new weather. Weather will continue transitioning in interiors, and may finish while in an interior. The transition may be interrupted at any time by the weatherChangedImmediate event, and this finish event will not be triggered. --- @param e weatherTransitionFinishedEventData local function weatherTransitionFinishedCallback ( e ) end event . register ( \"weatherTransitionFinished\" , weatherTransitionFinishedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e to ( tes3weather ): The weather object that will be transitioned to.","title":"weatherTransitionFinished"},{"location":"events/weatherTransitionFinished/#weathertransitionfinished","text":"The weatherTransitionFinished event occurs when the currently simulated weather finished transitioning to a new weather. Weather will continue transitioning in interiors, and may finish while in an interior. The transition may be interrupted at any time by the weatherChangedImmediate event, and this finish event will not be triggered. --- @param e weatherTransitionFinishedEventData local function weatherTransitionFinishedCallback ( e ) end event . register ( \"weatherTransitionFinished\" , weatherTransitionFinishedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"weatherTransitionFinished"},{"location":"events/weatherTransitionFinished/#event-data","text":"to ( tes3weather ): The weather object that will be transitioned to.","title":"Event Data"},{"location":"events/weatherTransitionImmediate/","text":"weatherTransitionImmediate \u2693\ufe0e The weatherChangedImmediate event occurs when the currently simulated weather is changed without transition. This can occur when going from an interior to an exterior in a new region, or while resting. This can interrupt weather transitions, which means the weatherTransitionFinished event will not be triggered. --- @param e weatherTransitionImmediateEventData local function weatherTransitionImmediateCallback ( e ) end event . register ( \"weatherTransitionImmediate\" , weatherTransitionImmediateCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e to ( tes3weather ): The weather object that is the new current weather.","title":"weatherTransitionImmediate"},{"location":"events/weatherTransitionImmediate/#weathertransitionimmediate","text":"The weatherChangedImmediate event occurs when the currently simulated weather is changed without transition. This can occur when going from an interior to an exterior in a new region, or while resting. This can interrupt weather transitions, which means the weatherTransitionFinished event will not be triggered. --- @param e weatherTransitionImmediateEventData local function weatherTransitionImmediateCallback ( e ) end event . register ( \"weatherTransitionImmediate\" , weatherTransitionImmediateCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"weatherTransitionImmediate"},{"location":"events/weatherTransitionImmediate/#event-data","text":"to ( tes3weather ): The weather object that is the new current weather.","title":"Event Data"},{"location":"events/weatherTransitionStarted/","text":"weatherTransitionStarted \u2693\ufe0e The weatherTransitionStarted event occurs when the currently simulated weather has started to gradually transition to a new weather. This can occur when moving between regions, or when the weather cycles. Weather will not start transitioning in interiors, but will continue transitioning, and may finish while in an interior. The transition may be interrupted at any time by the weatherChangedImmediate event, and the weatherTransitionFinished event will not occur. --- @param e weatherTransitionStartedEventData local function weatherTransitionStartedCallback ( e ) end event . register ( \"weatherTransitionStarted\" , weatherTransitionStartedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e from ( tes3weather ): Read-only . The weather object that is the current weather. to ( tes3weather ): The weather object that will be transitioned to.","title":"weatherTransitionStarted"},{"location":"events/weatherTransitionStarted/#weathertransitionstarted","text":"The weatherTransitionStarted event occurs when the currently simulated weather has started to gradually transition to a new weather. This can occur when moving between regions, or when the weather cycles. Weather will not start transitioning in interiors, but will continue transitioning, and may finish while in an interior. The transition may be interrupted at any time by the weatherChangedImmediate event, and the weatherTransitionFinished event will not occur. --- @param e weatherTransitionStartedEventData local function weatherTransitionStartedCallback ( e ) end event . register ( \"weatherTransitionStarted\" , weatherTransitionStartedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"weatherTransitionStarted"},{"location":"events/weatherTransitionStarted/#event-data","text":"from ( tes3weather ): Read-only . The weather object that is the current weather. to ( tes3weather ): The weather object that will be transitioned to.","title":"Event Data"},{"location":"guides/creating-a-mod/","text":"Creating a Mod \u2693\ufe0e This guide will demonstrate the most basic steps of creating a mod for The Elder Scrolls III: Morrowind using MWSE 2.1 Lua. To facilitate this, this guide will explain how to create a mod that displays a unique messagebox every time the player draws a two-handed weapon. Development Workflow \u2693\ufe0e A Development Workflow is the environment and processes used to facilitate software development. This guide assumes that you have setup a development environment. If you have not set up a development environment, or do not know how to, please refer to the Development Workflow guide to set one up. Introduction to the Lua Scripting Language \u2693\ufe0e If you have basic knowledge of the Lua scripting language, you may skip this section. If you are not familiar with the Lua scripting language, please take a moment to read the Introduction to Lua guide. Introduction to Event Based Programming \u2693\ufe0e If you have basic knowledge of event based programming, you may skip this section. If you are not familiar with event based programming, please take a moment to read the Introduction to Event Based Programming guide. Creating the Mod File Structure \u2693\ufe0e Now that you have setup a development workflow, you are ready to create a mod. Next, the folder structure for MWSE must be created: In the Morrowind \"Data Files\" directory, create a folder named \"MWSE\". This is the folder that contains any MWSE code. In \"MWSE\", create a folder named \"mods\". This is the folder that contains any MWSE mod code. Other options include \"lib\" for user-made frameworks and libraries. In \"mods\", create a folder named \"MWSE-Guide-Demo\". This is the folder that contains the MWSE code for our mod. This folder can include spaces in the folder name. In a normal Morrowind install, you may see other folders here. These represent other mod's code files. The newly created folder structure should look like this: Morrowind\\Data Files\\MWSE\\mods\\MWSE-Guide-Demo Now that the folder structure is complete, you must create a code file to run your code in. In \"MWSE-Guide-Demo\", create a file named main.lua . This file will contain the Lua code for the mod. The main file of your mod must be named main.lua . This file should configure and initialize any other code files in your mod. The name main.lua is required by MWSE. Registering an Event \u2693\ufe0e The Morrowind game engine, through MWSE, provides a variety of events that can be used to trigger code. An event is a trigger that will notify any registered functions of it's occurrence. For example, consider the loaded event. This event is triggered whenever the player loads a save game. If you register a function to be called when this event occurs, your function will be called when the player loads a save game. By cleverly using Morrowind's events, powerful functionality can be created. In our file, main.lua , we will register an event to trigger our code. It is convention to register your mod's events inside of another event, the initialized event. The initialized event represents the point when the game and it's mods have been loaded. You can imagine this as the point which the title screen is first shown. So, first, we will create the initialized event. 1 2 3 4 5 6 7 8 9 -- The function to call on the initialized event. local function initialized () -- 1. -- Print a \"Ready!\" statement to the MWSE.log file. print ( \"[MWSE Guide Demo: INFO] MWSE Guide Demo Initialized\" ) --2. end -- Register our initialized function to the initialized event. event . register ( \"initialized\" , initialized ) --3. Declare a function to call whenever the initialized event is triggered. It is convention to print a statement stating your mod is initialized at the end of your initialized event function. This is used for debugging. Register our initialized function to the initialized event. Now, we want to register an event for what we are actually interested in. In this guide, we are creating a mod that displays a unique messagebox every time the player draws a two-handed weapon. There is an event for that! It is called the weaponReadied event. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 -- The function to call on the showMessageboxOnWeaponReadied event. local function showMessageboxOnWeaponReadied ( e ) -- 1. tes3 . messageBox ( \"I just drew some weapon.\" ) -- 2. end -- The function to call on the initialized event. local function initialized () -- Register our function to the onReadied event. event . register ( \"weaponReadied\" , showMessageboxOnWeaponReadied ) --3. -- Print a \"Ready!\" statement to the MWSE.log file. print ( \"[MWSE Guide Demo: INFO] MWSE Guide Demo Initialized\" ) end -- Register our initialized function to the initialized event. event . register ( \"initialized\" , initialized ) Declare a function to call whenever the weaponReadied event is triggered. Add a simple messagebox command. Register our showMessageboxOnWeaponReadied function to the weaponReadied event. At this point, the mod can be tested to confirm the events are set up correctly. To do this, follow the workflow described at the beginning of this guide. When you draw your weapon in-game, you should see a messagebox popup! The details of which events are available and what event data is exposed to them can be found on the events page. Validating the Event & Showing a Messagebox \u2693\ufe0e Now that the required events have been set up, the showMessageboxOnWeaponReadied function should be updated to restrict the types of actions that our code applies to. For the purposes of this guide, the function will only apply to two-handed weapons, and only to the player. The updated function is as follows: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 -- The function to call on the showMessageboxOnWeaponReadied event. local function showMessageboxOnWeaponReadied ( e ) -- Exit the function is the actor is not the player. if ( e . reference ~= tes3 . player ) then --1. return end -- Locally store the weapon reference being readied in the event. local weaponStack = e . weaponStack --2. -- Check that the reference exists and the reference object is a two-handed weapon. if ( weaponStack and weaponStack . object . isTwoHanded ) then --3. -- Print our statement. tes3 . messageBox ( \"I just drew \" .. weaponStack . object . name .. \", destroyer of worlds!\" ) --4. end end We must check that the event was triggered by the player. Without this step, the code would be executed for all actors, including NPCs and creatures! e.reference is an property of the weaponedReadied event. tes3.player is an easy way to access the player reference. Store a copy of the weaponStack reference in a local variable to prevent typing e.weaponStack more than once. The first part of this if condition checks that the reference exists. This should be done to prevent null reference exceptions. The second part of this if condition performs our validation: it ensures that the weapon being readied is a two-handed weapon. Show a messagebox with some custom object information. .name is available on any object. The mod should be tested again. When drawing a two-handed weapon, you should now see a custom messagebox! Conclusion \u2693\ufe0e This guide provided a simple introduction to modding The Elder Scrolls III: Morrowind using MWSE 2.1 Lua. This guide: explained the required folder structure to create a MWSE-Lua mod. explained the basics of event registration and callbacks. explained how to implement some basic logic in an event callback. At this point, you can continue reading the MWSE-Lua documentation. Documentation is constantly being improved upon, so ask a question in the Morrowind Modding Discord if you need help. Here is the final code in main.lua for the demo mod: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 -- The function to call on the showMessageboxOnWeaponReadied event. local function showMessageboxOnWeaponReadied ( e ) -- Exit the function is the actor is not the player. if ( e . reference ~= tes3 . player ) then return end -- Locally store the weapon reference being readied in the event. local weaponStack = e . weaponStack -- Check that the reference exists and the reference object is a two-handed weapon. if ( weaponStack and weaponStack . object . isTwoHanded ) then -- Print our statement. tes3 . messageBox ( \"I just drew \" .. weaponStack . object . name .. \", destroyer of worlds!\" ) end end -- The function to call on the initialized event. local function initialized () -- Register our function to the onReadied event. event . register ( \"weaponReadied\" , showMessageboxOnWeaponReadied ) -- Print a \"Ready!\" statement to the MWSE.log file. print ( \"[MWSE Guide Demo: INFO] MWSE Guide Demo Initialized\" ) end -- Register our initialized function to the initialized event. event . register ( \"initialized\" , initialized )","title":"Creating a Mod"},{"location":"guides/creating-a-mod/#creating-a-mod","text":"This guide will demonstrate the most basic steps of creating a mod for The Elder Scrolls III: Morrowind using MWSE 2.1 Lua. To facilitate this, this guide will explain how to create a mod that displays a unique messagebox every time the player draws a two-handed weapon.","title":"Creating a Mod"},{"location":"guides/creating-a-mod/#development-workflow","text":"A Development Workflow is the environment and processes used to facilitate software development. This guide assumes that you have setup a development environment. If you have not set up a development environment, or do not know how to, please refer to the Development Workflow guide to set one up.","title":"Development Workflow"},{"location":"guides/creating-a-mod/#introduction-to-the-lua-scripting-language","text":"If you have basic knowledge of the Lua scripting language, you may skip this section. If you are not familiar with the Lua scripting language, please take a moment to read the Introduction to Lua guide.","title":"Introduction to the Lua Scripting Language"},{"location":"guides/creating-a-mod/#introduction-to-event-based-programming","text":"If you have basic knowledge of event based programming, you may skip this section. If you are not familiar with event based programming, please take a moment to read the Introduction to Event Based Programming guide.","title":"Introduction to Event Based Programming"},{"location":"guides/creating-a-mod/#creating-the-mod-file-structure","text":"Now that you have setup a development workflow, you are ready to create a mod. Next, the folder structure for MWSE must be created: In the Morrowind \"Data Files\" directory, create a folder named \"MWSE\". This is the folder that contains any MWSE code. In \"MWSE\", create a folder named \"mods\". This is the folder that contains any MWSE mod code. Other options include \"lib\" for user-made frameworks and libraries. In \"mods\", create a folder named \"MWSE-Guide-Demo\". This is the folder that contains the MWSE code for our mod. This folder can include spaces in the folder name. In a normal Morrowind install, you may see other folders here. These represent other mod's code files. The newly created folder structure should look like this: Morrowind\\Data Files\\MWSE\\mods\\MWSE-Guide-Demo Now that the folder structure is complete, you must create a code file to run your code in. In \"MWSE-Guide-Demo\", create a file named main.lua . This file will contain the Lua code for the mod. The main file of your mod must be named main.lua . This file should configure and initialize any other code files in your mod. The name main.lua is required by MWSE.","title":"Creating the Mod File Structure"},{"location":"guides/creating-a-mod/#registering-an-event","text":"The Morrowind game engine, through MWSE, provides a variety of events that can be used to trigger code. An event is a trigger that will notify any registered functions of it's occurrence. For example, consider the loaded event. This event is triggered whenever the player loads a save game. If you register a function to be called when this event occurs, your function will be called when the player loads a save game. By cleverly using Morrowind's events, powerful functionality can be created. In our file, main.lua , we will register an event to trigger our code. It is convention to register your mod's events inside of another event, the initialized event. The initialized event represents the point when the game and it's mods have been loaded. You can imagine this as the point which the title screen is first shown. So, first, we will create the initialized event. 1 2 3 4 5 6 7 8 9 -- The function to call on the initialized event. local function initialized () -- 1. -- Print a \"Ready!\" statement to the MWSE.log file. print ( \"[MWSE Guide Demo: INFO] MWSE Guide Demo Initialized\" ) --2. end -- Register our initialized function to the initialized event. event . register ( \"initialized\" , initialized ) --3. Declare a function to call whenever the initialized event is triggered. It is convention to print a statement stating your mod is initialized at the end of your initialized event function. This is used for debugging. Register our initialized function to the initialized event. Now, we want to register an event for what we are actually interested in. In this guide, we are creating a mod that displays a unique messagebox every time the player draws a two-handed weapon. There is an event for that! It is called the weaponReadied event. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 -- The function to call on the showMessageboxOnWeaponReadied event. local function showMessageboxOnWeaponReadied ( e ) -- 1. tes3 . messageBox ( \"I just drew some weapon.\" ) -- 2. end -- The function to call on the initialized event. local function initialized () -- Register our function to the onReadied event. event . register ( \"weaponReadied\" , showMessageboxOnWeaponReadied ) --3. -- Print a \"Ready!\" statement to the MWSE.log file. print ( \"[MWSE Guide Demo: INFO] MWSE Guide Demo Initialized\" ) end -- Register our initialized function to the initialized event. event . register ( \"initialized\" , initialized ) Declare a function to call whenever the weaponReadied event is triggered. Add a simple messagebox command. Register our showMessageboxOnWeaponReadied function to the weaponReadied event. At this point, the mod can be tested to confirm the events are set up correctly. To do this, follow the workflow described at the beginning of this guide. When you draw your weapon in-game, you should see a messagebox popup! The details of which events are available and what event data is exposed to them can be found on the events page.","title":"Registering an Event"},{"location":"guides/creating-a-mod/#validating-the-event-showing-a-messagebox","text":"Now that the required events have been set up, the showMessageboxOnWeaponReadied function should be updated to restrict the types of actions that our code applies to. For the purposes of this guide, the function will only apply to two-handed weapons, and only to the player. The updated function is as follows: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 -- The function to call on the showMessageboxOnWeaponReadied event. local function showMessageboxOnWeaponReadied ( e ) -- Exit the function is the actor is not the player. if ( e . reference ~= tes3 . player ) then --1. return end -- Locally store the weapon reference being readied in the event. local weaponStack = e . weaponStack --2. -- Check that the reference exists and the reference object is a two-handed weapon. if ( weaponStack and weaponStack . object . isTwoHanded ) then --3. -- Print our statement. tes3 . messageBox ( \"I just drew \" .. weaponStack . object . name .. \", destroyer of worlds!\" ) --4. end end We must check that the event was triggered by the player. Without this step, the code would be executed for all actors, including NPCs and creatures! e.reference is an property of the weaponedReadied event. tes3.player is an easy way to access the player reference. Store a copy of the weaponStack reference in a local variable to prevent typing e.weaponStack more than once. The first part of this if condition checks that the reference exists. This should be done to prevent null reference exceptions. The second part of this if condition performs our validation: it ensures that the weapon being readied is a two-handed weapon. Show a messagebox with some custom object information. .name is available on any object. The mod should be tested again. When drawing a two-handed weapon, you should now see a custom messagebox!","title":"Validating the Event &amp; Showing a Messagebox"},{"location":"guides/creating-a-mod/#conclusion","text":"This guide provided a simple introduction to modding The Elder Scrolls III: Morrowind using MWSE 2.1 Lua. This guide: explained the required folder structure to create a MWSE-Lua mod. explained the basics of event registration and callbacks. explained how to implement some basic logic in an event callback. At this point, you can continue reading the MWSE-Lua documentation. Documentation is constantly being improved upon, so ask a question in the Morrowind Modding Discord if you need help. Here is the final code in main.lua for the demo mod: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 -- The function to call on the showMessageboxOnWeaponReadied event. local function showMessageboxOnWeaponReadied ( e ) -- Exit the function is the actor is not the player. if ( e . reference ~= tes3 . player ) then return end -- Locally store the weapon reference being readied in the event. local weaponStack = e . weaponStack -- Check that the reference exists and the reference object is a two-handed weapon. if ( weaponStack and weaponStack . object . isTwoHanded ) then -- Print our statement. tes3 . messageBox ( \"I just drew \" .. weaponStack . object . name .. \", destroyer of worlds!\" ) end end -- The function to call on the initialized event. local function initialized () -- Register our function to the onReadied event. event . register ( \"weaponReadied\" , showMessageboxOnWeaponReadied ) -- Print a \"Ready!\" statement to the MWSE.log file. print ( \"[MWSE Guide Demo: INFO] MWSE Guide Demo Initialized\" ) end -- Register our initialized function to the initialized event. event . register ( \"initialized\" , initialized )","title":"Conclusion"},{"location":"guides/development-workflows/","text":"Development Workflows \u2693\ufe0e This guide will demonstrate how to set up your workflow for modding The Elder Scrolls III: Morrowind using MWSE-Lua. A development workflow is the environment and processes used to facilitate software development. There are many ways that you can develop MWSE-Lua mods. This guide will show you how to to use Visual Studio Code to get syntax highlighting, autocompletion, and doc integration. It will also show you how to use a simple install, Wrye Mash, or Mod Organizer 2 to work on your mods. Summary Want to simply get to work? Open the Data Files\\MWSE folder in Visual Studio Code . Install the recommended plugins MWSE suggests in that workspace. You're good to go. Requirements \u2693\ufe0e All workflows require an installation of Visual Studio Code . After it is installed, we will also need some Lua-focused extensions. You will also need to make sure that MWSE is up to date. Install MWSE and run MWSE-Update. The simplest way to install these extensions is to open the Data Files\\MWSE folder in Visual Studio Code using File > Open Folder . A prompt should show up to install a few extensions. Other editors can be used if desired, but little support will be offered. All MWSE-Lua content is in simple text files, and any text editor can be used. However, MWSE has only generated meta files for autocompletion with the suggested Visual Studio Code extension in mind. Workflows \u2693\ufe0e Simple \u2693\ufe0e The simplest workflow is already complete for you. There's nothing extra to download, simple open Note This workflow has some drawbacks. If you develop your mods directly in your Morrowind-Dev install, you have to be aware of other mod installations to prevent conflicts during testing. Wrye Mash \u2693\ufe0e A advanced development environment uses Wrye Mash to manage your mod. To setup this environment, do the following: Create a clean Morrowind install, Morrowind-Dev. Install MWSE and all its requirements. Be sure to run MWSE-Update.exe to get the latest version. Install Wrye Mash . Configure Wrye Mash to use your Morrowind-Dev install as the Morrowind directory. Configure Wrye Mash to use your development folder as the mod directory. This can be any location on your computer where you want to store your development files. Open the Data Files\\MWSE folder in Visual Studio Code . To use this environment to develop mods while maintaining a clean install, you can do the following: Make changes as needed to your code. Open Wrye Mash. If you created or deleted files as part of your code changes, use Wrye Mash's Refresh Data tool to reload the install files for your mod. Install your updated mod using Wrye Mash. Start Morrowind and complete testing as needed. Close Morrowind. Uninstall your updated mod using Wrye Mash. This workflow ensures that you maintain a clean Morrowind-Dev install, do not have mod conflicts during testing, and are always testing with the most up-to-date files. Other Recommendations \u2693\ufe0e Lua Formatting Configuration \u2693\ufe0e One of the recommended plugins ( vscode-lua-format ) allows the formatting of lua code. Some bits of this may want to be customized. To do so, create a Data Files\\MWSE\\.lua-format file. Information on the style options can be found here . Below are some preferred formatting config files for developers. NullCascade's Styling column_limit: 120 indent_width: 1 use_tab: true tab_width: 4 continuation_indent_width: 0 spaces_before_call: 1 keep_simple_control_block_one_line: false keep_simple_function_one_line: false align_args: true break_after_functioncall_lp: false break_before_functioncall_rp: false spaces_inside_functioncall_parens: false spaces_inside_functiondef_parens: false align_parameter: true chop_down_parameter: false break_after_functiondef_lp: false break_before_functiondef_rp: false align_table_field: true break_after_table_lb: true break_before_table_rb: true chop_down_table: true chop_down_kv_table: true table_sep: \",\" column_table_limit: 120 extra_sep_at_table_end: true spaces_inside_table_braces: true break_after_operator: true double_quote_to_single_quote: false single_quote_to_double_quote: false spaces_around_equals_in_field: true line_breaks_after_function_body: 1 line_separator: input","title":"Development Workflows"},{"location":"guides/development-workflows/#development-workflows","text":"This guide will demonstrate how to set up your workflow for modding The Elder Scrolls III: Morrowind using MWSE-Lua. A development workflow is the environment and processes used to facilitate software development. There are many ways that you can develop MWSE-Lua mods. This guide will show you how to to use Visual Studio Code to get syntax highlighting, autocompletion, and doc integration. It will also show you how to use a simple install, Wrye Mash, or Mod Organizer 2 to work on your mods. Summary Want to simply get to work? Open the Data Files\\MWSE folder in Visual Studio Code . Install the recommended plugins MWSE suggests in that workspace. You're good to go.","title":"Development Workflows"},{"location":"guides/development-workflows/#requirements","text":"All workflows require an installation of Visual Studio Code . After it is installed, we will also need some Lua-focused extensions. You will also need to make sure that MWSE is up to date. Install MWSE and run MWSE-Update. The simplest way to install these extensions is to open the Data Files\\MWSE folder in Visual Studio Code using File > Open Folder . A prompt should show up to install a few extensions. Other editors can be used if desired, but little support will be offered. All MWSE-Lua content is in simple text files, and any text editor can be used. However, MWSE has only generated meta files for autocompletion with the suggested Visual Studio Code extension in mind.","title":"Requirements"},{"location":"guides/development-workflows/#workflows","text":"","title":"Workflows"},{"location":"guides/development-workflows/#simple","text":"The simplest workflow is already complete for you. There's nothing extra to download, simple open Note This workflow has some drawbacks. If you develop your mods directly in your Morrowind-Dev install, you have to be aware of other mod installations to prevent conflicts during testing.","title":"Simple"},{"location":"guides/development-workflows/#wrye-mash","text":"A advanced development environment uses Wrye Mash to manage your mod. To setup this environment, do the following: Create a clean Morrowind install, Morrowind-Dev. Install MWSE and all its requirements. Be sure to run MWSE-Update.exe to get the latest version. Install Wrye Mash . Configure Wrye Mash to use your Morrowind-Dev install as the Morrowind directory. Configure Wrye Mash to use your development folder as the mod directory. This can be any location on your computer where you want to store your development files. Open the Data Files\\MWSE folder in Visual Studio Code . To use this environment to develop mods while maintaining a clean install, you can do the following: Make changes as needed to your code. Open Wrye Mash. If you created or deleted files as part of your code changes, use Wrye Mash's Refresh Data tool to reload the install files for your mod. Install your updated mod using Wrye Mash. Start Morrowind and complete testing as needed. Close Morrowind. Uninstall your updated mod using Wrye Mash. This workflow ensures that you maintain a clean Morrowind-Dev install, do not have mod conflicts during testing, and are always testing with the most up-to-date files.","title":"Wrye Mash"},{"location":"guides/development-workflows/#other-recommendations","text":"","title":"Other Recommendations"},{"location":"guides/development-workflows/#lua-formatting-configuration","text":"One of the recommended plugins ( vscode-lua-format ) allows the formatting of lua code. Some bits of this may want to be customized. To do so, create a Data Files\\MWSE\\.lua-format file. Information on the style options can be found here . Below are some preferred formatting config files for developers. NullCascade's Styling column_limit: 120 indent_width: 1 use_tab: true tab_width: 4 continuation_indent_width: 0 spaces_before_call: 1 keep_simple_control_block_one_line: false keep_simple_function_one_line: false align_args: true break_after_functioncall_lp: false break_before_functioncall_rp: false spaces_inside_functioncall_parens: false spaces_inside_functiondef_parens: false align_parameter: true chop_down_parameter: false break_after_functiondef_lp: false break_before_functiondef_rp: false align_table_field: true break_after_table_lb: true break_before_table_rb: true chop_down_table: true chop_down_kv_table: true table_sep: \",\" column_table_limit: 120 extra_sep_at_table_end: true spaces_inside_table_braces: true break_after_operator: true double_quote_to_single_quote: false single_quote_to_double_quote: false spaces_around_equals_in_field: true line_breaks_after_function_body: 1 line_separator: input","title":"Lua Formatting Configuration"},{"location":"guides/introduction-to-event-based-programming/","text":"Introduction to Event Based Programming \u2693\ufe0e Event Based Programming, also known as Event Driven Programming or Event Driven Architecture, is an architectural design where code is executed in response to the triggering of an event, also known as a notification, in a software system. A practical example of this is this website. If you click a button on this website, something happens. In other words, your action, clicking on a button, triggers an event. More generally, an action starts a chain of events that results in some other action occurring. This architectural design is the means through which mods can be made for Morrowind using the MWSE-Lua API. Event Based Programming In Context \u2693\ufe0e MWSE provides a variety of events that can be used to execute code. The details of which events are available and what event data is exposed to them can be found on the events page. For example, consider the loaded event. This event occurs after a save game has been loaded. When you register a function for this event, your function will be executed when the event occurs. MWSE will automatically handle triggering the event. All you have to do is register your code to be executed. Here is an example of how to register a function for the loaded event: 1 2 3 4 5 6 7 -- The function to call on the loaded event. local function loadedHandler () -- Execute our code. end -- Register our loadedHandler function to the loaded event. event . register ( \"loaded\" , loadedHandler ) By registering functions to be executed on certain events, powerful functions that extend, override, or alter game logic can be created. Event Filtering \u2693\ufe0e Whenever you register your function for an event, it is executed every time the event occurs. This is not always what you want. For example, you may want to register a function for the keyDown event, but only have your code trigger when a certain key is pressed. You can use event filters for this. 1 2 -- Filter by the scan code to get Z key presses only. event . register ( \"key\" , myOnKeyCallback , { filter = tes3 . scanCode . z } ) Different filters can be applied to different events. Please refer to the documentation for the event that you want to filter for more information. Priority \u2693\ufe0e The order in which functions registered for the same event are executed can be controlled by providing 'priority' argument. 1 event . register ( \"activate\" , onActivateObject , { priority = - 111 }); Functions registered with higher priority will run first. Priority defaults to 0 if the argument is not provided. Conclusion \u2693\ufe0e This guide introduced Event Based Programming and explained some aspects of it in relation to MWSE. This guide also explained how to use event filtering when registering events in MWSE. For more in-depth documentation on Event Based Programming, please refer to this Event Based Programming article, or other external sources.","title":"Introduction to Event Based Programming"},{"location":"guides/introduction-to-event-based-programming/#introduction-to-event-based-programming","text":"Event Based Programming, also known as Event Driven Programming or Event Driven Architecture, is an architectural design where code is executed in response to the triggering of an event, also known as a notification, in a software system. A practical example of this is this website. If you click a button on this website, something happens. In other words, your action, clicking on a button, triggers an event. More generally, an action starts a chain of events that results in some other action occurring. This architectural design is the means through which mods can be made for Morrowind using the MWSE-Lua API.","title":"Introduction to Event Based Programming"},{"location":"guides/introduction-to-event-based-programming/#event-based-programming-in-context","text":"MWSE provides a variety of events that can be used to execute code. The details of which events are available and what event data is exposed to them can be found on the events page. For example, consider the loaded event. This event occurs after a save game has been loaded. When you register a function for this event, your function will be executed when the event occurs. MWSE will automatically handle triggering the event. All you have to do is register your code to be executed. Here is an example of how to register a function for the loaded event: 1 2 3 4 5 6 7 -- The function to call on the loaded event. local function loadedHandler () -- Execute our code. end -- Register our loadedHandler function to the loaded event. event . register ( \"loaded\" , loadedHandler ) By registering functions to be executed on certain events, powerful functions that extend, override, or alter game logic can be created.","title":"Event Based Programming In Context"},{"location":"guides/introduction-to-event-based-programming/#event-filtering","text":"Whenever you register your function for an event, it is executed every time the event occurs. This is not always what you want. For example, you may want to register a function for the keyDown event, but only have your code trigger when a certain key is pressed. You can use event filters for this. 1 2 -- Filter by the scan code to get Z key presses only. event . register ( \"key\" , myOnKeyCallback , { filter = tes3 . scanCode . z } ) Different filters can be applied to different events. Please refer to the documentation for the event that you want to filter for more information.","title":"Event Filtering"},{"location":"guides/introduction-to-event-based-programming/#priority","text":"The order in which functions registered for the same event are executed can be controlled by providing 'priority' argument. 1 event . register ( \"activate\" , onActivateObject , { priority = - 111 }); Functions registered with higher priority will run first. Priority defaults to 0 if the argument is not provided.","title":"Priority"},{"location":"guides/introduction-to-event-based-programming/#conclusion","text":"This guide introduced Event Based Programming and explained some aspects of it in relation to MWSE. This guide also explained how to use event filtering when registering events in MWSE. For more in-depth documentation on Event Based Programming, please refer to this Event Based Programming article, or other external sources.","title":"Conclusion"},{"location":"guides/introduction-to-lua/","text":"Introduction to Lua \u2693\ufe0e This guide will introduce the Lua scripting language, which is used when developing mods for The Elder Scrolls III: Morrowind using MWSE 2.1 Lua. MWSE uses LuaJIT 2.1.0-beta3, which contains functionality from up to version 5.3 of the Lua scripting language. Lua In Context \u2693\ufe0e The following information is based on information from the Lua 5.1 Reference Manual . Lua is an extension programming language. It can be executed by other, traditional languages, such as C, C++, and C#. In the context of MWSE, this means that the MWSE executable can load Lua code and execute it. This ability allows modders to use Lua to create powerful mods for Morrowind, accomplishing things that were previously impossible. One important detail of Lua is that, unlike other languages, it does not have a Main method. This means that it has no mechanism through which to execute itself. In other words, it can only be executed if embedded in another program, called a host client . In the context of MWSE, MWSE is the host client. However, MWSE does require a files named main.lua to execute your code. The MWSE executable will load any file named main.lua and execute the code within. In practice, this means that the main.lua file performs the same role as a traditional main method in C or C++: it provides an entry point into your code. Specifically, it is used to register and initialize your mod. Unlike traditional main methods in C or C++, there are no required functions for main.lua . The file can consist of anything or nothing. However, registering an event is usually required to develop a mod. Conclusion \u2693\ufe0e This article introduced the Lua scripting language and explained it in the context of MWSE. For in-depth documentation of the Lua scripting language, please refer to the Lua 5.1 Reference Manual .","title":"Introduction to Lua"},{"location":"guides/introduction-to-lua/#introduction-to-lua","text":"This guide will introduce the Lua scripting language, which is used when developing mods for The Elder Scrolls III: Morrowind using MWSE 2.1 Lua. MWSE uses LuaJIT 2.1.0-beta3, which contains functionality from up to version 5.3 of the Lua scripting language.","title":"Introduction to Lua"},{"location":"guides/introduction-to-lua/#lua-in-context","text":"The following information is based on information from the Lua 5.1 Reference Manual . Lua is an extension programming language. It can be executed by other, traditional languages, such as C, C++, and C#. In the context of MWSE, this means that the MWSE executable can load Lua code and execute it. This ability allows modders to use Lua to create powerful mods for Morrowind, accomplishing things that were previously impossible. One important detail of Lua is that, unlike other languages, it does not have a Main method. This means that it has no mechanism through which to execute itself. In other words, it can only be executed if embedded in another program, called a host client . In the context of MWSE, MWSE is the host client. However, MWSE does require a files named main.lua to execute your code. The MWSE executable will load any file named main.lua and execute the code within. In practice, this means that the main.lua file performs the same role as a traditional main method in C or C++: it provides an entry point into your code. Specifically, it is used to register and initialize your mod. Unlike traditional main methods in C or C++, there are no required functions for main.lua . The file can consist of anything or nothing. However, registering an event is usually required to develop a mod.","title":"Lua In Context"},{"location":"guides/introduction-to-lua/#conclusion","text":"This article introduced the Lua scripting language and explained it in the context of MWSE. For in-depth documentation of the Lua scripting language, please refer to the Lua 5.1 Reference Manual .","title":"Conclusion"},{"location":"guides/introduction/","text":"Introduction \u2693\ufe0e Welcome to the MWSE-Lua interface. Starting in MWSE 2.1, modders are able to create powerful, event-driven modifications to The Elder Scrolls III: Morrowind using the Lua scripting language. Unlike traditional mwscript, Lua scripting is responsive. Instead of checking every frame to see if an object is being activated, a mod might register to see if their reference was activated. This introduction covers the surface of the different components important to scripting with MWSE-Lua. Lua files do not reside in esms/esps, but rather live in the Data Files\\MWSE directory. Lua Scripting Language \u2693\ufe0e This guide is not meant to be a comprehensive introduction to the Lua language. Its syntax is simple. The following code block demonstrates what the language looks like: -- Define a simple function that takes a single parameter. local function myFunctionName ( firstFunctionParameter ) -- Print to the MWSE log, with the value that was passed. mwse . log ( \"Called my function with parameter = %s\" , firstFunctionParameter ) end -- Print \"foo\" to the MWSE log, prefixed with the function above. myFunctionName ( \"foo\" ) For a broader introduction to the Lua scripting language, refer to the Introduction to Lua guide. Morrowind Object Types \u2693\ufe0e MWSE provides many bindings to more directly manipulate the object types that the Morrowind engine uses. In this example, we find the skooma object, and rename it No-No Juice . -- Tell MWSE that we want to find the skooma object. local skooma = tes3 . getObject ( \"potion_skooma_01\" ) -- Set the skooma object's name. skooma . name = \"No-No Juice\" A complete list of exposed TES3 types and their associated properties/functions can be seen on the respective tes3 types _ page. Events \u2693\ufe0e Events are the primary way in which script modules interact with the game. There are many event hooks, covering everything from player level up to object collisions to world activations. Using an event typically looks like this: -- Define our callback, which will get called when the event happens. local function myKeyEvent ( eventData ) if ( eventData . pressed ) then mwse . log ( \"Key #%d was pressed.\" , eventData . keyCode ) else mwse . log ( \"Key #%d was released.\" , eventData . keyCode ) end end -- Tell MWSE that we want our callback to be invoked when a key is pressed. event . register ( \"key\" , myKeyEvent ) We can also pass filters to events. For the key event, the filter is the key that was pressed/released. -- If we use this instead of the above registration, we filter to key 22 (U). event . register ( \"key\" , myKeyEvent , { filter = 22 }) For a broader introduction to event based programming, refer to the Introduction to Event Based Programming guide. The details of which events are available and what event data is exposed to them can be found on the events page. Support Libraries \u2693\ufe0e On top of all this are support libraries to help make modding easier. An example library is timer , which helps to manage time-based operations. -- Define the function we want to call when our timer completes. local function myTimerCallback () tes3 . messageBox ({ message = \"My timer completed!\" }) end -- Start a timer that finishes after 5 seconds. -- When it does finish it will call the above function. timer . start ( 5 , myTimerCallback ) An Unsandboxed World \u2693\ufe0e MWSE does not do any sandboxing for mods. This enables clever innovations, like Sky Diversity , without the need for externally running programs. This also means that MWSE mods can bring in any lua modules they wish to package. Additionally, they can bring in native code -- allowing powerful extensions that Oblivion and Skyrim have had for years. Mod Initialization Scripts \u2693\ufe0e So how do you access all this, and start getting your fingers into the event systems? Unlike vanilla mwscript, Lua scripts are not explicitly restricted to an actively running game. They are also not restricted to esp files -- many MWSE-Lua mods do not require an esp (though may choose to see if an esp is active for an easier user experience). By placing a file with the name main.lua inside the lua folder or any of its subdirectories, that file will get executed when the game is being initialized (e.g. before any esm/esp files are accessed). For example, with the file Data Files\\MWSE\\mods\\demo\\main.lua in place, it will get executed. With the following contents, it will ensure that when a save game is loaded, we get the save game filename printed to our log. local function myLoadedGameCallback ( e ) mwse . log ( \"Loaded game: %s\" , e . filename ) end event . register ( \"loaded\" , myLoadedGameCallback ) Script Overrides and OpenMW Semi-Compatibility \u2693\ufe0e Another feature of MWSE-Lua is the ability to override the normal execution of mwscript. This means that if we have a script in an esp file called myScript we can do the following code to override its behavior: local function myOverrideFunction ( params ) tes3 . messageBox ( string.format ( \"I'm running script '%s' on reference '%s' from Lua, not mwscript!\" , params . script . id , params . reference . id )) end -- Use the above function instead of mwscript logic. mwse . overrideScript ( \"myScript\" , myOverrideFunction ) OpenMW will not be adding compatibility with MWSE mods, legacy or Lua-based. But script overrides exposes a way for modders to write mods that have extended MWSE functionality without causing issues in OpenMW. Basic functionality can be kept to mwscript, while the script can be overriden to enable advanced functionality using Lua. Getting Started \u2693\ufe0e Not sure where to start? Take a look at setting up a Development Workflow , Then, try the Creating a Mod guide, which covers the creation of a new mod from start to finish using MWSE-Lua.","title":"Introduction"},{"location":"guides/introduction/#introduction","text":"Welcome to the MWSE-Lua interface. Starting in MWSE 2.1, modders are able to create powerful, event-driven modifications to The Elder Scrolls III: Morrowind using the Lua scripting language. Unlike traditional mwscript, Lua scripting is responsive. Instead of checking every frame to see if an object is being activated, a mod might register to see if their reference was activated. This introduction covers the surface of the different components important to scripting with MWSE-Lua. Lua files do not reside in esms/esps, but rather live in the Data Files\\MWSE directory.","title":"Introduction"},{"location":"guides/introduction/#lua-scripting-language","text":"This guide is not meant to be a comprehensive introduction to the Lua language. Its syntax is simple. The following code block demonstrates what the language looks like: -- Define a simple function that takes a single parameter. local function myFunctionName ( firstFunctionParameter ) -- Print to the MWSE log, with the value that was passed. mwse . log ( \"Called my function with parameter = %s\" , firstFunctionParameter ) end -- Print \"foo\" to the MWSE log, prefixed with the function above. myFunctionName ( \"foo\" ) For a broader introduction to the Lua scripting language, refer to the Introduction to Lua guide.","title":"Lua Scripting Language"},{"location":"guides/introduction/#morrowind-object-types","text":"MWSE provides many bindings to more directly manipulate the object types that the Morrowind engine uses. In this example, we find the skooma object, and rename it No-No Juice . -- Tell MWSE that we want to find the skooma object. local skooma = tes3 . getObject ( \"potion_skooma_01\" ) -- Set the skooma object's name. skooma . name = \"No-No Juice\" A complete list of exposed TES3 types and their associated properties/functions can be seen on the respective tes3 types _ page.","title":"Morrowind Object Types"},{"location":"guides/introduction/#events","text":"Events are the primary way in which script modules interact with the game. There are many event hooks, covering everything from player level up to object collisions to world activations. Using an event typically looks like this: -- Define our callback, which will get called when the event happens. local function myKeyEvent ( eventData ) if ( eventData . pressed ) then mwse . log ( \"Key #%d was pressed.\" , eventData . keyCode ) else mwse . log ( \"Key #%d was released.\" , eventData . keyCode ) end end -- Tell MWSE that we want our callback to be invoked when a key is pressed. event . register ( \"key\" , myKeyEvent ) We can also pass filters to events. For the key event, the filter is the key that was pressed/released. -- If we use this instead of the above registration, we filter to key 22 (U). event . register ( \"key\" , myKeyEvent , { filter = 22 }) For a broader introduction to event based programming, refer to the Introduction to Event Based Programming guide. The details of which events are available and what event data is exposed to them can be found on the events page.","title":"Events"},{"location":"guides/introduction/#support-libraries","text":"On top of all this are support libraries to help make modding easier. An example library is timer , which helps to manage time-based operations. -- Define the function we want to call when our timer completes. local function myTimerCallback () tes3 . messageBox ({ message = \"My timer completed!\" }) end -- Start a timer that finishes after 5 seconds. -- When it does finish it will call the above function. timer . start ( 5 , myTimerCallback )","title":"Support Libraries"},{"location":"guides/introduction/#an-unsandboxed-world","text":"MWSE does not do any sandboxing for mods. This enables clever innovations, like Sky Diversity , without the need for externally running programs. This also means that MWSE mods can bring in any lua modules they wish to package. Additionally, they can bring in native code -- allowing powerful extensions that Oblivion and Skyrim have had for years.","title":"An Unsandboxed World"},{"location":"guides/introduction/#mod-initialization-scripts","text":"So how do you access all this, and start getting your fingers into the event systems? Unlike vanilla mwscript, Lua scripts are not explicitly restricted to an actively running game. They are also not restricted to esp files -- many MWSE-Lua mods do not require an esp (though may choose to see if an esp is active for an easier user experience). By placing a file with the name main.lua inside the lua folder or any of its subdirectories, that file will get executed when the game is being initialized (e.g. before any esm/esp files are accessed). For example, with the file Data Files\\MWSE\\mods\\demo\\main.lua in place, it will get executed. With the following contents, it will ensure that when a save game is loaded, we get the save game filename printed to our log. local function myLoadedGameCallback ( e ) mwse . log ( \"Loaded game: %s\" , e . filename ) end event . register ( \"loaded\" , myLoadedGameCallback )","title":"Mod Initialization Scripts"},{"location":"guides/introduction/#script-overrides-and-openmw-semi-compatibility","text":"Another feature of MWSE-Lua is the ability to override the normal execution of mwscript. This means that if we have a script in an esp file called myScript we can do the following code to override its behavior: local function myOverrideFunction ( params ) tes3 . messageBox ( string.format ( \"I'm running script '%s' on reference '%s' from Lua, not mwscript!\" , params . script . id , params . reference . id )) end -- Use the above function instead of mwscript logic. mwse . overrideScript ( \"myScript\" , myOverrideFunction ) OpenMW will not be adding compatibility with MWSE mods, legacy or Lua-based. But script overrides exposes a way for modders to write mods that have extended MWSE functionality without causing issues in OpenMW. Basic functionality can be kept to mwscript, while the script can be overriden to enable advanced functionality using Lua.","title":"Script Overrides and OpenMW Semi-Compatibility"},{"location":"guides/introduction/#getting-started","text":"Not sure where to start? Take a look at setting up a Development Workflow , Then, try the Creating a Mod guide, which covers the creation of a new mod from start to finish using MWSE-Lua.","title":"Getting Started"},{"location":"guides/logging/","text":"Logging \u2693\ufe0e The MWSE Logger library allows you to register a logger for your mod. It provides the following features: Mod-specific log levels Change log level via MCM Log messages can be color coded according to log level (via MWSE MCM) Optional setting to print messages to a separate log file Log Levels \u2693\ufe0e Log levels are ordered as follows: TRACE , DEBUG , INFO , WARN , and ERROR . Only logs at or below the current log level will be printed to the log file. For example, if log level is set to INFO , then INFO , WARN and ERROR messages will be logged, but TRACE and DEBUG messages will not. Log Colors \u2693\ufe0e In the MWSE MCM, there is an option to enable log colors. This will display logs in different colors according to their log level when tailing the log in the console. However, it is recommended that non-modders keep this turned off, as it makes the log file harder to read in a regular text editor. Log Level Colors: \u2693\ufe0e TRACE : Bright White DEBUG : Green INFO : White WARN : Yellow ERROR : Red Registering and using your Logger \u2693\ufe0e local logger = require ( \"logging.logger\" ) local log = logger . new { name = \"Test Mod\" , logLevel = \"TRACE\" , } log : trace ( \"This is a trace message\" ) log : debug ( \"This is a debug message\" ) log : info ( \"This is an info message\" ) log : warn ( \"This is a warn message\" ) log : error ( \"This is an error message\" ) log : setLogLevel ( \"INFO\" ) Creating an MCM to control Log Level \u2693\ufe0e In your MCM config, create a dropdown with the following options: settings : createDropdown { label = \"Logging Level\" , description = \"Set the log level.\" , options = { { label = \"TRACE\" , value = \"TRACE\" }, { label = \"DEBUG\" , value = \"DEBUG\" }, { label = \"INFO\" , value = \"INFO\" }, { label = \"ERROR\" , value = \"ERROR\" }, { label = \"NONE\" , value = \"NONE\" }, }, variable = mwse . mcm . createTableVariable { id = \"logLevel\" , table = mcmConfig }, callback = function ( self ) logger : setLogLevel ( self . variable . value ) end }","title":"Logging"},{"location":"guides/logging/#logging","text":"The MWSE Logger library allows you to register a logger for your mod. It provides the following features: Mod-specific log levels Change log level via MCM Log messages can be color coded according to log level (via MWSE MCM) Optional setting to print messages to a separate log file","title":"Logging"},{"location":"guides/logging/#log-levels","text":"Log levels are ordered as follows: TRACE , DEBUG , INFO , WARN , and ERROR . Only logs at or below the current log level will be printed to the log file. For example, if log level is set to INFO , then INFO , WARN and ERROR messages will be logged, but TRACE and DEBUG messages will not.","title":"Log Levels"},{"location":"guides/logging/#log-colors","text":"In the MWSE MCM, there is an option to enable log colors. This will display logs in different colors according to their log level when tailing the log in the console. However, it is recommended that non-modders keep this turned off, as it makes the log file harder to read in a regular text editor.","title":"Log Colors"},{"location":"guides/logging/#log-level-colors","text":"TRACE : Bright White DEBUG : Green INFO : White WARN : Yellow ERROR : Red","title":"Log Level Colors:"},{"location":"guides/logging/#registering-and-using-your-logger","text":"local logger = require ( \"logging.logger\" ) local log = logger . new { name = \"Test Mod\" , logLevel = \"TRACE\" , } log : trace ( \"This is a trace message\" ) log : debug ( \"This is a debug message\" ) log : info ( \"This is an info message\" ) log : warn ( \"This is a warn message\" ) log : error ( \"This is an error message\" ) log : setLogLevel ( \"INFO\" )","title":"Registering and using your Logger"},{"location":"guides/logging/#creating-an-mcm-to-control-log-level","text":"In your MCM config, create a dropdown with the following options: settings : createDropdown { label = \"Logging Level\" , description = \"Set the log level.\" , options = { { label = \"TRACE\" , value = \"TRACE\" }, { label = \"DEBUG\" , value = \"DEBUG\" }, { label = \"INFO\" , value = \"INFO\" }, { label = \"ERROR\" , value = \"ERROR\" }, { label = \"NONE\" , value = \"NONE\" }, }, variable = mwse . mcm . createTableVariable { id = \"logLevel\" , table = mcmConfig }, callback = function ( self ) logger : setLogLevel ( self . variable . value ) end }","title":"Creating an MCM to control Log Level"},{"location":"guides/mod-config/","text":"Mod Configuration Menu \u2693\ufe0e Mods can create new GUIs. One GUI that that MWSE ships with is the Mod Configuration Menu. By registering into this system, mods can create settings pages for their mods in a place where users can easily find and manipulate them. Out of Date Information The information here is out of date, and does not use the new EasyMCM system. These docs will be updated in the future to cover EasyMCM features. Creating a Config Package \u2693\ufe0e The mod config system operates through a single package that is registered. Below is the simplest code required to get a mod's name into the mod config list: 1 2 3 4 5 6 7 8 9 10 11 12 13 -- Define our mod config package. For now, there's nothing interesting. local modConfigPackage = {} -- The callback to create the mod config GUI when our mod was clicked. function modConfigPackage . onCreate ( container ) container : createLabel ({ text = \"Hello world!\" }) end -- When the mod config menu is ready to start accepting registrations, register this mod. local function registerModConfig () mwse . registerModConfig ( \"My Awesome Mod\" , modConfigPackage ) end event . register ( \"modConfigReady\" , registerModConfig ) After loading up the game, you should see \"My Awesome Mod\" in the mod config menu, with a single \"Hello world!\" in its configuration pane. Handling Close State \u2693\ufe0e It may be desirable to put off saving config options until after the close button has been clicked, or until after the user switched to a new mod. The optional modConfigPackage.onClose callback is called in both cases. 1 2 3 4 -- The callback to do any cleanup needed when our menu is about to be destroyed. function modConfigPackage . onClose ( container ) tes3 . messageBox ( \"Goodbye!\" ) end Hiding from the Config Menu \u2693\ufe0e It may become desirable to hide a mod from the config menu. For example, you may not wish it to be displayed until after the player is in-game if settings are stored in the save game file instead of another file. This can be done by setting the modConfigPackage.hidden field to true . In the below example, we'll hide the mod from the config menu until the game has loaded. 1 2 3 4 5 6 local modConfigPackage = { hidden = true } local function enableModConfigOnLoaded () modConfigPackage . hidden = false end event . register ( \"loaded\" , enableModConfigOnLoaded )","title":"Mod Configuration Menu"},{"location":"guides/mod-config/#mod-configuration-menu","text":"Mods can create new GUIs. One GUI that that MWSE ships with is the Mod Configuration Menu. By registering into this system, mods can create settings pages for their mods in a place where users can easily find and manipulate them. Out of Date Information The information here is out of date, and does not use the new EasyMCM system. These docs will be updated in the future to cover EasyMCM features.","title":"Mod Configuration Menu"},{"location":"guides/mod-config/#creating-a-config-package","text":"The mod config system operates through a single package that is registered. Below is the simplest code required to get a mod's name into the mod config list: 1 2 3 4 5 6 7 8 9 10 11 12 13 -- Define our mod config package. For now, there's nothing interesting. local modConfigPackage = {} -- The callback to create the mod config GUI when our mod was clicked. function modConfigPackage . onCreate ( container ) container : createLabel ({ text = \"Hello world!\" }) end -- When the mod config menu is ready to start accepting registrations, register this mod. local function registerModConfig () mwse . registerModConfig ( \"My Awesome Mod\" , modConfigPackage ) end event . register ( \"modConfigReady\" , registerModConfig ) After loading up the game, you should see \"My Awesome Mod\" in the mod config menu, with a single \"Hello world!\" in its configuration pane.","title":"Creating a Config Package"},{"location":"guides/mod-config/#handling-close-state","text":"It may be desirable to put off saving config options until after the close button has been clicked, or until after the user switched to a new mod. The optional modConfigPackage.onClose callback is called in both cases. 1 2 3 4 -- The callback to do any cleanup needed when our menu is about to be destroyed. function modConfigPackage . onClose ( container ) tes3 . messageBox ( \"Goodbye!\" ) end","title":"Handling Close State"},{"location":"guides/mod-config/#hiding-from-the-config-menu","text":"It may become desirable to hide a mod from the config menu. For example, you may not wish it to be displayed until after the player is in-game if settings are stored in the save game file instead of another file. This can be done by setting the modConfigPackage.hidden field to true . In the below example, we'll hide the mod from the config menu until the game has loaded. 1 2 3 4 5 6 local modConfigPackage = { hidden = true } local function enableModConfigOnLoaded () modConfigPackage . hidden = false end event . register ( \"loaded\" , enableModConfigOnLoaded )","title":"Hiding from the Config Menu"},{"location":"guides/mod-translations/","text":"Mod Translations \u2693\ufe0e MWSE provides means to translate mods using an i18n library . With this, users can write their mods with native support for other languages, or they can write their mods in such a way that other modders can provide translation files. Hello World, Translated \u2693\ufe0e To begin, let's look at some source code that we want to enable translations for. It is a simple mod that displays a message when the player hits the Z key. The Hello World Mod\\main.lua 1 2 3 4 local function onPressZ ( e ) tes3 . messageBox ( \"Hello world!\" ) end event . register ( \"keyDown\" , onPressZ , { filter = tes3 . scanCode . z }) Here we just want to allow translators to provide a different string instead of \"Hello world!\" . To do this, we need to make an i18n folder in our project to define our language files in. For example: The Hello World Mod i18n deu.lua eng.lua fra.lua pol.lua rus.lua main.lua The Hello World Mod\\i18n\\deu.lua 1 2 3 return { [ \"Hello world!\" ] = \"Hallo Welt!\" , } The Hello World Mod\\i18n\\eng.lua 1 2 3 return { [ \"Hello world!\" ] = \"Hello world!\" , } The Hello World Mod\\i18n\\fra.lua 1 2 3 return { [ \"Hello world!\" ] = \"Bonjour le monde!\" , } The Hello World Mod\\i18n\\pol.lua 1 2 3 return { [ \"Hello world!\" ] = \"Witaj \u015bwiecie!\" , } The Hello World Mod\\i18n\\rus.lua 1 2 3 return { [ \"Hello world!\" ] = \"\u041f\u0440\u0438\u0432\u0435\u0442, \u043c\u0438\u0440!\" , } The Hello World Mod\\main.lua 1 2 3 4 5 6 local i18n = mwse . loadTranslations ( \"The Hello World Mod\" ) local function onPressZ ( e ) tes3 . messageBox ( i18n ( \"Hello world!\" )) end event . register ( \"keyDown\" , onPressZ , { filter = tes3 . scanCode . z }) This code looks pretty simple, but what is really happening here? mwse.loadTranslations(\"The Hello World Mod\") loads content from The Hello World Mod\\i18n\\eng.lua as well as an optional additional file, based on the player's game language. This can be deu.lua , fra.lua , or rus.lua . When the i18n translation result is called, it returns the translation for the player's current language with the key \"Hello world!\" . Translation Files \u2693\ufe0e The translation files available in the i18n folder follow a simple format, but it warrants description here. Each is a simple lua file that returns a table. The keys in that table can be passed to the i18n value returned from mwse.loadTranslations to get a translation for the player's language. A translation value is typically a string, but it can also have support for different translations based on values fed. File Encoding MWSE automatically handles encoding of language files. All language files should be written using UTF-8. Dots in Translation Keys When using dots to break apart translation keys, be careful of not to use a category as a value. For example, the following will create an error: return = { [ \"mcm.component.console\" ] = \"Enable console component?\" , [ \"mcm.component.console.description\" ] = \"It's really cool, so you should.\" , } Instead, use something like: return = { [ \"mcm.component.console.label\" ] = \"Enable console component?\" , [ \"mcm.component.console.description\" ] = \"It's really cool, so you should.\" , } Pluralization \u2693\ufe0e i18n supports the unicode.org plural rules , to make translations more intelligent and context-sensitive. We will discuss feeding values for this shortly. Consider this example, handling how to display the number of iron daggers the player has: Pluralization i18n\\eng.lua : 1 2 3 4 5 6 7 return = { itemCountNotification = { zero = \"You have no %{item}s.\" , one = \"You have 1 %{item}.\" , other = \"You have %{count} %{item}s.\" , }, } main.lua : 1 2 3 4 5 6 7 local i18n = mwse . loadTranslations ( \"Iron Dagger Counter\" ) local function onPressZ ( e ) local dagger = tes3 . getObject ( \"iron dagger\" ) local daggerCount = tes3 . getItemCount ({ reference = tes3 . player , item = dagger }) tes3 . messageBox ( i18n ( \"itemCountNotification\" , { count = daggerCount , item = dagger . name })) end event . register ( \"keyDown\" , onPressZ , { filter = tes3 . scanCode . z }) Here, the correct language will be chosen depending on the context of daggerCount . If the player has no iron daggers, \"You have no Iron Daggers.\" will be displayed. If the player has exactly 1 iron dagger, \"You have 1 Iron Dagger.\" . Finally, in any other case, the other key is used. A few other pluralization fields are available: few and many . few is used when value % 100 is between 3 and 10. many is used when value % 100 is between 11 and 99. Interpolation \u2693\ufe0e Values can be passed to translation strings in a few different ways: Named Style i18n\\eng.lua : 1 2 3 4 5 6 7 return = { itemCountNotification = { zero = \"You have no %{item}s.\" , one = \"You have 1 %{item}.\" , other = \"You have %{count} %{item}s.\" , }, } main.lua : 1 tes3 . messageBox ( i18n ( \"itemCountNotification\" , { count = daggerCount , item = dagger . name })) string.format Style i18n\\eng.lua : 1 2 3 4 5 6 7 return = { itemCountNotification = { zero = \"You have no %ss.\" , one = \"You have 1 %s.\" , other = \"You have %d %ss.\" , }, } main.lua : 1 2 3 4 5 if ( daggerCount > 1 ) then tes3 . messageBox ( i18n ( \"itemCountNotification\" , { daggerCount , dagger . name })) else tes3 . messageBox ( i18n ( \"itemCountNotification\" , { dagger . name })) end Named with string.format Style i18n\\eng.lua : 1 2 3 4 5 6 7 return = { itemCountNotification = { zero = \"You have no %<item>ss.\" , one = \"You have 1 %<item>d.\" , other = \"You have %<count>d %<item>ss.\" , }, } main.lua : 1 tes3 . messageBox ( i18n ( \"itemCountNotification\" , { count = daggerCount , item = dagger . name }))","title":"Mod Translations"},{"location":"guides/mod-translations/#mod-translations","text":"MWSE provides means to translate mods using an i18n library . With this, users can write their mods with native support for other languages, or they can write their mods in such a way that other modders can provide translation files.","title":"Mod Translations"},{"location":"guides/mod-translations/#hello-world-translated","text":"To begin, let's look at some source code that we want to enable translations for. It is a simple mod that displays a message when the player hits the Z key. The Hello World Mod\\main.lua 1 2 3 4 local function onPressZ ( e ) tes3 . messageBox ( \"Hello world!\" ) end event . register ( \"keyDown\" , onPressZ , { filter = tes3 . scanCode . z }) Here we just want to allow translators to provide a different string instead of \"Hello world!\" . To do this, we need to make an i18n folder in our project to define our language files in. For example: The Hello World Mod i18n deu.lua eng.lua fra.lua pol.lua rus.lua main.lua The Hello World Mod\\i18n\\deu.lua 1 2 3 return { [ \"Hello world!\" ] = \"Hallo Welt!\" , } The Hello World Mod\\i18n\\eng.lua 1 2 3 return { [ \"Hello world!\" ] = \"Hello world!\" , } The Hello World Mod\\i18n\\fra.lua 1 2 3 return { [ \"Hello world!\" ] = \"Bonjour le monde!\" , } The Hello World Mod\\i18n\\pol.lua 1 2 3 return { [ \"Hello world!\" ] = \"Witaj \u015bwiecie!\" , } The Hello World Mod\\i18n\\rus.lua 1 2 3 return { [ \"Hello world!\" ] = \"\u041f\u0440\u0438\u0432\u0435\u0442, \u043c\u0438\u0440!\" , } The Hello World Mod\\main.lua 1 2 3 4 5 6 local i18n = mwse . loadTranslations ( \"The Hello World Mod\" ) local function onPressZ ( e ) tes3 . messageBox ( i18n ( \"Hello world!\" )) end event . register ( \"keyDown\" , onPressZ , { filter = tes3 . scanCode . z }) This code looks pretty simple, but what is really happening here? mwse.loadTranslations(\"The Hello World Mod\") loads content from The Hello World Mod\\i18n\\eng.lua as well as an optional additional file, based on the player's game language. This can be deu.lua , fra.lua , or rus.lua . When the i18n translation result is called, it returns the translation for the player's current language with the key \"Hello world!\" .","title":"Hello World, Translated"},{"location":"guides/mod-translations/#translation-files","text":"The translation files available in the i18n folder follow a simple format, but it warrants description here. Each is a simple lua file that returns a table. The keys in that table can be passed to the i18n value returned from mwse.loadTranslations to get a translation for the player's language. A translation value is typically a string, but it can also have support for different translations based on values fed. File Encoding MWSE automatically handles encoding of language files. All language files should be written using UTF-8. Dots in Translation Keys When using dots to break apart translation keys, be careful of not to use a category as a value. For example, the following will create an error: return = { [ \"mcm.component.console\" ] = \"Enable console component?\" , [ \"mcm.component.console.description\" ] = \"It's really cool, so you should.\" , } Instead, use something like: return = { [ \"mcm.component.console.label\" ] = \"Enable console component?\" , [ \"mcm.component.console.description\" ] = \"It's really cool, so you should.\" , }","title":"Translation Files"},{"location":"guides/mod-translations/#pluralization","text":"i18n supports the unicode.org plural rules , to make translations more intelligent and context-sensitive. We will discuss feeding values for this shortly. Consider this example, handling how to display the number of iron daggers the player has: Pluralization i18n\\eng.lua : 1 2 3 4 5 6 7 return = { itemCountNotification = { zero = \"You have no %{item}s.\" , one = \"You have 1 %{item}.\" , other = \"You have %{count} %{item}s.\" , }, } main.lua : 1 2 3 4 5 6 7 local i18n = mwse . loadTranslations ( \"Iron Dagger Counter\" ) local function onPressZ ( e ) local dagger = tes3 . getObject ( \"iron dagger\" ) local daggerCount = tes3 . getItemCount ({ reference = tes3 . player , item = dagger }) tes3 . messageBox ( i18n ( \"itemCountNotification\" , { count = daggerCount , item = dagger . name })) end event . register ( \"keyDown\" , onPressZ , { filter = tes3 . scanCode . z }) Here, the correct language will be chosen depending on the context of daggerCount . If the player has no iron daggers, \"You have no Iron Daggers.\" will be displayed. If the player has exactly 1 iron dagger, \"You have 1 Iron Dagger.\" . Finally, in any other case, the other key is used. A few other pluralization fields are available: few and many . few is used when value % 100 is between 3 and 10. many is used when value % 100 is between 11 and 99.","title":"Pluralization"},{"location":"guides/mod-translations/#interpolation","text":"Values can be passed to translation strings in a few different ways: Named Style i18n\\eng.lua : 1 2 3 4 5 6 7 return = { itemCountNotification = { zero = \"You have no %{item}s.\" , one = \"You have 1 %{item}.\" , other = \"You have %{count} %{item}s.\" , }, } main.lua : 1 tes3 . messageBox ( i18n ( \"itemCountNotification\" , { count = daggerCount , item = dagger . name })) string.format Style i18n\\eng.lua : 1 2 3 4 5 6 7 return = { itemCountNotification = { zero = \"You have no %ss.\" , one = \"You have 1 %s.\" , other = \"You have %d %ss.\" , }, } main.lua : 1 2 3 4 5 if ( daggerCount > 1 ) then tes3 . messageBox ( i18n ( \"itemCountNotification\" , { daggerCount , dagger . name })) else tes3 . messageBox ( i18n ( \"itemCountNotification\" , { dagger . name })) end Named with string.format Style i18n\\eng.lua : 1 2 3 4 5 6 7 return = { itemCountNotification = { zero = \"You have no %<item>ss.\" , one = \"You have 1 %<item>d.\" , other = \"You have %<count>d %<item>ss.\" , }, } main.lua : 1 tes3 . messageBox ( i18n ( \"itemCountNotification\" , { count = daggerCount , item = dagger . name }))","title":"Interpolation"},{"location":"guides/tes3ui-events/","text":"TES3 UI Events Guide \u2693\ufe0e These example functions allows you to access magic effect tooltips, as seen on the bottom right of the HUD and on the magic menu. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 local function magicEffectTooltip () local helpMenu = tes3ui . findHelpLayerMenu ( \"HelpMenu\" ) if ( helpMenu ) then local t = string.format ( \"<< %s >>\" , e . source . contentPath ) helpMenu : createLabel { text = t } helpMenu : updateLayout () end end local function editMagicEffectTooltips () multi = tes3ui . findMenu ( \"MenuMulti\" ) iconBar = multi : findChild ( \"MenuMulti_magic_icons_1\" ) for _ , x in pairs ( iconBar . children ) do x : registerAfter ( \"help\" , magicEffectTooltip ) end multi = tes3ui . findMenu ( \"MenuMagic\" ) iconBar = multi : findChild ( \"MagicMenu_t_icon_row_1\" ) for _ , x in pairs ( iconBar . children ) do x : registerAfter ( \"help\" , magicEffectTooltip ) end end","title":"TES3 UI Events Guide"},{"location":"guides/tes3ui-events/#tes3-ui-events-guide","text":"These example functions allows you to access magic effect tooltips, as seen on the bottom right of the HUD and on the magic menu. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 local function magicEffectTooltip () local helpMenu = tes3ui . findHelpLayerMenu ( \"HelpMenu\" ) if ( helpMenu ) then local t = string.format ( \"<< %s >>\" , e . source . contentPath ) helpMenu : createLabel { text = t } helpMenu : updateLayout () end end local function editMagicEffectTooltips () multi = tes3ui . findMenu ( \"MenuMulti\" ) iconBar = multi : findChild ( \"MenuMulti_magic_icons_1\" ) for _ , x in pairs ( iconBar . children ) do x : registerAfter ( \"help\" , magicEffectTooltip ) end multi = tes3ui . findMenu ( \"MenuMagic\" ) iconBar = multi : findChild ( \"MagicMenu_t_icon_row_1\" ) for _ , x in pairs ( iconBar . children ) do x : registerAfter ( \"help\" , magicEffectTooltip ) end end","title":"TES3 UI Events Guide"},{"location":"guides/tes3ui/","text":"TES3 UI Example \u2693\ufe0e This example allows you to rename the object you are targetting. When the '/' key is pressed, a custom input window is opened. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 --[[ Mod: TES3UI TextInput Author: Hrnchamd ]] -- local this = {} function this . init () this . id_menu = tes3ui . registerID ( \"example:MenuTextInput\" ) this . id_input = tes3ui . registerID ( \"example:MenuTextInput_Text\" ) this . id_ok = tes3ui . registerID ( \"example:MenuTextInput_Ok\" ) this . id_cancel = tes3ui . registerID ( \"example:MenuTextInput_Cancel\" ) end -- Create window and layout. Called by onCommand. function this . createWindow () -- Return if window is already open if ( tes3ui . findMenu ( this . id_menu ) ~= nil ) then return end -- Create window and frame local menu = tes3ui . createMenu { id = this . id_menu , fixedFrame = true } -- To avoid low contrast, text input windows should not use menu transparency settings menu . alpha = 1.0 -- Create layout local input_label = menu : createLabel { text = \"Rename your item\" } input_label . borderBottom = 5 local input_block = menu : createBlock {} input_block . width = 300 input_block . autoHeight = true input_block . childAlignX = 0.5 -- centre content alignment local border = input_block : createThinBorder {} border . width = 300 border . height = 30 border . childAlignX = 0.5 border . childAlignY = 0.5 local input = border : createTextInput { id = this . id_input } input . text = this . item . name -- initial text input . borderLeft = 5 input . borderRight = 5 input . widget . lengthLimit = 31 -- TextInput custom properties input . widget . eraseOnFirstKey = true local button_block = menu : createBlock {} button_block . widthProportional = 1.0 -- width is 100% parent width button_block . autoHeight = true button_block . childAlignX = 1.0 -- right content alignment local button_cancel = button_block : createButton { id = this . id_cancel , text = tes3 . findGMST ( \"sCancel\" ). value } local button_ok = button_block : createButton { id = this . id_ok , text = tes3 . findGMST ( \"sOK\" ). value } -- Events button_cancel : register ( \"mouseClick\" , this . onCancel ) menu : register ( \"keyEnter\" , this . onOK ) -- only works when text input is not captured input : register ( \"keyEnter\" , this . onOK ) button_ok : register ( \"mouseClick\" , this . onOK ) -- Final setup menu : updateLayout () tes3ui . enterMenuMode ( this . id_menu ) tes3ui . acquireTextInput ( input ) -- automatically reset when menu is closed end -- OK button callback. function this . onOK ( e ) local menu = tes3ui . findMenu ( this . id_menu ) if ( menu ) then -- Copy text *before* the menu is destroyed local name = menu : findChild ( this . id_input ). text tes3ui . leaveMenuMode () menu : destroy () tes3 . messageBox { message = this . item . name .. \" renamed to \" .. name } this . item . name = name end end -- Cancel button callback. function this . onCancel ( e ) local menu = tes3ui . findMenu ( this . id_menu ) if ( menu ) then tes3ui . leaveMenuMode () menu : destroy () end end -- Keydown callback. function this . onCommand ( e ) local t = tes3 . getPlayerTarget () if ( t ) then t = t . object . baseObject or t . object -- Select actor base object if ( t . name ) then this . item = t this . createWindow () end end end event . register ( \"initialized\" , this . init ) event . register ( \"keyDown\" , this . onCommand , { filter = 53 }) -- \"/\" key","title":"TES3 UI Example"},{"location":"guides/tes3ui/#tes3-ui-example","text":"This example allows you to rename the object you are targetting. When the '/' key is pressed, a custom input window is opened. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 --[[ Mod: TES3UI TextInput Author: Hrnchamd ]] -- local this = {} function this . init () this . id_menu = tes3ui . registerID ( \"example:MenuTextInput\" ) this . id_input = tes3ui . registerID ( \"example:MenuTextInput_Text\" ) this . id_ok = tes3ui . registerID ( \"example:MenuTextInput_Ok\" ) this . id_cancel = tes3ui . registerID ( \"example:MenuTextInput_Cancel\" ) end -- Create window and layout. Called by onCommand. function this . createWindow () -- Return if window is already open if ( tes3ui . findMenu ( this . id_menu ) ~= nil ) then return end -- Create window and frame local menu = tes3ui . createMenu { id = this . id_menu , fixedFrame = true } -- To avoid low contrast, text input windows should not use menu transparency settings menu . alpha = 1.0 -- Create layout local input_label = menu : createLabel { text = \"Rename your item\" } input_label . borderBottom = 5 local input_block = menu : createBlock {} input_block . width = 300 input_block . autoHeight = true input_block . childAlignX = 0.5 -- centre content alignment local border = input_block : createThinBorder {} border . width = 300 border . height = 30 border . childAlignX = 0.5 border . childAlignY = 0.5 local input = border : createTextInput { id = this . id_input } input . text = this . item . name -- initial text input . borderLeft = 5 input . borderRight = 5 input . widget . lengthLimit = 31 -- TextInput custom properties input . widget . eraseOnFirstKey = true local button_block = menu : createBlock {} button_block . widthProportional = 1.0 -- width is 100% parent width button_block . autoHeight = true button_block . childAlignX = 1.0 -- right content alignment local button_cancel = button_block : createButton { id = this . id_cancel , text = tes3 . findGMST ( \"sCancel\" ). value } local button_ok = button_block : createButton { id = this . id_ok , text = tes3 . findGMST ( \"sOK\" ). value } -- Events button_cancel : register ( \"mouseClick\" , this . onCancel ) menu : register ( \"keyEnter\" , this . onOK ) -- only works when text input is not captured input : register ( \"keyEnter\" , this . onOK ) button_ok : register ( \"mouseClick\" , this . onOK ) -- Final setup menu : updateLayout () tes3ui . enterMenuMode ( this . id_menu ) tes3ui . acquireTextInput ( input ) -- automatically reset when menu is closed end -- OK button callback. function this . onOK ( e ) local menu = tes3ui . findMenu ( this . id_menu ) if ( menu ) then -- Copy text *before* the menu is destroyed local name = menu : findChild ( this . id_input ). text tes3ui . leaveMenuMode () menu : destroy () tes3 . messageBox { message = this . item . name .. \" renamed to \" .. name } this . item . name = name end end -- Cancel button callback. function this . onCancel ( e ) local menu = tes3ui . findMenu ( this . id_menu ) if ( menu ) then tes3ui . leaveMenuMode () menu : destroy () end end -- Keydown callback. function this . onCommand ( e ) local t = tes3 . getPlayerTarget () if ( t ) then t = t . object . baseObject or t . object -- Select actor base object if ( t . name ) then this . item = t this . createWindow () end end end event . register ( \"initialized\" , this . init ) event . register ( \"keyDown\" , this . onCommand , { filter = 53 }) -- \"/\" key","title":"TES3 UI Example"},{"location":"guides/timers/","text":"Timers \u2693\ufe0e Timers are a way to keep track with the passage of time. They are volatile, meaning that they do not persist between saved games. Creating a Basic Timer \u2693\ufe0e To create a timer, pass a table of options to timer.start() . 1 2 3 4 5 6 7 -- The function we want to run when the timer completes. local function onTimerComplete () tes3 . messageBox ( \"30 seconds have passed!\" ) end -- Create our timer to fire the above function after 30 seconds. timer . start ({ duration = 30 , callback = onTimerComplete }) In the above example, we create a message box after 30 seconds. Repeating a Timer \u2693\ufe0e Timers can repeat, based on an iterations parameter. This can be used to define a timer that will trigger multiple times. 1 2 3 4 5 6 7 -- The function we want to run when the timer completes. local function onTimerComplete () tes3 . messageBox ( \"A minute has passed!\" ) end -- Create our timer to fire the above function every minute for 5 minutes. timer . start ({ duration = 60 , callback = onTimerComplete , iterations = 5 }) Additionally, a value of -1 will create a timer that will repeat forever. Controlling Timer State \u2693\ufe0e A timer's state (read through the .state property), can be timer.active , timer.paused , or timer.expired . An active timer is running normally. A paused timer doesn't run, but can be resumed to pick back up where it left off. An expired timer has finished running (and has no more iterations). A timer can be told to pause, resume, reset, or cancel. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 -- Create a timer. local myTimer = timer . start ({ duration = 60 , callback = onTimerComplete }) -- Pause the timer. It can be resumed again using myTimer:resume() myTimer : pause () -- Resume the timer. It's now active again. myTimer : resume () -- Reset the timer. It will take 60 seconds from right now to finish. myTimer : reset () -- Cancel the timer. We will no longer care about it. myTimer : cancel () Creating Different Types of Timers \u2693\ufe0e Three different types of timers are available, though an advanced user can create their own types of timers and manage their clock cycles. The default types are: Real , defined by timer.real . Real timers operate primarily on real time, incrementing seconds whenever the game window is active. Simulate , defined by timer.simulate . Simulate timers operate much like real timers, incrementing seconds but only when the game is simulating (i.e. not in menu mode). This is the default type of timer. Game , defined by timer.game . Game timers operate by game hour, matching game time. 1 2 3 4 5 6 7 8 -- Create a timer that ends after 60 seconds. local myTimer = timer . start ({ duration = 60 , callback = onTimerComplete , type = timer . real }) -- Create a timer that ends after 30 unpaused seconds. local myTimer = timer . start ({ duration = 30 , callback = onTimerComplete , type = timer . simulate }) -- Create a timer that ends after 4 game hours. local myTimer = timer . start ({ duration = 4 , callback = onTimerComplete , type = timer . game })","title":"Timers"},{"location":"guides/timers/#timers","text":"Timers are a way to keep track with the passage of time. They are volatile, meaning that they do not persist between saved games.","title":"Timers"},{"location":"guides/timers/#creating-a-basic-timer","text":"To create a timer, pass a table of options to timer.start() . 1 2 3 4 5 6 7 -- The function we want to run when the timer completes. local function onTimerComplete () tes3 . messageBox ( \"30 seconds have passed!\" ) end -- Create our timer to fire the above function after 30 seconds. timer . start ({ duration = 30 , callback = onTimerComplete }) In the above example, we create a message box after 30 seconds.","title":"Creating a Basic Timer"},{"location":"guides/timers/#repeating-a-timer","text":"Timers can repeat, based on an iterations parameter. This can be used to define a timer that will trigger multiple times. 1 2 3 4 5 6 7 -- The function we want to run when the timer completes. local function onTimerComplete () tes3 . messageBox ( \"A minute has passed!\" ) end -- Create our timer to fire the above function every minute for 5 minutes. timer . start ({ duration = 60 , callback = onTimerComplete , iterations = 5 }) Additionally, a value of -1 will create a timer that will repeat forever.","title":"Repeating a Timer"},{"location":"guides/timers/#controlling-timer-state","text":"A timer's state (read through the .state property), can be timer.active , timer.paused , or timer.expired . An active timer is running normally. A paused timer doesn't run, but can be resumed to pick back up where it left off. An expired timer has finished running (and has no more iterations). A timer can be told to pause, resume, reset, or cancel. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 -- Create a timer. local myTimer = timer . start ({ duration = 60 , callback = onTimerComplete }) -- Pause the timer. It can be resumed again using myTimer:resume() myTimer : pause () -- Resume the timer. It's now active again. myTimer : resume () -- Reset the timer. It will take 60 seconds from right now to finish. myTimer : reset () -- Cancel the timer. We will no longer care about it. myTimer : cancel ()","title":"Controlling Timer State"},{"location":"guides/timers/#creating-different-types-of-timers","text":"Three different types of timers are available, though an advanced user can create their own types of timers and manage their clock cycles. The default types are: Real , defined by timer.real . Real timers operate primarily on real time, incrementing seconds whenever the game window is active. Simulate , defined by timer.simulate . Simulate timers operate much like real timers, incrementing seconds but only when the game is simulating (i.e. not in menu mode). This is the default type of timer. Game , defined by timer.game . Game timers operate by game hour, matching game time. 1 2 3 4 5 6 7 8 -- Create a timer that ends after 60 seconds. local myTimer = timer . start ({ duration = 60 , callback = onTimerComplete , type = timer . real }) -- Create a timer that ends after 30 unpaused seconds. local myTimer = timer . start ({ duration = 30 , callback = onTimerComplete , type = timer . simulate }) -- Create a timer that ends after 4 game hours. local myTimer = timer . start ({ duration = 4 , callback = onTimerComplete , type = timer . game })","title":"Creating Different Types of Timers"},{"location":"references/action-flags/","text":"Action Flags \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.actionFlag.* namespace. For example, tes3.actionFlag.onDeath has a value of 0x10 . ID Action Flag 0x1 Use Enabled 0x2 On Activate 0x10 On Death 0x20 On Knockout 0x40 On Murder 0x100 Door Opening 0x200 Door Closing 0x400 Door Jammed Opening 0x800 Door Jammed Closing","title":"Action Flags"},{"location":"references/action-flags/#action-flags","text":"Tip These values are available in Lua by their identifier in the tes3.actionFlag.* namespace. For example, tes3.actionFlag.onDeath has a value of 0x10 . ID Action Flag 0x1 Use Enabled 0x2 On Activate 0x10 On Death 0x20 On Knockout 0x40 On Murder 0x100 Door Opening 0x200 Door Closing 0x400 Door Jammed Opening 0x800 Door Jammed Closing","title":"Action Flags"},{"location":"references/active-body-part-layers/","text":"Active Body Part Layers \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.activeBodyPartLayer.* namespace. For example, tes3.activeBodyPartLayer.clothing has a value of 1 . ID Layer 0 Base 1 Clothing 2 Armor","title":"Active Body Part Layers"},{"location":"references/active-body-part-layers/#active-body-part-layers","text":"Tip These values are available in Lua by their identifier in the tes3.activeBodyPartLayer.* namespace. For example, tes3.activeBodyPartLayer.clothing has a value of 1 . ID Layer 0 Base 1 Clothing 2 Armor","title":"Active Body Part Layers"},{"location":"references/active-body-parts/","text":"Active Body Parts \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.activeBodyPart.* namespace. For example, tes3.activeBodyPart.rightAnkle has a value of 17 . ID Body Part 0 Head 1 Hair 2 Neck 3 Chest 4 Groin 5 Skirt 6 Right Hand 7 Left Hand 8 Right Wrist 9 Left Wrist 10 Shield 11 Right Forearm 12 Left Forearm 13 Right Upper Arm 14 Left Upper Arm 15 Right Foot 16 Left Foot 17 Right Ankle 18 Left Ankle 19 Right Knee 20 Left Knee 21 Right Upper Leg 22 Left Upper Leg 23 Right Pauldron 24 Left Pauldron 25 Weapon 26 Tail","title":"Active Body Parts"},{"location":"references/active-body-parts/#active-body-parts","text":"Tip These values are available in Lua by their identifier in the tes3.activeBodyPart.* namespace. For example, tes3.activeBodyPart.rightAnkle has a value of 17 . ID Body Part 0 Head 1 Hair 2 Neck 3 Chest 4 Groin 5 Skirt 6 Right Hand 7 Left Hand 8 Right Wrist 9 Left Wrist 10 Shield 11 Right Forearm 12 Left Forearm 13 Right Upper Arm 14 Left Upper Arm 15 Right Foot 16 Left Foot 17 Right Ankle 18 Left Ankle 19 Right Knee 20 Left Knee 21 Right Upper Leg 22 Left Upper Leg 23 Right Pauldron 24 Left Pauldron 25 Weapon 26 Tail","title":"Active Body Parts"},{"location":"references/actor-types/","text":"Actor Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.actorType.* namespace. For example, tes3.actorType.player has a value of 2 . ID Type 0 Creature 1 NPC 2 Player","title":"Actor Types"},{"location":"references/actor-types/#actor-types","text":"Tip These values are available in Lua by their identifier in the tes3.actorType.* namespace. For example, tes3.actorType.player has a value of 2 . ID Type 0 Creature 1 NPC 2 Player","title":"Actor Types"},{"location":"references/ai-packages/","text":"AI Packages \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.aiPackage.* namespace. For example, tes3.aiPackage.follow has a value of 3 . ID AI Package -1 None 0 Wander 1 Travel 2 Escort 3 Follow 4 Activate","title":"AI Packages"},{"location":"references/ai-packages/#ai-packages","text":"Tip These values are available in Lua by their identifier in the tes3.aiPackage.* namespace. For example, tes3.aiPackage.follow has a value of 3 . ID AI Package -1 None 0 Wander 1 Travel 2 Escort 3 Follow 4 Activate","title":"AI Packages"},{"location":"references/animation-groups/","text":"Animation Groups \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.animationGroup.* namespace. For example, tes3.animationGroup.idleCrossbow has a value of 0xF . ID Animation Group 0x0 Idle 0x1 Idle 2 0x2 Idle 3 0x3 Idle 4 0x4 Idle 5 0x5 Idle 6 0x6 Idle 7 0x7 Idle 8 0x8 Idle 9 0x9 Idle Hand To Hand 0xA Idle 1 H 0xB Idle 2 C 0xC Idle 2 W 0xD Idle Swim 0xE Idle Spell 0xF Idle Crossbow 0x10 Idle Sneak 0x11 Idle Storm 0x12 Torch 0x13 Hit 1 0x14 Hit 2 0x15 Hit 3 0x16 Hit 4 0x17 Hit 5 0x18 Swim Hit 1 0x19 Swim Hit 2 0x1A Swim Hit 3 0x1B Death 1 0x1C Death 2 0x1D Death 3 0x1E Death 4 0x1F Death 5 0x20 Death Knock Down 0x21 Death Knock Out 0x22 Knock Down 0x23 Knock Out 0x24 Swim Death 0x25 Swim Death 2 0x26 Swim Death 3 0x27 Swim Death Knock Down 0x28 Swim Death Knock Out 0x29 Swim Knock Out 0x2A Swim Knock Down 0x2B Swim Walk Forward 0x2C Swim Walk Back 0x2D Swim Walk Left 0x2E Swim Walk Right 0x2F Swim Run Forward 0x30 Swim Run Back 0x31 Swim Run Left 0x32 Swim Run Right 0x33 Swim Turn Left 0x34 Swim Turn Right 0x35 Walk Forward 0x36 Walk Back 0x37 Walk Left 0x38 Walk Right 0x39 Turn Left 0x3A Turn Right 0x3B Run Forward 0x3C Run Back 0x3D Run Left 0x3E Run Right 0x3F Sneak Forward 0x40 Sneak Back 0x41 Sneak Left 0x42 Sneak Right 0x43 Jump 0x44 Walk Forward Hand To Hand 0x45 Walk Back Hand To Hand 0x46 Walk Left Hand To Hand 0x47 Walk Right Hand To Hand 0x48 Turn Left Hand To Hand 0x49 Turn Right Hand To Hand 0x4A Run Forward Hand To Hand 0x4B Run Back Hand To Hand 0x4C Run Left Hand To Hand 0x4D Run Right Hand To Hand 0x4E Sneak Forward Hand To Hand 0x4F Sneak Back Hand To Hand 0x50 Sneak Left Hand To Hand 0x51 Sneak Right Hand To Hand 0x52 Jump Hand To Hand 0x53 Walk Forward 1 H 0x54 Walk Back 1 H 0x55 Walk Left 1 H 0x56 Walk Right 1 H 0x57 Turn Left 1 H 0x58 Turn Right 1 H 0x59 Run Forward 1 H 0x5A Run Back 1 H 0x5B Run Left 1 H 0x5C Run Right 1 H 0x5D Sneak Forward 1 H 0x5E Sneak Back 1 H 0x5F Sneak Left 1 H 0x60 Sneak Right 1 H 0x61 Jump 1 H 0x62 Walk Forward 2 C 0x63 Walk Back 2 C 0x64 Walk Left 2 C 0x65 Walk Right 2 C 0x66 Turn Left 2 C 0x67 Turn Right 2 C 0x68 Run Forward 2 C 0x69 Run Back 2 C 0x6A Run Left 2 C 0x6B Run Right 2 C 0x6C Sneak Forward 2 C 0x6D Sneak Back 2 C 0x6E Sneak Left 2 C 0x6F Sneak Right 2 C 0x70 Jump 2 C 0x71 Walk Forward 2 W 0x72 Walk Back 2 W 0x73 Walk Left 2 W 0x74 Walk Right 2 W 0x75 Turn Left 2 W 0x76 Turn Right 2 W 0x77 Run Forward 2 W 0x78 Run Back 2 W 0x79 Run Left 2 W 0x7A Run Right 2 W 0x7B Sneak Forward 2 W 0x7C Sneak Back 2 W 0x7D Sneak Left 2 W 0x7E Sneak Right 2 W 0x7F Jump 2 W 0x80 Spell Cast 0x81 Spell Turn Left 0x82 Spell Turn Right 0x83 Attack 1 0x84 Attack 2 0x85 Attack 3 0x86 Swim Attack 1 0x87 Swim Attack 2 0x88 Swim Attack 3 0x89 Hand To Hand 0x8A Crossbow 0x8B Bow And Arrow 0x8C Throw Weapon 0x8D Weapon One Hand 0x8E Weapon Two Hand 0x8F Weapon Two Wide 0x90 Shield 0x91 Pick Probe 0x92 Inventory Hand To Hand 0x93 Inventory Weapon One Hand 0x94 Inventory Weapon Two Hand 0x95 Inventory Weapon Two Wide","title":"Animation Groups"},{"location":"references/animation-groups/#animation-groups","text":"Tip These values are available in Lua by their identifier in the tes3.animationGroup.* namespace. For example, tes3.animationGroup.idleCrossbow has a value of 0xF . ID Animation Group 0x0 Idle 0x1 Idle 2 0x2 Idle 3 0x3 Idle 4 0x4 Idle 5 0x5 Idle 6 0x6 Idle 7 0x7 Idle 8 0x8 Idle 9 0x9 Idle Hand To Hand 0xA Idle 1 H 0xB Idle 2 C 0xC Idle 2 W 0xD Idle Swim 0xE Idle Spell 0xF Idle Crossbow 0x10 Idle Sneak 0x11 Idle Storm 0x12 Torch 0x13 Hit 1 0x14 Hit 2 0x15 Hit 3 0x16 Hit 4 0x17 Hit 5 0x18 Swim Hit 1 0x19 Swim Hit 2 0x1A Swim Hit 3 0x1B Death 1 0x1C Death 2 0x1D Death 3 0x1E Death 4 0x1F Death 5 0x20 Death Knock Down 0x21 Death Knock Out 0x22 Knock Down 0x23 Knock Out 0x24 Swim Death 0x25 Swim Death 2 0x26 Swim Death 3 0x27 Swim Death Knock Down 0x28 Swim Death Knock Out 0x29 Swim Knock Out 0x2A Swim Knock Down 0x2B Swim Walk Forward 0x2C Swim Walk Back 0x2D Swim Walk Left 0x2E Swim Walk Right 0x2F Swim Run Forward 0x30 Swim Run Back 0x31 Swim Run Left 0x32 Swim Run Right 0x33 Swim Turn Left 0x34 Swim Turn Right 0x35 Walk Forward 0x36 Walk Back 0x37 Walk Left 0x38 Walk Right 0x39 Turn Left 0x3A Turn Right 0x3B Run Forward 0x3C Run Back 0x3D Run Left 0x3E Run Right 0x3F Sneak Forward 0x40 Sneak Back 0x41 Sneak Left 0x42 Sneak Right 0x43 Jump 0x44 Walk Forward Hand To Hand 0x45 Walk Back Hand To Hand 0x46 Walk Left Hand To Hand 0x47 Walk Right Hand To Hand 0x48 Turn Left Hand To Hand 0x49 Turn Right Hand To Hand 0x4A Run Forward Hand To Hand 0x4B Run Back Hand To Hand 0x4C Run Left Hand To Hand 0x4D Run Right Hand To Hand 0x4E Sneak Forward Hand To Hand 0x4F Sneak Back Hand To Hand 0x50 Sneak Left Hand To Hand 0x51 Sneak Right Hand To Hand 0x52 Jump Hand To Hand 0x53 Walk Forward 1 H 0x54 Walk Back 1 H 0x55 Walk Left 1 H 0x56 Walk Right 1 H 0x57 Turn Left 1 H 0x58 Turn Right 1 H 0x59 Run Forward 1 H 0x5A Run Back 1 H 0x5B Run Left 1 H 0x5C Run Right 1 H 0x5D Sneak Forward 1 H 0x5E Sneak Back 1 H 0x5F Sneak Left 1 H 0x60 Sneak Right 1 H 0x61 Jump 1 H 0x62 Walk Forward 2 C 0x63 Walk Back 2 C 0x64 Walk Left 2 C 0x65 Walk Right 2 C 0x66 Turn Left 2 C 0x67 Turn Right 2 C 0x68 Run Forward 2 C 0x69 Run Back 2 C 0x6A Run Left 2 C 0x6B Run Right 2 C 0x6C Sneak Forward 2 C 0x6D Sneak Back 2 C 0x6E Sneak Left 2 C 0x6F Sneak Right 2 C 0x70 Jump 2 C 0x71 Walk Forward 2 W 0x72 Walk Back 2 W 0x73 Walk Left 2 W 0x74 Walk Right 2 W 0x75 Turn Left 2 W 0x76 Turn Right 2 W 0x77 Run Forward 2 W 0x78 Run Back 2 W 0x79 Run Left 2 W 0x7A Run Right 2 W 0x7B Sneak Forward 2 W 0x7C Sneak Back 2 W 0x7D Sneak Left 2 W 0x7E Sneak Right 2 W 0x7F Jump 2 W 0x80 Spell Cast 0x81 Spell Turn Left 0x82 Spell Turn Right 0x83 Attack 1 0x84 Attack 2 0x85 Attack 3 0x86 Swim Attack 1 0x87 Swim Attack 2 0x88 Swim Attack 3 0x89 Hand To Hand 0x8A Crossbow 0x8B Bow And Arrow 0x8C Throw Weapon 0x8D Weapon One Hand 0x8E Weapon Two Hand 0x8F Weapon Two Wide 0x90 Shield 0x91 Pick Probe 0x92 Inventory Hand To Hand 0x93 Inventory Weapon One Hand 0x94 Inventory Weapon Two Hand 0x95 Inventory Weapon Two Wide","title":"Animation Groups"},{"location":"references/animation-start-flags/","text":"Animation Start Flags \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.animationStartFlag.* namespace. For example, tes3.animationStartFlag.immediateLoop has a value of 2 . ID Flag 0 Normal 1 Immediate 2 Immediate Loop","title":"Animation Start Flags"},{"location":"references/animation-start-flags/#animation-start-flags","text":"Tip These values are available in Lua by their identifier in the tes3.animationStartFlag.* namespace. For example, tes3.animationStartFlag.immediateLoop has a value of 2 . ID Flag 0 Normal 1 Immediate 2 Immediate Loop","title":"Animation Start Flags"},{"location":"references/animation-states/","text":"Animation States \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.animationState.* namespace. For example, tes3.animationState.swingHit has a value of 4 . ID State 0 Idle 1 Ready 2 Swing Up 3 Swing Down 4 Swing Hit 5 Swing Follow Light 6 Swing Follow Medium 7 Swing Follow Heavy 8 Readying Weapon 9 Unready Weapon 10 Casting 11 Casting 2 12 Readying Magic 13 Unready Magic 14 Knockdown 15 Knocked Out 16 Picking Probing 18 Dying 19 Dead","title":"Animation States"},{"location":"references/animation-states/#animation-states","text":"Tip These values are available in Lua by their identifier in the tes3.animationState.* namespace. For example, tes3.animationState.swingHit has a value of 4 . ID State 0 Idle 1 Ready 2 Swing Up 3 Swing Down 4 Swing Hit 5 Swing Follow Light 6 Swing Follow Medium 7 Swing Follow Heavy 8 Readying Weapon 9 Unready Weapon 10 Casting 11 Casting 2 12 Readying Magic 13 Unready Magic 14 Knockdown 15 Knocked Out 16 Picking Probing 18 Dying 19 Dead","title":"Animation States"},{"location":"references/apparatus-types/","text":"Apparatus Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.apparatusType.* namespace. For example, tes3.apparatusType.calcinator has a value of 2 . ID Apparatus 0 Mortar and Pestle 1 Alembic 2 Calcinator 3 Retort","title":"Apparatus Types"},{"location":"references/apparatus-types/#apparatus-types","text":"Tip These values are available in Lua by their identifier in the tes3.apparatusType.* namespace. For example, tes3.apparatusType.calcinator has a value of 2 . ID Apparatus 0 Mortar and Pestle 1 Alembic 2 Calcinator 3 Retort","title":"Apparatus Types"},{"location":"references/armor-slots/","text":"Armor Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.armorSlot.* namespace. For example, tes3.armorSlot.leftGauntlet has a value of 6 . Note MWSE-mwscript's xEquipmentList returns this value as the subtype for armor objects. These values are increased by one by that function. ID Armor Type 0 Helmet 1 Cuirass 2 Left Pauldron 3 Right Pauldron 4 Greaves 5 Boots 6 Left Gauntlet 7 Right Gauntlet 8 Shield 9 Left Bracer 10 Right Bracer","title":"Armor Types"},{"location":"references/armor-slots/#armor-types","text":"Tip These values are available in Lua by their identifier in the tes3.armorSlot.* namespace. For example, tes3.armorSlot.leftGauntlet has a value of 6 . Note MWSE-mwscript's xEquipmentList returns this value as the subtype for armor objects. These values are increased by one by that function. ID Armor Type 0 Helmet 1 Cuirass 2 Left Pauldron 3 Right Pauldron 4 Greaves 5 Boots 6 Left Gauntlet 7 Right Gauntlet 8 Shield 9 Left Bracer 10 Right Bracer","title":"Armor Types"},{"location":"references/armor-weight-classes/","text":"Armor Weight Classes \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.armorWeightClass.* namespace. For example, tes3.armorWeightClass.medium has a value of 1 . ID Weight Class 0 Light 1 Medium 2 Heavy","title":"Armor Weight Classes"},{"location":"references/armor-weight-classes/#armor-weight-classes","text":"Tip These values are available in Lua by their identifier in the tes3.armorWeightClass.* namespace. For example, tes3.armorWeightClass.medium has a value of 1 . ID Weight Class 0 Light 1 Medium 2 Heavy","title":"Armor Weight Classes"},{"location":"references/attachment-types/","text":"Attachment Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.attachmentType.* namespace. For example, tes3.attachmentType.activator has a value of 9 . ID Attachment Type 3 Lock 6 Variable 8 Actor 9 Activator","title":"Attachment Types"},{"location":"references/attachment-types/#attachment-types","text":"Tip These values are available in Lua by their identifier in the tes3.attachmentType.* namespace. For example, tes3.attachmentType.activator has a value of 9 . ID Attachment Type 3 Lock 6 Variable 8 Actor 9 Activator","title":"Attachment Types"},{"location":"references/attributes/","text":"Attributes \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.attribute.* namespace. For example, tes3.attribute.speed has a value of 4 . ID Attribute 0 Strength 1 Intelligence 2 Willpower 3 Agility 4 Speed 5 Endurance 6 Personality 7 Luck","title":"Attributes"},{"location":"references/attributes/#attributes","text":"Tip These values are available in Lua by their identifier in the tes3.attribute.* namespace. For example, tes3.attribute.speed has a value of 4 . ID Attribute 0 Strength 1 Intelligence 2 Willpower 3 Agility 4 Speed 5 Endurance 6 Personality 7 Luck","title":"Attributes"},{"location":"references/audio-mix-types/","text":"Audio Mix Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.audioMixType.* namespace. For example, tes3.audioMixType.Voice has a value of 1 . ID Audio Mix Type 0 Master 1 Voice 2 Effects 3 Footsteps 4 Music","title":"Audio Mix Types"},{"location":"references/audio-mix-types/#audio-mix-types","text":"Tip These values are available in Lua by their identifier in the tes3.audioMixType.* namespace. For example, tes3.audioMixType.Voice has a value of 1 . ID Audio Mix Type 0 Master 1 Voice 2 Effects 3 Footsteps 4 Music","title":"Audio Mix Types"},{"location":"references/body-part-attachments/","text":"Body Part Attachments \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.bodyPartAttachment.* namespace. For example, tes3.bodyPartAttachment.rightForearm2 has a value of 9 . ID Attachment 0 Root 1 Head 2 Neck 3 Spine 4 Pelvis 5 Right Hand 6 Left Hand 7 Right Forearm 1 8 Left Forearm 1 9 Right Forearm 2 10 Left Forearm 2 11 Right Upper Arm 12 Left Upper Arm 13 Right Foot 14 Left Foot 15 Right Calf 1 16 Left Calf 1 17 Right Calf 2 18 Left Calf 2 19 Right Thigh 20 Left Thigh 21 Right Clavicle 22 Left Clavicle 23 Weapon 24 Shield","title":"Body Part Attachments"},{"location":"references/body-part-attachments/#body-part-attachments","text":"Tip These values are available in Lua by their identifier in the tes3.bodyPartAttachment.* namespace. For example, tes3.bodyPartAttachment.rightForearm2 has a value of 9 . ID Attachment 0 Root 1 Head 2 Neck 3 Spine 4 Pelvis 5 Right Hand 6 Left Hand 7 Right Forearm 1 8 Left Forearm 1 9 Right Forearm 2 10 Left Forearm 2 11 Right Upper Arm 12 Left Upper Arm 13 Right Foot 14 Left Foot 15 Right Calf 1 16 Left Calf 1 17 Right Calf 2 18 Left Calf 2 19 Right Thigh 20 Left Thigh 21 Right Clavicle 22 Left Clavicle 23 Weapon 24 Shield","title":"Body Part Attachments"},{"location":"references/book-types/","text":"Book Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.bookType.* namespace. For example, tes3.bookType.scroll has a value of 1 . ID Type 0 Book 1 Scroll","title":"Book Types"},{"location":"references/book-types/#book-types","text":"Tip These values are available in Lua by their identifier in the tes3.bookType.* namespace. For example, tes3.bookType.scroll has a value of 1 . ID Type 0 Book 1 Scroll","title":"Book Types"},{"location":"references/clothing-slots/","text":"Clothing Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.clothingSlot.* namespace. For example, tes3.clothingSlot.rightGlove has a value of 5 . Note MWSE-mwscript's xEquipmentList returns this value as the subtype for clothing objects. These values are increased by one by that function. ID Type 0 Pants 1 Shoes 2 Shirt 3 Belt 4 Robe 5 Right Glove 6 Left Glove 7 Skirt 8 Ring 9 Amulet","title":"Clothing Types"},{"location":"references/clothing-slots/#clothing-types","text":"Tip These values are available in Lua by their identifier in the tes3.clothingSlot.* namespace. For example, tes3.clothingSlot.rightGlove has a value of 5 . Note MWSE-mwscript's xEquipmentList returns this value as the subtype for clothing objects. These values are increased by one by that function. ID Type 0 Pants 1 Shoes 2 Shirt 3 Belt 4 Robe 5 Right Glove 6 Left Glove 7 Skirt 8 Ring 9 Amulet","title":"Clothing Types"},{"location":"references/code-patch-features/","text":"Code Patch Features \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.codePatchFeature.* namespace. For example, tes3.codePatchFeature.blindFix has a value of 25 . ID Code Patch Feature 1 Savegame Corruption Fix 2 Mercantile Fix 3 Unarmored Fix 4 Calendar Fix 5 Merchant Equipping Fix 6 Restore Drain Attributes Fix 7 Stream Music Master Volume Fix 8 Calm Spells Fix 9 Vampire Stats Fix 10 Reflected Spells Fix 11 Show Transparent Clothes In The Inventory 12 Enchant Glow In Fog Fix 13 Show Npc Health Bar On Healing 14 Enchanting Increases Item Value 15 Allow Stealing From K Oed Np Cs 16 Spellmaking Max Magnitude Increase 17 Spellmaking Max Duration Reduced 18 Exhaust Np Cs With Damage Fatigue 19 Disposition Fix 20 Spell Magnitude Fix 21 Dispel Fix 22 Creature Armor Damage Fix 23 Inventory Bugs Fix 24 Npc Potion Use Ai 25 Blind Fix 26 Gloss Map Fix 27 Lighting Fixes Group 29 Particle Effects Fix 30 Projectile Aiming Fix 32 Waterwalk Fix 33 Training Price Stats Fix 34 Travel Price Fix 35 Allow Reflection Effects On Skinned Models 36 Createmaps Fillmap Fix 37 Delayed Spell Crash Fix 38 Loud Interface Gameplay Sounds Fix 39 Better Quality Splash And Title Screens 40 Strength Based Hand To Hand Damage 41 Spellmaker Enchant Multiple Effects 42 Spellmaker Area Effect Cost 43 Arrow Enchanting 44 Fortify Maximum Health 45 Toggle Sneak 46 Place At Drop Fix 47 Spell Deselection Bug Fix 48 Levelup Stats Bug Fix 49 Bound Items Expiry Fix 50 Stable Enchantment Sort 51 Fog Of War Fix 52 Intimidate Fix 53 Magicka Display Accuracy 54 Hi Def Cutscene Support 55 Alchemy Naming Stacking Fix 56 Spellmaker Enchant Edit Effect Fix 57 Allow Scroll Enchant Price Modifier 58 Save File Limit Warning 64 Multiple Attribute Fortify Potions 65 Soulgem Value Rebalance 66 On Use Ring Extra Slot 67 Npc Ai Casts Zero Cost Powers 68 Permanent Barter Disposition Changes 69 Enchanted Item Cooldown 70 Hidden Traps 71 Swift Casting 72 Blight Storm Disease Fix 73 Racial Variation In Speed Fix 74 Game Formula Restoration 75 Creature Armor Rating Fix 76 Disable Weapon Transition On Unequip 77 Pickpocket Overhaul 79 Slowfall On Companions Fix 80 Drain Intelligence Exploit Fix 81 Mouseover Menu Display Fixes 82 Shortcut Key Improvements 83 Detect Water Level Fix 84 Service Refusal Filtering 85 Armor Indicator Fix 86 Detect Life Spell Variant 87 Scripted Music Uninterruptible 88 Argonian Clothing Choice 89 Vanity Camera Lock 90 Alchemy Potion Weight Rebalance 91 Item Recharging Rebalance 92 Summoned Creature Crash Fix 93 Repair Item Fixes 94 Book And Scroll Scaling Fix 95 Voiceover Script Functions Fix 96 Weapon Reach Issues 97 Initializing Data Fix 98 Animated Container Crash Fix 99 Light Spell Fix 100 Allow Faction Leaving 101 Slow Movement Anim Fix 102 Mod Removal Fixes 103 Play Sound Vp Volume Fix 104 Fix Enchant Options On Ranged 105 Prevent Empty Messages 106 Hidden Locks 107 Dont Loot On Dispose 108 Attribute Uncap 109 Hit Fader Fix 110 Skill Uncap 111 Weapon Resistance Change 112 Disintegrate Fix 113 Incorrect Inventory Sounds Fix 114 Separate Axe Inventory Sounds 115 Confiscated Item Fix 116 Water Environment Sound Fix 117 Talked To Pc Extension 118 Dropping From Inventory Fix 119 Creature Voiceover Enable 120 Lock Level Scripting 121 Self Enchanting Fix 122 Ammunition Fix 123 Place Item Fix 124 Creature Magicka Fatigue Fix 125 Position Position Cell Fix 126 Telekinesis Fix 127 Map Texture Conflict Fix 128 Rain Snow Collision 130 Over The Shoulder First Person Camera 130 Over The Shoulder Third Person Camera 131 Bump Reflect Map Local Lighting 132 Improved Animation Support 133 Reduce Camera Clipping 134 Npc Minor Behaviour Fixes 135 Ammo Fixes 136 Resolution Options Fix 137 Slowfall Overhaul 138 Cell Changed Fix 139 Barter Gold Reset Fix 140 Improved Loading Speed 141 Script Expression Parser Fix 142 Two Handed Weapon Removes Shield 143 Get Set Angle Enhancement 144 Better Recharging 145 Quality Based Potion Icons Models 146 Arrow Denocker 147 Healthy Appetite 148 Spellmaker Enchanting Improvement 149 Safe Dispose Corpse 150 Shield Hit Location Fix 151 Self Enchanting Success Chance 152 First Person Swim Animations 153 Mouse Cursor Movement Fix 154 Script Data Fix 155 Sneaking Boots Penalty Fix 156 Spellmaking Matches Editor 157 Allow Gloves With Bracers 158 Get Weapon Type Fix 159 Probe Quality Fix 160 Remove Item Weight Fix 161 Get Spell Effects Tweak 162 See All Standard Potion Effects 163 Bow Sound Glitch Fix 164 Fix Reading Vars From A Global Script 165 Ai Activate Enhancement 166 Scriptable Potion Use 167 Container Respawn Timescale 168 Avoid Blame For Neutral Npc Deaths 169 Multiple Summons Overlap Fix 170 Barter Haggle Fix 171 Menu Mode World Interaction Fix 172 Enchanted Item Rebalance 173 Npc Rank Change Fix 174 Add Item With Levelled Items 175 Move World Z Fix 176 Spell Effect Tooltip Fix 177 Get Effect Remove Effects Fix 178 Load Warning Crash Fix 179 Followers Defend Immediately 180 Equip Script Fix 181 Doppler Audio Fix 182 Auto Stack Ammunition 183 Sea Water Sound Falloff Fix 184 Actor Collision Box Fix 185 Sliding After Jumping Fix 186 Falling Creatures Collision Fix 256 Map Expansion For Tamriel Rebuilt 257 Main Menu Wider Textures 258 Disable Map Smoothing 259 Display More Accurate Item Weight 260 Polish Keyboard Support 261 Unrestrict Menu Size 262 Larger Service Chargen Menus 263 Japanese Localization 264 Russian Fixes 265 Journal Text Colour Configuration 266 Polish Character Corrections 267 Ui Display Quality Fix 268 Spell Select By Name 269 Better Ingredient And Item Selector 270 Better Typography 271 Persuasion Improvement 272 Improved Inventory Filters 273 Ownership Tooltip 274 Better Spell Merchants 275 Levelup Skills Tooltip 276 Convenient Defaults 277 Better Haggling","title":"Code Patch Features"},{"location":"references/code-patch-features/#code-patch-features","text":"Tip These values are available in Lua by their identifier in the tes3.codePatchFeature.* namespace. For example, tes3.codePatchFeature.blindFix has a value of 25 . ID Code Patch Feature 1 Savegame Corruption Fix 2 Mercantile Fix 3 Unarmored Fix 4 Calendar Fix 5 Merchant Equipping Fix 6 Restore Drain Attributes Fix 7 Stream Music Master Volume Fix 8 Calm Spells Fix 9 Vampire Stats Fix 10 Reflected Spells Fix 11 Show Transparent Clothes In The Inventory 12 Enchant Glow In Fog Fix 13 Show Npc Health Bar On Healing 14 Enchanting Increases Item Value 15 Allow Stealing From K Oed Np Cs 16 Spellmaking Max Magnitude Increase 17 Spellmaking Max Duration Reduced 18 Exhaust Np Cs With Damage Fatigue 19 Disposition Fix 20 Spell Magnitude Fix 21 Dispel Fix 22 Creature Armor Damage Fix 23 Inventory Bugs Fix 24 Npc Potion Use Ai 25 Blind Fix 26 Gloss Map Fix 27 Lighting Fixes Group 29 Particle Effects Fix 30 Projectile Aiming Fix 32 Waterwalk Fix 33 Training Price Stats Fix 34 Travel Price Fix 35 Allow Reflection Effects On Skinned Models 36 Createmaps Fillmap Fix 37 Delayed Spell Crash Fix 38 Loud Interface Gameplay Sounds Fix 39 Better Quality Splash And Title Screens 40 Strength Based Hand To Hand Damage 41 Spellmaker Enchant Multiple Effects 42 Spellmaker Area Effect Cost 43 Arrow Enchanting 44 Fortify Maximum Health 45 Toggle Sneak 46 Place At Drop Fix 47 Spell Deselection Bug Fix 48 Levelup Stats Bug Fix 49 Bound Items Expiry Fix 50 Stable Enchantment Sort 51 Fog Of War Fix 52 Intimidate Fix 53 Magicka Display Accuracy 54 Hi Def Cutscene Support 55 Alchemy Naming Stacking Fix 56 Spellmaker Enchant Edit Effect Fix 57 Allow Scroll Enchant Price Modifier 58 Save File Limit Warning 64 Multiple Attribute Fortify Potions 65 Soulgem Value Rebalance 66 On Use Ring Extra Slot 67 Npc Ai Casts Zero Cost Powers 68 Permanent Barter Disposition Changes 69 Enchanted Item Cooldown 70 Hidden Traps 71 Swift Casting 72 Blight Storm Disease Fix 73 Racial Variation In Speed Fix 74 Game Formula Restoration 75 Creature Armor Rating Fix 76 Disable Weapon Transition On Unequip 77 Pickpocket Overhaul 79 Slowfall On Companions Fix 80 Drain Intelligence Exploit Fix 81 Mouseover Menu Display Fixes 82 Shortcut Key Improvements 83 Detect Water Level Fix 84 Service Refusal Filtering 85 Armor Indicator Fix 86 Detect Life Spell Variant 87 Scripted Music Uninterruptible 88 Argonian Clothing Choice 89 Vanity Camera Lock 90 Alchemy Potion Weight Rebalance 91 Item Recharging Rebalance 92 Summoned Creature Crash Fix 93 Repair Item Fixes 94 Book And Scroll Scaling Fix 95 Voiceover Script Functions Fix 96 Weapon Reach Issues 97 Initializing Data Fix 98 Animated Container Crash Fix 99 Light Spell Fix 100 Allow Faction Leaving 101 Slow Movement Anim Fix 102 Mod Removal Fixes 103 Play Sound Vp Volume Fix 104 Fix Enchant Options On Ranged 105 Prevent Empty Messages 106 Hidden Locks 107 Dont Loot On Dispose 108 Attribute Uncap 109 Hit Fader Fix 110 Skill Uncap 111 Weapon Resistance Change 112 Disintegrate Fix 113 Incorrect Inventory Sounds Fix 114 Separate Axe Inventory Sounds 115 Confiscated Item Fix 116 Water Environment Sound Fix 117 Talked To Pc Extension 118 Dropping From Inventory Fix 119 Creature Voiceover Enable 120 Lock Level Scripting 121 Self Enchanting Fix 122 Ammunition Fix 123 Place Item Fix 124 Creature Magicka Fatigue Fix 125 Position Position Cell Fix 126 Telekinesis Fix 127 Map Texture Conflict Fix 128 Rain Snow Collision 130 Over The Shoulder First Person Camera 130 Over The Shoulder Third Person Camera 131 Bump Reflect Map Local Lighting 132 Improved Animation Support 133 Reduce Camera Clipping 134 Npc Minor Behaviour Fixes 135 Ammo Fixes 136 Resolution Options Fix 137 Slowfall Overhaul 138 Cell Changed Fix 139 Barter Gold Reset Fix 140 Improved Loading Speed 141 Script Expression Parser Fix 142 Two Handed Weapon Removes Shield 143 Get Set Angle Enhancement 144 Better Recharging 145 Quality Based Potion Icons Models 146 Arrow Denocker 147 Healthy Appetite 148 Spellmaker Enchanting Improvement 149 Safe Dispose Corpse 150 Shield Hit Location Fix 151 Self Enchanting Success Chance 152 First Person Swim Animations 153 Mouse Cursor Movement Fix 154 Script Data Fix 155 Sneaking Boots Penalty Fix 156 Spellmaking Matches Editor 157 Allow Gloves With Bracers 158 Get Weapon Type Fix 159 Probe Quality Fix 160 Remove Item Weight Fix 161 Get Spell Effects Tweak 162 See All Standard Potion Effects 163 Bow Sound Glitch Fix 164 Fix Reading Vars From A Global Script 165 Ai Activate Enhancement 166 Scriptable Potion Use 167 Container Respawn Timescale 168 Avoid Blame For Neutral Npc Deaths 169 Multiple Summons Overlap Fix 170 Barter Haggle Fix 171 Menu Mode World Interaction Fix 172 Enchanted Item Rebalance 173 Npc Rank Change Fix 174 Add Item With Levelled Items 175 Move World Z Fix 176 Spell Effect Tooltip Fix 177 Get Effect Remove Effects Fix 178 Load Warning Crash Fix 179 Followers Defend Immediately 180 Equip Script Fix 181 Doppler Audio Fix 182 Auto Stack Ammunition 183 Sea Water Sound Falloff Fix 184 Actor Collision Box Fix 185 Sliding After Jumping Fix 186 Falling Creatures Collision Fix 256 Map Expansion For Tamriel Rebuilt 257 Main Menu Wider Textures 258 Disable Map Smoothing 259 Display More Accurate Item Weight 260 Polish Keyboard Support 261 Unrestrict Menu Size 262 Larger Service Chargen Menus 263 Japanese Localization 264 Russian Fixes 265 Journal Text Colour Configuration 266 Polish Character Corrections 267 Ui Display Quality Fix 268 Spell Select By Name 269 Better Ingredient And Item Selector 270 Better Typography 271 Persuasion Improvement 272 Improved Inventory Filters 273 Ownership Tooltip 274 Better Spell Merchants 275 Levelup Skills Tooltip 276 Convenient Defaults 277 Better Haggling","title":"Code Patch Features"},{"location":"references/creature-types/","text":"Creature Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.creatureType.* namespace. For example, tes3.creatureType.undead has a value of 2 . ID Creature Type 0 Normal 1 Daedra 2 Undead 3 Humanoid","title":"Creature Types"},{"location":"references/creature-types/#creature-types","text":"Tip These values are available in Lua by their identifier in the tes3.creatureType.* namespace. For example, tes3.creatureType.undead has a value of 2 . ID Creature Type 0 Normal 1 Daedra 2 Undead 3 Humanoid","title":"Creature Types"},{"location":"references/crime-types/","text":"Crime Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.crimeType.* namespace. For example, tes3.crimeType.theft has a value of 5 . ID Crime Type 1 attack 2 killing 3 stealing 4 pickpocket 5 theft 6 trespass 7 werewolf","title":"Crime Types"},{"location":"references/crime-types/#crime-types","text":"Tip These values are available in Lua by their identifier in the tes3.crimeType.* namespace. For example, tes3.crimeType.theft has a value of 5 . ID Crime Type 1 attack 2 killing 3 stealing 4 pickpocket 5 theft 6 trespass 7 werewolf","title":"Crime Types"},{"location":"references/damage-sources/","text":"Damage Sources \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.damageSource.* namespace. For example, tes3.damageSource.shield has a value of shield . ID Damage Source script Script fall Fall suffocation Suffocation attack Attack magic Magic shield Shield","title":"Damage Sources"},{"location":"references/damage-sources/#damage-sources","text":"Tip These values are available in Lua by their identifier in the tes3.damageSource.* namespace. For example, tes3.damageSource.shield has a value of shield . ID Damage Source script Script fall Fall suffocation Suffocation attack Attack magic Magic shield Shield","title":"Damage Sources"},{"location":"references/dialogue-types/","text":"Dialogue Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.dialogueType.* namespace. For example, tes3.dialogueType.greeting has a value of 2 . ID Dialogue Type 1 Voice 2 Greeting 3 Service Note Each of these Dialogue Types has some subfields, which are stored in tes3.dialoguePage.* namespace. Available types are: Tip These values are available in Lua by their identifier in the tes3.dialoguePage.voice.* namespace. For example, tes3.dialoguePage.voice.attack has a value of 5 . ID Voice 0 Hello 1 Idle 2 Intruder 3 Thief 4 Hit 5 Attack 6 Flee Tip These values are available in Lua by their identifier in the tes3.dialoguePage.greeting.* namespace. For example, tes3.dialoguePage.greeting.greeting4 has a value of 4 . ID Greeting 0 Greeting 0 1 Greeting 1 2 Greeting 2 3 Greeting 3 4 Greeting 4 5 Greeting 5 6 Greeting 6 7 Greeting 7 8 Greeting 8 9 Greeting 9 Tip These values are available in Lua by their identifier in the tes3.dialoguePage.service.* namespace. For example, tes3.dialoguePage.service.infoRefusal has a value of 0 . ID Service 0 Info Refusal 1 Admire Success 2 Admire Fail 3 Initimidate Success 4 Initimidate Fail 5 Taunt Success 6 Taunt Fail 7 Service Refusal 8 Bribe Success 9 Bribe Fail","title":"Dialogue Types"},{"location":"references/dialogue-types/#dialogue-types","text":"Tip These values are available in Lua by their identifier in the tes3.dialogueType.* namespace. For example, tes3.dialogueType.greeting has a value of 2 . ID Dialogue Type 1 Voice 2 Greeting 3 Service Note Each of these Dialogue Types has some subfields, which are stored in tes3.dialoguePage.* namespace. Available types are: Tip These values are available in Lua by their identifier in the tes3.dialoguePage.voice.* namespace. For example, tes3.dialoguePage.voice.attack has a value of 5 . ID Voice 0 Hello 1 Idle 2 Intruder 3 Thief 4 Hit 5 Attack 6 Flee Tip These values are available in Lua by their identifier in the tes3.dialoguePage.greeting.* namespace. For example, tes3.dialoguePage.greeting.greeting4 has a value of 4 . ID Greeting 0 Greeting 0 1 Greeting 1 2 Greeting 2 3 Greeting 3 4 Greeting 4 5 Greeting 5 6 Greeting 6 7 Greeting 7 8 Greeting 8 9 Greeting 9 Tip These values are available in Lua by their identifier in the tes3.dialoguePage.service.* namespace. For example, tes3.dialoguePage.service.infoRefusal has a value of 0 . ID Service 0 Info Refusal 1 Admire Success 2 Admire Fail 3 Initimidate Success 4 Initimidate Fail 5 Taunt Success 6 Taunt Fail 7 Service Refusal 8 Bribe Success 9 Bribe Fail","title":"Dialogue Types"},{"location":"references/dynamic-effect-types/","text":"Dynamic Effect Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.dynamicEffectType.* namespace. For example, tes3.dynamicEffectType.textureEffect has a value of 4 . ID Dynamic Effect 0 Ambient Light 1 Directional Light 2 Point Light 3 Spot Light 4 Texture Effect","title":"Dynamic Effect Types"},{"location":"references/dynamic-effect-types/#dynamic-effect-types","text":"Tip These values are available in Lua by their identifier in the tes3.dynamicEffectType.* namespace. For example, tes3.dynamicEffectType.textureEffect has a value of 4 . ID Dynamic Effect 0 Ambient Light 1 Directional Light 2 Point Light 3 Spot Light 4 Texture Effect","title":"Dynamic Effect Types"},{"location":"references/effect-attributes/","text":"Effect Attributes \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.effectAttribute.* namespace. For example, tes3.effectAttribute.resistBlightDisease has a value of 7 . ID Effect Attribute 0 Attack Bonus 1 Sanctuary 2 Resist Magicka 3 Resist Fire 4 Resist Frost 5 Resist Shock 6 Resist Common Disease 7 Resist Blight Disease 8 Resist Corprus 9 Resist Poison 10 Resist Paralysis 11 Chameleon 12 Resist Normal Weapons 13 Water Breathing 14 Water Walking 15 Swift Swim 16 Jump 17 Levitate 18 Shield 19 Sound 20 Silence 21 Blind 22 Paralyze 23 Invisibility 24 Fight 25 Flee 26 Hello 27 Alarm 28 Non Resistable","title":"Effect Attributes"},{"location":"references/effect-attributes/#effect-attributes","text":"Tip These values are available in Lua by their identifier in the tes3.effectAttribute.* namespace. For example, tes3.effectAttribute.resistBlightDisease has a value of 7 . ID Effect Attribute 0 Attack Bonus 1 Sanctuary 2 Resist Magicka 3 Resist Fire 4 Resist Frost 5 Resist Shock 6 Resist Common Disease 7 Resist Blight Disease 8 Resist Corprus 9 Resist Poison 10 Resist Paralysis 11 Chameleon 12 Resist Normal Weapons 13 Water Breathing 14 Water Walking 15 Swift Swim 16 Jump 17 Levitate 18 Shield 19 Sound 20 Silence 21 Blind 22 Paralyze 23 Invisibility 24 Fight 25 Flee 26 Hello 27 Alarm 28 Non Resistable","title":"Effect Attributes"},{"location":"references/effect-event-types/","text":"Effect Event Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.effectEventType.* namespace. For example, tes3.effectEventType.modStatistic has a value of 3 . ID Effect Range 0 Bool 0 Boolean 1 Int 1 Integer 2 Float 3 Mod Statistic","title":"Effect Event Types"},{"location":"references/effect-event-types/#effect-event-types","text":"Tip These values are available in Lua by their identifier in the tes3.effectEventType.* namespace. For example, tes3.effectEventType.modStatistic has a value of 3 . ID Effect Range 0 Bool 0 Boolean 1 Int 1 Integer 2 Float 3 Mod Statistic","title":"Effect Event Types"},{"location":"references/effect-ranges/","text":"Effect Ranges \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.effectRange.* namespace. For example, tes3.effectRange.target has a value of 2 . ID Effect Range 0 Self 1 Touch 2 Target","title":"Effect Ranges"},{"location":"references/effect-ranges/#effect-ranges","text":"Tip These values are available in Lua by their identifier in the tes3.effectRange.* namespace. For example, tes3.effectRange.target has a value of 2 . ID Effect Range 0 Self 1 Touch 2 Target","title":"Effect Ranges"},{"location":"references/enchantment-types/","text":"Enchantment Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.enchantmentType.* namespace. For example, tes3.enchantmentType.constant has a value of 3 . ID Enchantment Type 0 Cast Once 1 On Strike 2 On Use 3 Constant","title":"Enchantment Types"},{"location":"references/enchantment-types/#enchantment-types","text":"Tip These values are available in Lua by their identifier in the tes3.enchantmentType.* namespace. For example, tes3.enchantmentType.constant has a value of 3 . ID Enchantment Type 0 Cast Once 1 On Strike 2 On Use 3 Constant","title":"Enchantment Types"},{"location":"references/events/","text":"Events \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.event.* namespace. For example, tes3.event.calcRepairPrice has value calcRepairPrice . ID Event activate Activate activationTargetChanged Activation Target Changed attack Attack buttonPressed Button Pressed calcBarterPrice Calc Barter Price calcFlySpeed Calc Fly Speed calcMoveSpeed Calc Move Speed calcRepairPrice Calc Repair Price calcRestInterrupt Calc Rest Interrupt calcRunSpeed Calc Run Speed calcSpellPrice Calc Spell Price calcSwimRunSpeed Calc Swim Run Speed calcSwimSpeed Calc Swim Speed calcTrainingPrice Calc Training Price calcTravelPrice Calc Travel Price calcWalkSpeed Calc Walk Speed cellChanged Cell Changed combatStart Combat Start combatStarted Combat Started combatStop Combat Stop combatStopped Combat Stopped damage Damage damaged Damaged death Death enterFrame Enter Frame equip Equip equipped Equipped exerciseSkill Exercise Skill initialized Initialized journal Journal key Key keyDown Key Down keyUp Key Up levelUp Level Up leveledCreaturePicked Leveled Creature Picked leveledItemPicked Leveled Item Picked load Load loaded Loaded magicCasted Magic Casted menuEnter Menu Enter menuExit Menu Exit mobileActivated Mobile Activated mobileDeactivated Mobile Deactivated mouseAxis Mouse Axis mouseButtonDown Mouse Button Down mouseButtonUp Mouse Button Up mouseWheel Mouse Wheel musicSelectTrack Music Select Track potionBrewed Potion Brewed projectileExpire Projectile Expire projectileHitActor Projectile Hit Actor restInterrupt Rest Interrupt save Save saved Saved simulate Simulate skillRaised Skill Raised spellCast Spell Cast spellCasted Spell Casted spellCastedFailure Spell Casted Failure spellResist Spell Resist spellTick Spell Tick topicAdded Topic Added uiActivated Ui Activated uiEvent Ui Event uiObjectTooltip Ui Object Tooltip uiPreEvent Ui Pre Event uiRefreshed Ui Refreshed uiShowRestMenu Ui Show Rest Menu unequipped Unequipped weaponReadied Weapon Readied weaponUnreadied Weapon Unreadied weatherChangedImmediate Weather Changed Immediate weatherCycled Weather Cycled weatherTransitionFinished Weather Transition Finished weatherTransitionStarted Weather Transition Started","title":"Events"},{"location":"references/events/#events","text":"Tip These values are available in Lua by their identifier in the tes3.event.* namespace. For example, tes3.event.calcRepairPrice has value calcRepairPrice . ID Event activate Activate activationTargetChanged Activation Target Changed attack Attack buttonPressed Button Pressed calcBarterPrice Calc Barter Price calcFlySpeed Calc Fly Speed calcMoveSpeed Calc Move Speed calcRepairPrice Calc Repair Price calcRestInterrupt Calc Rest Interrupt calcRunSpeed Calc Run Speed calcSpellPrice Calc Spell Price calcSwimRunSpeed Calc Swim Run Speed calcSwimSpeed Calc Swim Speed calcTrainingPrice Calc Training Price calcTravelPrice Calc Travel Price calcWalkSpeed Calc Walk Speed cellChanged Cell Changed combatStart Combat Start combatStarted Combat Started combatStop Combat Stop combatStopped Combat Stopped damage Damage damaged Damaged death Death enterFrame Enter Frame equip Equip equipped Equipped exerciseSkill Exercise Skill initialized Initialized journal Journal key Key keyDown Key Down keyUp Key Up levelUp Level Up leveledCreaturePicked Leveled Creature Picked leveledItemPicked Leveled Item Picked load Load loaded Loaded magicCasted Magic Casted menuEnter Menu Enter menuExit Menu Exit mobileActivated Mobile Activated mobileDeactivated Mobile Deactivated mouseAxis Mouse Axis mouseButtonDown Mouse Button Down mouseButtonUp Mouse Button Up mouseWheel Mouse Wheel musicSelectTrack Music Select Track potionBrewed Potion Brewed projectileExpire Projectile Expire projectileHitActor Projectile Hit Actor restInterrupt Rest Interrupt save Save saved Saved simulate Simulate skillRaised Skill Raised spellCast Spell Cast spellCasted Spell Casted spellCastedFailure Spell Casted Failure spellResist Spell Resist spellTick Spell Tick topicAdded Topic Added uiActivated Ui Activated uiEvent Ui Event uiObjectTooltip Ui Object Tooltip uiPreEvent Ui Pre Event uiRefreshed Ui Refreshed uiShowRestMenu Ui Show Rest Menu unequipped Unequipped weaponReadied Weapon Readied weaponUnreadied Weapon Unreadied weatherChangedImmediate Weather Changed Immediate weatherCycled Weather Cycled weatherTransitionFinished Weather Transition Finished weatherTransitionStarted Weather Transition Started","title":"Events"},{"location":"references/flow-directions/","text":"Flow Directions \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.flowDirection.* namespace. For example, tes3.flowDirection.leftToRight has a value of left_to_right . ID Flow Direction left_to_right Left To Right top_to_bottom Top To Bottom","title":"Flow Directions"},{"location":"references/flow-directions/#flow-directions","text":"Tip These values are available in Lua by their identifier in the tes3.flowDirection.* namespace. For example, tes3.flowDirection.leftToRight has a value of left_to_right . ID Flow Direction left_to_right Left To Right top_to_bottom Top To Bottom","title":"Flow Directions"},{"location":"references/gmst/","text":"Game Settings (GMSTs) \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.gmst.* namespace. For example, tes3.gmst.sMonthMorningstar has a value of 0 . Index Type Identifier Default Value 0 string sMonthMorningstar \"sMonthMorningstar\" 1 string sMonthSunsdawn \"sMonthSunsdawn\" 2 string sMonthFirstseed \"sMonthFirstseed\" 3 string sMonthRainshand \"sMonthRainshand\" 4 string sMonthSecondseed \"sMonthSecondseed\" 5 string sMonthMidyear \"sMonthMidyear\" 6 string sMonthSunsheight \"sMonthSunsheight\" 7 string sMonthLastseed \"sMonthLastseed\" 8 string sMonthHeartfire \"sMonthHeartfire\" 9 string sMonthFrostfall \"sMonthFrostfall\" 10 string sMonthSunsdusk \"sMonthSunsdusk\" 11 string sMonthEveningstar \"sMonthEveningstar\" 12 string sSpecialization \"sSpecialization\" 13 string sSpecializationCombat \"sCombat\" 14 string sSpecializationMagic \"sMagic\" 15 string sSpecializationStealth \"sStealth\" 16 string sSkillClassMajor \"sSkillClassMajor\" 17 string sSkillClassMinor \"sSkillClassMinor\" 18 string sSkillClassMisc \"sSkillClassMisc\" 19 string sRacialTraits \"sRacialTraits\" 20 string sHealthPerHourOfRest \"sHealthPerHourOfRest\" 21 string sHealthPerLevel \"sHealthPerLevel\" 22 string sGoverningAttribute \"sGoverningAttribute\" 23 string sClass \"sClass\" 24 string sTraits \"sTraits\" 25 string sJournal \"sJournal\" 26 string sOK \"sOK\" 27 string sClose \"Close\" 28 string sPrev \"Prev\" 29 string sNext \"Next\" 30 string sTake \"Take\" 31 string sWeaponTab \"sWeaponTab\" 32 string sApparelTab \"sApparelTab\" 33 string sMagicTab \"sMagicTab\" 34 string sMiscTab \"sMiscTab\" 35 string sWornTab \"Worn\" 36 string sAllTab \"All\" 37 string sAttack \"Attack\" 38 string sUses \"Uses\" 39 string sQuality \"Quality:\" 40 string sCharges \"Charge\" 41 string sArmorRating \"sArmorRating\" 42 string sSlash \"sSlash\" 43 string sThrust \"sThrust\" 44 string sChop \"sChop\" 45 string sEncumbrance \"sEncumbrance\" 46 string sCondition \"sCondition\" 47 string sWeight \"sWeight\" 48 string sValue \"sValue\" 49 string sLight \"sLight\" 50 string sMedium \"sMedium\" 51 string sHeavy \"sHeavy\" 52 string sCancel \"sCancel\" 53 string sTakeAll \"Take All\" 54 string sUntilHealed \"Until Healed\" 55 string sRest \"sRest\" 56 string sWait \"sWait\" 57 string sRestIllegal \"sRestIllegal\" 58 string sGold \"sGold\" 59 string sMove \"sMove\" 60 string sTo \"to\" 61 string sActorInCombat \"This character is in combat.\" 62 string sArmor \"Armor\" 63 string sTopics \"Topics\" 64 string sService \"Service\" 65 string sPersuasion \"Persuasion\" 66 string sBye \"Bye\" 67 string sGoodbye \"Goodbye\" 68 string sYes \"Yes\" 69 string sNo \"No\" 70 string sOn \"On\" 71 string sOff \"Off\" 72 string sFull \"Full\" 73 string sWorld \"World\" 74 string sExpelled \"EXPELLED\" 75 string sExpelledMessage \"You have been expelled from \" 76 string sFavoriteSkills \"Favorite Skills\" 77 string sGame \"Game\" 78 string sVideo \"Video\" 79 string sAudio \"Audio\" 80 string sControls \"Controls\" 81 string sPrefs \"Prefs\" 82 string sPreferences \"Preferences\" 83 string sNewGame \"New Game\" 84 string sExitGame \"Exit Game\" 85 string sOptions \"Options Menu\" 86 string sSaveGame \"Save Game\" 87 string sLoadGame \"Load Game\" 88 string sDeleteGame \"Delete Game\" 89 string sSaveGameDenied \"You can not save your game right now.\" 90 string sSaveGameFailed \"An error was encountered while saving the game.\" 91 string sSaveGameTooBig \"There is not enough space to save this game. Free up at least %i blocks and try again.\" 92 string sSaveGameNoMemory \"Unable to create Save Game. Free up 100 blocks and try again.\" 93 string sMaximumSaveGameMessage \"You have reached the limit of Morrowind saved games. Please delete a Morrowind saved game and try again.\" 94 string sRender_Distance \"Render Distance\" 95 string sNear \"Near\" 96 string sFar \"Far\" 97 string sGamma_Correction \"Gamma Correction\" 98 string sLight_Gamma \"Light\" 99 string sDark_Gamma \"Dark\" 100 string sSeldom \"Seldom\" 101 string sAlways \"Always\" 102 string sWaterTerrainReflect \"Reflect Terrain\" 103 string sWaterReflectUpdate \"Reflection Updating\" 104 float fWaterReflectUpdateAlways 0.0000 105 float fWaterReflectUpdateSeldom 10.0000 106 string sMaster \"Master\" 107 string sVoice \"Voice\" 108 string sEffects \"Effect\" 109 string sFootsteps \"Footsteps\" 110 string sMusic \"Music\" 111 string sTransparency_Menu \"Transparency Menu\" 112 string sMenu_Help_Delay \"Menu Help Delay\" 113 string sAIDistance \"AI Distance\" 114 string sHigh \"High\" 115 string sLow \"Low\" 116 string sDetail_Level \"Detail Level\" 117 string sMenus \"Menus\" 118 string sStrip \"Strip\" 119 string sReturnToGame \"Return To Game\" 120 string sForward \"Forward\" 121 string sBack \"Back\" 122 string sLeft \"Left\" 123 string sRight \"Right\" 124 string sUse \"Use\" 125 string sActivate \"Activate\" 126 string sReady_Weapon \"Ready Weapon\" 127 string sReady_Magic \"Ready Magic\" 128 string sCrouch_Sneak \"Crouch/Sneak\" 129 string sRun \"Run\" 130 string sAlways_Run \"Always Run\" 131 string sAuto_Run \"Auto Run\" 132 string sJump \"Jump\" 133 string sNextWeapon \"NextWeapon\" 134 string sPrevWeapon \"PrevWeapon\" 135 string sNextSpell \"NextSpell\" 136 string sPrevSpell \"PrevSpell\" 137 string sTogglePOVCmd \"Toggle POV\" 138 string sMenu_Mode \"Menu Mode\" 139 string sJournalCmd \"Journal\" 140 string sRestKey \"Rest Menu\" 141 string sQuickMenu \"Quick Menu\" 142 string sQuick1Cmd \"Quick 1\" 143 string sQuick2Cmd \"Quick 2\" 144 string sQuick3Cmd \"Quick 3\" 145 string sQuick4Cmd \"Quick 4\" 146 string sQuick5Cmd \"Quick 5\" 147 string sQuick6Cmd \"Quick 6\" 148 string sQuick7Cmd \"Quick 7\" 149 string sQuick8Cmd \"Quick 8\" 150 string sQuick9Cmd \"Quick 9\" 151 string sQuick10Cmd \"Quick 10\" 152 string sQuickSaveCmd \"Quick Save\" 153 string sQuickLoadCmd \"Quick Load\" 154 string sKeyName_00 \"\" 155 string sKeyName_01 \"ESC\" 156 string sKeyName_02 \"1\" 157 string sKeyName_03 \"2\" 158 string sKeyName_04 \"3\" 159 string sKeyName_05 \"4\" 160 string sKeyName_06 \"5\" 161 string sKeyName_07 \"6\" 162 string sKeyName_08 \"7\" 163 string sKeyName_09 \"8\" 164 string sKeyName_0A \"9\" 165 string sKeyName_0B \"0\" 166 string sKeyName_0C \"-\" 167 string sKeyName_0D \"=\" 168 string sKeyName_0E \"Back Space\" 169 string sKeyName_0F \"Tab\" 170 string sKeyName_10 \"Q\" 171 string sKeyName_11 \"W\" 172 string sKeyName_12 \"E\" 173 string sKeyName_13 \"R\" 174 string sKeyName_14 \"T\" 175 string sKeyName_15 \"Y\" 176 string sKeyName_16 \"U\" 177 string sKeyName_17 \"I\" 178 string sKeyName_18 \"O\" 179 string sKeyName_19 \"P\" 180 string sKeyName_1A \"[\" 181 string sKeyName_1B \"]\" 182 string sKeyName_1C \"Return\" 183 string sKeyName_1D \"Left Ctrl\" 184 string sKeyName_1E \"A\" 185 string sKeyName_1F \"S\" 186 string sKeyName_20 \"D\" 187 string sKeyName_21 \"F\" 188 string sKeyName_22 \"G\" 189 string sKeyName_23 \"H\" 190 string sKeyName_24 \"J\" 191 string sKeyName_25 \"K\" 192 string sKeyName_26 \"L\" 193 string sKeyName_27 \";\" 194 string sKeyName_28 \"'\" 195 string sKeyName_29 \"Grave\" 196 string sKeyName_2A \"Left Shift\" 197 string sKeyName_2B \"\\\" 198 string sKeyName_2C \"Z\" 199 string sKeyName_2D \"X\" 200 string sKeyName_2E \"C\" 201 string sKeyName_2F \"V\" 202 string sKeyName_30 \"B\" 203 string sKeyName_31 \"N\" 204 string sKeyName_32 \"M\" 205 string sKeyName_33 \",\" 206 string sKeyName_34 \".\" 207 string sKeyName_35 \"/\" 208 string sKeyName_36 \"Right Shift\" 209 string sKeyName_37 \"Numpad *\" 210 string sKeyName_38 \"Left Alt\" 211 string sKeyName_39 \"Space\" 212 string sKeyName_3A \"Caps Lock\" 213 string sKeyName_3B \"F1\" 214 string sKeyName_3C \"F2\" 215 string sKeyName_3D \"F3\" 216 string sKeyName_3E \"F4\" 217 string sKeyName_3F \"F5\" 218 string sKeyName_40 \"F6\" 219 string sKeyName_41 \"F7\" 220 string sKeyName_42 \"F8\" 221 string sKeyName_43 \"F9\" 222 string sKeyName_44 \"F10\" 223 string sKeyName_45 \"Num Lock\" 224 string sKeyName_46 \"Scroll Lock\" 225 string sKeyName_47 \"Numpad 7\" 226 string sKeyName_48 \"Numpad 8\" 227 string sKeyName_49 \"Numpad 9\" 228 string sKeyName_4A \"Numpad -\" 229 string sKeyName_4B \"Numpad 4\" 230 string sKeyName_4C \"Numpad 5\" 231 string sKeyName_4D \"Numpad 6\" 232 string sKeyName_4E \"Numpad +\" 233 string sKeyName_4F \"Numpad 1\" 234 string sKeyName_50 \"Numpad 2\" 235 string sKeyName_51 \"Numpad 3\" 236 string sKeyName_52 \"Numpad 0\" 237 string sKeyName_53 \"Decimal\" 238 string sKeyName_54 \"\" 239 string sKeyName_55 \"\" 240 string sKeyName_56 \"OEM 102\" 241 string sKeyName_57 \"F11\" 242 string sKeyName_58 \"F12\" 243 string sKeyName_59 \"\" 244 string sKeyName_5A \"\" 245 string sKeyName_5B \"\" 246 string sKeyName_5C \"\" 247 string sKeyName_5D \"\" 248 string sKeyName_5E \"\" 249 string sKeyName_5F \"\" 250 string sKeyName_60 \"\" 251 string sKeyName_61 \"\" 252 string sKeyName_62 \"\" 253 string sKeyName_63 \"\" 254 string sKeyName_64 \"F13\" 255 string sKeyName_65 \"F14\" 256 string sKeyName_66 \"F15\" 257 string sKeyName_67 \"\" 258 string sKeyName_68 \"\" 259 string sKeyName_69 \"\" 260 string sKeyName_6A \"\" 261 string sKeyName_6B \"\" 262 string sKeyName_6C \"\" 263 string sKeyName_6D \"\" 264 string sKeyName_6E \"\" 265 string sKeyName_6F \"\" 266 string sKeyName_70 \"Kana\" 267 string sKeyName_71 \"\" 268 string sKeyName_72 \"\" 269 string sKeyName_73 \"Abnt C1\" 270 string sKeyName_74 \"\" 271 string sKeyName_75 \"\" 272 string sKeyName_76 \"\" 273 string sKeyName_77 \"\" 274 string sKeyName_78 \"\" 275 string sKeyName_79 \"Cnvrt\" 276 string sKeyName_7A \"\" 277 string sKeyName_7B \"No Cnvrt\" 278 string sKeyName_7C \"\" 279 string sKeyName_7D \"Yen\" 280 string sKeyName_7E \"Abnt C2\" 281 string sKeyName_7F \"\" 282 string sKeyName_80 \"\" 283 string sKeyName_81 \"\" 284 string sKeyName_82 \"\" 285 string sKeyName_83 \"\" 286 string sKeyName_84 \"\" 287 string sKeyName_85 \"\" 288 string sKeyName_86 \"\" 289 string sKeyName_87 \"\" 290 string sKeyName_88 \"\" 291 string sKeyName_89 \"\" 292 string sKeyName_8A \"\" 293 string sKeyName_8B \"\" 294 string sKeyName_8C \"\" 295 string sKeyName_8D \"Np Equals\" 296 string sKeyName_8E \"\" 297 string sKeyName_8F \"\" 298 string sKeyName_90 \"PrvTrk\" 299 string sKeyName_91 \"AT\" 300 string sKeyName_92 \":\" 301 string sKeyName_93 \"_\" 302 string sKeyName_94 \"Kanji\" 303 string sKeyName_95 \"Stop\" 304 string sKeyName_96 \"Ax\" 305 string sKeyName_97 \"Unlabeled\" 306 string sKeyName_98 \"\" 307 string sKeyName_99 \"NxtTrk\" 308 string sKeyName_9A \"\" 309 string sKeyName_9B \"\" 310 string sKeyName_9C \"Right Enter\" 311 string sKeyName_9D \"Right Ctrl\" 312 string sKeyName_9E \"\" 313 string sKeyName_9F \"\" 314 string sKeyName_A0 \"Mute\" 315 string sKeyName_A1 \"Calc\" 316 string sKeyName_A2 \"Play Pause\" 317 string sKeyName_A3 \"\" 318 string sKeyName_A4 \"Media Stop\" 319 string sKeyName_A5 \"\" 320 string sKeyName_A6 \"\" 321 string sKeyName_A7 \"\" 322 string sKeyName_A8 \"\" 323 string sKeyName_A9 \"\" 324 string sKeyName_AA \"\" 325 string sKeyName_AB \"\" 326 string sKeyName_AC \"\" 327 string sKeyName_AD \"\" 328 string sKeyName_AE \"Volume Down\" 329 string sKeyName_AF \"\" 330 string sKeyName_B0 \"Volume Up\" 331 string sKeyName_B1 \"\" 332 string sKeyName_B2 \"Web Home\" 333 string sKeyName_B3 \"Numpad ,\" 334 string sKeyName_B4 \"\" 335 string sKeyName_B5 \"Numpad /\" 336 string sKeyName_B6 \"\" 337 string sKeyName_B7 \"SysRq\" 338 string sKeyName_B8 \"Right Alt\" 339 string sKeyName_B9 \"\" 340 string sKeyName_BA \"\" 341 string sKeyName_BB \"\" 342 string sKeyName_BC \"\" 343 string sKeyName_BD \"\" 344 string sKeyName_BE \"\" 345 string sKeyName_BF \"\" 346 string sKeyName_C0 \"\" 347 string sKeyName_C1 \"\" 348 string sKeyName_C2 \"\" 349 string sKeyName_C3 \"\" 350 string sKeyName_C4 \"\" 351 string sKeyName_C5 \"Pause\" 352 string sKeyName_C6 \"\" 353 string sKeyName_C7 \"Home\" 354 string sKeyName_C8 \"Up\" 355 string sKeyName_C9 \"Page Up\" 356 string sKeyName_CA \"\" 357 string sKeyName_CB \"Left\" 358 string sKeyName_CC \"\" 359 string sKeyName_CD \"Right\" 360 string sKeyName_CE \"\" 361 string sKeyName_CF \"End\" 362 string sKeyName_D0 \"Down\" 363 string sKeyName_D1 \"Page Down\" 364 string sKeyName_D2 \"Insert\" 365 string sKeyName_D3 \"Delete\" 366 string sKeyName_D4 \"\" 367 string sKeyName_D5 \"\" 368 string sKeyName_D6 \"\" 369 string sKeyName_D7 \"\" 370 string sKeyName_D8 \"\" 371 string sKeyName_D9 \"\" 372 string sKeyName_DA \"\" 373 string sKeyName_DB \"Left Win\" 374 string sKeyName_DC \"Right Win\" 375 string sKeyName_DD \"Apps\" 376 string sKeyName_DE \"Power\" 377 string sKeyName_DF \"Sleep\" 378 string sKeyName_E0 \"\" 379 string sKeyName_E1 \"\" 380 string sKeyName_E2 \"\" 381 string sKeyName_E3 \"Wake\" 382 string sKeyName_E4 \"\" 383 string sKeyName_E5 \"Web Search\" 384 string sKeyName_E6 \"Web Favs\" 385 string sKeyName_E7 \"Web Ref\" 386 string sKeyName_E8 \"Web Stop\" 387 string sKeyName_E9 \"Web Fwd\" 388 string sKeyName_EA \"Web Back\" 389 string sKeyName_EB \"My Comp\" 390 string sKeyName_EC \"\" 391 string sKeyName_ED \"\" 392 string sKeyName_EE \"\" 393 string sKeyName_EF \"\" 394 string sKeyName_F0 \"\" 395 string sKeyName_F1 \"\" 396 string sKeyName_F2 \"\" 397 string sKeyName_F3 \"\" 398 string sKeyName_F4 \"\" 399 string sKeyName_F5 \"\" 400 string sKeyName_F6 \"\" 401 string sKeyName_F7 \"\" 402 string sKeyName_F8 \"\" 403 string sKeyName_F9 \"\" 404 string sKeyName_FA \"\" 405 string sKeyName_FB \"\" 406 string sKeyName_FC \"\" 407 string sKeyName_FD \"\" 408 string sKeyName_FE \"\" 409 string sKeyName_FF \"\" 410 string sForwardXbox \"Move Forward\" 411 string sBackXbox \"Move Backward\" 412 string sSlideLeftXbox \"Slide Left\" 413 string sSlideRightXbox \"Slide Right\" 414 string sMenuModeXbox \"Menu Mode\" 415 string sActivateXbox \"Activate\" 416 string sUseXbox \"Use\" 417 string sReadyItemXbox \"Ready Item\" 418 string sReadyMagicXbox \"Ready Magic\" 419 string sCrouchXbox \"Crouch\" 420 string sRunXbox \"Run\" 421 string sToggleRunXbox \"Toggle Run\" 422 string sJumpXbox \"Jump\" 423 string sTogglePOVXbox \"Toggle P.O.V.\" 424 string sMenuNextXbox \"Next Menu\" 425 string sMenuPrevXbox \"Previous Menu\" 426 string sJournalXbox \"Journal\" 427 string sQuick4Xbox \"sQuick4Xbox\" 428 string sQuick5Xbox \"sQuick5Xbox\" 429 string sQuick6Xbox \"sQuick6Xbox\" 430 string sQuick7Xbox \"sQuick7Xbox\" 431 string sQuick8Xbox \"sQuick8Xbox\" 432 string sQuick9Xbox \"sQuick9Xbox\" 433 string sQuick0Xbox \"sQuick0Xbox\" 434 string sOptionsMenuXbox \"Options Menu\" 435 string sSystemMenuXbox \"System Menu\" 436 string sRestMenuXbox \"Rest/Wait\" 437 string sQuickSaveXbox \"Quick Save\" 438 string sQuickLoadXbox \"Quick Load\" 439 string sMoveUpXbox \"Move Up\" 440 string sMoveDownXbox \"Move Down\" 441 string sLookUpXbox \"Look Up\" 442 string sLookDownXbox \"Look Down\" 443 string sTurnLeftXbox \"Turn Left\" 444 string sTurnRightXbox \"Turn Right\" 445 string sNextWeaponXbox \"Next Weapon\" 446 string sPrevWeaponXbox \"Previous Weapon\" 447 string sNextSpellXbox \"Next Spell\" 448 string sPrevSpellXbox \"Previous Spell\" 449 string sDialogText1Xbox \"PUSH\" 450 string sDialogText2Xbox \"TO GO BACK\" 451 string sDialogText3Xbox \"TO READ MORE\" 452 string sQuick_Save \"Quick-Save when Rest\" 453 string sShadowText \"Real-time Shadows\" 454 string sLockSuccess \"Lock pick success!\" 455 string sLockFail \"Lock pick failed.\" 456 string sLockImpossible \"Lock too complex, your chance to pick it is zero\" 457 string sTrapSuccess \"Disarm trap success!\" 458 string sTrapFail \"Disarm trap failed.\" 459 string sTrapImpossible \"Trap too complex, your chance to disarm it is zero\" 460 string sTrapped \"Trapped\" 461 string sLockLevel \"Lock Level\" 462 string sKeyUsed \"used to open lock.\" 463 string sUnlocked \"Unlocked\" 464 float fRepairMult 1.0000 465 float fRepairAmountMult 0.5000 466 float fSpellValueMult 10.0000 467 float fSpellMakingValueMult 1.0000 468 float fEnchantmentValueMult 1.0000 469 float fTravelMult 200.0000 470 float fTravelTimeMult 2667.0000 471 float fMagesGuildTravel 10.0000 472 string sBarter \"Barter\" 473 string sRepair \"Repair\" 474 string sSpells \"Spells\" 475 string sTraining \"Training\" 476 string sTravel \"Travel\" 477 string sSpellmaking \"Spellmaking\" 478 string sEnchanting \"Enchanting\" 479 string sJoystickNotFound \"Joystick not found.\" 480 string sJournalEntry \"Your journal has been updated.\" 481 string sDay \"Day\" 482 string sCreate \"Create\" 483 string sIngredients \"Ingredients\" 484 string sApparatus \"Apparatus\" 485 string sCreatedEffects \"Created Effects\" 486 string sOnetypeEffectMessage \"This effect has already been added.\" 487 string sName \"Name\" 488 string sNameTitle \"Name\" 489 string sSelect \"Select\" 490 string sBuy \"Buy\" 491 string sInfo \"Info\" 492 string sMagicEffects \"Magic Effects\" 493 string sOnce \"Once\" 494 string sCostCharge \"Cost/Charge\" 495 string sCostChance \"Cost/Chance\" 496 string sAttributesMenu1 \"Choose an Attribute \" 497 string sBirthsignmenu1 \"Abilities\" 498 string sBirthsignmenu2 \"Spells\" 499 string sChooseClassMenu1 \"Specilization:\" 500 string sChooseClassMenu2 \"Favorite Attributes:\" 501 string sChooseClassMenu3 \"Major Skills:\" 502 string sChooseClassMenu4 \"Minor Skills:\" 503 string sCreateClassMenuWarning \"Reselect your class?\" 504 string sClassChoiceMenu1 \"(1) Answer Questions (Generates Class)\" 505 string sClassChoiceMenu2 \"(2) Give him the info. (Pick from Class List)\" 506 string sClassChoiceMenu3 \"(3) Fill out yourself. (Create Custom Class)\" 507 string sNotifyMessage1 \"You can't rest when in water or flying.\" 508 string sNotifyMessage2 \"You can't rest here enemies are nearby.\" 509 string sNotifyMessage3 \"You can't sleep when dreaming.\" 510 string sNotifyMessage4 \"Saving...\" 511 string sNotifyMessage4XBOX \"Saving Game. Please don't turn off your Xbox console.\" 512 string sNotifyMessage5 \"You must place the object you are holding into a container before exiting menus.\" 513 string sNotifyMessage6 \"Only one of each ingredient can be used to make a potion.\" 514 string sNotifyMessage6a \"At least two ingredients are needed to make a potion.\" 515 string sNotifyMessage7 \"Only eight ingredients can be used in a potion.\" 516 string sNotifyMessage8 \"Your potion failed.\" 517 string sNotifyMessage9 \"Your offer is refused.\" 518 string sNotifyMessage10 \"You have to type a name.\" 519 string sNotifyMessage11 \"You have to have an item to enchant.\" 520 string sNotifyMessage12 \"You don't have enough money to buy this spell.\" 521 string sNotifyMessage13 \"Beast races can not wear full helmets.\" 522 string sNotifyMessage14 \"Beast races can not wear boots.\" 523 string sNotifyMessage15 \"Beast races can not wear shoes.\" 524 string sNotifyMessage16 \"You can only wear one clothing item at a time.\" 525 string sNotifyMessage16_a \"You can only equip one item of that type at a time.\" 526 string sNotifyMessage17 \"Can't raise the skill above the attribute.\" 527 string sNotifyMessage18 \"You don't have enough money to buy this spell.\" 528 string sNotifyMessage19 \"Only one apparatus can be placed in each slot of the alchemy menu.\" 529 string sNotifyMessage20 \"Please remove the object already in the morter and pestal slot.\" 530 string sNotifyMessage21 \"Please remove the object already in the alembic slot.\" 531 string sNotifyMessage22 \"Please remove the object already in the calcinator slot.\" 532 string sNotifyMessage23 \"Please remove the object already in the retort slot.\" 533 string sNotifyMessage24 \"You need to assign all the major and minor skill slots.\" 534 string sNotifyMessage25 \"You need to pick two favorite attributes.\" 535 string sNotifyMessage26 \"You need to pick a specilization.\" 536 string sNotifyMessage27 \"You need to assign all the major and minor skill slots.\" 537 string sNotifyMessage28 \"You can only add eight effects to a spell.\" 538 string sNotifyMessage29 \"You can not add more enchantment to an object then it can hold.\" 539 string sNotifyMessage30 \"You have to add at least one effect to a spell.\" 540 string sNotifyMessage31 \"Items already enchanted can not have another enchanment added.\" 541 string sNotifyMessage32 \"Only soul gems with a soul can be put in the soulgem slot.\" 542 string sNotifyMessage33 \"Only soul gems put in the soulgem slot.\" 543 string sNotifyMessage34 \"The enchantment failed and your object is distroyed.\" 544 string sNotifyMessage35 \"Only one item of this type can be equipped at a time.\" 545 string sNotifyMessage36 \"You have to distribute all you points before exiting the levelup menu.\" 546 string sNotifyMessage37 \"You need to type in a name.\" 547 string sNotifyMessage38 \"Skill Increase:\" 548 string sNotifyMessage39 \"\\nYour %s skill increased to %d.\" 549 string sNotifyMessage40 \"Skill Maximum Reached.\" 550 string sNotifyMessage41 \"Your %s skill has reached the limit of your %s.\\n\" 551 string sNotifyMessage42 \"You have been released after %d day.\\r\\nA skill has been effected by your time in prison.\\n \" 552 string sNotifyMessage43 \"You have been released after %d days.\\r\\nYour skills have been effected by your time in prison.\\n \" 553 string sNotifyMessage44 \"\\nYour %s skill decreased to %d.\" 554 string sNotifyMessage45 \"You need a Mortar and Pestle to use\" 555 string sNotifyMessage46 \"You need a Alembic to use\" 556 string sNotifyMessage47 \"You need a Calcinator to use\" 557 string sNotifyMessage48 \"You need a Retort to use\" 558 string sNotifyMessage49 \"That %s is mine.\" 559 string sNotifyMessage50 \"%s has no effect on you.\" 560 string sNotifyMessage51 \"The %s has been used up and disappears.\" 561 string sNotifyMessage52 \"You must have a soulgem with a soul to make an Enchanted Item\" 562 string sNotifyMessage53 \"Your menu sizes and positions have been saved for exploring mode.\" 563 string sNotifyMessage54 \"Do you want to start a new game and lose your current game?\" 564 string sNotifyMessage55 \"Please reconnect the controller and press START to continue.\" 565 string sNotifyMessage56 \"The disc you are using may be dirty or damaged.\\nPress A to continue.\" 566 string sNotifyMessage57 \"Please press START to begin.\" 567 string sNotifyMessage58 \"Your Xbox Hard Disk doesn't have enough free blocks to save games. \\nPress A to continue without saving \\nor B to free more blocks.\" 568 string sNotifyMessage59 \"You are over-encumbered.\" 569 string sNotifyMessage60 \"%s has been added to your inventory.\" 570 string sNotifyMessage61 \"%d %s has been added to your inventory.\" 571 string sNotifyMessage62 \"%s has been removed from your inventory.\" 572 string sNotifyMessage63 \"%d %s has been removed from your inventory.\" 573 string sNotifyMessage64 \"You can't sleep in someone else's bed!\" 574 string sNotifyMessage65 \"You can't save a game with no name!\" 575 string sNotifyMessage66 \"This will reset all controls to the default settings. Do you wish to continue?\" 576 string sNotifyMessage67 \"This will immediately change your resolution. Do you want to continue?\" 577 string sTeleportDisabled \"Teleportation magic does not work here.\" 578 string sLevitateDisabled \"Levitation magic does not work here.\" 579 string sInPrisonTitle \"Serving time...\" 580 string sInfoRefusal \"Info Refusal\" 581 string sAdmireSuccess \"Admire Success\" 582 string sAdmireFail \"Admire Fail\" 583 string sIntimidateSuccess \"Intimidate Success\" 584 string sIntimidateFail \"Intimidate Fail\" 585 string sTauntSuccess \"Taunt Success\" 586 string sTauntFail \"Taunt Fail\" 587 string sServiceRefusal \"Service Refusal\" 588 string sBribeSuccess \"Bribe Success\" 589 string sBribeFail \"Bribe Fail\" 590 string sWerewolfRefusal \"You cannot do this as a werewolf.\" 591 string sWerewolfPopup \"Werewolf\" 592 string sWerewolfRestMessage \"You cannot rest in werewolf form.\" 593 string sWerewolfAlarmMessage \"You have been detected changing from a werewolf state.\" 594 string sBookSkillMessage \"You have gained knowledge from this book.\" 595 string sLoadingMessage1 \"Loading Master/Plugin Files\" 596 string sLoadingMessage2 \"Loading Interior\" 597 string sLoadingMessage3 \"Loading Exterior\" 598 string sLoadingMessage4 \"Initializing Loaded Data...\" 599 string sLoadingMessage5 \"Parsing Quests...\" 600 string sLoadingMessage9 \"Clearing Altered Data...\" 601 string sLoadingMessage14 \"Loading Save Game (%s)\" 602 string sLoadingMessage15 \"Loading File (%s)\" 603 string sInvalidSaveGameMsg \"This file is an invalid Save Game.\" 604 string sInvalidSaveGameMsgXBOX \"Unable to load saved game. Press A to continue.\" 605 string sLoadingErrorsMsg \"Errors were encountered loading from file '%s'.\" 606 string sMissingMastersMsg \"The currently selected master files and plugins do not match the ones used by this save game. Errors may occur during load or game play.\\nDo you wish to continue?\" 607 string sChangedMastersMsg \"The selected master files and plugins may have changed since this save game was created. Errors may occur during load or game play.\\nDo you wish to continue?\" 608 string sMastPlugMismatchMsg \"One of the files that \"%s\" is dependent on has changed since the last save.\\r\\nThis may result in errors. Saving again will clear this message\\r\\nbut not necessarily fix any errors.\\r\\n\" 609 string sGeneralMastPlugMismatchMsg \"One or more plugins could not find the correct versions of the master files they depend on. Errors may occur during load or game play. Check the \"Warnings.txt\" file for more information.\" 610 string sLoadLastSaveMsg \"The most recent Save Game is '%s'. \\nWould you like to load it?\" 611 string sMessage1 \"Do you want to Load a save game and lose your current game?\" 612 string sMessage2 \"Quit Morrowind?\" 613 string sMessage3 \"Are you sure you want to delete this Save Game?\" 614 string sMessage4 \"Are you sure you want to overwrite this Save Game?\" 615 string sMessage5 \"Do you wish to quit your current game? \\nAll unsaved progress will be lost.\" 616 string sMessageQuestionAnswer1 \"Your personality and past reflect that of a:\" 617 string sMessageQuestionAnswer2 \"Accept this Class\" 618 string sMessageQuestionAnswer3 \"Choose Another Class\" 619 string sBarterDialog1 \"You can not afford this transaction.\" 620 string sBarterDialog2 \"I can not afford this transaction.\" 621 string sBarterDialog3 \"This is to heavy for you to carry. \" 622 string sBarterDialog4 \"I don't buy that item.\" 623 string sBarterDialog5 \"Thank you, Please Come Again.\" 624 string sBarterDialog6 \"You need to place the bartered item before existing Barter Menu!\" 625 string sBarterDialog7 \"Price\" 626 string sBarterDialog8 \"Offer\" 627 string sBarterDialog9 \"You can not sell summoned items!\" 628 string sBarterDialog10 \"You can't buy summoned items!\" 629 string sBarterDialog11 \"You need to trade items before making an offer.\" 630 string sBarterDialog12 \"You can not drop summoned items!\" 631 string sInventoryMessage1 \"You can not equip objects whose health is less then one!\" 632 string sInventoryMessage2 \"You can not repair items duing battle!\" 633 string sInventoryMessage3 \"You can not make potions during battle!\" 634 string sInventoryMessage4 \"You can not read duing battle!\" 635 string sInventoryMessage5 \"You can not use soul gems duing battle!\" 636 string sContentsMessage1 \"You can't remove summoned items from their container.\" 637 string sContentsMessage2 \"You can't store objects in organic containers.\" 638 string sContentsMessage3 \"This container can not hold that item.\" 639 string sAttributeListTitle \"Attribute List\" 640 string sConsoleTitle \"Console\" 641 string sCreateClassMenu1 \"Class Description\" 642 string sCreateClassMenu2 \"Close the Description menu before leaving Class Creation\" 643 string sCreateClassMenu3 \"The class needs a description.\" 644 string sCreateClassMenuHelp1 \"You'll get +5 to all skills of your specialization. They'll also be easier to increase.\" 645 string sCreateClassMenuHelp2 \"You'll get +10 to each of your favored attributes.\" 646 string sControlsMenu1 \"Reset Controls\" 647 string sControlsMenu2 \"Mouse Sensitivity\" 648 string sControlsMenu3 \"Press a key or push a button to set this command.\" 649 string sControlsMenu4 \"Vertical Sensitivity\" 650 string sControlsMenu5 \"Horizontal Sensitivity\" 651 string sControlsMenu6 \"Push a button to set this command.\" 652 string sGameWithoutLauncherXbox \"The game was started without the launcher. Press START to continue.\" 653 string sDialogMenu1 \"Final Disposition: \" 654 string sEnchantmentMenu1 \"Enchantment Menu\" 655 string sEnchantmentMenu2 \"Name\" 656 string sEnchantmentMenu3 \"Enchantment\" 657 string sEnchantmentMenu4 \"Point Cost\" 658 string sEnchantmentMenu5 \"Buy\" 659 string sEnchantmentMenu6 \"Chance\" 660 string sEnchantmentMenu7 \"Please remove the current soulgem before placing a different soulgem.\" 661 string sEnchantmentMenu8 \"You can't buy a spell that has a zero point cost.\" 662 string sEnchantmentMenu9 \"You can not enchant more then one item of that type at a time.\" 663 string sEnchantmentMenu10 \"The cast cost can not exceed the charge amount put into the time\" 664 string sEnchantmentMenu11 \"You must add at least one effect to an enchantment\" 665 string sEnchantmentMenu12 \"You have successfully created an enchanted item\" 666 string sEnchantmentHelp1 \"Slot for item to enchant. Only weapons, armor, scrolls and clothing that are not already enchanted can be enchanted.\" 667 string sEnchantmentHelp2 \"Slot for the soul gem used to enchant an item. Only soul gems filled with a soul can be used. The soul amount is the total charge placed into the item.\" 668 string sEnchantmentHelp3 \"The first number is the total amount the enchantment would cost to cast. The second number is the total enchantment cost that can be placed on this type of item.\" 669 string sEnchantmentHelp4 \"The amount of charge points needed each time this enchantment is cast. This number is modified by your enchant skill.\" 670 string sEnchantmentHelp5 \"The amount of soul in the soulgem in the soulgem slot\" 671 string sEnchantmentHelp6 \"Amount of gold to buy this enchantment\" 672 string sEnchantmentHelp7 \"Type of cast for the enchantment.\" 673 string sEnchantmentHelp8 \"Name you give the spell.\" 674 string sEnchantmentHelp9 \"Magic effects you know that you can add to an item\" 675 string sEnchantmentHelp10 \"Current effects on the item\" 676 string sInputMenu1 \"Enter\" 677 string sInventoryMenu1 \"You can't equip items being bartered!\" 678 string sLevelUpMenu1 \"You have ascended to Level \" 679 string sLevelUpMenu2 \"It's all suddenly obvious to you. You just have to concentrate. All the energy and time you've wasted it's a sin but without the experience you've gained, taking risks, taking responsibility for failure how could you have understood?\" 680 string sLevelUpMenu3 \"x2\" 681 string sLevelUpMenu4 \"x3\" 682 string sLevelUpMsg \"Your are ready for your next Level Up!\" 683 string sLevelUp \"Level Up\" 684 string sRange \"Range\" 685 string sArea \"Area\" 686 string sMagnitude \"Magnitude\" 687 string sDuration \"Duration\" 688 string sDrain \"Drain\" 689 string sAbsorb \"Absorb\" 690 string sFortify \"Fortify\" 691 string sRestore \"Restore\" 692 string sDamage \"Damage\" 693 string spoint \"point\" 694 string spoints \"points\" 695 string spercent \"percent\" 696 string sfor \"for\" 697 string ssecond \"second\" 698 string sseconds \"seconds\" 699 string sin \"in\" 700 string sfootarea \"foot\" 701 string sfeet \"feet\" 702 string sXTimes \"x\" 703 string sXTimesINT \"x INT\" 704 string sonword \"on\" 705 string sNone \"None\" 706 string sDone \"Done\" 707 string sStartCell \"Imperial Prison Ship\" 708 string sStartError \"Cannot start in an empty interior cell!\" 709 string sStartCellError \"Starting interior cell \"Imperial Prison Ship\" not found!\" 710 string sAdmire \"Admire\" 711 string sIntimidate \"Intimidate\" 712 string sTaunt \"Taunt\" 713 string sBribe 10 Gold \"Bribe 10 Gold\" 714 string sBribe 100 Gold \"Bribe 100 Gold\" 715 string sBribe 1000 Gold \"Bribe 1000 Gold\" 716 string sPersuasionMenuTitle \"Persuasion Menu\" 717 string sFast \"Fast\" 718 string sSlow \"Slow\" 719 string sBestAttack \"Always Use Best Attack\" 720 string sSubtitles \"Subtitles\" 721 string sMouseFlip \"Mouse Flip Y\" 722 string sCursorOff \"Cursor Off\" 723 string sEnableJoystick \"Enable Joystick\" 724 string sXStrafe \"X-Axis Movement\" 725 string sStrafe \"Strafe\" 726 string sTurn \"Turn\" 727 string sMouseWheelUpShort \"MWheel Up\" 728 string sMouseWheelDownShort \"MWheel Down\" 729 string sMouse \"Mouse\" 730 string sJoystickShort \"Joy\" 731 string sJoystickHatShort \"JHat\" 732 string sPickUp \"Pick Up\" 733 string sItemName \"Item Name\" 734 string sNoName \"NO NAME GIVEN!\" 735 string sItem \"Item\" 736 string sRaceMenu1 \"Appearance\" 737 string sRaceMenu2 \"Change Sex\" 738 string sRaceMenu3 \"Change Face\" 739 string sRaceMenu4 \"Change Hair\" 740 string sRaceMenu5 \"Select Race\" 741 string sRaceMenu6 \"Race Description\" 742 string sRaceMenu7 \"Specials\" 743 string sRestMenu1 \"How many hours ?\" 744 string sRestMenu2 \"Hours\" 745 string sRestMenu3 \"REST\" 746 string sRestMenu4 \"You can't rest right now.\" 747 float fRestMagicMult 0.0500 748 string sSaveMenu1 \"NewSaveGame\" 749 string sServiceRepairTitle \"Repair Service Menu\" 750 string sServiceTravelTitle \"Travel Service Menu\" 751 string sServiceTrainingTitle \"Training Service Menu\" 752 string sServiceTrainingWords \"I can teach nothing more about that skill\" 753 string sServiceSpellsTitle \"Spells Service Menu\" 754 string sSkillsMenu1 \"Choose a Skill\" 755 string sBonusSkillTitle \"Bonus Skills\" 756 string sSpecializationMenu1 \"Choose a Specialization\" 757 string sSpellmakingMenuTitle \"SpellMaking Menu\" 758 string sSpellmakingMenu1 \"Spell Chance\" 759 string sSpellmakingHelp1 \"Name you give the spell.\" 760 string sSpellmakingHelp2 \"Amount of Magika one cast of the spell will cost\" 761 string sSpellmakingHelp3 \"The chance you have to cast the spell at your current skill level\" 762 string sSpellmakingHelp4 \"How much gold the spell will cost you.\" 763 string sSpellmakingHelp5 \"Magic effects you know that you can add to a spell\" 764 string sSpellmakingHelp6 \"Current effects on the spell\" 765 string sKilledEssential \"Oh no you've killed somebody important!\" 766 string sCrimeMessage \"Your crime has been reported!\" 767 string sPotionSuccess \"You created a potion\" 768 string sMagicItem \"Magic Item(s)\" 769 string sMagnitudeDes \"The range of a spells power\" 770 string sAreaDes \"The radius the spell attempt to affect\" 771 string sDurationDes \"The length a spell lasts\" 772 string sRangeDes \"What the spell is directed at such as yourself, a target or who you touch\" 773 string sCrimeHelp \"The penalty you must pay for your crimes, if caught.\" 774 string sSoulGem \"Soul\" 775 string sCastCost \"Cast Cost\" 776 string sTravelServiceTitle \"Click on Place name to travel\" 777 string sSpellServiceTitle \"Click on Spell name to buy Spell\" 778 string sRepairServiceTitle \"Click on item name to repair\" 779 string sTrainingServiceTitle \"Click on skill to train\" 780 string sMortar \"Mortar\" 781 string sCalcinator \"Calcinator\" 782 string sAlembic \"Alembic\" 783 string sRetort \"Retort\" 784 string sQuestionMark \"?\" 785 string s3dAudio \"3D Audio\" 786 string s3dHardware \"Hardware Accelerated\" 787 string s3dSoftware \"Software Mode\" 788 string sYourGold \"YOUR GOLD\" 789 string sSellerGold \"SELLER GOLD\" 790 string sMaxSale \"Max Sale\" 791 string sTotalCost \"TOTAL COST\" 792 string sTotalSold \"TOTAL SOLD\" 793 string sOffer \"Offer\" 794 string sLess \"Less\" 795 string sMore \"More\" 796 string sInventory \"Inventory\" 797 string sBookPageOne \"1\" 798 string sBookPageTwo \"2\" 799 string sDisposeofCorpse \"Dispose of Corpse\" 800 string sCaughtStealingMessage \"Hey he stealing my stuff!\" 801 string sUserDefinedClass \"User Defined Class\" 802 string sAsk \"Ask\" 803 string sEnchantItems \"Items to Enchant\" 804 string sSoulGemsWithSouls \"SoulGems with Souls\" 805 string sDoYouWantTo \"Do you want to \" 806 string sRechargeEnchantment \"Recharge Enchanted Item \" 807 string sMake Enchantment \"Make an Enchanted Item \" 808 string sSell \"Sell\" 809 string sEquip \"Equip\" 810 string sDrop \"Drop\" 811 string sContainer \"Container \" 812 string sStats \"Stats \" 813 string sMap \"Map \" 814 string sCenter \"Center \" 815 string sSaveMenuHelp01 \"th of\" 816 string sSaveMenuHelp02 \"month\" 817 string sSaveMenuHelp03 \"day\" 818 string sSaveMenuHelp04 \"a.m.\" 819 string sSaveMenuHelp05 \"p.m.\" 820 string sSaveMenuHelp06 \"Delete Game?\" 821 string sDeleteNote \"Delete Note?\" 822 string sEditNote \"Edit Note\" 823 string sBlocks \"Blocks\" 824 string sFileSize \"File Size\" 825 string sSave \"Save\" 826 string sDeleteSpell \"Delete Spell\" 827 string sQuestionDeleteSpell \"Are you sure you wish to delete %s?\" 828 string sDeleteSpellError \"You can not delete this item from the Magic Menu\" 829 string sLocal \"Local\" 830 string sLoadFailedMessage \"Your last load failed. You must load another game or start a new game.\" 831 string sShadows \"Shadows\" 832 string sControlerVibration \"Controller Vibration\" 833 string sQuanityMenuMessage01 \"Amount to Sell\" 834 string sQuanityMenuMessage02 \"Amount to Buy\" 835 string sSex \"Sex\" 836 string sHair \"Hair\" 837 string sFace \"Face\" 838 string sRepairFailed \"Your repair failed!\" 839 string sRepairSuccess \"Your repair succeeded!\" 840 string sHeal \"Heal\" 841 string sgp \"gp\" 842 string sSetValueMessage01 \"The maximum magnitude can not be less then the minimum magnitude!\" 843 string sDelete \"Delete\" 844 string sVideoWarning \"MenuVideo Warning Video Resolution does not allow shadows.\" 845 string sResChangeWarning \"Desired resolution not supported by video card.\" 846 string sShift \"Shift\" 847 string sBackspace \"Backspace\" 848 string sCustomClassName \"Custom Class\" 849 string sSpace \"Space\" 850 string sInventorySelectNoItems \"You have no items to fill this slot.\" 851 string sInventorySelectNoSoul \"You have no filled Soul Gems\" 852 string sInventorySelectNoIngredients \"You have no ingredients\" 853 string sDisposeCorpseFail \"You can not remove this corpse\" 854 string sQuickMenuTitle \"QUICK KEY MENU\" 855 string sQuickMenuInstruc \"Click on quick key slot to add a spell, magic item or inventory item\" 856 string sQuickMenu1 \"MenuItem to QuickKey\" 857 string sQuickMenu2 \"Inventory Menu Item\" 858 string sQuickMenu3 \"Magic Menu Item\" 859 string sQuickMenu4 \"Delete QuickKey Item\" 860 string sQuickMenu5 \"You no longer have\" 861 string sQuickMenu6 \"Inventory Items to Quick key\" 862 string sMagicSelectTitle \"Select a magic to Quick key.\" 863 string sNextRank \"Next Rank:\" 864 string sNeedOneSkill \"Need one skill at\" 865 string sNeedTwoSkills \"Need two skills at\" 866 string sand \"and\" 867 string sOneHanded \"One Handed\" 868 string sTwoHanded \"Two Handed\" 869 string sType \"Type:\" 870 string sAt \"At\" 871 string sUnequip \"Unequip\" 872 string sScrolldown \"Scroll Down\" 873 string sScrollup \"Scroll Up\" 874 string sSleepInterrupt \"Your rest has been intruppted\" 875 string sSoultrapSuccess \"Your have trapped a soul\" 876 string sCantEquipWeapWarning \"Finish your current attack before equipping a new weapon\" 877 string sOfferMenuTitle \"Offer Menu\" 878 string sPowers \"Powers\" 879 string sBreath \"Breath\" 880 string sDifficulty \"Difficulty\" 881 string sEasy \"Easy\" 882 string sHard \"Hard\" 883 string sProfitValue \"Profit Value\" 884 string sCompanionShare \"Companion Share\" 885 string sCompanionWarningMessage \"Your mercenary is poorer now than when he contracted with you. Your mercenary will quit if you do not give him gold or goods to bring his Profit Value to a positive value.\" 886 string sCompanionWarningButtonOne \"Let the mercenary quit.\" 887 string sCompanionWarningButtonTwo \"Return to Companion Share display.\" 888 string sAttributeStrength \"sAttributeStrength\" 889 string sAttributeIntelligence \"sAttributeIntelligence\" 890 string sAttributeWillpower \"sAttributeWillpower\" 891 string sAttributeAgility \"sAttributeAgility\" 892 string sAttributeSpeed \"sAttributeSpeed\" 893 string sAttributeEndurance \"sAttributeEndurance\" 894 string sAttributePersonality \"sAttributePersonality\" 895 string sAttributeLuck \"sAttributeLuck\" 896 string sSkillBlock \"Block\" 897 string sSkillArmorer \"Armorer\" 898 string sSkillMediumarmor \"Mediumarmor\" 899 string sSkillHeavyarmor \"Heavyarmor\" 900 string sSkillBluntweapon \"Bluntweapon\" 901 string sSkillLongblade \"Longblade\" 902 string sSkillAxe \"Axe\" 903 string sSkillSpear \"Spear\" 904 string sSkillAthletics \"Athletics\" 905 string sSkillEnchant \"Enchant\" 906 string sSkillDestruction \"Destruction\" 907 string sSkillAlteration \"Alteration\" 908 string sSkillIllusion \"Illusion\" 909 string sSkillConjuration \"Conjuration\" 910 string sSkillMysticism \"Mysticism\" 911 string sSkillRestoration \"Restoration\" 912 string sSkillAlchemy \"Alchemy\" 913 string sSkillUnarmored \"Unarmored\" 914 string sSkillSecurity \"Security\" 915 string sSkillSneak \"Sneak\" 916 string sSkillAcrobatics \"Acrobatics\" 917 string sSkillLightarmor \"Lightarmor\" 918 string sSkillShortblade \"Shortblade\" 919 string sSkillMarksman \"Marksman\" 920 string sSkillMercantile \"Mercantile\" 921 string sSkillSpeechcraft \"Speechcraft\" 922 string sSkillHandtohand \"Handtohand\" 923 string sHealth \"Health\" 924 string sRace \"Race\" 925 string sLevel \"Level\" 926 string sLevels \"Levels\" 927 string sFaction \"Faction\" 928 string sBirthSign \"Birth Sign\" 929 string sBounty \"Bounty\" 930 string sReputation \"Reputation\" 931 string sSchool \"School\" 932 string sSkill \"Skill\" 933 string sSkillProgress \"sSkillProgress\" 934 string sSkillMaxReached \"Maximum proficiency has been reached.\" 935 string sLevelProgress \"sLevelProgress\" 936 string sMagic \"sMagic\" 937 string sMagicMenu \"Magic\" 938 string sFatigue \"sFatigue\" 939 string sSkillsMenuReputationHelp \"Your fame rating in the world of Morrowind\" 940 string sStrDesc \"sStrDesc\" 941 string sIntDesc \"sIntDesc\" 942 string sWilDesc \"sWilDesc\" 943 string sAgiDesc \"sAgiDesc\" 944 string sSpdDesc \"sSpdDesc\" 945 string sEndDesc \"sEndDesc\" 946 string sPerDesc \"sPerDesc\" 947 string sLucDesc \"sLucDesc\" 948 string sFatDesc \"sFatDesc\" 949 string sHealthDesc \"sHealthDesc\" 950 string sMagDesc \"sMagDesc\" 951 float fWortChanceValue 15.0000 952 string sDefaultCellname \"Wilderness\" 953 float fMinWalkSpeed 150.0000 954 float fMaxWalkSpeed 300.0000 955 float fMinWalkSpeedCreature 5.0000 956 float fMaxWalkSpeedCreature 300.0000 957 float fEncumberedMoveEffect 0.7500 958 float fBaseRunMultiplier 1.5000 959 float fAthleticsRunBonus 1.5000 960 float fJumpAcrobaticsBase 128.0000 961 float fJumpAcroMultiplier 4.0000 962 float fJumpEncumbranceBase 0.5000 963 float fJumpEncumbranceMultiplier 1.0000 964 float fJumpRunMultiplier 1.2000 965 float fJumpMoveBase 0.5000 966 float fJumpMoveMult 0.5000 967 float fSwimWalkBase 0.5000 968 float fSwimRunBase 0.5000 969 float fSwimWalkAthleticsMult 0.0200 970 float fSwimRunAthleticsMult 0.1000 971 float fSwimHeightScale 0.9000 972 float fHoldBreathTime 20.0000 973 float fHoldBreathEndMult 0.5000 974 float fSuffocationDamage 3.0000 975 float fMinFlySpeed 5.0000 976 float fMaxFlySpeed 300.0000 977 float fStromWindSpeed 0.7000 978 float fStromWalkMult 0.2000 979 float fFallDamageDistanceMin 300.0000 980 float fFallDistanceBase 0.0000 981 float fFallDistanceMult 0.1000 982 float fFallAcroBase 0.2500 983 float fFallAcroMult 0.0100 984 integer iMaxActivateDist 128 985 integer iMaxInfoDist 128 986 float fVanityDelay 30.0000 987 float fMaxHeadTrackDistance 400.0000 988 float fInteriorHeadTrackMult 0.5000 989 integer iHelmWeight 5 990 integer iPauldronWeight 10 991 integer iCuirassWeight 30 992 integer iGauntletWeight 5 993 integer iGreavesWeight 15 994 integer iBootsWeight 20 995 integer iShieldWeight 15 996 float fLightMaxMod 0.6000 997 float fMedMaxMod 0.9000 998 float fUnarmoredBase1 0.0500 999 float fUnarmoredBase2 0.1000 1000 integer iBaseArmorSkill 30 1001 float fBlockStillBonus 1.2500 1002 float fDamageStrengthBase 0.5000 1003 float fDamageStrengthMult 0.1000 1004 float fSwingBlockBase 0.5000 1005 float fSwingBlockMult 0.5000 1006 float fFatigueBase 1.0000 1007 float fFatigueMult 1.0000 1008 float fFatigueReturnBase 1.5000 1009 float fFatigueReturnMult 1.0000 1010 float fEndFatigueMult 0.0100 1011 float fFatigueAttackBase 1.0000 1012 float fFatigueAttackMult 1.0000 1013 float fWeaponFatigueMult 0.2000 1014 float fFatigueBlockBase 1.0000 1015 float fFatigueBlockMult 1.0000 1016 float fWeaponFatigueBlockMult 0.2000 1017 float fFatigueRunBase 1.5000 1018 float fFatigueRunMult 1.5000 1019 float fFatigueJumpBase 3.0000 1020 float fFatigueJumpMult 10.0000 1021 float fFatigueSwimWalkBase 0.5000 1022 float fFatigueSwimRunBase 1.5000 1023 float fFatigueSwimWalkMult 0.5000 1024 float fFatigueSwimRunMult 1.5000 1025 float fFatigueSneakBase 1.5000 1026 float fFatigueSneakMult 1.5000 1027 float fMinHandToHandMult 0.5000 1028 float fMaxHandToHandMult 1.0000 1029 float fHandtoHandHealthPer 0.1000 1030 float fCombatInvisoMult 0.2000 1031 float fCombatKODamageMult 2.0000 1032 float fCombatCriticalStrikeMult 4.0000 1033 integer iBlockMinChance 5 1034 integer iBlockMaxChance 50 1035 float fLevelUpHealthEndMult 0.1000 1036 float fSoulGemMult 3.0000 1037 float fEffectCostMult 0.5000 1038 float fSpellPriceMult 1.0000 1039 float fFatigueSpellBase 1.0000 1040 float fFatigueSpellMult 1.0000 1041 float fFatigueSpellCostMult 1.0000 1042 float fPotionStrengthMult 0.5000 1043 float fPotionT1MagMult 3.0000 1044 float fPotionT1DurMult 2.0000 1045 float fPotionMinUsefulDuration 20.0000 1046 float fPotionT4BaseStrengthMult 20.0000 1047 float fPotionT4EquipStrengthMult 12.0000 1048 float fIngredientMult 1.0000 1049 float fMagicItemCostMult 1.0000 1050 float fMagicItemPriceMult 1.0000 1051 float fMagicItemOnceMult 1.0000 1052 float fMagicItemUsedMult 1.0000 1053 float fMagicItemStrikeMult 1.0000 1054 float fMagicItemConstantMult 1.0000 1055 float fEnchantmentMult 1.0000 1056 float fEnchantmentChanceMult 3.0000 1057 float fPCbaseMagickaMult 1.0000 1058 float fNPCbaseMagickaMult 2.0000 1059 float fAutoSpellChance 50.0000 1060 float fAutoPCSpellChance 75.0000 1061 integer iAutoSpellTimesCanCast 3 1062 integer iAutoSpellAttSkillMin 70 1063 integer iAutoSpellAlterationMax 5 1064 integer iAutoSpellConjurationMax 5 1065 integer iAutoSpellDestructionMax 5 1066 integer iAutoSpellIllusionMax 5 1067 integer iAutoSpellMysticismMax 5 1068 integer iAutoSpellRestorationMax 5 1069 integer iAutoPCSpellMax 100 1070 integer iAutoRepFacMod 2 1071 integer iAutoRepLevMod 0 1072 integer iMagicItemChargeOnce 1 1073 integer iMagicItemChargeConst 10 1074 integer iMagicItemChargeUse 5 1075 integer iMagicItemChargeStrike 10 1076 integer iMonthsToRespawn 4 1077 float fCorpseClearDelay 6.0000 1078 float fCorpseRespawnDelay 6.0000 1079 float fBarterGoldResetDelay 24.0000 1080 float fEncumbranceStrMult 5.0000 1081 float fPickLockMult -10.0000 1082 float fTrapCostMult -0.5000 1083 float fMessageTimePerChar 0.1000 1084 float fMagicItemRechargePerSecond 0.0028 1085 integer i1stPersonSneakDelta 10 1086 integer iBarterSuccessDisposition 1 1087 integer iBarterFailDisposition -1 1088 integer iLevelupTotal 10 1089 integer iLevelupMajorMult 2 1090 integer iLevelupMinorMult 1 1091 integer iLevelupMajorMultAttribute 1 1092 integer iLevelupMinorMultAttribute 1 1093 integer iLevelupMiscMultAttriubte 1 1094 integer iLevelupSpecialization 1 1095 integer iLevelUp01Mult 1 1096 integer iLevelUp02Mult 2 1097 integer iLevelUp03Mult 3 1098 integer iLevelUp04Mult 4 1099 integer iLevelUp05Mult 5 1100 integer iLevelUp06Mult 6 1101 integer iLevelUp07Mult 7 1102 integer iLevelUp08Mult 8 1103 integer iLevelUp09Mult 9 1104 integer iLevelUp10Mult 10 1105 integer iSoulAmountForConstantEffect 400 1106 float fConstantEffectMult 15.0000 1107 float fEnchantmentConstantDurationMult 100.0000 1108 float fEnchantmentConstantChanceMult 0.5000 1109 float fWeaponDamageMult 0.1000 1110 float fSeriousWoundMult 0.2500 1111 float fKnockDownMult 0.5000 1112 integer iKnockDownOddsBase 25 1113 integer iKnockDownOddsMult 25 1114 float fCombatArmorMinMult 0.2500 1115 float fHandToHandReach 0.7000 1116 float fVoiceIdleOdds 100.0000 1117 integer iVoiceAttackOdds 30 1118 integer iVoiceHitOdds 30 1119 float fProjectileMinSpeed 400.0000 1120 float fProjectileMaxSpeed 1000.0000 1121 float fThrownWeaponMinSpeed 100.0000 1122 float fThrownWeaponMaxSpeed 500.0000 1123 float fTargetSpellMaxSpeed 1000.0000 1124 float fProjectileThrownStoreChance 75.0000 1125 integer iPickMinChance 5 1126 integer iPickMaxChance 75 1127 float fDispRaceMod 5.0000 1128 float fDispPersonalityMult 0.5000 1129 float fDispPersonalityBase 50.0000 1130 float fDispFactionMod 5.0000 1131 float fDispFactionRankBase 0.5000 1132 float fDispFactionRankMult 0.5000 1133 float fDispCrimeMod 0.0100 1134 float fDispDiseaseMod -10.0000 1135 integer iDispAttackMod -20 1136 float fDispWeaponDrawn -5.0000 1137 float fDispBargainSuccessMod 1.0000 1138 float fDispBargainFailMod -1.0000 1139 float fDispPickPocketMod -25.0000 1140 integer iDaysinPrisonMod 100 1141 float fDispAttacking -10.0000 1142 float fDispStealing -0.1000 1143 integer iDispTresspass -20 1144 integer iDispKilling -50 1145 integer iTrainingMod 10 1146 integer iAlchemyMod 10 1147 float fBargainOfferBase 50.0000 1148 float fBargainOfferMulti -4.0000 1149 float fDispositionMod 1.0000 1150 float fPersonalityMod 5.0000 1151 float fLuckMod 10.0000 1152 float fReputationMod 1.0000 1153 float fLevelMod 5.0000 1154 float fBribe10Mod 25.0000 1155 float fBribe100Mod 50.0000 1156 float fBribe1000Mod 100.0000 1157 float fPerDieRollMult 0.2000 1158 float fPerTempMult 2.0000 1159 integer iPerMinChance 5 1160 integer iPerMinChange 10 1161 float fSpecialSkillBonus 0.8000 1162 float fMajorSkillBonus 0.7500 1163 float fMinorSkillBonus 1.0000 1164 float fMiscSkillBonus 1.2500 1165 integer iAlarmKilling 90 1166 integer iAlarmAttack 50 1167 integer iAlarmStealing 1 1168 integer iAlarmPickPocket 20 1169 integer iAlarmTresspass 5 1170 float fAlarmRadius 4096.0000 1171 integer iCrimeKilling 1000 1172 integer iCrimeAttack 40 1173 float fCrimeStealing 1.0000 1174 integer iCrimePickPocket 25 1175 integer iCrimeTresspass 5 1176 integer iCrimeThreshold 100 1177 integer iCrimeThresholdMultiplier 10 1178 float fCrimeGoldDiscountMult 0.3000 1179 float fCrimeGoldTurnInMult 0.9000 1180 integer iFightAttack 100 1181 integer iFightAttacking 50 1182 integer iFightDistanceBase 20 1183 float fFightDistanceMultiplier 0.0050 1184 integer iFightAlarmMult 1 1185 float fFightDispMult 1.0000 1186 float fFightStealing 0.1000 1187 integer iFightPickpocket 25 1188 integer iFightTrespass 25 1189 integer iFightKilling 50 1190 integer iFlee 0 1191 integer iGreetDistanceMultiplier 10 1192 integer iGreetDuration 3 1193 float fGreetDistanceReset 512.0000 1194 float fIdleChanceMultiplier 1.0000 1195 float fSneakUseDist 512.0000 1196 float fSneakUseDelay 2.0000 1197 float fSneakDistanceBase 0.5000 1198 float fSneakDistanceMultiplier 0.0005 1199 float fSneakSpeedMultiplier 0.5000 1200 float fSneakViewMult 1.5000 1201 float fSneakNoViewMult 0.5000 1202 float fSneakSkillMult 1.0000 1203 float fSneakBootMult -0.5000 1204 float fCombatDistance 128.0000 1205 float fCombatAngleXY 60.0000 1206 float fCombatAngleZ 60.0000 1207 float fCombatForceSideAngle 30.0000 1208 float fCombatTorsoSideAngle 45.0000 1209 float fCombatTorsoStartPercent 0.3000 1210 float fCombatTorsoStopPercent 0.7000 1211 float fCombatBlockLeftAngle -90.0000 1212 float fCombatBlockRightAngle 30.0000 1213 float fCombatDelayCreature 0.1000 1214 float fCombatDelayNPC 0.1000 1215 string sTargetCriticalStrike \"%s is hit by a critical strike!\" 1216 float fAIMeleeWeaponMult 2.0000 1217 float fAIRangeMeleeWeaponMult 5.0000 1218 float fAIMagicSpellMult 3.0000 1219 float fAIRangeMagicSpellMult 5.0000 1220 float fAIMeleeArmorMult 1.0000 1221 float fAIMeleeSummWeaponMult 1.0000 1222 float fAIFleeHealthMult 10.0000 1223 float fAIFleeFleeMult 1.0000 1224 float fPickPocketMod 0.5000 1225 float fSleepRandMod 0.5000 1226 float fSleepRestMod 0.3000 1227 integer iNumberCreatures 3 1228 float fAudioDefaultMinDistance 5.0000 1229 float fAudioDefaultMaxDistance 40.0000 1230 float fAudioVoiceDefaultMinDistance 10.0000 1231 float fAudioVoiceDefaultMaxDistance 60.0000 1232 float fAudioMinDistanceMult 20.0000 1233 float fAudioMaxDistanceMult 50.0000 1234 float fNPCHealthBarTime 3.0000 1235 float fNPCHealthBarFade 0.5000 1236 float fDifficultyMult 5.0000 1237 float fWereWolfRunMult 1.5000 1238 float fWereWolfSilverWeaponDamageMult 1.5000 1239 integer iWereWolfBounty 10000 1240 float fWereWolfStrength 150.0000 1241 float fWereWolfAgility 150.0000 1242 float fWereWolfEndurance 150.0000 1243 float fWereWolfSpeed 150.0000 1244 float fWereWolfHandtoHand 100.0000 1245 float fWereWolfUnarmored 100.0000 1246 integer iWereWolfLevelToAttack 20 1247 integer iWereWolfFightMod 100 1248 integer iWereWolfFleeMod 100 1249 float fWereWolfAthletics 150.0000 1250 float fWereWolfAcrobatics 150.0000 1251 float fWereWolfHealth 2.0000 1252 float fWereWolfFatigue 400.0000 1253 float fWereWolfMagicka 100.0000 1254 float fWereWolfIntellegence 1.0000 1255 float fWereWolfWillPower 1.0000 1256 float fWereWolfPersonality 1.0000 1257 float fWereWolfLuck 1.0000 1258 float fWereWolfBlock 1.0000 1259 float fWereWolfArmorer 1.0000 1260 float fWereWolfMediumArmor 1.0000 1261 float fWereWolfHeavyArmor 1.0000 1262 float fWereWolfBluntWeapon 1.0000 1263 float fWereWolfLongBlade 1.0000 1264 float fWereWolfAxe 1.0000 1265 float fWereWolfSpear 1.0000 1266 float fWereWolfDestruction 1.0000 1267 float fWereWolfAlteration 1.0000 1268 float fWereWolfIllusion 1.0000 1269 float fWereWolfConjuration 1.0000 1270 float fWereWolfMysticism 1.0000 1271 float fWereWolfRestoration 1.0000 1272 float fWereWolfEnchant 1.0000 1273 float fWereWolfAlchemy 1.0000 1274 float fWereWolfSecurity 1.0000 1275 float fWereWolfSneak 1.0000 1276 float fWereWolfLightArmor 1.0000 1277 float fWereWolfShortBlade 1.0000 1278 float fWereWolfMarksman 1.0000 1279 float fWereWolfMerchantile 1.0000 1280 float fWereWolfSpeechcraft 1.0000 1281 float fCombatDistanceWerewolfMod 0.3000 1282 float fFleeDistance 3000.0000 1283 string sEffectWaterBreathing \"sEffectWaterBreathing\" 1284 string sEffectSwiftSwim \"sEffectSwiftSwim\" 1285 string sEffectWaterWalking \"sEffectWaterWalking\" 1286 string sEffectShield \"sEffectShield\" 1287 string sEffectFireShield \"sEffectFireShield\" 1288 string sEffectLightningShield \"sEffectLightningShield\" 1289 string sEffectFrostShield \"sEffectFrostShield\" 1290 string sEffectBurden \"sEffectBurden\" 1291 string sEffectFeather \"sEffectFeather\" 1292 string sEffectJump \"sEffectJump\" 1293 string sEffectLevitate \"sEffectLevitate\" 1294 string sEffectSlowFall \"sEffectSlowFall\" 1295 string sEffectLock \"sEffectLock\" 1296 string sEffectOpen \"sEffectOpen\" 1297 string sEffectFireDamage \"sEffectFireDamage\" 1298 string sEffectShockDamage \"sEffectShockDamage\" 1299 string sEffectFrostDamage \"sEffectFrostDamage\" 1300 string sEffectDrainAttribute \"sEffectDrainAttribute\" 1301 string sEffectDrainHealth \"sEffectDrainHealth\" 1302 string sEffectDrainSpellpoints \"sEffectDrainSpellpoints\" 1303 string sEffectDrainFatigue \"sEffectDrainFatigue\" 1304 string sEffectDrainSkill \"sEffectDrainSkill\" 1305 string sEffectDamageAttribute \"sEffectDamageAttribute\" 1306 string sEffectDamageHealth \"sEffectDamageHealth\" 1307 string sEffectDamageMagicka \"sEffectDamageMagicka\" 1308 string sEffectDamageFatigue \"sEffectDamageFatigue\" 1309 string sEffectDamageSkill \"sEffectDamageSkill\" 1310 string sEffectPoison \"sEffectPoison\" 1311 string sEffectWeaknessToFire \"sEffectWeaknessToFire\" 1312 string sEffectWeaknessToFrost \"sEffectWeaknessToFrost\" 1313 string sEffectWeaknessToShock \"sEffectWeaknessToShock\" 1314 string sEffectWeaknessToMagicka \"sEffectWeaknessToMagicka\" 1315 string sEffectWeaknessToCommonDisease \"sEffectWeaknessToCommonDisease\" 1316 string sEffectWeaknessToBlightDisease \"sEffectWeaknessToBlightDisease\" 1317 string sEffectWeaknessToCorprusDisease \"sEffectWeaknessToCorprusDisease\" 1318 string sEffectWeaknessToPoison \"sEffectWeaknessToPoison\" 1319 string sEffectWeaknessToNormalWeapons \"sEffectWeaknessToNormalWeapons\" 1320 string sEffectDisintegrateWeapon \"sEffectDisintegrateWeapon\" 1321 string sEffectDisintegrateArmor \"sEffectDisintegrateArmor\" 1322 string sEffectInvisibility \"sEffectInvisibility\" 1323 string sEffectChameleon \"sEffectChameleon\" 1324 string sEffectLight \"sEffectLight\" 1325 string sEffectSanctuary \"sEffectSanctuary\" 1326 string sEffectNightEye \"sEffectNightEye\" 1327 string sEffectCharm \"sEffectCharm\" 1328 string sEffectParalyze \"sEffectParalyze\" 1329 string sEffectSilence \"sEffectSilence\" 1330 string sEffectBlind \"sEffectBlind\" 1331 string sEffectSound \"sEffectSound\" 1332 string sEffectCalmHumanoid \"sEffectCalmHumanoid\" 1333 string sEffectCalmCreature \"sEffectCalmCreature\" 1334 string sEffectFrenzyHumanoid \"sEffectFrenzyHumanoid\" 1335 string sEffectFrenzyCreature \"sEffectFrenzyCreature\" 1336 string sEffectDemoralizeHumanoid \"sEffectDemoralizeHumanoid\" 1337 string sEffectDemoralizeCreature \"sEffectDemoralizeCreature\" 1338 string sEffectRallyHumanoid \"sEffectRallyHumanoid\" 1339 string sEffectRallyCreature \"sEffectRallyCreature\" 1340 string sEffectDispel \"sEffectDispel\" 1341 string sEffectSoultrap \"sEffectSoultrap\" 1342 string sEffectTelekinesis \"sEffectTelekinesis\" 1343 string sEffectMark \"sEffectMark\" 1344 string sEffectRecall \"sEffectRecall\" 1345 string sEffectDivineIntervention \"sEffectDivineIntervention\" 1346 string sEffectAlmsiviIntervention \"sEffectAlmsiviIntervention\" 1347 string sEffectDetectAnimal \"sEffectDetectAnimal\" 1348 string sEffectDetectEnchantment \"sEffectDetectEnchantment\" 1349 string sEffectDetectKey \"sEffectDetectKey\" 1350 string sEffectSpellAbsorption \"sEffectSpellAbsorption\" 1351 string sEffectReflect \"sEffectReflect\" 1352 string sEffectCureCommonDisease \"sEffectCureCommonDisease\" 1353 string sEffectCureBlightDisease \"sEffectCureBlightDisease\" 1354 string sEffectCureCorprusDisease \"sEffectCureCorprusDisease\" 1355 string sEffectCurePoison \"sEffectCurePoison\" 1356 string sEffectCureParalyzation \"sEffectCureParalyzation\" 1357 string sEffectRestoreAttribute \"sEffectRestoreAttribute\" 1358 string sEffectRestoreHealth \"sEffectRestoreHealth\" 1359 string sEffectRestoreSpellPoints \"sEffectRestoreSpellPoints\" 1360 string sEffectRestoreFatigue \"sEffectRestoreFatigue\" 1361 string sEffectRestoreSkill \"sEffectRestoreSkill\" 1362 string sEffectFortifyAttribute \"sEffectFortifyAttribute\" 1363 string sEffectFortifyHealth \"sEffectFortifyHealth\" 1364 string sEffectFortifySpellpoints \"sEffectFortifySpellpoints\" 1365 string sEffectFortifyFatigue \"sEffectFortifyFatigue\" 1366 string sEffectFortifySkill \"sEffectFortifySkill\" 1367 string sEffectFortifyMagickaMultiplier \"sEffectFortifyMagickaMultiplier\" 1368 string sEffectAbsorbAttribute \"sEffectAbsorbAttribute\" 1369 string sEffectAbsorbHealth \"sEffectAbsorbHealth\" 1370 string sEffectAbsorbSpellPoints \"sEffectAbsorbSpellPoints\" 1371 string sEffectAbsorbFatigue \"sEffectAbsorbFatigue\" 1372 string sEffectAbsorbSkill \"sEffectAbsorbSkill\" 1373 string sEffectResistFire \"sEffectResistFire\" 1374 string sEffectResistFrost \"sEffectResistFrost\" 1375 string sEffectResistShock \"sEffectResistShock\" 1376 string sEffectResistMagicka \"sEffectResistMagicka\" 1377 string sEffectResistCommonDisease \"sEffectResistCommonDisease\" 1378 string sEffectResistBlightDisease \"sEffectResistBlightDisease\" 1379 string sEffectResistCorprusDisease \"sEffectResistCorprusDisease\" 1380 string sEffectResistPoison \"sEffectResistPoison\" 1381 string sEffectResistNormalWeapons \"sEffectResistNormalWeapons\" 1382 string sEffectResistParalysis \"sEffectResistParalysis\" 1383 string sEffectRemoveCurse \"sEffectRemoveCurse\" 1384 string sEffectTurnUndead \"sEffectTurnUndead\" 1385 string sEffectSummonScamp \"sEffectSummonScamp\" 1386 string sEffectSummonClannfear \"sEffectSummonClannfear\" 1387 string sEffectSummonDaedroth \"sEffectSummonDaedroth\" 1388 string sEffectSummonDremora \"sEffectSummonDremora\" 1389 string sEffectSummonAncestralGhost \"sEffectSummonAncestralGhost\" 1390 string sEffectSummonSkeletalMinion \"sEffectSummonSkeletalMinion\" 1391 string sEffectSummonLeastBonewalker \"sEffectSummonLeastBonewalker\" 1392 string sEffectSummonGreaterBonewalker \"sEffectSummonGreaterBonewalker\" 1393 string sEffectSummonBonelord \"sEffectSummonBonelord\" 1394 string sEffectSummonWingedTwilight \"sEffectSummonWingedTwilight\" 1395 string sEffectSummonHunger \"sEffectSummonHunger\" 1396 string sEffectSummonGoldensaint \"sEffectSummonGoldensaint\" 1397 string sEffectSummonFlameAtronach \"sEffectSummonFlameAtronach\" 1398 string sEffectSummonFrostAtronach \"sEffectSummonFrostAtronach\" 1399 string sEffectSummonStormAtronach \"sEffectSummonStormAtronach\" 1400 string sEffectFortifyAttackBonus \"sEffectFortifyAttackBonus\" 1401 string sEffectCommandCreatures \"sEffectCommandCreatures\" 1402 string sEffectCommandHumanoids \"sEffectCommandHumanoids\" 1403 string sEffectBoundDagger \"sEffectBoundDagger\" 1404 string sEffectBoundLongsword \"sEffectBoundLongsword\" 1405 string sEffectBoundMace \"sEffectBoundMace\" 1406 string sEffectBoundBattleAxe \"sEffectBoundBattleAxe\" 1407 string sEffectBoundSpear \"sEffectBoundSpear\" 1408 string sEffectBoundLongbow \"sEffectBoundLongbow\" 1409 string sEffectExtraSpell \"sEffectExtraSpell\" 1410 string sEffectBoundCuirass \"sEffectBoundCuirass\" 1411 string sEffectBoundHelm \"sEffectBoundHelm\" 1412 string sEffectBoundBoots \"sEffectBoundBoots\" 1413 string sEffectBoundShield \"sEffectBoundShield\" 1414 string sEffectBoundGloves \"sEffectBoundGloves\" 1415 string sEffectCorpus \"sEffectCorpus\" 1416 string sEffectVampirism \"sEffectVampirism\" 1417 string sEffectSummonCenturionSphere \"sEffectSummonCenturionSphere\" 1418 string sEffectSunDamage \"sEffectSunDamage\" 1419 string sEffectStuntedMagicka \"sEffectStuntedMagicka\" 1420 string sEffectSummonFabricant \"sEffectSummonFabricant\" 1421 string sEffectSummonCreature01 \"sEffectSummonCreature01\" 1422 string sEffectSummonCreature02 \"sEffectSummonCreature02\" 1423 string sEffectSummonCreature03 \"sEffectSummonCreature03\" 1424 string sEffectSummonCreature04 \"sEffectSummonCreature04\" 1425 string sEffectSummonCreature05 \"sEffectSummonCreature05\" 1426 string sSchoolAlteration \"sSchoolAlteration\" 1427 string sSchoolConjuration \"sSchoolConjuration\" 1428 string sSchoolDestruction \"sSchoolDestruction\" 1429 string sSchoolIllusion \"sSchoolIllusion\" 1430 string sSchoolMysticism \"sSchoolMysticism\" 1431 string sSchoolRestoration \"sSchoolRestoration\" 1432 string sTypeSpell \"sTypeSpell\" 1433 string sTypeAbility \"sTypeAbility\" 1434 string sTypeBlightDisease \"sTypeBlightDisease\" 1435 string sTypeDisease \"sTypeDisease\" 1436 string sTypeCurse \"sTypeCurse\" 1437 string sTypePower \"sTypePower\" 1438 string sItemCastOnce \"sItemCastOnce\" 1439 string sItemCastWhenStrikes \"sItemCastWhenStrikes\" 1440 string sItemCastWhenUsed \"sItemCastWhenUsed\" 1441 string sItemCastConstant \"sItemCastConstant\" 1442 string sRangeSelf \"sRangeSelf\" 1443 string sRangeTouch \"sRangeTouch\" 1444 string sRangeTarget \"sRangeTarget\" 1445 string sMagicSkillFail \"sMagicSkillFail\" 1446 string sMagicInsufficientSP \"sMagicInsufficientSP\" 1447 string sMagicInsufficientCharge \"sMagicInsufficientCharge\" 1448 string sPowerAlreadyUsed \"sPowerAlreadyUsed\" 1449 string sMagicInvalidTarget \"sMagicInvalidTarget\" 1450 string sMagicLockSuccess \"sMagicLockSuccess\" 1451 string sMagicOpenSuccess \"sMagicOpenSuccess\" 1452 string sMagicTargetResistsWeapons \"sMagicTargetResistsWeapons\" 1453 string sMagicContractDisease \"You have contracted %s\" 1454 float fMagicDetectRefreshRate 0.0167 1455 float fMagicStartIconBlink 3.0000 1456 float fMagicCreatureCastDelay 1.5000 1457 string sMagicScampID \"Scamp\" 1458 string sMagicClannfearID \"Clannfear\" 1459 string sMagicDaedrothID \"Daedroth\" 1460 string sMagicDremoraID \"Dremora\" 1461 string sMagicAncestralGhostID \"Ancestor_Ghost\" 1462 string sMagicSkeletalMinionID \"Skeleton\" 1463 string sMagicLeastBonewalkerID \"Bonewalker\" 1464 string sMagicGreaterBonewalkerID \"Bonewalker_Greater\" 1465 string sMagicBonelordID \"Bonelord\" 1466 string sMagicWingedTwilightID \"Winged Twilight\" 1467 string sMagicHungerID \"Hunger\" 1468 string sMagicGoldenSaintID \"Golden Saint\" 1469 string sMagicFlameAtronachID \"Atronach_Flame\" 1470 string sMagicFrostAtronachID \"Atronach_Frost\" 1471 string sMagicStormAtronachID \"Atronach_Storm\" 1472 string sMagicCenturionSphereID \"centurion_sphere\" 1473 string sMagicFabricantID \"Fabricant\" 1474 string sMagicCreature01ID \"sMagicCreature01ID\" 1475 string sMagicCreature02ID \"sMagicCreature02ID\" 1476 string sMagicCreature03ID \"sMagicCreature03ID\" 1477 string sMagicCreature04ID \"sMagicCreature04ID\" 1478 string sMagicCreature05ID \"sMagicCreature05ID\" 1479 string sMagicBoundDaggerID \"Bound_Dagger\" 1480 string sMagicBoundLongswordID \"Bound_Longsword\" 1481 string sMagicBoundMaceID \"Bound_Mace\" 1482 string sMagicBoundBattleAxeID \"Bound_Battle_Axe\" 1483 string sMagicBoundSpearID \"Bound_Spear\" 1484 string sMagicBoundLongbowID \"Bound_Longbow\" 1485 string sMagicBoundCuirassID \"Bound_Cuirass\" 1486 string sMagicBoundHelmID \"Bound_Helm\" 1487 string sMagicBoundBootsID \"Bound_Boots\" 1488 string sMagicBoundShieldID \"Bound_Shield\" 1489 string sMagicBoundLeftGauntletID \"Bound_Gauntlet_Left\" 1490 string sMagicBoundRightGauntletID \"Bound_Gauntlet_Right\" 1491 float fDiseaseXferChance 5.0000 1492 float fElementalShieldMult 0.1000 1493 string sMagicCorprusWorsens \"Your case of Corprus has worsened.\" 1494 string sMagicCannotRecast \"You cannot re-cast this spell while it is still in effect.\" 1495 float fMagicSunBlockedMult 0.5000 1496 string sMagicPCResisted \"You resisted magic.\" 1497 string sMagicTargetResisted \"Target resisted magic.\" 1498 string sMagicInvalidEffect \"You cannot cast this effect right now.\" 1499 string sAcrobat \"Acrobat\" 1500 string sAgent \"Agent\" 1501 string sArcher \"Archer\" 1502 string sAssassin \"Assassin\" 1503 string sBarbarian \"Barbarian\" 1504 string sBard \"Bard\" 1505 string sBattlemage \"Battlemage\" 1506 string sCrusader \"Crusader\" 1507 string sCustom \"Custom\" 1508 string sHealer \"Healer\" 1509 string sKnight \"Knight\" 1510 string sMage \"Mage\" 1511 string sMonk \"Monk\" 1512 string sNightblade \"Nightblade\" 1513 string sPilgrim \"Pilgrim\" 1514 string sRogue \"Rogue\" 1515 string sScout \"Scout\" 1516 string sSorceror \"Sorceror\" 1517 string sSpellsword \"Spellsword\" 1518 string sThief \"Thief\" 1519 string sWarrior \"Warrior\" 1520 string sWitchhunter \"Witchhunter\"","title":"Game Settings (GMSTs)"},{"location":"references/gmst/#game-settings-gmsts","text":"Tip These values are available in Lua by their identifier in the tes3.gmst.* namespace. For example, tes3.gmst.sMonthMorningstar has a value of 0 . Index Type Identifier Default Value 0 string sMonthMorningstar \"sMonthMorningstar\" 1 string sMonthSunsdawn \"sMonthSunsdawn\" 2 string sMonthFirstseed \"sMonthFirstseed\" 3 string sMonthRainshand \"sMonthRainshand\" 4 string sMonthSecondseed \"sMonthSecondseed\" 5 string sMonthMidyear \"sMonthMidyear\" 6 string sMonthSunsheight \"sMonthSunsheight\" 7 string sMonthLastseed \"sMonthLastseed\" 8 string sMonthHeartfire \"sMonthHeartfire\" 9 string sMonthFrostfall \"sMonthFrostfall\" 10 string sMonthSunsdusk \"sMonthSunsdusk\" 11 string sMonthEveningstar \"sMonthEveningstar\" 12 string sSpecialization \"sSpecialization\" 13 string sSpecializationCombat \"sCombat\" 14 string sSpecializationMagic \"sMagic\" 15 string sSpecializationStealth \"sStealth\" 16 string sSkillClassMajor \"sSkillClassMajor\" 17 string sSkillClassMinor \"sSkillClassMinor\" 18 string sSkillClassMisc \"sSkillClassMisc\" 19 string sRacialTraits \"sRacialTraits\" 20 string sHealthPerHourOfRest \"sHealthPerHourOfRest\" 21 string sHealthPerLevel \"sHealthPerLevel\" 22 string sGoverningAttribute \"sGoverningAttribute\" 23 string sClass \"sClass\" 24 string sTraits \"sTraits\" 25 string sJournal \"sJournal\" 26 string sOK \"sOK\" 27 string sClose \"Close\" 28 string sPrev \"Prev\" 29 string sNext \"Next\" 30 string sTake \"Take\" 31 string sWeaponTab \"sWeaponTab\" 32 string sApparelTab \"sApparelTab\" 33 string sMagicTab \"sMagicTab\" 34 string sMiscTab \"sMiscTab\" 35 string sWornTab \"Worn\" 36 string sAllTab \"All\" 37 string sAttack \"Attack\" 38 string sUses \"Uses\" 39 string sQuality \"Quality:\" 40 string sCharges \"Charge\" 41 string sArmorRating \"sArmorRating\" 42 string sSlash \"sSlash\" 43 string sThrust \"sThrust\" 44 string sChop \"sChop\" 45 string sEncumbrance \"sEncumbrance\" 46 string sCondition \"sCondition\" 47 string sWeight \"sWeight\" 48 string sValue \"sValue\" 49 string sLight \"sLight\" 50 string sMedium \"sMedium\" 51 string sHeavy \"sHeavy\" 52 string sCancel \"sCancel\" 53 string sTakeAll \"Take All\" 54 string sUntilHealed \"Until Healed\" 55 string sRest \"sRest\" 56 string sWait \"sWait\" 57 string sRestIllegal \"sRestIllegal\" 58 string sGold \"sGold\" 59 string sMove \"sMove\" 60 string sTo \"to\" 61 string sActorInCombat \"This character is in combat.\" 62 string sArmor \"Armor\" 63 string sTopics \"Topics\" 64 string sService \"Service\" 65 string sPersuasion \"Persuasion\" 66 string sBye \"Bye\" 67 string sGoodbye \"Goodbye\" 68 string sYes \"Yes\" 69 string sNo \"No\" 70 string sOn \"On\" 71 string sOff \"Off\" 72 string sFull \"Full\" 73 string sWorld \"World\" 74 string sExpelled \"EXPELLED\" 75 string sExpelledMessage \"You have been expelled from \" 76 string sFavoriteSkills \"Favorite Skills\" 77 string sGame \"Game\" 78 string sVideo \"Video\" 79 string sAudio \"Audio\" 80 string sControls \"Controls\" 81 string sPrefs \"Prefs\" 82 string sPreferences \"Preferences\" 83 string sNewGame \"New Game\" 84 string sExitGame \"Exit Game\" 85 string sOptions \"Options Menu\" 86 string sSaveGame \"Save Game\" 87 string sLoadGame \"Load Game\" 88 string sDeleteGame \"Delete Game\" 89 string sSaveGameDenied \"You can not save your game right now.\" 90 string sSaveGameFailed \"An error was encountered while saving the game.\" 91 string sSaveGameTooBig \"There is not enough space to save this game. Free up at least %i blocks and try again.\" 92 string sSaveGameNoMemory \"Unable to create Save Game. Free up 100 blocks and try again.\" 93 string sMaximumSaveGameMessage \"You have reached the limit of Morrowind saved games. Please delete a Morrowind saved game and try again.\" 94 string sRender_Distance \"Render Distance\" 95 string sNear \"Near\" 96 string sFar \"Far\" 97 string sGamma_Correction \"Gamma Correction\" 98 string sLight_Gamma \"Light\" 99 string sDark_Gamma \"Dark\" 100 string sSeldom \"Seldom\" 101 string sAlways \"Always\" 102 string sWaterTerrainReflect \"Reflect Terrain\" 103 string sWaterReflectUpdate \"Reflection Updating\" 104 float fWaterReflectUpdateAlways 0.0000 105 float fWaterReflectUpdateSeldom 10.0000 106 string sMaster \"Master\" 107 string sVoice \"Voice\" 108 string sEffects \"Effect\" 109 string sFootsteps \"Footsteps\" 110 string sMusic \"Music\" 111 string sTransparency_Menu \"Transparency Menu\" 112 string sMenu_Help_Delay \"Menu Help Delay\" 113 string sAIDistance \"AI Distance\" 114 string sHigh \"High\" 115 string sLow \"Low\" 116 string sDetail_Level \"Detail Level\" 117 string sMenus \"Menus\" 118 string sStrip \"Strip\" 119 string sReturnToGame \"Return To Game\" 120 string sForward \"Forward\" 121 string sBack \"Back\" 122 string sLeft \"Left\" 123 string sRight \"Right\" 124 string sUse \"Use\" 125 string sActivate \"Activate\" 126 string sReady_Weapon \"Ready Weapon\" 127 string sReady_Magic \"Ready Magic\" 128 string sCrouch_Sneak \"Crouch/Sneak\" 129 string sRun \"Run\" 130 string sAlways_Run \"Always Run\" 131 string sAuto_Run \"Auto Run\" 132 string sJump \"Jump\" 133 string sNextWeapon \"NextWeapon\" 134 string sPrevWeapon \"PrevWeapon\" 135 string sNextSpell \"NextSpell\" 136 string sPrevSpell \"PrevSpell\" 137 string sTogglePOVCmd \"Toggle POV\" 138 string sMenu_Mode \"Menu Mode\" 139 string sJournalCmd \"Journal\" 140 string sRestKey \"Rest Menu\" 141 string sQuickMenu \"Quick Menu\" 142 string sQuick1Cmd \"Quick 1\" 143 string sQuick2Cmd \"Quick 2\" 144 string sQuick3Cmd \"Quick 3\" 145 string sQuick4Cmd \"Quick 4\" 146 string sQuick5Cmd \"Quick 5\" 147 string sQuick6Cmd \"Quick 6\" 148 string sQuick7Cmd \"Quick 7\" 149 string sQuick8Cmd \"Quick 8\" 150 string sQuick9Cmd \"Quick 9\" 151 string sQuick10Cmd \"Quick 10\" 152 string sQuickSaveCmd \"Quick Save\" 153 string sQuickLoadCmd \"Quick Load\" 154 string sKeyName_00 \"\" 155 string sKeyName_01 \"ESC\" 156 string sKeyName_02 \"1\" 157 string sKeyName_03 \"2\" 158 string sKeyName_04 \"3\" 159 string sKeyName_05 \"4\" 160 string sKeyName_06 \"5\" 161 string sKeyName_07 \"6\" 162 string sKeyName_08 \"7\" 163 string sKeyName_09 \"8\" 164 string sKeyName_0A \"9\" 165 string sKeyName_0B \"0\" 166 string sKeyName_0C \"-\" 167 string sKeyName_0D \"=\" 168 string sKeyName_0E \"Back Space\" 169 string sKeyName_0F \"Tab\" 170 string sKeyName_10 \"Q\" 171 string sKeyName_11 \"W\" 172 string sKeyName_12 \"E\" 173 string sKeyName_13 \"R\" 174 string sKeyName_14 \"T\" 175 string sKeyName_15 \"Y\" 176 string sKeyName_16 \"U\" 177 string sKeyName_17 \"I\" 178 string sKeyName_18 \"O\" 179 string sKeyName_19 \"P\" 180 string sKeyName_1A \"[\" 181 string sKeyName_1B \"]\" 182 string sKeyName_1C \"Return\" 183 string sKeyName_1D \"Left Ctrl\" 184 string sKeyName_1E \"A\" 185 string sKeyName_1F \"S\" 186 string sKeyName_20 \"D\" 187 string sKeyName_21 \"F\" 188 string sKeyName_22 \"G\" 189 string sKeyName_23 \"H\" 190 string sKeyName_24 \"J\" 191 string sKeyName_25 \"K\" 192 string sKeyName_26 \"L\" 193 string sKeyName_27 \";\" 194 string sKeyName_28 \"'\" 195 string sKeyName_29 \"Grave\" 196 string sKeyName_2A \"Left Shift\" 197 string sKeyName_2B \"\\\" 198 string sKeyName_2C \"Z\" 199 string sKeyName_2D \"X\" 200 string sKeyName_2E \"C\" 201 string sKeyName_2F \"V\" 202 string sKeyName_30 \"B\" 203 string sKeyName_31 \"N\" 204 string sKeyName_32 \"M\" 205 string sKeyName_33 \",\" 206 string sKeyName_34 \".\" 207 string sKeyName_35 \"/\" 208 string sKeyName_36 \"Right Shift\" 209 string sKeyName_37 \"Numpad *\" 210 string sKeyName_38 \"Left Alt\" 211 string sKeyName_39 \"Space\" 212 string sKeyName_3A \"Caps Lock\" 213 string sKeyName_3B \"F1\" 214 string sKeyName_3C \"F2\" 215 string sKeyName_3D \"F3\" 216 string sKeyName_3E \"F4\" 217 string sKeyName_3F \"F5\" 218 string sKeyName_40 \"F6\" 219 string sKeyName_41 \"F7\" 220 string sKeyName_42 \"F8\" 221 string sKeyName_43 \"F9\" 222 string sKeyName_44 \"F10\" 223 string sKeyName_45 \"Num Lock\" 224 string sKeyName_46 \"Scroll Lock\" 225 string sKeyName_47 \"Numpad 7\" 226 string sKeyName_48 \"Numpad 8\" 227 string sKeyName_49 \"Numpad 9\" 228 string sKeyName_4A \"Numpad -\" 229 string sKeyName_4B \"Numpad 4\" 230 string sKeyName_4C \"Numpad 5\" 231 string sKeyName_4D \"Numpad 6\" 232 string sKeyName_4E \"Numpad +\" 233 string sKeyName_4F \"Numpad 1\" 234 string sKeyName_50 \"Numpad 2\" 235 string sKeyName_51 \"Numpad 3\" 236 string sKeyName_52 \"Numpad 0\" 237 string sKeyName_53 \"Decimal\" 238 string sKeyName_54 \"\" 239 string sKeyName_55 \"\" 240 string sKeyName_56 \"OEM 102\" 241 string sKeyName_57 \"F11\" 242 string sKeyName_58 \"F12\" 243 string sKeyName_59 \"\" 244 string sKeyName_5A \"\" 245 string sKeyName_5B \"\" 246 string sKeyName_5C \"\" 247 string sKeyName_5D \"\" 248 string sKeyName_5E \"\" 249 string sKeyName_5F \"\" 250 string sKeyName_60 \"\" 251 string sKeyName_61 \"\" 252 string sKeyName_62 \"\" 253 string sKeyName_63 \"\" 254 string sKeyName_64 \"F13\" 255 string sKeyName_65 \"F14\" 256 string sKeyName_66 \"F15\" 257 string sKeyName_67 \"\" 258 string sKeyName_68 \"\" 259 string sKeyName_69 \"\" 260 string sKeyName_6A \"\" 261 string sKeyName_6B \"\" 262 string sKeyName_6C \"\" 263 string sKeyName_6D \"\" 264 string sKeyName_6E \"\" 265 string sKeyName_6F \"\" 266 string sKeyName_70 \"Kana\" 267 string sKeyName_71 \"\" 268 string sKeyName_72 \"\" 269 string sKeyName_73 \"Abnt C1\" 270 string sKeyName_74 \"\" 271 string sKeyName_75 \"\" 272 string sKeyName_76 \"\" 273 string sKeyName_77 \"\" 274 string sKeyName_78 \"\" 275 string sKeyName_79 \"Cnvrt\" 276 string sKeyName_7A \"\" 277 string sKeyName_7B \"No Cnvrt\" 278 string sKeyName_7C \"\" 279 string sKeyName_7D \"Yen\" 280 string sKeyName_7E \"Abnt C2\" 281 string sKeyName_7F \"\" 282 string sKeyName_80 \"\" 283 string sKeyName_81 \"\" 284 string sKeyName_82 \"\" 285 string sKeyName_83 \"\" 286 string sKeyName_84 \"\" 287 string sKeyName_85 \"\" 288 string sKeyName_86 \"\" 289 string sKeyName_87 \"\" 290 string sKeyName_88 \"\" 291 string sKeyName_89 \"\" 292 string sKeyName_8A \"\" 293 string sKeyName_8B \"\" 294 string sKeyName_8C \"\" 295 string sKeyName_8D \"Np Equals\" 296 string sKeyName_8E \"\" 297 string sKeyName_8F \"\" 298 string sKeyName_90 \"PrvTrk\" 299 string sKeyName_91 \"AT\" 300 string sKeyName_92 \":\" 301 string sKeyName_93 \"_\" 302 string sKeyName_94 \"Kanji\" 303 string sKeyName_95 \"Stop\" 304 string sKeyName_96 \"Ax\" 305 string sKeyName_97 \"Unlabeled\" 306 string sKeyName_98 \"\" 307 string sKeyName_99 \"NxtTrk\" 308 string sKeyName_9A \"\" 309 string sKeyName_9B \"\" 310 string sKeyName_9C \"Right Enter\" 311 string sKeyName_9D \"Right Ctrl\" 312 string sKeyName_9E \"\" 313 string sKeyName_9F \"\" 314 string sKeyName_A0 \"Mute\" 315 string sKeyName_A1 \"Calc\" 316 string sKeyName_A2 \"Play Pause\" 317 string sKeyName_A3 \"\" 318 string sKeyName_A4 \"Media Stop\" 319 string sKeyName_A5 \"\" 320 string sKeyName_A6 \"\" 321 string sKeyName_A7 \"\" 322 string sKeyName_A8 \"\" 323 string sKeyName_A9 \"\" 324 string sKeyName_AA \"\" 325 string sKeyName_AB \"\" 326 string sKeyName_AC \"\" 327 string sKeyName_AD \"\" 328 string sKeyName_AE \"Volume Down\" 329 string sKeyName_AF \"\" 330 string sKeyName_B0 \"Volume Up\" 331 string sKeyName_B1 \"\" 332 string sKeyName_B2 \"Web Home\" 333 string sKeyName_B3 \"Numpad ,\" 334 string sKeyName_B4 \"\" 335 string sKeyName_B5 \"Numpad /\" 336 string sKeyName_B6 \"\" 337 string sKeyName_B7 \"SysRq\" 338 string sKeyName_B8 \"Right Alt\" 339 string sKeyName_B9 \"\" 340 string sKeyName_BA \"\" 341 string sKeyName_BB \"\" 342 string sKeyName_BC \"\" 343 string sKeyName_BD \"\" 344 string sKeyName_BE \"\" 345 string sKeyName_BF \"\" 346 string sKeyName_C0 \"\" 347 string sKeyName_C1 \"\" 348 string sKeyName_C2 \"\" 349 string sKeyName_C3 \"\" 350 string sKeyName_C4 \"\" 351 string sKeyName_C5 \"Pause\" 352 string sKeyName_C6 \"\" 353 string sKeyName_C7 \"Home\" 354 string sKeyName_C8 \"Up\" 355 string sKeyName_C9 \"Page Up\" 356 string sKeyName_CA \"\" 357 string sKeyName_CB \"Left\" 358 string sKeyName_CC \"\" 359 string sKeyName_CD \"Right\" 360 string sKeyName_CE \"\" 361 string sKeyName_CF \"End\" 362 string sKeyName_D0 \"Down\" 363 string sKeyName_D1 \"Page Down\" 364 string sKeyName_D2 \"Insert\" 365 string sKeyName_D3 \"Delete\" 366 string sKeyName_D4 \"\" 367 string sKeyName_D5 \"\" 368 string sKeyName_D6 \"\" 369 string sKeyName_D7 \"\" 370 string sKeyName_D8 \"\" 371 string sKeyName_D9 \"\" 372 string sKeyName_DA \"\" 373 string sKeyName_DB \"Left Win\" 374 string sKeyName_DC \"Right Win\" 375 string sKeyName_DD \"Apps\" 376 string sKeyName_DE \"Power\" 377 string sKeyName_DF \"Sleep\" 378 string sKeyName_E0 \"\" 379 string sKeyName_E1 \"\" 380 string sKeyName_E2 \"\" 381 string sKeyName_E3 \"Wake\" 382 string sKeyName_E4 \"\" 383 string sKeyName_E5 \"Web Search\" 384 string sKeyName_E6 \"Web Favs\" 385 string sKeyName_E7 \"Web Ref\" 386 string sKeyName_E8 \"Web Stop\" 387 string sKeyName_E9 \"Web Fwd\" 388 string sKeyName_EA \"Web Back\" 389 string sKeyName_EB \"My Comp\" 390 string sKeyName_EC \"\" 391 string sKeyName_ED \"\" 392 string sKeyName_EE \"\" 393 string sKeyName_EF \"\" 394 string sKeyName_F0 \"\" 395 string sKeyName_F1 \"\" 396 string sKeyName_F2 \"\" 397 string sKeyName_F3 \"\" 398 string sKeyName_F4 \"\" 399 string sKeyName_F5 \"\" 400 string sKeyName_F6 \"\" 401 string sKeyName_F7 \"\" 402 string sKeyName_F8 \"\" 403 string sKeyName_F9 \"\" 404 string sKeyName_FA \"\" 405 string sKeyName_FB \"\" 406 string sKeyName_FC \"\" 407 string sKeyName_FD \"\" 408 string sKeyName_FE \"\" 409 string sKeyName_FF \"\" 410 string sForwardXbox \"Move Forward\" 411 string sBackXbox \"Move Backward\" 412 string sSlideLeftXbox \"Slide Left\" 413 string sSlideRightXbox \"Slide Right\" 414 string sMenuModeXbox \"Menu Mode\" 415 string sActivateXbox \"Activate\" 416 string sUseXbox \"Use\" 417 string sReadyItemXbox \"Ready Item\" 418 string sReadyMagicXbox \"Ready Magic\" 419 string sCrouchXbox \"Crouch\" 420 string sRunXbox \"Run\" 421 string sToggleRunXbox \"Toggle Run\" 422 string sJumpXbox \"Jump\" 423 string sTogglePOVXbox \"Toggle P.O.V.\" 424 string sMenuNextXbox \"Next Menu\" 425 string sMenuPrevXbox \"Previous Menu\" 426 string sJournalXbox \"Journal\" 427 string sQuick4Xbox \"sQuick4Xbox\" 428 string sQuick5Xbox \"sQuick5Xbox\" 429 string sQuick6Xbox \"sQuick6Xbox\" 430 string sQuick7Xbox \"sQuick7Xbox\" 431 string sQuick8Xbox \"sQuick8Xbox\" 432 string sQuick9Xbox \"sQuick9Xbox\" 433 string sQuick0Xbox \"sQuick0Xbox\" 434 string sOptionsMenuXbox \"Options Menu\" 435 string sSystemMenuXbox \"System Menu\" 436 string sRestMenuXbox \"Rest/Wait\" 437 string sQuickSaveXbox \"Quick Save\" 438 string sQuickLoadXbox \"Quick Load\" 439 string sMoveUpXbox \"Move Up\" 440 string sMoveDownXbox \"Move Down\" 441 string sLookUpXbox \"Look Up\" 442 string sLookDownXbox \"Look Down\" 443 string sTurnLeftXbox \"Turn Left\" 444 string sTurnRightXbox \"Turn Right\" 445 string sNextWeaponXbox \"Next Weapon\" 446 string sPrevWeaponXbox \"Previous Weapon\" 447 string sNextSpellXbox \"Next Spell\" 448 string sPrevSpellXbox \"Previous Spell\" 449 string sDialogText1Xbox \"PUSH\" 450 string sDialogText2Xbox \"TO GO BACK\" 451 string sDialogText3Xbox \"TO READ MORE\" 452 string sQuick_Save \"Quick-Save when Rest\" 453 string sShadowText \"Real-time Shadows\" 454 string sLockSuccess \"Lock pick success!\" 455 string sLockFail \"Lock pick failed.\" 456 string sLockImpossible \"Lock too complex, your chance to pick it is zero\" 457 string sTrapSuccess \"Disarm trap success!\" 458 string sTrapFail \"Disarm trap failed.\" 459 string sTrapImpossible \"Trap too complex, your chance to disarm it is zero\" 460 string sTrapped \"Trapped\" 461 string sLockLevel \"Lock Level\" 462 string sKeyUsed \"used to open lock.\" 463 string sUnlocked \"Unlocked\" 464 float fRepairMult 1.0000 465 float fRepairAmountMult 0.5000 466 float fSpellValueMult 10.0000 467 float fSpellMakingValueMult 1.0000 468 float fEnchantmentValueMult 1.0000 469 float fTravelMult 200.0000 470 float fTravelTimeMult 2667.0000 471 float fMagesGuildTravel 10.0000 472 string sBarter \"Barter\" 473 string sRepair \"Repair\" 474 string sSpells \"Spells\" 475 string sTraining \"Training\" 476 string sTravel \"Travel\" 477 string sSpellmaking \"Spellmaking\" 478 string sEnchanting \"Enchanting\" 479 string sJoystickNotFound \"Joystick not found.\" 480 string sJournalEntry \"Your journal has been updated.\" 481 string sDay \"Day\" 482 string sCreate \"Create\" 483 string sIngredients \"Ingredients\" 484 string sApparatus \"Apparatus\" 485 string sCreatedEffects \"Created Effects\" 486 string sOnetypeEffectMessage \"This effect has already been added.\" 487 string sName \"Name\" 488 string sNameTitle \"Name\" 489 string sSelect \"Select\" 490 string sBuy \"Buy\" 491 string sInfo \"Info\" 492 string sMagicEffects \"Magic Effects\" 493 string sOnce \"Once\" 494 string sCostCharge \"Cost/Charge\" 495 string sCostChance \"Cost/Chance\" 496 string sAttributesMenu1 \"Choose an Attribute \" 497 string sBirthsignmenu1 \"Abilities\" 498 string sBirthsignmenu2 \"Spells\" 499 string sChooseClassMenu1 \"Specilization:\" 500 string sChooseClassMenu2 \"Favorite Attributes:\" 501 string sChooseClassMenu3 \"Major Skills:\" 502 string sChooseClassMenu4 \"Minor Skills:\" 503 string sCreateClassMenuWarning \"Reselect your class?\" 504 string sClassChoiceMenu1 \"(1) Answer Questions (Generates Class)\" 505 string sClassChoiceMenu2 \"(2) Give him the info. (Pick from Class List)\" 506 string sClassChoiceMenu3 \"(3) Fill out yourself. (Create Custom Class)\" 507 string sNotifyMessage1 \"You can't rest when in water or flying.\" 508 string sNotifyMessage2 \"You can't rest here enemies are nearby.\" 509 string sNotifyMessage3 \"You can't sleep when dreaming.\" 510 string sNotifyMessage4 \"Saving...\" 511 string sNotifyMessage4XBOX \"Saving Game. Please don't turn off your Xbox console.\" 512 string sNotifyMessage5 \"You must place the object you are holding into a container before exiting menus.\" 513 string sNotifyMessage6 \"Only one of each ingredient can be used to make a potion.\" 514 string sNotifyMessage6a \"At least two ingredients are needed to make a potion.\" 515 string sNotifyMessage7 \"Only eight ingredients can be used in a potion.\" 516 string sNotifyMessage8 \"Your potion failed.\" 517 string sNotifyMessage9 \"Your offer is refused.\" 518 string sNotifyMessage10 \"You have to type a name.\" 519 string sNotifyMessage11 \"You have to have an item to enchant.\" 520 string sNotifyMessage12 \"You don't have enough money to buy this spell.\" 521 string sNotifyMessage13 \"Beast races can not wear full helmets.\" 522 string sNotifyMessage14 \"Beast races can not wear boots.\" 523 string sNotifyMessage15 \"Beast races can not wear shoes.\" 524 string sNotifyMessage16 \"You can only wear one clothing item at a time.\" 525 string sNotifyMessage16_a \"You can only equip one item of that type at a time.\" 526 string sNotifyMessage17 \"Can't raise the skill above the attribute.\" 527 string sNotifyMessage18 \"You don't have enough money to buy this spell.\" 528 string sNotifyMessage19 \"Only one apparatus can be placed in each slot of the alchemy menu.\" 529 string sNotifyMessage20 \"Please remove the object already in the morter and pestal slot.\" 530 string sNotifyMessage21 \"Please remove the object already in the alembic slot.\" 531 string sNotifyMessage22 \"Please remove the object already in the calcinator slot.\" 532 string sNotifyMessage23 \"Please remove the object already in the retort slot.\" 533 string sNotifyMessage24 \"You need to assign all the major and minor skill slots.\" 534 string sNotifyMessage25 \"You need to pick two favorite attributes.\" 535 string sNotifyMessage26 \"You need to pick a specilization.\" 536 string sNotifyMessage27 \"You need to assign all the major and minor skill slots.\" 537 string sNotifyMessage28 \"You can only add eight effects to a spell.\" 538 string sNotifyMessage29 \"You can not add more enchantment to an object then it can hold.\" 539 string sNotifyMessage30 \"You have to add at least one effect to a spell.\" 540 string sNotifyMessage31 \"Items already enchanted can not have another enchanment added.\" 541 string sNotifyMessage32 \"Only soul gems with a soul can be put in the soulgem slot.\" 542 string sNotifyMessage33 \"Only soul gems put in the soulgem slot.\" 543 string sNotifyMessage34 \"The enchantment failed and your object is distroyed.\" 544 string sNotifyMessage35 \"Only one item of this type can be equipped at a time.\" 545 string sNotifyMessage36 \"You have to distribute all you points before exiting the levelup menu.\" 546 string sNotifyMessage37 \"You need to type in a name.\" 547 string sNotifyMessage38 \"Skill Increase:\" 548 string sNotifyMessage39 \"\\nYour %s skill increased to %d.\" 549 string sNotifyMessage40 \"Skill Maximum Reached.\" 550 string sNotifyMessage41 \"Your %s skill has reached the limit of your %s.\\n\" 551 string sNotifyMessage42 \"You have been released after %d day.\\r\\nA skill has been effected by your time in prison.\\n \" 552 string sNotifyMessage43 \"You have been released after %d days.\\r\\nYour skills have been effected by your time in prison.\\n \" 553 string sNotifyMessage44 \"\\nYour %s skill decreased to %d.\" 554 string sNotifyMessage45 \"You need a Mortar and Pestle to use\" 555 string sNotifyMessage46 \"You need a Alembic to use\" 556 string sNotifyMessage47 \"You need a Calcinator to use\" 557 string sNotifyMessage48 \"You need a Retort to use\" 558 string sNotifyMessage49 \"That %s is mine.\" 559 string sNotifyMessage50 \"%s has no effect on you.\" 560 string sNotifyMessage51 \"The %s has been used up and disappears.\" 561 string sNotifyMessage52 \"You must have a soulgem with a soul to make an Enchanted Item\" 562 string sNotifyMessage53 \"Your menu sizes and positions have been saved for exploring mode.\" 563 string sNotifyMessage54 \"Do you want to start a new game and lose your current game?\" 564 string sNotifyMessage55 \"Please reconnect the controller and press START to continue.\" 565 string sNotifyMessage56 \"The disc you are using may be dirty or damaged.\\nPress A to continue.\" 566 string sNotifyMessage57 \"Please press START to begin.\" 567 string sNotifyMessage58 \"Your Xbox Hard Disk doesn't have enough free blocks to save games. \\nPress A to continue without saving \\nor B to free more blocks.\" 568 string sNotifyMessage59 \"You are over-encumbered.\" 569 string sNotifyMessage60 \"%s has been added to your inventory.\" 570 string sNotifyMessage61 \"%d %s has been added to your inventory.\" 571 string sNotifyMessage62 \"%s has been removed from your inventory.\" 572 string sNotifyMessage63 \"%d %s has been removed from your inventory.\" 573 string sNotifyMessage64 \"You can't sleep in someone else's bed!\" 574 string sNotifyMessage65 \"You can't save a game with no name!\" 575 string sNotifyMessage66 \"This will reset all controls to the default settings. Do you wish to continue?\" 576 string sNotifyMessage67 \"This will immediately change your resolution. Do you want to continue?\" 577 string sTeleportDisabled \"Teleportation magic does not work here.\" 578 string sLevitateDisabled \"Levitation magic does not work here.\" 579 string sInPrisonTitle \"Serving time...\" 580 string sInfoRefusal \"Info Refusal\" 581 string sAdmireSuccess \"Admire Success\" 582 string sAdmireFail \"Admire Fail\" 583 string sIntimidateSuccess \"Intimidate Success\" 584 string sIntimidateFail \"Intimidate Fail\" 585 string sTauntSuccess \"Taunt Success\" 586 string sTauntFail \"Taunt Fail\" 587 string sServiceRefusal \"Service Refusal\" 588 string sBribeSuccess \"Bribe Success\" 589 string sBribeFail \"Bribe Fail\" 590 string sWerewolfRefusal \"You cannot do this as a werewolf.\" 591 string sWerewolfPopup \"Werewolf\" 592 string sWerewolfRestMessage \"You cannot rest in werewolf form.\" 593 string sWerewolfAlarmMessage \"You have been detected changing from a werewolf state.\" 594 string sBookSkillMessage \"You have gained knowledge from this book.\" 595 string sLoadingMessage1 \"Loading Master/Plugin Files\" 596 string sLoadingMessage2 \"Loading Interior\" 597 string sLoadingMessage3 \"Loading Exterior\" 598 string sLoadingMessage4 \"Initializing Loaded Data...\" 599 string sLoadingMessage5 \"Parsing Quests...\" 600 string sLoadingMessage9 \"Clearing Altered Data...\" 601 string sLoadingMessage14 \"Loading Save Game (%s)\" 602 string sLoadingMessage15 \"Loading File (%s)\" 603 string sInvalidSaveGameMsg \"This file is an invalid Save Game.\" 604 string sInvalidSaveGameMsgXBOX \"Unable to load saved game. Press A to continue.\" 605 string sLoadingErrorsMsg \"Errors were encountered loading from file '%s'.\" 606 string sMissingMastersMsg \"The currently selected master files and plugins do not match the ones used by this save game. Errors may occur during load or game play.\\nDo you wish to continue?\" 607 string sChangedMastersMsg \"The selected master files and plugins may have changed since this save game was created. Errors may occur during load or game play.\\nDo you wish to continue?\" 608 string sMastPlugMismatchMsg \"One of the files that \"%s\" is dependent on has changed since the last save.\\r\\nThis may result in errors. Saving again will clear this message\\r\\nbut not necessarily fix any errors.\\r\\n\" 609 string sGeneralMastPlugMismatchMsg \"One or more plugins could not find the correct versions of the master files they depend on. Errors may occur during load or game play. Check the \"Warnings.txt\" file for more information.\" 610 string sLoadLastSaveMsg \"The most recent Save Game is '%s'. \\nWould you like to load it?\" 611 string sMessage1 \"Do you want to Load a save game and lose your current game?\" 612 string sMessage2 \"Quit Morrowind?\" 613 string sMessage3 \"Are you sure you want to delete this Save Game?\" 614 string sMessage4 \"Are you sure you want to overwrite this Save Game?\" 615 string sMessage5 \"Do you wish to quit your current game? \\nAll unsaved progress will be lost.\" 616 string sMessageQuestionAnswer1 \"Your personality and past reflect that of a:\" 617 string sMessageQuestionAnswer2 \"Accept this Class\" 618 string sMessageQuestionAnswer3 \"Choose Another Class\" 619 string sBarterDialog1 \"You can not afford this transaction.\" 620 string sBarterDialog2 \"I can not afford this transaction.\" 621 string sBarterDialog3 \"This is to heavy for you to carry. \" 622 string sBarterDialog4 \"I don't buy that item.\" 623 string sBarterDialog5 \"Thank you, Please Come Again.\" 624 string sBarterDialog6 \"You need to place the bartered item before existing Barter Menu!\" 625 string sBarterDialog7 \"Price\" 626 string sBarterDialog8 \"Offer\" 627 string sBarterDialog9 \"You can not sell summoned items!\" 628 string sBarterDialog10 \"You can't buy summoned items!\" 629 string sBarterDialog11 \"You need to trade items before making an offer.\" 630 string sBarterDialog12 \"You can not drop summoned items!\" 631 string sInventoryMessage1 \"You can not equip objects whose health is less then one!\" 632 string sInventoryMessage2 \"You can not repair items duing battle!\" 633 string sInventoryMessage3 \"You can not make potions during battle!\" 634 string sInventoryMessage4 \"You can not read duing battle!\" 635 string sInventoryMessage5 \"You can not use soul gems duing battle!\" 636 string sContentsMessage1 \"You can't remove summoned items from their container.\" 637 string sContentsMessage2 \"You can't store objects in organic containers.\" 638 string sContentsMessage3 \"This container can not hold that item.\" 639 string sAttributeListTitle \"Attribute List\" 640 string sConsoleTitle \"Console\" 641 string sCreateClassMenu1 \"Class Description\" 642 string sCreateClassMenu2 \"Close the Description menu before leaving Class Creation\" 643 string sCreateClassMenu3 \"The class needs a description.\" 644 string sCreateClassMenuHelp1 \"You'll get +5 to all skills of your specialization. They'll also be easier to increase.\" 645 string sCreateClassMenuHelp2 \"You'll get +10 to each of your favored attributes.\" 646 string sControlsMenu1 \"Reset Controls\" 647 string sControlsMenu2 \"Mouse Sensitivity\" 648 string sControlsMenu3 \"Press a key or push a button to set this command.\" 649 string sControlsMenu4 \"Vertical Sensitivity\" 650 string sControlsMenu5 \"Horizontal Sensitivity\" 651 string sControlsMenu6 \"Push a button to set this command.\" 652 string sGameWithoutLauncherXbox \"The game was started without the launcher. Press START to continue.\" 653 string sDialogMenu1 \"Final Disposition: \" 654 string sEnchantmentMenu1 \"Enchantment Menu\" 655 string sEnchantmentMenu2 \"Name\" 656 string sEnchantmentMenu3 \"Enchantment\" 657 string sEnchantmentMenu4 \"Point Cost\" 658 string sEnchantmentMenu5 \"Buy\" 659 string sEnchantmentMenu6 \"Chance\" 660 string sEnchantmentMenu7 \"Please remove the current soulgem before placing a different soulgem.\" 661 string sEnchantmentMenu8 \"You can't buy a spell that has a zero point cost.\" 662 string sEnchantmentMenu9 \"You can not enchant more then one item of that type at a time.\" 663 string sEnchantmentMenu10 \"The cast cost can not exceed the charge amount put into the time\" 664 string sEnchantmentMenu11 \"You must add at least one effect to an enchantment\" 665 string sEnchantmentMenu12 \"You have successfully created an enchanted item\" 666 string sEnchantmentHelp1 \"Slot for item to enchant. Only weapons, armor, scrolls and clothing that are not already enchanted can be enchanted.\" 667 string sEnchantmentHelp2 \"Slot for the soul gem used to enchant an item. Only soul gems filled with a soul can be used. The soul amount is the total charge placed into the item.\" 668 string sEnchantmentHelp3 \"The first number is the total amount the enchantment would cost to cast. The second number is the total enchantment cost that can be placed on this type of item.\" 669 string sEnchantmentHelp4 \"The amount of charge points needed each time this enchantment is cast. This number is modified by your enchant skill.\" 670 string sEnchantmentHelp5 \"The amount of soul in the soulgem in the soulgem slot\" 671 string sEnchantmentHelp6 \"Amount of gold to buy this enchantment\" 672 string sEnchantmentHelp7 \"Type of cast for the enchantment.\" 673 string sEnchantmentHelp8 \"Name you give the spell.\" 674 string sEnchantmentHelp9 \"Magic effects you know that you can add to an item\" 675 string sEnchantmentHelp10 \"Current effects on the item\" 676 string sInputMenu1 \"Enter\" 677 string sInventoryMenu1 \"You can't equip items being bartered!\" 678 string sLevelUpMenu1 \"You have ascended to Level \" 679 string sLevelUpMenu2 \"It's all suddenly obvious to you. You just have to concentrate. All the energy and time you've wasted it's a sin but without the experience you've gained, taking risks, taking responsibility for failure how could you have understood?\" 680 string sLevelUpMenu3 \"x2\" 681 string sLevelUpMenu4 \"x3\" 682 string sLevelUpMsg \"Your are ready for your next Level Up!\" 683 string sLevelUp \"Level Up\" 684 string sRange \"Range\" 685 string sArea \"Area\" 686 string sMagnitude \"Magnitude\" 687 string sDuration \"Duration\" 688 string sDrain \"Drain\" 689 string sAbsorb \"Absorb\" 690 string sFortify \"Fortify\" 691 string sRestore \"Restore\" 692 string sDamage \"Damage\" 693 string spoint \"point\" 694 string spoints \"points\" 695 string spercent \"percent\" 696 string sfor \"for\" 697 string ssecond \"second\" 698 string sseconds \"seconds\" 699 string sin \"in\" 700 string sfootarea \"foot\" 701 string sfeet \"feet\" 702 string sXTimes \"x\" 703 string sXTimesINT \"x INT\" 704 string sonword \"on\" 705 string sNone \"None\" 706 string sDone \"Done\" 707 string sStartCell \"Imperial Prison Ship\" 708 string sStartError \"Cannot start in an empty interior cell!\" 709 string sStartCellError \"Starting interior cell \"Imperial Prison Ship\" not found!\" 710 string sAdmire \"Admire\" 711 string sIntimidate \"Intimidate\" 712 string sTaunt \"Taunt\" 713 string sBribe 10 Gold \"Bribe 10 Gold\" 714 string sBribe 100 Gold \"Bribe 100 Gold\" 715 string sBribe 1000 Gold \"Bribe 1000 Gold\" 716 string sPersuasionMenuTitle \"Persuasion Menu\" 717 string sFast \"Fast\" 718 string sSlow \"Slow\" 719 string sBestAttack \"Always Use Best Attack\" 720 string sSubtitles \"Subtitles\" 721 string sMouseFlip \"Mouse Flip Y\" 722 string sCursorOff \"Cursor Off\" 723 string sEnableJoystick \"Enable Joystick\" 724 string sXStrafe \"X-Axis Movement\" 725 string sStrafe \"Strafe\" 726 string sTurn \"Turn\" 727 string sMouseWheelUpShort \"MWheel Up\" 728 string sMouseWheelDownShort \"MWheel Down\" 729 string sMouse \"Mouse\" 730 string sJoystickShort \"Joy\" 731 string sJoystickHatShort \"JHat\" 732 string sPickUp \"Pick Up\" 733 string sItemName \"Item Name\" 734 string sNoName \"NO NAME GIVEN!\" 735 string sItem \"Item\" 736 string sRaceMenu1 \"Appearance\" 737 string sRaceMenu2 \"Change Sex\" 738 string sRaceMenu3 \"Change Face\" 739 string sRaceMenu4 \"Change Hair\" 740 string sRaceMenu5 \"Select Race\" 741 string sRaceMenu6 \"Race Description\" 742 string sRaceMenu7 \"Specials\" 743 string sRestMenu1 \"How many hours ?\" 744 string sRestMenu2 \"Hours\" 745 string sRestMenu3 \"REST\" 746 string sRestMenu4 \"You can't rest right now.\" 747 float fRestMagicMult 0.0500 748 string sSaveMenu1 \"NewSaveGame\" 749 string sServiceRepairTitle \"Repair Service Menu\" 750 string sServiceTravelTitle \"Travel Service Menu\" 751 string sServiceTrainingTitle \"Training Service Menu\" 752 string sServiceTrainingWords \"I can teach nothing more about that skill\" 753 string sServiceSpellsTitle \"Spells Service Menu\" 754 string sSkillsMenu1 \"Choose a Skill\" 755 string sBonusSkillTitle \"Bonus Skills\" 756 string sSpecializationMenu1 \"Choose a Specialization\" 757 string sSpellmakingMenuTitle \"SpellMaking Menu\" 758 string sSpellmakingMenu1 \"Spell Chance\" 759 string sSpellmakingHelp1 \"Name you give the spell.\" 760 string sSpellmakingHelp2 \"Amount of Magika one cast of the spell will cost\" 761 string sSpellmakingHelp3 \"The chance you have to cast the spell at your current skill level\" 762 string sSpellmakingHelp4 \"How much gold the spell will cost you.\" 763 string sSpellmakingHelp5 \"Magic effects you know that you can add to a spell\" 764 string sSpellmakingHelp6 \"Current effects on the spell\" 765 string sKilledEssential \"Oh no you've killed somebody important!\" 766 string sCrimeMessage \"Your crime has been reported!\" 767 string sPotionSuccess \"You created a potion\" 768 string sMagicItem \"Magic Item(s)\" 769 string sMagnitudeDes \"The range of a spells power\" 770 string sAreaDes \"The radius the spell attempt to affect\" 771 string sDurationDes \"The length a spell lasts\" 772 string sRangeDes \"What the spell is directed at such as yourself, a target or who you touch\" 773 string sCrimeHelp \"The penalty you must pay for your crimes, if caught.\" 774 string sSoulGem \"Soul\" 775 string sCastCost \"Cast Cost\" 776 string sTravelServiceTitle \"Click on Place name to travel\" 777 string sSpellServiceTitle \"Click on Spell name to buy Spell\" 778 string sRepairServiceTitle \"Click on item name to repair\" 779 string sTrainingServiceTitle \"Click on skill to train\" 780 string sMortar \"Mortar\" 781 string sCalcinator \"Calcinator\" 782 string sAlembic \"Alembic\" 783 string sRetort \"Retort\" 784 string sQuestionMark \"?\" 785 string s3dAudio \"3D Audio\" 786 string s3dHardware \"Hardware Accelerated\" 787 string s3dSoftware \"Software Mode\" 788 string sYourGold \"YOUR GOLD\" 789 string sSellerGold \"SELLER GOLD\" 790 string sMaxSale \"Max Sale\" 791 string sTotalCost \"TOTAL COST\" 792 string sTotalSold \"TOTAL SOLD\" 793 string sOffer \"Offer\" 794 string sLess \"Less\" 795 string sMore \"More\" 796 string sInventory \"Inventory\" 797 string sBookPageOne \"1\" 798 string sBookPageTwo \"2\" 799 string sDisposeofCorpse \"Dispose of Corpse\" 800 string sCaughtStealingMessage \"Hey he stealing my stuff!\" 801 string sUserDefinedClass \"User Defined Class\" 802 string sAsk \"Ask\" 803 string sEnchantItems \"Items to Enchant\" 804 string sSoulGemsWithSouls \"SoulGems with Souls\" 805 string sDoYouWantTo \"Do you want to \" 806 string sRechargeEnchantment \"Recharge Enchanted Item \" 807 string sMake Enchantment \"Make an Enchanted Item \" 808 string sSell \"Sell\" 809 string sEquip \"Equip\" 810 string sDrop \"Drop\" 811 string sContainer \"Container \" 812 string sStats \"Stats \" 813 string sMap \"Map \" 814 string sCenter \"Center \" 815 string sSaveMenuHelp01 \"th of\" 816 string sSaveMenuHelp02 \"month\" 817 string sSaveMenuHelp03 \"day\" 818 string sSaveMenuHelp04 \"a.m.\" 819 string sSaveMenuHelp05 \"p.m.\" 820 string sSaveMenuHelp06 \"Delete Game?\" 821 string sDeleteNote \"Delete Note?\" 822 string sEditNote \"Edit Note\" 823 string sBlocks \"Blocks\" 824 string sFileSize \"File Size\" 825 string sSave \"Save\" 826 string sDeleteSpell \"Delete Spell\" 827 string sQuestionDeleteSpell \"Are you sure you wish to delete %s?\" 828 string sDeleteSpellError \"You can not delete this item from the Magic Menu\" 829 string sLocal \"Local\" 830 string sLoadFailedMessage \"Your last load failed. You must load another game or start a new game.\" 831 string sShadows \"Shadows\" 832 string sControlerVibration \"Controller Vibration\" 833 string sQuanityMenuMessage01 \"Amount to Sell\" 834 string sQuanityMenuMessage02 \"Amount to Buy\" 835 string sSex \"Sex\" 836 string sHair \"Hair\" 837 string sFace \"Face\" 838 string sRepairFailed \"Your repair failed!\" 839 string sRepairSuccess \"Your repair succeeded!\" 840 string sHeal \"Heal\" 841 string sgp \"gp\" 842 string sSetValueMessage01 \"The maximum magnitude can not be less then the minimum magnitude!\" 843 string sDelete \"Delete\" 844 string sVideoWarning \"MenuVideo Warning Video Resolution does not allow shadows.\" 845 string sResChangeWarning \"Desired resolution not supported by video card.\" 846 string sShift \"Shift\" 847 string sBackspace \"Backspace\" 848 string sCustomClassName \"Custom Class\" 849 string sSpace \"Space\" 850 string sInventorySelectNoItems \"You have no items to fill this slot.\" 851 string sInventorySelectNoSoul \"You have no filled Soul Gems\" 852 string sInventorySelectNoIngredients \"You have no ingredients\" 853 string sDisposeCorpseFail \"You can not remove this corpse\" 854 string sQuickMenuTitle \"QUICK KEY MENU\" 855 string sQuickMenuInstruc \"Click on quick key slot to add a spell, magic item or inventory item\" 856 string sQuickMenu1 \"MenuItem to QuickKey\" 857 string sQuickMenu2 \"Inventory Menu Item\" 858 string sQuickMenu3 \"Magic Menu Item\" 859 string sQuickMenu4 \"Delete QuickKey Item\" 860 string sQuickMenu5 \"You no longer have\" 861 string sQuickMenu6 \"Inventory Items to Quick key\" 862 string sMagicSelectTitle \"Select a magic to Quick key.\" 863 string sNextRank \"Next Rank:\" 864 string sNeedOneSkill \"Need one skill at\" 865 string sNeedTwoSkills \"Need two skills at\" 866 string sand \"and\" 867 string sOneHanded \"One Handed\" 868 string sTwoHanded \"Two Handed\" 869 string sType \"Type:\" 870 string sAt \"At\" 871 string sUnequip \"Unequip\" 872 string sScrolldown \"Scroll Down\" 873 string sScrollup \"Scroll Up\" 874 string sSleepInterrupt \"Your rest has been intruppted\" 875 string sSoultrapSuccess \"Your have trapped a soul\" 876 string sCantEquipWeapWarning \"Finish your current attack before equipping a new weapon\" 877 string sOfferMenuTitle \"Offer Menu\" 878 string sPowers \"Powers\" 879 string sBreath \"Breath\" 880 string sDifficulty \"Difficulty\" 881 string sEasy \"Easy\" 882 string sHard \"Hard\" 883 string sProfitValue \"Profit Value\" 884 string sCompanionShare \"Companion Share\" 885 string sCompanionWarningMessage \"Your mercenary is poorer now than when he contracted with you. Your mercenary will quit if you do not give him gold or goods to bring his Profit Value to a positive value.\" 886 string sCompanionWarningButtonOne \"Let the mercenary quit.\" 887 string sCompanionWarningButtonTwo \"Return to Companion Share display.\" 888 string sAttributeStrength \"sAttributeStrength\" 889 string sAttributeIntelligence \"sAttributeIntelligence\" 890 string sAttributeWillpower \"sAttributeWillpower\" 891 string sAttributeAgility \"sAttributeAgility\" 892 string sAttributeSpeed \"sAttributeSpeed\" 893 string sAttributeEndurance \"sAttributeEndurance\" 894 string sAttributePersonality \"sAttributePersonality\" 895 string sAttributeLuck \"sAttributeLuck\" 896 string sSkillBlock \"Block\" 897 string sSkillArmorer \"Armorer\" 898 string sSkillMediumarmor \"Mediumarmor\" 899 string sSkillHeavyarmor \"Heavyarmor\" 900 string sSkillBluntweapon \"Bluntweapon\" 901 string sSkillLongblade \"Longblade\" 902 string sSkillAxe \"Axe\" 903 string sSkillSpear \"Spear\" 904 string sSkillAthletics \"Athletics\" 905 string sSkillEnchant \"Enchant\" 906 string sSkillDestruction \"Destruction\" 907 string sSkillAlteration \"Alteration\" 908 string sSkillIllusion \"Illusion\" 909 string sSkillConjuration \"Conjuration\" 910 string sSkillMysticism \"Mysticism\" 911 string sSkillRestoration \"Restoration\" 912 string sSkillAlchemy \"Alchemy\" 913 string sSkillUnarmored \"Unarmored\" 914 string sSkillSecurity \"Security\" 915 string sSkillSneak \"Sneak\" 916 string sSkillAcrobatics \"Acrobatics\" 917 string sSkillLightarmor \"Lightarmor\" 918 string sSkillShortblade \"Shortblade\" 919 string sSkillMarksman \"Marksman\" 920 string sSkillMercantile \"Mercantile\" 921 string sSkillSpeechcraft \"Speechcraft\" 922 string sSkillHandtohand \"Handtohand\" 923 string sHealth \"Health\" 924 string sRace \"Race\" 925 string sLevel \"Level\" 926 string sLevels \"Levels\" 927 string sFaction \"Faction\" 928 string sBirthSign \"Birth Sign\" 929 string sBounty \"Bounty\" 930 string sReputation \"Reputation\" 931 string sSchool \"School\" 932 string sSkill \"Skill\" 933 string sSkillProgress \"sSkillProgress\" 934 string sSkillMaxReached \"Maximum proficiency has been reached.\" 935 string sLevelProgress \"sLevelProgress\" 936 string sMagic \"sMagic\" 937 string sMagicMenu \"Magic\" 938 string sFatigue \"sFatigue\" 939 string sSkillsMenuReputationHelp \"Your fame rating in the world of Morrowind\" 940 string sStrDesc \"sStrDesc\" 941 string sIntDesc \"sIntDesc\" 942 string sWilDesc \"sWilDesc\" 943 string sAgiDesc \"sAgiDesc\" 944 string sSpdDesc \"sSpdDesc\" 945 string sEndDesc \"sEndDesc\" 946 string sPerDesc \"sPerDesc\" 947 string sLucDesc \"sLucDesc\" 948 string sFatDesc \"sFatDesc\" 949 string sHealthDesc \"sHealthDesc\" 950 string sMagDesc \"sMagDesc\" 951 float fWortChanceValue 15.0000 952 string sDefaultCellname \"Wilderness\" 953 float fMinWalkSpeed 150.0000 954 float fMaxWalkSpeed 300.0000 955 float fMinWalkSpeedCreature 5.0000 956 float fMaxWalkSpeedCreature 300.0000 957 float fEncumberedMoveEffect 0.7500 958 float fBaseRunMultiplier 1.5000 959 float fAthleticsRunBonus 1.5000 960 float fJumpAcrobaticsBase 128.0000 961 float fJumpAcroMultiplier 4.0000 962 float fJumpEncumbranceBase 0.5000 963 float fJumpEncumbranceMultiplier 1.0000 964 float fJumpRunMultiplier 1.2000 965 float fJumpMoveBase 0.5000 966 float fJumpMoveMult 0.5000 967 float fSwimWalkBase 0.5000 968 float fSwimRunBase 0.5000 969 float fSwimWalkAthleticsMult 0.0200 970 float fSwimRunAthleticsMult 0.1000 971 float fSwimHeightScale 0.9000 972 float fHoldBreathTime 20.0000 973 float fHoldBreathEndMult 0.5000 974 float fSuffocationDamage 3.0000 975 float fMinFlySpeed 5.0000 976 float fMaxFlySpeed 300.0000 977 float fStromWindSpeed 0.7000 978 float fStromWalkMult 0.2000 979 float fFallDamageDistanceMin 300.0000 980 float fFallDistanceBase 0.0000 981 float fFallDistanceMult 0.1000 982 float fFallAcroBase 0.2500 983 float fFallAcroMult 0.0100 984 integer iMaxActivateDist 128 985 integer iMaxInfoDist 128 986 float fVanityDelay 30.0000 987 float fMaxHeadTrackDistance 400.0000 988 float fInteriorHeadTrackMult 0.5000 989 integer iHelmWeight 5 990 integer iPauldronWeight 10 991 integer iCuirassWeight 30 992 integer iGauntletWeight 5 993 integer iGreavesWeight 15 994 integer iBootsWeight 20 995 integer iShieldWeight 15 996 float fLightMaxMod 0.6000 997 float fMedMaxMod 0.9000 998 float fUnarmoredBase1 0.0500 999 float fUnarmoredBase2 0.1000 1000 integer iBaseArmorSkill 30 1001 float fBlockStillBonus 1.2500 1002 float fDamageStrengthBase 0.5000 1003 float fDamageStrengthMult 0.1000 1004 float fSwingBlockBase 0.5000 1005 float fSwingBlockMult 0.5000 1006 float fFatigueBase 1.0000 1007 float fFatigueMult 1.0000 1008 float fFatigueReturnBase 1.5000 1009 float fFatigueReturnMult 1.0000 1010 float fEndFatigueMult 0.0100 1011 float fFatigueAttackBase 1.0000 1012 float fFatigueAttackMult 1.0000 1013 float fWeaponFatigueMult 0.2000 1014 float fFatigueBlockBase 1.0000 1015 float fFatigueBlockMult 1.0000 1016 float fWeaponFatigueBlockMult 0.2000 1017 float fFatigueRunBase 1.5000 1018 float fFatigueRunMult 1.5000 1019 float fFatigueJumpBase 3.0000 1020 float fFatigueJumpMult 10.0000 1021 float fFatigueSwimWalkBase 0.5000 1022 float fFatigueSwimRunBase 1.5000 1023 float fFatigueSwimWalkMult 0.5000 1024 float fFatigueSwimRunMult 1.5000 1025 float fFatigueSneakBase 1.5000 1026 float fFatigueSneakMult 1.5000 1027 float fMinHandToHandMult 0.5000 1028 float fMaxHandToHandMult 1.0000 1029 float fHandtoHandHealthPer 0.1000 1030 float fCombatInvisoMult 0.2000 1031 float fCombatKODamageMult 2.0000 1032 float fCombatCriticalStrikeMult 4.0000 1033 integer iBlockMinChance 5 1034 integer iBlockMaxChance 50 1035 float fLevelUpHealthEndMult 0.1000 1036 float fSoulGemMult 3.0000 1037 float fEffectCostMult 0.5000 1038 float fSpellPriceMult 1.0000 1039 float fFatigueSpellBase 1.0000 1040 float fFatigueSpellMult 1.0000 1041 float fFatigueSpellCostMult 1.0000 1042 float fPotionStrengthMult 0.5000 1043 float fPotionT1MagMult 3.0000 1044 float fPotionT1DurMult 2.0000 1045 float fPotionMinUsefulDuration 20.0000 1046 float fPotionT4BaseStrengthMult 20.0000 1047 float fPotionT4EquipStrengthMult 12.0000 1048 float fIngredientMult 1.0000 1049 float fMagicItemCostMult 1.0000 1050 float fMagicItemPriceMult 1.0000 1051 float fMagicItemOnceMult 1.0000 1052 float fMagicItemUsedMult 1.0000 1053 float fMagicItemStrikeMult 1.0000 1054 float fMagicItemConstantMult 1.0000 1055 float fEnchantmentMult 1.0000 1056 float fEnchantmentChanceMult 3.0000 1057 float fPCbaseMagickaMult 1.0000 1058 float fNPCbaseMagickaMult 2.0000 1059 float fAutoSpellChance 50.0000 1060 float fAutoPCSpellChance 75.0000 1061 integer iAutoSpellTimesCanCast 3 1062 integer iAutoSpellAttSkillMin 70 1063 integer iAutoSpellAlterationMax 5 1064 integer iAutoSpellConjurationMax 5 1065 integer iAutoSpellDestructionMax 5 1066 integer iAutoSpellIllusionMax 5 1067 integer iAutoSpellMysticismMax 5 1068 integer iAutoSpellRestorationMax 5 1069 integer iAutoPCSpellMax 100 1070 integer iAutoRepFacMod 2 1071 integer iAutoRepLevMod 0 1072 integer iMagicItemChargeOnce 1 1073 integer iMagicItemChargeConst 10 1074 integer iMagicItemChargeUse 5 1075 integer iMagicItemChargeStrike 10 1076 integer iMonthsToRespawn 4 1077 float fCorpseClearDelay 6.0000 1078 float fCorpseRespawnDelay 6.0000 1079 float fBarterGoldResetDelay 24.0000 1080 float fEncumbranceStrMult 5.0000 1081 float fPickLockMult -10.0000 1082 float fTrapCostMult -0.5000 1083 float fMessageTimePerChar 0.1000 1084 float fMagicItemRechargePerSecond 0.0028 1085 integer i1stPersonSneakDelta 10 1086 integer iBarterSuccessDisposition 1 1087 integer iBarterFailDisposition -1 1088 integer iLevelupTotal 10 1089 integer iLevelupMajorMult 2 1090 integer iLevelupMinorMult 1 1091 integer iLevelupMajorMultAttribute 1 1092 integer iLevelupMinorMultAttribute 1 1093 integer iLevelupMiscMultAttriubte 1 1094 integer iLevelupSpecialization 1 1095 integer iLevelUp01Mult 1 1096 integer iLevelUp02Mult 2 1097 integer iLevelUp03Mult 3 1098 integer iLevelUp04Mult 4 1099 integer iLevelUp05Mult 5 1100 integer iLevelUp06Mult 6 1101 integer iLevelUp07Mult 7 1102 integer iLevelUp08Mult 8 1103 integer iLevelUp09Mult 9 1104 integer iLevelUp10Mult 10 1105 integer iSoulAmountForConstantEffect 400 1106 float fConstantEffectMult 15.0000 1107 float fEnchantmentConstantDurationMult 100.0000 1108 float fEnchantmentConstantChanceMult 0.5000 1109 float fWeaponDamageMult 0.1000 1110 float fSeriousWoundMult 0.2500 1111 float fKnockDownMult 0.5000 1112 integer iKnockDownOddsBase 25 1113 integer iKnockDownOddsMult 25 1114 float fCombatArmorMinMult 0.2500 1115 float fHandToHandReach 0.7000 1116 float fVoiceIdleOdds 100.0000 1117 integer iVoiceAttackOdds 30 1118 integer iVoiceHitOdds 30 1119 float fProjectileMinSpeed 400.0000 1120 float fProjectileMaxSpeed 1000.0000 1121 float fThrownWeaponMinSpeed 100.0000 1122 float fThrownWeaponMaxSpeed 500.0000 1123 float fTargetSpellMaxSpeed 1000.0000 1124 float fProjectileThrownStoreChance 75.0000 1125 integer iPickMinChance 5 1126 integer iPickMaxChance 75 1127 float fDispRaceMod 5.0000 1128 float fDispPersonalityMult 0.5000 1129 float fDispPersonalityBase 50.0000 1130 float fDispFactionMod 5.0000 1131 float fDispFactionRankBase 0.5000 1132 float fDispFactionRankMult 0.5000 1133 float fDispCrimeMod 0.0100 1134 float fDispDiseaseMod -10.0000 1135 integer iDispAttackMod -20 1136 float fDispWeaponDrawn -5.0000 1137 float fDispBargainSuccessMod 1.0000 1138 float fDispBargainFailMod -1.0000 1139 float fDispPickPocketMod -25.0000 1140 integer iDaysinPrisonMod 100 1141 float fDispAttacking -10.0000 1142 float fDispStealing -0.1000 1143 integer iDispTresspass -20 1144 integer iDispKilling -50 1145 integer iTrainingMod 10 1146 integer iAlchemyMod 10 1147 float fBargainOfferBase 50.0000 1148 float fBargainOfferMulti -4.0000 1149 float fDispositionMod 1.0000 1150 float fPersonalityMod 5.0000 1151 float fLuckMod 10.0000 1152 float fReputationMod 1.0000 1153 float fLevelMod 5.0000 1154 float fBribe10Mod 25.0000 1155 float fBribe100Mod 50.0000 1156 float fBribe1000Mod 100.0000 1157 float fPerDieRollMult 0.2000 1158 float fPerTempMult 2.0000 1159 integer iPerMinChance 5 1160 integer iPerMinChange 10 1161 float fSpecialSkillBonus 0.8000 1162 float fMajorSkillBonus 0.7500 1163 float fMinorSkillBonus 1.0000 1164 float fMiscSkillBonus 1.2500 1165 integer iAlarmKilling 90 1166 integer iAlarmAttack 50 1167 integer iAlarmStealing 1 1168 integer iAlarmPickPocket 20 1169 integer iAlarmTresspass 5 1170 float fAlarmRadius 4096.0000 1171 integer iCrimeKilling 1000 1172 integer iCrimeAttack 40 1173 float fCrimeStealing 1.0000 1174 integer iCrimePickPocket 25 1175 integer iCrimeTresspass 5 1176 integer iCrimeThreshold 100 1177 integer iCrimeThresholdMultiplier 10 1178 float fCrimeGoldDiscountMult 0.3000 1179 float fCrimeGoldTurnInMult 0.9000 1180 integer iFightAttack 100 1181 integer iFightAttacking 50 1182 integer iFightDistanceBase 20 1183 float fFightDistanceMultiplier 0.0050 1184 integer iFightAlarmMult 1 1185 float fFightDispMult 1.0000 1186 float fFightStealing 0.1000 1187 integer iFightPickpocket 25 1188 integer iFightTrespass 25 1189 integer iFightKilling 50 1190 integer iFlee 0 1191 integer iGreetDistanceMultiplier 10 1192 integer iGreetDuration 3 1193 float fGreetDistanceReset 512.0000 1194 float fIdleChanceMultiplier 1.0000 1195 float fSneakUseDist 512.0000 1196 float fSneakUseDelay 2.0000 1197 float fSneakDistanceBase 0.5000 1198 float fSneakDistanceMultiplier 0.0005 1199 float fSneakSpeedMultiplier 0.5000 1200 float fSneakViewMult 1.5000 1201 float fSneakNoViewMult 0.5000 1202 float fSneakSkillMult 1.0000 1203 float fSneakBootMult -0.5000 1204 float fCombatDistance 128.0000 1205 float fCombatAngleXY 60.0000 1206 float fCombatAngleZ 60.0000 1207 float fCombatForceSideAngle 30.0000 1208 float fCombatTorsoSideAngle 45.0000 1209 float fCombatTorsoStartPercent 0.3000 1210 float fCombatTorsoStopPercent 0.7000 1211 float fCombatBlockLeftAngle -90.0000 1212 float fCombatBlockRightAngle 30.0000 1213 float fCombatDelayCreature 0.1000 1214 float fCombatDelayNPC 0.1000 1215 string sTargetCriticalStrike \"%s is hit by a critical strike!\" 1216 float fAIMeleeWeaponMult 2.0000 1217 float fAIRangeMeleeWeaponMult 5.0000 1218 float fAIMagicSpellMult 3.0000 1219 float fAIRangeMagicSpellMult 5.0000 1220 float fAIMeleeArmorMult 1.0000 1221 float fAIMeleeSummWeaponMult 1.0000 1222 float fAIFleeHealthMult 10.0000 1223 float fAIFleeFleeMult 1.0000 1224 float fPickPocketMod 0.5000 1225 float fSleepRandMod 0.5000 1226 float fSleepRestMod 0.3000 1227 integer iNumberCreatures 3 1228 float fAudioDefaultMinDistance 5.0000 1229 float fAudioDefaultMaxDistance 40.0000 1230 float fAudioVoiceDefaultMinDistance 10.0000 1231 float fAudioVoiceDefaultMaxDistance 60.0000 1232 float fAudioMinDistanceMult 20.0000 1233 float fAudioMaxDistanceMult 50.0000 1234 float fNPCHealthBarTime 3.0000 1235 float fNPCHealthBarFade 0.5000 1236 float fDifficultyMult 5.0000 1237 float fWereWolfRunMult 1.5000 1238 float fWereWolfSilverWeaponDamageMult 1.5000 1239 integer iWereWolfBounty 10000 1240 float fWereWolfStrength 150.0000 1241 float fWereWolfAgility 150.0000 1242 float fWereWolfEndurance 150.0000 1243 float fWereWolfSpeed 150.0000 1244 float fWereWolfHandtoHand 100.0000 1245 float fWereWolfUnarmored 100.0000 1246 integer iWereWolfLevelToAttack 20 1247 integer iWereWolfFightMod 100 1248 integer iWereWolfFleeMod 100 1249 float fWereWolfAthletics 150.0000 1250 float fWereWolfAcrobatics 150.0000 1251 float fWereWolfHealth 2.0000 1252 float fWereWolfFatigue 400.0000 1253 float fWereWolfMagicka 100.0000 1254 float fWereWolfIntellegence 1.0000 1255 float fWereWolfWillPower 1.0000 1256 float fWereWolfPersonality 1.0000 1257 float fWereWolfLuck 1.0000 1258 float fWereWolfBlock 1.0000 1259 float fWereWolfArmorer 1.0000 1260 float fWereWolfMediumArmor 1.0000 1261 float fWereWolfHeavyArmor 1.0000 1262 float fWereWolfBluntWeapon 1.0000 1263 float fWereWolfLongBlade 1.0000 1264 float fWereWolfAxe 1.0000 1265 float fWereWolfSpear 1.0000 1266 float fWereWolfDestruction 1.0000 1267 float fWereWolfAlteration 1.0000 1268 float fWereWolfIllusion 1.0000 1269 float fWereWolfConjuration 1.0000 1270 float fWereWolfMysticism 1.0000 1271 float fWereWolfRestoration 1.0000 1272 float fWereWolfEnchant 1.0000 1273 float fWereWolfAlchemy 1.0000 1274 float fWereWolfSecurity 1.0000 1275 float fWereWolfSneak 1.0000 1276 float fWereWolfLightArmor 1.0000 1277 float fWereWolfShortBlade 1.0000 1278 float fWereWolfMarksman 1.0000 1279 float fWereWolfMerchantile 1.0000 1280 float fWereWolfSpeechcraft 1.0000 1281 float fCombatDistanceWerewolfMod 0.3000 1282 float fFleeDistance 3000.0000 1283 string sEffectWaterBreathing \"sEffectWaterBreathing\" 1284 string sEffectSwiftSwim \"sEffectSwiftSwim\" 1285 string sEffectWaterWalking \"sEffectWaterWalking\" 1286 string sEffectShield \"sEffectShield\" 1287 string sEffectFireShield \"sEffectFireShield\" 1288 string sEffectLightningShield \"sEffectLightningShield\" 1289 string sEffectFrostShield \"sEffectFrostShield\" 1290 string sEffectBurden \"sEffectBurden\" 1291 string sEffectFeather \"sEffectFeather\" 1292 string sEffectJump \"sEffectJump\" 1293 string sEffectLevitate \"sEffectLevitate\" 1294 string sEffectSlowFall \"sEffectSlowFall\" 1295 string sEffectLock \"sEffectLock\" 1296 string sEffectOpen \"sEffectOpen\" 1297 string sEffectFireDamage \"sEffectFireDamage\" 1298 string sEffectShockDamage \"sEffectShockDamage\" 1299 string sEffectFrostDamage \"sEffectFrostDamage\" 1300 string sEffectDrainAttribute \"sEffectDrainAttribute\" 1301 string sEffectDrainHealth \"sEffectDrainHealth\" 1302 string sEffectDrainSpellpoints \"sEffectDrainSpellpoints\" 1303 string sEffectDrainFatigue \"sEffectDrainFatigue\" 1304 string sEffectDrainSkill \"sEffectDrainSkill\" 1305 string sEffectDamageAttribute \"sEffectDamageAttribute\" 1306 string sEffectDamageHealth \"sEffectDamageHealth\" 1307 string sEffectDamageMagicka \"sEffectDamageMagicka\" 1308 string sEffectDamageFatigue \"sEffectDamageFatigue\" 1309 string sEffectDamageSkill \"sEffectDamageSkill\" 1310 string sEffectPoison \"sEffectPoison\" 1311 string sEffectWeaknessToFire \"sEffectWeaknessToFire\" 1312 string sEffectWeaknessToFrost \"sEffectWeaknessToFrost\" 1313 string sEffectWeaknessToShock \"sEffectWeaknessToShock\" 1314 string sEffectWeaknessToMagicka \"sEffectWeaknessToMagicka\" 1315 string sEffectWeaknessToCommonDisease \"sEffectWeaknessToCommonDisease\" 1316 string sEffectWeaknessToBlightDisease \"sEffectWeaknessToBlightDisease\" 1317 string sEffectWeaknessToCorprusDisease \"sEffectWeaknessToCorprusDisease\" 1318 string sEffectWeaknessToPoison \"sEffectWeaknessToPoison\" 1319 string sEffectWeaknessToNormalWeapons \"sEffectWeaknessToNormalWeapons\" 1320 string sEffectDisintegrateWeapon \"sEffectDisintegrateWeapon\" 1321 string sEffectDisintegrateArmor \"sEffectDisintegrateArmor\" 1322 string sEffectInvisibility \"sEffectInvisibility\" 1323 string sEffectChameleon \"sEffectChameleon\" 1324 string sEffectLight \"sEffectLight\" 1325 string sEffectSanctuary \"sEffectSanctuary\" 1326 string sEffectNightEye \"sEffectNightEye\" 1327 string sEffectCharm \"sEffectCharm\" 1328 string sEffectParalyze \"sEffectParalyze\" 1329 string sEffectSilence \"sEffectSilence\" 1330 string sEffectBlind \"sEffectBlind\" 1331 string sEffectSound \"sEffectSound\" 1332 string sEffectCalmHumanoid \"sEffectCalmHumanoid\" 1333 string sEffectCalmCreature \"sEffectCalmCreature\" 1334 string sEffectFrenzyHumanoid \"sEffectFrenzyHumanoid\" 1335 string sEffectFrenzyCreature \"sEffectFrenzyCreature\" 1336 string sEffectDemoralizeHumanoid \"sEffectDemoralizeHumanoid\" 1337 string sEffectDemoralizeCreature \"sEffectDemoralizeCreature\" 1338 string sEffectRallyHumanoid \"sEffectRallyHumanoid\" 1339 string sEffectRallyCreature \"sEffectRallyCreature\" 1340 string sEffectDispel \"sEffectDispel\" 1341 string sEffectSoultrap \"sEffectSoultrap\" 1342 string sEffectTelekinesis \"sEffectTelekinesis\" 1343 string sEffectMark \"sEffectMark\" 1344 string sEffectRecall \"sEffectRecall\" 1345 string sEffectDivineIntervention \"sEffectDivineIntervention\" 1346 string sEffectAlmsiviIntervention \"sEffectAlmsiviIntervention\" 1347 string sEffectDetectAnimal \"sEffectDetectAnimal\" 1348 string sEffectDetectEnchantment \"sEffectDetectEnchantment\" 1349 string sEffectDetectKey \"sEffectDetectKey\" 1350 string sEffectSpellAbsorption \"sEffectSpellAbsorption\" 1351 string sEffectReflect \"sEffectReflect\" 1352 string sEffectCureCommonDisease \"sEffectCureCommonDisease\" 1353 string sEffectCureBlightDisease \"sEffectCureBlightDisease\" 1354 string sEffectCureCorprusDisease \"sEffectCureCorprusDisease\" 1355 string sEffectCurePoison \"sEffectCurePoison\" 1356 string sEffectCureParalyzation \"sEffectCureParalyzation\" 1357 string sEffectRestoreAttribute \"sEffectRestoreAttribute\" 1358 string sEffectRestoreHealth \"sEffectRestoreHealth\" 1359 string sEffectRestoreSpellPoints \"sEffectRestoreSpellPoints\" 1360 string sEffectRestoreFatigue \"sEffectRestoreFatigue\" 1361 string sEffectRestoreSkill \"sEffectRestoreSkill\" 1362 string sEffectFortifyAttribute \"sEffectFortifyAttribute\" 1363 string sEffectFortifyHealth \"sEffectFortifyHealth\" 1364 string sEffectFortifySpellpoints \"sEffectFortifySpellpoints\" 1365 string sEffectFortifyFatigue \"sEffectFortifyFatigue\" 1366 string sEffectFortifySkill \"sEffectFortifySkill\" 1367 string sEffectFortifyMagickaMultiplier \"sEffectFortifyMagickaMultiplier\" 1368 string sEffectAbsorbAttribute \"sEffectAbsorbAttribute\" 1369 string sEffectAbsorbHealth \"sEffectAbsorbHealth\" 1370 string sEffectAbsorbSpellPoints \"sEffectAbsorbSpellPoints\" 1371 string sEffectAbsorbFatigue \"sEffectAbsorbFatigue\" 1372 string sEffectAbsorbSkill \"sEffectAbsorbSkill\" 1373 string sEffectResistFire \"sEffectResistFire\" 1374 string sEffectResistFrost \"sEffectResistFrost\" 1375 string sEffectResistShock \"sEffectResistShock\" 1376 string sEffectResistMagicka \"sEffectResistMagicka\" 1377 string sEffectResistCommonDisease \"sEffectResistCommonDisease\" 1378 string sEffectResistBlightDisease \"sEffectResistBlightDisease\" 1379 string sEffectResistCorprusDisease \"sEffectResistCorprusDisease\" 1380 string sEffectResistPoison \"sEffectResistPoison\" 1381 string sEffectResistNormalWeapons \"sEffectResistNormalWeapons\" 1382 string sEffectResistParalysis \"sEffectResistParalysis\" 1383 string sEffectRemoveCurse \"sEffectRemoveCurse\" 1384 string sEffectTurnUndead \"sEffectTurnUndead\" 1385 string sEffectSummonScamp \"sEffectSummonScamp\" 1386 string sEffectSummonClannfear \"sEffectSummonClannfear\" 1387 string sEffectSummonDaedroth \"sEffectSummonDaedroth\" 1388 string sEffectSummonDremora \"sEffectSummonDremora\" 1389 string sEffectSummonAncestralGhost \"sEffectSummonAncestralGhost\" 1390 string sEffectSummonSkeletalMinion \"sEffectSummonSkeletalMinion\" 1391 string sEffectSummonLeastBonewalker \"sEffectSummonLeastBonewalker\" 1392 string sEffectSummonGreaterBonewalker \"sEffectSummonGreaterBonewalker\" 1393 string sEffectSummonBonelord \"sEffectSummonBonelord\" 1394 string sEffectSummonWingedTwilight \"sEffectSummonWingedTwilight\" 1395 string sEffectSummonHunger \"sEffectSummonHunger\" 1396 string sEffectSummonGoldensaint \"sEffectSummonGoldensaint\" 1397 string sEffectSummonFlameAtronach \"sEffectSummonFlameAtronach\" 1398 string sEffectSummonFrostAtronach \"sEffectSummonFrostAtronach\" 1399 string sEffectSummonStormAtronach \"sEffectSummonStormAtronach\" 1400 string sEffectFortifyAttackBonus \"sEffectFortifyAttackBonus\" 1401 string sEffectCommandCreatures \"sEffectCommandCreatures\" 1402 string sEffectCommandHumanoids \"sEffectCommandHumanoids\" 1403 string sEffectBoundDagger \"sEffectBoundDagger\" 1404 string sEffectBoundLongsword \"sEffectBoundLongsword\" 1405 string sEffectBoundMace \"sEffectBoundMace\" 1406 string sEffectBoundBattleAxe \"sEffectBoundBattleAxe\" 1407 string sEffectBoundSpear \"sEffectBoundSpear\" 1408 string sEffectBoundLongbow \"sEffectBoundLongbow\" 1409 string sEffectExtraSpell \"sEffectExtraSpell\" 1410 string sEffectBoundCuirass \"sEffectBoundCuirass\" 1411 string sEffectBoundHelm \"sEffectBoundHelm\" 1412 string sEffectBoundBoots \"sEffectBoundBoots\" 1413 string sEffectBoundShield \"sEffectBoundShield\" 1414 string sEffectBoundGloves \"sEffectBoundGloves\" 1415 string sEffectCorpus \"sEffectCorpus\" 1416 string sEffectVampirism \"sEffectVampirism\" 1417 string sEffectSummonCenturionSphere \"sEffectSummonCenturionSphere\" 1418 string sEffectSunDamage \"sEffectSunDamage\" 1419 string sEffectStuntedMagicka \"sEffectStuntedMagicka\" 1420 string sEffectSummonFabricant \"sEffectSummonFabricant\" 1421 string sEffectSummonCreature01 \"sEffectSummonCreature01\" 1422 string sEffectSummonCreature02 \"sEffectSummonCreature02\" 1423 string sEffectSummonCreature03 \"sEffectSummonCreature03\" 1424 string sEffectSummonCreature04 \"sEffectSummonCreature04\" 1425 string sEffectSummonCreature05 \"sEffectSummonCreature05\" 1426 string sSchoolAlteration \"sSchoolAlteration\" 1427 string sSchoolConjuration \"sSchoolConjuration\" 1428 string sSchoolDestruction \"sSchoolDestruction\" 1429 string sSchoolIllusion \"sSchoolIllusion\" 1430 string sSchoolMysticism \"sSchoolMysticism\" 1431 string sSchoolRestoration \"sSchoolRestoration\" 1432 string sTypeSpell \"sTypeSpell\" 1433 string sTypeAbility \"sTypeAbility\" 1434 string sTypeBlightDisease \"sTypeBlightDisease\" 1435 string sTypeDisease \"sTypeDisease\" 1436 string sTypeCurse \"sTypeCurse\" 1437 string sTypePower \"sTypePower\" 1438 string sItemCastOnce \"sItemCastOnce\" 1439 string sItemCastWhenStrikes \"sItemCastWhenStrikes\" 1440 string sItemCastWhenUsed \"sItemCastWhenUsed\" 1441 string sItemCastConstant \"sItemCastConstant\" 1442 string sRangeSelf \"sRangeSelf\" 1443 string sRangeTouch \"sRangeTouch\" 1444 string sRangeTarget \"sRangeTarget\" 1445 string sMagicSkillFail \"sMagicSkillFail\" 1446 string sMagicInsufficientSP \"sMagicInsufficientSP\" 1447 string sMagicInsufficientCharge \"sMagicInsufficientCharge\" 1448 string sPowerAlreadyUsed \"sPowerAlreadyUsed\" 1449 string sMagicInvalidTarget \"sMagicInvalidTarget\" 1450 string sMagicLockSuccess \"sMagicLockSuccess\" 1451 string sMagicOpenSuccess \"sMagicOpenSuccess\" 1452 string sMagicTargetResistsWeapons \"sMagicTargetResistsWeapons\" 1453 string sMagicContractDisease \"You have contracted %s\" 1454 float fMagicDetectRefreshRate 0.0167 1455 float fMagicStartIconBlink 3.0000 1456 float fMagicCreatureCastDelay 1.5000 1457 string sMagicScampID \"Scamp\" 1458 string sMagicClannfearID \"Clannfear\" 1459 string sMagicDaedrothID \"Daedroth\" 1460 string sMagicDremoraID \"Dremora\" 1461 string sMagicAncestralGhostID \"Ancestor_Ghost\" 1462 string sMagicSkeletalMinionID \"Skeleton\" 1463 string sMagicLeastBonewalkerID \"Bonewalker\" 1464 string sMagicGreaterBonewalkerID \"Bonewalker_Greater\" 1465 string sMagicBonelordID \"Bonelord\" 1466 string sMagicWingedTwilightID \"Winged Twilight\" 1467 string sMagicHungerID \"Hunger\" 1468 string sMagicGoldenSaintID \"Golden Saint\" 1469 string sMagicFlameAtronachID \"Atronach_Flame\" 1470 string sMagicFrostAtronachID \"Atronach_Frost\" 1471 string sMagicStormAtronachID \"Atronach_Storm\" 1472 string sMagicCenturionSphereID \"centurion_sphere\" 1473 string sMagicFabricantID \"Fabricant\" 1474 string sMagicCreature01ID \"sMagicCreature01ID\" 1475 string sMagicCreature02ID \"sMagicCreature02ID\" 1476 string sMagicCreature03ID \"sMagicCreature03ID\" 1477 string sMagicCreature04ID \"sMagicCreature04ID\" 1478 string sMagicCreature05ID \"sMagicCreature05ID\" 1479 string sMagicBoundDaggerID \"Bound_Dagger\" 1480 string sMagicBoundLongswordID \"Bound_Longsword\" 1481 string sMagicBoundMaceID \"Bound_Mace\" 1482 string sMagicBoundBattleAxeID \"Bound_Battle_Axe\" 1483 string sMagicBoundSpearID \"Bound_Spear\" 1484 string sMagicBoundLongbowID \"Bound_Longbow\" 1485 string sMagicBoundCuirassID \"Bound_Cuirass\" 1486 string sMagicBoundHelmID \"Bound_Helm\" 1487 string sMagicBoundBootsID \"Bound_Boots\" 1488 string sMagicBoundShieldID \"Bound_Shield\" 1489 string sMagicBoundLeftGauntletID \"Bound_Gauntlet_Left\" 1490 string sMagicBoundRightGauntletID \"Bound_Gauntlet_Right\" 1491 float fDiseaseXferChance 5.0000 1492 float fElementalShieldMult 0.1000 1493 string sMagicCorprusWorsens \"Your case of Corprus has worsened.\" 1494 string sMagicCannotRecast \"You cannot re-cast this spell while it is still in effect.\" 1495 float fMagicSunBlockedMult 0.5000 1496 string sMagicPCResisted \"You resisted magic.\" 1497 string sMagicTargetResisted \"Target resisted magic.\" 1498 string sMagicInvalidEffect \"You cannot cast this effect right now.\" 1499 string sAcrobat \"Acrobat\" 1500 string sAgent \"Agent\" 1501 string sArcher \"Archer\" 1502 string sAssassin \"Assassin\" 1503 string sBarbarian \"Barbarian\" 1504 string sBard \"Bard\" 1505 string sBattlemage \"Battlemage\" 1506 string sCrusader \"Crusader\" 1507 string sCustom \"Custom\" 1508 string sHealer \"Healer\" 1509 string sKnight \"Knight\" 1510 string sMage \"Mage\" 1511 string sMonk \"Monk\" 1512 string sNightblade \"Nightblade\" 1513 string sPilgrim \"Pilgrim\" 1514 string sRogue \"Rogue\" 1515 string sScout \"Scout\" 1516 string sSorceror \"Sorceror\" 1517 string sSpellsword \"Spellsword\" 1518 string sThief \"Thief\" 1519 string sWarrior \"Warrior\" 1520 string sWitchhunter \"Witchhunter\"","title":"Game Settings (GMSTs)"},{"location":"references/justify-text/","text":"Justify Text \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.justifyText.* namespace. For example, tes3.justifyText.left has a value of left . ID Justify Text left Left right Right center Center","title":"Justify Text"},{"location":"references/justify-text/#justify-text","text":"Tip These values are available in Lua by their identifier in the tes3.justifyText.* namespace. For example, tes3.justifyText.left has a value of left . ID Justify Text left Left right Right center Center","title":"Justify Text"},{"location":"references/key-transitions/","text":"Key Transitions \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.keyTransition.* namespace. For example, tes3.keyTransition.down has a value of 2 . ID Key Transition 0 Test 1 Up 2 Down 3 Toggled","title":"Key Transitions"},{"location":"references/key-transitions/#key-transitions","text":"Tip These values are available in Lua by their identifier in the tes3.keyTransition.* namespace. For example, tes3.keyTransition.down has a value of 2 . ID Key Transition 0 Test 1 Up 2 Down 3 Toggled","title":"Key Transitions"},{"location":"references/keybinds/","text":"Keybinds \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.keybind.* namespace. For example, tes3.keybind.nextWeapon has a value of 13 . ID Type 0 Forward 1 Back 2 Slide Left 3 Slide Right 4 Use 5 Activate 6 Ready Item 7 Ready Magic 8 Crouch/Sneak 9 Run 10 Always Run 11 Auto Run 12 Jump 13 Next Weapon 14 Prev Weapon 15 Next Spell 16 Prev Spell 17 Toggle POV 18 Menu Mode 19 Journal 20 Rest 21 Quick Menu 22 Quick 1 23 Quick 2 24 Quick 3 25 Quick 4 26 Quick 5 27 Quick 6 28 Quick 7 29 Quick 8 30 Quick 9 31 Quick 10 32 Quick Save 33 Quick Load 34 Escape 35 Open Console 36 Take Screenshot 37 Ready Magic MCP","title":"Keybinds"},{"location":"references/keybinds/#keybinds","text":"Tip These values are available in Lua by their identifier in the tes3.keybind.* namespace. For example, tes3.keybind.nextWeapon has a value of 13 . ID Type 0 Forward 1 Back 2 Slide Left 3 Slide Right 4 Use 5 Activate 6 Ready Item 7 Ready Magic 8 Crouch/Sneak 9 Run 10 Always Run 11 Auto Run 12 Jump 13 Next Weapon 14 Prev Weapon 15 Next Spell 16 Prev Spell 17 Toggle POV 18 Menu Mode 19 Journal 20 Rest 21 Quick Menu 22 Quick 1 23 Quick 2 24 Quick 3 25 Quick 4 26 Quick 5 27 Quick 6 28 Quick 7 29 Quick 8 30 Quick 9 31 Quick 10 32 Quick Save 33 Quick Load 34 Escape 35 Open Console 36 Take Screenshot 37 Ready Magic MCP","title":"Keybinds"},{"location":"references/language/","text":"Language \u2693\ufe0e ID Language 0 eng 1 fra 2 deu 3 rus 4 pol","title":"Language"},{"location":"references/language/#language","text":"ID Language 0 eng 1 fra 2 deu 3 rus 4 pol","title":"Language"},{"location":"references/magic-effect-flags/","text":"Magic Effect Flags \u2693\ufe0e Tip These values are available in Lua with their field access. Instead of manually setting the flags. For example use .targetsSkills . See the Magic Effect type page for more information. Value Meaning 1 Targets skill. 2 Targets attribute. 4 No duration. 8 No magnitude. 16 Harmful. 32 Continuous VFX. 64 Cast self. 128 Cast touch. 256 Cast target. 512 Valid for spellmaking. 1024 Valid for enchanting. 2048 Negative lighting. 4096 Applied once. 8192 Stealth. 16384 Non-recastable. 32768 Illegal daedra. 65536 Unreflectable. 131072 Caster linked.","title":"Magic Effect Flags"},{"location":"references/magic-effect-flags/#magic-effect-flags","text":"Tip These values are available in Lua with their field access. Instead of manually setting the flags. For example use .targetsSkills . See the Magic Effect type page for more information. Value Meaning 1 Targets skill. 2 Targets attribute. 4 No duration. 8 No magnitude. 16 Harmful. 32 Continuous VFX. 64 Cast self. 128 Cast touch. 256 Cast target. 512 Valid for spellmaking. 1024 Valid for enchanting. 2048 Negative lighting. 4096 Applied once. 8192 Stealth. 16384 Non-recastable. 32768 Illegal daedra. 65536 Unreflectable. 131072 Caster linked.","title":"Magic Effect Flags"},{"location":"references/magic-effects/","text":"Magic Effects \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.effect.* namespace. For example, tes3.effect.slowFall has a value of 11 . Note Custom effects can be added, expanding this list. See the Magicka Expanded article on Claiming a Spell Effect ID for more information. ID Effect 0 Water Breathing 1 Swift Swim 2 Water Walking 3 Shield 4 Fire Shield 5 Lightning Shield 6 Frost Shield 7 Burden 8 Feather 9 Jump 10 Levitate 11 Slow Fall 12 Lock 13 Open 14 Fire Damage 15 Shock Damage 16 Frost Damage 17 Drain Attribute 18 Drain Health 19 Drain Magicka 20 Drain Fatigue 21 Drain Skill 22 Damage Attribute 23 Damage Health 24 Damage Magicka 25 Damage Fatigue 26 Damage Skill 27 Poison 28 Weakness to Fire 29 Weakness to Frost 30 Weakness to Shock 31 Weakness to Magicka 32 Weakness to Common Disease 33 Weakness to Blight Disease 34 Weakness to Corprus Disease 35 Weakness to Poison 36 Weakness to Normal Weapons 37 Disintegrate Weapon 38 Disintegrate Armor 39 Invisibility 40 Chameleon 41 Light 42 Sanctuary 43 NightEye 44 Charm 45 Paralyze 46 Silence 47 Blind 48 Sound 49 Calm Humanoid 50 Calm Creature 51 Frenzy Humanoid 52 Frenzy Creature 53 Demoralize Humanoid 54 Demoralize Creature 55 Rally Humanoid 56 Rally Creature 57 Dispel 58 Soultrap 59 Telekinesis 60 Mark 61 Recall 62 Divine Intervention 63 Almsivi Intervention 64 Detect Animal 65 Detect Enchantment 66 Detect Key 67 Spell Absorption 68 Reflect 69 Cure Common Disease 70 Cure Blight Disease 71 Cure Corprus Disease 72 Cure Poison 73 Cure Paralyzation 74 Restore Attribute 75 Restore Health 76 Restore Magicka 77 Restore Fatigue 78 Restore Skill 79 Fortify Attribute 80 Fortify Health 81 Fortify Magicka 82 Fortify Fatigue 83 Fortify Skill 84 Fortify MaximumMagicka 85 Absorb Attribute 86 Absorb Health 87 Absorb Magicka 88 Absorb Fatigue 89 Absorb Skill 90 Resist Fire 91 Resist Frost 92 Resist Shock 93 Resist Magicka 94 Resist Common Disease 95 Resist Blight Disease 96 Resist Corprus Disease 97 Resist Poison 98 Resist Normal Weapons 99 Resist Paralysis 100 Remove Curse 101 Turn Undead 102 Summon Scamp 103 Summon Clannfear 104 Summon Daedroth 105 Summon Dremora 106 Summon AncestralGhost 107 Summon SkeletalMinion 108 Summon Bonewalker 109 Summon GreaterBonewalker 110 Summon Bonelord 111 Summon WingedTwilight 112 Summon Hunger 113 Summon GoldenSaint 114 Summon FlameAtronach 115 Summon FrostAtronach 116 Summon StormAtronach 117 Fortify Attack 118 Command Creature 119 Command Humanoid 120 Bound Dagger 121 Bound Longsword 122 Bound Mace 123 Bound BattleAxe 124 Bound Spear 125 Bound Longbow 126 EXTRASPELL 127 Bound Cuirass 128 Bound Helm 129 Bound Boots 130 Bound Shield 131 Bound Gloves 132 Corprus 133 Vampirism 134 Summon Centurion Sphere 135 Sun Damage 136 Stunted Magicka 137 Summon Fabricant 138 Call Wolf 139 Call Bear 140 Summon Bonewolf 141 sEffectSummonCreature04 142 sEffectSummonCreature05","title":"Magic Effects"},{"location":"references/magic-effects/#magic-effects","text":"Tip These values are available in Lua by their identifier in the tes3.effect.* namespace. For example, tes3.effect.slowFall has a value of 11 . Note Custom effects can be added, expanding this list. See the Magicka Expanded article on Claiming a Spell Effect ID for more information. ID Effect 0 Water Breathing 1 Swift Swim 2 Water Walking 3 Shield 4 Fire Shield 5 Lightning Shield 6 Frost Shield 7 Burden 8 Feather 9 Jump 10 Levitate 11 Slow Fall 12 Lock 13 Open 14 Fire Damage 15 Shock Damage 16 Frost Damage 17 Drain Attribute 18 Drain Health 19 Drain Magicka 20 Drain Fatigue 21 Drain Skill 22 Damage Attribute 23 Damage Health 24 Damage Magicka 25 Damage Fatigue 26 Damage Skill 27 Poison 28 Weakness to Fire 29 Weakness to Frost 30 Weakness to Shock 31 Weakness to Magicka 32 Weakness to Common Disease 33 Weakness to Blight Disease 34 Weakness to Corprus Disease 35 Weakness to Poison 36 Weakness to Normal Weapons 37 Disintegrate Weapon 38 Disintegrate Armor 39 Invisibility 40 Chameleon 41 Light 42 Sanctuary 43 NightEye 44 Charm 45 Paralyze 46 Silence 47 Blind 48 Sound 49 Calm Humanoid 50 Calm Creature 51 Frenzy Humanoid 52 Frenzy Creature 53 Demoralize Humanoid 54 Demoralize Creature 55 Rally Humanoid 56 Rally Creature 57 Dispel 58 Soultrap 59 Telekinesis 60 Mark 61 Recall 62 Divine Intervention 63 Almsivi Intervention 64 Detect Animal 65 Detect Enchantment 66 Detect Key 67 Spell Absorption 68 Reflect 69 Cure Common Disease 70 Cure Blight Disease 71 Cure Corprus Disease 72 Cure Poison 73 Cure Paralyzation 74 Restore Attribute 75 Restore Health 76 Restore Magicka 77 Restore Fatigue 78 Restore Skill 79 Fortify Attribute 80 Fortify Health 81 Fortify Magicka 82 Fortify Fatigue 83 Fortify Skill 84 Fortify MaximumMagicka 85 Absorb Attribute 86 Absorb Health 87 Absorb Magicka 88 Absorb Fatigue 89 Absorb Skill 90 Resist Fire 91 Resist Frost 92 Resist Shock 93 Resist Magicka 94 Resist Common Disease 95 Resist Blight Disease 96 Resist Corprus Disease 97 Resist Poison 98 Resist Normal Weapons 99 Resist Paralysis 100 Remove Curse 101 Turn Undead 102 Summon Scamp 103 Summon Clannfear 104 Summon Daedroth 105 Summon Dremora 106 Summon AncestralGhost 107 Summon SkeletalMinion 108 Summon Bonewalker 109 Summon GreaterBonewalker 110 Summon Bonelord 111 Summon WingedTwilight 112 Summon Hunger 113 Summon GoldenSaint 114 Summon FlameAtronach 115 Summon FrostAtronach 116 Summon StormAtronach 117 Fortify Attack 118 Command Creature 119 Command Humanoid 120 Bound Dagger 121 Bound Longsword 122 Bound Mace 123 Bound BattleAxe 124 Bound Spear 125 Bound Longbow 126 EXTRASPELL 127 Bound Cuirass 128 Bound Helm 129 Bound Boots 130 Bound Shield 131 Bound Gloves 132 Corprus 133 Vampirism 134 Summon Centurion Sphere 135 Sun Damage 136 Stunted Magicka 137 Summon Fabricant 138 Call Wolf 139 Call Bear 140 Summon Bonewolf 141 sEffectSummonCreature04 142 sEffectSummonCreature05","title":"Magic Effects"},{"location":"references/magic-schools/","text":"Magic Schools \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.magicSchool.* namespace. For example, tes3.magicSchool.illusion has a value of 3 . ID School 0 Alteration 1 Conjuration 2 Destruction 3 Illusion 4 Mysticism 5 Restoration","title":"Magic Schools"},{"location":"references/magic-schools/#magic-schools","text":"Tip These values are available in Lua by their identifier in the tes3.magicSchool.* namespace. For example, tes3.magicSchool.illusion has a value of 3 . ID School 0 Alteration 1 Conjuration 2 Destruction 3 Illusion 4 Mysticism 5 Restoration","title":"Magic Schools"},{"location":"references/magic-source-types/","text":"Magic Source Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.magicSourceType.* namespace. For example, tes3.magicSourceType.alchemy has a value of 3 . ID Magic Source Type 1 Spell 2 Enchantment 3 Alchemy","title":"Magic Source Types"},{"location":"references/magic-source-types/#magic-source-types","text":"Tip These values are available in Lua by their identifier in the tes3.magicSourceType.* namespace. For example, tes3.magicSourceType.alchemy has a value of 3 . ID Magic Source Type 1 Spell 2 Enchantment 3 Alchemy","title":"Magic Source Types"},{"location":"references/merchant-service-types/","text":"Merchant Service Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.merchantService.* namespace. For example, tes3.merchantService.spells has a value of 0x800 . ID Merchant Service Type 0x800 Spells 0x4000 Training 0x8000 Spellmaking 0x10000 Enchanting 0x20000 Repair","title":"Merchant Service Types"},{"location":"references/merchant-service-types/#merchant-service-types","text":"Tip These values are available in Lua by their identifier in the tes3.merchantService.* namespace. For example, tes3.merchantService.spells has a value of 0x800 . ID Merchant Service Type 0x800 Spells 0x4000 Training 0x8000 Spellmaking 0x10000 Enchanting 0x20000 Repair","title":"Merchant Service Types"},{"location":"references/music-situations/","text":"Music Situations \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.musicSituation.* namespace. For example, tes3.musicSituation.uninterruptible has a value of 2 . ID Music Situation 0 Explore 1 Combat 2 Uninterruptible","title":"Music Situations"},{"location":"references/music-situations/#music-situations","text":"Tip These values are available in Lua by their identifier in the tes3.musicSituation.* namespace. For example, tes3.musicSituation.uninterruptible has a value of 2 . ID Music Situation 0 Explore 1 Combat 2 Uninterruptible","title":"Music Situations"},{"location":"references/niTypes/","text":"niTypes \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.niType.* namespace. For example, tes3.niType.NiAVObject has a value of 0x7DE7CC . ID niType 0x7DD794 AvoidNode 0x7D1D48 BrickNiExtraData 0x7C8AF8 BSMirroredNode 0x7DECC0 NiAccumulator 0x7DDF48 NiAlphaAccumulator 0x7DF0A0 NiAlphaController 0x7DDF7C NiAlphaProperty 0x7DDF8C NiAmbientLight 0x7DE064 NiAutoNormalParticles 0x7DE044 NiAutoNormalParticlesData 0x7DE7CC NiAVObject 0x7DE0A0 NiBillboardNode 0x7DE108 NiBltSource 0x7DE91C NiBSAnimationManager 0x7DE98C NiBSAnimationNode 0x7DF978 NiBSPArrayController 0x7DED3C NiBSParticleNode 0x7DE13C NiBSPNode 0x7DDEF8 NiCamera 0x7DDF20 NiClusterAccumulator 0x7DE150 NiCollisionSwitch 0x7DF100 NiColorData 0x7DE16C NiDirectionalLight 0x7DE194 NiDitherProperty 0x7DD89C NiDX8Renderer 0x7DEA08 NiDynamicEffect 0x7DDE68 NiExtraData 0x7DF138 NiFlipController 0x7DF9B8 NiFloatController 0x7DF084 NiFloatData 0x7DE1E8 NiFltAnimationNode 0x7DE1F0 NiFogProperty 0x7DEA2C NiGeometry 0x7DE93C NiGeometryData 0x7DF180 NiGeomMorpherController 0x7DF1B0 NiGravity 0x7DF000 NiKeyframeController 0x7DEFC8 NiKeyframeData 0x7DF058 NiKeyframeManager 0x7DECF8 NiLight 0x7DF1F8 NiLightColorController 0x7DE228 NiLines 0x7DE20C NiLinesData 0x7DE270 NiLODNode 0x7DF244 NiLookAtController 0x7DF278 NiMaterialColorController 0x7DE288 NiMaterialProperty 0x7DF148 NiMorphData 0x7DFA08 NiMorpherController 0x7DDEB8 NiNode 0x7DE734 NiObject 0x7DE76C NiObjectNET 0x7DE0C4 NiPalette 0x7DF2AC NiParticleBomb 0x7DFA8C NiParticleCollider 0x7DF2DC NiParticleColorModifier 0x7DF304 NiParticleGrowFade 0x7DFA58 NiParticleModifier 0x7DF340 NiParticleRotation 0x7DE004 NiParticles 0x7DDFEC NiParticlesData 0x7DEF64 NiParticleSystemController 0x7DF394 NiPathController 0x7DE0EC NiPixelData 0x7DF3CC NiPlanarCollider 0x7DE2A8 NiPointLight 0x7DF1D4 NiPosData 0x7DE720 NiProperty 0x7DEE14 NiRenderedCubeMap 0x7DE2BC NiRenderedTexture 0x7DEA9C NiRenderer 0x7DE2F0 NiRendererSpecificProperty 0x7DF3E0 NiRollController 0x7DE324 NiRotatingParticles 0x7DE308 NiRotatingParticlesData 0x7DDEE0 NiScreenPolygon 0x7DF3F8 NiSequenceStreamHelper 0x7DE364 NiShadeProperty 0x7DDFBC NiSkinData 0x7DDFD0 NiSkinInstance 0x7DDE84 NiSkinPartition 0x7DE388 NiSortAdjustNode 0x7DE3C0 NiSourceTexture 0x7DE3DC NiSpecularProperty 0x7DF420 NiSphericalCollider 0x7DE400 NiSpotLight 0x7DE418 NiStencilProperty 0x7DE42C NiStringExtraData 0x7DE1AC NiSwitchNode 0x7DF038 NiTextKeyExtraData 0x7DE7E0 NiTexture 0x7DE484 NiTextureEffect 0x7DE440 NiTexturingProperty 0x7DEDB4 NiTimeController 0x7DE94C NiTriBasedGeom 0x7DEE7C NiTriBasedGeomData 0x7DE550 NiTriShape 0x7DE490 NiTriShapeData 0x7DE568 NiTriShapeDynamicData 0x7DE5A8 NiTriStrips 0x7DE588 NiTriStripsData 0x7DF4A4 NiUVController 0x7DF47C NiUVData 0x7DE5D0 NiVertexColorProperty 0x7DE5E8 NiVertWeightsExtraData 0x7DF4D8 NiVisController 0x7DF4C0 NiVisData 0x7DE604 NiWireframeProperty 0x7DE630 NiZBufferProperty 0x7C7438 OffscreenSceneGraph_MasterPropertyAccumulator 0x7DD7AC RootCollisionNode 0x7CE280 TES3ObjectExtraData","title":"niTypes"},{"location":"references/niTypes/#nitypes","text":"Tip These values are available in Lua by their identifier in the tes3.niType.* namespace. For example, tes3.niType.NiAVObject has a value of 0x7DE7CC . ID niType 0x7DD794 AvoidNode 0x7D1D48 BrickNiExtraData 0x7C8AF8 BSMirroredNode 0x7DECC0 NiAccumulator 0x7DDF48 NiAlphaAccumulator 0x7DF0A0 NiAlphaController 0x7DDF7C NiAlphaProperty 0x7DDF8C NiAmbientLight 0x7DE064 NiAutoNormalParticles 0x7DE044 NiAutoNormalParticlesData 0x7DE7CC NiAVObject 0x7DE0A0 NiBillboardNode 0x7DE108 NiBltSource 0x7DE91C NiBSAnimationManager 0x7DE98C NiBSAnimationNode 0x7DF978 NiBSPArrayController 0x7DED3C NiBSParticleNode 0x7DE13C NiBSPNode 0x7DDEF8 NiCamera 0x7DDF20 NiClusterAccumulator 0x7DE150 NiCollisionSwitch 0x7DF100 NiColorData 0x7DE16C NiDirectionalLight 0x7DE194 NiDitherProperty 0x7DD89C NiDX8Renderer 0x7DEA08 NiDynamicEffect 0x7DDE68 NiExtraData 0x7DF138 NiFlipController 0x7DF9B8 NiFloatController 0x7DF084 NiFloatData 0x7DE1E8 NiFltAnimationNode 0x7DE1F0 NiFogProperty 0x7DEA2C NiGeometry 0x7DE93C NiGeometryData 0x7DF180 NiGeomMorpherController 0x7DF1B0 NiGravity 0x7DF000 NiKeyframeController 0x7DEFC8 NiKeyframeData 0x7DF058 NiKeyframeManager 0x7DECF8 NiLight 0x7DF1F8 NiLightColorController 0x7DE228 NiLines 0x7DE20C NiLinesData 0x7DE270 NiLODNode 0x7DF244 NiLookAtController 0x7DF278 NiMaterialColorController 0x7DE288 NiMaterialProperty 0x7DF148 NiMorphData 0x7DFA08 NiMorpherController 0x7DDEB8 NiNode 0x7DE734 NiObject 0x7DE76C NiObjectNET 0x7DE0C4 NiPalette 0x7DF2AC NiParticleBomb 0x7DFA8C NiParticleCollider 0x7DF2DC NiParticleColorModifier 0x7DF304 NiParticleGrowFade 0x7DFA58 NiParticleModifier 0x7DF340 NiParticleRotation 0x7DE004 NiParticles 0x7DDFEC NiParticlesData 0x7DEF64 NiParticleSystemController 0x7DF394 NiPathController 0x7DE0EC NiPixelData 0x7DF3CC NiPlanarCollider 0x7DE2A8 NiPointLight 0x7DF1D4 NiPosData 0x7DE720 NiProperty 0x7DEE14 NiRenderedCubeMap 0x7DE2BC NiRenderedTexture 0x7DEA9C NiRenderer 0x7DE2F0 NiRendererSpecificProperty 0x7DF3E0 NiRollController 0x7DE324 NiRotatingParticles 0x7DE308 NiRotatingParticlesData 0x7DDEE0 NiScreenPolygon 0x7DF3F8 NiSequenceStreamHelper 0x7DE364 NiShadeProperty 0x7DDFBC NiSkinData 0x7DDFD0 NiSkinInstance 0x7DDE84 NiSkinPartition 0x7DE388 NiSortAdjustNode 0x7DE3C0 NiSourceTexture 0x7DE3DC NiSpecularProperty 0x7DF420 NiSphericalCollider 0x7DE400 NiSpotLight 0x7DE418 NiStencilProperty 0x7DE42C NiStringExtraData 0x7DE1AC NiSwitchNode 0x7DF038 NiTextKeyExtraData 0x7DE7E0 NiTexture 0x7DE484 NiTextureEffect 0x7DE440 NiTexturingProperty 0x7DEDB4 NiTimeController 0x7DE94C NiTriBasedGeom 0x7DEE7C NiTriBasedGeomData 0x7DE550 NiTriShape 0x7DE490 NiTriShapeData 0x7DE568 NiTriShapeDynamicData 0x7DE5A8 NiTriStrips 0x7DE588 NiTriStripsData 0x7DF4A4 NiUVController 0x7DF47C NiUVData 0x7DE5D0 NiVertexColorProperty 0x7DE5E8 NiVertWeightsExtraData 0x7DF4D8 NiVisController 0x7DF4C0 NiVisData 0x7DE604 NiWireframeProperty 0x7DE630 NiZBufferProperty 0x7C7438 OffscreenSceneGraph_MasterPropertyAccumulator 0x7DD7AC RootCollisionNode 0x7CE280 TES3ObjectExtraData","title":"niTypes"},{"location":"references/object-types/","text":"Object Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.objectType.* namespace. For example, tes3.objectType.creature has a value of 1095062083 . Note The AMMO object type is for arrows and bolts only, even though these usually show up in the weapons tab of the Construction Set. Thrown weapons do not have this type. Value Code Meaning 1230259009 ACTI Activator 1212369985 ACTI Alchemy 1330466113 AMMO Ammunition 1095782465 ACTI Apparatus 1330467393 ARMO Armor 1263488834 BOOK Book 1414483011 CLOT Clothing 1414418243 CONT Container 1095062083 CREA Creature 1380929348 DOOR Door 1380404809 INGR Ingredient 1129727308 LEVC Levelled Creature 1230390604 LEVI Levelled Item 1212631372 LIGH Light 1262702412 LOCK Lockpick 1129531725 MISC Misc Item 1598246990 NPC_ NPC 1112494672 PROB Probe 1095779666 REPA Repair Item 1414546259 SCPT Script 1195658835 SNDG Sound Generator 1279610963 SPEL Spell 1413567571 STAT Static 1346454871 WEAP Weapon","title":"Object Types"},{"location":"references/object-types/#object-types","text":"Tip These values are available in Lua by their identifier in the tes3.objectType.* namespace. For example, tes3.objectType.creature has a value of 1095062083 . Note The AMMO object type is for arrows and bolts only, even though these usually show up in the weapons tab of the Construction Set. Thrown weapons do not have this type. Value Code Meaning 1230259009 ACTI Activator 1212369985 ACTI Alchemy 1330466113 AMMO Ammunition 1095782465 ACTI Apparatus 1330467393 ARMO Armor 1263488834 BOOK Book 1414483011 CLOT Clothing 1414418243 CONT Container 1095062083 CREA Creature 1380929348 DOOR Door 1380404809 INGR Ingredient 1129727308 LEVC Levelled Creature 1230390604 LEVI Levelled Item 1212631372 LIGH Light 1262702412 LOCK Lockpick 1129531725 MISC Misc Item 1598246990 NPC_ NPC 1112494672 PROB Probe 1095779666 REPA Repair Item 1414546259 SCPT Script 1195658835 SNDG Sound Generator 1279610963 SPEL Spell 1413567571 STAT Static 1346454871 WEAP Weapon","title":"Object Types"},{"location":"references/physical-attack-types/","text":"Physical Attack Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.physicalAttackType.* namespace. For example, tes3.physicalAttackType.thrust has a value of 3 . ID Physical Attack Type 0 None 1 Slash 2 Chop 3 Thrust 4 Projectile 5 Creature1 6 Creature2 7 Creature3","title":"Physical Attack Types"},{"location":"references/physical-attack-types/#physical-attack-types","text":"Tip These values are available in Lua by their identifier in the tes3.physicalAttackType.* namespace. For example, tes3.physicalAttackType.thrust has a value of 3 . ID Physical Attack Type 0 None 1 Slash 2 Chop 3 Thrust 4 Projectile 5 Creature1 6 Creature2 7 Creature3","title":"Physical Attack Types"},{"location":"references/quick-key-types/","text":"Quick Key Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.quickKeyType.* namespace. For example, tes3.quickKeyType.none has a value of 0 . ID Quick Key Type 0 None 1 Item 2 Magic","title":"Quick Key Types"},{"location":"references/quick-key-types/#quick-key-types","text":"Tip These values are available in Lua by their identifier in the tes3.quickKeyType.* namespace. For example, tes3.quickKeyType.none has a value of 0 . ID Quick Key Type 0 None 1 Item 2 Magic","title":"Quick Key Types"},{"location":"references/scan-codes/","text":"Scan Codes \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.scanCode.* namespace. For example, tes3.scanCode.exclamationMark has a value of 2 . ID Scan Code 1 esc 1 escape 2 1 2 one 2 ! 2 exclamationMark 2 bang 3 2 3 two 3 @ 3 at 4 3 4 three 4 # 4 hash 5 4 5 four 5 $ 5 dollarSign 6 5 6 five 6 percent 7 6 7 six 7 ^ 7 hat 7 caret 8 7 8 seven 8 & 8 ampersand 9 8 9 eight 9 * 9 asterisk 10 9 10 nine 10 ( 10 openBracket 11 0 11 zero 11 ) 11 closeBracket 12 - 12 dash 12 _ 12 underscore 13 = 13 equals 13 + 13 plus 14 backspace 15 tab 16 q 17 w 18 e 19 r 20 t 21 y 22 u 23 i 24 o 25 p 26 ] 26 openSquareBracket 26 { 26 openCurlyBracket 27 ] 27 closeSquareBracket 27 } 27 closeCurlyBracket 28 enter 28 return 29 lCtrl 29 leftCtrl 157 rCtrl 157 rightCtrl 30 a 31 s 32 d 33 f 34 g 35 h 36 j 37 k 38 l 39 ; 39 semicolon 39 : 39 colon 40 ' 40 singleQuote 40 doubleQuote 40 quote 40 quotationMark 40 quoteMark 41 ` 41 backTick 41 ~ 41 tilde 42 lShift 42 leftShift 43 backslash 43 backSlash 43 | 43 pipe 44 z 45 x 46 c 47 v 48 b 49 n 50 m 51 , 51 comma 51 < 51 lessThan 51 openPointyBracket 52 . 52 period 52 fullStop 52 > 52 greaterThan 52 closePointyBracket 53 / 53 forwardSlash 53 ? 53 questionMark 54 rShift 54 rightShift 55 multiply 56 lAlt 56 leftAlt 184 rAlt 184 rightAlt 57 space 58 caps 58 capslock 59 F1 60 F2 61 F3 62 F4 63 F5 64 F6 65 F7 66 F8 67 F9 68 F10 87 F11 88 F12 69 numLock 70 scrollLock 71 numpad7 72 numpad8 73 numpad9 74 subtract 75 numpad4 76 numpad5 77 numpad6 78 add 79 numpad1 80 numpad2 81 numpad3 82 numpad0 83 decimal 181 divide 200 keyUp 203 keyLeft 208 keyDown 205 keyRight 210 insert 211 delete 156 numpadEnter 199 home 207 end 201 pageUp 209 pageDown","title":"Scan Codes"},{"location":"references/scan-codes/#scan-codes","text":"Tip These values are available in Lua by their identifier in the tes3.scanCode.* namespace. For example, tes3.scanCode.exclamationMark has a value of 2 . ID Scan Code 1 esc 1 escape 2 1 2 one 2 ! 2 exclamationMark 2 bang 3 2 3 two 3 @ 3 at 4 3 4 three 4 # 4 hash 5 4 5 four 5 $ 5 dollarSign 6 5 6 five 6 percent 7 6 7 six 7 ^ 7 hat 7 caret 8 7 8 seven 8 & 8 ampersand 9 8 9 eight 9 * 9 asterisk 10 9 10 nine 10 ( 10 openBracket 11 0 11 zero 11 ) 11 closeBracket 12 - 12 dash 12 _ 12 underscore 13 = 13 equals 13 + 13 plus 14 backspace 15 tab 16 q 17 w 18 e 19 r 20 t 21 y 22 u 23 i 24 o 25 p 26 ] 26 openSquareBracket 26 { 26 openCurlyBracket 27 ] 27 closeSquareBracket 27 } 27 closeCurlyBracket 28 enter 28 return 29 lCtrl 29 leftCtrl 157 rCtrl 157 rightCtrl 30 a 31 s 32 d 33 f 34 g 35 h 36 j 37 k 38 l 39 ; 39 semicolon 39 : 39 colon 40 ' 40 singleQuote 40 doubleQuote 40 quote 40 quotationMark 40 quoteMark 41 ` 41 backTick 41 ~ 41 tilde 42 lShift 42 leftShift 43 backslash 43 backSlash 43 | 43 pipe 44 z 45 x 46 c 47 v 48 b 49 n 50 m 51 , 51 comma 51 < 51 lessThan 51 openPointyBracket 52 . 52 period 52 fullStop 52 > 52 greaterThan 52 closePointyBracket 53 / 53 forwardSlash 53 ? 53 questionMark 54 rShift 54 rightShift 55 multiply 56 lAlt 56 leftAlt 184 rAlt 184 rightAlt 57 space 58 caps 58 capslock 59 F1 60 F2 61 F3 62 F4 63 F5 64 F6 65 F7 66 F8 67 F9 68 F10 87 F11 88 F12 69 numLock 70 scrollLock 71 numpad7 72 numpad8 73 numpad9 74 subtract 75 numpad4 76 numpad5 77 numpad6 78 add 79 numpad1 80 numpad2 81 numpad3 82 numpad0 83 decimal 181 divide 200 keyUp 203 keyLeft 208 keyDown 205 keyRight 210 insert 211 delete 156 numpadEnter 199 home 207 end 201 pageUp 209 pageDown","title":"Scan Codes"},{"location":"references/skill-raise-sources/","text":"Skill Raise Sources \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.skillRaiseSource.* namespace. For example, tes3.skillRaiseSource.book has a value of book . ID Skill Raise Source book Book progress Progress training Training","title":"Skill Raise Sources"},{"location":"references/skill-raise-sources/#skill-raise-sources","text":"Tip These values are available in Lua by their identifier in the tes3.skillRaiseSource.* namespace. For example, tes3.skillRaiseSource.book has a value of book . ID Skill Raise Source book Book progress Progress training Training","title":"Skill Raise Sources"},{"location":"references/skill-types/","text":"Skill Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.skillType.* namespace. For example, tes3.skillType.minor has a value of 1 . ID Type 0 Major 1 Minor 2 Miscellaneous 2 Misc","title":"Skill Types"},{"location":"references/skill-types/#skill-types","text":"Tip These values are available in Lua by their identifier in the tes3.skillType.* namespace. For example, tes3.skillType.minor has a value of 1 . ID Type 0 Major 1 Minor 2 Miscellaneous 2 Misc","title":"Skill Types"},{"location":"references/skills/","text":"Skills \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.skill.* namespace. For example, tes3.skill.heavyArmor has a value of 3 . ID Skill 0 Block 1 Armorer 2 Medium Armor 3 Heavy Armor 4 Blunt Weapon 5 Long Blade 6 Axe 7 Spear 8 Athletics 9 Enchant 10 Destruction 11 Alteration 12 Illusion 13 Conjuration 14 Mysticism 15 Restoration 16 Alchemy 17 Unarmored 18 Security 19 Sneak 20 Acrobatics 21 Light Armor 22 Short Blade 23 Marksman 24 Mercantile 25 Speechcraft 26 Hand to Hand","title":"Skills"},{"location":"references/skills/#skills","text":"Tip These values are available in Lua by their identifier in the tes3.skill.* namespace. For example, tes3.skill.heavyArmor has a value of 3 . ID Skill 0 Block 1 Armorer 2 Medium Armor 3 Heavy Armor 4 Blunt Weapon 5 Long Blade 6 Axe 7 Spear 8 Athletics 9 Enchant 10 Destruction 11 Alteration 12 Illusion 13 Conjuration 14 Mysticism 15 Restoration 16 Alchemy 17 Unarmored 18 Security 19 Sneak 20 Acrobatics 21 Light Armor 22 Short Blade 23 Marksman 24 Mercantile 25 Speechcraft 26 Hand to Hand","title":"Skills"},{"location":"references/sound-generator-types/","text":"Sound Generator Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.soundGenType.* namespace. For example, tes3.soundGenType.roar has a value of 1 . ID Sound Generator Type 0 Left Foot 1 Right Foot 2 Swim Left 3 Swim Right 4 Moan 5 Roar 6 Scream 7 Land","title":"Sound Generator Types"},{"location":"references/sound-generator-types/#sound-generator-types","text":"Tip These values are available in Lua by their identifier in the tes3.soundGenType.* namespace. For example, tes3.soundGenType.roar has a value of 1 . ID Sound Generator Type 0 Left Foot 1 Right Foot 2 Swim Left 3 Swim Right 4 Moan 5 Roar 6 Scream 7 Land","title":"Sound Generator Types"},{"location":"references/sound-mix-types/","text":"Sound Mix Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.soundMix.* namespace. For example, tes3.soundMix.footsteps has a value of 3 . ID Sound Mix Type 0 Master 1 Voice 2 Effects 3 Footsteps 4 Music","title":"Sound Mix Types"},{"location":"references/sound-mix-types/#sound-mix-types","text":"Tip These values are available in Lua by their identifier in the tes3.soundMix.* namespace. For example, tes3.soundMix.footsteps has a value of 3 . ID Sound Mix Type 0 Master 1 Voice 2 Effects 3 Footsteps 4 Music","title":"Sound Mix Types"},{"location":"references/specialization-types/","text":"Specialization Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.specialization.* namespace. For example, tes3.specialization.magic has a value of 1 . ID Specialization Type -1 Invalid 0 Combat 1 Magic 2 Stealth","title":"Specialization Types"},{"location":"references/specialization-types/#specialization-types","text":"Tip These values are available in Lua by their identifier in the tes3.specialization.* namespace. For example, tes3.specialization.magic has a value of 1 . ID Specialization Type -1 Invalid 0 Combat 1 Magic 2 Stealth","title":"Specialization Types"},{"location":"references/spell-origins/","text":"Spell Origins \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.spellOrigin.* namespace. For example, tes3.spellOrigin.module has a value of 1 . ID Spell Origin 1 Module 2 Spellmaker","title":"Spell Origins"},{"location":"references/spell-origins/#spell-origins","text":"Tip These values are available in Lua by their identifier in the tes3.spellOrigin.* namespace. For example, tes3.spellOrigin.module has a value of 1 . ID Spell Origin 1 Module 2 Spellmaker","title":"Spell Origins"},{"location":"references/spell-sources/","text":"Spell Sources \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.spellSource.* namespace. For example, tes3.spellSource.service has a value of service . ID Spell Source service Service script Script","title":"Spell Sources"},{"location":"references/spell-sources/#spell-sources","text":"Tip These values are available in Lua by their identifier in the tes3.spellSource.* namespace. For example, tes3.spellSource.service has a value of service . ID Spell Source service Service script Script","title":"Spell Sources"},{"location":"references/spell-states/","text":"Spell States \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.spellState.* namespace. For example, tes3.spellState.working has a value of 5 . ID Spell State 0 Pre-cast 1 Cast 4 Beginning 5 Working 6 Ending 7 Retired 8 Working, Fortify 9 Ending, Fortify","title":"Spell States"},{"location":"references/spell-states/#spell-states","text":"Tip These values are available in Lua by their identifier in the tes3.spellState.* namespace. For example, tes3.spellState.working has a value of 5 . ID Spell State 0 Pre-cast 1 Cast 4 Beginning 5 Working 6 Ending 7 Retired 8 Working, Fortify 9 Ending, Fortify","title":"Spell States"},{"location":"references/spell-types/","text":"Spell Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.spellType.* namespace. For example, tes3.spellType.curse has a value of 4 . ID Spell Type 0 Spell 1 Ability 2 Blight 3 Disease 4 Curse 5 Power","title":"Spell Types"},{"location":"references/spell-types/#spell-types","text":"Tip These values are available in Lua by their identifier in the tes3.spellType.* namespace. For example, tes3.spellType.curse has a value of 4 . ID Spell Type 0 Spell 1 Ability 2 Blight 3 Disease 4 Curse 5 Power","title":"Spell Types"},{"location":"references/texturing-properties/","text":"Texturing Properties \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.texturingPropertyMap.* namespace. For example, tes3.texturingPropertyMap.decalFirst has a value of 7 . ID Texturing Property 1 Base 2 Dark 3 Detail 4 Gloss 5 Glow 6 Bump 7 Decal, First 7 Decal #1 8 Decal #2 9 Decal #3 10 Decal #4 11 Decal #5 12 Decal #6 13 Decal #7 13 Decal, Last","title":"Texturing Properties"},{"location":"references/texturing-properties/#texturing-properties","text":"Tip These values are available in Lua by their identifier in the tes3.texturingPropertyMap.* namespace. For example, tes3.texturingPropertyMap.decalFirst has a value of 7 . ID Texturing Property 1 Base 2 Dark 3 Detail 4 Gloss 5 Glow 6 Bump 7 Decal, First 7 Decal #1 8 Decal #2 9 Decal #3 10 Decal #4 11 Decal #5 12 Decal #6 13 Decal #7 13 Decal, Last","title":"Texturing Properties"},{"location":"references/ui-properties/","text":"UI Properties \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.uiProperty.* namespace. For example, tes3.uiProperty.stillPressedOutside has a value of 4294934587 . ID UI Property 4294934578 mouseLeave 4294934579 mouseOver 4294934580 mouseDown 4294934581 mouseClick 4294934582 scrollUp 4294934583 scrollDown 4294934584 doubleClick 4294934585 stillIdle 4294934586 stillOver 4294934587 stillPressedOutside 4294934588 stillPressed 4294934589 release 4294934590 keyPress 4294934591 enter 4294934592 leaveMenuMode 4294934593 enterMenuMode 4294934594 focus 4294934595 unfocus 4294934596 update 4294934597 preUpdate 4294934599 destroy","title":"UI Properties"},{"location":"references/ui-properties/#ui-properties","text":"Tip These values are available in Lua by their identifier in the tes3.uiProperty.* namespace. For example, tes3.uiProperty.stillPressedOutside has a value of 4294934587 . ID UI Property 4294934578 mouseLeave 4294934579 mouseOver 4294934580 mouseDown 4294934581 mouseClick 4294934582 scrollUp 4294934583 scrollDown 4294934584 doubleClick 4294934585 stillIdle 4294934586 stillOver 4294934587 stillPressedOutside 4294934588 stillPressed 4294934589 release 4294934590 keyPress 4294934591 enter 4294934592 leaveMenuMode 4294934593 enterMenuMode 4294934594 focus 4294934595 unfocus 4294934596 update 4294934597 preUpdate 4294934599 destroy","title":"UI Properties"},{"location":"references/voiceovers/","text":"Voiceovers \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.voiceover.* namespace. For example, tes3.voiceover.intruder has a value of 2 . ID Voiceover 0 Hello 1 Idle 2 Intruder 3 Thief 4 Hit 5 Attack 6 Flee","title":"Voiceovers"},{"location":"references/voiceovers/#voiceovers","text":"Tip These values are available in Lua by their identifier in the tes3.voiceover.* namespace. For example, tes3.voiceover.intruder has a value of 2 . ID Voiceover 0 Hello 1 Idle 2 Intruder 3 Thief 4 Hit 5 Attack 6 Flee","title":"Voiceovers"},{"location":"references/weapon-types/","text":"Weapon Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.weaponType.* namespace. For example, tes3.weaponType.longBladeTwoClose has a value of 2 . Note MWSE-mwscript's xEquipmentList returns this value as the subtype for weapon objects. These values are increased by one by that function. ID Weapon Type 0 Short Blade One Hand 1 Long Blade One Hand 2 Long Blade Two Close 3 Blunt One Hand 4 Blunt Two Close 5 Blunt Two Wide 6 Spear Two Wide 7 Axe One Hand 8 Axe Two Hand 9 Marksman Bow 10 Marksman Crossbow 11 Marksman Thrown 12 Arrow 13 Bolt","title":"Weapon Types"},{"location":"references/weapon-types/#weapon-types","text":"Tip These values are available in Lua by their identifier in the tes3.weaponType.* namespace. For example, tes3.weaponType.longBladeTwoClose has a value of 2 . Note MWSE-mwscript's xEquipmentList returns this value as the subtype for weapon objects. These values are increased by one by that function. ID Weapon Type 0 Short Blade One Hand 1 Long Blade One Hand 2 Long Blade Two Close 3 Blunt One Hand 4 Blunt Two Close 5 Blunt Two Wide 6 Spear Two Wide 7 Axe One Hand 8 Axe Two Hand 9 Marksman Bow 10 Marksman Crossbow 11 Marksman Thrown 12 Arrow 13 Bolt","title":"Weapon Types"},{"location":"references/weather-types/","text":"Weather Types \u2693\ufe0e Tip These values are available in Lua by their identifier in the tes3.weather.* namespace. For example, tes3.weather.rain has a value of 4 . ID Weather 0 Clear 1 Cloudy 2 Foggy 3 Overcast 4 Rain 5 Thunder 6 Ash 7 Blight 8 Snow 9 Blizzard","title":"Weather Types"},{"location":"references/weather-types/#weather-types","text":"Tip These values are available in Lua by their identifier in the tes3.weather.* namespace. For example, tes3.weather.rain has a value of 4 . ID Weather 0 Clear 1 Cloudy 2 Foggy 3 Overcast 4 Rain 5 Thunder 6 Ash 7 Blight 8 Snow 9 Blizzard","title":"Weather Types"},{"location":"references/mwse-mwscript/actor/","text":"Actor Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xActivate \u2693\ufe0e Parameters: reference target : What the reference will try to activate. Returned: None This function allows the forced activation of one reference onto another. Unlike the vanilla Activate function, this allows variable input and will work even when OnActivate hasn't been triggered in the script. .. note:: Unlike the vanilla activate function, the reference is the actor that will activate something, rather than the object to activate. Force the PC to Activate begin test long targetRef long pcRef ; Don't force pickup if we're not sneaking. if ( GetPCSneaking == 0 ) return endif ; Get a reference to what the player is looking at. setx targetRef to xGetPCTarget if ( targetRef == 0 ) return endif ; Get a reference to the player, and force them to activate what they are looking at. setx pcRef to xGetRef \"player\" pcRef->xActivate targetRef end xAddSpell \u2693\ufe0e Parameters: string objectID : The object ID of the spell to add. Returned: None This is a wrapper for the vanilla AddSpell function that can take variable input. xAITravel \u2693\ufe0e Parameters: float x : The position to travel to on the X axis. float y : The position to travel to on the Y axis. float z : The position to travel to on the Z axis. Returned: None This is a wrapper for the vanilla AITravel function that can take variable input. xDrop \u2693\ufe0e Parameters: string objectID : The object ID of the item to drop. long count : The number of items to drop. Returned: None This is a wrapper for the vanilla Drop function that can take variable input. Note xDrop N+1 items will leave 1 phantom icon plus N real items in the dropping actors inventory. xGetItemCount will not report the 1 phantom icon. However, xRemoveItem will remove the phantom safely. So \"safe\" procedure for xDrop seems to be to follow up with xRemoveItem of the same count. Additionally for non-player actors in menumode, exit and re-entry to menumode is needed to refresh the icons and avoid phantom icon interaction that could result in permanent item doubling or CTD. This also applies to the standard drop function. xEquip \u2693\ufe0e Parameters: string objectID : The object ID of the item to equip. Returned: None This is a wrapper for the vanilla Equip function that can take variable input. xGetAttribute \u2693\ufe0e Parameters: long attributeID : The Attribute ID to get the value of. Returned: float value : Current value of the attribute. Returns the current value of the referenced object's attribute. Note This function only supports the player and NPCs. xGetBaseAttribute \u2693\ufe0e Parameters: long attributeID : The Attribute ID to get the value of. Returned: float value : Base value of the attribute. Returns the base current value of the referenced object's attribute. Note This function only supports the player and NPCs. xGetBaseGold \u2693\ufe0e Parameters: None Returned: long gold : The base amount of bartering gold of the reference. Returns the base amount of barter gold assigned to the NPC (or creature). This is the value that resets automatically each day. xGetBaseSkill \u2693\ufe0e Parameters: long skillID : The Skill ID to get the value of. Returned: float value : Base value of the skill. Returns the base value of the referenced object's skill. Note This function only supports the player and NPCs. xGetClass \u2693\ufe0e Parameters: long attributesMask : A bit mask to apply to the attributes value. long majorMask : A bit mask to apply to the majorSkills value. long minorMask : A bit mask to apply to the minorSkills value. Returned: string classID : The unique string identifier of the class. string name : The name of the class. long playable : 1 if the class can be chosen by the PC, 0 otherwise. long specialization : 0 = Combat, 1 = Magic, 2 = Stealth long attributes : A bitmap of the two primary attributes. The result is obtained by adding the values found in the attributes table below. long majorSkills : A bitmap of the 5 major skills. The result is obtained by adding the values found in the skills table below. long minorSkills : A bitmap of the 5 minor skills. The result is obtained by adding the values found in the skills table below. Returns info about the class of the target NPC/PC, or 0 if the target is not an NPC or the PC. For a custom class created at PC creation, the classID is \"NEWCLASSID_CHARGEN\" and playable is 0 . Attribute and Skill Bitmaps \u2693\ufe0e Value Attribute 1 Strength 2 Intelligence 4 Willpower 8 Agility 16 Speed 32 Endurance 64 Personality 128 Luck Value Skill 1 Block 2 Armorer 4 Medium Armor 8 Heavy Armor 16 Blunt Weapon 32 Long Blade 64 Axe 128 Spear 256 Athletics 512 Enchant 1024 Destruction 2048 Alteration 4096 Illusion 8192 Conjuration 16384 Mysticism 32768 Restoration 65536 Alchemy 131072 Unarmored 262144 Security 524288 Sneak 1048576 Acrobatics 2097152 Light Armor 4194304 Short Blade 8388608 Marksman 16777216 Mercantile 33554432 Speechcraft 67108864 Hand-to-Hand xGetCombat \u2693\ufe0e Parameters: None Returned: reference reference : Reference to the current combat target. Returns a reference to the reference NPC/creature's combat target, or 0 if the reference is not in combat. xGetGold \u2693\ufe0e Parameters: None Returned: long gold : The reference's current barter gold. xGetGold returns the current amount of barter gold possessed by the NPC (or creature). The base gold amount is used if you haven't bartered with the NPC/creature recently. xGetMagic \u2693\ufe0e Parameters: None Returned: long objectType : The Object Type of the equipped magical source. string objectID : The object ID of the spell or enchantment selected. Returns the currently equipped spell or enchanted item. This is specifically the object that appears in the equipped magic slot and includes on-use magical items as well as spells. Note The returned objectType and objectID will always be associated with a Spell or Enchantment object, not the Weapon , Armor , Clothing , or Book that the magic is placed on. xGetMaxFatigue \u2693\ufe0e Parameters: None Returned: float maxFatigue : The reference's maximum fatigue. !!! noteReturns maximum fatigue. This function only supports the player and NPCs. xGetMaxHealth \u2693\ufe0e Parameters: None Returned: float maxHealth : The reference's maximum health. !!! noteReturns maximum health. This function only supports the player and NPCs. xGetMaxMagicka \u2693\ufe0e Parameters: None Returned: float maxMagicka : The reference's maximum magicka. !!! noteReturns maximum magicka. This function only supports the player and NPCs. xGetRace \u2693\ufe0e Parameters: short returnType : The return pattern desired. See below for details. Returned (returnType is 0): string raceID : The object ID of the target's race. Returned (returnType is 1): array arrayID : An array ID containing the values of the race. This function fetches the objectID or complete details about the target's race. Warning The arrays returned by this function when returnType is 1 are volatile. They should not be used for custom storage. Whenever xGetRace is called, the arrays are cleared and refilled with up-to-date information. If returnType is 0 , the response is the race's object ID. Otherwise, the returned array contains the following values: Index Type Contents 0 string Object ID. 1 string Name. 2 array Skill bonuses. 3 array Starting attributes. 4 float Male height. 5 float Female height. 6 float Male weight. 7 float Female weight. 8 long Playable flag. 9 long Beast flag. The skill bonuses array begins with index 0 holding the number of skill bonuses (a value between 0 and 7). Pairs of values are then returned. The odd indexes hold the Skill while the even indexes hold the bonus to the given skill. The starting attributes array contains the following values: Index Type Contents 0 long Male strength. 1 long Female strength. 2 long Male intelligence. 3 long Female intelligence. 4 long Male willpower. 5 long Female willpower. 6 long Male agility. 7 long Female agility. 8 long Male speed. 9 long Female speed. 10 long Male endurance. 11 long Female endurance. 12 long Male personality. 13 long Female personality. 14 long Male luck. 15 long Female luck. xGetService \u2693\ufe0e Parameters: long mask : A filter to limit the services returned. Returned: long services : The services offered by the reference, limited by mask . This function returns a bitfield of services offered by a given reference. The service values are shown in the following table. If an NPC offers more than one service the sum of the service numbers will be returned. The mask parameter can be used as a filter to limit the return value to only consider the services indicated. Value Service 1 Barters for weapons. 2 Barters for armor. 4 Barters for clothing. 8 Barters for books. 16 Barters for ingredients. 32 Barters for lockpicks. 64 Barters for probes. 128 Barters for lights. 256 Barters for alchemical apparatus. 512 Barters for repair tools. 1024 Barters for miscellaneous items. 2048 Offers spells. 4096 Barters for enchanted items. 8192 Barters for potions. 16384 Provides training. 32768 Provides spellmaking service. 65536 Provides enchanting service. 131072 Repairs armor and weapons. Note Previous versions of MWSE made use of xIsTrader , xIsTrainer , and xIsProvider . This function supersedes those. Old scripts that use them will continue to work, but new scripts should make use of xGetService . xGetSkill \u2693\ufe0e Parameters: long skillID : The Skill ID to get the value of. Returned: float value : Current value of the skill. Returns the current value of the referenced object's skill. Note This function only supports the player and NPCs. xGetSpell \u2693\ufe0e Parameters: string spellID : The spell ID to search for. Returned: long result : 1 if the spell was found, otherwise 0 . Returns 1 if spellId is present, 0 otherwise. This is not a wrapper for GetSpell ; it's a reimplementation. It only works for NPCs and the player. xGetSpellEffects \u2693\ufe0e Parameters: string spellID : The spell ID to check for. Returned: long result : 1 if the object is equipped, otherwise 0 . Returns 1 if the calling object is under the effect of the given spell, or 0 otherwise. xHasItemEquipped \u2693\ufe0e Parameters: string objectID : The object ID to check if equipped. Returned: long result : 1 if the object is equipped, otherwise 0 . Returns 1 if the NPC or creature has the object equipped, 0 otherwise. xIsFemale \u2693\ufe0e Parameters: None Returned: long result : 1 if the reference is female, otherwise 0 . Returns 1 if the NPC is female and 0 otherwise. xModAttribute \u2693\ufe0e Parameters: long attributeID : The Attribute ID to modify. float value : The value to modify the attribute by. Returned: short result : Result of the function. Modifies the current and base values of the specified attribute. This suffers from the same display issue as xSetLevel. It ignores the 100 max attribute limit. Note This function only supports the player and NPCs. xModService \u2693\ufe0e Parameters: long services : The combined value of services the reference should offer (positive) or refuse (negative). Returned: None Uses the services parameter to modify the services offered by an NPC. A positive value adds that service (or set of services) to those already offered. A negative value will remove a service or service. The changes are not permanent. Value Service 1 Barters for weapons. 2 Barters for armor. 4 Barters for clothing. 8 Barters for books. 16 Barters for ingredients. 32 Barters for lockpicks. 64 Barters for probes. 128 Barters for lights. 256 Barters for alchemical apparatus. 512 Barters for repair tools. 1024 Barters for miscellaneous items. 2048 Offers spells. 4096 Barters for enchanted items. 8192 Barters for potions. 16384 Provides training. 32768 Provides spellmaking service. 65536 Provides enchanting service. 131072 Repairs armor and weapons. xRemoveSpell \u2693\ufe0e Parameters: string objectID : The object ID of the spell to remove. Returned: None This is a wrapper for the vanilla RemoveSpell function that can take variable input. xSetBaseGold \u2693\ufe0e Parameters: long gold : New value to set the reference's base barter gold to. Returned: None Changes the base amount of barter gold assigned to the NPC (or creature). Unfortunately this change won't be saved with the save game so you will need to reset it after each game reload or after the \"72-hour bug\" affects the merchant. xSetGold \u2693\ufe0e Parameters: long gold : New value to set the reference's current barter gold to. Returned: None xSetGold changes the current amount of barter gold possessed by the NPC (or creature). This value is stored in save game files so it will survive a game reload. Setting this will have no effect if you haven't recently bartered with the NPC/creature. But setting both this and the base gold amount at the same time will likely do what you want. xSetLevel \u2693\ufe0e Parameters: long level : New value to set the reference's level to. Returned: None Sets the level of the given reference. This function is a wrapper for SetLevel , and suffers from the same display issue: when using this function on the player, the character screen does not update with the new level. xSetService \u2693\ufe0e Parameters: long services : The combined value of services the reference should offer. Returned: None xSetService uses the value parameter to change the NPC to offer the set of services represented by the number. The service number values are used and any old services are ignored. For example using a value of 8 will make the NPC a bookseller. A value of 131587 ( 1+2+512+131072 ) is typical for smiths. The values changed by this function are not permanent and may be reset after 72-hours or a game reload. Value Service 1 Barters for weapons. 2 Barters for armor. 4 Barters for clothing. 8 Barters for books. 16 Barters for ingredients. 32 Barters for lockpicks. 64 Barters for probes. 128 Barters for lights. 256 Barters for alchemical apparatus. 512 Barters for repair tools. 1024 Barters for miscellaneous items. 2048 Offers spells. 4096 Barters for enchanted items. 8192 Barters for potions. 16384 Provides training. 32768 Provides spellmaking service. 65536 Provides enchanting service. 131072 Repairs armor and weapons. xStartCombat \u2693\ufe0e Parameters: long reference : Target reference for the caller to initiate combat with. Returned: None xStartCombat is a wrapper for the original StartCombat to take variables.","title":"Actor Functions"},{"location":"references/mwse-mwscript/actor/#actor-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Actor Functions"},{"location":"references/mwse-mwscript/actor/#xactivate","text":"Parameters: reference target : What the reference will try to activate. Returned: None This function allows the forced activation of one reference onto another. Unlike the vanilla Activate function, this allows variable input and will work even when OnActivate hasn't been triggered in the script. .. note:: Unlike the vanilla activate function, the reference is the actor that will activate something, rather than the object to activate. Force the PC to Activate begin test long targetRef long pcRef ; Don't force pickup if we're not sneaking. if ( GetPCSneaking == 0 ) return endif ; Get a reference to what the player is looking at. setx targetRef to xGetPCTarget if ( targetRef == 0 ) return endif ; Get a reference to the player, and force them to activate what they are looking at. setx pcRef to xGetRef \"player\" pcRef->xActivate targetRef end","title":"xActivate"},{"location":"references/mwse-mwscript/actor/#xaddspell","text":"Parameters: string objectID : The object ID of the spell to add. Returned: None This is a wrapper for the vanilla AddSpell function that can take variable input.","title":"xAddSpell"},{"location":"references/mwse-mwscript/actor/#xaitravel","text":"Parameters: float x : The position to travel to on the X axis. float y : The position to travel to on the Y axis. float z : The position to travel to on the Z axis. Returned: None This is a wrapper for the vanilla AITravel function that can take variable input.","title":"xAITravel"},{"location":"references/mwse-mwscript/actor/#xdrop","text":"Parameters: string objectID : The object ID of the item to drop. long count : The number of items to drop. Returned: None This is a wrapper for the vanilla Drop function that can take variable input. Note xDrop N+1 items will leave 1 phantom icon plus N real items in the dropping actors inventory. xGetItemCount will not report the 1 phantom icon. However, xRemoveItem will remove the phantom safely. So \"safe\" procedure for xDrop seems to be to follow up with xRemoveItem of the same count. Additionally for non-player actors in menumode, exit and re-entry to menumode is needed to refresh the icons and avoid phantom icon interaction that could result in permanent item doubling or CTD. This also applies to the standard drop function.","title":"xDrop"},{"location":"references/mwse-mwscript/actor/#xequip","text":"Parameters: string objectID : The object ID of the item to equip. Returned: None This is a wrapper for the vanilla Equip function that can take variable input.","title":"xEquip"},{"location":"references/mwse-mwscript/actor/#xgetattribute","text":"Parameters: long attributeID : The Attribute ID to get the value of. Returned: float value : Current value of the attribute. Returns the current value of the referenced object's attribute. Note This function only supports the player and NPCs.","title":"xGetAttribute"},{"location":"references/mwse-mwscript/actor/#xgetbaseattribute","text":"Parameters: long attributeID : The Attribute ID to get the value of. Returned: float value : Base value of the attribute. Returns the base current value of the referenced object's attribute. Note This function only supports the player and NPCs.","title":"xGetBaseAttribute"},{"location":"references/mwse-mwscript/actor/#xgetbasegold","text":"Parameters: None Returned: long gold : The base amount of bartering gold of the reference. Returns the base amount of barter gold assigned to the NPC (or creature). This is the value that resets automatically each day.","title":"xGetBaseGold"},{"location":"references/mwse-mwscript/actor/#xgetbaseskill","text":"Parameters: long skillID : The Skill ID to get the value of. Returned: float value : Base value of the skill. Returns the base value of the referenced object's skill. Note This function only supports the player and NPCs.","title":"xGetBaseSkill"},{"location":"references/mwse-mwscript/actor/#xgetclass","text":"Parameters: long attributesMask : A bit mask to apply to the attributes value. long majorMask : A bit mask to apply to the majorSkills value. long minorMask : A bit mask to apply to the minorSkills value. Returned: string classID : The unique string identifier of the class. string name : The name of the class. long playable : 1 if the class can be chosen by the PC, 0 otherwise. long specialization : 0 = Combat, 1 = Magic, 2 = Stealth long attributes : A bitmap of the two primary attributes. The result is obtained by adding the values found in the attributes table below. long majorSkills : A bitmap of the 5 major skills. The result is obtained by adding the values found in the skills table below. long minorSkills : A bitmap of the 5 minor skills. The result is obtained by adding the values found in the skills table below. Returns info about the class of the target NPC/PC, or 0 if the target is not an NPC or the PC. For a custom class created at PC creation, the classID is \"NEWCLASSID_CHARGEN\" and playable is 0 .","title":"xGetClass"},{"location":"references/mwse-mwscript/actor/#attribute-and-skill-bitmaps","text":"Value Attribute 1 Strength 2 Intelligence 4 Willpower 8 Agility 16 Speed 32 Endurance 64 Personality 128 Luck Value Skill 1 Block 2 Armorer 4 Medium Armor 8 Heavy Armor 16 Blunt Weapon 32 Long Blade 64 Axe 128 Spear 256 Athletics 512 Enchant 1024 Destruction 2048 Alteration 4096 Illusion 8192 Conjuration 16384 Mysticism 32768 Restoration 65536 Alchemy 131072 Unarmored 262144 Security 524288 Sneak 1048576 Acrobatics 2097152 Light Armor 4194304 Short Blade 8388608 Marksman 16777216 Mercantile 33554432 Speechcraft 67108864 Hand-to-Hand","title":"Attribute and Skill Bitmaps"},{"location":"references/mwse-mwscript/actor/#xgetcombat","text":"Parameters: None Returned: reference reference : Reference to the current combat target. Returns a reference to the reference NPC/creature's combat target, or 0 if the reference is not in combat.","title":"xGetCombat"},{"location":"references/mwse-mwscript/actor/#xgetgold","text":"Parameters: None Returned: long gold : The reference's current barter gold. xGetGold returns the current amount of barter gold possessed by the NPC (or creature). The base gold amount is used if you haven't bartered with the NPC/creature recently.","title":"xGetGold"},{"location":"references/mwse-mwscript/actor/#xgetmagic","text":"Parameters: None Returned: long objectType : The Object Type of the equipped magical source. string objectID : The object ID of the spell or enchantment selected. Returns the currently equipped spell or enchanted item. This is specifically the object that appears in the equipped magic slot and includes on-use magical items as well as spells. Note The returned objectType and objectID will always be associated with a Spell or Enchantment object, not the Weapon , Armor , Clothing , or Book that the magic is placed on.","title":"xGetMagic"},{"location":"references/mwse-mwscript/actor/#xgetmaxfatigue","text":"Parameters: None Returned: float maxFatigue : The reference's maximum fatigue. !!! noteReturns maximum fatigue. This function only supports the player and NPCs.","title":"xGetMaxFatigue"},{"location":"references/mwse-mwscript/actor/#xgetmaxhealth","text":"Parameters: None Returned: float maxHealth : The reference's maximum health. !!! noteReturns maximum health. This function only supports the player and NPCs.","title":"xGetMaxHealth"},{"location":"references/mwse-mwscript/actor/#xgetmaxmagicka","text":"Parameters: None Returned: float maxMagicka : The reference's maximum magicka. !!! noteReturns maximum magicka. This function only supports the player and NPCs.","title":"xGetMaxMagicka"},{"location":"references/mwse-mwscript/actor/#xgetrace","text":"Parameters: short returnType : The return pattern desired. See below for details. Returned (returnType is 0): string raceID : The object ID of the target's race. Returned (returnType is 1): array arrayID : An array ID containing the values of the race. This function fetches the objectID or complete details about the target's race. Warning The arrays returned by this function when returnType is 1 are volatile. They should not be used for custom storage. Whenever xGetRace is called, the arrays are cleared and refilled with up-to-date information. If returnType is 0 , the response is the race's object ID. Otherwise, the returned array contains the following values: Index Type Contents 0 string Object ID. 1 string Name. 2 array Skill bonuses. 3 array Starting attributes. 4 float Male height. 5 float Female height. 6 float Male weight. 7 float Female weight. 8 long Playable flag. 9 long Beast flag. The skill bonuses array begins with index 0 holding the number of skill bonuses (a value between 0 and 7). Pairs of values are then returned. The odd indexes hold the Skill while the even indexes hold the bonus to the given skill. The starting attributes array contains the following values: Index Type Contents 0 long Male strength. 1 long Female strength. 2 long Male intelligence. 3 long Female intelligence. 4 long Male willpower. 5 long Female willpower. 6 long Male agility. 7 long Female agility. 8 long Male speed. 9 long Female speed. 10 long Male endurance. 11 long Female endurance. 12 long Male personality. 13 long Female personality. 14 long Male luck. 15 long Female luck.","title":"xGetRace"},{"location":"references/mwse-mwscript/actor/#xgetservice","text":"Parameters: long mask : A filter to limit the services returned. Returned: long services : The services offered by the reference, limited by mask . This function returns a bitfield of services offered by a given reference. The service values are shown in the following table. If an NPC offers more than one service the sum of the service numbers will be returned. The mask parameter can be used as a filter to limit the return value to only consider the services indicated. Value Service 1 Barters for weapons. 2 Barters for armor. 4 Barters for clothing. 8 Barters for books. 16 Barters for ingredients. 32 Barters for lockpicks. 64 Barters for probes. 128 Barters for lights. 256 Barters for alchemical apparatus. 512 Barters for repair tools. 1024 Barters for miscellaneous items. 2048 Offers spells. 4096 Barters for enchanted items. 8192 Barters for potions. 16384 Provides training. 32768 Provides spellmaking service. 65536 Provides enchanting service. 131072 Repairs armor and weapons. Note Previous versions of MWSE made use of xIsTrader , xIsTrainer , and xIsProvider . This function supersedes those. Old scripts that use them will continue to work, but new scripts should make use of xGetService .","title":"xGetService"},{"location":"references/mwse-mwscript/actor/#xgetskill","text":"Parameters: long skillID : The Skill ID to get the value of. Returned: float value : Current value of the skill. Returns the current value of the referenced object's skill. Note This function only supports the player and NPCs.","title":"xGetSkill"},{"location":"references/mwse-mwscript/actor/#xgetspell","text":"Parameters: string spellID : The spell ID to search for. Returned: long result : 1 if the spell was found, otherwise 0 . Returns 1 if spellId is present, 0 otherwise. This is not a wrapper for GetSpell ; it's a reimplementation. It only works for NPCs and the player.","title":"xGetSpell"},{"location":"references/mwse-mwscript/actor/#xgetspelleffects","text":"Parameters: string spellID : The spell ID to check for. Returned: long result : 1 if the object is equipped, otherwise 0 . Returns 1 if the calling object is under the effect of the given spell, or 0 otherwise.","title":"xGetSpellEffects"},{"location":"references/mwse-mwscript/actor/#xhasitemequipped","text":"Parameters: string objectID : The object ID to check if equipped. Returned: long result : 1 if the object is equipped, otherwise 0 . Returns 1 if the NPC or creature has the object equipped, 0 otherwise.","title":"xHasItemEquipped"},{"location":"references/mwse-mwscript/actor/#xisfemale","text":"Parameters: None Returned: long result : 1 if the reference is female, otherwise 0 . Returns 1 if the NPC is female and 0 otherwise.","title":"xIsFemale"},{"location":"references/mwse-mwscript/actor/#xmodattribute","text":"Parameters: long attributeID : The Attribute ID to modify. float value : The value to modify the attribute by. Returned: short result : Result of the function. Modifies the current and base values of the specified attribute. This suffers from the same display issue as xSetLevel. It ignores the 100 max attribute limit. Note This function only supports the player and NPCs.","title":"xModAttribute"},{"location":"references/mwse-mwscript/actor/#xmodservice","text":"Parameters: long services : The combined value of services the reference should offer (positive) or refuse (negative). Returned: None Uses the services parameter to modify the services offered by an NPC. A positive value adds that service (or set of services) to those already offered. A negative value will remove a service or service. The changes are not permanent. Value Service 1 Barters for weapons. 2 Barters for armor. 4 Barters for clothing. 8 Barters for books. 16 Barters for ingredients. 32 Barters for lockpicks. 64 Barters for probes. 128 Barters for lights. 256 Barters for alchemical apparatus. 512 Barters for repair tools. 1024 Barters for miscellaneous items. 2048 Offers spells. 4096 Barters for enchanted items. 8192 Barters for potions. 16384 Provides training. 32768 Provides spellmaking service. 65536 Provides enchanting service. 131072 Repairs armor and weapons.","title":"xModService"},{"location":"references/mwse-mwscript/actor/#xremovespell","text":"Parameters: string objectID : The object ID of the spell to remove. Returned: None This is a wrapper for the vanilla RemoveSpell function that can take variable input.","title":"xRemoveSpell"},{"location":"references/mwse-mwscript/actor/#xsetbasegold","text":"Parameters: long gold : New value to set the reference's base barter gold to. Returned: None Changes the base amount of barter gold assigned to the NPC (or creature). Unfortunately this change won't be saved with the save game so you will need to reset it after each game reload or after the \"72-hour bug\" affects the merchant.","title":"xSetBaseGold"},{"location":"references/mwse-mwscript/actor/#xsetgold","text":"Parameters: long gold : New value to set the reference's current barter gold to. Returned: None xSetGold changes the current amount of barter gold possessed by the NPC (or creature). This value is stored in save game files so it will survive a game reload. Setting this will have no effect if you haven't recently bartered with the NPC/creature. But setting both this and the base gold amount at the same time will likely do what you want.","title":"xSetGold"},{"location":"references/mwse-mwscript/actor/#xsetlevel","text":"Parameters: long level : New value to set the reference's level to. Returned: None Sets the level of the given reference. This function is a wrapper for SetLevel , and suffers from the same display issue: when using this function on the player, the character screen does not update with the new level.","title":"xSetLevel"},{"location":"references/mwse-mwscript/actor/#xsetservice","text":"Parameters: long services : The combined value of services the reference should offer. Returned: None xSetService uses the value parameter to change the NPC to offer the set of services represented by the number. The service number values are used and any old services are ignored. For example using a value of 8 will make the NPC a bookseller. A value of 131587 ( 1+2+512+131072 ) is typical for smiths. The values changed by this function are not permanent and may be reset after 72-hours or a game reload. Value Service 1 Barters for weapons. 2 Barters for armor. 4 Barters for clothing. 8 Barters for books. 16 Barters for ingredients. 32 Barters for lockpicks. 64 Barters for probes. 128 Barters for lights. 256 Barters for alchemical apparatus. 512 Barters for repair tools. 1024 Barters for miscellaneous items. 2048 Offers spells. 4096 Barters for enchanted items. 8192 Barters for potions. 16384 Provides training. 32768 Provides spellmaking service. 65536 Provides enchanting service. 131072 Repairs armor and weapons.","title":"xSetService"},{"location":"references/mwse-mwscript/actor/#xstartcombat","text":"Parameters: long reference : Target reference for the caller to initiate combat with. Returned: None xStartCombat is a wrapper for the original StartCombat to take variables.","title":"xStartCombat"},{"location":"references/mwse-mwscript/array/","text":"Array Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xClearArray \u2693\ufe0e Parameters: long arrayId : The id of the array to clear. Returned: long result : 1 if the array was successfully cleared. This function clears an array, removing any values from it. xCreateArray \u2693\ufe0e Parameters: None Returned: long arrayId : The id of the array that was created. This function creates an empty array, and returns the id of it. xGetArraySize \u2693\ufe0e Parameters: long arrayId : The id of the array. Returned: long size : The number of elements in the array. This function determines the size of an array. xGetArrayValue \u2693\ufe0e Parameters: long arrayId : The id of the array to get a value from. long index : The index in the array to fetch. Returned: long value : The value in the array at the given index . This function retrieves a value in an array, identified by arrayId and at index . xSetArrayValue \u2693\ufe0e Parameters: long arrayId : The id of the array to get a value from. long index : The index in the array to fetch. long value : The value to set into the array. Returned: short status : 1 if the value was set, otherwise 0. This function retrieves sets a value in an array, identified by arrayId and at index .","title":"Array Functions"},{"location":"references/mwse-mwscript/array/#array-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Array Functions"},{"location":"references/mwse-mwscript/array/#xcleararray","text":"Parameters: long arrayId : The id of the array to clear. Returned: long result : 1 if the array was successfully cleared. This function clears an array, removing any values from it.","title":"xClearArray"},{"location":"references/mwse-mwscript/array/#xcreatearray","text":"Parameters: None Returned: long arrayId : The id of the array that was created. This function creates an empty array, and returns the id of it.","title":"xCreateArray"},{"location":"references/mwse-mwscript/array/#xgetarraysize","text":"Parameters: long arrayId : The id of the array. Returned: long size : The number of elements in the array. This function determines the size of an array.","title":"xGetArraySize"},{"location":"references/mwse-mwscript/array/#xgetarrayvalue","text":"Parameters: long arrayId : The id of the array to get a value from. long index : The index in the array to fetch. Returned: long value : The value in the array at the given index . This function retrieves a value in an array, identified by arrayId and at index .","title":"xGetArrayValue"},{"location":"references/mwse-mwscript/array/#xsetarrayvalue","text":"Parameters: long arrayId : The id of the array to get a value from. long index : The index in the array to fetch. long value : The value to set into the array. Returned: short status : 1 if the value was set, otherwise 0. This function retrieves sets a value in an array, identified by arrayId and at index .","title":"xSetArrayValue"},{"location":"references/mwse-mwscript/file/","text":"File Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xFileReadFloat \u2693\ufe0e Parameters: string filename : The file to read values from. long count : The number of values desired. Returned: long valuesRead : The number of results actually read. This may differ from count if it encountered an error while reading. float value : A value read. A number of values are returned equal to valuesRead . Reads a number of float (4 byte) values requested from filename at the current reading position. The current position is then advanced. Returns the number of values actually read ( valuesRead ) followed by the values. xFileReadLong \u2693\ufe0e Parameters: string filename : The file to read values from. long count : The number of values desired. Returned: long valuesRead : The number of results actually read. This may differ from count if it encountered an error while reading. long value : A value read. A number of values are returned equal to valuesRead . Reads a number of long (4 byte) values requested from filename at the current reading position. The current position is then advanced. Returns the number of values actually read ( valuesRead ) followed by the values. xFileReadShort \u2693\ufe0e Parameters: string filename : The file to read values from. long count : The number of values desired. Returned: long valuesRead : The number of results actually read. This may differ from count if it encountered an error while reading. short value : A value read. A number of values are returned equal to valuesRead . Reads a number of short (2 byte) values requested from filename at the current reading position. The current position is then advanced. Returns the number of values actually read ( valuesRead ) followed by the values. xFileReadString \u2693\ufe0e Parameters: string filename : The file to read values from. Returned: string value : The value read from the file. Reads from filename at the current reading position, until a C-style null terminator ( \\0 / 0x00 ) is read. The current position is advanced as read, and the resultant bytes are returned as a string. xFileReadText \u2693\ufe0e Parameters: string filename : The file to read values from. string pattern : The pattern to match when reading. Returned: long numMatches : The number of values read. varies matches : A value returned. A number of values will be returned matching numMatches . xFileReadText reads a text string from from the file at the current reading position. The current position is then advanced. The pattern string is then used to extract data from the string just read; the first return value indicates how much of the pattern is matched. The values matched by the pattern are also returned. The pattern and return values are the same as for the xStringParse function with one addition: placing a single % sign at the end of the pattern will cause the read routine to stop when it gets to the end of a line (CR/LF) allowing you to use this to read a normal text file instead of a binary file. Without the trailing % sign on the pattern this will read up to the first NULL character or to the end of the file if it doesn't find a NULL character. xFileRewind \u2693\ufe0e Parameters: string filename : The file to rewind. Returned: None This function moves the current reading position to the start of the file. Call this or xFileSeek at the start of any script which uses file reading or writing functions, otherwise you will have problems with the current file position not being as expected. xFileSeek \u2693\ufe0e Parameters: string filename : The file to seek in. long position : Returned: None This function moves the current reading position to the specified offset in the file. You should call this or xFileRewind every frame before using other file functions. Use an offset divisible by 2 to read shorts and an offset divisible by 4 to read longs. This function isn't very useful if the file contains string data. xFileWriteFloat \u2693\ufe0e Parameters: string filename : The file to write value to. float value : The value to write to file. Returned: None Writes a float (4 byte) value to filename at the current position. The current position is then advanced. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file. xFileWriteLong \u2693\ufe0e Parameters: string filename : The file to write value to. long value : The value to write to file. Returned: None Writes a long (4 byte) value to filename at the current position. The current position is then advanced. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file. xFileWriteShort \u2693\ufe0e Parameters: string filename : The file to write value to. short value : The value to write to file. Returned: None Writes a short (2 byte) value to filename at the current position. The current position is then advanced. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file. xFileWriteString \u2693\ufe0e Parameters: string filename : The file to write value to. string value : The value to write to file. Returned: None Writes a string value to filename at the current position. The string is stored in the file as a C-style null-terminated string. The current position is then advanced. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file. xFileWriteText \u2693\ufe0e Parameters: string filename : The file to write value to. string format : The format to use when writing to the file. varies values : Multiple values that match the format . Returned: None Writes a formatted string to the file at the current position and advances. The formatting rules are the same as for the xStringBuild function with one addition. Placing a % at the end of the pattern will suppress the NULL that is normally printed, so a format string ending with %N% can be used to create a normal text file. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file.","title":"File Functions"},{"location":"references/mwse-mwscript/file/#file-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"File Functions"},{"location":"references/mwse-mwscript/file/#xfilereadfloat","text":"Parameters: string filename : The file to read values from. long count : The number of values desired. Returned: long valuesRead : The number of results actually read. This may differ from count if it encountered an error while reading. float value : A value read. A number of values are returned equal to valuesRead . Reads a number of float (4 byte) values requested from filename at the current reading position. The current position is then advanced. Returns the number of values actually read ( valuesRead ) followed by the values.","title":"xFileReadFloat"},{"location":"references/mwse-mwscript/file/#xfilereadlong","text":"Parameters: string filename : The file to read values from. long count : The number of values desired. Returned: long valuesRead : The number of results actually read. This may differ from count if it encountered an error while reading. long value : A value read. A number of values are returned equal to valuesRead . Reads a number of long (4 byte) values requested from filename at the current reading position. The current position is then advanced. Returns the number of values actually read ( valuesRead ) followed by the values.","title":"xFileReadLong"},{"location":"references/mwse-mwscript/file/#xfilereadshort","text":"Parameters: string filename : The file to read values from. long count : The number of values desired. Returned: long valuesRead : The number of results actually read. This may differ from count if it encountered an error while reading. short value : A value read. A number of values are returned equal to valuesRead . Reads a number of short (2 byte) values requested from filename at the current reading position. The current position is then advanced. Returns the number of values actually read ( valuesRead ) followed by the values.","title":"xFileReadShort"},{"location":"references/mwse-mwscript/file/#xfilereadstring","text":"Parameters: string filename : The file to read values from. Returned: string value : The value read from the file. Reads from filename at the current reading position, until a C-style null terminator ( \\0 / 0x00 ) is read. The current position is advanced as read, and the resultant bytes are returned as a string.","title":"xFileReadString"},{"location":"references/mwse-mwscript/file/#xfilereadtext","text":"Parameters: string filename : The file to read values from. string pattern : The pattern to match when reading. Returned: long numMatches : The number of values read. varies matches : A value returned. A number of values will be returned matching numMatches . xFileReadText reads a text string from from the file at the current reading position. The current position is then advanced. The pattern string is then used to extract data from the string just read; the first return value indicates how much of the pattern is matched. The values matched by the pattern are also returned. The pattern and return values are the same as for the xStringParse function with one addition: placing a single % sign at the end of the pattern will cause the read routine to stop when it gets to the end of a line (CR/LF) allowing you to use this to read a normal text file instead of a binary file. Without the trailing % sign on the pattern this will read up to the first NULL character or to the end of the file if it doesn't find a NULL character.","title":"xFileReadText"},{"location":"references/mwse-mwscript/file/#xfilerewind","text":"Parameters: string filename : The file to rewind. Returned: None This function moves the current reading position to the start of the file. Call this or xFileSeek at the start of any script which uses file reading or writing functions, otherwise you will have problems with the current file position not being as expected.","title":"xFileRewind"},{"location":"references/mwse-mwscript/file/#xfileseek","text":"Parameters: string filename : The file to seek in. long position : Returned: None This function moves the current reading position to the specified offset in the file. You should call this or xFileRewind every frame before using other file functions. Use an offset divisible by 2 to read shorts and an offset divisible by 4 to read longs. This function isn't very useful if the file contains string data.","title":"xFileSeek"},{"location":"references/mwse-mwscript/file/#xfilewritefloat","text":"Parameters: string filename : The file to write value to. float value : The value to write to file. Returned: None Writes a float (4 byte) value to filename at the current position. The current position is then advanced. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file.","title":"xFileWriteFloat"},{"location":"references/mwse-mwscript/file/#xfilewritelong","text":"Parameters: string filename : The file to write value to. long value : The value to write to file. Returned: None Writes a long (4 byte) value to filename at the current position. The current position is then advanced. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file.","title":"xFileWriteLong"},{"location":"references/mwse-mwscript/file/#xfilewriteshort","text":"Parameters: string filename : The file to write value to. short value : The value to write to file. Returned: None Writes a short (2 byte) value to filename at the current position. The current position is then advanced. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file.","title":"xFileWriteShort"},{"location":"references/mwse-mwscript/file/#xfilewritestring","text":"Parameters: string filename : The file to write value to. string value : The value to write to file. Returned: None Writes a string value to filename at the current position. The string is stored in the file as a C-style null-terminated string. The current position is then advanced. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file.","title":"xFileWriteString"},{"location":"references/mwse-mwscript/file/#xfilewritetext","text":"Parameters: string filename : The file to write value to. string format : The format to use when writing to the file. varies values : Multiple values that match the format . Returned: None Writes a formatted string to the file at the current position and advances. The formatting rules are the same as for the xStringBuild function with one addition. Placing a % at the end of the pattern will suppress the NULL that is normally printed, so a format string ending with %N% can be used to create a normal text file. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file.","title":"xFileWriteText"},{"location":"references/mwse-mwscript/iteration/","text":"Iteration Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xContentList \u2693\ufe0e Parameters: long node : For the first call, this should be 0 to get the first item. In following iterations, this value will be what is returned as nextNode from the previous call. Returned: string id : The object ID string of the item. long count : How many items are in the item stack. long type : The Object Type of the item. long value : The value of the item. float weight : The weight of the item. (Always 0.000001 for LEVI objects.) string name : The name of the item. long nextNode : The next node to provide back into this function to continue looping. When this value is 0, there are no more items. This function allows a script to iterate through the inventory of an actor or container and retrieve information about the contents found. Unlike the xInventory and xNextStack functions, xContentList also provides access to the type, value, weight, and name of items processed. If you are only interested in items of specific types, consider using xContentListFiltered instead. If you are only interested in items currently equipped by the actor, consider using xEquipmentList . xContentListFiltered \u2693\ufe0e Parameters: long node : For the first call, this should be 0 to get the first item. In following iterations, this value will be what is returned as nextNode from the previous call. long filter : A filter that matches the Filter Mask that is desired. Only items matching the type(s) will be returned. This means that passing a value of 0 will return nothing. Returned: string id : The id string of the item. long count : How many items are in the item stack. long type : The Object Type of the item. long value : The value of the item. float weight : The weight of the item. string name : The name of the item. long nextNode : The next node to provide back into this function to continue looping. When this value is 0, there are no more items. This function behaves similar to xContentList , with the added convenience of filtering for one or more Object Type . If you are trying to specifically get the equipped items of an actor, consider using xEquipmentList . Filter Mask \u2693\ufe0e The filter mask below is meant to be summed for each Object Type desired in the filter. The exception to this rule is the ENCH filter, which restricts the results to enchanted items. For example, if you wanted clothing ( 128 ) and armor ( 16 ) results, you would pass a value of 144 ( 128+16 ). Type Mask ACTI 1 ALCH 2 AMMO 4 APPA 8 ARMO 16 BODY 32 BOOK 64 CLOT 128 CONT 256 CREA 512 DOOR 1024 INGR 2048 LEVC 4096 LEVI 8192 LIGH 16384 LOCK 32768 MISC 65536 NPC 131072 PROB 262144 REPA 524288 STAT 1048576 WEAP 2097152 ENCH 4194304 Simple Filtered Loop This example demonstrates how to loop through all potions the player is carrying. begin Example_xContentListFiltered long id long count long type long value float weight long name long next long filter long ref long loop setx ref to xGetRef \"player\" set filter to 2 ; ALCH set loop to 1 whilex ( loop ) setx id count type value weight name next to ref->xContentListFiltered next filter xLogMessage \"id: %s\" id xLogMessage \" count: %d\" count xLogMessage \" type: %l\" type xLogMessage \" value: %d\" value xLogMessage \" weight: %.2f\" weight xLogMessage \" name: %s\" name xLogMessage \" next: %d\" next set loop to next endwhile StopScript Example_xContentListFiltered end Transfer Ingredients This example shows how to efficiently transfer all ingredients and potions from the player to another container. A placeholder variable, such as \"_\", can be used to ignore return values that are not needed for your script. begin TransferIngreds long _ long id long count long src long dst setx src to xGetRef \"player\" setx dst to xGetRef \"ingred_storage\" set count to 1 whilex ( count ) ; get the next ingred and count setx id count _ _ _ _ _ to src->xContentListFiltered _ 2050 ; INGR + ALCH ; remove the ingred from source src->xRemoveItem id count ; add the ingred to destination dst->xAddItem id count ; continue with next ingredient set count to _ endwhile src->PlaySound3D \"Item Ingredient Down\" StopScript TransferIngreds end Get first item of a specific type. This example shows how to efficiently check if the player is carrying any weapons at all. No explicit loop is needed here, so evaluating the weapon id alone will suffice. begin NoWeaponsAllowed ; local script on a door long pcRef long weapID if ( OnActivate == 0 ) return endif setx pcRef to xGetRef \"player\" setx weapID to pcRef->xContentListFiltered 0 2097152 ; Weapon if ( weapID != 0 ) MessageBox \"No weapons are allowed inside the royal chamber!\" PlaySound3D \"Door Heavy Close\" return endif Activate end xEquipmentList \u2693\ufe0e Parameters: long node : For the first call, this should be 0 to get the first equipped item. In following iterations, this value will be what is returned as nextNode from the previous call. long typeFilter : A type filter that matches the Object Type that is desired. Only equipped items matching that type will be returned. A value of 0 will perform no type filtering. long subTypeFilter : An optional subtype filter, allowing the loop to search for a specific Armor Type , Clothing Type or Weapon Type . The value passed must be one higher than the value on the linked table. A value of 0 will perform no subtype filtering. Returned: string id : The id string of the equipped item. long count : This value will always be 1. Future version of MWSE may expand this to return the actual item count for arrows, bolts, and thrown weapons. long type : The Object Type of the equipped item. long subtype : The Armor Type , Clothing Type or Weapon Type of the equipped item, or 0 if it is not an armor, clothing, or weapon object. Note that the value returned is one higher than the value on the given table. long value : The value of the equipped item. float weight : The weight of the equipped item. string name : The name of the equipped item. string enchantId : The enchantment id of the equipped item. This can be fed to enchantment related functions that take an id. long nextNode : The next node to provide back into this function to continue looping. When this value is 0, there are no more equipped items. This function behaves similar to xContentList / xContentListFiltered , returning inventory information. This allows looping over equipped items instead of all items in the target's inventory. Note The subTypeFilter parameter does not exactly match the associated table. Instead, the function requires one more than the value on the table. For example if searching for clothing objects, a value of 0 will perform no filtering by subtype, while a value of 1 will filter for only pants. Tip At present this function is the only way to reliably get the equipment a reference has currently worn. Using the typeFilter and subTypeFilter the script can quickly query to see if, for example, the player is wearing pants. Simple Equipment Loop This example demonstrates how to do a simple loop through all equipped items (on the player in this instance). Begin loopEquippedItems long id long count long type long subtype long value long weight long name long enchantId long node long loop long ref setx ref to xGetRef \"player\" set loop to 1 whilex ( loop ) setx id count type subtype value weight name enchantId node to ref->xEquipmentList node 0 0 ; Code to be run for each looped item. set loop to node endwhile End Get Equipped Weapon's Enchantment This example shows how to get the enchantment objectId for the currently equipped weapon. Looping isn't required as the player can never have more than one equipped weapon. begin GetPlayerWeaponInfo long ref long id long count long type long subtype long value long weight long name long ench long node ; get the player reference setx ref to xGetRef \"player\" ; get info about his weapon setx id count type subtype value weight name ench node to ref->xEquipmentList 0 1346454871 0 ifx ( name ) xMessageFix \"Weapon: %s\" name MessageBox \"Weapon: ________________________________\" endif ifx ( ench ) xMessageFix \"Enchantment: %s\" ench MessageBox \"Enchantment: ________________________________\" endif end xFirstItem \u2693\ufe0e Parameters: None Returned: long reference : The first reference in the current cell's \"Item\" list. xFirstItem returns the first reference in the current cell's \"Item\" list. Despite the name of this function, the associated list can contain references of any Object Type other than those exclusive to xFirstNPC . Once acquired, the reference can be used with various other MWSE functions, such as xRefID and xRefType . Passing the reference as the argument to the xNextRef function will return the next reference in its associated list. Note Scripts that intend to process all references in the loaded cells will need to independently handle the separate lists provided by xFirstItem , xFirstStatic , and xFirstNPC . xFirstNPC \u2693\ufe0e Parameters: None Returned: long reference : The first reference in the current cell's \"NPC\" list. xFirstNPC returns the first reference in the current cell's \"NPC\" list. Once acquired, the reference can be used with various other MWSE functions, such as xRefID and xRefType . Passing the reference as the argument to the xNextRef function will return the next reference in its associated list. Note Scripts that intend to process all references in the loaded cells will need to independently handle the separate lists provided by xFirstItem , xFirstStatic , and xFirstNPC . xFirstStatic \u2693\ufe0e Parameters: None Returned: long reference : The first reference in the current cell's \"Static\" list. xFirstStatic returns the first reference in the current cell's \"Static\" list. Despite the name of this function, the associated list can contain references of any Object Type other than those exclusive to xFirstNPC . Once acquired, the reference can be used with various other MWSE functions, such as xRefID and xRefType . Passing the reference as the argument to the xNextRef function will return the next reference in its associated list. .. note:: Scripts that intend to process all references in the loaded cells will need to independently handle the separate lists provided by xFirstItem , xFirstStatic , and xFirstNPC . xInventory \u2693\ufe0e Parameters: None Returned: string objectID : The object ID of the item. long count : The number of items in the stack. node nextStack : A handle to the next stack in the inventory. This is 0 when no more items are in the inventory. Returns the objectID and count of an item in the target's inventory. The nextStack can be fed into xNextStack to continue iteration. Warning This function is limited. Consider using xContentList , xContentListFiltered or xEquipmentList instead. xNextRef \u2693\ufe0e Parameters: long reference : A valid reference. See xFirstItem , xFirstNPC , xFirstStatic . Returned: long nextReference : The next reference in the given reference's associated list. xNextRef returns the next reference in the supplied reference's associated list. xNextStack \u2693\ufe0e Parameters: node stack : The result from a previous xInventory or xNextStack call. Returned: string objectID : The object ID of the item. long count : The number of items in the stack. node nextStack : A handle to the next stack in the inventory. This is 0 when no more items are in the inventory. Returns the objectID and count of an item in the target's inventory. The nextStack can be fed into xNextStack to continue iteration. Warning This function is limited. Consider using xContentList , xContentListFiltered or xEquipmentList instead. xSpellList \u2693\ufe0e Parameters: long node : For the first call, this should be 0 to get the first spell. In following iterations, this value will be what is returned as nextNode from the previous call. Returned: long totalSpells : Total number of spells the caller knows. long spellId : The spell ID. long name : The spell name. long type : The spell type. ( 0 = spell, 1 = ability, 2 = blight, 3 = disease, 4 = curse, 5 = power) long cost : The spell cost. long effects : The spell's number of effects ( 1 to 8 ). long flags : The spell flags. ( 1 = autocalc, 2 = PC start, 4 = always succeeds) long nextNode : The next node to supply to function to continue looping. When this value is 0 , there are no more items. This function allows a script to iterate through the spell list of an actor and retrieve information about the spells found. Currently this function does not work on creatures.","title":"Iteration Functions"},{"location":"references/mwse-mwscript/iteration/#iteration-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Iteration Functions"},{"location":"references/mwse-mwscript/iteration/#xcontentlist","text":"Parameters: long node : For the first call, this should be 0 to get the first item. In following iterations, this value will be what is returned as nextNode from the previous call. Returned: string id : The object ID string of the item. long count : How many items are in the item stack. long type : The Object Type of the item. long value : The value of the item. float weight : The weight of the item. (Always 0.000001 for LEVI objects.) string name : The name of the item. long nextNode : The next node to provide back into this function to continue looping. When this value is 0, there are no more items. This function allows a script to iterate through the inventory of an actor or container and retrieve information about the contents found. Unlike the xInventory and xNextStack functions, xContentList also provides access to the type, value, weight, and name of items processed. If you are only interested in items of specific types, consider using xContentListFiltered instead. If you are only interested in items currently equipped by the actor, consider using xEquipmentList .","title":"xContentList"},{"location":"references/mwse-mwscript/iteration/#xcontentlistfiltered","text":"Parameters: long node : For the first call, this should be 0 to get the first item. In following iterations, this value will be what is returned as nextNode from the previous call. long filter : A filter that matches the Filter Mask that is desired. Only items matching the type(s) will be returned. This means that passing a value of 0 will return nothing. Returned: string id : The id string of the item. long count : How many items are in the item stack. long type : The Object Type of the item. long value : The value of the item. float weight : The weight of the item. string name : The name of the item. long nextNode : The next node to provide back into this function to continue looping. When this value is 0, there are no more items. This function behaves similar to xContentList , with the added convenience of filtering for one or more Object Type . If you are trying to specifically get the equipped items of an actor, consider using xEquipmentList .","title":"xContentListFiltered"},{"location":"references/mwse-mwscript/iteration/#filter-mask","text":"The filter mask below is meant to be summed for each Object Type desired in the filter. The exception to this rule is the ENCH filter, which restricts the results to enchanted items. For example, if you wanted clothing ( 128 ) and armor ( 16 ) results, you would pass a value of 144 ( 128+16 ). Type Mask ACTI 1 ALCH 2 AMMO 4 APPA 8 ARMO 16 BODY 32 BOOK 64 CLOT 128 CONT 256 CREA 512 DOOR 1024 INGR 2048 LEVC 4096 LEVI 8192 LIGH 16384 LOCK 32768 MISC 65536 NPC 131072 PROB 262144 REPA 524288 STAT 1048576 WEAP 2097152 ENCH 4194304 Simple Filtered Loop This example demonstrates how to loop through all potions the player is carrying. begin Example_xContentListFiltered long id long count long type long value float weight long name long next long filter long ref long loop setx ref to xGetRef \"player\" set filter to 2 ; ALCH set loop to 1 whilex ( loop ) setx id count type value weight name next to ref->xContentListFiltered next filter xLogMessage \"id: %s\" id xLogMessage \" count: %d\" count xLogMessage \" type: %l\" type xLogMessage \" value: %d\" value xLogMessage \" weight: %.2f\" weight xLogMessage \" name: %s\" name xLogMessage \" next: %d\" next set loop to next endwhile StopScript Example_xContentListFiltered end Transfer Ingredients This example shows how to efficiently transfer all ingredients and potions from the player to another container. A placeholder variable, such as \"_\", can be used to ignore return values that are not needed for your script. begin TransferIngreds long _ long id long count long src long dst setx src to xGetRef \"player\" setx dst to xGetRef \"ingred_storage\" set count to 1 whilex ( count ) ; get the next ingred and count setx id count _ _ _ _ _ to src->xContentListFiltered _ 2050 ; INGR + ALCH ; remove the ingred from source src->xRemoveItem id count ; add the ingred to destination dst->xAddItem id count ; continue with next ingredient set count to _ endwhile src->PlaySound3D \"Item Ingredient Down\" StopScript TransferIngreds end Get first item of a specific type. This example shows how to efficiently check if the player is carrying any weapons at all. No explicit loop is needed here, so evaluating the weapon id alone will suffice. begin NoWeaponsAllowed ; local script on a door long pcRef long weapID if ( OnActivate == 0 ) return endif setx pcRef to xGetRef \"player\" setx weapID to pcRef->xContentListFiltered 0 2097152 ; Weapon if ( weapID != 0 ) MessageBox \"No weapons are allowed inside the royal chamber!\" PlaySound3D \"Door Heavy Close\" return endif Activate end","title":"Filter Mask"},{"location":"references/mwse-mwscript/iteration/#xequipmentlist","text":"Parameters: long node : For the first call, this should be 0 to get the first equipped item. In following iterations, this value will be what is returned as nextNode from the previous call. long typeFilter : A type filter that matches the Object Type that is desired. Only equipped items matching that type will be returned. A value of 0 will perform no type filtering. long subTypeFilter : An optional subtype filter, allowing the loop to search for a specific Armor Type , Clothing Type or Weapon Type . The value passed must be one higher than the value on the linked table. A value of 0 will perform no subtype filtering. Returned: string id : The id string of the equipped item. long count : This value will always be 1. Future version of MWSE may expand this to return the actual item count for arrows, bolts, and thrown weapons. long type : The Object Type of the equipped item. long subtype : The Armor Type , Clothing Type or Weapon Type of the equipped item, or 0 if it is not an armor, clothing, or weapon object. Note that the value returned is one higher than the value on the given table. long value : The value of the equipped item. float weight : The weight of the equipped item. string name : The name of the equipped item. string enchantId : The enchantment id of the equipped item. This can be fed to enchantment related functions that take an id. long nextNode : The next node to provide back into this function to continue looping. When this value is 0, there are no more equipped items. This function behaves similar to xContentList / xContentListFiltered , returning inventory information. This allows looping over equipped items instead of all items in the target's inventory. Note The subTypeFilter parameter does not exactly match the associated table. Instead, the function requires one more than the value on the table. For example if searching for clothing objects, a value of 0 will perform no filtering by subtype, while a value of 1 will filter for only pants. Tip At present this function is the only way to reliably get the equipment a reference has currently worn. Using the typeFilter and subTypeFilter the script can quickly query to see if, for example, the player is wearing pants. Simple Equipment Loop This example demonstrates how to do a simple loop through all equipped items (on the player in this instance). Begin loopEquippedItems long id long count long type long subtype long value long weight long name long enchantId long node long loop long ref setx ref to xGetRef \"player\" set loop to 1 whilex ( loop ) setx id count type subtype value weight name enchantId node to ref->xEquipmentList node 0 0 ; Code to be run for each looped item. set loop to node endwhile End Get Equipped Weapon's Enchantment This example shows how to get the enchantment objectId for the currently equipped weapon. Looping isn't required as the player can never have more than one equipped weapon. begin GetPlayerWeaponInfo long ref long id long count long type long subtype long value long weight long name long ench long node ; get the player reference setx ref to xGetRef \"player\" ; get info about his weapon setx id count type subtype value weight name ench node to ref->xEquipmentList 0 1346454871 0 ifx ( name ) xMessageFix \"Weapon: %s\" name MessageBox \"Weapon: ________________________________\" endif ifx ( ench ) xMessageFix \"Enchantment: %s\" ench MessageBox \"Enchantment: ________________________________\" endif end","title":"xEquipmentList"},{"location":"references/mwse-mwscript/iteration/#xfirstitem","text":"Parameters: None Returned: long reference : The first reference in the current cell's \"Item\" list. xFirstItem returns the first reference in the current cell's \"Item\" list. Despite the name of this function, the associated list can contain references of any Object Type other than those exclusive to xFirstNPC . Once acquired, the reference can be used with various other MWSE functions, such as xRefID and xRefType . Passing the reference as the argument to the xNextRef function will return the next reference in its associated list. Note Scripts that intend to process all references in the loaded cells will need to independently handle the separate lists provided by xFirstItem , xFirstStatic , and xFirstNPC .","title":"xFirstItem"},{"location":"references/mwse-mwscript/iteration/#xfirstnpc","text":"Parameters: None Returned: long reference : The first reference in the current cell's \"NPC\" list. xFirstNPC returns the first reference in the current cell's \"NPC\" list. Once acquired, the reference can be used with various other MWSE functions, such as xRefID and xRefType . Passing the reference as the argument to the xNextRef function will return the next reference in its associated list. Note Scripts that intend to process all references in the loaded cells will need to independently handle the separate lists provided by xFirstItem , xFirstStatic , and xFirstNPC .","title":"xFirstNPC"},{"location":"references/mwse-mwscript/iteration/#xfirststatic","text":"Parameters: None Returned: long reference : The first reference in the current cell's \"Static\" list. xFirstStatic returns the first reference in the current cell's \"Static\" list. Despite the name of this function, the associated list can contain references of any Object Type other than those exclusive to xFirstNPC . Once acquired, the reference can be used with various other MWSE functions, such as xRefID and xRefType . Passing the reference as the argument to the xNextRef function will return the next reference in its associated list. .. note:: Scripts that intend to process all references in the loaded cells will need to independently handle the separate lists provided by xFirstItem , xFirstStatic , and xFirstNPC .","title":"xFirstStatic"},{"location":"references/mwse-mwscript/iteration/#xinventory","text":"Parameters: None Returned: string objectID : The object ID of the item. long count : The number of items in the stack. node nextStack : A handle to the next stack in the inventory. This is 0 when no more items are in the inventory. Returns the objectID and count of an item in the target's inventory. The nextStack can be fed into xNextStack to continue iteration. Warning This function is limited. Consider using xContentList , xContentListFiltered or xEquipmentList instead.","title":"xInventory"},{"location":"references/mwse-mwscript/iteration/#xnextref","text":"Parameters: long reference : A valid reference. See xFirstItem , xFirstNPC , xFirstStatic . Returned: long nextReference : The next reference in the given reference's associated list. xNextRef returns the next reference in the supplied reference's associated list.","title":"xNextRef"},{"location":"references/mwse-mwscript/iteration/#xnextstack","text":"Parameters: node stack : The result from a previous xInventory or xNextStack call. Returned: string objectID : The object ID of the item. long count : The number of items in the stack. node nextStack : A handle to the next stack in the inventory. This is 0 when no more items are in the inventory. Returns the objectID and count of an item in the target's inventory. The nextStack can be fed into xNextStack to continue iteration. Warning This function is limited. Consider using xContentList , xContentListFiltered or xEquipmentList instead.","title":"xNextStack"},{"location":"references/mwse-mwscript/iteration/#xspelllist","text":"Parameters: long node : For the first call, this should be 0 to get the first spell. In following iterations, this value will be what is returned as nextNode from the previous call. Returned: long totalSpells : Total number of spells the caller knows. long spellId : The spell ID. long name : The spell name. long type : The spell type. ( 0 = spell, 1 = ability, 2 = blight, 3 = disease, 4 = curse, 5 = power) long cost : The spell cost. long effects : The spell's number of effects ( 1 to 8 ). long flags : The spell flags. ( 1 = autocalc, 2 = PC start, 4 = always succeeds) long nextNode : The next node to supply to function to continue looping. When this value is 0 , there are no more items. This function allows a script to iterate through the spell list of an actor and retrieve information about the spells found. Currently this function does not work on creatures.","title":"xSpellList"},{"location":"references/mwse-mwscript/logic/","text":"Logic Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xAnd \u2693\ufe0e Parameters: long leftValue : First value for the logical operation. long rightValue : Second value for the logical operation. Returned: long result : 1 if the logical operation returns true. This function performs an AND logical operation, and returns its result. An AND operation returns true if both of the values are non-zero. A B xAnd A B 0 0 0 0 1 0 1 0 0 1 1 1 xNot \u2693\ufe0e Parameters: long value : Value for the logical operation. Returned: long result : 1 if the logical operation returns true. This function performs a NOT logical operation, and returns its result. A NOT operation returns true if its parameter is zero. A xNot A 0 1 1 0 xOr \u2693\ufe0e Parameters: long leftValue : First value for the logical operation. long rightValue : Second value for the logical operation. Returned: long result : 1 if the logical operation returns true. This function performs an OR logical operation, and returns its result. An OR operation returns true if either of the values are non-zero. A B xOr A B 0 0 0 0 1 1 1 0 1 1 1 1 xXor \u2693\ufe0e Parameters: long leftValue : First value for the logical operation. long rightValue : Second value for the logical operation. Returned: long result : 1 if the logical operation returns true. This function performs an XOR logical operation, and returns its result. An XOR operation returns true if one of the values is non-zero, but not both. A B xXor A B 0 0 0 0 1 1 1 0 1 1 1 0","title":"Logic Functions"},{"location":"references/mwse-mwscript/logic/#logic-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Logic Functions"},{"location":"references/mwse-mwscript/logic/#xand","text":"Parameters: long leftValue : First value for the logical operation. long rightValue : Second value for the logical operation. Returned: long result : 1 if the logical operation returns true. This function performs an AND logical operation, and returns its result. An AND operation returns true if both of the values are non-zero. A B xAnd A B 0 0 0 0 1 0 1 0 0 1 1 1","title":"xAnd"},{"location":"references/mwse-mwscript/logic/#xnot","text":"Parameters: long value : Value for the logical operation. Returned: long result : 1 if the logical operation returns true. This function performs a NOT logical operation, and returns its result. A NOT operation returns true if its parameter is zero. A xNot A 0 1 1 0","title":"xNot"},{"location":"references/mwse-mwscript/logic/#xor","text":"Parameters: long leftValue : First value for the logical operation. long rightValue : Second value for the logical operation. Returned: long result : 1 if the logical operation returns true. This function performs an OR logical operation, and returns its result. An OR operation returns true if either of the values are non-zero. A B xOr A B 0 0 0 0 1 1 1 0 1 1 1 1","title":"xOr"},{"location":"references/mwse-mwscript/logic/#xxor","text":"Parameters: long leftValue : First value for the logical operation. long rightValue : Second value for the logical operation. Returned: long result : 1 if the logical operation returns true. This function performs an XOR logical operation, and returns its result. An XOR operation returns true if one of the values is non-zero, but not both. A B xXor A B 0 0 0 0 1 1 1 0 1 1 1 0","title":"xXor"},{"location":"references/mwse-mwscript/lua/","text":"Lua Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xLuaRunScript \u2693\ufe0e Parameters: string script : The name of the script to run. This is relative to Data Files\\MWSE\\mods . varies (many) parameters : Values that the lua script can access. Returned: varies (many) results : Values that the lua script passes back. This function allows calling code from an external lua file. This call is blocking. Unlike other MWSE functions, this one requires the author to manage the parameter stack via Lua. This makes for slightly more complicated scripting, but allows for this function to create shared logic. Custom functions can be written out to Lua files and invoked with this method. Example In this example we will create some values, log them, send them to Lua, confirm that we got the values, send more values back, and confirm our results. This demonstrates how to send information back and forth between the xLuaRunScript call and Lua. First, our mwscript: Begin luaexec short myShort long myLong float myFloat long myString short retShort long retLong float retFloat long retString set myShort to 1 setx myLong to xRandomLong 0 2147483647 setx myFloat to xRandomFloat 0 1 setx myString to xStringBuild \"Hello World!\" xLogMessage \"[luaexec|mwscript] Sending values: %d, %d, %f, '%s'\" myShort myLong myFloat myString setx retShort retLong retFloat retString to xLuaRunScript \"test_mod\\\\luaexec\" myShort myLong myFloat myString xLogMessage \"[luaexec|mwscript] Got results: %d, %d, %f, '%s'\" retShort, retLong, retFloat, retString StopScript luaexec End Next, we have our Lua file ( Data Files\\mods\\test_mod\\luaexec.lua ) that gets the data, prints it, and sends more back. local myShort = mwse . stack . popShort () local myLong = mwse . stack . popLong () local myFloat = mwse . stack . popFloat () local myString = mwse . stack . popString () print ( string.format ( \"[luaexec|lua] Got values: %d, %d, %f, '%s'\" , myShort , myLong , myFloat , myString )) mwse . stack . pushString ( \"poop\" ) mwse . stack . pushFloat ( 3.14 ) mwse . stack . pushLong ( 512 ) mwse . stack . pushShort ( 4 ) print ( \"[luaexec|lua] Sending back values: 4, 512, 3.14, 'poop'\" )","title":"Lua Functions"},{"location":"references/mwse-mwscript/lua/#lua-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Lua Functions"},{"location":"references/mwse-mwscript/lua/#xluarunscript","text":"Parameters: string script : The name of the script to run. This is relative to Data Files\\MWSE\\mods . varies (many) parameters : Values that the lua script can access. Returned: varies (many) results : Values that the lua script passes back. This function allows calling code from an external lua file. This call is blocking. Unlike other MWSE functions, this one requires the author to manage the parameter stack via Lua. This makes for slightly more complicated scripting, but allows for this function to create shared logic. Custom functions can be written out to Lua files and invoked with this method. Example In this example we will create some values, log them, send them to Lua, confirm that we got the values, send more values back, and confirm our results. This demonstrates how to send information back and forth between the xLuaRunScript call and Lua. First, our mwscript: Begin luaexec short myShort long myLong float myFloat long myString short retShort long retLong float retFloat long retString set myShort to 1 setx myLong to xRandomLong 0 2147483647 setx myFloat to xRandomFloat 0 1 setx myString to xStringBuild \"Hello World!\" xLogMessage \"[luaexec|mwscript] Sending values: %d, %d, %f, '%s'\" myShort myLong myFloat myString setx retShort retLong retFloat retString to xLuaRunScript \"test_mod\\\\luaexec\" myShort myLong myFloat myString xLogMessage \"[luaexec|mwscript] Got results: %d, %d, %f, '%s'\" retShort, retLong, retFloat, retString StopScript luaexec End Next, we have our Lua file ( Data Files\\mods\\test_mod\\luaexec.lua ) that gets the data, prints it, and sends more back. local myShort = mwse . stack . popShort () local myLong = mwse . stack . popLong () local myFloat = mwse . stack . popFloat () local myString = mwse . stack . popString () print ( string.format ( \"[luaexec|lua] Got values: %d, %d, %f, '%s'\" , myShort , myLong , myFloat , myString )) mwse . stack . pushString ( \"poop\" ) mwse . stack . pushFloat ( 3.14 ) mwse . stack . pushLong ( 512 ) mwse . stack . pushShort ( 4 ) print ( \"[luaexec|lua] Sending back values: 4, 512, 3.14, 'poop'\" )","title":"xLuaRunScript"},{"location":"references/mwse-mwscript/magic/","text":"Magic Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xAddEffect \u2693\ufe0e Parameters: long objectType : Object Type value for the target's type. string objectID : Object ID of target spell, enchantment, or potion. long effectID : Magic Effect ID that will be added to the target. long skillAttributeID : Skill or Attribute ID to be used. (Only for absorb/damage/drain/fortify/restore effects - ignored otherwise.) long rangeType : New range type. (0 = SELF, 1 = TOUCH, 2 = TARGET) long area : Area of effect. long duration : Duration in seconds. long magMin : Minimum magnitude. long magMax : Maximum magnitude. Returned: long success : 1 if the effect was added, or 0 if it wasn't. Adds a new effect to the given spell, enchantment, or potion. Example begin Example_xAddEffect short result ; Fire Damage (14), On Touch (1), Duration (30), Magnitude (1 to 5) setx result to xAddEffect 1279610963 \"fire bite\" 14 0 1 0 30 1 5 if ( result != 0 ) MessageBox \"Your 'Fire Bite' spell has been upgraded!\" endif StopScript Example_xAddEffect end xCreateSpell \u2693\ufe0e Parameters: string ID : The object ID of the spell to create. string name : The name of the spell to create. Returned: long wasCreated : 1 if the spell was successfully created. Creates a new spell with all flags cleared, origin set to spellmaker ( 2 ) and a single Water Breathing effect and adds it to the master spell list. Note This function will fail if ID already exists or if either ID or name are longer than 31 characters. xDeleteEffect \u2693\ufe0e Parameters: long type : The Object Type to delete an effect from. Must be an alchemy, spell, or enchantment object. string id : The object ID to remove an effect from. long index : The index of the effect to remove. Must be between (inclusive) 1 and 8 . Returned: long result : 1 if the effect was deleted. Removes the effect at index from the given spell or enchantment. Other effects are reordered, e.g. if effect 1 is removed, effect 2 becomes 1 , 3 becomes 2 , etc. xDeleteSpell \u2693\ufe0e Parameters: long type : The Object Type to delete an effect from. Must be an alchemy, spell, or enchantment object. string id : The object ID to remove an effect from. long index : The index of the effect to remove. Must be between (inclusive) 1 and 8 . Returned: long result : 1 if the spell was deleted. Deletes a spell from the master spell list. It will no longer persist in save games. Notes: Be very careful using this command. The effect of deleting a spell originating from the CS is undefined. The effect of deleting a spell referenced by other entities (player, npcs, traps, etc.) in undefined. Do not attempt to add a deleted spell with AddSpell. AddSpell will succeed, but leave the game in an indeterminate state. It's not yet clear why this happens, but I hope to fix it in the future. xGetAlchemyInfo \u2693\ufe0e Parameters: string id : ID of the alchemy item to get information for. Returned: long effectCount : The number of effects on the alchemy item, between 1 and 8 . long flags : 1 = autocalc, 2 = PC Start, 4 = Always Succeeds Provides information important to a given alchemy object. Unlike the other related functions, there is no associated ability to set this information. The effects themselves can still be retrieved and modified using xGetEffectInfo and xSetEffectInfo . Tip Use this function to determine the state of a potion before modifying it with xAddEffect , xDeleteEffect or xSetEffectInfo . Example begin Example_xGetAlchemyInfo long numEffects long flags setx numEffects flags to xGetAlchemyInfo \"potion_skooma_01\" MessageBox \"flags: %g\" flags MessageBox \"numEffects: %g\" numEffects MessageBox \"potion_skooma_01\" end xGetBaseEffectInfo \u2693\ufe0e Parameters: long attributeID : The School ID to get the value of. Returned: long school : The School of the effect. float baseCost : The base cost of the effect. long flags : The flags of the effect. Returns the properties of a magic effect. This function only supports the player and NPCs. xGetEffectInfo \u2693\ufe0e Parameters: long type : The Object Type to get the effect of. string objectID : The Object ID of the object to get the effect of. long index : The effect index to get the info from, from 1 to 8. Returned: long effectId : The Effect ID _ of the effect. long skillAttribId : The Attribute or Skill ID associated with the effect, if applicable. long rangeType : 0 = self, 1 = touch, 2 = target long area : Area of effect. long duration : Duration in seconds. long magMin : Minimum magnitude. long magMax : Maximum magnitude. Returns the properties of an effect on the given alchemy item, spell, or enchantment. On failure, effectId is set to -1 . xGetEnchantInfo \u2693\ufe0e Parameters: string objectID : The Object ID of the enchantment. Returned: short type : 0 = Cast Once, 1 = Cast When Strikes, 2 = Cast When Used, 3 = Constant short cost : The cost of using the enchantment. long maxCharge : The maximum charge for the enchantment. short numEffects : The number of effects on the enchantment. long autocalc : 0 = off, 1 = on Returns info about the given enchantId , or 0 if enchantId is invalid. xGetIngredientEffect \u2693\ufe0e Parameters: string id : The id of the ingredient to fetch data for. long effectIndex : A value between 1 and 4, matching the effect index desired. Returned: long effectType : The Effect Type that the ingredient has at the given effectIndex . long skillAttributeType : The Attribute Type or Skill Type , if the effectType supports one. Otherwise will always be -1. This function allows scripts to determine the effects of a given ingredient programmatically. Scripts can alter these values as well using xSetIngredientEffect . Example begin Example_xGetIngredientEffect long effect long skillAttribute setx effect skillAttribute to xGetIngredientEffect \"food_kwama_egg_01\" 1 MessageBox \"skill / attribute: %g\" skillAttribute MessageBox \"effect: %g\" effectID MessageBox \"food_kwama_egg_01\" end xGetSpellInfo \u2693\ufe0e Parameters: string objectID : The object ID of the spell to get information from. Returned: string name : The spell's name. short type : 0 = Spell, 1 = Ability, 2 = Blight, 3 = Disease, 4 = Curse, 5 = Power. short cost : The cost to cast the spell. short numEffects : The number of effects the spell has. long flags : Bit array of spell flags. 1 = Auto-Calc, 2 = PC Starting Spell, 4 = Always Succeeds. This function gets information about a spell, given its objectID . The numEffects value is useful when looping over spell effects using xGetEffectInfo . xSetBaseEffectInfo \u2693\ufe0e Parameters: long effectID : The Magic Effect to modify. long school : New spell School . float cost : New base cost in magicka. long flags : New Magic Effect Flags . Only spellmaking, enchanting, and negative lighting are valid here. All others are ignored. Returned: long result : 1 on success, 0 on failure. This function changes the properties of the effect for all magic that uses it. Changes to school and flags take effect immediately. E.g. if you have a spell with a Fire Damage effect and you change the Fire Damage school to Alteration, casting that spell will raise Alteration instead of Destruction. Likewise, if you clear the Spellmaking or Enchanting flags, Fire Damage will no longer be available at the respective crafter. Changes to the base cost take effect on any subsequent spell or magic item creation, but don't affect any spells or items already in the game. xSetEffectInfo \u2693\ufe0e Parameters: long type : The Object Type of the object to alter. string id : The object ID of the object to alter. long index : The index of the effect to alter. long effectID : The Effect Type to change to. long skillOrAttributeID : The Attribute or Skill ID to use, if the effectID uses one. long rangeType : 0 = self, 1 = touch, 2 = target. long area : Area of effect. long duration : Effect duration (in seconds). long minimumMagnitude : Minimum magnitude. long maximumMagnitude : Maximum magnitude. Returned: long result : 1 on success, 0 on failure. Modifies an existing effect on the given spell or enchantment. xSetEnchantInfo \u2693\ufe0e Parameters: string enchantID : Object ID of the enchantment to modify. long type : 0 = cast once, 1 = cast when strikes, 2 = cast when used, 3 = constant. long cost : New cost per use. long charge : New maximum charge. long autoCalc : 0 = off, 1 = on. Returned: long result : 1 on success, 0 on failure. Sets the properties of the given enchantId . xSetIngredientEffect \u2693\ufe0e Parameters: string id : The id of the ingredient to fetch data for. long effectIndex : A value between 1 and 4 , matching the effect index desired. long effectType : The Effect Type that the ingredient has at the given effectIndex . long skillAttributeType : The Attribute Type or Skill Type , if the effectType supports one. Returned: long success : If the effect was set, this value is 1 . If it failed, the value is 0 . This function allows scripts to modify the effects of an ingredient programmatically. To instead retrieve these values, use xGetIngredientEffect . ??? example Set an ingredient's first effect. begin WheatAllergy long ingred long index long effect long attrib setx ingred to xStringBuild \"ingred_bread_01\" set index to 1 ; First Slot set effect to 22 ; Damage Attribute set attrib to 0 ; Strength xSetIngredientEffect ingred index effect attrib ; in this case, we could've also used literals xSetIngredientEffect \"ingred_bread_01\" 1 22 0 ; needs to run only once per session StopScript WheatAllergy end xSetSpellInfo \u2693\ufe0e Parameters: string spellID : The spell ID to modify. string spellName : New display name. Names longer than 31 characters will be truncated. long type : New spell type. ( 0 = spell, 1 = ability, 2 = blight, 3 = disease, 4 = curse, 5 = power) long cost : New magicka cost. long flags : New flags. ( 1 = autocalc, 2 = player start, 4 = always succeeds) long origin : New origin. ( 1 = module, not saved in .ess; 2 = spellmaker, saved in .ess; 0 to leave unmodified) Returned: short result : 1 if the function was successfull, other wise 0 .","title":"Magic Functions"},{"location":"references/mwse-mwscript/magic/#magic-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Magic Functions"},{"location":"references/mwse-mwscript/magic/#xaddeffect","text":"Parameters: long objectType : Object Type value for the target's type. string objectID : Object ID of target spell, enchantment, or potion. long effectID : Magic Effect ID that will be added to the target. long skillAttributeID : Skill or Attribute ID to be used. (Only for absorb/damage/drain/fortify/restore effects - ignored otherwise.) long rangeType : New range type. (0 = SELF, 1 = TOUCH, 2 = TARGET) long area : Area of effect. long duration : Duration in seconds. long magMin : Minimum magnitude. long magMax : Maximum magnitude. Returned: long success : 1 if the effect was added, or 0 if it wasn't. Adds a new effect to the given spell, enchantment, or potion. Example begin Example_xAddEffect short result ; Fire Damage (14), On Touch (1), Duration (30), Magnitude (1 to 5) setx result to xAddEffect 1279610963 \"fire bite\" 14 0 1 0 30 1 5 if ( result != 0 ) MessageBox \"Your 'Fire Bite' spell has been upgraded!\" endif StopScript Example_xAddEffect end","title":"xAddEffect"},{"location":"references/mwse-mwscript/magic/#xcreatespell","text":"Parameters: string ID : The object ID of the spell to create. string name : The name of the spell to create. Returned: long wasCreated : 1 if the spell was successfully created. Creates a new spell with all flags cleared, origin set to spellmaker ( 2 ) and a single Water Breathing effect and adds it to the master spell list. Note This function will fail if ID already exists or if either ID or name are longer than 31 characters.","title":"xCreateSpell"},{"location":"references/mwse-mwscript/magic/#xdeleteeffect","text":"Parameters: long type : The Object Type to delete an effect from. Must be an alchemy, spell, or enchantment object. string id : The object ID to remove an effect from. long index : The index of the effect to remove. Must be between (inclusive) 1 and 8 . Returned: long result : 1 if the effect was deleted. Removes the effect at index from the given spell or enchantment. Other effects are reordered, e.g. if effect 1 is removed, effect 2 becomes 1 , 3 becomes 2 , etc.","title":"xDeleteEffect"},{"location":"references/mwse-mwscript/magic/#xdeletespell","text":"Parameters: long type : The Object Type to delete an effect from. Must be an alchemy, spell, or enchantment object. string id : The object ID to remove an effect from. long index : The index of the effect to remove. Must be between (inclusive) 1 and 8 . Returned: long result : 1 if the spell was deleted. Deletes a spell from the master spell list. It will no longer persist in save games. Notes: Be very careful using this command. The effect of deleting a spell originating from the CS is undefined. The effect of deleting a spell referenced by other entities (player, npcs, traps, etc.) in undefined. Do not attempt to add a deleted spell with AddSpell. AddSpell will succeed, but leave the game in an indeterminate state. It's not yet clear why this happens, but I hope to fix it in the future.","title":"xDeleteSpell"},{"location":"references/mwse-mwscript/magic/#xgetalchemyinfo","text":"Parameters: string id : ID of the alchemy item to get information for. Returned: long effectCount : The number of effects on the alchemy item, between 1 and 8 . long flags : 1 = autocalc, 2 = PC Start, 4 = Always Succeeds Provides information important to a given alchemy object. Unlike the other related functions, there is no associated ability to set this information. The effects themselves can still be retrieved and modified using xGetEffectInfo and xSetEffectInfo . Tip Use this function to determine the state of a potion before modifying it with xAddEffect , xDeleteEffect or xSetEffectInfo . Example begin Example_xGetAlchemyInfo long numEffects long flags setx numEffects flags to xGetAlchemyInfo \"potion_skooma_01\" MessageBox \"flags: %g\" flags MessageBox \"numEffects: %g\" numEffects MessageBox \"potion_skooma_01\" end","title":"xGetAlchemyInfo"},{"location":"references/mwse-mwscript/magic/#xgetbaseeffectinfo","text":"Parameters: long attributeID : The School ID to get the value of. Returned: long school : The School of the effect. float baseCost : The base cost of the effect. long flags : The flags of the effect. Returns the properties of a magic effect. This function only supports the player and NPCs.","title":"xGetBaseEffectInfo"},{"location":"references/mwse-mwscript/magic/#xgeteffectinfo","text":"Parameters: long type : The Object Type to get the effect of. string objectID : The Object ID of the object to get the effect of. long index : The effect index to get the info from, from 1 to 8. Returned: long effectId : The Effect ID _ of the effect. long skillAttribId : The Attribute or Skill ID associated with the effect, if applicable. long rangeType : 0 = self, 1 = touch, 2 = target long area : Area of effect. long duration : Duration in seconds. long magMin : Minimum magnitude. long magMax : Maximum magnitude. Returns the properties of an effect on the given alchemy item, spell, or enchantment. On failure, effectId is set to -1 .","title":"xGetEffectInfo"},{"location":"references/mwse-mwscript/magic/#xgetenchantinfo","text":"Parameters: string objectID : The Object ID of the enchantment. Returned: short type : 0 = Cast Once, 1 = Cast When Strikes, 2 = Cast When Used, 3 = Constant short cost : The cost of using the enchantment. long maxCharge : The maximum charge for the enchantment. short numEffects : The number of effects on the enchantment. long autocalc : 0 = off, 1 = on Returns info about the given enchantId , or 0 if enchantId is invalid.","title":"xGetEnchantInfo"},{"location":"references/mwse-mwscript/magic/#xgetingredienteffect","text":"Parameters: string id : The id of the ingredient to fetch data for. long effectIndex : A value between 1 and 4, matching the effect index desired. Returned: long effectType : The Effect Type that the ingredient has at the given effectIndex . long skillAttributeType : The Attribute Type or Skill Type , if the effectType supports one. Otherwise will always be -1. This function allows scripts to determine the effects of a given ingredient programmatically. Scripts can alter these values as well using xSetIngredientEffect . Example begin Example_xGetIngredientEffect long effect long skillAttribute setx effect skillAttribute to xGetIngredientEffect \"food_kwama_egg_01\" 1 MessageBox \"skill / attribute: %g\" skillAttribute MessageBox \"effect: %g\" effectID MessageBox \"food_kwama_egg_01\" end","title":"xGetIngredientEffect"},{"location":"references/mwse-mwscript/magic/#xgetspellinfo","text":"Parameters: string objectID : The object ID of the spell to get information from. Returned: string name : The spell's name. short type : 0 = Spell, 1 = Ability, 2 = Blight, 3 = Disease, 4 = Curse, 5 = Power. short cost : The cost to cast the spell. short numEffects : The number of effects the spell has. long flags : Bit array of spell flags. 1 = Auto-Calc, 2 = PC Starting Spell, 4 = Always Succeeds. This function gets information about a spell, given its objectID . The numEffects value is useful when looping over spell effects using xGetEffectInfo .","title":"xGetSpellInfo"},{"location":"references/mwse-mwscript/magic/#xsetbaseeffectinfo","text":"Parameters: long effectID : The Magic Effect to modify. long school : New spell School . float cost : New base cost in magicka. long flags : New Magic Effect Flags . Only spellmaking, enchanting, and negative lighting are valid here. All others are ignored. Returned: long result : 1 on success, 0 on failure. This function changes the properties of the effect for all magic that uses it. Changes to school and flags take effect immediately. E.g. if you have a spell with a Fire Damage effect and you change the Fire Damage school to Alteration, casting that spell will raise Alteration instead of Destruction. Likewise, if you clear the Spellmaking or Enchanting flags, Fire Damage will no longer be available at the respective crafter. Changes to the base cost take effect on any subsequent spell or magic item creation, but don't affect any spells or items already in the game.","title":"xSetBaseEffectInfo"},{"location":"references/mwse-mwscript/magic/#xseteffectinfo","text":"Parameters: long type : The Object Type of the object to alter. string id : The object ID of the object to alter. long index : The index of the effect to alter. long effectID : The Effect Type to change to. long skillOrAttributeID : The Attribute or Skill ID to use, if the effectID uses one. long rangeType : 0 = self, 1 = touch, 2 = target. long area : Area of effect. long duration : Effect duration (in seconds). long minimumMagnitude : Minimum magnitude. long maximumMagnitude : Maximum magnitude. Returned: long result : 1 on success, 0 on failure. Modifies an existing effect on the given spell or enchantment.","title":"xSetEffectInfo"},{"location":"references/mwse-mwscript/magic/#xsetenchantinfo","text":"Parameters: string enchantID : Object ID of the enchantment to modify. long type : 0 = cast once, 1 = cast when strikes, 2 = cast when used, 3 = constant. long cost : New cost per use. long charge : New maximum charge. long autoCalc : 0 = off, 1 = on. Returned: long result : 1 on success, 0 on failure. Sets the properties of the given enchantId .","title":"xSetEnchantInfo"},{"location":"references/mwse-mwscript/magic/#xsetingredienteffect","text":"Parameters: string id : The id of the ingredient to fetch data for. long effectIndex : A value between 1 and 4 , matching the effect index desired. long effectType : The Effect Type that the ingredient has at the given effectIndex . long skillAttributeType : The Attribute Type or Skill Type , if the effectType supports one. Returned: long success : If the effect was set, this value is 1 . If it failed, the value is 0 . This function allows scripts to modify the effects of an ingredient programmatically. To instead retrieve these values, use xGetIngredientEffect . ??? example Set an ingredient's first effect. begin WheatAllergy long ingred long index long effect long attrib setx ingred to xStringBuild \"ingred_bread_01\" set index to 1 ; First Slot set effect to 22 ; Damage Attribute set attrib to 0 ; Strength xSetIngredientEffect ingred index effect attrib ; in this case, we could've also used literals xSetIngredientEffect \"ingred_bread_01\" 1 22 0 ; needs to run only once per session StopScript WheatAllergy end","title":"xSetIngredientEffect"},{"location":"references/mwse-mwscript/magic/#xsetspellinfo","text":"Parameters: string spellID : The spell ID to modify. string spellName : New display name. Names longer than 31 characters will be truncated. long type : New spell type. ( 0 = spell, 1 = ability, 2 = blight, 3 = disease, 4 = curse, 5 = power) long cost : New magicka cost. long flags : New flags. ( 1 = autocalc, 2 = player start, 4 = always succeeds) long origin : New origin. ( 1 = module, not saved in .ess; 2 = spellmaker, saved in .ess; 0 to leave unmodified) Returned: short result : 1 if the function was successfull, other wise 0 .","title":"xSetSpellInfo"},{"location":"references/mwse-mwscript/math/","text":"Math Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xArcCos \u2693\ufe0e Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the inverse trigonometric function arccosine on the given angle . xArcSin \u2693\ufe0e Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the inverse trigonometric function arcsine on the given angle . xArcTan \u2693\ufe0e Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the inverse trigonometric function arctangent on the given angle . xArcTan2 \u2693\ufe0e Parameters: float x : The angle to take the trigonometric function of. float y : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the inverse trigonometric function arctan2 on y / x . xBitAnd \u2693\ufe0e Parameters: long leftValue : First value for the bitwise operation. long rightValue : Second value for the bitwise operation. Returned: long result : 1 if the bitwise operation returns true. This function performs an AND bitwise operation, and returns its result. A B xBitAnd A B 0000 0000 0000 0101 1010 0000 1100 1111 1100 1111 0000 0000 xBitNot \u2693\ufe0e Parameters: long leftValue : Value for the bitwise operation. Returned: long result : 1 if the bitwise operation returns true. This function performs a NOT bitwise operation, and returns its result. A xBitNot A 0000 1111 0101 1010 1100 0011 1111 0000 xBitOr \u2693\ufe0e Parameters: long leftValue : First value for the bitwise operation. long rightValue : Second value for the bitwise operation. Returned: long result : 1 if the bitwise operation returns true. This function performs an OR bitwise operation, and returns its result. A B xBitOr A B 0000 0000 0000 0101 1010 1111 1100 1111 1111 1111 0000 1111 xBitXor \u2693\ufe0e Parameters: long leftValue : First value for the bitwise operation. long rightValue : Second value for the bitwise operation. Returned: long result : 1 if the bitwise operation returns true. This function performs an XOR bitwise operation, and returns its result. A B xBitXor A B 0000 0000 0000 0101 1010 1111 1100 1111 0011 1111 0000 1111 xCos \u2693\ufe0e Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the trigonometric function cosine on the given angle . xDegRad \u2693\ufe0e Parameters: float angle : An angle, in degrees. Returned: float result : The value of angle in radians. This simple function converts from degrees to radians. xFloatsToLong \u2693\ufe0e Parameters: float value1 : First value. Order doesn't matter. float value2 : Second value. Order doesn't matter. Returned: long result : Merged value from value1 and value2 . This function retrieves a long value using a pair of floats. It is intended to work around the issue that all globals are really floats. This work by splitting the long 32-bit value into two 16-bit values and adding a flag to indicate which value maps to the high 16 bits. Argument order doesn't matter. Warning MWEdit doesn't like to compile these functions with globals as arguments, and temporary locals will need to be used instead. Example long lVal1 long lVal2 float fVal1 float fVal2 set lVal1 to 2147483647 setx fVal1 fVal2 to xLongToFloats lVal1 setx lVal2 to xFloatsToLong fVal1 fVal2 if ( lVal1 == lVal2 ) MessageBox \"Success!\" else MessageBox \"Failure!\" endif Hypot \u2693\ufe0e Parameters: float x : float y : Returned: float hypotenuse : xHypot returns the hypotenuse for sides a and b, c = sqrt(a a + b b). Unlike xSqrt this is more efficient than calculating the formula inside the script. xLongToFloats \u2693\ufe0e Parameters: long value : Value to split. Returned: float result1 : First half of the split value . float result2 : Second half of the split value . This function stores a long value using a pair of floats. It is intended to work around the issue that all globals are really floats. This work by splitting the long 32-bit value into two 16-bit values and adding a flag to indicate which value maps to the high 16 bits. Argument order doesn't matter. Warning MWEdit doesn't like to compile these functions with globals as arguments, and temporary locals will need to be used instead. Example long lVal1 long lVal2 float fVal1 float fVal2 set lVal1 to 2147483647 setx fVal1 fVal2 to xLongToFloats lVal1 setx lVal2 to xFloatsToLong fVal1 fVal2 if ( lVal1 == lVal2 ) MessageBox \"Success!\" else MessageBox \"Failure!\" endif xPow \u2693\ufe0e Parameters: float base : Base value. float exponent : Exponent to calculate. Returned: float result : Result of the function. Calculates the value of base raised to exponent . xDegRad \u2693\ufe0e Parameters: float angle : An angle, in radians. Returned: float result : The value of angle in degrees. This simple function converts from radians to degrees. xRandomFloat \u2693\ufe0e Parameters: float minimum : Lowest value to return. float maximum : Highest value to return. Returned: float result : A random value between minimum and maximum . This function returns a random float value. xRandomLong \u2693\ufe0e Parameters: long minimum : Lowest value to return. long maximum : Highest value to return. Returned: long result : A random value between minimum and maximum . This function returns a random long value. xShift \u2693\ufe0e Parameters: long value : The value to shift. long magnitude : The number of bits to shift. If negative, the bits will be reverse-shifted. Returned: long result : value , shifted magnitude bits. This function allows shifting a value by a number of bits equal to magnitude . xSin \u2693\ufe0e Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the trigonometric function sine on the given angle . xSqrt \u2693\ufe0e Parameters: float value : Value to take the square root of. Returned: float result : Result of the function. Calculates the square root of value . xTan \u2693\ufe0e Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the trigonometric function tangent on the given angle .","title":"Math Functions"},{"location":"references/mwse-mwscript/math/#math-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Math Functions"},{"location":"references/mwse-mwscript/math/#xarccos","text":"Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the inverse trigonometric function arccosine on the given angle .","title":"xArcCos"},{"location":"references/mwse-mwscript/math/#xarcsin","text":"Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the inverse trigonometric function arcsine on the given angle .","title":"xArcSin"},{"location":"references/mwse-mwscript/math/#xarctan","text":"Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the inverse trigonometric function arctangent on the given angle .","title":"xArcTan"},{"location":"references/mwse-mwscript/math/#xarctan2","text":"Parameters: float x : The angle to take the trigonometric function of. float y : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the inverse trigonometric function arctan2 on y / x .","title":"xArcTan2"},{"location":"references/mwse-mwscript/math/#xbitand","text":"Parameters: long leftValue : First value for the bitwise operation. long rightValue : Second value for the bitwise operation. Returned: long result : 1 if the bitwise operation returns true. This function performs an AND bitwise operation, and returns its result. A B xBitAnd A B 0000 0000 0000 0101 1010 0000 1100 1111 1100 1111 0000 0000","title":"xBitAnd"},{"location":"references/mwse-mwscript/math/#xbitnot","text":"Parameters: long leftValue : Value for the bitwise operation. Returned: long result : 1 if the bitwise operation returns true. This function performs a NOT bitwise operation, and returns its result. A xBitNot A 0000 1111 0101 1010 1100 0011 1111 0000","title":"xBitNot"},{"location":"references/mwse-mwscript/math/#xbitor","text":"Parameters: long leftValue : First value for the bitwise operation. long rightValue : Second value for the bitwise operation. Returned: long result : 1 if the bitwise operation returns true. This function performs an OR bitwise operation, and returns its result. A B xBitOr A B 0000 0000 0000 0101 1010 1111 1100 1111 1111 1111 0000 1111","title":"xBitOr"},{"location":"references/mwse-mwscript/math/#xbitxor","text":"Parameters: long leftValue : First value for the bitwise operation. long rightValue : Second value for the bitwise operation. Returned: long result : 1 if the bitwise operation returns true. This function performs an XOR bitwise operation, and returns its result. A B xBitXor A B 0000 0000 0000 0101 1010 1111 1100 1111 0011 1111 0000 1111","title":"xBitXor"},{"location":"references/mwse-mwscript/math/#xcos","text":"Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the trigonometric function cosine on the given angle .","title":"xCos"},{"location":"references/mwse-mwscript/math/#xdegrad","text":"Parameters: float angle : An angle, in degrees. Returned: float result : The value of angle in radians. This simple function converts from degrees to radians.","title":"xDegRad"},{"location":"references/mwse-mwscript/math/#xfloatstolong","text":"Parameters: float value1 : First value. Order doesn't matter. float value2 : Second value. Order doesn't matter. Returned: long result : Merged value from value1 and value2 . This function retrieves a long value using a pair of floats. It is intended to work around the issue that all globals are really floats. This work by splitting the long 32-bit value into two 16-bit values and adding a flag to indicate which value maps to the high 16 bits. Argument order doesn't matter. Warning MWEdit doesn't like to compile these functions with globals as arguments, and temporary locals will need to be used instead. Example long lVal1 long lVal2 float fVal1 float fVal2 set lVal1 to 2147483647 setx fVal1 fVal2 to xLongToFloats lVal1 setx lVal2 to xFloatsToLong fVal1 fVal2 if ( lVal1 == lVal2 ) MessageBox \"Success!\" else MessageBox \"Failure!\" endif","title":"xFloatsToLong"},{"location":"references/mwse-mwscript/math/#hypot","text":"Parameters: float x : float y : Returned: float hypotenuse : xHypot returns the hypotenuse for sides a and b, c = sqrt(a a + b b). Unlike xSqrt this is more efficient than calculating the formula inside the script.","title":"Hypot"},{"location":"references/mwse-mwscript/math/#xlongtofloats","text":"Parameters: long value : Value to split. Returned: float result1 : First half of the split value . float result2 : Second half of the split value . This function stores a long value using a pair of floats. It is intended to work around the issue that all globals are really floats. This work by splitting the long 32-bit value into two 16-bit values and adding a flag to indicate which value maps to the high 16 bits. Argument order doesn't matter. Warning MWEdit doesn't like to compile these functions with globals as arguments, and temporary locals will need to be used instead. Example long lVal1 long lVal2 float fVal1 float fVal2 set lVal1 to 2147483647 setx fVal1 fVal2 to xLongToFloats lVal1 setx lVal2 to xFloatsToLong fVal1 fVal2 if ( lVal1 == lVal2 ) MessageBox \"Success!\" else MessageBox \"Failure!\" endif","title":"xLongToFloats"},{"location":"references/mwse-mwscript/math/#xpow","text":"Parameters: float base : Base value. float exponent : Exponent to calculate. Returned: float result : Result of the function. Calculates the value of base raised to exponent .","title":"xPow"},{"location":"references/mwse-mwscript/math/#xdegrad_1","text":"Parameters: float angle : An angle, in radians. Returned: float result : The value of angle in degrees. This simple function converts from radians to degrees.","title":"xDegRad"},{"location":"references/mwse-mwscript/math/#xrandomfloat","text":"Parameters: float minimum : Lowest value to return. float maximum : Highest value to return. Returned: float result : A random value between minimum and maximum . This function returns a random float value.","title":"xRandomFloat"},{"location":"references/mwse-mwscript/math/#xrandomlong","text":"Parameters: long minimum : Lowest value to return. long maximum : Highest value to return. Returned: long result : A random value between minimum and maximum . This function returns a random long value.","title":"xRandomLong"},{"location":"references/mwse-mwscript/math/#xshift","text":"Parameters: long value : The value to shift. long magnitude : The number of bits to shift. If negative, the bits will be reverse-shifted. Returned: long result : value , shifted magnitude bits. This function allows shifting a value by a number of bits equal to magnitude .","title":"xShift"},{"location":"references/mwse-mwscript/math/#xsin","text":"Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the trigonometric function sine on the given angle .","title":"xSin"},{"location":"references/mwse-mwscript/math/#xsqrt","text":"Parameters: float value : Value to take the square root of. Returned: float result : Result of the function. Calculates the square root of value .","title":"xSqrt"},{"location":"references/mwse-mwscript/math/#xtan","text":"Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the trigonometric function tangent on the given angle .","title":"xTan"},{"location":"references/mwse-mwscript/player/","text":"Player Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xGetPCTarget \u2693\ufe0e Parameters: None Returned: long reference : The target reference, or 0 if none was found. Returns a reference to the object in the player's crosshair, or 0 if the player is not looking at anything that can be manipulated. xGetProgressLevel \u2693\ufe0e Parameters: None Returned: long progress : The player's progress to next level. Returns the current progress to the next level. xGetProgressSkill \u2693\ufe0e Parameters: long skillID : The Skill ID to get the progress of. Returned: float raw : Raw skill progress value. float normalized : Normalized skill progress value. Returns the skill progress for the given skill ID. Returned values will be zero if skill ID is invalid. xSetSkillInfo \u2693\ufe0e Parameters: long skillID : 1 if the effect was added, or 0 if it wasn't. Returned: long skillID : ID of the Skill to be modified. long attributeID : ID of the new governing Attribute . long specialization : The new Specialization Type . float action1 : Progress value for the 1st action. float action2 : Progress value for the 2nd action. float action3 : Progress value for the 3rd action. float action4 : Progress value for the 4th action. All parameters seem to take effect immediately. There may be side-effects other than those listed below that I have not discovered yet. Changing the governing attribute will cause any subsequent skill-ups to count toward that attribute at level-up. (Which implies they're counted, not inferred, and could be modified. Stay tuned...) Changing the specialization will cause the target progress needed for skill up to change. This function invokes the native skill-up function when changing specialization, in case the change would cause progress to reach 100. Actions can be set a negative value, in which case they'll remove progress, but progress will never go below zero. Example setx attribute specialization action1 action2 action3 action4 to xGetSkillInfo 9 xModProgressLevel \u2693\ufe0e Parameters: long value : Value added toward the player's progress to next level. Returned: short result : 1 if successful, otherwise 0 . Adds value to the progress to the next player level. If the new progress value is less than zero, it's set to zero instead. Returns non-zero on success, zero on failure. xModProgressSkill \u2693\ufe0e Parameters: long skillID : The Skill ID to modify. float value : The value to modify the skill's progress by. long normalized : flag indicating whether value is raw ( 0 ) or normalized ( 1 ) Returned: short result : 1 if successful, otherwise 0 . Modifies the current progress for the given skill. If the new progress value is less than zero, it's set to zero instead. Returns non-zero on success, zero on failure. This function will fail if skill ID is out of range. xPCCellID \u2693\ufe0e Parameters: None Returned: string cellID : The player's current cell ID. Returns a string containing the name of the current cell. xPlace \u2693\ufe0e Parameters: string objectID : The object ID of the item to add. Returned: reference placedObject : The reference to the placed object. This is based on the vanilla PlaceAtPC function that can take variable objectID . Unlike the original function, xPlace does not allow specifying a count or location for the placed object. xPlace returns a reference to the placedObject that can be used to take further actions or obtain further information. Note Unlike previous version of MWSE, the reference returned from xPlace is immediately available on the same frame it was created. xSetProgressLevel \u2693\ufe0e Parameters: long progress : New value for the player's progress to next level. Returned: short result : 1 if successful, otherwise 0 . Sets the progress to next level. There are some limits to what you can do with this, because of how the game handles this and other values. Progress is stored in memory as a signed long (32 bits, max value = 2147483647 ). Progress is stored in the save file as an unsigned char (8 bits, max value = 255 ). Progress is cast to a float before being displayed on the character screen. This appears to be true for iLevelupTotal as well. xSetProgressSkill \u2693\ufe0e Parameters: long skillID : The Skill ID to modify. float value : The value to set the skill's progress to. long normalized : Flag indicating whether value is raw ( 0 ) or normalized ( 1 ) Returned: short result : 1 if successful, otherwise 0 . Sets the current progress for the given skill. If the new progress value is less than zero, it's set to zero instead. Returns non-zero on success, zero on failure. This function will fail if skill ID is out of range. xSetSkillInfo \u2693\ufe0e Parameters: long skillID : ID of the Skill to be modified. long attributeID : ID of the new governing Attribute . long specialization : The new Specialization Type . float action1 : Progress value for the 1st action. float action2 : Progress value for the 2nd action. float action3 : Progress value for the 3rd action. float action4 : Progress value for the 4th action. Returned: long success : 1 if the effect was added, or 0 if it wasn't. All parameters seem to take effect immediately. There may be side-effects other than those listed below that I have not discovered yet. Changing the governing attribute will cause any subsequent skill-ups to count toward that attribute at level-up. (Which implies they're counted, not inferred, and could be modified. Stay tuned...) Changing the specialization will cause the target progress needed for skill up to change. This function invokes the native skill-up function when changing specialization, in case the change would cause progress to reach 100. Actions can be set a negative value, in which case they'll remove progress, but progress will never go below zero.","title":"Player Functions"},{"location":"references/mwse-mwscript/player/#player-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Player Functions"},{"location":"references/mwse-mwscript/player/#xgetpctarget","text":"Parameters: None Returned: long reference : The target reference, or 0 if none was found. Returns a reference to the object in the player's crosshair, or 0 if the player is not looking at anything that can be manipulated.","title":"xGetPCTarget"},{"location":"references/mwse-mwscript/player/#xgetprogresslevel","text":"Parameters: None Returned: long progress : The player's progress to next level. Returns the current progress to the next level.","title":"xGetProgressLevel"},{"location":"references/mwse-mwscript/player/#xgetprogressskill","text":"Parameters: long skillID : The Skill ID to get the progress of. Returned: float raw : Raw skill progress value. float normalized : Normalized skill progress value. Returns the skill progress for the given skill ID. Returned values will be zero if skill ID is invalid.","title":"xGetProgressSkill"},{"location":"references/mwse-mwscript/player/#xsetskillinfo","text":"Parameters: long skillID : 1 if the effect was added, or 0 if it wasn't. Returned: long skillID : ID of the Skill to be modified. long attributeID : ID of the new governing Attribute . long specialization : The new Specialization Type . float action1 : Progress value for the 1st action. float action2 : Progress value for the 2nd action. float action3 : Progress value for the 3rd action. float action4 : Progress value for the 4th action. All parameters seem to take effect immediately. There may be side-effects other than those listed below that I have not discovered yet. Changing the governing attribute will cause any subsequent skill-ups to count toward that attribute at level-up. (Which implies they're counted, not inferred, and could be modified. Stay tuned...) Changing the specialization will cause the target progress needed for skill up to change. This function invokes the native skill-up function when changing specialization, in case the change would cause progress to reach 100. Actions can be set a negative value, in which case they'll remove progress, but progress will never go below zero. Example setx attribute specialization action1 action2 action3 action4 to xGetSkillInfo 9","title":"xSetSkillInfo"},{"location":"references/mwse-mwscript/player/#xmodprogresslevel","text":"Parameters: long value : Value added toward the player's progress to next level. Returned: short result : 1 if successful, otherwise 0 . Adds value to the progress to the next player level. If the new progress value is less than zero, it's set to zero instead. Returns non-zero on success, zero on failure.","title":"xModProgressLevel"},{"location":"references/mwse-mwscript/player/#xmodprogressskill","text":"Parameters: long skillID : The Skill ID to modify. float value : The value to modify the skill's progress by. long normalized : flag indicating whether value is raw ( 0 ) or normalized ( 1 ) Returned: short result : 1 if successful, otherwise 0 . Modifies the current progress for the given skill. If the new progress value is less than zero, it's set to zero instead. Returns non-zero on success, zero on failure. This function will fail if skill ID is out of range.","title":"xModProgressSkill"},{"location":"references/mwse-mwscript/player/#xpccellid","text":"Parameters: None Returned: string cellID : The player's current cell ID. Returns a string containing the name of the current cell.","title":"xPCCellID"},{"location":"references/mwse-mwscript/player/#xplace","text":"Parameters: string objectID : The object ID of the item to add. Returned: reference placedObject : The reference to the placed object. This is based on the vanilla PlaceAtPC function that can take variable objectID . Unlike the original function, xPlace does not allow specifying a count or location for the placed object. xPlace returns a reference to the placedObject that can be used to take further actions or obtain further information. Note Unlike previous version of MWSE, the reference returned from xPlace is immediately available on the same frame it was created.","title":"xPlace"},{"location":"references/mwse-mwscript/player/#xsetprogresslevel","text":"Parameters: long progress : New value for the player's progress to next level. Returned: short result : 1 if successful, otherwise 0 . Sets the progress to next level. There are some limits to what you can do with this, because of how the game handles this and other values. Progress is stored in memory as a signed long (32 bits, max value = 2147483647 ). Progress is stored in the save file as an unsigned char (8 bits, max value = 255 ). Progress is cast to a float before being displayed on the character screen. This appears to be true for iLevelupTotal as well.","title":"xSetProgressLevel"},{"location":"references/mwse-mwscript/player/#xsetprogressskill","text":"Parameters: long skillID : The Skill ID to modify. float value : The value to set the skill's progress to. long normalized : Flag indicating whether value is raw ( 0 ) or normalized ( 1 ) Returned: short result : 1 if successful, otherwise 0 . Sets the current progress for the given skill. If the new progress value is less than zero, it's set to zero instead. Returns non-zero on success, zero on failure. This function will fail if skill ID is out of range.","title":"xSetProgressSkill"},{"location":"references/mwse-mwscript/player/#xsetskillinfo_1","text":"Parameters: long skillID : ID of the Skill to be modified. long attributeID : ID of the new governing Attribute . long specialization : The new Specialization Type . float action1 : Progress value for the 1st action. float action2 : Progress value for the 2nd action. float action3 : Progress value for the 3rd action. float action4 : Progress value for the 4th action. Returned: long success : 1 if the effect was added, or 0 if it wasn't. All parameters seem to take effect immediately. There may be side-effects other than those listed below that I have not discovered yet. Changing the governing attribute will cause any subsequent skill-ups to count toward that attribute at level-up. (Which implies they're counted, not inferred, and could be modified. Stay tuned...) Changing the specialization will cause the target progress needed for skill up to change. This function invokes the native skill-up function when changing specialization, in case the change would cause progress to reach 100. Actions can be set a negative value, in which case they'll remove progress, but progress will never go below zero.","title":"xSetSkillInfo"},{"location":"references/mwse-mwscript/reference/","text":"Reference Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xAddItem \u2693\ufe0e Parameters: string objectID : The object ID of the item to add. long count : The number of items to add. Returned: None This is a wrapper for the vanilla AddItem function that can take variable input. xDistance \u2693\ufe0e Parameters: reference target : The reference of the target to get the distance from. Returned: float distance : The distance between the calling reference and the target reference. Calculates the distance between the calling reference and target . .. note:: Unlike the vanilla GetDistance function, this function will work on non-actors. Distance from PC Target This example calculates the distance between the PC and what they are looking at. begin DistanceToTarget long pcRef long targetRef float distance setx pcRef to xGetRef \"player\" setx targetRef to xGetPCTarget setx distance to pcRef->xDistance targetRef end xExplodeSpell \u2693\ufe0e Parameters: string objectID : The object ID of the spell to explode. Returned: None This is a wrapper for the vanilla ExplodeSpell function that can take variable input. xGetBaseID \u2693\ufe0e Parameters: None Returned: string id : The reference's base object ID. xGetBaseID returns reference's base object ID. In contrast to xRefID , this function will not include the hexadecimal suffix that identifies unique instances of containers, creatures, or NPCs. For example, where xRefID would return \"Fargoth00000000\" , xGetBaseID would instead return just \"Fargoth\" . xGetCharge \u2693\ufe0e Parameters: None Returned: float charge : The current charge on a item. Returns the current charge on a 'cast when used' or 'cast when strikes' enchanted item. Constant effect and non-enchanted items return 0 . xGetCondition \u2693\ufe0e Parameters: None Returned: float condition : The current condition on a item. Returns the current condition for armor and weapons and remaining uses for lockpicks, probes, and repair tools. xGetEnchant \u2693\ufe0e Parameters: None Returned: string enchantID : The Object ID of the enchantment. short type : The type of the enchantment. 0 = Cast Once, 1 = Cast on Strike, 2 = Cast on Use, 3 = Constant short cost : The cost of the enchantment. float currentCharge : The current charge for the enchantment. long maxCharge : The maximum charge for the enchantment. short numEffect : The number of effects on the enchantment. long autocalc : 1 if the enchantment is auto-calculated. Returns info about the enchantment on the target item, or 0 if no enchantment is present. xGetEncumb \u2693\ufe0e Parameters: None Returned: float weight : The weight, in pounds, of all the reference's inventory. This value is negative if leveled items are present. Calculates the total, unmodified encumbrance of the target reference's inventory. This function does not take into account any feather or burden spell effects. Note If the target has any leveled items in its inventory, the returned weight is negative. xGetItemCount \u2693\ufe0e Parameters: string objectId : The item's object ID to get the count of. Returned: long itemCount : The number of items that the reference has. This is a wrapper function around GetItemCount that allows variable input. Example begin Example_xGetItemCount long ref long id long count setx ref to xGetRef \"player\" setx id to xStringBuild \"Gold_001\" setx count to ref->xGetItemCount id MessageBox \"Total Gold: %g\" count StopScript Example_xGetItemCount end xGetLockLevel \u2693\ufe0e Parameters: None Returned: short lockLevel : The reference's lock level, or -1 if none was found. Returns the lock level of a door or container. This function returns -1 for doors/containers that have never been locked and for items that aren't doors or containers. This returns the lock level regardless of whether the item is locked or unlocked. Use GetLocked to determine the state of the lock. Lock level is stored as a signed short (16 bits, max value = 32,767). Values less than 0 do not survive saving, exiting, and reloading. They are converted to their absolute value and the door/container is flagged as unlocked. xGetMaxCharge \u2693\ufe0e Parameters: None Returned: float maxCharge : The current charge on a item. Returns the maximum charge on an enchanted item. xGetMaxCondition \u2693\ufe0e Parameters: None Returned: float maxCondition : The current maximum condition on a item. Returns the maxium condition for armor and weapons and maximum uses for lockpicks, probes, and repair tools. xGetModel \u2693\ufe0e Parameters: string objectId : The object ID to get the model of. If 0, the reference will be used. Returned: string modelPath : The path to the model. This function returns the model of an object. This can be done by passing a string for the object Id, or 0 can be passed to use the script's reference. Note The path returned does not include the Data Files\\models prefix. Get Model by Object ID begin Example_xGetModelById long model setx model to xGetModel \"ingred_bonemeal_01\" if ( model == 0 ) return endif xMessageFix \"Model: %s\" model MessageBox \"Model: ________________________________\" end Get Model by Reference begin Example_xGetModelByRef long ref long model setx ref to xGetPCTarget if ( ref == 0 ) return endif setx model to ref->xGetModel 0 if ( model == 0 ) return endif xMessageFix \"Model: %s\" model MessageBox \"Model: ________________________________\" end xGetName \u2693\ufe0e Parameters: None Returned: string name : The reference's name, or 0 if no name was found. xGetName returns a string containing the name (suitable for display, not the objectid) for the object or 0 if the object doesn't have a name. The NPC who falls from the sky near Seyda Neen has an object id of \"agronian guy\" but his name is \"Tarhiel\" when you look at his corpse. xGetOwnerInfo \u2693\ufe0e Parameters: None Returned: string owner : The object ID of the NPC or faction owner of the object. long or string condition : If owned by a faction, this is a long indicating the required rank. If this is an NPC this value is either 0, or a string for the global variable to check. long type : The Object Type of owner , either NPC or Faction. Ownership of entities in the world in Morrowind is comprised of two parts: owner and condition (this can specify when the player being detected taking or using the entity is not considered a crime). These work in two modes: The first is where owner is an NPC ID, and condition is a global variable - while the global var is set to a non-zero value, activating the entity is never considered a crime. In the second mode, owner is a faction id, and condition is a rank within it. If the player has equal (or higher) rank in that faction, then he can be seen using or taking the entity without it being a crime. This is how supply chests and beds in guildhalls work (their rank requirement is the minimal rank). This function allows getting full ownership information of an entity: both parts, whatever they may be (as well as what mode is used for the ownership). It is more in-depth than the xGetOwner function, which does not fully handle faction ownership or ownership with a global var requirement. Tip If the returned condition is a global variable, it can be used with xGetGlobal and xSetGlobal . Boobytrapped Mages Guild and Telvanni faction containers begin boobycontainers ;if the player tries to open a container owned by either MG or GHT that he ;doesn't have the required rank to legally take items from, then instead of ;the container opening, the player will be zapped. short framecount short temp short player_rank long pctarget long type long own_id long own_cond if ( MenuMode ) return endif set framecount to ( framecount + 1 ) if ( framecount < 30 ) return endif set framecount to 0 setx pctarget to xGetPCTarget ifx ( pctarget ) setx type to pctarget->xRefType if ( type != 1414418243 ) ;if it's not a container ref type return endif setx type own_id own_cond to pctarget->xGetOwnerInfo if ( type != 1413693766 ) ;if it's not a faction ownership type return endif setx temp to xStringCompare own_id \"Mages Guild\" ;if the owner of the container is MG, temp will be 0 ifx ( temp ) ;not MG setx temp to xStringCompare own_id \"Telvanni\" ifx ( temp ) ;owner is not MG and not GHT, either return endif ;owner is GHT set player_rank to GetPCRank \"Telvanni\" ;doesn't hurt here, but remember 0 and -1 are both possible return values of this function else ;owner is MG set player_rank to GetPCRank \"Mages Guild\" endif set temp to 0 if ( player_rank >= own_cond ) ;player is of the right rank in whichever faction to be able to claim the container's contents set temp to 1 endif ifx ( temp ) ;originally, there was only a return here. ;the following block is needed in case activation was already blocked by the OnActivate call (the 2nd instance of it, now) on a previous run, but the player since raised in rank enough; without this line, the player will no longer get the trap, but the container may not open (as it normally should), either xSetRef pctarget set temp to OnActivate ifx ( temp ) pctarget->Activate endif return endif ;if reached here, player doesn't meet rank requirement xSetRef pctarget if ( OnActivate ) ;merely CALLING this function will block any further normal activation attempts. it makes the object's activation temporarily only possible through the Activate function MessageBox \"A trap is sprung!\" set temp to - ( player->GetFatigue + 1 ) player->ModCurrentFatigue temp ;makes player fall down (\"knocked out\") briefly - causes current fatigue to be -1 player->PlaySound \"destruction hit\" endif endif end World entity destruction with ownership penalty begin entitydestruction ;allows the player to destroy objects in the world by striking at them with ;a weapon (or barehanded). but if the player wouldn't have been (legally) allowed to pick up that ;object, he gets a bounty as if he stole it (with respect to the GMST that controls the bounty amount for theft). ;the value of containers is assumed to be only the value of all the items within them. ;the value of doors is assumed to be 100 septims, and of activators, 200 septims. ;this script doesn't take into account whether player is detected (sneaking, invisible), ;etc. well, he's doing a loud and incriminating action, anyway. ;it doesn't do faction expulsion, either... short framecount short update_col long temp long pctarget long type long value long nextref long invvalue long invcount long ownerid long condition float glob ;note: in this script, existing vars are often reused, so that a bunch of ;vars are also used for other purposes than their name suggests. ;for example, because it is the only float and there's no problem with ;overwriting it, 'glob' is used to (temporarily) hold both the result of ;a reading of a global var, and also of reading a float GMST. if ( MenuMode ) return endif set framecount to ( framecount + 1 ) if ( framecount < timing1 ) return endif set framecount to 0 if ( player->GetWeaponDrawn == 0 ) return endif if ( player->GetWeaponType == 0 ) return ;ignore lockpicks and probes; unfortuantely this also applies to Short Blades... endif setx temp to xKeyPressed 1 ;left mouse button setx pctarget to xGetPCTarget setx temp to xAnd temp pctarget;if player looking at something AND pressing LMB, temp will be 1 if ( temp == 0 ) return endif ;you should also be able to just use 'if ( player->GetSoundPlaying \"weapon swish\" )' instead, to check ;if the player is making a strike, at least on machines where GetSoundPlaying works fine. ;you'd also be able to automatically support all swinging weapons, then. setx type to pctarget->xRefType set value to 0 set nextref to 0 if ( type == 1598246990 ) ;NPC return elseif ( type == 1095062083 ) ;creature return elseif ( type == 1414418243 ) ;container set nextref to 1 ;flag that we need to tally the container's total value set update_col to 1 elseif ( type == 1380929348 ) ;door (this script allows player to destroy load doors too, careful) set value to 100 set update_col to 1 elseif ( type == 1230259009 ) ;activator set value to 200 set update_col to 1 endif set invvalue to 0 set invcount to 0 setx type ownerid condition to pctarget->xGetOwnerInfo if ( type == 0 ) ;no owner set value to 1 ;in case 'value' wasn't determined yet - there's no need to calculate it below elseif ( type == 1598246990 ) ;NPC owner set invvalue to 1 ;(temp flag) elseif ( type == 1413693766 ) ;faction owner set invcount to 1 ;(temp flag) else MessageBox \"ERROR?!\" ;this should never happen return endif ifx ( invvalue ) ;NPC owner setx temp to xGetRef ownerid ifx ( temp ) xSetRef temp set temp to GetHealth else set temp to 0 ;if can't find the owner, assume he's dead endif if ( temp <= 0 ) ;if he's dead, then it's all legal... set type to 0 ;no ownership set value to 1 ;no need to calculate 'value' else ifx ( condition ) setx temp glob to xGetGlobal condition ifx ( temp ) ;got the global successfully ifx ( glob ) ;if it had a true value ;then player is allowed to take/use the target set type to 0 set value to 1 endif else MessageBox \"Got a problem...\" endif endif endif endif ifx ( invcount ) ;faction owner ;setx temp to xGetPCRank ownerid ;(this function doesn't exist yet) set temp to 0 ;temp filler since can't use above line. this makes the player count as of the lowest rank in the faction. if ( temp >= condition ) ;if player is of the required rank or above... ;then it's legal set type to 0 set value to 1 endif endif ifx ( value ) else ;if value is still 0, we're looking at an item (or a container) ifx ( nextref ) ;container set nextref to 0 setx temp invcount temp invvalue temp temp nextref to pctarget->xContentList nextref ;values we don't care about get stored in temp and overwritten whilex ( invcount ) ;might take a short... while, if container has tons of stacks in it set temp to ( invcount * invvalue ) set value to ( value + temp ) ifx ( nextref ) setx temp invcount temp invvalue temp temp nextref to pctarget->xContentList nextref else set invcount to 0 ;break the loop endif endwhile else ;looking at an item setx value to pctarget->xGetValue endif endif pctarget->Disable ;'destroy' the target player->PlaySound \"critical damage\" if ( type ) ;if it was determined to be illegal... setx glob to xGetGS 1173 ;GMST fCrimeStealing (default: 1.0) set value to ( value * glob ) ModPCCrimeLevel value endif if ( update_col ) set update_col to 0 ;in the event that that the player just disable'd a door or a large ;container or activator, its collision will normally remain until the ;cell is re-loaded, and the player won't be able to go through th ;space it used to occupy. ;this part of the script solves that issue, making use of the fact that ;the FixMe function also reloads some stuff in the active cell, such as ;object coliisions. ;unfortunately, it also seems to always teleport the player, and, ;ironically, sometimes cause him to get stuck. therefore, this line is commented out. ;FixMe endif end xGetQuality \u2693\ufe0e Parameters: None Returned: float quality : The quality of the reference's base object. Returns the quality of reference's base object. Supports alchemy apparatus, lockpicks, probes, repair tools. xGetRef \u2693\ufe0e Parameters: long objectID : An object ID to get a reference to, or 0 to get the script caller's reference. Returned: long reference : The reference requested, or 0 if none were found. Returns a reference to one of the active objects that match the object ID. An active object is an object in one of the loaded cells, or a persistent object such as an NPC. xGetStackSize \u2693\ufe0e Parameters: None Returned: long stackSize : The amount of items in the stack, or 0 if not called on a reference. This function returns the stack size of a given reference. For example if used on a reference to iron arrows, xGetStackSize will tell you how many arrows there are in that stack. Get player target's stack size. begin Example_xGetStackSize long ref long size setx ref to xGetPCTarget if ( ref == 0 ) return endif setx size to ref->xGetStackSize if ( size > 1 ) MessageBox \"Target stack size is %g.\" size else MessageBox \"Target is a single item.\" endif end xGetTrap \u2693\ufe0e Parameters: None Returned: string spellID : The trap's spell ID. string spellName : The trap's spell name. short spellCost : The trap's spell cost. Returns info about the reference's trap spell. Only works on container and doors. All returns will be zero if no trap is present. xGetValue \u2693\ufe0e Parameters: None Returned: long Value : The total value or maximum capacity of the object. xGetValue returns the Value of reference's base object. xGetWeight \u2693\ufe0e Parameters: None Returned: float weight : The total weight or maximum capacity of the object. xGetWeight returns the weight of reference's base object. If the reference is a stack of objects, return the total weight of the entire stack. If the reference is a container, return the maximum capacity. xMyCellID \u2693\ufe0e Parameters: None Returned: string cellID : The reference's current cell ID. Returns a string containing the name of the cell the object (intended to be used with references to unique NPCs) inhabits. So fargoth_ref->xMyCellID would return \"Seyda Neen\" unless you've lured him into the wilderness for some reason. Useful for locating that missing companion. Can't locate items stored in containers or inventory. xMyRef \u2693\ufe0e Parameters: None Returned: long reference : The caller's reference. Returns a reference to the calling object. Detect if target from local script. begin Example_xMyRef long myRef long targetRef setx targetRef to xGetPCTarget if ( targetRef == 0 ) return endif setx myRef to xMyRef if ( myRef == targetRef ) MessageBox \"I'm being targetted!\" endif end xPosition \u2693\ufe0e Parameters: float x : The X location to reposition to. float y : The Y location to reposition to. float z : The Z location to reposition to. float rotation : The rotation to take when positioned. Returned: None This is a wrapper for the vanilla Position function that can take variable input. xPositionCell \u2693\ufe0e Parameters: float x : The X location to reposition to. float y : The Y location to reposition to. float z : The Z location to reposition to. float rotation : The rotation to take when positioned. string cellID : The name/ID of the cell to position to. Returned: None This is a wrapper for the vanilla PositionCell function that can take variable input. xRefID \u2693\ufe0e Parameters: None Returned: string id : The reference's ID. xRefID returns the reference's ID. In contrast to xGetBaseID , this function will include the hexadecimal suffix that identifies unique instances of containers, creatures, or NPCs. For example, where xRefID would return \"Fargoth00000000\" , xGetBaseID would instead return just \"Fargoth\" . xRefType \u2693\ufe0e Parameters: None Returned: long type : The Object Type of the reference. Returns the four byte object name of the calling reference. xRemoveItem \u2693\ufe0e Parameters: string objectID : The object ID of the item to remove. long count : The number of items to remove. Returned: None This is a wrapper for the vanilla RemoveItem function that can take variable input. xSetCharge \u2693\ufe0e Parameters: float charge : New charge that will be set on the reference. Returned: long result : 1 if the reference's was modified, otherwise 0. Sets the current charge on a 'cast when used' or 'cast when strikes' enchanted item. May not work if the item has never been used. xSetCondition \u2693\ufe0e Parameters: float Condition : New condition that will be set on the reference. Returned: long result : 1 if the reference's was modified, otherwise 0. Sets the current condition of armor and weapons. Armor must not be at 100% or this function will fail. It must have already sustained some damage. xSetMaxCharge \u2693\ufe0e Parameters: float maxCharge : New charge that will be set on the reference. Returned: long result : 1 if the reference's was modified, otherwise 0. Sets the maximum charge on an enchanted item. xSetMaxCondition \u2693\ufe0e Parameters: float maxCondition : New maximum condition that will be set on the reference. Returned: long result : 1 if the reference's was modified, otherwise 0. Sets the maxium condition for armor and weapons and maximum uses for lockpicks, probes, and repair tools. xSetName \u2693\ufe0e Parameters: string name : The new name to apply to the reference's base object. (Maximum 31 characters) Returned: None xSetName uses the value parameter to change the reference's name. The new name will not persist through restarts. xSetQuality \u2693\ufe0e Parameters: float quality : New quality that will be set on the reference's base object. Returned: long result : 1 if the reference's base object was modified, otherwise 0. xSetQuality modifies the quality of reference's base object. Supports alchemy apparatus, lockpicks, probes, repair tools. xSetRef \u2693\ufe0e Parameters: reference newReference : A reference to the use for future function calls. Returned: None xSetRef provides a way of calling object functions where the syntax does not allow it, changing the reference used in future function calls. xSetTrap \u2693\ufe0e Parameters: string spellID : The spell ID to set as the trap, or 0 to unset a trap. Returned: short result : 1 if the reference's trap was modified, otherwise 0 . Sets a trap. Only works on containers or doors. In order to have a trap, a reference must also have a lock. For references without locks, call Lock 0 and Unlock prior to xSetTrap . Traps that are set this way do not persist through saving and loading. If a trap is removed its removal persists only if the object is activated or its lock is manipulated before saving. If you want to set a trap on a door/container, first check for an existing lock ( xGetLockLevel ). If no lock is already installed, use Lock 0 , Unlock to create the lock/trap object. Set the trap. To make sure the trap is persistent, manipulate the lock, but then put it back to its original state. In other words, if the lock is currently unlocked, lock it (use xGetLockLevel to determine the correct lock level) then unlock it. Do the reverse if it's currently unlocked. xSetValue \u2693\ufe0e Parameters: long value : New value that will be set on the reference's base object. Returned: long result : 1 if the reference's base object was modified, otherwise 0. xSetValue modifies the value of reference's base object. xSetWeight \u2693\ufe0e Parameters: float weight : New weight that will be set on the reference's base object. Returned: long result : 1 if the reference's base object was modified, otherwise 0. xSetWeight modifies the weight of the reference's base object.","title":"Reference Functions"},{"location":"references/mwse-mwscript/reference/#reference-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Reference Functions"},{"location":"references/mwse-mwscript/reference/#xadditem","text":"Parameters: string objectID : The object ID of the item to add. long count : The number of items to add. Returned: None This is a wrapper for the vanilla AddItem function that can take variable input.","title":"xAddItem"},{"location":"references/mwse-mwscript/reference/#xdistance","text":"Parameters: reference target : The reference of the target to get the distance from. Returned: float distance : The distance between the calling reference and the target reference. Calculates the distance between the calling reference and target . .. note:: Unlike the vanilla GetDistance function, this function will work on non-actors. Distance from PC Target This example calculates the distance between the PC and what they are looking at. begin DistanceToTarget long pcRef long targetRef float distance setx pcRef to xGetRef \"player\" setx targetRef to xGetPCTarget setx distance to pcRef->xDistance targetRef end","title":"xDistance"},{"location":"references/mwse-mwscript/reference/#xexplodespell","text":"Parameters: string objectID : The object ID of the spell to explode. Returned: None This is a wrapper for the vanilla ExplodeSpell function that can take variable input.","title":"xExplodeSpell"},{"location":"references/mwse-mwscript/reference/#xgetbaseid","text":"Parameters: None Returned: string id : The reference's base object ID. xGetBaseID returns reference's base object ID. In contrast to xRefID , this function will not include the hexadecimal suffix that identifies unique instances of containers, creatures, or NPCs. For example, where xRefID would return \"Fargoth00000000\" , xGetBaseID would instead return just \"Fargoth\" .","title":"xGetBaseID"},{"location":"references/mwse-mwscript/reference/#xgetcharge","text":"Parameters: None Returned: float charge : The current charge on a item. Returns the current charge on a 'cast when used' or 'cast when strikes' enchanted item. Constant effect and non-enchanted items return 0 .","title":"xGetCharge"},{"location":"references/mwse-mwscript/reference/#xgetcondition","text":"Parameters: None Returned: float condition : The current condition on a item. Returns the current condition for armor and weapons and remaining uses for lockpicks, probes, and repair tools.","title":"xGetCondition"},{"location":"references/mwse-mwscript/reference/#xgetenchant","text":"Parameters: None Returned: string enchantID : The Object ID of the enchantment. short type : The type of the enchantment. 0 = Cast Once, 1 = Cast on Strike, 2 = Cast on Use, 3 = Constant short cost : The cost of the enchantment. float currentCharge : The current charge for the enchantment. long maxCharge : The maximum charge for the enchantment. short numEffect : The number of effects on the enchantment. long autocalc : 1 if the enchantment is auto-calculated. Returns info about the enchantment on the target item, or 0 if no enchantment is present.","title":"xGetEnchant"},{"location":"references/mwse-mwscript/reference/#xgetencumb","text":"Parameters: None Returned: float weight : The weight, in pounds, of all the reference's inventory. This value is negative if leveled items are present. Calculates the total, unmodified encumbrance of the target reference's inventory. This function does not take into account any feather or burden spell effects. Note If the target has any leveled items in its inventory, the returned weight is negative.","title":"xGetEncumb"},{"location":"references/mwse-mwscript/reference/#xgetitemcount","text":"Parameters: string objectId : The item's object ID to get the count of. Returned: long itemCount : The number of items that the reference has. This is a wrapper function around GetItemCount that allows variable input. Example begin Example_xGetItemCount long ref long id long count setx ref to xGetRef \"player\" setx id to xStringBuild \"Gold_001\" setx count to ref->xGetItemCount id MessageBox \"Total Gold: %g\" count StopScript Example_xGetItemCount end","title":"xGetItemCount"},{"location":"references/mwse-mwscript/reference/#xgetlocklevel","text":"Parameters: None Returned: short lockLevel : The reference's lock level, or -1 if none was found. Returns the lock level of a door or container. This function returns -1 for doors/containers that have never been locked and for items that aren't doors or containers. This returns the lock level regardless of whether the item is locked or unlocked. Use GetLocked to determine the state of the lock. Lock level is stored as a signed short (16 bits, max value = 32,767). Values less than 0 do not survive saving, exiting, and reloading. They are converted to their absolute value and the door/container is flagged as unlocked.","title":"xGetLockLevel"},{"location":"references/mwse-mwscript/reference/#xgetmaxcharge","text":"Parameters: None Returned: float maxCharge : The current charge on a item. Returns the maximum charge on an enchanted item.","title":"xGetMaxCharge"},{"location":"references/mwse-mwscript/reference/#xgetmaxcondition","text":"Parameters: None Returned: float maxCondition : The current maximum condition on a item. Returns the maxium condition for armor and weapons and maximum uses for lockpicks, probes, and repair tools.","title":"xGetMaxCondition"},{"location":"references/mwse-mwscript/reference/#xgetmodel","text":"Parameters: string objectId : The object ID to get the model of. If 0, the reference will be used. Returned: string modelPath : The path to the model. This function returns the model of an object. This can be done by passing a string for the object Id, or 0 can be passed to use the script's reference. Note The path returned does not include the Data Files\\models prefix. Get Model by Object ID begin Example_xGetModelById long model setx model to xGetModel \"ingred_bonemeal_01\" if ( model == 0 ) return endif xMessageFix \"Model: %s\" model MessageBox \"Model: ________________________________\" end Get Model by Reference begin Example_xGetModelByRef long ref long model setx ref to xGetPCTarget if ( ref == 0 ) return endif setx model to ref->xGetModel 0 if ( model == 0 ) return endif xMessageFix \"Model: %s\" model MessageBox \"Model: ________________________________\" end","title":"xGetModel"},{"location":"references/mwse-mwscript/reference/#xgetname","text":"Parameters: None Returned: string name : The reference's name, or 0 if no name was found. xGetName returns a string containing the name (suitable for display, not the objectid) for the object or 0 if the object doesn't have a name. The NPC who falls from the sky near Seyda Neen has an object id of \"agronian guy\" but his name is \"Tarhiel\" when you look at his corpse.","title":"xGetName"},{"location":"references/mwse-mwscript/reference/#xgetownerinfo","text":"Parameters: None Returned: string owner : The object ID of the NPC or faction owner of the object. long or string condition : If owned by a faction, this is a long indicating the required rank. If this is an NPC this value is either 0, or a string for the global variable to check. long type : The Object Type of owner , either NPC or Faction. Ownership of entities in the world in Morrowind is comprised of two parts: owner and condition (this can specify when the player being detected taking or using the entity is not considered a crime). These work in two modes: The first is where owner is an NPC ID, and condition is a global variable - while the global var is set to a non-zero value, activating the entity is never considered a crime. In the second mode, owner is a faction id, and condition is a rank within it. If the player has equal (or higher) rank in that faction, then he can be seen using or taking the entity without it being a crime. This is how supply chests and beds in guildhalls work (their rank requirement is the minimal rank). This function allows getting full ownership information of an entity: both parts, whatever they may be (as well as what mode is used for the ownership). It is more in-depth than the xGetOwner function, which does not fully handle faction ownership or ownership with a global var requirement. Tip If the returned condition is a global variable, it can be used with xGetGlobal and xSetGlobal . Boobytrapped Mages Guild and Telvanni faction containers begin boobycontainers ;if the player tries to open a container owned by either MG or GHT that he ;doesn't have the required rank to legally take items from, then instead of ;the container opening, the player will be zapped. short framecount short temp short player_rank long pctarget long type long own_id long own_cond if ( MenuMode ) return endif set framecount to ( framecount + 1 ) if ( framecount < 30 ) return endif set framecount to 0 setx pctarget to xGetPCTarget ifx ( pctarget ) setx type to pctarget->xRefType if ( type != 1414418243 ) ;if it's not a container ref type return endif setx type own_id own_cond to pctarget->xGetOwnerInfo if ( type != 1413693766 ) ;if it's not a faction ownership type return endif setx temp to xStringCompare own_id \"Mages Guild\" ;if the owner of the container is MG, temp will be 0 ifx ( temp ) ;not MG setx temp to xStringCompare own_id \"Telvanni\" ifx ( temp ) ;owner is not MG and not GHT, either return endif ;owner is GHT set player_rank to GetPCRank \"Telvanni\" ;doesn't hurt here, but remember 0 and -1 are both possible return values of this function else ;owner is MG set player_rank to GetPCRank \"Mages Guild\" endif set temp to 0 if ( player_rank >= own_cond ) ;player is of the right rank in whichever faction to be able to claim the container's contents set temp to 1 endif ifx ( temp ) ;originally, there was only a return here. ;the following block is needed in case activation was already blocked by the OnActivate call (the 2nd instance of it, now) on a previous run, but the player since raised in rank enough; without this line, the player will no longer get the trap, but the container may not open (as it normally should), either xSetRef pctarget set temp to OnActivate ifx ( temp ) pctarget->Activate endif return endif ;if reached here, player doesn't meet rank requirement xSetRef pctarget if ( OnActivate ) ;merely CALLING this function will block any further normal activation attempts. it makes the object's activation temporarily only possible through the Activate function MessageBox \"A trap is sprung!\" set temp to - ( player->GetFatigue + 1 ) player->ModCurrentFatigue temp ;makes player fall down (\"knocked out\") briefly - causes current fatigue to be -1 player->PlaySound \"destruction hit\" endif endif end World entity destruction with ownership penalty begin entitydestruction ;allows the player to destroy objects in the world by striking at them with ;a weapon (or barehanded). but if the player wouldn't have been (legally) allowed to pick up that ;object, he gets a bounty as if he stole it (with respect to the GMST that controls the bounty amount for theft). ;the value of containers is assumed to be only the value of all the items within them. ;the value of doors is assumed to be 100 septims, and of activators, 200 septims. ;this script doesn't take into account whether player is detected (sneaking, invisible), ;etc. well, he's doing a loud and incriminating action, anyway. ;it doesn't do faction expulsion, either... short framecount short update_col long temp long pctarget long type long value long nextref long invvalue long invcount long ownerid long condition float glob ;note: in this script, existing vars are often reused, so that a bunch of ;vars are also used for other purposes than their name suggests. ;for example, because it is the only float and there's no problem with ;overwriting it, 'glob' is used to (temporarily) hold both the result of ;a reading of a global var, and also of reading a float GMST. if ( MenuMode ) return endif set framecount to ( framecount + 1 ) if ( framecount < timing1 ) return endif set framecount to 0 if ( player->GetWeaponDrawn == 0 ) return endif if ( player->GetWeaponType == 0 ) return ;ignore lockpicks and probes; unfortuantely this also applies to Short Blades... endif setx temp to xKeyPressed 1 ;left mouse button setx pctarget to xGetPCTarget setx temp to xAnd temp pctarget;if player looking at something AND pressing LMB, temp will be 1 if ( temp == 0 ) return endif ;you should also be able to just use 'if ( player->GetSoundPlaying \"weapon swish\" )' instead, to check ;if the player is making a strike, at least on machines where GetSoundPlaying works fine. ;you'd also be able to automatically support all swinging weapons, then. setx type to pctarget->xRefType set value to 0 set nextref to 0 if ( type == 1598246990 ) ;NPC return elseif ( type == 1095062083 ) ;creature return elseif ( type == 1414418243 ) ;container set nextref to 1 ;flag that we need to tally the container's total value set update_col to 1 elseif ( type == 1380929348 ) ;door (this script allows player to destroy load doors too, careful) set value to 100 set update_col to 1 elseif ( type == 1230259009 ) ;activator set value to 200 set update_col to 1 endif set invvalue to 0 set invcount to 0 setx type ownerid condition to pctarget->xGetOwnerInfo if ( type == 0 ) ;no owner set value to 1 ;in case 'value' wasn't determined yet - there's no need to calculate it below elseif ( type == 1598246990 ) ;NPC owner set invvalue to 1 ;(temp flag) elseif ( type == 1413693766 ) ;faction owner set invcount to 1 ;(temp flag) else MessageBox \"ERROR?!\" ;this should never happen return endif ifx ( invvalue ) ;NPC owner setx temp to xGetRef ownerid ifx ( temp ) xSetRef temp set temp to GetHealth else set temp to 0 ;if can't find the owner, assume he's dead endif if ( temp <= 0 ) ;if he's dead, then it's all legal... set type to 0 ;no ownership set value to 1 ;no need to calculate 'value' else ifx ( condition ) setx temp glob to xGetGlobal condition ifx ( temp ) ;got the global successfully ifx ( glob ) ;if it had a true value ;then player is allowed to take/use the target set type to 0 set value to 1 endif else MessageBox \"Got a problem...\" endif endif endif endif ifx ( invcount ) ;faction owner ;setx temp to xGetPCRank ownerid ;(this function doesn't exist yet) set temp to 0 ;temp filler since can't use above line. this makes the player count as of the lowest rank in the faction. if ( temp >= condition ) ;if player is of the required rank or above... ;then it's legal set type to 0 set value to 1 endif endif ifx ( value ) else ;if value is still 0, we're looking at an item (or a container) ifx ( nextref ) ;container set nextref to 0 setx temp invcount temp invvalue temp temp nextref to pctarget->xContentList nextref ;values we don't care about get stored in temp and overwritten whilex ( invcount ) ;might take a short... while, if container has tons of stacks in it set temp to ( invcount * invvalue ) set value to ( value + temp ) ifx ( nextref ) setx temp invcount temp invvalue temp temp nextref to pctarget->xContentList nextref else set invcount to 0 ;break the loop endif endwhile else ;looking at an item setx value to pctarget->xGetValue endif endif pctarget->Disable ;'destroy' the target player->PlaySound \"critical damage\" if ( type ) ;if it was determined to be illegal... setx glob to xGetGS 1173 ;GMST fCrimeStealing (default: 1.0) set value to ( value * glob ) ModPCCrimeLevel value endif if ( update_col ) set update_col to 0 ;in the event that that the player just disable'd a door or a large ;container or activator, its collision will normally remain until the ;cell is re-loaded, and the player won't be able to go through th ;space it used to occupy. ;this part of the script solves that issue, making use of the fact that ;the FixMe function also reloads some stuff in the active cell, such as ;object coliisions. ;unfortunately, it also seems to always teleport the player, and, ;ironically, sometimes cause him to get stuck. therefore, this line is commented out. ;FixMe endif end","title":"xGetOwnerInfo"},{"location":"references/mwse-mwscript/reference/#xgetquality","text":"Parameters: None Returned: float quality : The quality of the reference's base object. Returns the quality of reference's base object. Supports alchemy apparatus, lockpicks, probes, repair tools.","title":"xGetQuality"},{"location":"references/mwse-mwscript/reference/#xgetref","text":"Parameters: long objectID : An object ID to get a reference to, or 0 to get the script caller's reference. Returned: long reference : The reference requested, or 0 if none were found. Returns a reference to one of the active objects that match the object ID. An active object is an object in one of the loaded cells, or a persistent object such as an NPC.","title":"xGetRef"},{"location":"references/mwse-mwscript/reference/#xgetstacksize","text":"Parameters: None Returned: long stackSize : The amount of items in the stack, or 0 if not called on a reference. This function returns the stack size of a given reference. For example if used on a reference to iron arrows, xGetStackSize will tell you how many arrows there are in that stack. Get player target's stack size. begin Example_xGetStackSize long ref long size setx ref to xGetPCTarget if ( ref == 0 ) return endif setx size to ref->xGetStackSize if ( size > 1 ) MessageBox \"Target stack size is %g.\" size else MessageBox \"Target is a single item.\" endif end","title":"xGetStackSize"},{"location":"references/mwse-mwscript/reference/#xgettrap","text":"Parameters: None Returned: string spellID : The trap's spell ID. string spellName : The trap's spell name. short spellCost : The trap's spell cost. Returns info about the reference's trap spell. Only works on container and doors. All returns will be zero if no trap is present.","title":"xGetTrap"},{"location":"references/mwse-mwscript/reference/#xgetvalue","text":"Parameters: None Returned: long Value : The total value or maximum capacity of the object. xGetValue returns the Value of reference's base object.","title":"xGetValue"},{"location":"references/mwse-mwscript/reference/#xgetweight","text":"Parameters: None Returned: float weight : The total weight or maximum capacity of the object. xGetWeight returns the weight of reference's base object. If the reference is a stack of objects, return the total weight of the entire stack. If the reference is a container, return the maximum capacity.","title":"xGetWeight"},{"location":"references/mwse-mwscript/reference/#xmycellid","text":"Parameters: None Returned: string cellID : The reference's current cell ID. Returns a string containing the name of the cell the object (intended to be used with references to unique NPCs) inhabits. So fargoth_ref->xMyCellID would return \"Seyda Neen\" unless you've lured him into the wilderness for some reason. Useful for locating that missing companion. Can't locate items stored in containers or inventory.","title":"xMyCellID"},{"location":"references/mwse-mwscript/reference/#xmyref","text":"Parameters: None Returned: long reference : The caller's reference. Returns a reference to the calling object. Detect if target from local script. begin Example_xMyRef long myRef long targetRef setx targetRef to xGetPCTarget if ( targetRef == 0 ) return endif setx myRef to xMyRef if ( myRef == targetRef ) MessageBox \"I'm being targetted!\" endif end","title":"xMyRef"},{"location":"references/mwse-mwscript/reference/#xposition","text":"Parameters: float x : The X location to reposition to. float y : The Y location to reposition to. float z : The Z location to reposition to. float rotation : The rotation to take when positioned. Returned: None This is a wrapper for the vanilla Position function that can take variable input.","title":"xPosition"},{"location":"references/mwse-mwscript/reference/#xpositioncell","text":"Parameters: float x : The X location to reposition to. float y : The Y location to reposition to. float z : The Z location to reposition to. float rotation : The rotation to take when positioned. string cellID : The name/ID of the cell to position to. Returned: None This is a wrapper for the vanilla PositionCell function that can take variable input.","title":"xPositionCell"},{"location":"references/mwse-mwscript/reference/#xrefid","text":"Parameters: None Returned: string id : The reference's ID. xRefID returns the reference's ID. In contrast to xGetBaseID , this function will include the hexadecimal suffix that identifies unique instances of containers, creatures, or NPCs. For example, where xRefID would return \"Fargoth00000000\" , xGetBaseID would instead return just \"Fargoth\" .","title":"xRefID"},{"location":"references/mwse-mwscript/reference/#xreftype","text":"Parameters: None Returned: long type : The Object Type of the reference. Returns the four byte object name of the calling reference.","title":"xRefType"},{"location":"references/mwse-mwscript/reference/#xremoveitem","text":"Parameters: string objectID : The object ID of the item to remove. long count : The number of items to remove. Returned: None This is a wrapper for the vanilla RemoveItem function that can take variable input.","title":"xRemoveItem"},{"location":"references/mwse-mwscript/reference/#xsetcharge","text":"Parameters: float charge : New charge that will be set on the reference. Returned: long result : 1 if the reference's was modified, otherwise 0. Sets the current charge on a 'cast when used' or 'cast when strikes' enchanted item. May not work if the item has never been used.","title":"xSetCharge"},{"location":"references/mwse-mwscript/reference/#xsetcondition","text":"Parameters: float Condition : New condition that will be set on the reference. Returned: long result : 1 if the reference's was modified, otherwise 0. Sets the current condition of armor and weapons. Armor must not be at 100% or this function will fail. It must have already sustained some damage.","title":"xSetCondition"},{"location":"references/mwse-mwscript/reference/#xsetmaxcharge","text":"Parameters: float maxCharge : New charge that will be set on the reference. Returned: long result : 1 if the reference's was modified, otherwise 0. Sets the maximum charge on an enchanted item.","title":"xSetMaxCharge"},{"location":"references/mwse-mwscript/reference/#xsetmaxcondition","text":"Parameters: float maxCondition : New maximum condition that will be set on the reference. Returned: long result : 1 if the reference's was modified, otherwise 0. Sets the maxium condition for armor and weapons and maximum uses for lockpicks, probes, and repair tools.","title":"xSetMaxCondition"},{"location":"references/mwse-mwscript/reference/#xsetname","text":"Parameters: string name : The new name to apply to the reference's base object. (Maximum 31 characters) Returned: None xSetName uses the value parameter to change the reference's name. The new name will not persist through restarts.","title":"xSetName"},{"location":"references/mwse-mwscript/reference/#xsetquality","text":"Parameters: float quality : New quality that will be set on the reference's base object. Returned: long result : 1 if the reference's base object was modified, otherwise 0. xSetQuality modifies the quality of reference's base object. Supports alchemy apparatus, lockpicks, probes, repair tools.","title":"xSetQuality"},{"location":"references/mwse-mwscript/reference/#xsetref","text":"Parameters: reference newReference : A reference to the use for future function calls. Returned: None xSetRef provides a way of calling object functions where the syntax does not allow it, changing the reference used in future function calls.","title":"xSetRef"},{"location":"references/mwse-mwscript/reference/#xsettrap","text":"Parameters: string spellID : The spell ID to set as the trap, or 0 to unset a trap. Returned: short result : 1 if the reference's trap was modified, otherwise 0 . Sets a trap. Only works on containers or doors. In order to have a trap, a reference must also have a lock. For references without locks, call Lock 0 and Unlock prior to xSetTrap . Traps that are set this way do not persist through saving and loading. If a trap is removed its removal persists only if the object is activated or its lock is manipulated before saving. If you want to set a trap on a door/container, first check for an existing lock ( xGetLockLevel ). If no lock is already installed, use Lock 0 , Unlock to create the lock/trap object. Set the trap. To make sure the trap is persistent, manipulate the lock, but then put it back to its original state. In other words, if the lock is currently unlocked, lock it (use xGetLockLevel to determine the correct lock level) then unlock it. Do the reverse if it's currently unlocked.","title":"xSetTrap"},{"location":"references/mwse-mwscript/reference/#xsetvalue","text":"Parameters: long value : New value that will be set on the reference's base object. Returned: long result : 1 if the reference's base object was modified, otherwise 0. xSetValue modifies the value of reference's base object.","title":"xSetValue"},{"location":"references/mwse-mwscript/reference/#xsetweight","text":"Parameters: float weight : New weight that will be set on the reference's base object. Returned: long result : 1 if the reference's base object was modified, otherwise 0. xSetWeight modifies the weight of the reference's base object.","title":"xSetWeight"},{"location":"references/mwse-mwscript/string/","text":"String Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xStringBuild \u2693\ufe0e Parameters: string format : The format string to use, given the tokens below. varies (many) input : The variables to use, matching the pattern of special tokens below. Returned: string result : A string build from the combined input. xStringBuild returns a new string that is constructed based on the format string and any other variable values as needed. The format string is similar to those for MessageBox with % indicating some special character or variable substitution. Some patterns can be used to place special characters into the string: Token Meaning %% A single % sign is placed in the string. %n A new line marker (CR/LF) is placed in the string. %q A quotation mark (\") is placed in the string. The rest are used to insert values from the remaining parameters into the output string. Token Meaning %d A short or long value is inserted as a decimal integer. %h A short or long value is inserted as a hexadecimal integer. %f A float value is inserted as real decimal number. %s A string value is inserted. %l A long value is inserted as a four character string. Note The uppercase forms %N , %Q , %D , %H , %F , %S , and %L also work. The float specifier takes a precision specifier just like the MessageBox command. The format %.3f will print a floating point value with three digits after the decimal point. The string specifier can take two numbers in its specifier: Token Meaning %2s Skips the first two characters of the string, but inserts the rest. %.3s Inserts only three characters of the string. %4.5s Skips 4 characters, then inserts the next 5 characters of the string. Note The compiler doesn't currently support more than 12 parameters at a time. Note The format string is limited to 64 characters. xStringCapture \u2693\ufe0e Parameters: string string : The string to search for pattern in. string pattern : The regex pattern to use. long desiredMatches : The number of results to return. Returned: string (many) matches : Results of the pattern matching for pattern on string . The function always return desiredMatches results. This function performs much as xStringMatch , but returns the result groups of the regex match. The a number of results matching desiredMatches is always returned. The matches will be 0 if a match isn't made. xStringCompare \u2693\ufe0e Parameters: string leftString : The first string in the comparison. string rightString : The second string in the comparison. Returned: string result : 0 if the strings are equal, otherwise a signed number based on sorting. Compares the two strings based on alphabetical order and returns 0 if they are equal, a negative number if leftString would appear first, and a positive number if rightString would appear first. xStringLength \u2693\ufe0e Parameters: string string : The string to take the length of. Returned: long length : The length of string . Returns the number of characters in the input, string . xStringMatch \u2693\ufe0e Parameters: string string : The string to search for pattern in. string pattern : The regex pattern to use. Returned: string (many) matches : Results of the pattern matching for pattern on string . The function always return desiredMatches results. This function performs a regular expression check on string , allowing for very flexible and powerful pattern and string matching/identification. For example, you can check if a string contains certain words, or a certain set of characters, in it and in a specific position and order, if you want, and much more. Note To return the tokenized regex result, use xStringCapture . MWSE uses the Regex library from the Boost C++ library. The regular expression style is the Perl syntax; please see the Boost Regex documentation for full details. However, here is a partial quick summary: Pattern Description . Matches any one character. ^ Matches the beginning of the string. $ Matches then end of the string. ( and ) Groups a sub-expression (see below). * Makes the preceeding item or group match zero or more times. ? Makes the preceeding item or group match zero or once. + Makes the preceeding item or group match one or more times. {integer} Makes the preceeding item or group match exactly integer times. {int1,int2} Makes the preceeding item or group match from int1 to int2 times. | Alternation; makes the pattern match either the item on the left of the [character set] Matches a single character from the set character set. The set can contain individual characters, or ranges of the form a-b, which matches all characters between a and b, including a and b. (For example, [A-Z] will match upper case letters.) If the character set begins with ^, then it will match any character except those in the character set. [[:name:]] Matches a single character from the pre-defined set name. \\character Matches the character; that is, removes the special meaning, if any, from character. (For example, \".\" matches any single character, but \".\" matches the period character.) \\d Match a digit (0-9). \\l Match a lower case letter (a-z). \\s Match whitespace (space, tab). \\u Match an upper case letter (A-Z). \\w Match a word (a string of letters, digits, and underscores) \\D Match anything but a digit. \\L Match anything but a lower case letter (a-z). \\S Match anything but whitespace (space, tab). \\U Match anything but an upper case letter (A-Z). \\W Match anything but a word. \\< Match the start of a word. \\> Match the end of a word. \\b Match the end or start of a word. \\B Match anything but the end or start of a word. (?i) Turns on the i modifier (case insensitive match) for the rest of the pattern or until an enclosing ). (?i:pattern) Turns on the i modifier for the enclosed pattern only. xStringParse \u2693\ufe0e Parameters: string pattern : The pattern to parse. string source : Indicates how much of the pattern matched successfully. Returned: long matchCount : The number of matches returned. varies (many) matches : The values parsed out of the string. This function identifies and extracts data from the source string based on the pattern string. The first return value matchCount is a long indicating how much of the pattern matched successfully. The matches by the pattern will then be returned in order. In the pattern string, all of the special features begin with a % symbol. Some, simply match special characters that can't otherwise be typed in the pattern string. Token Description %% Matches a single % sign. %n Matches the new line marker, CR/LF. %q Matches the \" quotation mark. The rest return the values matched so they can be stored in variables with setx . Token Description %d Matches a decimal integer and the value is returned as type long. %h Matches a hexadecimal integer and the value is returned as type long. %f Matches a real number and the value is returned as type float. %s Matches the rest of the string and returns it as type string. %l Matches exactly four characters and returns them as type long. Note The uppercase forms %N , %Q , %D , %H , %F , %S , and %L also work. MWSE Version Checking \u2693\ufe0e A special use case of xStringParse is to check the version of MWSE. If a value of zero is returned, the version of MWSE is older than version 2.0. To do this, pattern must be MWSE_VERSION . source is instead a long , to compare to the return value. If the version returned is greater than or equal to source , the second return value is 1. long version long versionAbove2p0 setx version versionAbove2p0 to xStringParse \"MWSE_VERSION\" 2000000 The version returned is spaced. Version 2.0.0 is 2000000 while the hypothetical version 2.34.9 would be 2034009.","title":"String Functions"},{"location":"references/mwse-mwscript/string/#string-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"String Functions"},{"location":"references/mwse-mwscript/string/#xstringbuild","text":"Parameters: string format : The format string to use, given the tokens below. varies (many) input : The variables to use, matching the pattern of special tokens below. Returned: string result : A string build from the combined input. xStringBuild returns a new string that is constructed based on the format string and any other variable values as needed. The format string is similar to those for MessageBox with % indicating some special character or variable substitution. Some patterns can be used to place special characters into the string: Token Meaning %% A single % sign is placed in the string. %n A new line marker (CR/LF) is placed in the string. %q A quotation mark (\") is placed in the string. The rest are used to insert values from the remaining parameters into the output string. Token Meaning %d A short or long value is inserted as a decimal integer. %h A short or long value is inserted as a hexadecimal integer. %f A float value is inserted as real decimal number. %s A string value is inserted. %l A long value is inserted as a four character string. Note The uppercase forms %N , %Q , %D , %H , %F , %S , and %L also work. The float specifier takes a precision specifier just like the MessageBox command. The format %.3f will print a floating point value with three digits after the decimal point. The string specifier can take two numbers in its specifier: Token Meaning %2s Skips the first two characters of the string, but inserts the rest. %.3s Inserts only three characters of the string. %4.5s Skips 4 characters, then inserts the next 5 characters of the string. Note The compiler doesn't currently support more than 12 parameters at a time. Note The format string is limited to 64 characters.","title":"xStringBuild"},{"location":"references/mwse-mwscript/string/#xstringcapture","text":"Parameters: string string : The string to search for pattern in. string pattern : The regex pattern to use. long desiredMatches : The number of results to return. Returned: string (many) matches : Results of the pattern matching for pattern on string . The function always return desiredMatches results. This function performs much as xStringMatch , but returns the result groups of the regex match. The a number of results matching desiredMatches is always returned. The matches will be 0 if a match isn't made.","title":"xStringCapture"},{"location":"references/mwse-mwscript/string/#xstringcompare","text":"Parameters: string leftString : The first string in the comparison. string rightString : The second string in the comparison. Returned: string result : 0 if the strings are equal, otherwise a signed number based on sorting. Compares the two strings based on alphabetical order and returns 0 if they are equal, a negative number if leftString would appear first, and a positive number if rightString would appear first.","title":"xStringCompare"},{"location":"references/mwse-mwscript/string/#xstringlength","text":"Parameters: string string : The string to take the length of. Returned: long length : The length of string . Returns the number of characters in the input, string .","title":"xStringLength"},{"location":"references/mwse-mwscript/string/#xstringmatch","text":"Parameters: string string : The string to search for pattern in. string pattern : The regex pattern to use. Returned: string (many) matches : Results of the pattern matching for pattern on string . The function always return desiredMatches results. This function performs a regular expression check on string , allowing for very flexible and powerful pattern and string matching/identification. For example, you can check if a string contains certain words, or a certain set of characters, in it and in a specific position and order, if you want, and much more. Note To return the tokenized regex result, use xStringCapture . MWSE uses the Regex library from the Boost C++ library. The regular expression style is the Perl syntax; please see the Boost Regex documentation for full details. However, here is a partial quick summary: Pattern Description . Matches any one character. ^ Matches the beginning of the string. $ Matches then end of the string. ( and ) Groups a sub-expression (see below). * Makes the preceeding item or group match zero or more times. ? Makes the preceeding item or group match zero or once. + Makes the preceeding item or group match one or more times. {integer} Makes the preceeding item or group match exactly integer times. {int1,int2} Makes the preceeding item or group match from int1 to int2 times. | Alternation; makes the pattern match either the item on the left of the [character set] Matches a single character from the set character set. The set can contain individual characters, or ranges of the form a-b, which matches all characters between a and b, including a and b. (For example, [A-Z] will match upper case letters.) If the character set begins with ^, then it will match any character except those in the character set. [[:name:]] Matches a single character from the pre-defined set name. \\character Matches the character; that is, removes the special meaning, if any, from character. (For example, \".\" matches any single character, but \".\" matches the period character.) \\d Match a digit (0-9). \\l Match a lower case letter (a-z). \\s Match whitespace (space, tab). \\u Match an upper case letter (A-Z). \\w Match a word (a string of letters, digits, and underscores) \\D Match anything but a digit. \\L Match anything but a lower case letter (a-z). \\S Match anything but whitespace (space, tab). \\U Match anything but an upper case letter (A-Z). \\W Match anything but a word. \\< Match the start of a word. \\> Match the end of a word. \\b Match the end or start of a word. \\B Match anything but the end or start of a word. (?i) Turns on the i modifier (case insensitive match) for the rest of the pattern or until an enclosing ). (?i:pattern) Turns on the i modifier for the enclosed pattern only.","title":"xStringMatch"},{"location":"references/mwse-mwscript/string/#xstringparse","text":"Parameters: string pattern : The pattern to parse. string source : Indicates how much of the pattern matched successfully. Returned: long matchCount : The number of matches returned. varies (many) matches : The values parsed out of the string. This function identifies and extracts data from the source string based on the pattern string. The first return value matchCount is a long indicating how much of the pattern matched successfully. The matches by the pattern will then be returned in order. In the pattern string, all of the special features begin with a % symbol. Some, simply match special characters that can't otherwise be typed in the pattern string. Token Description %% Matches a single % sign. %n Matches the new line marker, CR/LF. %q Matches the \" quotation mark. The rest return the values matched so they can be stored in variables with setx . Token Description %d Matches a decimal integer and the value is returned as type long. %h Matches a hexadecimal integer and the value is returned as type long. %f Matches a real number and the value is returned as type float. %s Matches the rest of the string and returns it as type string. %l Matches exactly four characters and returns them as type long. Note The uppercase forms %N , %Q , %D , %H , %F , %S , and %L also work.","title":"xStringParse"},{"location":"references/mwse-mwscript/string/#mwse-version-checking","text":"A special use case of xStringParse is to check the version of MWSE. If a value of zero is returned, the version of MWSE is older than version 2.0. To do this, pattern must be MWSE_VERSION . source is instead a long , to compare to the return value. If the version returned is greater than or equal to source , the second return value is 1. long version long versionAbove2p0 setx version versionAbove2p0 to xStringParse \"MWSE_VERSION\" 2000000 The version returned is spaced. Version 2.0.0 is 2000000 while the hypothetical version 2.34.9 would be 2034009.","title":"MWSE Version Checking"},{"location":"references/mwse-mwscript/utility/","text":"Utility Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xGetGlobal \u2693\ufe0e Parameters: string globalName : The name of the global. Returned: long found : 1 if the global was found, otherwise 0. float value : The value of the global. Returns the value of a global represented by globalName . xGetGSString \u2693\ufe0e Parameters: long index : ID of the GMST to look up. Returned: string value : The GMST value at the given index . Fetches a GMST string by its given index and returns its value . xGetKeyBind \u2693\ufe0e Parameters: long controlType : The Control Type _ desired. Returned: long scanCode : The Key Scan Code _ for the controlType . long scanDevice : The device type used for the associated scan code. A value of 0 is keyboard, 1 is mouse, 2 is joystick. long keyCode : The Virtual-Key Code for the controlType . If this value is 0, the scan code could not be converted to a key code. This function allows scripts to determine what keys are configured by the player. Typically the keyCode is passed to xKeyPressed to determine if it is pressed. Other functions that require a scan code would make use of scanCode . Determine if the Activation Key is Pressed Begin IsActivating long scanCode long scanDevice long keyCode ; Get input information for the Activate key. setx scanCode scanDevice keyCode to xGetKeyBind 5 ifx (keyCode) ; Activation key was successfully obtained, get its state. setx isPressed to xKeyPressed keyCode if (isPressed) MessageBox \"Activation key pressed!\" endif endif StopScript \"IsActivating\" End xGetMCPFeatureState \u2693\ufe0e Parameters: long id : Identifier for the MCP feature. Returned: short state : 1 if the feature is enabled, 0 if it is disabled, or -1 if MWSE couldn't determine the MCP installation state. This function can be used to attempt to ensure that the user has the correct Morrowind Code Patch features enabled. Note The id parameter comes from mcpatch\\describe.json . For example, 137 matches with the Slowfall Overhaul component. Warning This functions depends on the user not deleting their mcpatch\\installed file. If the user doesn't have this file (because they deleted it or don't have the MCP installed), this function returns a value of -1 . Example begin DetectPickPocketOverhaul short state setx state to xGetMCPFeatureState 77 if (state) then MessageBox \"Pickpocket overhaul is enabled in MCP.\" endif end xKeyPressed \u2693\ufe0e Parameters: long keyCode : The Virtual-Key Code to check for input. Returned: long (many) keyStatus : The status of keyCode if the parameter is non-zero. Otherwise it returns multiple times, with every key code pressed. Monitors the status of the keyboard (and mouse buttons). This can be similar to GetPCSneaking, but actually detects whether a particular key is really being pressed. If input parameter code is a Virtual-Key Code (between 1 and 254) the return value will indicate the status of that key. A non-zero value means the key is being pressed. If the input code is 0, then on each call, the function will return the key code for the key (or one of the keys) currently being pressed. Warning Some of the codes match different keys on different keyboard layouts. Note The key VK code for a given input can be fetched using xKeyPressed , instead of having to rely on hardcoded values. xLogMessage \u2693\ufe0e Parameters: string format : The formatting for the log message. varies (many) input : Values to inject into the format . Returned: None Writes out formatted strings to the log file (mwse.log). This works much like MessageBox but with the additional formatting options described for xStringBuild . A trailing % in the format string will suppress the printing of the new line sequence allowing a single line of text to be created with two or more xLogMessage calls. The number of parameters specified in the format MUST match those supplied or there will be trouble. Note Literal strings in MWEdit have a maximum length of 63 characters. xMessageFix \u2693\ufe0e Parameters: string (many) newStrings : The strings used to overwrite the following MessageBox call. Returned: None This function allows you to use strings from variables with the MessageBox function with a few restrictions. The MessageBox command must immediately follow this one. The number of strings for this function must match the number of strings for the MessageBox. The MessageBox can have buttons but it can't use variables. The values of the strings used on the MessageBox will be replaced with the values from xMessageFix, but the MessageBox strings set a maximum size for each of the xMessageFix strings (it's OK if the MessageBox strings are longer than the MessageFix ones). Using xMessageFix can take both the string variable and literal string types and each string acts as a format string as described for the xStringBuild function. If a string ends in a single % and the formatted string takes less space than the matching string from MessageBox, the remaining characters of the MessageBox string will be used. While it is possible to use formatted messages and buttons, it is best to format strings with xStringBuild if there are buttons involved because of the limit of 12 parameters per function. xScriptRunning \u2693\ufe0e Parameters: string scriptName : The name of the script to determine the status of. Returned: long status : 1 if the script is running, or 0 if it is not (or does not exist). This function is a wrapper around ScriptRunning which allows a variable input. xSetGlobal \u2693\ufe0e Parameters: string globalName : The name of the global. float value : The value to set the global to. Returned: long found : 1 if the global was set, otherwise 0. Set the global represented by globalName to value . xSetGSString \u2693\ufe0e Parameters: long index : ID of the GMST to look up. string newValue : The value to set the GMST to. Returned: long valueSet : 1 if the value was successfully set. Fetches a GMST string by its given index , and sets its value to newValue xStartScript \u2693\ufe0e Parameters: string scriptName : The name of the script to determine the status of. Returned: None This function is a wrapper around StartScript which allows a variable input. xStopScript \u2693\ufe0e Parameters: string scriptName : The name of the script to determine the status of. Returned: None This function is a wrapper around StartScript which allows a variable input. xTextInput \u2693\ufe0e Parameters: string string : The string to modify with the user's input. long endCode : The Virtual-Key Code used to stop reading input. Returned: long length : The length of text . string text : The text entered. This function allows you to directly read keyboard input from the user and the results will be returned as a string. Pass a string and a virtual key code to the function. The function will wait for a key to be pressed and then take one of three actions. If the key pressed matches the endCode parameter, the string and its length are returned. If the key pressed is a printable ASCII character, the character is added to the string and the string and the number 0 are returned. If the key is RETURN or BACKSPACE, a new line is started or one character is removed from the string, and the modifed string and a 0 are returned. The function returns after each key press so that the current value of the string can be shown with xMessageFix and MessageBox but the string should only be used normally after the length is returned. Player controls should be disabled while this function is used. Note xGetKeyBind can be used to determine a specific key the user has configured. xTextInputAlt \u2693\ufe0e Parameters: string string : The string to modify with the user's input. long endCode : The Virtual-Key Code used to stop reading input. Returned: long length : The length of text . string text : The text entered. This function is identical to xTextInput except that the function simply checks the status of keys and returns immediately rather than waiting for a key to be pressed.","title":"Utility Functions"},{"location":"references/mwse-mwscript/utility/#utility-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Utility Functions"},{"location":"references/mwse-mwscript/utility/#xgetglobal","text":"Parameters: string globalName : The name of the global. Returned: long found : 1 if the global was found, otherwise 0. float value : The value of the global. Returns the value of a global represented by globalName .","title":"xGetGlobal"},{"location":"references/mwse-mwscript/utility/#xgetgsstring","text":"Parameters: long index : ID of the GMST to look up. Returned: string value : The GMST value at the given index . Fetches a GMST string by its given index and returns its value .","title":"xGetGSString"},{"location":"references/mwse-mwscript/utility/#xgetkeybind","text":"Parameters: long controlType : The Control Type _ desired. Returned: long scanCode : The Key Scan Code _ for the controlType . long scanDevice : The device type used for the associated scan code. A value of 0 is keyboard, 1 is mouse, 2 is joystick. long keyCode : The Virtual-Key Code for the controlType . If this value is 0, the scan code could not be converted to a key code. This function allows scripts to determine what keys are configured by the player. Typically the keyCode is passed to xKeyPressed to determine if it is pressed. Other functions that require a scan code would make use of scanCode . Determine if the Activation Key is Pressed Begin IsActivating long scanCode long scanDevice long keyCode ; Get input information for the Activate key. setx scanCode scanDevice keyCode to xGetKeyBind 5 ifx (keyCode) ; Activation key was successfully obtained, get its state. setx isPressed to xKeyPressed keyCode if (isPressed) MessageBox \"Activation key pressed!\" endif endif StopScript \"IsActivating\" End","title":"xGetKeyBind"},{"location":"references/mwse-mwscript/utility/#xgetmcpfeaturestate","text":"Parameters: long id : Identifier for the MCP feature. Returned: short state : 1 if the feature is enabled, 0 if it is disabled, or -1 if MWSE couldn't determine the MCP installation state. This function can be used to attempt to ensure that the user has the correct Morrowind Code Patch features enabled. Note The id parameter comes from mcpatch\\describe.json . For example, 137 matches with the Slowfall Overhaul component. Warning This functions depends on the user not deleting their mcpatch\\installed file. If the user doesn't have this file (because they deleted it or don't have the MCP installed), this function returns a value of -1 . Example begin DetectPickPocketOverhaul short state setx state to xGetMCPFeatureState 77 if (state) then MessageBox \"Pickpocket overhaul is enabled in MCP.\" endif end","title":"xGetMCPFeatureState"},{"location":"references/mwse-mwscript/utility/#xkeypressed","text":"Parameters: long keyCode : The Virtual-Key Code to check for input. Returned: long (many) keyStatus : The status of keyCode if the parameter is non-zero. Otherwise it returns multiple times, with every key code pressed. Monitors the status of the keyboard (and mouse buttons). This can be similar to GetPCSneaking, but actually detects whether a particular key is really being pressed. If input parameter code is a Virtual-Key Code (between 1 and 254) the return value will indicate the status of that key. A non-zero value means the key is being pressed. If the input code is 0, then on each call, the function will return the key code for the key (or one of the keys) currently being pressed. Warning Some of the codes match different keys on different keyboard layouts. Note The key VK code for a given input can be fetched using xKeyPressed , instead of having to rely on hardcoded values.","title":"xKeyPressed"},{"location":"references/mwse-mwscript/utility/#xlogmessage","text":"Parameters: string format : The formatting for the log message. varies (many) input : Values to inject into the format . Returned: None Writes out formatted strings to the log file (mwse.log). This works much like MessageBox but with the additional formatting options described for xStringBuild . A trailing % in the format string will suppress the printing of the new line sequence allowing a single line of text to be created with two or more xLogMessage calls. The number of parameters specified in the format MUST match those supplied or there will be trouble. Note Literal strings in MWEdit have a maximum length of 63 characters.","title":"xLogMessage"},{"location":"references/mwse-mwscript/utility/#xmessagefix","text":"Parameters: string (many) newStrings : The strings used to overwrite the following MessageBox call. Returned: None This function allows you to use strings from variables with the MessageBox function with a few restrictions. The MessageBox command must immediately follow this one. The number of strings for this function must match the number of strings for the MessageBox. The MessageBox can have buttons but it can't use variables. The values of the strings used on the MessageBox will be replaced with the values from xMessageFix, but the MessageBox strings set a maximum size for each of the xMessageFix strings (it's OK if the MessageBox strings are longer than the MessageFix ones). Using xMessageFix can take both the string variable and literal string types and each string acts as a format string as described for the xStringBuild function. If a string ends in a single % and the formatted string takes less space than the matching string from MessageBox, the remaining characters of the MessageBox string will be used. While it is possible to use formatted messages and buttons, it is best to format strings with xStringBuild if there are buttons involved because of the limit of 12 parameters per function.","title":"xMessageFix"},{"location":"references/mwse-mwscript/utility/#xscriptrunning","text":"Parameters: string scriptName : The name of the script to determine the status of. Returned: long status : 1 if the script is running, or 0 if it is not (or does not exist). This function is a wrapper around ScriptRunning which allows a variable input.","title":"xScriptRunning"},{"location":"references/mwse-mwscript/utility/#xsetglobal","text":"Parameters: string globalName : The name of the global. float value : The value to set the global to. Returned: long found : 1 if the global was set, otherwise 0. Set the global represented by globalName to value .","title":"xSetGlobal"},{"location":"references/mwse-mwscript/utility/#xsetgsstring","text":"Parameters: long index : ID of the GMST to look up. string newValue : The value to set the GMST to. Returned: long valueSet : 1 if the value was successfully set. Fetches a GMST string by its given index , and sets its value to newValue","title":"xSetGSString"},{"location":"references/mwse-mwscript/utility/#xstartscript","text":"Parameters: string scriptName : The name of the script to determine the status of. Returned: None This function is a wrapper around StartScript which allows a variable input.","title":"xStartScript"},{"location":"references/mwse-mwscript/utility/#xstopscript","text":"Parameters: string scriptName : The name of the script to determine the status of. Returned: None This function is a wrapper around StartScript which allows a variable input.","title":"xStopScript"},{"location":"references/mwse-mwscript/utility/#xtextinput","text":"Parameters: string string : The string to modify with the user's input. long endCode : The Virtual-Key Code used to stop reading input. Returned: long length : The length of text . string text : The text entered. This function allows you to directly read keyboard input from the user and the results will be returned as a string. Pass a string and a virtual key code to the function. The function will wait for a key to be pressed and then take one of three actions. If the key pressed matches the endCode parameter, the string and its length are returned. If the key pressed is a printable ASCII character, the character is added to the string and the string and the number 0 are returned. If the key is RETURN or BACKSPACE, a new line is started or one character is removed from the string, and the modifed string and a 0 are returned. The function returns after each key press so that the current value of the string can be shown with xMessageFix and MessageBox but the string should only be used normally after the length is returned. Player controls should be disabled while this function is used. Note xGetKeyBind can be used to determine a specific key the user has configured.","title":"xTextInput"},{"location":"references/mwse-mwscript/utility/#xtextinputalt","text":"Parameters: string string : The string to modify with the user's input. long endCode : The Virtual-Key Code used to stop reading input. Returned: long length : The length of text . string text : The text entered. This function is identical to xTextInput except that the function simply checks the status of keys and returns immediately rather than waiting for a key to be pressed.","title":"xTextInputAlt"},{"location":"references/other/patches/","text":"Patches \u2693\ufe0e The following patches are included by MWSE. Features \u2693\ufe0e Allows Morrowind to run when not in focus. Allows NiFlipController to specify its affected map correctly. Allows NiLinesData to be loaded from meshes. Allows NiUVController to specify its texture correctly. Creates crash dump files and logging information to help diagnose mod issues. Disable mwscript function updates collision information so the player won't collide with invisible references. Improves load times when using Mod Organizer 2. Optimizes DontThreadLoad ini file access to not always fetch from the file system. Optimizes ShowMap and FillMap to not be absurdly slow. Optimizes access to global variables. Optimizes access to player kill count, via GetDeadCount or dialogue filtering. Raises mod limit from 256 to 1024. Bug Fixes \u2693\ufe0e Allows the game to correctly close when quit with a messagebox popup, preventing rogue Morrowind.exe processes from hanging in the background. Athletics and sneak skill progress code made consistent with other skill advancements. Useful to modders. Correctly initialize MobileProjectile tag/objectType. Useful to modders. Enable and Disable mwscript functions no longer can cause crashes with script variables unset. Fixes book and weapon enchantment copying. Useful to modders. Fixes crash when updating cell markers at the border of the drawable map area. Fixes crash with paper doll equipping/unequipping. Fixes crash with uncloned actors removing items. Fixes time being nudged forward by small extra increments when resting. Fixes time being truncated when advancing time past midnight. Fixes transparency effects from invisibility/chameleon from being desynced when changing equipment. Prevents empty menu positions from saving to the ini file. Updates animations for third person and first person player reference when idle mode is flagged.","title":"Patches"},{"location":"references/other/patches/#patches","text":"The following patches are included by MWSE.","title":"Patches"},{"location":"references/other/patches/#features","text":"Allows Morrowind to run when not in focus. Allows NiFlipController to specify its affected map correctly. Allows NiLinesData to be loaded from meshes. Allows NiUVController to specify its texture correctly. Creates crash dump files and logging information to help diagnose mod issues. Disable mwscript function updates collision information so the player won't collide with invisible references. Improves load times when using Mod Organizer 2. Optimizes DontThreadLoad ini file access to not always fetch from the file system. Optimizes ShowMap and FillMap to not be absurdly slow. Optimizes access to global variables. Optimizes access to player kill count, via GetDeadCount or dialogue filtering. Raises mod limit from 256 to 1024.","title":"Features"},{"location":"references/other/patches/#bug-fixes","text":"Allows the game to correctly close when quit with a messagebox popup, preventing rogue Morrowind.exe processes from hanging in the background. Athletics and sneak skill progress code made consistent with other skill advancements. Useful to modders. Correctly initialize MobileProjectile tag/objectType. Useful to modders. Enable and Disable mwscript functions no longer can cause crashes with script variables unset. Fixes book and weapon enchantment copying. Useful to modders. Fixes crash when updating cell markers at the border of the drawable map area. Fixes crash with paper doll equipping/unequipping. Fixes crash with uncloned actors removing items. Fixes time being nudged forward by small extra increments when resting. Fixes time being truncated when advancing time past midnight. Fixes transparency effects from invisibility/chameleon from being desynced when changing equipment. Prevents empty menu positions from saving to the ini file. Updates animations for third person and first person player reference when idle mode is flagged.","title":"Bug Fixes"},{"location":"types/ioFile/","text":"ioFile \u2693\ufe0e An object that represents an open file.","title":"ioFile"},{"location":"types/ioFile/#iofile","text":"An object that represents an open file.","title":"ioFile"},{"location":"types/lfsLock/","text":"lfsLock \u2693\ufe0e An object that represents a file lock. Methods \u2693\ufe0e free \u2693\ufe0e Frees the lock, so that another lock can be made. Deletes the associated lock file. lfsLock : free ()","title":"lfsLock"},{"location":"types/lfsLock/#lfslock","text":"An object that represents a file lock.","title":"lfsLock"},{"location":"types/lfsLock/#methods","text":"","title":"Methods"},{"location":"types/lfsLock/#free","text":"Frees the lock, so that another lock can be made. Deletes the associated lock file. lfsLock : free ()","title":"free"},{"location":"types/mwseLuaExecutor/","text":"mwseLuaExecutor \u2693\ufe0e A handle to a command excuted using os.execute configured to run asynchronously. Properties \u2693\ufe0e command \u2693\ufe0e The command originally passed to os.execute . Returns : result (string) errorCode \u2693\ufe0e The error code of the program, or 0 if there was no error. Returns : result (number) exitCode \u2693\ufe0e The exit code of the program, or nil if the program has not yet finished. Returns : result (number, nil) ready \u2693\ufe0e If true, the program is no longer running and output can be read. Returns : result (boolean) Methods \u2693\ufe0e getOutput \u2693\ufe0e Reads the current output of the program, and clears the output buffer. local output = mwseLuaExecutor : getOutput () Returns : output (string): The output written to stdout by the program. wait \u2693\ufe0e Pauses the main thread, locking up the program until the program has finished. mwseLuaExecutor : wait ()","title":"mwseLuaExecutor"},{"location":"types/mwseLuaExecutor/#mwseluaexecutor","text":"A handle to a command excuted using os.execute configured to run asynchronously.","title":"mwseLuaExecutor"},{"location":"types/mwseLuaExecutor/#properties","text":"","title":"Properties"},{"location":"types/mwseLuaExecutor/#command","text":"The command originally passed to os.execute . Returns : result (string)","title":"command"},{"location":"types/mwseLuaExecutor/#errorcode","text":"The error code of the program, or 0 if there was no error. Returns : result (number)","title":"errorCode"},{"location":"types/mwseLuaExecutor/#exitcode","text":"The exit code of the program, or nil if the program has not yet finished. Returns : result (number, nil)","title":"exitCode"},{"location":"types/mwseLuaExecutor/#ready","text":"If true, the program is no longer running and output can be read. Returns : result (boolean)","title":"ready"},{"location":"types/mwseLuaExecutor/#methods","text":"","title":"Methods"},{"location":"types/mwseLuaExecutor/#getoutput","text":"Reads the current output of the program, and clears the output buffer. local output = mwseLuaExecutor : getOutput () Returns : output (string): The output written to stdout by the program.","title":"getOutput"},{"location":"types/mwseLuaExecutor/#wait","text":"Pauses the main thread, locking up the program until the program has finished. mwseLuaExecutor : wait ()","title":"wait"},{"location":"types/mwseTimer/","text":"mwseTimer \u2693\ufe0e A Timer is a class used to keep track of callback that should be invoked at a later time. Properties \u2693\ufe0e callback \u2693\ufe0e The callback that will be invoked when the timer elapses. Returns : result (function) duration \u2693\ufe0e The amount of time left on the timer. Returns : result (number) iterations \u2693\ufe0e The amount of iterations left for the timer. Returns : result (number) state \u2693\ufe0e The state of the timer, matching timer.active , timer.paused , or timer.expired . Returns : result (number) timeLeft \u2693\ufe0e The amount of time left before this timer will complete. Returns : result (number) timing \u2693\ufe0e When this timer ends, or the time remaining if the timer is paused. Returns : result (number) Methods \u2693\ufe0e cancel \u2693\ufe0e Cancels the timer. mwseTimer : cancel () pause \u2693\ufe0e Pauses the timer. mwseTimer : pause () reset \u2693\ufe0e Resets the timer completion time, as if it elapsed. Only works if the timer is active. mwseTimer : reset () resume \u2693\ufe0e Resumes a paused timer. mwseTimer : resume ()","title":"mwseTimer"},{"location":"types/mwseTimer/#mwsetimer","text":"A Timer is a class used to keep track of callback that should be invoked at a later time.","title":"mwseTimer"},{"location":"types/mwseTimer/#properties","text":"","title":"Properties"},{"location":"types/mwseTimer/#callback","text":"The callback that will be invoked when the timer elapses. Returns : result (function)","title":"callback"},{"location":"types/mwseTimer/#duration","text":"The amount of time left on the timer. Returns : result (number)","title":"duration"},{"location":"types/mwseTimer/#iterations","text":"The amount of iterations left for the timer. Returns : result (number)","title":"iterations"},{"location":"types/mwseTimer/#state","text":"The state of the timer, matching timer.active , timer.paused , or timer.expired . Returns : result (number)","title":"state"},{"location":"types/mwseTimer/#timeleft","text":"The amount of time left before this timer will complete. Returns : result (number)","title":"timeLeft"},{"location":"types/mwseTimer/#timing","text":"When this timer ends, or the time remaining if the timer is paused. Returns : result (number)","title":"timing"},{"location":"types/mwseTimer/#methods","text":"","title":"Methods"},{"location":"types/mwseTimer/#cancel","text":"Cancels the timer. mwseTimer : cancel ()","title":"cancel"},{"location":"types/mwseTimer/#pause","text":"Pauses the timer. mwseTimer : pause ()","title":"pause"},{"location":"types/mwseTimer/#reset","text":"Resets the timer completion time, as if it elapsed. Only works if the timer is active. mwseTimer : reset ()","title":"reset"},{"location":"types/mwseTimer/#resume","text":"Resumes a paused timer. mwseTimer : resume ()","title":"resume"},{"location":"types/mwseTimerController/","text":"mwseTimerController \u2693\ufe0e A Timer Controller is a class used to sort and trigger callbacks based on an arbitrary timekeeping mechanic. Properties \u2693\ufe0e clock \u2693\ufe0e The current clock time for this timer controller. Returns : result (number) Methods \u2693\ufe0e create \u2693\ufe0e Creates a timer for the given Timer Controller. local timer = mwseTimerController : create ({ type = ..., duration = ..., callback = ..., iterations = ... }) Parameters : params (table) type (number) duration (number) callback (function) iterations (number): Optional . Returns : timer ( mwseTimer ) Functions \u2693\ufe0e new \u2693\ufe0e Creates a new Timer Controller. Its initial clock is zero, unless a start time is provided. local result = mwseTimerController . new ( startTime ) Parameters : startTime (number): Optional . Returns : result ( mwseTimerController )","title":"mwseTimerController"},{"location":"types/mwseTimerController/#mwsetimercontroller","text":"A Timer Controller is a class used to sort and trigger callbacks based on an arbitrary timekeeping mechanic.","title":"mwseTimerController"},{"location":"types/mwseTimerController/#properties","text":"","title":"Properties"},{"location":"types/mwseTimerController/#clock","text":"The current clock time for this timer controller. Returns : result (number)","title":"clock"},{"location":"types/mwseTimerController/#methods","text":"","title":"Methods"},{"location":"types/mwseTimerController/#create","text":"Creates a timer for the given Timer Controller. local timer = mwseTimerController : create ({ type = ..., duration = ..., callback = ..., iterations = ... }) Parameters : params (table) type (number) duration (number) callback (function) iterations (number): Optional . Returns : timer ( mwseTimer )","title":"create"},{"location":"types/mwseTimerController/#functions","text":"","title":"Functions"},{"location":"types/mwseTimerController/#new","text":"Creates a new Timer Controller. Its initial clock is zero, unless a start time is provided. local result = mwseTimerController . new ( startTime ) Parameters : startTime (number): Optional . Returns : result ( mwseTimerController )","title":"new"},{"location":"types/niAVObject/","text":"niAVObject \u2693\ufe0e The typical base type for most NetImmerse scene graph objects. This type inherits the following: niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil) Methods \u2693\ufe0e attachProperty \u2693\ufe0e Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. niAVObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController ) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update () updateEffects \u2693\ufe0e Update all attached effects. niAVObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. niAVObject : updateProperties ()","title":"niAVObject"},{"location":"types/niAVObject/#niavobject","text":"The typical base type for most NetImmerse scene graph objects. This type inherits the following: niObjectNET , niObject","title":"niAVObject"},{"location":"types/niAVObject/#properties","text":"","title":"Properties"},{"location":"types/niAVObject/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niAVObject/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niAVObject/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niAVObject/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niAVObject/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niAVObject/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niAVObject/#parent","text":"The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niAVObject/#properties_1","text":"The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niAVObject/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niAVObject/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niAVObject/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niAVObject/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niAVObject/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niAVObject/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niAVObject/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niAVObject/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niAVObject/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil)","title":"zBufferProperty"},{"location":"types/niAVObject/#methods","text":"","title":"Methods"},{"location":"types/niAVObject/#attachproperty","text":"Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niAVObject/#cleartransforms","text":"Resets the object's local transform. niAVObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niAVObject/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niAVObject/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niAVObject/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niAVObject/#getproperty","text":"Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niAVObject/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niAVObject/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niAVObject/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niAVObject/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niAVObject/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niAVObject/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update ()","title":"update"},{"location":"types/niAVObject/#updateeffects","text":"Update all attached effects. niAVObject : updateEffects ()","title":"updateEffects"},{"location":"types/niAVObject/#updateproperties","text":"Update all attached properties. niAVObject : updateProperties ()","title":"updateProperties"},{"location":"types/niAlphaProperty/","text":"niAlphaProperty \u2693\ufe0e A rendering property that manages alpha blending, enabling and disabling it, and setting blending functions. The property affects alpha testing, which can provide a performance boost. This type inherits the following: niProperty , niObjectNET , niObject Properties \u2693\ufe0e alphaTestRef \u2693\ufe0e No description. Returns : result (string) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) type \u2693\ufe0e The unique class identifier number of the given rendering property. Returns : result (niPropertyType) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"niAlphaProperty"},{"location":"types/niAlphaProperty/#nialphaproperty","text":"A rendering property that manages alpha blending, enabling and disabling it, and setting blending functions. The property affects alpha testing, which can provide a performance boost. This type inherits the following: niProperty , niObjectNET , niObject","title":"niAlphaProperty"},{"location":"types/niAlphaProperty/#properties","text":"","title":"Properties"},{"location":"types/niAlphaProperty/#alphatestref","text":"No description. Returns : result (string)","title":"alphaTestRef"},{"location":"types/niAlphaProperty/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niAlphaProperty/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niAlphaProperty/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niAlphaProperty/#type","text":"The unique class identifier number of the given rendering property. Returns : result (niPropertyType)","title":"type"},{"location":"types/niAlphaProperty/#methods","text":"","title":"Methods"},{"location":"types/niAlphaProperty/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niAlphaProperty/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niAlphaProperty/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niAlphaProperty/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niAlphaProperty/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niAlphaProperty/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niAmbientLight/","text":"niAmbientLight \u2693\ufe0e An object that represents an ambient light. This object is fairly simple, and has no location, direction, or attenuation. This type inherits the following: niLight , niDynamicEffect , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e affectedNodes \u2693\ufe0e The list of nodes that a given dynamic effect will affect. Returns : result (niNodeLinkedList) alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) ambient \u2693\ufe0e The ambient settings for the light. Returns : result ( niColor ) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) diffuse \u2693\ufe0e The defuse settings for the light. Returns : result ( niColor ) dimmer \u2693\ufe0e The dimmer settings for the light. Returns : result ( niColor ) enabled \u2693\ufe0e The enabled state of a given dynamic effect. Returns : result (boolean) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) specular \u2693\ufe0e The specular settings for the light. Returns : result ( niColor ) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) type \u2693\ufe0e The enumerated type of a given dynamic effect. Types: 0 - niAmbientLight , 1 - niDirectionalLight , 2 - niPointLight , 3 - niSpotLight , 4 - niTextureEffect . Returns : result (number) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil) Methods \u2693\ufe0e attachProperty \u2693\ufe0e Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. niAVObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController ) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update () updateEffects \u2693\ufe0e Update all attached effects. niAVObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. niAVObject : updateProperties () Functions \u2693\ufe0e attachAffectedNode \u2693\ufe0e Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list. detachAffectedNode \u2693\ufe0e Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"niAmbientLight"},{"location":"types/niAmbientLight/#niambientlight","text":"An object that represents an ambient light. This object is fairly simple, and has no location, direction, or attenuation. This type inherits the following: niLight , niDynamicEffect , niAVObject , niObjectNET , niObject","title":"niAmbientLight"},{"location":"types/niAmbientLight/#properties","text":"","title":"Properties"},{"location":"types/niAmbientLight/#affectednodes","text":"The list of nodes that a given dynamic effect will affect. Returns : result (niNodeLinkedList)","title":"affectedNodes"},{"location":"types/niAmbientLight/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niAmbientLight/#ambient","text":"The ambient settings for the light. Returns : result ( niColor )","title":"ambient"},{"location":"types/niAmbientLight/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niAmbientLight/#diffuse","text":"The defuse settings for the light. Returns : result ( niColor )","title":"diffuse"},{"location":"types/niAmbientLight/#dimmer","text":"The dimmer settings for the light. Returns : result ( niColor )","title":"dimmer"},{"location":"types/niAmbientLight/#enabled","text":"The enabled state of a given dynamic effect. Returns : result (boolean)","title":"enabled"},{"location":"types/niAmbientLight/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niAmbientLight/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niAmbientLight/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niAmbientLight/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niAmbientLight/#parent","text":"The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niAmbientLight/#properties_1","text":"The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niAmbientLight/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niAmbientLight/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niAmbientLight/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niAmbientLight/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niAmbientLight/#specular","text":"The specular settings for the light. Returns : result ( niColor )","title":"specular"},{"location":"types/niAmbientLight/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niAmbientLight/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niAmbientLight/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niAmbientLight/#type","text":"The enumerated type of a given dynamic effect. Types: 0 - niAmbientLight , 1 - niDirectionalLight , 2 - niPointLight , 3 - niSpotLight , 4 - niTextureEffect . Returns : result (number)","title":"type"},{"location":"types/niAmbientLight/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niAmbientLight/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil)","title":"zBufferProperty"},{"location":"types/niAmbientLight/#methods","text":"","title":"Methods"},{"location":"types/niAmbientLight/#attachproperty","text":"Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niAmbientLight/#cleartransforms","text":"Resets the object's local transform. niAVObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niAmbientLight/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niAmbientLight/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niAmbientLight/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niAmbientLight/#getproperty","text":"Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niAmbientLight/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niAmbientLight/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niAmbientLight/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niAmbientLight/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niAmbientLight/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niAmbientLight/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update ()","title":"update"},{"location":"types/niAmbientLight/#updateeffects","text":"Update all attached effects. niAVObject : updateEffects ()","title":"updateEffects"},{"location":"types/niAmbientLight/#updateproperties","text":"Update all attached properties. niAVObject : updateProperties ()","title":"updateProperties"},{"location":"types/niAmbientLight/#functions","text":"","title":"Functions"},{"location":"types/niAmbientLight/#attachaffectednode","text":"Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list.","title":"attachAffectedNode"},{"location":"types/niAmbientLight/#detachaffectednode","text":"Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"detachAffectedNode"},{"location":"types/niBillboardNode/","text":"niBillboardNode \u2693\ufe0e This node adjusts its render-time orientation so that the local z axis will face the camera. It supports multiple modes: camera parallel, or rotation around the local Y axis. This type inherits the following: niNode , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) children \u2693\ufe0e Read-only . The children of the node. Returns : result (niAVObjectTArray) effectList \u2693\ufe0e Read-only . The effect list of the node. Returns : result ( niDynamicEffectLinkedList ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) mode \u2693\ufe0e The orientation mode. 0 Always face camera. Local z-axis becomes parallel to the camera. Minimizes rotation difference from the previous frame for smoother motion. 1 Rotate about up vector. The object is rotated around its local y-axis so that its z-axis is pointing towards the camera. 2 Rigid face camera. Local z-axis becomes parallel to the camera. Does not depend on previous frame. Returns : result (number) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil) Methods \u2693\ufe0e attachChild \u2693\ufe0e Attachs the child to the children list of the node. niNode : attachChild ( child , useFirstAvailable ) Parameters : child ( niAVObject ) useFirstAvailable (boolean): Optional . Use the first available space in the list. Default value is False. attachProperty \u2693\ufe0e Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. niAVObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) detachChild \u2693\ufe0e Detaches the child from the children list of the node. Returns the detached child. local result = niNode : detachChild ( child ) Parameters : child ( niAVObject ) Returns : result ( niAVObject ) detachChildAt \u2693\ufe0e Detaches the child at the specified index from the children list of the node. Returns the detached child. local result = niNode : detachChildAt ( index ) Parameters : index (number) Returns : result ( niAVObject ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) getEffect \u2693\ufe0e Gets the effect for the given type. local result = niNode : getEffect ( type ) Parameters : type (number) Returns : result ( niDynamicEffect ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController ) rotateToCamera \u2693\ufe0e Updates the world transform to point at a camera. Used automatically during rendering. This method is only needed when you need to get the world transform without rendering. niBillboardNode : rotateToCamera ( camera ) Parameters : camera ( niCamera ) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update () updateEffects \u2693\ufe0e Update all attached effects. niAVObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. niAVObject : updateProperties ()","title":"niBillboardNode"},{"location":"types/niBillboardNode/#nibillboardnode","text":"This node adjusts its render-time orientation so that the local z axis will face the camera. It supports multiple modes: camera parallel, or rotation around the local Y axis. This type inherits the following: niNode , niAVObject , niObjectNET , niObject","title":"niBillboardNode"},{"location":"types/niBillboardNode/#properties","text":"","title":"Properties"},{"location":"types/niBillboardNode/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niBillboardNode/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niBillboardNode/#children","text":"Read-only . The children of the node. Returns : result (niAVObjectTArray)","title":"children"},{"location":"types/niBillboardNode/#effectlist","text":"Read-only . The effect list of the node. Returns : result ( niDynamicEffectLinkedList )","title":"effectList"},{"location":"types/niBillboardNode/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niBillboardNode/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niBillboardNode/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niBillboardNode/#mode","text":"The orientation mode. 0 Always face camera. Local z-axis becomes parallel to the camera. Minimizes rotation difference from the previous frame for smoother motion. 1 Rotate about up vector. The object is rotated around its local y-axis so that its z-axis is pointing towards the camera. 2 Rigid face camera. Local z-axis becomes parallel to the camera. Does not depend on previous frame. Returns : result (number)","title":"mode"},{"location":"types/niBillboardNode/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niBillboardNode/#parent","text":"The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niBillboardNode/#properties_1","text":"The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niBillboardNode/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niBillboardNode/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niBillboardNode/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niBillboardNode/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niBillboardNode/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niBillboardNode/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niBillboardNode/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niBillboardNode/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niBillboardNode/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil)","title":"zBufferProperty"},{"location":"types/niBillboardNode/#methods","text":"","title":"Methods"},{"location":"types/niBillboardNode/#attachchild","text":"Attachs the child to the children list of the node. niNode : attachChild ( child , useFirstAvailable ) Parameters : child ( niAVObject ) useFirstAvailable (boolean): Optional . Use the first available space in the list. Default value is False.","title":"attachChild"},{"location":"types/niBillboardNode/#attachproperty","text":"Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niBillboardNode/#cleartransforms","text":"Resets the object's local transform. niAVObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niBillboardNode/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niBillboardNode/#detachchild","text":"Detaches the child from the children list of the node. Returns the detached child. local result = niNode : detachChild ( child ) Parameters : child ( niAVObject ) Returns : result ( niAVObject )","title":"detachChild"},{"location":"types/niBillboardNode/#detachchildat","text":"Detaches the child at the specified index from the children list of the node. Returns the detached child. local result = niNode : detachChildAt ( index ) Parameters : index (number) Returns : result ( niAVObject )","title":"detachChildAt"},{"location":"types/niBillboardNode/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niBillboardNode/#geteffect","text":"Gets the effect for the given type. local result = niNode : getEffect ( type ) Parameters : type (number) Returns : result ( niDynamicEffect )","title":"getEffect"},{"location":"types/niBillboardNode/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niBillboardNode/#getproperty","text":"Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niBillboardNode/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niBillboardNode/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niBillboardNode/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niBillboardNode/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niBillboardNode/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niBillboardNode/#rotatetocamera","text":"Updates the world transform to point at a camera. Used automatically during rendering. This method is only needed when you need to get the world transform without rendering. niBillboardNode : rotateToCamera ( camera ) Parameters : camera ( niCamera )","title":"rotateToCamera"},{"location":"types/niBillboardNode/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update ()","title":"update"},{"location":"types/niBillboardNode/#updateeffects","text":"Update all attached effects. niAVObject : updateEffects ()","title":"updateEffects"},{"location":"types/niBillboardNode/#updateproperties","text":"Update all attached properties. niAVObject : updateProperties ()","title":"updateProperties"},{"location":"types/niCamera/","text":"niCamera \u2693\ufe0e Object that represent a camera. Position and orientation is determined by parent properties. This type inherits the following: niAVObject , niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) cullingPlanes \u2693\ufe0e The culling planes of the camera. Returns : result (table) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) lodAdjust \u2693\ufe0e The level-of-detail adjustment value for the camera. A higher value will lower the LOD of the objects drawn by the camera. Returns : result (number) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) port \u2693\ufe0e The port on the backbuffer of the camera. Returns : result ( tes3vector4 ) properties \u2693\ufe0e The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) renderer \u2693\ufe0e Read-only . The renderer of the camera. Returns : result ( niObject ) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) scene \u2693\ufe0e Read-only . The scene of the camera. Returns : result ( niObject ) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) viewDistance \u2693\ufe0e The view distance of the camera. Returns : result (number) worldDirection \u2693\ufe0e Defines the X-axis of the camera. Returns : result ( tes3vector3 ) worldRight \u2693\ufe0e Defines the Z-axis of the camera. Returns : result ( tes3vector3 ) worldToCamera \u2693\ufe0e The world-to-camera transform matrix in row-major order. Returns : result ( tes3matrix44 ) worldUp \u2693\ufe0e Defines the Y-axis of the camera. Returns : result ( tes3vector3 ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil) Methods \u2693\ufe0e attachProperty \u2693\ufe0e Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. niAVObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController ) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update () updateEffects \u2693\ufe0e Update all attached effects. niAVObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. niAVObject : updateProperties () windowPointToRay \u2693\ufe0e Given a screen space position, calculates the world position and outlook direction. This can be useful when trying to find a reference under a UI element, such as the cusor. local origin , direction = niCamera : windowPointToRay ( point ) Parameters : point ( tes3vector2 ): The screen position to calculate a world ray for. Screen space is measured as ([-screenWidth/2, screenWidth/2], [-screenHeight/2, screenHeight/2]) with up-right being positive and an origin at the center of the screen. Returns : origin ( tes3vector3 ): The world point that the given screen position looks out from. direction ( tes3vector3 ): The look direction of the camera from the given origin point. worldPointToScreenPoint \u2693\ufe0e Given a world coordinate position, calculates where that point relates to the screen space. local screenPosition = niCamera : worldPointToScreenPoint ( point ) Parameters : point ( tes3vector3 ): The world position to calculate screen position for. Returns : screenPosition ( tes3vector2 ): The screen space position. Screen space is measured as ([-screenWidth/2, screenWidth/2], [-screenHeight/2, screenHeight/2]) with up-right being positive and an origin at the center of the screen.","title":"niCamera"},{"location":"types/niCamera/#nicamera","text":"Object that represent a camera. Position and orientation is determined by parent properties. This type inherits the following: niAVObject , niObjectNET , niObject","title":"niCamera"},{"location":"types/niCamera/#properties","text":"","title":"Properties"},{"location":"types/niCamera/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niCamera/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niCamera/#cullingplanes","text":"The culling planes of the camera. Returns : result (table)","title":"cullingPlanes"},{"location":"types/niCamera/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niCamera/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niCamera/#lodadjust","text":"The level-of-detail adjustment value for the camera. A higher value will lower the LOD of the objects drawn by the camera. Returns : result (number)","title":"lodAdjust"},{"location":"types/niCamera/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niCamera/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niCamera/#parent","text":"The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niCamera/#port","text":"The port on the backbuffer of the camera. Returns : result ( tes3vector4 )","title":"port"},{"location":"types/niCamera/#properties_1","text":"The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niCamera/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niCamera/#renderer","text":"Read-only . The renderer of the camera. Returns : result ( niObject )","title":"renderer"},{"location":"types/niCamera/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niCamera/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niCamera/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niCamera/#scene","text":"Read-only . The scene of the camera. Returns : result ( niObject )","title":"scene"},{"location":"types/niCamera/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niCamera/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niCamera/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niCamera/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niCamera/#viewdistance","text":"The view distance of the camera. Returns : result (number)","title":"viewDistance"},{"location":"types/niCamera/#worlddirection","text":"Defines the X-axis of the camera. Returns : result ( tes3vector3 )","title":"worldDirection"},{"location":"types/niCamera/#worldright","text":"Defines the Z-axis of the camera. Returns : result ( tes3vector3 )","title":"worldRight"},{"location":"types/niCamera/#worldtocamera","text":"The world-to-camera transform matrix in row-major order. Returns : result ( tes3matrix44 )","title":"worldToCamera"},{"location":"types/niCamera/#worldup","text":"Defines the Y-axis of the camera. Returns : result ( tes3vector3 )","title":"worldUp"},{"location":"types/niCamera/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil)","title":"zBufferProperty"},{"location":"types/niCamera/#methods","text":"","title":"Methods"},{"location":"types/niCamera/#attachproperty","text":"Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niCamera/#cleartransforms","text":"Resets the object's local transform. niAVObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niCamera/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niCamera/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niCamera/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niCamera/#getproperty","text":"Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niCamera/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niCamera/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niCamera/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niCamera/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niCamera/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niCamera/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update ()","title":"update"},{"location":"types/niCamera/#updateeffects","text":"Update all attached effects. niAVObject : updateEffects ()","title":"updateEffects"},{"location":"types/niCamera/#updateproperties","text":"Update all attached properties. niAVObject : updateProperties ()","title":"updateProperties"},{"location":"types/niCamera/#windowpointtoray","text":"Given a screen space position, calculates the world position and outlook direction. This can be useful when trying to find a reference under a UI element, such as the cusor. local origin , direction = niCamera : windowPointToRay ( point ) Parameters : point ( tes3vector2 ): The screen position to calculate a world ray for. Screen space is measured as ([-screenWidth/2, screenWidth/2], [-screenHeight/2, screenHeight/2]) with up-right being positive and an origin at the center of the screen. Returns : origin ( tes3vector3 ): The world point that the given screen position looks out from. direction ( tes3vector3 ): The look direction of the camera from the given origin point.","title":"windowPointToRay"},{"location":"types/niCamera/#worldpointtoscreenpoint","text":"Given a world coordinate position, calculates where that point relates to the screen space. local screenPosition = niCamera : worldPointToScreenPoint ( point ) Parameters : point ( tes3vector3 ): The world position to calculate screen position for. Returns : screenPosition ( tes3vector2 ): The screen space position. Screen space is measured as ([-screenWidth/2, screenWidth/2], [-screenHeight/2, screenHeight/2]) with up-right being positive and an origin at the center of the screen.","title":"worldPointToScreenPoint"},{"location":"types/niCollisionSwitch/","text":"niCollisionSwitch \u2693\ufe0e An object that specifies if the collision system is enabled. This type inherits the following: niNode , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) children \u2693\ufe0e Read-only . The children of the node. Returns : result (niAVObjectTArray) collisionActive \u2693\ufe0e The enabled state of collision on the collision switch. Returns : result (boolean) effectList \u2693\ufe0e Read-only . The effect list of the node. Returns : result ( niDynamicEffectLinkedList ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil) Methods \u2693\ufe0e attachChild \u2693\ufe0e Attachs the child to the children list of the node. niNode : attachChild ( child , useFirstAvailable ) Parameters : child ( niAVObject ) useFirstAvailable (boolean): Optional . Use the first available space in the list. Default value is False. attachProperty \u2693\ufe0e Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. niAVObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) detachChild \u2693\ufe0e Detaches the child from the children list of the node. Returns the detached child. local result = niNode : detachChild ( child ) Parameters : child ( niAVObject ) Returns : result ( niAVObject ) detachChildAt \u2693\ufe0e Detaches the child at the specified index from the children list of the node. Returns the detached child. local result = niNode : detachChildAt ( index ) Parameters : index (number) Returns : result ( niAVObject ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) getEffect \u2693\ufe0e Gets the effect for the given type. local result = niNode : getEffect ( type ) Parameters : type (number) Returns : result ( niDynamicEffect ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController ) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update () updateEffects \u2693\ufe0e Update all attached effects. niAVObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. niAVObject : updateProperties ()","title":"niCollisionSwitch"},{"location":"types/niCollisionSwitch/#nicollisionswitch","text":"An object that specifies if the collision system is enabled. This type inherits the following: niNode , niAVObject , niObjectNET , niObject","title":"niCollisionSwitch"},{"location":"types/niCollisionSwitch/#properties","text":"","title":"Properties"},{"location":"types/niCollisionSwitch/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niCollisionSwitch/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niCollisionSwitch/#children","text":"Read-only . The children of the node. Returns : result (niAVObjectTArray)","title":"children"},{"location":"types/niCollisionSwitch/#collisionactive","text":"The enabled state of collision on the collision switch. Returns : result (boolean)","title":"collisionActive"},{"location":"types/niCollisionSwitch/#effectlist","text":"Read-only . The effect list of the node. Returns : result ( niDynamicEffectLinkedList )","title":"effectList"},{"location":"types/niCollisionSwitch/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niCollisionSwitch/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niCollisionSwitch/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niCollisionSwitch/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niCollisionSwitch/#parent","text":"The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niCollisionSwitch/#properties_1","text":"The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niCollisionSwitch/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niCollisionSwitch/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niCollisionSwitch/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niCollisionSwitch/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niCollisionSwitch/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niCollisionSwitch/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niCollisionSwitch/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niCollisionSwitch/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niCollisionSwitch/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil)","title":"zBufferProperty"},{"location":"types/niCollisionSwitch/#methods","text":"","title":"Methods"},{"location":"types/niCollisionSwitch/#attachchild","text":"Attachs the child to the children list of the node. niNode : attachChild ( child , useFirstAvailable ) Parameters : child ( niAVObject ) useFirstAvailable (boolean): Optional . Use the first available space in the list. Default value is False.","title":"attachChild"},{"location":"types/niCollisionSwitch/#attachproperty","text":"Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niCollisionSwitch/#cleartransforms","text":"Resets the object's local transform. niAVObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niCollisionSwitch/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niCollisionSwitch/#detachchild","text":"Detaches the child from the children list of the node. Returns the detached child. local result = niNode : detachChild ( child ) Parameters : child ( niAVObject ) Returns : result ( niAVObject )","title":"detachChild"},{"location":"types/niCollisionSwitch/#detachchildat","text":"Detaches the child at the specified index from the children list of the node. Returns the detached child. local result = niNode : detachChildAt ( index ) Parameters : index (number) Returns : result ( niAVObject )","title":"detachChildAt"},{"location":"types/niCollisionSwitch/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niCollisionSwitch/#geteffect","text":"Gets the effect for the given type. local result = niNode : getEffect ( type ) Parameters : type (number) Returns : result ( niDynamicEffect )","title":"getEffect"},{"location":"types/niCollisionSwitch/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niCollisionSwitch/#getproperty","text":"Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niCollisionSwitch/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niCollisionSwitch/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niCollisionSwitch/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niCollisionSwitch/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niCollisionSwitch/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niCollisionSwitch/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update ()","title":"update"},{"location":"types/niCollisionSwitch/#updateeffects","text":"Update all attached effects. niAVObject : updateEffects ()","title":"updateEffects"},{"location":"types/niCollisionSwitch/#updateproperties","text":"Update all attached properties. niAVObject : updateProperties ()","title":"updateProperties"},{"location":"types/niColor/","text":"niColor \u2693\ufe0e An object that represents a RGB color. Properties \u2693\ufe0e b \u2693\ufe0e The blue value of the color. Returns : result (number) blue \u2693\ufe0e Alias for the blue value of the color. Returns : result (number) g \u2693\ufe0e The green value of the color. Returns : result (number) green \u2693\ufe0e Alias for the green value of the color. Returns : result (number) r \u2693\ufe0e The red value of the color. Returns : result (number) red \u2693\ufe0e Alias for the red value of the color. Returns : result (number) Methods \u2693\ufe0e clamp \u2693\ufe0e Clamps the color object. niColor : clamp () copy \u2693\ufe0e Creates a copy of the color object. local result = niColor : copy () Returns : result ( niColor ) lerp \u2693\ufe0e Calculates the interpolated color between this color and another, given a transition. local lerpedcolor = niColor : lerp ( tocolor , transition ) Parameters : tocolor ( niColor ): The color to interpolate towards. transition (number): The interpolation value. Must be between 0.0 (closer to this color) and 1.0 (closer to the other color). Returns : lerpedcolor ( niColor ): The calculated value. toVector3 \u2693\ufe0e Creates a vector3 of the color object. local result = niColor : toVector3 () Returns : result ( tes3vector3 )","title":"niColor"},{"location":"types/niColor/#nicolor","text":"An object that represents a RGB color.","title":"niColor"},{"location":"types/niColor/#properties","text":"","title":"Properties"},{"location":"types/niColor/#b","text":"The blue value of the color. Returns : result (number)","title":"b"},{"location":"types/niColor/#blue","text":"Alias for the blue value of the color. Returns : result (number)","title":"blue"},{"location":"types/niColor/#g","text":"The green value of the color. Returns : result (number)","title":"g"},{"location":"types/niColor/#green","text":"Alias for the green value of the color. Returns : result (number)","title":"green"},{"location":"types/niColor/#r","text":"The red value of the color. Returns : result (number)","title":"r"},{"location":"types/niColor/#red","text":"Alias for the red value of the color. Returns : result (number)","title":"red"},{"location":"types/niColor/#methods","text":"","title":"Methods"},{"location":"types/niColor/#clamp","text":"Clamps the color object. niColor : clamp ()","title":"clamp"},{"location":"types/niColor/#copy","text":"Creates a copy of the color object. local result = niColor : copy () Returns : result ( niColor )","title":"copy"},{"location":"types/niColor/#lerp","text":"Calculates the interpolated color between this color and another, given a transition. local lerpedcolor = niColor : lerp ( tocolor , transition ) Parameters : tocolor ( niColor ): The color to interpolate towards. transition (number): The interpolation value. Must be between 0.0 (closer to this color) and 1.0 (closer to the other color). Returns : lerpedcolor ( niColor ): The calculated value.","title":"lerp"},{"location":"types/niColor/#tovector3","text":"Creates a vector3 of the color object. local result = niColor : toVector3 () Returns : result ( tes3vector3 )","title":"toVector3"},{"location":"types/niColorA/","text":"niColorA \u2693\ufe0e An object that represents a RGB color with alpha channel support. Properties \u2693\ufe0e a \u2693\ufe0e The alpha value of the color. Returns : result (number) alpha \u2693\ufe0e The alpha value of the color. Returns : result (number) b \u2693\ufe0e The blue value of the color. Returns : result (number) blue \u2693\ufe0e Alias for the blue value of the color. Returns : result (number) g \u2693\ufe0e The green value of the color. Returns : result (number) green \u2693\ufe0e Alias for the green value of the color. Returns : result (number) r \u2693\ufe0e The red value of the color. Returns : result (number) red \u2693\ufe0e Alias for the red value of the color. Returns : result (number) Methods \u2693\ufe0e copy \u2693\ufe0e Creates a copy of the color object. local result = niColorA : copy () Returns : result ( niColorA ) lerp \u2693\ufe0e Calculates the interpolated color between this color and another, given a transition. local lerpedcolor = niColorA : lerp ( tocolor , transition ) Parameters : tocolor ( niColorA ): The color to interpolate towards. transition (number): The interpolation value. Must be between 0.0 (closer to this color) and 1.0 (closer to the other color). Returns : lerpedcolor ( niColorA ): The calculated value.","title":"niColorA"},{"location":"types/niColorA/#nicolora","text":"An object that represents a RGB color with alpha channel support.","title":"niColorA"},{"location":"types/niColorA/#properties","text":"","title":"Properties"},{"location":"types/niColorA/#a","text":"The alpha value of the color. Returns : result (number)","title":"a"},{"location":"types/niColorA/#alpha","text":"The alpha value of the color. Returns : result (number)","title":"alpha"},{"location":"types/niColorA/#b","text":"The blue value of the color. Returns : result (number)","title":"b"},{"location":"types/niColorA/#blue","text":"Alias for the blue value of the color. Returns : result (number)","title":"blue"},{"location":"types/niColorA/#g","text":"The green value of the color. Returns : result (number)","title":"g"},{"location":"types/niColorA/#green","text":"Alias for the green value of the color. Returns : result (number)","title":"green"},{"location":"types/niColorA/#r","text":"The red value of the color. Returns : result (number)","title":"r"},{"location":"types/niColorA/#red","text":"Alias for the red value of the color. Returns : result (number)","title":"red"},{"location":"types/niColorA/#methods","text":"","title":"Methods"},{"location":"types/niColorA/#copy","text":"Creates a copy of the color object. local result = niColorA : copy () Returns : result ( niColorA )","title":"copy"},{"location":"types/niColorA/#lerp","text":"Calculates the interpolated color between this color and another, given a transition. local lerpedcolor = niColorA : lerp ( tocolor , transition ) Parameters : tocolor ( niColorA ): The color to interpolate towards. transition (number): The interpolation value. Must be between 0.0 (closer to this color) and 1.0 (closer to the other color). Returns : lerpedcolor ( niColorA ): The calculated value.","title":"lerp"},{"location":"types/niDirectionalLight/","text":"niDirectionalLight \u2693\ufe0e An object that represents a light with light traveling in a given direction. The light may be pointed in any direction by rotating the light. This type inherits the following: niLight , niDynamicEffect , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e affectedNodes \u2693\ufe0e The list of nodes that a given dynamic effect will affect. Returns : result (niNodeLinkedList) alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) ambient \u2693\ufe0e The ambient settings for the light. Returns : result ( niColor ) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) diffuse \u2693\ufe0e The defuse settings for the light. Returns : result ( niColor ) dimmer \u2693\ufe0e The dimmer settings for the light. Returns : result ( niColor ) direction \u2693\ufe0e The direction of the directional light. Returns : result ( tes3vector3 ) enabled \u2693\ufe0e The enabled state of a given dynamic effect. Returns : result (boolean) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) specular \u2693\ufe0e The specular settings for the light. Returns : result ( niColor ) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) type \u2693\ufe0e The enumerated type of a given dynamic effect. Types: 0 - niAmbientLight , 1 - niDirectionalLight , 2 - niPointLight , 3 - niSpotLight , 4 - niTextureEffect . Returns : result (number) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil) Methods \u2693\ufe0e attachProperty \u2693\ufe0e Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. niAVObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController ) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update () updateEffects \u2693\ufe0e Update all attached effects. niAVObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. niAVObject : updateProperties () Functions \u2693\ufe0e attachAffectedNode \u2693\ufe0e Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list. detachAffectedNode \u2693\ufe0e Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"niDirectionalLight"},{"location":"types/niDirectionalLight/#nidirectionallight","text":"An object that represents a light with light traveling in a given direction. The light may be pointed in any direction by rotating the light. This type inherits the following: niLight , niDynamicEffect , niAVObject , niObjectNET , niObject","title":"niDirectionalLight"},{"location":"types/niDirectionalLight/#properties","text":"","title":"Properties"},{"location":"types/niDirectionalLight/#affectednodes","text":"The list of nodes that a given dynamic effect will affect. Returns : result (niNodeLinkedList)","title":"affectedNodes"},{"location":"types/niDirectionalLight/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niDirectionalLight/#ambient","text":"The ambient settings for the light. Returns : result ( niColor )","title":"ambient"},{"location":"types/niDirectionalLight/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niDirectionalLight/#diffuse","text":"The defuse settings for the light. Returns : result ( niColor )","title":"diffuse"},{"location":"types/niDirectionalLight/#dimmer","text":"The dimmer settings for the light. Returns : result ( niColor )","title":"dimmer"},{"location":"types/niDirectionalLight/#direction","text":"The direction of the directional light. Returns : result ( tes3vector3 )","title":"direction"},{"location":"types/niDirectionalLight/#enabled","text":"The enabled state of a given dynamic effect. Returns : result (boolean)","title":"enabled"},{"location":"types/niDirectionalLight/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niDirectionalLight/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niDirectionalLight/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niDirectionalLight/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niDirectionalLight/#parent","text":"The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niDirectionalLight/#properties_1","text":"The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niDirectionalLight/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niDirectionalLight/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niDirectionalLight/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niDirectionalLight/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niDirectionalLight/#specular","text":"The specular settings for the light. Returns : result ( niColor )","title":"specular"},{"location":"types/niDirectionalLight/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niDirectionalLight/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niDirectionalLight/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niDirectionalLight/#type","text":"The enumerated type of a given dynamic effect. Types: 0 - niAmbientLight , 1 - niDirectionalLight , 2 - niPointLight , 3 - niSpotLight , 4 - niTextureEffect . Returns : result (number)","title":"type"},{"location":"types/niDirectionalLight/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niDirectionalLight/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil)","title":"zBufferProperty"},{"location":"types/niDirectionalLight/#methods","text":"","title":"Methods"},{"location":"types/niDirectionalLight/#attachproperty","text":"Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niDirectionalLight/#cleartransforms","text":"Resets the object's local transform. niAVObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niDirectionalLight/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niDirectionalLight/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niDirectionalLight/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niDirectionalLight/#getproperty","text":"Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niDirectionalLight/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niDirectionalLight/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niDirectionalLight/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niDirectionalLight/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niDirectionalLight/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niDirectionalLight/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update ()","title":"update"},{"location":"types/niDirectionalLight/#updateeffects","text":"Update all attached effects. niAVObject : updateEffects ()","title":"updateEffects"},{"location":"types/niDirectionalLight/#updateproperties","text":"Update all attached properties. niAVObject : updateProperties ()","title":"updateProperties"},{"location":"types/niDirectionalLight/#functions","text":"","title":"Functions"},{"location":"types/niDirectionalLight/#attachaffectednode","text":"Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list.","title":"attachAffectedNode"},{"location":"types/niDirectionalLight/#detachaffectednode","text":"Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"detachAffectedNode"},{"location":"types/niDynamicEffect/","text":"niDynamicEffect \u2693\ufe0e Base class for dynamic effects such as NiLights or projected textures effects. This type inherits the following: niAVObject , niObjectNET , niObject Properties \u2693\ufe0e affectedNodes \u2693\ufe0e The list of nodes that a given dynamic effect will affect. Returns : result (niNodeLinkedList) alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) enabled \u2693\ufe0e The enabled state of a given dynamic effect. Returns : result (boolean) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) type \u2693\ufe0e The enumerated type of a given dynamic effect. Types: 0 - niAmbientLight , 1 - niDirectionalLight , 2 - niPointLight , 3 - niSpotLight , 4 - niTextureEffect . Returns : result (number) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil) Methods \u2693\ufe0e attachProperty \u2693\ufe0e Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. niAVObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController ) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update () updateEffects \u2693\ufe0e Update all attached effects. niAVObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. niAVObject : updateProperties () Functions \u2693\ufe0e attachAffectedNode \u2693\ufe0e Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list. detachAffectedNode \u2693\ufe0e Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"niDynamicEffect"},{"location":"types/niDynamicEffect/#nidynamiceffect","text":"Base class for dynamic effects such as NiLights or projected textures effects. This type inherits the following: niAVObject , niObjectNET , niObject","title":"niDynamicEffect"},{"location":"types/niDynamicEffect/#properties","text":"","title":"Properties"},{"location":"types/niDynamicEffect/#affectednodes","text":"The list of nodes that a given dynamic effect will affect. Returns : result (niNodeLinkedList)","title":"affectedNodes"},{"location":"types/niDynamicEffect/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niDynamicEffect/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niDynamicEffect/#enabled","text":"The enabled state of a given dynamic effect. Returns : result (boolean)","title":"enabled"},{"location":"types/niDynamicEffect/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niDynamicEffect/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niDynamicEffect/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niDynamicEffect/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niDynamicEffect/#parent","text":"The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niDynamicEffect/#properties_1","text":"The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niDynamicEffect/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niDynamicEffect/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niDynamicEffect/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niDynamicEffect/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niDynamicEffect/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niDynamicEffect/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niDynamicEffect/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niDynamicEffect/#type","text":"The enumerated type of a given dynamic effect. Types: 0 - niAmbientLight , 1 - niDirectionalLight , 2 - niPointLight , 3 - niSpotLight , 4 - niTextureEffect . Returns : result (number)","title":"type"},{"location":"types/niDynamicEffect/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niDynamicEffect/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil)","title":"zBufferProperty"},{"location":"types/niDynamicEffect/#methods","text":"","title":"Methods"},{"location":"types/niDynamicEffect/#attachproperty","text":"Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niDynamicEffect/#cleartransforms","text":"Resets the object's local transform. niAVObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niDynamicEffect/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niDynamicEffect/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niDynamicEffect/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niDynamicEffect/#getproperty","text":"Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niDynamicEffect/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niDynamicEffect/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niDynamicEffect/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niDynamicEffect/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niDynamicEffect/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niDynamicEffect/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update ()","title":"update"},{"location":"types/niDynamicEffect/#updateeffects","text":"Update all attached effects. niAVObject : updateEffects ()","title":"updateEffects"},{"location":"types/niDynamicEffect/#updateproperties","text":"Update all attached properties. niAVObject : updateProperties ()","title":"updateProperties"},{"location":"types/niDynamicEffect/#functions","text":"","title":"Functions"},{"location":"types/niDynamicEffect/#attachaffectednode","text":"Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list.","title":"attachAffectedNode"},{"location":"types/niDynamicEffect/#detachaffectednode","text":"Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"detachAffectedNode"},{"location":"types/niDynamicEffectLinkedList/","text":"niDynamicEffectLinkedList \u2693\ufe0e A linked list of dynamic effects. Properties \u2693\ufe0e data \u2693\ufe0e The current dynamic effect in the linked list. Returns : result ( niDynamicEffect ) next \u2693\ufe0e The next dynamic effect in the linked list. Returns : result ( niDynamicEffectLinkedList )","title":"niDynamicEffectLinkedList"},{"location":"types/niDynamicEffectLinkedList/#nidynamiceffectlinkedlist","text":"A linked list of dynamic effects.","title":"niDynamicEffectLinkedList"},{"location":"types/niDynamicEffectLinkedList/#properties","text":"","title":"Properties"},{"location":"types/niDynamicEffectLinkedList/#data","text":"The current dynamic effect in the linked list. Returns : result ( niDynamicEffect )","title":"data"},{"location":"types/niDynamicEffectLinkedList/#next","text":"The next dynamic effect in the linked list. Returns : result ( niDynamicEffectLinkedList )","title":"next"},{"location":"types/niFogProperty/","text":"niFogProperty \u2693\ufe0e A rendering property that controls the appearance of fogging. This type inherits the following: niProperty , niObjectNET , niObject Properties \u2693\ufe0e color \u2693\ufe0e Read-only . The fog color. Returns : result ( niColor ) density \u2693\ufe0e The fog density. Returns : result (number) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) type \u2693\ufe0e The unique class identifier number of the given rendering property. Returns : result (niPropertyType) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"niFogProperty"},{"location":"types/niFogProperty/#nifogproperty","text":"A rendering property that controls the appearance of fogging. This type inherits the following: niProperty , niObjectNET , niObject","title":"niFogProperty"},{"location":"types/niFogProperty/#properties","text":"","title":"Properties"},{"location":"types/niFogProperty/#color","text":"Read-only . The fog color. Returns : result ( niColor )","title":"color"},{"location":"types/niFogProperty/#density","text":"The fog density. Returns : result (number)","title":"density"},{"location":"types/niFogProperty/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niFogProperty/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niFogProperty/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niFogProperty/#type","text":"The unique class identifier number of the given rendering property. Returns : result (niPropertyType)","title":"type"},{"location":"types/niFogProperty/#methods","text":"","title":"Methods"},{"location":"types/niFogProperty/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niFogProperty/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niFogProperty/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niFogProperty/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niFogProperty/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niFogProperty/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niFormatPrefs/","text":"niFormatPrefs \u2693\ufe0e A class that represents a set of preferences for texture formats. These preferences dictate levels of pixel accuracy. Properties \u2693\ufe0e alphaLayout \u2693\ufe0e The Alpha format. Returns : result (niTextureFormatPrefsAlphaFormat) mipLayout \u2693\ufe0e The MIP format. Returns : result (niTextureFormatPrefsMipFlag) pixelLayout \u2693\ufe0e The pixel layout. Returns : result (niTextureFormatPrefsPixelLayout)","title":"niFormatPrefs"},{"location":"types/niFormatPrefs/#niformatprefs","text":"A class that represents a set of preferences for texture formats. These preferences dictate levels of pixel accuracy.","title":"niFormatPrefs"},{"location":"types/niFormatPrefs/#properties","text":"","title":"Properties"},{"location":"types/niFormatPrefs/#alphalayout","text":"The Alpha format. Returns : result (niTextureFormatPrefsAlphaFormat)","title":"alphaLayout"},{"location":"types/niFormatPrefs/#miplayout","text":"The MIP format. Returns : result (niTextureFormatPrefsMipFlag)","title":"mipLayout"},{"location":"types/niFormatPrefs/#pixellayout","text":"The pixel layout. Returns : result (niTextureFormatPrefsPixelLayout)","title":"pixelLayout"},{"location":"types/niGeometry/","text":"niGeometry \u2693\ufe0e Base class for most geometric objects. Includes basic vertex and normal management. This type inherits the following: niAVObject , niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil) Methods \u2693\ufe0e attachProperty \u2693\ufe0e Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. niAVObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController ) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update () updateEffects \u2693\ufe0e Update all attached effects. niAVObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. niAVObject : updateProperties ()","title":"niGeometry"},{"location":"types/niGeometry/#nigeometry","text":"Base class for most geometric objects. Includes basic vertex and normal management. This type inherits the following: niAVObject , niObjectNET , niObject","title":"niGeometry"},{"location":"types/niGeometry/#properties","text":"","title":"Properties"},{"location":"types/niGeometry/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niGeometry/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niGeometry/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niGeometry/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niGeometry/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niGeometry/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niGeometry/#parent","text":"The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niGeometry/#properties_1","text":"The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niGeometry/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niGeometry/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niGeometry/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niGeometry/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niGeometry/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niGeometry/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niGeometry/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niGeometry/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niGeometry/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil)","title":"zBufferProperty"},{"location":"types/niGeometry/#methods","text":"","title":"Methods"},{"location":"types/niGeometry/#attachproperty","text":"Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niGeometry/#cleartransforms","text":"Resets the object's local transform. niAVObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niGeometry/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niGeometry/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niGeometry/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niGeometry/#getproperty","text":"Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niGeometry/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niGeometry/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niGeometry/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niGeometry/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niGeometry/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niGeometry/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update ()","title":"update"},{"location":"types/niGeometry/#updateeffects","text":"Update all attached effects. niAVObject : updateEffects ()","title":"updateEffects"},{"location":"types/niGeometry/#updateproperties","text":"Update all attached properties. niAVObject : updateProperties ()","title":"updateProperties"},{"location":"types/niGeometryData/","text":"niGeometryData \u2693\ufe0e NiGeometryData objects contain the geometry data necessary to render an NiGeometry object. When an NiGeometry-based object is created, the actual geometry data is stored in an attached NiGeometryData object. This type inherits the following: niObject Properties \u2693\ufe0e bounds \u2693\ufe0e The bounds of the object. Returns : result (niBound) colors \u2693\ufe0e Read-only . The color for the object. Returns : result ( niColorA ) normals \u2693\ufe0e Read-only . The normals list for the object. Returns : result ( tes3vector3 ) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) texCoords \u2693\ufe0e Read-only . The array of texture coordinates. Returns : result ( tes3vector2 ) textures \u2693\ufe0e Read-only . The array of texture coordinates. Returns : result ( tes3vector2 ) textureSets \u2693\ufe0e The number of texture coordinate sets in the data. Returns : result (number) uniqueID \u2693\ufe0e A unique ID for this model, assigned at model creation. Returns : result (number) vertexCount \u2693\ufe0e Read-only . The vertex count for the object. Returns : result (number) vertices \u2693\ufe0e Read-only . The array of vertex position data. Returns : result ( tes3vector3 ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) markAsChanged \u2693\ufe0e Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data. If you have altered vertex positions, you may need to also call updateModelBound _. You should call it if vertices have been moved outside the bounds of the original model. niGeometryData : markAsChanged () updateModelBound \u2693\ufe0e Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function. niGeometryData : updateModelBound ()","title":"niGeometryData"},{"location":"types/niGeometryData/#nigeometrydata","text":"NiGeometryData objects contain the geometry data necessary to render an NiGeometry object. When an NiGeometry-based object is created, the actual geometry data is stored in an attached NiGeometryData object. This type inherits the following: niObject","title":"niGeometryData"},{"location":"types/niGeometryData/#properties","text":"","title":"Properties"},{"location":"types/niGeometryData/#bounds","text":"The bounds of the object. Returns : result (niBound)","title":"bounds"},{"location":"types/niGeometryData/#colors","text":"Read-only . The color for the object. Returns : result ( niColorA )","title":"colors"},{"location":"types/niGeometryData/#normals","text":"Read-only . The normals list for the object. Returns : result ( tes3vector3 )","title":"normals"},{"location":"types/niGeometryData/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niGeometryData/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niGeometryData/#texcoords","text":"Read-only . The array of texture coordinates. Returns : result ( tes3vector2 )","title":"texCoords"},{"location":"types/niGeometryData/#textures","text":"Read-only . The array of texture coordinates. Returns : result ( tes3vector2 )","title":"textures"},{"location":"types/niGeometryData/#texturesets","text":"The number of texture coordinate sets in the data. Returns : result (number)","title":"textureSets"},{"location":"types/niGeometryData/#uniqueid","text":"A unique ID for this model, assigned at model creation. Returns : result (number)","title":"uniqueID"},{"location":"types/niGeometryData/#vertexcount","text":"Read-only . The vertex count for the object. Returns : result (number)","title":"vertexCount"},{"location":"types/niGeometryData/#vertices","text":"Read-only . The array of vertex position data. Returns : result ( tes3vector3 )","title":"vertices"},{"location":"types/niGeometryData/#methods","text":"","title":"Methods"},{"location":"types/niGeometryData/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niGeometryData/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niGeometryData/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niGeometryData/#markaschanged","text":"Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data. If you have altered vertex positions, you may need to also call updateModelBound _. You should call it if vertices have been moved outside the bounds of the original model. niGeometryData : markAsChanged ()","title":"markAsChanged"},{"location":"types/niGeometryData/#updatemodelbound","text":"Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function. niGeometryData : updateModelBound ()","title":"updateModelBound"},{"location":"types/niLight/","text":"niLight \u2693\ufe0e Base class that represents light sources in a scene graph. This includes the ambient, diffuse, and specular colors of a light, as well as its intensity. This type inherits the following: niDynamicEffect , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e affectedNodes \u2693\ufe0e The list of nodes that a given dynamic effect will affect. Returns : result (niNodeLinkedList) alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) ambient \u2693\ufe0e The ambient settings for the light. Returns : result ( niColor ) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) diffuse \u2693\ufe0e The defuse settings for the light. Returns : result ( niColor ) dimmer \u2693\ufe0e The dimmer settings for the light. Returns : result ( niColor ) enabled \u2693\ufe0e The enabled state of a given dynamic effect. Returns : result (boolean) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) specular \u2693\ufe0e The specular settings for the light. Returns : result ( niColor ) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) type \u2693\ufe0e The enumerated type of a given dynamic effect. Types: 0 - niAmbientLight , 1 - niDirectionalLight , 2 - niPointLight , 3 - niSpotLight , 4 - niTextureEffect . Returns : result (number) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil) Methods \u2693\ufe0e attachProperty \u2693\ufe0e Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. niAVObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController ) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update () updateEffects \u2693\ufe0e Update all attached effects. niAVObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. niAVObject : updateProperties () Functions \u2693\ufe0e attachAffectedNode \u2693\ufe0e Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list. detachAffectedNode \u2693\ufe0e Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"niLight"},{"location":"types/niLight/#nilight","text":"Base class that represents light sources in a scene graph. This includes the ambient, diffuse, and specular colors of a light, as well as its intensity. This type inherits the following: niDynamicEffect , niAVObject , niObjectNET , niObject","title":"niLight"},{"location":"types/niLight/#properties","text":"","title":"Properties"},{"location":"types/niLight/#affectednodes","text":"The list of nodes that a given dynamic effect will affect. Returns : result (niNodeLinkedList)","title":"affectedNodes"},{"location":"types/niLight/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niLight/#ambient","text":"The ambient settings for the light. Returns : result ( niColor )","title":"ambient"},{"location":"types/niLight/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niLight/#diffuse","text":"The defuse settings for the light. Returns : result ( niColor )","title":"diffuse"},{"location":"types/niLight/#dimmer","text":"The dimmer settings for the light. Returns : result ( niColor )","title":"dimmer"},{"location":"types/niLight/#enabled","text":"The enabled state of a given dynamic effect. Returns : result (boolean)","title":"enabled"},{"location":"types/niLight/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niLight/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niLight/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niLight/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niLight/#parent","text":"The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niLight/#properties_1","text":"The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niLight/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niLight/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niLight/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niLight/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niLight/#specular","text":"The specular settings for the light. Returns : result ( niColor )","title":"specular"},{"location":"types/niLight/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niLight/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niLight/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niLight/#type","text":"The enumerated type of a given dynamic effect. Types: 0 - niAmbientLight , 1 - niDirectionalLight , 2 - niPointLight , 3 - niSpotLight , 4 - niTextureEffect . Returns : result (number)","title":"type"},{"location":"types/niLight/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niLight/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil)","title":"zBufferProperty"},{"location":"types/niLight/#methods","text":"","title":"Methods"},{"location":"types/niLight/#attachproperty","text":"Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niLight/#cleartransforms","text":"Resets the object's local transform. niAVObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niLight/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niLight/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niLight/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niLight/#getproperty","text":"Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niLight/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niLight/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niLight/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niLight/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niLight/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niLight/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update ()","title":"update"},{"location":"types/niLight/#updateeffects","text":"Update all attached effects. niAVObject : updateEffects ()","title":"updateEffects"},{"location":"types/niLight/#updateproperties","text":"Update all attached properties. niAVObject : updateProperties ()","title":"updateProperties"},{"location":"types/niLight/#functions","text":"","title":"Functions"},{"location":"types/niLight/#attachaffectednode","text":"Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list.","title":"attachAffectedNode"},{"location":"types/niLight/#detachaffectednode","text":"Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"detachAffectedNode"},{"location":"types/niLookAtController/","text":"niLookAtController \u2693\ufe0e Orients an axis of the controlled object towards a lookAt target. The axis is selectable. Warning: The lookAt property is not reference counted, so this controller must be removed, or lookAt set to nil before the lookAt object is deleted. This type inherits the following: niTimeController , niObject Properties \u2693\ufe0e active \u2693\ufe0e If the controller is active. When inactive, the target does not get updated and animation timing does not advance. Returns : result (boolean) animTimingType \u2693\ufe0e How the time parameter passed to the update function is treated. Type 0 is the default, which treats the update time as a delta time. Type 1 treats the update time an offset from the start of the animation. Returns : result (number) axis \u2693\ufe0e A number representing the axis that points at the lookAt object. flip determines which end of this axis points at the target. 0 X axis 1 Y axis 2 Z axis Returns : result (number) cycleType \u2693\ufe0e The animation cycle type. Type 0 is looping, type 2 is reverse, type 4 is clamped. Returns : result (number) flip \u2693\ufe0e Determines which end of the chosen axis points towards the lookAt target. Returns : result (boolean) frequency \u2693\ufe0e The animation controller's frequency value. Returns : result (number) highKeyFrame \u2693\ufe0e No description. Returns : result (number) lastScaledTime \u2693\ufe0e No description. Returns : result (number) lastTime \u2693\ufe0e No description. Returns : result (number) lookAt \u2693\ufe0e The object that this controller will point towards. This is not a reference counted pointer, so this controller must be removed or lookAt set to nil before the lookAt object is deleted. This was probably designed to avoid reference cycles where controllers keep an ancestor node alive. Returns : result ( niAVObject ) lowKeyFrame \u2693\ufe0e No description. Returns : result (number) nextController \u2693\ufe0e The next NiTimeController in the list of controllers containing the calling controller. Returns : result ( niTimeController ) phase \u2693\ufe0e The phase value. Returns : result (number) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) startTime \u2693\ufe0e No description. Returns : result (number) target \u2693\ufe0e The scene graph object that this animation controller is to animate. Returns : result ( niObjectNET ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) start \u2693\ufe0e Starts the controller at the specified time. niTimeController : start ( time ) Parameters : time (number) stop \u2693\ufe0e Stops the controller. If you only want to pause the controller, use the update property. niTimeController : stop ()","title":"niLookAtController"},{"location":"types/niLookAtController/#nilookatcontroller","text":"Orients an axis of the controlled object towards a lookAt target. The axis is selectable. Warning: The lookAt property is not reference counted, so this controller must be removed, or lookAt set to nil before the lookAt object is deleted. This type inherits the following: niTimeController , niObject","title":"niLookAtController"},{"location":"types/niLookAtController/#properties","text":"","title":"Properties"},{"location":"types/niLookAtController/#active","text":"If the controller is active. When inactive, the target does not get updated and animation timing does not advance. Returns : result (boolean)","title":"active"},{"location":"types/niLookAtController/#animtimingtype","text":"How the time parameter passed to the update function is treated. Type 0 is the default, which treats the update time as a delta time. Type 1 treats the update time an offset from the start of the animation. Returns : result (number)","title":"animTimingType"},{"location":"types/niLookAtController/#axis","text":"A number representing the axis that points at the lookAt object. flip determines which end of this axis points at the target. 0 X axis 1 Y axis 2 Z axis Returns : result (number)","title":"axis"},{"location":"types/niLookAtController/#cycletype","text":"The animation cycle type. Type 0 is looping, type 2 is reverse, type 4 is clamped. Returns : result (number)","title":"cycleType"},{"location":"types/niLookAtController/#flip","text":"Determines which end of the chosen axis points towards the lookAt target. Returns : result (boolean)","title":"flip"},{"location":"types/niLookAtController/#frequency","text":"The animation controller's frequency value. Returns : result (number)","title":"frequency"},{"location":"types/niLookAtController/#highkeyframe","text":"No description. Returns : result (number)","title":"highKeyFrame"},{"location":"types/niLookAtController/#lastscaledtime","text":"No description. Returns : result (number)","title":"lastScaledTime"},{"location":"types/niLookAtController/#lasttime","text":"No description. Returns : result (number)","title":"lastTime"},{"location":"types/niLookAtController/#lookat","text":"The object that this controller will point towards. This is not a reference counted pointer, so this controller must be removed or lookAt set to nil before the lookAt object is deleted. This was probably designed to avoid reference cycles where controllers keep an ancestor node alive. Returns : result ( niAVObject )","title":"lookAt"},{"location":"types/niLookAtController/#lowkeyframe","text":"No description. Returns : result (number)","title":"lowKeyFrame"},{"location":"types/niLookAtController/#nextcontroller","text":"The next NiTimeController in the list of controllers containing the calling controller. Returns : result ( niTimeController )","title":"nextController"},{"location":"types/niLookAtController/#phase","text":"The phase value. Returns : result (number)","title":"phase"},{"location":"types/niLookAtController/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niLookAtController/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niLookAtController/#starttime","text":"No description. Returns : result (number)","title":"startTime"},{"location":"types/niLookAtController/#target","text":"The scene graph object that this animation controller is to animate. Returns : result ( niObjectNET )","title":"target"},{"location":"types/niLookAtController/#methods","text":"","title":"Methods"},{"location":"types/niLookAtController/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niLookAtController/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niLookAtController/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niLookAtController/#start","text":"Starts the controller at the specified time. niTimeController : start ( time ) Parameters : time (number)","title":"start"},{"location":"types/niLookAtController/#stop","text":"Stops the controller. If you only want to pause the controller, use the update property. niTimeController : stop ()","title":"stop"},{"location":"types/niMaterialProperty/","text":"niMaterialProperty \u2693\ufe0e A rendering property that controls the surface properties of objects affected by the property. These surface properties include translucency, ambient reflective color, diffuse reflective color, emissive color intensity, and specular color. This type inherits the following: niProperty , niObjectNET , niObject Properties \u2693\ufe0e alpha \u2693\ufe0e The alpha value of the material. Value should be between 0 - 1. Returns : result (number) ambient \u2693\ufe0e The ambient material color. Returns : result ( niColor ) diffuse \u2693\ufe0e The diffuse material color. Returns : result ( niColor ) emissive \u2693\ufe0e The emissive material color. Returns : result ( niColor ) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) shininess \u2693\ufe0e The shine of the material. Value should be >= 0. Returns : result (number) specular \u2693\ufe0e The specular material color. Returns : result ( niColor ) type \u2693\ufe0e The unique class identifier number of the given rendering property. Returns : result (niPropertyType) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"niMaterialProperty"},{"location":"types/niMaterialProperty/#nimaterialproperty","text":"A rendering property that controls the surface properties of objects affected by the property. These surface properties include translucency, ambient reflective color, diffuse reflective color, emissive color intensity, and specular color. This type inherits the following: niProperty , niObjectNET , niObject","title":"niMaterialProperty"},{"location":"types/niMaterialProperty/#properties","text":"","title":"Properties"},{"location":"types/niMaterialProperty/#alpha","text":"The alpha value of the material. Value should be between 0 - 1. Returns : result (number)","title":"alpha"},{"location":"types/niMaterialProperty/#ambient","text":"The ambient material color. Returns : result ( niColor )","title":"ambient"},{"location":"types/niMaterialProperty/#diffuse","text":"The diffuse material color. Returns : result ( niColor )","title":"diffuse"},{"location":"types/niMaterialProperty/#emissive","text":"The emissive material color. Returns : result ( niColor )","title":"emissive"},{"location":"types/niMaterialProperty/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niMaterialProperty/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niMaterialProperty/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niMaterialProperty/#shininess","text":"The shine of the material. Value should be >= 0. Returns : result (number)","title":"shininess"},{"location":"types/niMaterialProperty/#specular","text":"The specular material color. Returns : result ( niColor )","title":"specular"},{"location":"types/niMaterialProperty/#type","text":"The unique class identifier number of the given rendering property. Returns : result (niPropertyType)","title":"type"},{"location":"types/niMaterialProperty/#methods","text":"","title":"Methods"},{"location":"types/niMaterialProperty/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niMaterialProperty/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niMaterialProperty/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niMaterialProperty/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niMaterialProperty/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niMaterialProperty/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niNode/","text":"niNode \u2693\ufe0e Base class that represents the nodes of a scene graph. A node can have any number of child nodes. This type inherits the following: niAVObject , niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) children \u2693\ufe0e Read-only . The children of the node. Returns : result (niAVObjectTArray) effectList \u2693\ufe0e Read-only . The effect list of the node. Returns : result ( niDynamicEffectLinkedList ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil) Methods \u2693\ufe0e attachChild \u2693\ufe0e Attachs the child to the children list of the node. niNode : attachChild ( child , useFirstAvailable ) Parameters : child ( niAVObject ) useFirstAvailable (boolean): Optional . Use the first available space in the list. Default value is False. attachProperty \u2693\ufe0e Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. niAVObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) detachChild \u2693\ufe0e Detaches the child from the children list of the node. Returns the detached child. local result = niNode : detachChild ( child ) Parameters : child ( niAVObject ) Returns : result ( niAVObject ) detachChildAt \u2693\ufe0e Detaches the child at the specified index from the children list of the node. Returns the detached child. local result = niNode : detachChildAt ( index ) Parameters : index (number) Returns : result ( niAVObject ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) getEffect \u2693\ufe0e Gets the effect for the given type. local result = niNode : getEffect ( type ) Parameters : type (number) Returns : result ( niDynamicEffect ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController ) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update () updateEffects \u2693\ufe0e Update all attached effects. niAVObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. niAVObject : updateProperties ()","title":"niNode"},{"location":"types/niNode/#ninode","text":"Base class that represents the nodes of a scene graph. A node can have any number of child nodes. This type inherits the following: niAVObject , niObjectNET , niObject","title":"niNode"},{"location":"types/niNode/#properties","text":"","title":"Properties"},{"location":"types/niNode/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niNode/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niNode/#children","text":"Read-only . The children of the node. Returns : result (niAVObjectTArray)","title":"children"},{"location":"types/niNode/#effectlist","text":"Read-only . The effect list of the node. Returns : result ( niDynamicEffectLinkedList )","title":"effectList"},{"location":"types/niNode/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niNode/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niNode/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niNode/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niNode/#parent","text":"The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niNode/#properties_1","text":"The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niNode/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niNode/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niNode/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niNode/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niNode/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niNode/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niNode/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niNode/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niNode/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil)","title":"zBufferProperty"},{"location":"types/niNode/#methods","text":"","title":"Methods"},{"location":"types/niNode/#attachchild","text":"Attachs the child to the children list of the node. niNode : attachChild ( child , useFirstAvailable ) Parameters : child ( niAVObject ) useFirstAvailable (boolean): Optional . Use the first available space in the list. Default value is False.","title":"attachChild"},{"location":"types/niNode/#attachproperty","text":"Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niNode/#cleartransforms","text":"Resets the object's local transform. niAVObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niNode/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niNode/#detachchild","text":"Detaches the child from the children list of the node. Returns the detached child. local result = niNode : detachChild ( child ) Parameters : child ( niAVObject ) Returns : result ( niAVObject )","title":"detachChild"},{"location":"types/niNode/#detachchildat","text":"Detaches the child at the specified index from the children list of the node. Returns the detached child. local result = niNode : detachChildAt ( index ) Parameters : index (number) Returns : result ( niAVObject )","title":"detachChildAt"},{"location":"types/niNode/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niNode/#geteffect","text":"Gets the effect for the given type. local result = niNode : getEffect ( type ) Parameters : type (number) Returns : result ( niDynamicEffect )","title":"getEffect"},{"location":"types/niNode/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niNode/#getproperty","text":"Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niNode/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niNode/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niNode/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niNode/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niNode/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niNode/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update ()","title":"update"},{"location":"types/niNode/#updateeffects","text":"Update all attached effects. niAVObject : updateEffects ()","title":"updateEffects"},{"location":"types/niNode/#updateproperties","text":"Update all attached properties. niAVObject : updateProperties ()","title":"updateProperties"},{"location":"types/niObject/","text":"niObject \u2693\ufe0e The base-most object from which almost all NetImmerse structures are derived from. Properties \u2693\ufe0e references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"niObject"},{"location":"types/niObject/#niobject","text":"The base-most object from which almost all NetImmerse structures are derived from.","title":"niObject"},{"location":"types/niObject/#properties","text":"","title":"Properties"},{"location":"types/niObject/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niObject/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niObject/#methods","text":"","title":"Methods"},{"location":"types/niObject/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niObject/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niObject/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niObjectNET/","text":"niObjectNET \u2693\ufe0e An object that has a name, extra data, and controllers. This type inherits the following: niObject Properties \u2693\ufe0e name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"niObjectNET"},{"location":"types/niObjectNET/#niobjectnet","text":"An object that has a name, extra data, and controllers. This type inherits the following: niObject","title":"niObjectNET"},{"location":"types/niObjectNET/#properties","text":"","title":"Properties"},{"location":"types/niObjectNET/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niObjectNET/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niObjectNET/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niObjectNET/#methods","text":"","title":"Methods"},{"location":"types/niObjectNET/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niObjectNET/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niObjectNET/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niObjectNET/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niObjectNET/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niObjectNET/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niPackedColor/","text":"niPackedColor \u2693\ufe0e An object that represents a RGB color with alpha channel support. Unlike other color values, this is compressed into 4 bytes. Values are not from 0 to 1, but from 0 to 255. Properties \u2693\ufe0e a \u2693\ufe0e The alpha value of the color. Returns : result (number) alpha \u2693\ufe0e The alpha value of the color. Returns : result (number) b \u2693\ufe0e The blue value of the color. Returns : result (number) blue \u2693\ufe0e Alias for the blue value of the color. Returns : result (number) g \u2693\ufe0e The green value of the color. Returns : result (number) green \u2693\ufe0e Alias for the green value of the color. Returns : result (number) r \u2693\ufe0e The red value of the color. Returns : result (number) red \u2693\ufe0e Alias for the red value of the color. Returns : result (number)","title":"niPackedColor"},{"location":"types/niPackedColor/#nipackedcolor","text":"An object that represents a RGB color with alpha channel support. Unlike other color values, this is compressed into 4 bytes. Values are not from 0 to 1, but from 0 to 255.","title":"niPackedColor"},{"location":"types/niPackedColor/#properties","text":"","title":"Properties"},{"location":"types/niPackedColor/#a","text":"The alpha value of the color. Returns : result (number)","title":"a"},{"location":"types/niPackedColor/#alpha","text":"The alpha value of the color. Returns : result (number)","title":"alpha"},{"location":"types/niPackedColor/#b","text":"The blue value of the color. Returns : result (number)","title":"b"},{"location":"types/niPackedColor/#blue","text":"Alias for the blue value of the color. Returns : result (number)","title":"blue"},{"location":"types/niPackedColor/#g","text":"The green value of the color. Returns : result (number)","title":"g"},{"location":"types/niPackedColor/#green","text":"Alias for the green value of the color. Returns : result (number)","title":"green"},{"location":"types/niPackedColor/#r","text":"The red value of the color. Returns : result (number)","title":"r"},{"location":"types/niPackedColor/#red","text":"Alias for the red value of the color. Returns : result (number)","title":"red"},{"location":"types/niPick/","text":"niPick \u2693\ufe0e Class used in the picking intersection system within the game engine. Using a ray, the engine performs picking operations on a scene graph or any subtree. Given a ray and a subtree, the subtree is traversed and matching nodes are added to an array. Properties \u2693\ufe0e coordinateType \u2693\ufe0e The coordinate type for the object. Returns : result (niPickCoordinateType) frontOnly \u2693\ufe0e If true, back face triangles (those with clockwise winding order) are culled prior to intersection calculations. If false, intersections of ray with triangles are computed regardless of triangle orientation. Returns : result (boolean) intersectType \u2693\ufe0e The intersect type for the object. Returns : result (niPickIntersectType) lastAddedRecord \u2693\ufe0e The pick record that was last added to the object. Returns : result ( niPickRecord ) observeAppCullFlag \u2693\ufe0e If true, the pick stops if it encounters an object with the 'app culled' flag set. If false, the pick will continue over 'app culled' objects. Returns : result (boolean) pickType \u2693\ufe0e The pick type for the object. Returns : result (niPickType) results \u2693\ufe0e The array of pick records obtained by the last call to PickObjects. Returns : result (niPickRecordTArray) returnColor \u2693\ufe0e If true, a vertex color value is returned for the point of intersection of triangles during picking. Returns : result (boolean) returnNormal \u2693\ufe0e If true, a unit-length normal is returned for the point of intersection of triangles intersected during the picking. Returns : result (boolean) returnSmoothNormal \u2693\ufe0e If true and if vertex normals exist, then a unit-length normal vector is interpolated from the vertex normals and returned during the picking operation. Returns : result (boolean) returnTexture \u2693\ufe0e If true, texture coordinates are returned for the point of intersection of triangles during the picking operation. Returns : result (boolean) root \u2693\ufe0e The root pick type for the object. Returns : result (niPickType) sortType \u2693\ufe0e The sort type for the object. Returns : result (niPickSortType) Methods \u2693\ufe0e clearResults \u2693\ufe0e Clears the results of any previous picking operation. niPick : clearResults () pickObjects \u2693\ufe0e Performs the picking operation. niPick : pickObjects ( origin , distance , append , maxDistance ) Parameters : origin ( tes3vector3 ) distance ( tes3vector3 ) append (boolean): Optional . Default value: false maxDistance (number): Optional . Default value: 0.0F","title":"niPick"},{"location":"types/niPick/#nipick","text":"Class used in the picking intersection system within the game engine. Using a ray, the engine performs picking operations on a scene graph or any subtree. Given a ray and a subtree, the subtree is traversed and matching nodes are added to an array.","title":"niPick"},{"location":"types/niPick/#properties","text":"","title":"Properties"},{"location":"types/niPick/#coordinatetype","text":"The coordinate type for the object. Returns : result (niPickCoordinateType)","title":"coordinateType"},{"location":"types/niPick/#frontonly","text":"If true, back face triangles (those with clockwise winding order) are culled prior to intersection calculations. If false, intersections of ray with triangles are computed regardless of triangle orientation. Returns : result (boolean)","title":"frontOnly"},{"location":"types/niPick/#intersecttype","text":"The intersect type for the object. Returns : result (niPickIntersectType)","title":"intersectType"},{"location":"types/niPick/#lastaddedrecord","text":"The pick record that was last added to the object. Returns : result ( niPickRecord )","title":"lastAddedRecord"},{"location":"types/niPick/#observeappcullflag","text":"If true, the pick stops if it encounters an object with the 'app culled' flag set. If false, the pick will continue over 'app culled' objects. Returns : result (boolean)","title":"observeAppCullFlag"},{"location":"types/niPick/#picktype","text":"The pick type for the object. Returns : result (niPickType)","title":"pickType"},{"location":"types/niPick/#results","text":"The array of pick records obtained by the last call to PickObjects. Returns : result (niPickRecordTArray)","title":"results"},{"location":"types/niPick/#returncolor","text":"If true, a vertex color value is returned for the point of intersection of triangles during picking. Returns : result (boolean)","title":"returnColor"},{"location":"types/niPick/#returnnormal","text":"If true, a unit-length normal is returned for the point of intersection of triangles intersected during the picking. Returns : result (boolean)","title":"returnNormal"},{"location":"types/niPick/#returnsmoothnormal","text":"If true and if vertex normals exist, then a unit-length normal vector is interpolated from the vertex normals and returned during the picking operation. Returns : result (boolean)","title":"returnSmoothNormal"},{"location":"types/niPick/#returntexture","text":"If true, texture coordinates are returned for the point of intersection of triangles during the picking operation. Returns : result (boolean)","title":"returnTexture"},{"location":"types/niPick/#root","text":"The root pick type for the object. Returns : result (niPickType)","title":"root"},{"location":"types/niPick/#sorttype","text":"The sort type for the object. Returns : result (niPickSortType)","title":"sortType"},{"location":"types/niPick/#methods","text":"","title":"Methods"},{"location":"types/niPick/#clearresults","text":"Clears the results of any previous picking operation. niPick : clearResults ()","title":"clearResults"},{"location":"types/niPick/#pickobjects","text":"Performs the picking operation. niPick : pickObjects ( origin , distance , append , maxDistance ) Parameters : origin ( tes3vector3 ) distance ( tes3vector3 ) append (boolean): Optional . Default value: false maxDistance (number): Optional . Default value: 0.0F","title":"pickObjects"},{"location":"types/niPickRecord/","text":"niPickRecord \u2693\ufe0e A nested class of NiPick that stores the results of previous picking operations for use by the game engine. Properties \u2693\ufe0e color \u2693\ufe0e The vertex color at the point of intersection. The color is valid only when returnColor = true . Returns : result (number) distance \u2693\ufe0e The distance of the triangle intersection from the ray origin. Returns : result (number) intersection \u2693\ufe0e The intersection point on the triangle. Returns : result ( tes3vector3 ) normal \u2693\ufe0e The normal vector at the point of intersection. The normal is valid only when returnNormal = true . Returns : result ( tes3vector3 ) object \u2693\ufe0e Read-only . The object of the record. Returns : result ( niAVObject ) parent \u2693\ufe0e Read-only . The parent of the record. Returns : result ( niAVObject ) reference \u2693\ufe0e Quick reference to the associated object's reference. Returns : result ( tes3reference ) texture \u2693\ufe0e The texture coordinates at the point of intersection. The coordinates are valid only when returnTexture = true . Returns : result ( tes3vector2 ) triangleIndex \u2693\ufe0e The index of the intersected triangle. Returns : result (number) vertexIndex \u2693\ufe0e The index of the vertex of the intersected triangle. Returns : result (number)","title":"niPickRecord"},{"location":"types/niPickRecord/#nipickrecord","text":"A nested class of NiPick that stores the results of previous picking operations for use by the game engine.","title":"niPickRecord"},{"location":"types/niPickRecord/#properties","text":"","title":"Properties"},{"location":"types/niPickRecord/#color","text":"The vertex color at the point of intersection. The color is valid only when returnColor = true . Returns : result (number)","title":"color"},{"location":"types/niPickRecord/#distance","text":"The distance of the triangle intersection from the ray origin. Returns : result (number)","title":"distance"},{"location":"types/niPickRecord/#intersection","text":"The intersection point on the triangle. Returns : result ( tes3vector3 )","title":"intersection"},{"location":"types/niPickRecord/#normal","text":"The normal vector at the point of intersection. The normal is valid only when returnNormal = true . Returns : result ( tes3vector3 )","title":"normal"},{"location":"types/niPickRecord/#object","text":"Read-only . The object of the record. Returns : result ( niAVObject )","title":"object"},{"location":"types/niPickRecord/#parent","text":"Read-only . The parent of the record. Returns : result ( niAVObject )","title":"parent"},{"location":"types/niPickRecord/#reference","text":"Quick reference to the associated object's reference. Returns : result ( tes3reference )","title":"reference"},{"location":"types/niPickRecord/#texture","text":"The texture coordinates at the point of intersection. The coordinates are valid only when returnTexture = true . Returns : result ( tes3vector2 )","title":"texture"},{"location":"types/niPickRecord/#triangleindex","text":"The index of the intersected triangle. Returns : result (number)","title":"triangleIndex"},{"location":"types/niPickRecord/#vertexindex","text":"The index of the vertex of the intersected triangle. Returns : result (number)","title":"vertexIndex"},{"location":"types/niPixelData/","text":"niPixelData \u2693\ufe0e Represents 2D arrays of pixel values, as well as pyramids of multiple mipmap levels, each of 2D arrays of pixel values. Also contains information representing the format of the pixels and dimensions of the arrays. This type inherits the following: niObject Properties \u2693\ufe0e bytesPerPixel \u2693\ufe0e Read-only . The number of bytes per pixel. Returns : result (number) mipMapLevels \u2693\ufe0e Read-only . The number of MipMap levels. Returns : result (number) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) createSourceTexture \u2693\ufe0e Creates a source texture from the current NiPixelData object. local result = niPixelData : createSourceTexture () Returns : result ( niSourceTexture ) getHeight \u2693\ufe0e Returns the height of the mipmap level at the given index, where level 1 is the largest. local result = niPixelData : getHeight ( mipMapLevel ) Parameters : mipMapLevel (number): Optional . Default value: 1 Returns : result (number) getWidth \u2693\ufe0e Returns the width of the mipmap level at the given index, where level 1 is the largest. local result = niPixelData : getWidth ( mipMapLevel ) Parameters : mipMapLevel (number): Optional . Default value: 1 Returns : result (number) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) setPixelsByte \u2693\ufe0e Sets the pixel data from byte data. niPixelData : setPixelsByte ( data , mipMapLevel ) Parameters : data (table): The byte data to be set to. mipMapLevel (number): Optional . Default value: 1 setPixelsFloat \u2693\ufe0e Sets the pixel data from float data. niPixelData : setPixelsFloat ( data , mipMapLevel ) Parameters : data (table): The float data to be set to. mipMapLevel (number): Optional . Default value: 1 Functions \u2693\ufe0e new \u2693\ufe0e Creates a new NiPixelData object. niPixelData . new ( width , height ) Parameters : width (number) height (number)","title":"niPixelData"},{"location":"types/niPixelData/#nipixeldata","text":"Represents 2D arrays of pixel values, as well as pyramids of multiple mipmap levels, each of 2D arrays of pixel values. Also contains information representing the format of the pixels and dimensions of the arrays. This type inherits the following: niObject","title":"niPixelData"},{"location":"types/niPixelData/#properties","text":"","title":"Properties"},{"location":"types/niPixelData/#bytesperpixel","text":"Read-only . The number of bytes per pixel. Returns : result (number)","title":"bytesPerPixel"},{"location":"types/niPixelData/#mipmaplevels","text":"Read-only . The number of MipMap levels. Returns : result (number)","title":"mipMapLevels"},{"location":"types/niPixelData/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niPixelData/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niPixelData/#methods","text":"","title":"Methods"},{"location":"types/niPixelData/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niPixelData/#createsourcetexture","text":"Creates a source texture from the current NiPixelData object. local result = niPixelData : createSourceTexture () Returns : result ( niSourceTexture )","title":"createSourceTexture"},{"location":"types/niPixelData/#getheight","text":"Returns the height of the mipmap level at the given index, where level 1 is the largest. local result = niPixelData : getHeight ( mipMapLevel ) Parameters : mipMapLevel (number): Optional . Default value: 1 Returns : result (number)","title":"getHeight"},{"location":"types/niPixelData/#getwidth","text":"Returns the width of the mipmap level at the given index, where level 1 is the largest. local result = niPixelData : getWidth ( mipMapLevel ) Parameters : mipMapLevel (number): Optional . Default value: 1 Returns : result (number)","title":"getWidth"},{"location":"types/niPixelData/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niPixelData/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niPixelData/#setpixelsbyte","text":"Sets the pixel data from byte data. niPixelData : setPixelsByte ( data , mipMapLevel ) Parameters : data (table): The byte data to be set to. mipMapLevel (number): Optional . Default value: 1","title":"setPixelsByte"},{"location":"types/niPixelData/#setpixelsfloat","text":"Sets the pixel data from float data. niPixelData : setPixelsFloat ( data , mipMapLevel ) Parameters : data (table): The float data to be set to. mipMapLevel (number): Optional . Default value: 1","title":"setPixelsFloat"},{"location":"types/niPixelData/#functions","text":"","title":"Functions"},{"location":"types/niPixelData/#new","text":"Creates a new NiPixelData object. niPixelData . new ( width , height ) Parameters : width (number) height (number)","title":"new"},{"location":"types/niPointLight/","text":"niPointLight \u2693\ufe0e Represents a point light source in a scene. Point lights have a specific location in space and a distance attenuation function. Point lights project light in all directions from their position. They can be moved by changing the translation of the light. This type inherits the following: niLight , niDynamicEffect , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e affectedNodes \u2693\ufe0e The list of nodes that a given dynamic effect will affect. Returns : result (niNodeLinkedList) alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) ambient \u2693\ufe0e The ambient settings for the light. Returns : result ( niColor ) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) constantAttenuation \u2693\ufe0e The constant attenuation factor. Returns : result (number) diffuse \u2693\ufe0e The defuse settings for the light. Returns : result ( niColor ) dimmer \u2693\ufe0e The dimmer settings for the light. Returns : result ( niColor ) enabled \u2693\ufe0e The enabled state of a given dynamic effect. Returns : result (boolean) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) linearAttenuation \u2693\ufe0e The linear attenuation factor. Returns : result (number) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) quadraticAttenuation \u2693\ufe0e The quadratic attenuation factor. Returns : result (number) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) specular \u2693\ufe0e The specular settings for the light. Returns : result ( niColor ) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) type \u2693\ufe0e The enumerated type of a given dynamic effect. Types: 0 - niAmbientLight , 1 - niDirectionalLight , 2 - niPointLight , 3 - niSpotLight , 4 - niTextureEffect . Returns : result (number) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil) Methods \u2693\ufe0e attachProperty \u2693\ufe0e Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. niAVObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController ) setAttenuationForRadius \u2693\ufe0e Sets the attenuation for the radius. niPointLight : setAttenuationForRadius ( radius ) Parameters : radius (number) setRadius \u2693\ufe0e Sets both the light's influence radius, and its lighting attenuation to match the radius. niPointLight : setRadius ( radius ) Parameters : radius (number) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update () updateEffects \u2693\ufe0e Update all attached effects. niAVObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. niAVObject : updateProperties () Functions \u2693\ufe0e attachAffectedNode \u2693\ufe0e Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list. detachAffectedNode \u2693\ufe0e Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"niPointLight"},{"location":"types/niPointLight/#nipointlight","text":"Represents a point light source in a scene. Point lights have a specific location in space and a distance attenuation function. Point lights project light in all directions from their position. They can be moved by changing the translation of the light. This type inherits the following: niLight , niDynamicEffect , niAVObject , niObjectNET , niObject","title":"niPointLight"},{"location":"types/niPointLight/#properties","text":"","title":"Properties"},{"location":"types/niPointLight/#affectednodes","text":"The list of nodes that a given dynamic effect will affect. Returns : result (niNodeLinkedList)","title":"affectedNodes"},{"location":"types/niPointLight/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niPointLight/#ambient","text":"The ambient settings for the light. Returns : result ( niColor )","title":"ambient"},{"location":"types/niPointLight/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niPointLight/#constantattenuation","text":"The constant attenuation factor. Returns : result (number)","title":"constantAttenuation"},{"location":"types/niPointLight/#diffuse","text":"The defuse settings for the light. Returns : result ( niColor )","title":"diffuse"},{"location":"types/niPointLight/#dimmer","text":"The dimmer settings for the light. Returns : result ( niColor )","title":"dimmer"},{"location":"types/niPointLight/#enabled","text":"The enabled state of a given dynamic effect. Returns : result (boolean)","title":"enabled"},{"location":"types/niPointLight/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niPointLight/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niPointLight/#linearattenuation","text":"The linear attenuation factor. Returns : result (number)","title":"linearAttenuation"},{"location":"types/niPointLight/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niPointLight/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niPointLight/#parent","text":"The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niPointLight/#properties_1","text":"The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niPointLight/#quadraticattenuation","text":"The quadratic attenuation factor. Returns : result (number)","title":"quadraticAttenuation"},{"location":"types/niPointLight/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niPointLight/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niPointLight/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niPointLight/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niPointLight/#specular","text":"The specular settings for the light. Returns : result ( niColor )","title":"specular"},{"location":"types/niPointLight/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niPointLight/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niPointLight/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niPointLight/#type","text":"The enumerated type of a given dynamic effect. Types: 0 - niAmbientLight , 1 - niDirectionalLight , 2 - niPointLight , 3 - niSpotLight , 4 - niTextureEffect . Returns : result (number)","title":"type"},{"location":"types/niPointLight/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niPointLight/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil)","title":"zBufferProperty"},{"location":"types/niPointLight/#methods","text":"","title":"Methods"},{"location":"types/niPointLight/#attachproperty","text":"Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niPointLight/#cleartransforms","text":"Resets the object's local transform. niAVObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niPointLight/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niPointLight/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niPointLight/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niPointLight/#getproperty","text":"Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niPointLight/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niPointLight/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niPointLight/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niPointLight/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niPointLight/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niPointLight/#setattenuationforradius","text":"Sets the attenuation for the radius. niPointLight : setAttenuationForRadius ( radius ) Parameters : radius (number)","title":"setAttenuationForRadius"},{"location":"types/niPointLight/#setradius","text":"Sets both the light's influence radius, and its lighting attenuation to match the radius. niPointLight : setRadius ( radius ) Parameters : radius (number)","title":"setRadius"},{"location":"types/niPointLight/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update ()","title":"update"},{"location":"types/niPointLight/#updateeffects","text":"Update all attached effects. niAVObject : updateEffects ()","title":"updateEffects"},{"location":"types/niPointLight/#updateproperties","text":"Update all attached properties. niAVObject : updateProperties ()","title":"updateProperties"},{"location":"types/niPointLight/#functions","text":"","title":"Functions"},{"location":"types/niPointLight/#attachaffectednode","text":"Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list.","title":"attachAffectedNode"},{"location":"types/niPointLight/#detachaffectednode","text":"Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"detachAffectedNode"},{"location":"types/niProperty/","text":"niProperty \u2693\ufe0e A base class representing all rendering properties. This type inherits the following: niObjectNET , niObject Properties \u2693\ufe0e name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) type \u2693\ufe0e The unique class identifier number of the given rendering property. Returns : result (niPropertyType) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"niProperty"},{"location":"types/niProperty/#niproperty","text":"A base class representing all rendering properties. This type inherits the following: niObjectNET , niObject","title":"niProperty"},{"location":"types/niProperty/#properties","text":"","title":"Properties"},{"location":"types/niProperty/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niProperty/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niProperty/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niProperty/#type","text":"The unique class identifier number of the given rendering property. Returns : result (niPropertyType)","title":"type"},{"location":"types/niProperty/#methods","text":"","title":"Methods"},{"location":"types/niProperty/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niProperty/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niProperty/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niProperty/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niProperty/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niProperty/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niPropertyLinkedList/","text":"niPropertyLinkedList \u2693\ufe0e A linked list of properties. Properties \u2693\ufe0e data \u2693\ufe0e The current property in the linked list. Returns : result ( niProperty ) next \u2693\ufe0e The next property in the linked list. Returns : result ( niPropertyLinkedList )","title":"niPropertyLinkedList"},{"location":"types/niPropertyLinkedList/#nipropertylinkedlist","text":"A linked list of properties.","title":"niPropertyLinkedList"},{"location":"types/niPropertyLinkedList/#properties","text":"","title":"Properties"},{"location":"types/niPropertyLinkedList/#data","text":"The current property in the linked list. Returns : result ( niProperty )","title":"data"},{"location":"types/niPropertyLinkedList/#next","text":"The next property in the linked list. Returns : result ( niPropertyLinkedList )","title":"next"},{"location":"types/niRTTI/","text":"niRTTI \u2693\ufe0e Runtime type information for NetImmerse structures. Properties \u2693\ufe0e name \u2693\ufe0e The human readable name for the type. Returns : result (string) parent \u2693\ufe0e The runtime type information that this type derives from. Returns : result ( niRTTI )","title":"niRTTI"},{"location":"types/niRTTI/#nirtti","text":"Runtime type information for NetImmerse structures.","title":"niRTTI"},{"location":"types/niRTTI/#properties","text":"","title":"Properties"},{"location":"types/niRTTI/#name","text":"The human readable name for the type. Returns : result (string)","title":"name"},{"location":"types/niRTTI/#parent","text":"The runtime type information that this type derives from. Returns : result ( niRTTI )","title":"parent"},{"location":"types/niSourceTexture/","text":"niSourceTexture \u2693\ufe0e Represents all texture objects that are created from a file or a block of in-memory pixel data. NiSourceTexture objects represent both static and dynamic content, as NiSourceTexture data objects can have their pixel data modified on the fly to implement dynamic texture behavior. This type inherits the following: niObjectNET , niObject Properties \u2693\ufe0e fileName \u2693\ufe0e Read-only . The platform-independent version of the filename from which the image was created, or NULL if the image was created from pixel data. Returns : result (string) formatPrefs \u2693\ufe0e The NiFormatPrefs of the texture. Returns : result ( niFormatPrefs ) height \u2693\ufe0e Read-only . The height of the texture. Returns : result (number) isStatic \u2693\ufe0e The static flag. Returns : result (boolean) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) pixelData \u2693\ufe0e The app-level pixel data. Returns : result ( niPixelData ) platformFilename \u2693\ufe0e Read-only . The platform-specific version of the filename. Returns : result (string) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) width \u2693\ufe0e Read-only . The width of the texture. Returns : result (number) Methods \u2693\ufe0e clearPixelData \u2693\ufe0e Detaches any pixel data associated with this texture. Any render-specific data will be maintained, and remain in the GPU's memory. niSourceTexture : clearPixelData () clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) loadPixelDataFromFile \u2693\ufe0e Loads the file associated with the texture into memory, and makes it accessible from the pixelData property. niSourceTexture : loadPixelDataFromFile () prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController ) Functions \u2693\ufe0e createFromPath \u2693\ufe0e Creates an NiSourceTexture from the given filepath. niSourceTexture . createFromPath ( path ) Parameters : path (string): The filepath of the texture to load.","title":"niSourceTexture"},{"location":"types/niSourceTexture/#nisourcetexture","text":"Represents all texture objects that are created from a file or a block of in-memory pixel data. NiSourceTexture objects represent both static and dynamic content, as NiSourceTexture data objects can have their pixel data modified on the fly to implement dynamic texture behavior. This type inherits the following: niObjectNET , niObject","title":"niSourceTexture"},{"location":"types/niSourceTexture/#properties","text":"","title":"Properties"},{"location":"types/niSourceTexture/#filename","text":"Read-only . The platform-independent version of the filename from which the image was created, or NULL if the image was created from pixel data. Returns : result (string)","title":"fileName"},{"location":"types/niSourceTexture/#formatprefs","text":"The NiFormatPrefs of the texture. Returns : result ( niFormatPrefs )","title":"formatPrefs"},{"location":"types/niSourceTexture/#height","text":"Read-only . The height of the texture. Returns : result (number)","title":"height"},{"location":"types/niSourceTexture/#isstatic","text":"The static flag. Returns : result (boolean)","title":"isStatic"},{"location":"types/niSourceTexture/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niSourceTexture/#pixeldata","text":"The app-level pixel data. Returns : result ( niPixelData )","title":"pixelData"},{"location":"types/niSourceTexture/#platformfilename","text":"Read-only . The platform-specific version of the filename. Returns : result (string)","title":"platformFilename"},{"location":"types/niSourceTexture/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niSourceTexture/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niSourceTexture/#width","text":"Read-only . The width of the texture. Returns : result (number)","title":"width"},{"location":"types/niSourceTexture/#methods","text":"","title":"Methods"},{"location":"types/niSourceTexture/#clearpixeldata","text":"Detaches any pixel data associated with this texture. Any render-specific data will be maintained, and remain in the GPU's memory. niSourceTexture : clearPixelData ()","title":"clearPixelData"},{"location":"types/niSourceTexture/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niSourceTexture/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niSourceTexture/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niSourceTexture/#loadpixeldatafromfile","text":"Loads the file associated with the texture into memory, and makes it accessible from the pixelData property. niSourceTexture : loadPixelDataFromFile ()","title":"loadPixelDataFromFile"},{"location":"types/niSourceTexture/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niSourceTexture/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niSourceTexture/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niSourceTexture/#functions","text":"","title":"Functions"},{"location":"types/niSourceTexture/#createfrompath","text":"Creates an NiSourceTexture from the given filepath. niSourceTexture . createFromPath ( path ) Parameters : path (string): The filepath of the texture to load.","title":"createFromPath"},{"location":"types/niSpotLight/","text":"niSpotLight \u2693\ufe0e Represents a spotlight in a scene. Spotlights have a specific location and direction, as well as a distance attenuation and angle attenuation functions. The light direction is handled in the same way as in niDirectionalLight . This type inherits the following: niPointLight , niLight , niDynamicEffect , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e affectedNodes \u2693\ufe0e The list of nodes that a given dynamic effect will affect. Returns : result (niNodeLinkedList) alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) ambient \u2693\ufe0e The ambient settings for the light. Returns : result ( niColor ) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) constantAttenuation \u2693\ufe0e The constant attenuation factor. Returns : result (number) diffuse \u2693\ufe0e The defuse settings for the light. Returns : result ( niColor ) dimmer \u2693\ufe0e The dimmer settings for the light. Returns : result ( niColor ) direction \u2693\ufe0e The direction of the spotlight. Returns : result ( tes3vector3 ) enabled \u2693\ufe0e The enabled state of a given dynamic effect. Returns : result (boolean) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) linearAttenuation \u2693\ufe0e The linear attenuation factor. Returns : result (number) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) quadraticAttenuation \u2693\ufe0e The quadratic attenuation factor. Returns : result (number) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) specular \u2693\ufe0e The specular settings for the light. Returns : result ( niColor ) spotAngle \u2693\ufe0e The spotlight angle, in degrees. Returns : result (number) spotExponent \u2693\ufe0e The spotlight angular attenuation exponent. This value may be ignored. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) type \u2693\ufe0e The enumerated type of a given dynamic effect. Types: 0 - niAmbientLight , 1 - niDirectionalLight , 2 - niPointLight , 3 - niSpotLight , 4 - niTextureEffect . Returns : result (number) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil) Methods \u2693\ufe0e attachProperty \u2693\ufe0e Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. niAVObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController ) setAttenuationForRadius \u2693\ufe0e Sets the attenuation for the radius. niPointLight : setAttenuationForRadius ( radius ) Parameters : radius (number) setRadius \u2693\ufe0e Sets both the light's influence radius, and its lighting attenuation to match the radius. niPointLight : setRadius ( radius ) Parameters : radius (number) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update () updateEffects \u2693\ufe0e Update all attached effects. niAVObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. niAVObject : updateProperties () Functions \u2693\ufe0e attachAffectedNode \u2693\ufe0e Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list. detachAffectedNode \u2693\ufe0e Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"niSpotLight"},{"location":"types/niSpotLight/#nispotlight","text":"Represents a spotlight in a scene. Spotlights have a specific location and direction, as well as a distance attenuation and angle attenuation functions. The light direction is handled in the same way as in niDirectionalLight . This type inherits the following: niPointLight , niLight , niDynamicEffect , niAVObject , niObjectNET , niObject","title":"niSpotLight"},{"location":"types/niSpotLight/#properties","text":"","title":"Properties"},{"location":"types/niSpotLight/#affectednodes","text":"The list of nodes that a given dynamic effect will affect. Returns : result (niNodeLinkedList)","title":"affectedNodes"},{"location":"types/niSpotLight/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niSpotLight/#ambient","text":"The ambient settings for the light. Returns : result ( niColor )","title":"ambient"},{"location":"types/niSpotLight/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niSpotLight/#constantattenuation","text":"The constant attenuation factor. Returns : result (number)","title":"constantAttenuation"},{"location":"types/niSpotLight/#diffuse","text":"The defuse settings for the light. Returns : result ( niColor )","title":"diffuse"},{"location":"types/niSpotLight/#dimmer","text":"The dimmer settings for the light. Returns : result ( niColor )","title":"dimmer"},{"location":"types/niSpotLight/#direction","text":"The direction of the spotlight. Returns : result ( tes3vector3 )","title":"direction"},{"location":"types/niSpotLight/#enabled","text":"The enabled state of a given dynamic effect. Returns : result (boolean)","title":"enabled"},{"location":"types/niSpotLight/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niSpotLight/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niSpotLight/#linearattenuation","text":"The linear attenuation factor. Returns : result (number)","title":"linearAttenuation"},{"location":"types/niSpotLight/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niSpotLight/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niSpotLight/#parent","text":"The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niSpotLight/#properties_1","text":"The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niSpotLight/#quadraticattenuation","text":"The quadratic attenuation factor. Returns : result (number)","title":"quadraticAttenuation"},{"location":"types/niSpotLight/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niSpotLight/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niSpotLight/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niSpotLight/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niSpotLight/#specular","text":"The specular settings for the light. Returns : result ( niColor )","title":"specular"},{"location":"types/niSpotLight/#spotangle","text":"The spotlight angle, in degrees. Returns : result (number)","title":"spotAngle"},{"location":"types/niSpotLight/#spotexponent","text":"The spotlight angular attenuation exponent. This value may be ignored. Returns : result (number)","title":"spotExponent"},{"location":"types/niSpotLight/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niSpotLight/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niSpotLight/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niSpotLight/#type","text":"The enumerated type of a given dynamic effect. Types: 0 - niAmbientLight , 1 - niDirectionalLight , 2 - niPointLight , 3 - niSpotLight , 4 - niTextureEffect . Returns : result (number)","title":"type"},{"location":"types/niSpotLight/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niSpotLight/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil)","title":"zBufferProperty"},{"location":"types/niSpotLight/#methods","text":"","title":"Methods"},{"location":"types/niSpotLight/#attachproperty","text":"Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niSpotLight/#cleartransforms","text":"Resets the object's local transform. niAVObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niSpotLight/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niSpotLight/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niSpotLight/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niSpotLight/#getproperty","text":"Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niSpotLight/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niSpotLight/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niSpotLight/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niSpotLight/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niSpotLight/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niSpotLight/#setattenuationforradius","text":"Sets the attenuation for the radius. niPointLight : setAttenuationForRadius ( radius ) Parameters : radius (number)","title":"setAttenuationForRadius"},{"location":"types/niSpotLight/#setradius","text":"Sets both the light's influence radius, and its lighting attenuation to match the radius. niPointLight : setRadius ( radius ) Parameters : radius (number)","title":"setRadius"},{"location":"types/niSpotLight/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update ()","title":"update"},{"location":"types/niSpotLight/#updateeffects","text":"Update all attached effects. niAVObject : updateEffects ()","title":"updateEffects"},{"location":"types/niSpotLight/#updateproperties","text":"Update all attached properties. niAVObject : updateProperties ()","title":"updateProperties"},{"location":"types/niSpotLight/#functions","text":"","title":"Functions"},{"location":"types/niSpotLight/#attachaffectednode","text":"Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list.","title":"attachAffectedNode"},{"location":"types/niSpotLight/#detachaffectednode","text":"Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. niDynamicEffect . detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"detachAffectedNode"},{"location":"types/niStencilProperty/","text":"niStencilProperty \u2693\ufe0e A rendering property that controls the use of a stencil buffer when rendering. It also includes a draw-mode setting to allows the game engine to control the culling mode of a set of geometry. This type inherits the following: niProperty , niObjectNET , niObject Properties \u2693\ufe0e drawMode \u2693\ufe0e The drawing mode used to draw the object. Returns : result (number) enabled \u2693\ufe0e The value of the stencil buffer enable flag. Returns : result (boolean) failAction \u2693\ufe0e The action that is taken in the stencil buffer when the stencil test fails. Returns : result (number) mask \u2693\ufe0e The mask value of the stencil buffer. Returns : result (number) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) passAction \u2693\ufe0e The action that is taken in the stencil buffer when the stencil test passes and the pixel passes the Z-buffer test. Returns : result (number) reference \u2693\ufe0e The stencil reference. Returns : result (number) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) testFunc \u2693\ufe0e The stencil buffer test function used to test the reference value against the buffer value. Returns : result (number) type \u2693\ufe0e The unique class identifier number of the given rendering property. Returns : result (niPropertyType) zFailAction \u2693\ufe0e The action that is taken in the stencil buffer when the stencil test passes but the pixel fails the Z-buffer test. Returns : result (number) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"niStencilProperty"},{"location":"types/niStencilProperty/#nistencilproperty","text":"A rendering property that controls the use of a stencil buffer when rendering. It also includes a draw-mode setting to allows the game engine to control the culling mode of a set of geometry. This type inherits the following: niProperty , niObjectNET , niObject","title":"niStencilProperty"},{"location":"types/niStencilProperty/#properties","text":"","title":"Properties"},{"location":"types/niStencilProperty/#drawmode","text":"The drawing mode used to draw the object. Returns : result (number)","title":"drawMode"},{"location":"types/niStencilProperty/#enabled","text":"The value of the stencil buffer enable flag. Returns : result (boolean)","title":"enabled"},{"location":"types/niStencilProperty/#failaction","text":"The action that is taken in the stencil buffer when the stencil test fails. Returns : result (number)","title":"failAction"},{"location":"types/niStencilProperty/#mask","text":"The mask value of the stencil buffer. Returns : result (number)","title":"mask"},{"location":"types/niStencilProperty/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niStencilProperty/#passaction","text":"The action that is taken in the stencil buffer when the stencil test passes and the pixel passes the Z-buffer test. Returns : result (number)","title":"passAction"},{"location":"types/niStencilProperty/#reference","text":"The stencil reference. Returns : result (number)","title":"reference"},{"location":"types/niStencilProperty/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niStencilProperty/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niStencilProperty/#testfunc","text":"The stencil buffer test function used to test the reference value against the buffer value. Returns : result (number)","title":"testFunc"},{"location":"types/niStencilProperty/#type","text":"The unique class identifier number of the given rendering property. Returns : result (niPropertyType)","title":"type"},{"location":"types/niStencilProperty/#zfailaction","text":"The action that is taken in the stencil buffer when the stencil test passes but the pixel fails the Z-buffer test. Returns : result (number)","title":"zFailAction"},{"location":"types/niStencilProperty/#methods","text":"","title":"Methods"},{"location":"types/niStencilProperty/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niStencilProperty/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niStencilProperty/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niStencilProperty/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niStencilProperty/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niStencilProperty/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niSwitchNode/","text":"niSwitchNode \u2693\ufe0e Represents groups of multiple scene graph subtrees, only one of which is visible at any given time. They are useful for showing different states of a model depending on engine / lua logic. If you detach the active subtree, the switch node will set the active subtree to none, or to an index of -1. This type inherits the following: niNode , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) children \u2693\ufe0e Read-only . The children of the node. Returns : result (niAVObjectTArray) effectList \u2693\ufe0e Read-only . The effect list of the node. Returns : result ( niDynamicEffectLinkedList ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) switchIndex \u2693\ufe0e The value of the active child index. This index represents the index of the active child in the array of the NiSwitchNode. If this index is \u20131, then no child is active. Returns : result (number) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil) Methods \u2693\ufe0e attachChild \u2693\ufe0e Attachs the child to the children list of the node. niNode : attachChild ( child , useFirstAvailable ) Parameters : child ( niAVObject ) useFirstAvailable (boolean): Optional . Use the first available space in the list. Default value is False. attachProperty \u2693\ufe0e Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. niAVObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) detachChild \u2693\ufe0e Detaches the child from the children list of the node. Returns the detached child. local result = niNode : detachChild ( child ) Parameters : child ( niAVObject ) Returns : result ( niAVObject ) detachChildAt \u2693\ufe0e Detaches the child at the specified index from the children list of the node. Returns the detached child. local result = niNode : detachChildAt ( index ) Parameters : index (number) Returns : result ( niAVObject ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) getActiveChild \u2693\ufe0e Gets the active child node, or returns nil if the switch index is -1. local result = niSwitchNode : getActiveChild () Returns : result ( niAVObject ) getEffect \u2693\ufe0e Gets the effect for the given type. local result = niNode : getEffect ( type ) Parameters : type (number) Returns : result ( niDynamicEffect ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController ) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update () updateEffects \u2693\ufe0e Update all attached effects. niAVObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. niAVObject : updateProperties ()","title":"niSwitchNode"},{"location":"types/niSwitchNode/#niswitchnode","text":"Represents groups of multiple scene graph subtrees, only one of which is visible at any given time. They are useful for showing different states of a model depending on engine / lua logic. If you detach the active subtree, the switch node will set the active subtree to none, or to an index of -1. This type inherits the following: niNode , niAVObject , niObjectNET , niObject","title":"niSwitchNode"},{"location":"types/niSwitchNode/#properties","text":"","title":"Properties"},{"location":"types/niSwitchNode/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niSwitchNode/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niSwitchNode/#children","text":"Read-only . The children of the node. Returns : result (niAVObjectTArray)","title":"children"},{"location":"types/niSwitchNode/#effectlist","text":"Read-only . The effect list of the node. Returns : result ( niDynamicEffectLinkedList )","title":"effectList"},{"location":"types/niSwitchNode/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niSwitchNode/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niSwitchNode/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niSwitchNode/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niSwitchNode/#parent","text":"The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niSwitchNode/#properties_1","text":"The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niSwitchNode/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niSwitchNode/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niSwitchNode/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niSwitchNode/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niSwitchNode/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niSwitchNode/#switchindex","text":"The value of the active child index. This index represents the index of the active child in the array of the NiSwitchNode. If this index is \u20131, then no child is active. Returns : result (number)","title":"switchIndex"},{"location":"types/niSwitchNode/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niSwitchNode/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niSwitchNode/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niSwitchNode/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil)","title":"zBufferProperty"},{"location":"types/niSwitchNode/#methods","text":"","title":"Methods"},{"location":"types/niSwitchNode/#attachchild","text":"Attachs the child to the children list of the node. niNode : attachChild ( child , useFirstAvailable ) Parameters : child ( niAVObject ) useFirstAvailable (boolean): Optional . Use the first available space in the list. Default value is False.","title":"attachChild"},{"location":"types/niSwitchNode/#attachproperty","text":"Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niSwitchNode/#cleartransforms","text":"Resets the object's local transform. niAVObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niSwitchNode/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niSwitchNode/#detachchild","text":"Detaches the child from the children list of the node. Returns the detached child. local result = niNode : detachChild ( child ) Parameters : child ( niAVObject ) Returns : result ( niAVObject )","title":"detachChild"},{"location":"types/niSwitchNode/#detachchildat","text":"Detaches the child at the specified index from the children list of the node. Returns the detached child. local result = niNode : detachChildAt ( index ) Parameters : index (number) Returns : result ( niAVObject )","title":"detachChildAt"},{"location":"types/niSwitchNode/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niSwitchNode/#getactivechild","text":"Gets the active child node, or returns nil if the switch index is -1. local result = niSwitchNode : getActiveChild () Returns : result ( niAVObject )","title":"getActiveChild"},{"location":"types/niSwitchNode/#geteffect","text":"Gets the effect for the given type. local result = niNode : getEffect ( type ) Parameters : type (number) Returns : result ( niDynamicEffect )","title":"getEffect"},{"location":"types/niSwitchNode/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niSwitchNode/#getproperty","text":"Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niSwitchNode/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niSwitchNode/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niSwitchNode/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niSwitchNode/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niSwitchNode/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niSwitchNode/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update ()","title":"update"},{"location":"types/niSwitchNode/#updateeffects","text":"Update all attached effects. niAVObject : updateEffects ()","title":"updateEffects"},{"location":"types/niSwitchNode/#updateproperties","text":"Update all attached properties. niAVObject : updateProperties ()","title":"updateProperties"},{"location":"types/niTexturingProperty/","text":"niTexturingProperty \u2693\ufe0e A rendering property that controls the methods used to filter texture pixels, and blend texture colors and vertex colors. This type inherits the following: niProperty , niObjectNET , niObject Properties \u2693\ufe0e applyMode \u2693\ufe0e The texture apply mode. The texture apply mode controls how the vertex colors are blended with the texture color. Returns : result (niTexturingPropertyApplyMode) baseMap \u2693\ufe0e Gets or set the base map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil) bumpMap \u2693\ufe0e Gets or set the bump map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil) canAddDecal \u2693\ufe0e Read-only . If true, the texturing property supports additional decal maps. Returns : result (boolean) darkMap \u2693\ufe0e Gets or set the dark map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil) decalCount \u2693\ufe0e Read-only . The number of decals currently on the texturing property. Returns : result (number) detailMap \u2693\ufe0e Gets or set the detail map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil) glossMap \u2693\ufe0e Gets or set the gloss map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil) glowMap \u2693\ufe0e Gets or set the glow map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil) maps \u2693\ufe0e The maps of texture property. Accessible as an array. Returns : result (niTexturingPropertyMapTArray) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) type \u2693\ufe0e The unique class identifier number of the given rendering property. Returns : result (niPropertyType) Methods \u2693\ufe0e addDecalMap \u2693\ufe0e Attempts to create a new decal map. If successful, it returns both the new map and the index it was created in. local map , index = niTexturingProperty : addDecalMap ( texture ) Parameters : texture (niTexture): Optional . The texture to assign to the new decal. Returns : map ( niTexturingPropertyMap , nil): A newly created decal map. index (number, nil): The index of the newly added decal map. clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController ) removeDecalMap \u2693\ufe0e Attempts to remove a decal at a given index. local removed = niTexturingProperty : removeDecalMap ( index ) Parameters : index (number): The index of the decal to remove. Returns : removed (boolean): True if the decal was removed.","title":"niTexturingProperty"},{"location":"types/niTexturingProperty/#nitexturingproperty","text":"A rendering property that controls the methods used to filter texture pixels, and blend texture colors and vertex colors. This type inherits the following: niProperty , niObjectNET , niObject","title":"niTexturingProperty"},{"location":"types/niTexturingProperty/#properties","text":"","title":"Properties"},{"location":"types/niTexturingProperty/#applymode","text":"The texture apply mode. The texture apply mode controls how the vertex colors are blended with the texture color. Returns : result (niTexturingPropertyApplyMode)","title":"applyMode"},{"location":"types/niTexturingProperty/#basemap","text":"Gets or set the base map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil)","title":"baseMap"},{"location":"types/niTexturingProperty/#bumpmap","text":"Gets or set the bump map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil)","title":"bumpMap"},{"location":"types/niTexturingProperty/#canadddecal","text":"Read-only . If true, the texturing property supports additional decal maps. Returns : result (boolean)","title":"canAddDecal"},{"location":"types/niTexturingProperty/#darkmap","text":"Gets or set the dark map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil)","title":"darkMap"},{"location":"types/niTexturingProperty/#decalcount","text":"Read-only . The number of decals currently on the texturing property. Returns : result (number)","title":"decalCount"},{"location":"types/niTexturingProperty/#detailmap","text":"Gets or set the detail map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil)","title":"detailMap"},{"location":"types/niTexturingProperty/#glossmap","text":"Gets or set the gloss map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil)","title":"glossMap"},{"location":"types/niTexturingProperty/#glowmap","text":"Gets or set the glow map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil)","title":"glowMap"},{"location":"types/niTexturingProperty/#maps","text":"The maps of texture property. Accessible as an array. Returns : result (niTexturingPropertyMapTArray)","title":"maps"},{"location":"types/niTexturingProperty/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niTexturingProperty/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niTexturingProperty/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niTexturingProperty/#type","text":"The unique class identifier number of the given rendering property. Returns : result (niPropertyType)","title":"type"},{"location":"types/niTexturingProperty/#methods","text":"","title":"Methods"},{"location":"types/niTexturingProperty/#adddecalmap","text":"Attempts to create a new decal map. If successful, it returns both the new map and the index it was created in. local map , index = niTexturingProperty : addDecalMap ( texture ) Parameters : texture (niTexture): Optional . The texture to assign to the new decal. Returns : map ( niTexturingPropertyMap , nil): A newly created decal map. index (number, nil): The index of the newly added decal map.","title":"addDecalMap"},{"location":"types/niTexturingProperty/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niTexturingProperty/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niTexturingProperty/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niTexturingProperty/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niTexturingProperty/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niTexturingProperty/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niTexturingProperty/#removedecalmap","text":"Attempts to remove a decal at a given index. local removed = niTexturingProperty : removeDecalMap ( index ) Parameters : index (number): The index of the decal to remove. Returns : removed (boolean): True if the decal was removed.","title":"removeDecalMap"},{"location":"types/niTexturingPropertyMap/","text":"niTexturingPropertyMap \u2693\ufe0e A combination of a texture, a filter mode, a clamping mode, and an index to a set of texture coordinates. Properties \u2693\ufe0e clampMode \u2693\ufe0e The clamp mode for the Map. Returns : result (niTexturingPropertyClampMode) filterMode \u2693\ufe0e The filter mode for the Map. Returns : result (niTexturingPropertyFilterMode) texCoordSet \u2693\ufe0e The texture coordinate set for the Map. Returns : result (number) texture \u2693\ufe0e The texture for the Map. Returns : result (niTexture) Functions \u2693\ufe0e new \u2693\ufe0e Creates a new basic or bump map. local map = niTexturingPropertyMap . new ({ texture = ..., clampMode = ..., filterMode = ..., textCoords = ..., isBumpMap = ... }) Parameters : params (table) texture (niTexture): Optional . If provided, sets the map texture to the given value. clampMode (number): Default : WRAP_S_WRAP_T . The clamp mode to set the map to use. filterMode (number): Default : TRILERP . The filter mode to set the map to use. textCoords (number): Default : 0 . The texture coordinates to set the map to use. isBumpMap (boolean): Default : false . If true, a bump map will be created instead. Returns : map ( niTexturingPropertyMap ): The created basic or bump map.","title":"niTexturingPropertyMap"},{"location":"types/niTexturingPropertyMap/#nitexturingpropertymap","text":"A combination of a texture, a filter mode, a clamping mode, and an index to a set of texture coordinates.","title":"niTexturingPropertyMap"},{"location":"types/niTexturingPropertyMap/#properties","text":"","title":"Properties"},{"location":"types/niTexturingPropertyMap/#clampmode","text":"The clamp mode for the Map. Returns : result (niTexturingPropertyClampMode)","title":"clampMode"},{"location":"types/niTexturingPropertyMap/#filtermode","text":"The filter mode for the Map. Returns : result (niTexturingPropertyFilterMode)","title":"filterMode"},{"location":"types/niTexturingPropertyMap/#texcoordset","text":"The texture coordinate set for the Map. Returns : result (number)","title":"texCoordSet"},{"location":"types/niTexturingPropertyMap/#texture","text":"The texture for the Map. Returns : result (niTexture)","title":"texture"},{"location":"types/niTexturingPropertyMap/#functions","text":"","title":"Functions"},{"location":"types/niTexturingPropertyMap/#new","text":"Creates a new basic or bump map. local map = niTexturingPropertyMap . new ({ texture = ..., clampMode = ..., filterMode = ..., textCoords = ..., isBumpMap = ... }) Parameters : params (table) texture (niTexture): Optional . If provided, sets the map texture to the given value. clampMode (number): Default : WRAP_S_WRAP_T . The clamp mode to set the map to use. filterMode (number): Default : TRILERP . The filter mode to set the map to use. textCoords (number): Default : 0 . The texture coordinates to set the map to use. isBumpMap (boolean): Default : false . If true, a bump map will be created instead. Returns : map ( niTexturingPropertyMap ): The created basic or bump map.","title":"new"},{"location":"types/niTimeController/","text":"niTimeController \u2693\ufe0e Controls the timing and update functions for animation controllers. This type inherits the following: niObject Properties \u2693\ufe0e active \u2693\ufe0e If the controller is active. When inactive, the target does not get updated and animation timing does not advance. Returns : result (boolean) animTimingType \u2693\ufe0e How the time parameter passed to the update function is treated. Type 0 is the default, which treats the update time as a delta time. Type 1 treats the update time an offset from the start of the animation. Returns : result (number) cycleType \u2693\ufe0e The animation cycle type. Type 0 is looping, type 2 is reverse, type 4 is clamped. Returns : result (number) frequency \u2693\ufe0e The animation controller's frequency value. Returns : result (number) highKeyFrame \u2693\ufe0e No description. Returns : result (number) lastScaledTime \u2693\ufe0e No description. Returns : result (number) lastTime \u2693\ufe0e No description. Returns : result (number) lowKeyFrame \u2693\ufe0e No description. Returns : result (number) nextController \u2693\ufe0e The next NiTimeController in the list of controllers containing the calling controller. Returns : result ( niTimeController ) phase \u2693\ufe0e The phase value. Returns : result (number) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) startTime \u2693\ufe0e No description. Returns : result (number) target \u2693\ufe0e The scene graph object that this animation controller is to animate. Returns : result ( niObjectNET ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) start \u2693\ufe0e Starts the controller at the specified time. niTimeController : start ( time ) Parameters : time (number) stop \u2693\ufe0e Stops the controller. If you only want to pause the controller, use the update property. niTimeController : stop ()","title":"niTimeController"},{"location":"types/niTimeController/#nitimecontroller","text":"Controls the timing and update functions for animation controllers. This type inherits the following: niObject","title":"niTimeController"},{"location":"types/niTimeController/#properties","text":"","title":"Properties"},{"location":"types/niTimeController/#active","text":"If the controller is active. When inactive, the target does not get updated and animation timing does not advance. Returns : result (boolean)","title":"active"},{"location":"types/niTimeController/#animtimingtype","text":"How the time parameter passed to the update function is treated. Type 0 is the default, which treats the update time as a delta time. Type 1 treats the update time an offset from the start of the animation. Returns : result (number)","title":"animTimingType"},{"location":"types/niTimeController/#cycletype","text":"The animation cycle type. Type 0 is looping, type 2 is reverse, type 4 is clamped. Returns : result (number)","title":"cycleType"},{"location":"types/niTimeController/#frequency","text":"The animation controller's frequency value. Returns : result (number)","title":"frequency"},{"location":"types/niTimeController/#highkeyframe","text":"No description. Returns : result (number)","title":"highKeyFrame"},{"location":"types/niTimeController/#lastscaledtime","text":"No description. Returns : result (number)","title":"lastScaledTime"},{"location":"types/niTimeController/#lasttime","text":"No description. Returns : result (number)","title":"lastTime"},{"location":"types/niTimeController/#lowkeyframe","text":"No description. Returns : result (number)","title":"lowKeyFrame"},{"location":"types/niTimeController/#nextcontroller","text":"The next NiTimeController in the list of controllers containing the calling controller. Returns : result ( niTimeController )","title":"nextController"},{"location":"types/niTimeController/#phase","text":"The phase value. Returns : result (number)","title":"phase"},{"location":"types/niTimeController/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niTimeController/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niTimeController/#starttime","text":"No description. Returns : result (number)","title":"startTime"},{"location":"types/niTimeController/#target","text":"The scene graph object that this animation controller is to animate. Returns : result ( niObjectNET )","title":"target"},{"location":"types/niTimeController/#methods","text":"","title":"Methods"},{"location":"types/niTimeController/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niTimeController/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niTimeController/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niTimeController/#start","text":"Starts the controller at the specified time. niTimeController : start ( time ) Parameters : time (number)","title":"start"},{"location":"types/niTimeController/#stop","text":"Stops the controller. If you only want to pause the controller, use the update property. niTimeController : stop ()","title":"stop"},{"location":"types/niTriBasedGeometry/","text":"niTriBasedGeometry \u2693\ufe0e Base class for all geometry that uses triangles. This type inherits the following: niGeometry , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil) Methods \u2693\ufe0e attachProperty \u2693\ufe0e Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. niAVObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController ) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update () updateEffects \u2693\ufe0e Update all attached effects. niAVObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. niAVObject : updateProperties ()","title":"niTriBasedGeometry"},{"location":"types/niTriBasedGeometry/#nitribasedgeometry","text":"Base class for all geometry that uses triangles. This type inherits the following: niGeometry , niAVObject , niObjectNET , niObject","title":"niTriBasedGeometry"},{"location":"types/niTriBasedGeometry/#properties","text":"","title":"Properties"},{"location":"types/niTriBasedGeometry/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niTriBasedGeometry/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niTriBasedGeometry/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niTriBasedGeometry/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niTriBasedGeometry/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niTriBasedGeometry/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niTriBasedGeometry/#parent","text":"The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niTriBasedGeometry/#properties_1","text":"The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niTriBasedGeometry/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niTriBasedGeometry/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niTriBasedGeometry/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niTriBasedGeometry/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niTriBasedGeometry/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niTriBasedGeometry/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niTriBasedGeometry/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niTriBasedGeometry/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niTriBasedGeometry/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil)","title":"zBufferProperty"},{"location":"types/niTriBasedGeometry/#methods","text":"","title":"Methods"},{"location":"types/niTriBasedGeometry/#attachproperty","text":"Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niTriBasedGeometry/#cleartransforms","text":"Resets the object's local transform. niAVObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niTriBasedGeometry/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niTriBasedGeometry/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niTriBasedGeometry/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niTriBasedGeometry/#getproperty","text":"Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niTriBasedGeometry/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niTriBasedGeometry/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niTriBasedGeometry/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niTriBasedGeometry/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niTriBasedGeometry/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niTriBasedGeometry/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update ()","title":"update"},{"location":"types/niTriBasedGeometry/#updateeffects","text":"Update all attached effects. niAVObject : updateEffects ()","title":"updateEffects"},{"location":"types/niTriBasedGeometry/#updateproperties","text":"Update all attached properties. niAVObject : updateProperties ()","title":"updateProperties"},{"location":"types/niTriBasedGeometryData/","text":"niTriBasedGeometryData \u2693\ufe0e Contains the actual geometry data for a NiTriBasedGeometry object. This type inherits the following: niGeometryData , niObject Properties \u2693\ufe0e bounds \u2693\ufe0e The bounds of the object. Returns : result (niBound) colors \u2693\ufe0e Read-only . The color for the object. Returns : result ( niColorA ) normals \u2693\ufe0e Read-only . The normals list for the object. Returns : result ( tes3vector3 ) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) texCoords \u2693\ufe0e Read-only . The array of texture coordinates. Returns : result ( tes3vector2 ) textures \u2693\ufe0e Read-only . The array of texture coordinates. Returns : result ( tes3vector2 ) textureSets \u2693\ufe0e The number of texture coordinate sets in the data. Returns : result (number) triangleCount \u2693\ufe0e The triangle count of the object. Returns : result (number) uniqueID \u2693\ufe0e A unique ID for this model, assigned at model creation. Returns : result (number) vertexCount \u2693\ufe0e Read-only . The vertex count for the object. Returns : result (number) vertices \u2693\ufe0e Read-only . The array of vertex position data. Returns : result ( tes3vector3 ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) markAsChanged \u2693\ufe0e Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data. If you have altered vertex positions, you may need to also call updateModelBound _. You should call it if vertices have been moved outside the bounds of the original model. niGeometryData : markAsChanged () updateModelBound \u2693\ufe0e Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function. niGeometryData : updateModelBound ()","title":"niTriBasedGeometryData"},{"location":"types/niTriBasedGeometryData/#nitribasedgeometrydata","text":"Contains the actual geometry data for a NiTriBasedGeometry object. This type inherits the following: niGeometryData , niObject","title":"niTriBasedGeometryData"},{"location":"types/niTriBasedGeometryData/#properties","text":"","title":"Properties"},{"location":"types/niTriBasedGeometryData/#bounds","text":"The bounds of the object. Returns : result (niBound)","title":"bounds"},{"location":"types/niTriBasedGeometryData/#colors","text":"Read-only . The color for the object. Returns : result ( niColorA )","title":"colors"},{"location":"types/niTriBasedGeometryData/#normals","text":"Read-only . The normals list for the object. Returns : result ( tes3vector3 )","title":"normals"},{"location":"types/niTriBasedGeometryData/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niTriBasedGeometryData/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niTriBasedGeometryData/#texcoords","text":"Read-only . The array of texture coordinates. Returns : result ( tes3vector2 )","title":"texCoords"},{"location":"types/niTriBasedGeometryData/#textures","text":"Read-only . The array of texture coordinates. Returns : result ( tes3vector2 )","title":"textures"},{"location":"types/niTriBasedGeometryData/#texturesets","text":"The number of texture coordinate sets in the data. Returns : result (number)","title":"textureSets"},{"location":"types/niTriBasedGeometryData/#trianglecount","text":"The triangle count of the object. Returns : result (number)","title":"triangleCount"},{"location":"types/niTriBasedGeometryData/#uniqueid","text":"A unique ID for this model, assigned at model creation. Returns : result (number)","title":"uniqueID"},{"location":"types/niTriBasedGeometryData/#vertexcount","text":"Read-only . The vertex count for the object. Returns : result (number)","title":"vertexCount"},{"location":"types/niTriBasedGeometryData/#vertices","text":"Read-only . The array of vertex position data. Returns : result ( tes3vector3 )","title":"vertices"},{"location":"types/niTriBasedGeometryData/#methods","text":"","title":"Methods"},{"location":"types/niTriBasedGeometryData/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niTriBasedGeometryData/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niTriBasedGeometryData/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niTriBasedGeometryData/#markaschanged","text":"Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data. If you have altered vertex positions, you may need to also call updateModelBound _. You should call it if vertices have been moved outside the bounds of the original model. niGeometryData : markAsChanged ()","title":"markAsChanged"},{"location":"types/niTriBasedGeometryData/#updatemodelbound","text":"Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function. niGeometryData : updateModelBound ()","title":"updateModelBound"},{"location":"types/niTriShape/","text":"niTriShape \u2693\ufe0e An object that allows the sharing of vertices between triangles to create shapes. This type inherits the following: niTriBasedGeometry , niGeometry , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) data \u2693\ufe0e The NiTriShapeData of the object. Manipulation should not be done directly. Instead, consider copying the data and assigning it to this shape. Returns : result ( niTriShapeData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) normals \u2693\ufe0e The normals of the object. Returns : result ( tes3vector3 ) parent \u2693\ufe0e The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) vertices \u2693\ufe0e The vertices of the object. Returns : result ( tes3vector3 ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil) Methods \u2693\ufe0e attachProperty \u2693\ufe0e Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. niAVObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController ) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update () updateEffects \u2693\ufe0e Update all attached effects. niAVObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. niAVObject : updateProperties ()","title":"niTriShape"},{"location":"types/niTriShape/#nitrishape","text":"An object that allows the sharing of vertices between triangles to create shapes. This type inherits the following: niTriBasedGeometry , niGeometry , niAVObject , niObjectNET , niObject","title":"niTriShape"},{"location":"types/niTriShape/#properties","text":"","title":"Properties"},{"location":"types/niTriShape/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niTriShape/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niTriShape/#data","text":"The NiTriShapeData of the object. Manipulation should not be done directly. Instead, consider copying the data and assigning it to this shape. Returns : result ( niTriShapeData )","title":"data"},{"location":"types/niTriShape/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niTriShape/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niTriShape/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niTriShape/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niTriShape/#normals","text":"The normals of the object. Returns : result ( tes3vector3 )","title":"normals"},{"location":"types/niTriShape/#parent","text":"The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niTriShape/#properties_1","text":"The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niTriShape/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niTriShape/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niTriShape/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niTriShape/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niTriShape/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niTriShape/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niTriShape/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niTriShape/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niTriShape/#vertices","text":"The vertices of the object. Returns : result ( tes3vector3 )","title":"vertices"},{"location":"types/niTriShape/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result (niZBufferProperty, nil)","title":"zBufferProperty"},{"location":"types/niTriShape/#methods","text":"","title":"Methods"},{"location":"types/niTriShape/#attachproperty","text":"Attach a property to this object. niAVObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niTriShape/#cleartransforms","text":"Resets the object's local transform. niAVObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niTriShape/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niTriShape/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = niAVObject : detachProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niTriShape/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = niAVObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niTriShape/#getproperty","text":"Gets an attached property by property type. local result = niAVObject : getProperty ( type ) Parameters : type (number) Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niTriShape/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niTriShape/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niTriShape/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niTriShape/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niTriShape/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/niTriShape/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, or bounds. niAVObject : update ()","title":"update"},{"location":"types/niTriShape/#updateeffects","text":"Update all attached effects. niAVObject : updateEffects ()","title":"updateEffects"},{"location":"types/niTriShape/#updateproperties","text":"Update all attached properties. niAVObject : updateProperties ()","title":"updateProperties"},{"location":"types/niTriShapeData/","text":"niTriShapeData \u2693\ufe0e Contains the geometry data for an NiTriShape object. This type inherits the following: niTriBasedGeometryData , niGeometryData , niObject Properties \u2693\ufe0e bounds \u2693\ufe0e The bounds of the object. Returns : result (niBound) colors \u2693\ufe0e Read-only . The color for the object. Returns : result ( niColorA ) normals \u2693\ufe0e Read-only . The normals list for the object. Returns : result ( tes3vector3 ) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) texCoords \u2693\ufe0e Read-only . The array of texture coordinates. Returns : result ( tes3vector2 ) textures \u2693\ufe0e Read-only . The array of texture coordinates. Returns : result ( tes3vector2 ) textureSets \u2693\ufe0e The number of texture coordinate sets in the data. Returns : result (number) triangleCount \u2693\ufe0e The triangle count of the object. Returns : result (number) uniqueID \u2693\ufe0e A unique ID for this model, assigned at model creation. Returns : result (number) vertexCount \u2693\ufe0e Read-only . The vertex count for the object. Returns : result (number) vertices \u2693\ufe0e Read-only . The array of vertex position data. Returns : result ( tes3vector3 ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) copy \u2693\ufe0e Creates a copy of the data. An optional table of filters can be passed to remove information from the copy. local copiedData = niTriShapeData : copy ({ normals = ..., colors = ..., texCoords = ... }) Parameters : params (table) normals (boolean): Default : true . If false, the geometry data's normals will be absent from the copy. colors (boolean): Default : true . If false, the geometry data's colors will be absent from the copy. texCoords (boolean): Default : true . If false, the geometry data's texture coordinates will be absent from the copy. Returns : copiedData ( niTriShapeData ): The duplicated data. isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) markAsChanged \u2693\ufe0e Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data. If you have altered vertex positions, you may need to also call updateModelBound _. You should call it if vertices have been moved outside the bounds of the original model. niGeometryData : markAsChanged () updateModelBound \u2693\ufe0e Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function. niGeometryData : updateModelBound ()","title":"niTriShapeData"},{"location":"types/niTriShapeData/#nitrishapedata","text":"Contains the geometry data for an NiTriShape object. This type inherits the following: niTriBasedGeometryData , niGeometryData , niObject","title":"niTriShapeData"},{"location":"types/niTriShapeData/#properties","text":"","title":"Properties"},{"location":"types/niTriShapeData/#bounds","text":"The bounds of the object. Returns : result (niBound)","title":"bounds"},{"location":"types/niTriShapeData/#colors","text":"Read-only . The color for the object. Returns : result ( niColorA )","title":"colors"},{"location":"types/niTriShapeData/#normals","text":"Read-only . The normals list for the object. Returns : result ( tes3vector3 )","title":"normals"},{"location":"types/niTriShapeData/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niTriShapeData/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niTriShapeData/#texcoords","text":"Read-only . The array of texture coordinates. Returns : result ( tes3vector2 )","title":"texCoords"},{"location":"types/niTriShapeData/#textures","text":"Read-only . The array of texture coordinates. Returns : result ( tes3vector2 )","title":"textures"},{"location":"types/niTriShapeData/#texturesets","text":"The number of texture coordinate sets in the data. Returns : result (number)","title":"textureSets"},{"location":"types/niTriShapeData/#trianglecount","text":"The triangle count of the object. Returns : result (number)","title":"triangleCount"},{"location":"types/niTriShapeData/#uniqueid","text":"A unique ID for this model, assigned at model creation. Returns : result (number)","title":"uniqueID"},{"location":"types/niTriShapeData/#vertexcount","text":"Read-only . The vertex count for the object. Returns : result (number)","title":"vertexCount"},{"location":"types/niTriShapeData/#vertices","text":"Read-only . The array of vertex position data. Returns : result ( tes3vector3 )","title":"vertices"},{"location":"types/niTriShapeData/#methods","text":"","title":"Methods"},{"location":"types/niTriShapeData/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niTriShapeData/#copy","text":"Creates a copy of the data. An optional table of filters can be passed to remove information from the copy. local copiedData = niTriShapeData : copy ({ normals = ..., colors = ..., texCoords = ... }) Parameters : params (table) normals (boolean): Default : true . If false, the geometry data's normals will be absent from the copy. colors (boolean): Default : true . If false, the geometry data's colors will be absent from the copy. texCoords (boolean): Default : true . If false, the geometry data's texture coordinates will be absent from the copy. Returns : copiedData ( niTriShapeData ): The duplicated data.","title":"copy"},{"location":"types/niTriShapeData/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niTriShapeData/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niTriShapeData/#markaschanged","text":"Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data. If you have altered vertex positions, you may need to also call updateModelBound _. You should call it if vertices have been moved outside the bounds of the original model. niGeometryData : markAsChanged ()","title":"markAsChanged"},{"location":"types/niTriShapeData/#updatemodelbound","text":"Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function. niGeometryData : updateModelBound ()","title":"updateModelBound"},{"location":"types/niVertexColorProperty/","text":"niVertexColorProperty \u2693\ufe0e A rendering property that allows the application to control the method used to compute colors for each vertex in a geometry object. This class enables effects such as static pre-lighting, dynamic lighting, etc. This type inherits the following: niProperty , niObjectNET , niObject Properties \u2693\ufe0e lighting \u2693\ufe0e The lighting mode. Returns : result (number) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) references \u2693\ufe0e Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string) runTimeTypeInformation \u2693\ufe0e The runtime type information for this object. Returns : result ( niRTTI ) source \u2693\ufe0e The source vertex mode. Returns : result (number) type \u2693\ufe0e The unique class identifier number of the given rendering property. Returns : result (niPropertyType) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. niObjectNET : removeAllControllers () removeController \u2693\ufe0e Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"niVertexColorProperty"},{"location":"types/niVertexColorProperty/#nivertexcolorproperty","text":"A rendering property that allows the application to control the method used to compute colors for each vertex in a geometry object. This class enables effects such as static pre-lighting, dynamic lighting, etc. This type inherits the following: niProperty , niObjectNET , niObject","title":"niVertexColorProperty"},{"location":"types/niVertexColorProperty/#properties","text":"","title":"Properties"},{"location":"types/niVertexColorProperty/#lighting","text":"The lighting mode. Returns : result (number)","title":"lighting"},{"location":"types/niVertexColorProperty/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niVertexColorProperty/#references","text":"Read-only . The number of references that exist for the given object. When this value hits zero, the object's memory is freed. Returns : result (string)","title":"references"},{"location":"types/niVertexColorProperty/#runtimetypeinformation","text":"The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niVertexColorProperty/#source","text":"The source vertex mode. Returns : result (number)","title":"source"},{"location":"types/niVertexColorProperty/#type","text":"The unique class identifier number of the given rendering property. Returns : result (niPropertyType)","title":"type"},{"location":"types/niVertexColorProperty/#methods","text":"","title":"Methods"},{"location":"types/niVertexColorProperty/#clone","text":"Creates a copy of this object. local result = niObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niVertexColorProperty/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the tes3.niType table. local result = niObject : isInstanceOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niVertexColorProperty/#isoftype","text":"Determines if the object is of a given type. Types can be found in the tes3.niType table. local result = niObject : isOfType ( type ) Parameters : type (number) Returns : result (boolean)","title":"isOfType"},{"location":"types/niVertexColorProperty/#prependcontroller","text":"Add a controller to the object as the first controller. niObjectNET : prependController ( type ) Parameters : type ( niTimeController )","title":"prependController"},{"location":"types/niVertexColorProperty/#removeallcontrollers","text":"Removes all controllers. niObjectNET : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niVertexColorProperty/#removecontroller","text":"Removes a controller from the object. niObjectNET : removeController ( type ) Parameters : type ( niTimeController )","title":"removeController"},{"location":"types/tes3actionData/","text":"tes3actionData \u2693\ufe0e A substructure of mobile actors that provides information about the current or previous action. Properties \u2693\ufe0e aiBehaviorState \u2693\ufe0e The behavior state of the tes3actionData . Value Behavior -1 Undecided 0 Hello 2 Idle 3 Attack 4 Avoid 6 Flee 8 Walk 12 Greet Returns : result (number) animationAttackState \u2693\ufe0e No description yet available. Returns : result (number) attackDirection \u2693\ufe0e Deprecated. Use tes3actionData.physicalAttackType instead. When attacking, the direction swung with the weapon. This shows if the actor was thrusting, swinging, or chopping. Returns : result (number) attackSwing \u2693\ufe0e When attacking, this value represents how much the weapon has been pulled back. The value ranges from [0.0 - 1.0]. Returns : result (number) currentAnimationGroup \u2693\ufe0e No description yet available. Returns : result (number) hitTarget \u2693\ufe0e No description yet available. Returns : result ( tes3mobileActor ) lastBarterHoursPassed \u2693\ufe0e No description yet available. Returns : result (number) nockedProjectile \u2693\ufe0e The currently nocked projectile the associated actor is using. It is available while charging a projectile attack, before releasing the projectile. This can be modified, but can only be set to nil, which will remove the projectile without consuming ammo. Returns : result ( tes3mobileProjectile ) physicalAttackType \u2693\ufe0e A number from the tes3.physicalAttackType enumeration identifying the physical attack type. Can be tes3.physicalAttackType.slash , .chop , .thrust , .projectile , .creature1 , .creature2 , or .creature3. Returns : result (number) physicalDamage \u2693\ufe0e When attacking, this is the value of the weapon damage that was rolled. This value doesn't take into account the actor's strength, or other additional damage. Returns : result (number) stolenFrom \u2693\ufe0e No description yet available. Returns : result ( tes3object ) target \u2693\ufe0e No description yet available. Returns : result ( tes3mobileActor ) walkDestination \u2693\ufe0e If moving to a location, this is the position to be walked to. Returns : result ( tes3vector3 )","title":"tes3actionData"},{"location":"types/tes3actionData/#tes3actiondata","text":"A substructure of mobile actors that provides information about the current or previous action.","title":"tes3actionData"},{"location":"types/tes3actionData/#properties","text":"","title":"Properties"},{"location":"types/tes3actionData/#aibehaviorstate","text":"The behavior state of the tes3actionData . Value Behavior -1 Undecided 0 Hello 2 Idle 3 Attack 4 Avoid 6 Flee 8 Walk 12 Greet Returns : result (number)","title":"aiBehaviorState"},{"location":"types/tes3actionData/#animationattackstate","text":"No description yet available. Returns : result (number)","title":"animationAttackState"},{"location":"types/tes3actionData/#attackdirection","text":"Deprecated. Use tes3actionData.physicalAttackType instead. When attacking, the direction swung with the weapon. This shows if the actor was thrusting, swinging, or chopping. Returns : result (number)","title":"attackDirection"},{"location":"types/tes3actionData/#attackswing","text":"When attacking, this value represents how much the weapon has been pulled back. The value ranges from [0.0 - 1.0]. Returns : result (number)","title":"attackSwing"},{"location":"types/tes3actionData/#currentanimationgroup","text":"No description yet available. Returns : result (number)","title":"currentAnimationGroup"},{"location":"types/tes3actionData/#hittarget","text":"No description yet available. Returns : result ( tes3mobileActor )","title":"hitTarget"},{"location":"types/tes3actionData/#lastbarterhourspassed","text":"No description yet available. Returns : result (number)","title":"lastBarterHoursPassed"},{"location":"types/tes3actionData/#nockedprojectile","text":"The currently nocked projectile the associated actor is using. It is available while charging a projectile attack, before releasing the projectile. This can be modified, but can only be set to nil, which will remove the projectile without consuming ammo. Returns : result ( tes3mobileProjectile )","title":"nockedProjectile"},{"location":"types/tes3actionData/#physicalattacktype","text":"A number from the tes3.physicalAttackType enumeration identifying the physical attack type. Can be tes3.physicalAttackType.slash , .chop , .thrust , .projectile , .creature1 , .creature2 , or .creature3. Returns : result (number)","title":"physicalAttackType"},{"location":"types/tes3actionData/#physicaldamage","text":"When attacking, this is the value of the weapon damage that was rolled. This value doesn't take into account the actor's strength, or other additional damage. Returns : result (number)","title":"physicalDamage"},{"location":"types/tes3actionData/#stolenfrom","text":"No description yet available. Returns : result ( tes3object )","title":"stolenFrom"},{"location":"types/tes3actionData/#target","text":"No description yet available. Returns : result ( tes3mobileActor )","title":"target"},{"location":"types/tes3actionData/#walkdestination","text":"If moving to a location, this is the position to be walked to. Returns : result ( tes3vector3 )","title":"walkDestination"},{"location":"types/tes3activator/","text":"tes3activator \u2693\ufe0e An activator game object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) Functions \u2693\ufe0e","title":"tes3activator"},{"location":"types/tes3activator/#tes3activator","text":"An activator game object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject","title":"tes3activator"},{"location":"types/tes3activator/#properties","text":"","title":"Properties"},{"location":"types/tes3activator/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3activator/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3activator/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3activator/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3activator/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3activator/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3activator/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3activator/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3activator/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3activator/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3activator/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3activator/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3activator/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3activator/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3activator/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3activator/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3activator/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3activator/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3activator/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3activator/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3activator/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3activator/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3activator/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3activator/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3activator/#methods","text":"","title":"Methods"},{"location":"types/tes3activator/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3activator/#functions","text":"","title":"Functions"},{"location":"types/tes3activeMagicEffect/","text":"tes3activeMagicEffect \u2693\ufe0e An active magic effect. Properties \u2693\ufe0e attributeId \u2693\ufe0e Read-only . The attribute ID (note that this may be the skill ID if the effect affects skills). Returns : result (number) duration \u2693\ufe0e Read-only . The total duration of this specific effect. Returns : result (number) effectId \u2693\ufe0e Read-only . The magic effect ID. Returns : result (number) effectIndex \u2693\ufe0e Read-only . The index of the effect inside the magic source instance. Returns : result (number) effectInstance \u2693\ufe0e Read-only . The magic effect instance for this effect. Returns : result ( tes3magicEffectInstance ) harmful \u2693\ufe0e Read-only . This flag that determines if this effect is counted as a hostile action. Returns : result (boolean) instance \u2693\ufe0e Read-only . The magic source instance for this effect. Returns : result ( tes3magicSourceInstance ) isSummon \u2693\ufe0e Read-only . No description yet available. Returns : result (boolean) magnitude \u2693\ufe0e Read-only . The unresisted magnitude of the magic effect, that is the magnitude before resistance attributes are applied. This is always an integer number. To find the actual applied magnitude, you must check the magic effect instance. Returns : result (number) magnitudeMin \u2693\ufe0e Read-only . Deprecated. Returns : result (number) mobile \u2693\ufe0e Read-only . The mobile affected by the magic effect. Returns : result ( tes3magicSourceInstance ) next \u2693\ufe0e Read-only . Deprecated. Returns : result ( tes3activeMagicEffect ) previous \u2693\ufe0e Read-only . Deprecated. Returns : result ( tes3activeMagicEffect ) serial \u2693\ufe0e Read-only . The magic source instance serial number. See the instance and effectInstance properties to easily access the magic and effect instances. Returns : result (number) skillId \u2693\ufe0e Read-only . The skill ID (note that this may be the attribute ID if the effect affects attributes). Returns : result (number)","title":"tes3activeMagicEffect"},{"location":"types/tes3activeMagicEffect/#tes3activemagiceffect","text":"An active magic effect.","title":"tes3activeMagicEffect"},{"location":"types/tes3activeMagicEffect/#properties","text":"","title":"Properties"},{"location":"types/tes3activeMagicEffect/#attributeid","text":"Read-only . The attribute ID (note that this may be the skill ID if the effect affects skills). Returns : result (number)","title":"attributeId"},{"location":"types/tes3activeMagicEffect/#duration","text":"Read-only . The total duration of this specific effect. Returns : result (number)","title":"duration"},{"location":"types/tes3activeMagicEffect/#effectid","text":"Read-only . The magic effect ID. Returns : result (number)","title":"effectId"},{"location":"types/tes3activeMagicEffect/#effectindex","text":"Read-only . The index of the effect inside the magic source instance. Returns : result (number)","title":"effectIndex"},{"location":"types/tes3activeMagicEffect/#effectinstance","text":"Read-only . The magic effect instance for this effect. Returns : result ( tes3magicEffectInstance )","title":"effectInstance"},{"location":"types/tes3activeMagicEffect/#harmful","text":"Read-only . This flag that determines if this effect is counted as a hostile action. Returns : result (boolean)","title":"harmful"},{"location":"types/tes3activeMagicEffect/#instance","text":"Read-only . The magic source instance for this effect. Returns : result ( tes3magicSourceInstance )","title":"instance"},{"location":"types/tes3activeMagicEffect/#issummon","text":"Read-only . No description yet available. Returns : result (boolean)","title":"isSummon"},{"location":"types/tes3activeMagicEffect/#magnitude","text":"Read-only . The unresisted magnitude of the magic effect, that is the magnitude before resistance attributes are applied. This is always an integer number. To find the actual applied magnitude, you must check the magic effect instance. Returns : result (number)","title":"magnitude"},{"location":"types/tes3activeMagicEffect/#magnitudemin","text":"Read-only . Deprecated. Returns : result (number)","title":"magnitudeMin"},{"location":"types/tes3activeMagicEffect/#mobile","text":"Read-only . The mobile affected by the magic effect. Returns : result ( tes3magicSourceInstance )","title":"mobile"},{"location":"types/tes3activeMagicEffect/#next","text":"Read-only . Deprecated. Returns : result ( tes3activeMagicEffect )","title":"next"},{"location":"types/tes3activeMagicEffect/#previous","text":"Read-only . Deprecated. Returns : result ( tes3activeMagicEffect )","title":"previous"},{"location":"types/tes3activeMagicEffect/#serial","text":"Read-only . The magic source instance serial number. See the instance and effectInstance properties to easily access the magic and effect instances. Returns : result (number)","title":"serial"},{"location":"types/tes3activeMagicEffect/#skillid","text":"Read-only . The skill ID (note that this may be the attribute ID if the effect affects attributes). Returns : result (number)","title":"skillId"},{"location":"types/tes3actor/","text":"tes3actor \u2693\ufe0e An Actor (not to be confused with a Mobile Actor) is an object that can be cloned and that has an inventory. Creatures, NPCs, and containers are all considered actors. It is standard for creatures and NPCs to be composed of an actor and a mobile actor, linked together with a reference. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e actorFlags \u2693\ufe0e Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number) barterGold \u2693\ufe0e Friendly access to actor's barter gold amount. Returns : result (number) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) blood \u2693\ufe0e Friendly access to actor's blood type. Returns : result (number) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) cloneCount \u2693\ufe0e Read-only . The number of clones that exist of this actor. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) equipment \u2693\ufe0e Read-only . The items currently equipped to the actor. Returns : result ( tes3iterator ) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) inventory \u2693\ufe0e Read-only . The items currently carried by the actor. Returns : result ( tes3inventory ) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) hasItemEquipped \u2693\ufe0e Checks if the actor has provided item equipped. local result = tes3actor : hasItemEquipped ({ item = ..., itemData = ... }) Parameters : params (table) item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean) offersService \u2693\ufe0e Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = tes3actor : offersService ( service ) Parameters : service (number): Use one of the tes3.merchantService.* constants. Returns : result (boolean) onInventoryClose \u2693\ufe0e A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. tes3actor : onInventoryClose ( reference ) Parameters : reference ( tes3reference ) tradesItemType \u2693\ufe0e Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = tes3actor : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tes3actor"},{"location":"types/tes3actor/#tes3actor","text":"An Actor (not to be confused with a Mobile Actor) is an object that can be cloned and that has an inventory. Creatures, NPCs, and containers are all considered actors. It is standard for creatures and NPCs to be composed of an actor and a mobile actor, linked together with a reference. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject","title":"tes3actor"},{"location":"types/tes3actor/#properties","text":"","title":"Properties"},{"location":"types/tes3actor/#actorflags","text":"Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number)","title":"actorFlags"},{"location":"types/tes3actor/#bartergold","text":"Friendly access to actor's barter gold amount. Returns : result (number)","title":"barterGold"},{"location":"types/tes3actor/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3actor/#blood","text":"Friendly access to actor's blood type. Returns : result (number)","title":"blood"},{"location":"types/tes3actor/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3actor/#clonecount","text":"Read-only . The number of clones that exist of this actor. Returns : result (number)","title":"cloneCount"},{"location":"types/tes3actor/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3actor/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3actor/#equipment","text":"Read-only . The items currently equipped to the actor. Returns : result ( tes3iterator )","title":"equipment"},{"location":"types/tes3actor/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3actor/#inventory","text":"Read-only . The items currently carried by the actor. Returns : result ( tes3inventory )","title":"inventory"},{"location":"types/tes3actor/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3actor/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3actor/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3actor/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3actor/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3actor/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3actor/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3actor/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3actor/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3actor/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3actor/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3actor/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3actor/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3actor/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3actor/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3actor/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3actor/#methods","text":"","title":"Methods"},{"location":"types/tes3actor/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3actor/#hasitemequipped","text":"Checks if the actor has provided item equipped. local result = tes3actor : hasItemEquipped ({ item = ..., itemData = ... }) Parameters : params (table) item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean)","title":"hasItemEquipped"},{"location":"types/tes3actor/#offersservice","text":"Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = tes3actor : offersService ( service ) Parameters : service (number): Use one of the tes3.merchantService.* constants. Returns : result (boolean)","title":"offersService"},{"location":"types/tes3actor/#oninventoryclose","text":"A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. tes3actor : onInventoryClose ( reference ) Parameters : reference ( tes3reference )","title":"onInventoryClose"},{"location":"types/tes3actor/#tradesitemtype","text":"Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = tes3actor : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tradesItemType"},{"location":"types/tes3actorAnimationController/","text":"tes3actorAnimationController \u2693\ufe0e Works in conjuction with mobile AI to perform idle, movement, and attack animations. Holds data on the status of the current and next desired animation states for the different body sections that can be animated. Properties \u2693\ufe0e mobile \u2693\ufe0e Read-only . The mobile actor that this controller is responsible for. Returns : result ( tes3mobileActor ) weaponSpeed \u2693\ufe0e Read-only . The animation speed scaling of the weapon animations. This includes all weapon related idle, attack, and ready/unready animations. This value is reset at the starting frame of each weapon strike, normally equal to the the weapon speed. Therefore if you use this it should be changed after every strike, and reset after. Ready/unready actions do not change speed, but are affected by speed. Use by getting the animation controller from the mobile. e.g. mobile.animationController.weaponSpeed = 0.5 Returns : result (number)","title":"tes3actorAnimationController"},{"location":"types/tes3actorAnimationController/#tes3actoranimationcontroller","text":"Works in conjuction with mobile AI to perform idle, movement, and attack animations. Holds data on the status of the current and next desired animation states for the different body sections that can be animated.","title":"tes3actorAnimationController"},{"location":"types/tes3actorAnimationController/#properties","text":"","title":"Properties"},{"location":"types/tes3actorAnimationController/#mobile","text":"Read-only . The mobile actor that this controller is responsible for. Returns : result ( tes3mobileActor )","title":"mobile"},{"location":"types/tes3actorAnimationController/#weaponspeed","text":"Read-only . The animation speed scaling of the weapon animations. This includes all weapon related idle, attack, and ready/unready animations. This value is reset at the starting frame of each weapon strike, normally equal to the the weapon speed. Therefore if you use this it should be changed after every strike, and reset after. Ready/unready actions do not change speed, but are affected by speed. Use by getting the animation controller from the mobile. e.g. mobile.animationController.weaponSpeed = 0.5 Returns : result (number)","title":"weaponSpeed"},{"location":"types/tes3aiConfig/","text":"tes3aiConfig \u2693\ufe0e A game object which contains AI configuration inforamtion for an actor. This includes: alarm, fight, flee, hello values, which services the actor provides, goods types the actor trades in, and possible destinations this actor can take the player to. Properties \u2693\ufe0e alarm \u2693\ufe0e Friendly access to actor's alarm value. Returns : result (number) bartersAlchemy \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in potions. Returns : result (boolean) bartersApparatus \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in alchemical apparati. Returns : result (boolean) bartersArmor \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in armor. Returns : result (boolean) bartersBooks \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in books. Returns : result (boolean) bartersClothing \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in clothing. Returns : result (boolean) bartersEnchantedItems \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in enchanted items. Returns : result (boolean) bartersIngredients \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in alchemical ingredients. Returns : result (boolean) bartersLights \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in lights. Returns : result (boolean) bartersLockpicks \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in lockpicks. Returns : result (boolean) bartersMiscItems \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in miscellaneous items. Returns : result (boolean) bartersProbes \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in probes. Returns : result (boolean) bartersRepairTools \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in repair hammers and prongs. Returns : result (boolean) bartersWeapons \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in weapons. Returns : result (boolean) fight \u2693\ufe0e Friendly access to actor's fight value. Returns : result (number) flee \u2693\ufe0e Friendly access to actor's flee value. Returns : result (number) hello \u2693\ufe0e Friendly access to actor's hello value. Returns : result (number) merchantFlags \u2693\ufe0e A table access to all merchant flags. Shouldn't be used directly. Returns : result (table) offersEnchanting \u2693\ufe0e Friendly access to a flag that controls whether the actor offers enchanting services. Returns : result (boolean) offersRepairs \u2693\ufe0e Friendly access to a flag that controls whether the actor offers item repairs service. Returns : result (boolean) offersSpellmaking \u2693\ufe0e Friendly access to a flag that controls whether the actor offers spellmaking service. Returns : result (boolean) offersSpells \u2693\ufe0e Friendly access to a flag that controls whether the actor sells spells. Returns : result (boolean) offersTraining \u2693\ufe0e Friendly access to a flag that controls whether the actor offers training services. Returns : result (boolean) travelDestinations \u2693\ufe0e A table access to all tes3travelDestinationNode objects this actor can take the player to. Returns : result (table)","title":"tes3aiConfig"},{"location":"types/tes3aiConfig/#tes3aiconfig","text":"A game object which contains AI configuration inforamtion for an actor. This includes: alarm, fight, flee, hello values, which services the actor provides, goods types the actor trades in, and possible destinations this actor can take the player to.","title":"tes3aiConfig"},{"location":"types/tes3aiConfig/#properties","text":"","title":"Properties"},{"location":"types/tes3aiConfig/#alarm","text":"Friendly access to actor's alarm value. Returns : result (number)","title":"alarm"},{"location":"types/tes3aiConfig/#bartersalchemy","text":"Friendly access to a flag that controls whether the actor barters in potions. Returns : result (boolean)","title":"bartersAlchemy"},{"location":"types/tes3aiConfig/#bartersapparatus","text":"Friendly access to a flag that controls whether the actor barters in alchemical apparati. Returns : result (boolean)","title":"bartersApparatus"},{"location":"types/tes3aiConfig/#bartersarmor","text":"Friendly access to a flag that controls whether the actor barters in armor. Returns : result (boolean)","title":"bartersArmor"},{"location":"types/tes3aiConfig/#bartersbooks","text":"Friendly access to a flag that controls whether the actor barters in books. Returns : result (boolean)","title":"bartersBooks"},{"location":"types/tes3aiConfig/#bartersclothing","text":"Friendly access to a flag that controls whether the actor barters in clothing. Returns : result (boolean)","title":"bartersClothing"},{"location":"types/tes3aiConfig/#bartersenchanteditems","text":"Friendly access to a flag that controls whether the actor barters in enchanted items. Returns : result (boolean)","title":"bartersEnchantedItems"},{"location":"types/tes3aiConfig/#bartersingredients","text":"Friendly access to a flag that controls whether the actor barters in alchemical ingredients. Returns : result (boolean)","title":"bartersIngredients"},{"location":"types/tes3aiConfig/#barterslights","text":"Friendly access to a flag that controls whether the actor barters in lights. Returns : result (boolean)","title":"bartersLights"},{"location":"types/tes3aiConfig/#barterslockpicks","text":"Friendly access to a flag that controls whether the actor barters in lockpicks. Returns : result (boolean)","title":"bartersLockpicks"},{"location":"types/tes3aiConfig/#bartersmiscitems","text":"Friendly access to a flag that controls whether the actor barters in miscellaneous items. Returns : result (boolean)","title":"bartersMiscItems"},{"location":"types/tes3aiConfig/#bartersprobes","text":"Friendly access to a flag that controls whether the actor barters in probes. Returns : result (boolean)","title":"bartersProbes"},{"location":"types/tes3aiConfig/#bartersrepairtools","text":"Friendly access to a flag that controls whether the actor barters in repair hammers and prongs. Returns : result (boolean)","title":"bartersRepairTools"},{"location":"types/tes3aiConfig/#bartersweapons","text":"Friendly access to a flag that controls whether the actor barters in weapons. Returns : result (boolean)","title":"bartersWeapons"},{"location":"types/tes3aiConfig/#fight","text":"Friendly access to actor's fight value. Returns : result (number)","title":"fight"},{"location":"types/tes3aiConfig/#flee","text":"Friendly access to actor's flee value. Returns : result (number)","title":"flee"},{"location":"types/tes3aiConfig/#hello","text":"Friendly access to actor's hello value. Returns : result (number)","title":"hello"},{"location":"types/tes3aiConfig/#merchantflags","text":"A table access to all merchant flags. Shouldn't be used directly. Returns : result (table)","title":"merchantFlags"},{"location":"types/tes3aiConfig/#offersenchanting","text":"Friendly access to a flag that controls whether the actor offers enchanting services. Returns : result (boolean)","title":"offersEnchanting"},{"location":"types/tes3aiConfig/#offersrepairs","text":"Friendly access to a flag that controls whether the actor offers item repairs service. Returns : result (boolean)","title":"offersRepairs"},{"location":"types/tes3aiConfig/#offersspellmaking","text":"Friendly access to a flag that controls whether the actor offers spellmaking service. Returns : result (boolean)","title":"offersSpellmaking"},{"location":"types/tes3aiConfig/#offersspells","text":"Friendly access to a flag that controls whether the actor sells spells. Returns : result (boolean)","title":"offersSpells"},{"location":"types/tes3aiConfig/#offerstraining","text":"Friendly access to a flag that controls whether the actor offers training services. Returns : result (boolean)","title":"offersTraining"},{"location":"types/tes3aiConfig/#traveldestinations","text":"A table access to all tes3travelDestinationNode objects this actor can take the player to. Returns : result (table)","title":"travelDestinations"},{"location":"types/tes3aiPackage/","text":"tes3aiPackage \u2693\ufe0e An AI package game object.","title":"tes3aiPackage"},{"location":"types/tes3aiPackage/#tes3aipackage","text":"An AI package game object.","title":"tes3aiPackage"},{"location":"types/tes3aiPackageActivate/","text":"tes3aiPackageActivate \u2693\ufe0e An AI Activate package game object. Sets an actor to activate a reference. This type inherits the following: tes3aiPackage Properties \u2693\ufe0e activateTarget \u2693\ufe0e The reference this actor with this AI Activate package is set to activate. Returns : result ( tes3reference )","title":"tes3aiPackageActivate"},{"location":"types/tes3aiPackageActivate/#tes3aipackageactivate","text":"An AI Activate package game object. Sets an actor to activate a reference. This type inherits the following: tes3aiPackage","title":"tes3aiPackageActivate"},{"location":"types/tes3aiPackageActivate/#properties","text":"","title":"Properties"},{"location":"types/tes3aiPackageActivate/#activatetarget","text":"The reference this actor with this AI Activate package is set to activate. Returns : result ( tes3reference )","title":"activateTarget"},{"location":"types/tes3aiPackageEscort/","text":"tes3aiPackageEscort \u2693\ufe0e An AI Escort package game object. Sets an actor to follow another actor to a destination. This type inherits the following: tes3aiPackage Properties \u2693\ufe0e destination \u2693\ufe0e The coordinates for destination of this AI travel package. Returns : result ( tes3vector3 ) targetActor \u2693\ufe0e The actor this AI escort package is set to follow. Returns : result ( tes3actor )","title":"tes3aiPackageEscort"},{"location":"types/tes3aiPackageEscort/#tes3aipackageescort","text":"An AI Escort package game object. Sets an actor to follow another actor to a destination. This type inherits the following: tes3aiPackage","title":"tes3aiPackageEscort"},{"location":"types/tes3aiPackageEscort/#properties","text":"","title":"Properties"},{"location":"types/tes3aiPackageEscort/#destination","text":"The coordinates for destination of this AI travel package. Returns : result ( tes3vector3 )","title":"destination"},{"location":"types/tes3aiPackageEscort/#targetactor","text":"The actor this AI escort package is set to follow. Returns : result ( tes3actor )","title":"targetActor"},{"location":"types/tes3aiPackageFollow/","text":"tes3aiPackageFollow \u2693\ufe0e An AI Follow package game object. Sets an actor to follow another actor at a certain distance. This type inherits the following: tes3aiPackage Properties \u2693\ufe0e destination \u2693\ufe0e Returns : result ( tes3vector3 ) followDistance \u2693\ufe0e The distance this AI Follow package has configured. Returns : result (number) targetActor \u2693\ufe0e The actor this AI Follow package is set to follow. Returns : result ( tes3actor )","title":"tes3aiPackageFollow"},{"location":"types/tes3aiPackageFollow/#tes3aipackagefollow","text":"An AI Follow package game object. Sets an actor to follow another actor at a certain distance. This type inherits the following: tes3aiPackage","title":"tes3aiPackageFollow"},{"location":"types/tes3aiPackageFollow/#properties","text":"","title":"Properties"},{"location":"types/tes3aiPackageFollow/#destination","text":"Returns : result ( tes3vector3 )","title":"destination"},{"location":"types/tes3aiPackageFollow/#followdistance","text":"The distance this AI Follow package has configured. Returns : result (number)","title":"followDistance"},{"location":"types/tes3aiPackageFollow/#targetactor","text":"The actor this AI Follow package is set to follow. Returns : result ( tes3actor )","title":"targetActor"},{"location":"types/tes3aiPackageTravel/","text":"tes3aiPackageTravel \u2693\ufe0e An AI Travel package game object. Sets an actor to travel to a certain destination. This type inherits the following: tes3aiPackage Properties \u2693\ufe0e destination \u2693\ufe0e The coordinates for destination of this AI travel package. Returns : result ( tes3vector3 )","title":"tes3aiPackageTravel"},{"location":"types/tes3aiPackageTravel/#tes3aipackagetravel","text":"An AI Travel package game object. Sets an actor to travel to a certain destination. This type inherits the following: tes3aiPackage","title":"tes3aiPackageTravel"},{"location":"types/tes3aiPackageTravel/#properties","text":"","title":"Properties"},{"location":"types/tes3aiPackageTravel/#destination","text":"The coordinates for destination of this AI travel package. Returns : result ( tes3vector3 )","title":"destination"},{"location":"types/tes3aiPackageWander/","text":"tes3aiPackageWander \u2693\ufe0e An AI Wander package game object. Sets an actor to wander around a cell at certain points called idle nodes. This type inherits the following: tes3aiPackage Properties \u2693\ufe0e activationTarget \u2693\ufe0e Returns : result ( tes3reference ) idles \u2693\ufe0e Read-only . A table with idle nodes ( tes3aiPackageWanderIdleNode objects) for this AI Wander package. Returns : result (table)","title":"tes3aiPackageWander"},{"location":"types/tes3aiPackageWander/#tes3aipackagewander","text":"An AI Wander package game object. Sets an actor to wander around a cell at certain points called idle nodes. This type inherits the following: tes3aiPackage","title":"tes3aiPackageWander"},{"location":"types/tes3aiPackageWander/#properties","text":"","title":"Properties"},{"location":"types/tes3aiPackageWander/#activationtarget","text":"Returns : result ( tes3reference )","title":"activationTarget"},{"location":"types/tes3aiPackageWander/#idles","text":"Read-only . A table with idle nodes ( tes3aiPackageWanderIdleNode objects) for this AI Wander package. Returns : result (table)","title":"idles"},{"location":"types/tes3aiPackageWanderIdleNode/","text":"tes3aiPackageWanderIdleNode \u2693\ufe0e An AI Wander package idle node game object. Contains information on the chance that the actor will wander at that idle node. Properties \u2693\ufe0e chance \u2693\ufe0e A chance that the actor will wander at this idle node. Returns : result (number) index \u2693\ufe0e The index of this idle node. Returns : result (number)","title":"tes3aiPackageWanderIdleNode"},{"location":"types/tes3aiPackageWanderIdleNode/#tes3aipackagewanderidlenode","text":"An AI Wander package idle node game object. Contains information on the chance that the actor will wander at that idle node.","title":"tes3aiPackageWanderIdleNode"},{"location":"types/tes3aiPackageWanderIdleNode/#properties","text":"","title":"Properties"},{"location":"types/tes3aiPackageWanderIdleNode/#chance","text":"A chance that the actor will wander at this idle node. Returns : result (number)","title":"chance"},{"location":"types/tes3aiPackageWanderIdleNode/#index","text":"The index of this idle node. Returns : result (number)","title":"index"},{"location":"types/tes3aiPlanner/","text":"tes3aiPlanner \u2693\ufe0e A game object which contains information on actor's current and assigned AI packages. Properties \u2693\ufe0e currentPackageIndex \u2693\ufe0e Read-only . Access to index of currently active AI package in packages table. Returns : result (number) mobile \u2693\ufe0e The access to mobile actor this tes3aiPlanner object works on. Returns : result ( tes3mobileActor ) nextOpenPackageIndex \u2693\ufe0e Read-only . Returns : result (number) packages \u2693\ufe0e Read-only . The table with tes3aiPackage objects assigned to this mobile actor. Returns : result (table) Methods \u2693\ufe0e getActivePackage \u2693\ufe0e Fetches currently active AI package. local result = tes3aiPlanner : getActivePackage () Returns : result ( tes3aiPackage )","title":"tes3aiPlanner"},{"location":"types/tes3aiPlanner/#tes3aiplanner","text":"A game object which contains information on actor's current and assigned AI packages.","title":"tes3aiPlanner"},{"location":"types/tes3aiPlanner/#properties","text":"","title":"Properties"},{"location":"types/tes3aiPlanner/#currentpackageindex","text":"Read-only . Access to index of currently active AI package in packages table. Returns : result (number)","title":"currentPackageIndex"},{"location":"types/tes3aiPlanner/#mobile","text":"The access to mobile actor this tes3aiPlanner object works on. Returns : result ( tes3mobileActor )","title":"mobile"},{"location":"types/tes3aiPlanner/#nextopenpackageindex","text":"Read-only . Returns : result (number)","title":"nextOpenPackageIndex"},{"location":"types/tes3aiPlanner/#packages","text":"Read-only . The table with tes3aiPackage objects assigned to this mobile actor. Returns : result (table)","title":"packages"},{"location":"types/tes3aiPlanner/#methods","text":"","title":"Methods"},{"location":"types/tes3aiPlanner/#getactivepackage","text":"Fetches currently active AI package. local result = tes3aiPlanner : getActivePackage () Returns : result ( tes3aiPackage )","title":"getActivePackage"},{"location":"types/tes3alchemy/","text":"tes3alchemy \u2693\ufe0e An alchemy game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e autoCalc \u2693\ufe0e If set, the value of the object is automatically calculated. Returns : result (boolean) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) effects \u2693\ufe0e Read-only . An array-style table of the tes3effect data on the object. Returns : result (table) flags \u2693\ufe0e The alchemy item's flags. Returns : result (number) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e The value of the object. For this object type, its maximum value is 65535. Larger numbers will overflow. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) getActiveEffectCount \u2693\ufe0e Returns the amount of effects the tes3alchemy object has. local count = tes3alchemy : getActiveEffectCount () Returns : count (number) getFirstIndexOfEffect \u2693\ufe0e Returns the index of a first effect of a given effectId in the parent tes3alchemy object. local index = tes3alchemy : getFirstIndexOfEffect ( effectId ) Parameters : effectId (number): The effectId to perform a check for. Maps to tes3.effect constants. Returns : index (number) Functions \u2693\ufe0e create \u2693\ufe0e Creates a new alchemy item, which will be stored as part of the current saved game. If there is already an alchemy item with matching effects, name, weight, value, and script, that will be returned instead of creating a new item. tes3alchemy . create ({ id = ..., name = ..., script = ..., mesh = ..., icon = ..., objectFlags = ..., weight = ..., value = ..., flags = ..., effects = ... }) Parameters : params (table) id (string): The new object's ID. Must be unique. name (string): Default : \"Potion\" . The new item's name. script ( tes3script ): Optional . A script to attach to the object. mesh (string): Default : \"m\\Misc_Potion_Bargain_01.nif\" . The mesh to use for the object. icon (string): Default : \"m\\Tx_potion_bargain_01.nif\" . The icon to use for the object. objectFlags (number): Default : 8 . The object flags initially set. Force set as modified. weight (number): Default : 0 . The new item's weight. value (number): Default : 0 . The new item's value. flags (number): Default : 0 . The new alchemy item's flags. effects (table): A table of effects described, providing values for id, skill, attribute, range, radius, duration, min, and/or max.","title":"tes3alchemy"},{"location":"types/tes3alchemy/#tes3alchemy","text":"An alchemy game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3alchemy"},{"location":"types/tes3alchemy/#properties","text":"","title":"Properties"},{"location":"types/tes3alchemy/#autocalc","text":"If set, the value of the object is automatically calculated. Returns : result (boolean)","title":"autoCalc"},{"location":"types/tes3alchemy/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3alchemy/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3alchemy/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3alchemy/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3alchemy/#effects","text":"Read-only . An array-style table of the tes3effect data on the object. Returns : result (table)","title":"effects"},{"location":"types/tes3alchemy/#flags","text":"The alchemy item's flags. Returns : result (number)","title":"flags"},{"location":"types/tes3alchemy/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3alchemy/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3alchemy/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3alchemy/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3alchemy/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3alchemy/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3alchemy/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3alchemy/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3alchemy/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3alchemy/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3alchemy/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3alchemy/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3alchemy/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3alchemy/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3alchemy/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3alchemy/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3alchemy/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3alchemy/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3alchemy/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3alchemy/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3alchemy/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3alchemy/#value","text":"The value of the object. For this object type, its maximum value is 65535. Larger numbers will overflow. Returns : result (number)","title":"value"},{"location":"types/tes3alchemy/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3alchemy/#methods","text":"","title":"Methods"},{"location":"types/tes3alchemy/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3alchemy/#getactiveeffectcount","text":"Returns the amount of effects the tes3alchemy object has. local count = tes3alchemy : getActiveEffectCount () Returns : count (number)","title":"getActiveEffectCount"},{"location":"types/tes3alchemy/#getfirstindexofeffect","text":"Returns the index of a first effect of a given effectId in the parent tes3alchemy object. local index = tes3alchemy : getFirstIndexOfEffect ( effectId ) Parameters : effectId (number): The effectId to perform a check for. Maps to tes3.effect constants. Returns : index (number)","title":"getFirstIndexOfEffect"},{"location":"types/tes3alchemy/#functions","text":"","title":"Functions"},{"location":"types/tes3alchemy/#create","text":"Creates a new alchemy item, which will be stored as part of the current saved game. If there is already an alchemy item with matching effects, name, weight, value, and script, that will be returned instead of creating a new item. tes3alchemy . create ({ id = ..., name = ..., script = ..., mesh = ..., icon = ..., objectFlags = ..., weight = ..., value = ..., flags = ..., effects = ... }) Parameters : params (table) id (string): The new object's ID. Must be unique. name (string): Default : \"Potion\" . The new item's name. script ( tes3script ): Optional . A script to attach to the object. mesh (string): Default : \"m\\Misc_Potion_Bargain_01.nif\" . The mesh to use for the object. icon (string): Default : \"m\\Tx_potion_bargain_01.nif\" . The icon to use for the object. objectFlags (number): Default : 8 . The object flags initially set. Force set as modified. weight (number): Default : 0 . The new item's weight. value (number): Default : 0 . The new item's value. flags (number): Default : 0 . The new alchemy item's flags. effects (table): A table of effects described, providing values for id, skill, attribute, range, radius, duration, min, and/or max.","title":"create"},{"location":"types/tes3apparatus/","text":"tes3apparatus \u2693\ufe0e An apparatus game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) quality \u2693\ufe0e The quality of the apparatus. Returns : result (number) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) type \u2693\ufe0e The type of the apparatus. Returns : result (number) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3apparatus"},{"location":"types/tes3apparatus/#tes3apparatus","text":"An apparatus game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3apparatus"},{"location":"types/tes3apparatus/#properties","text":"","title":"Properties"},{"location":"types/tes3apparatus/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3apparatus/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3apparatus/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3apparatus/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3apparatus/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3apparatus/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3apparatus/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3apparatus/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3apparatus/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3apparatus/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3apparatus/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3apparatus/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3apparatus/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3apparatus/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3apparatus/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3apparatus/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3apparatus/#quality","text":"The quality of the apparatus. Returns : result (number)","title":"quality"},{"location":"types/tes3apparatus/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3apparatus/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3apparatus/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3apparatus/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3apparatus/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3apparatus/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3apparatus/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3apparatus/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3apparatus/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3apparatus/#type","text":"The type of the apparatus. Returns : result (number)","title":"type"},{"location":"types/tes3apparatus/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3apparatus/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3apparatus/#methods","text":"","title":"Methods"},{"location":"types/tes3apparatus/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3armor/","text":"tes3armor \u2693\ufe0e An armor game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e armorRating \u2693\ufe0e The armor's defensive rating. Returns : result (number) armorScalar \u2693\ufe0e Read-only . No description yet available. Returns : result (number) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) enchantCapacity \u2693\ufe0e The object's enchantment capacity. Returns : result (number) enchantment \u2693\ufe0e The enchantment used by the object. Returns : result ( tes3enchantment ) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLeftPart \u2693\ufe0e Determines if the armor is the left part of a pair. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) maxCondition \u2693\ufe0e The object's maximum condition. Returns : result (number) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) parts \u2693\ufe0e Read-only . An array-style table of the tes3wearablePart data on the object. Returns : result (table) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) slot \u2693\ufe0e The slot used by the armor. Returns : result (number) slotName \u2693\ufe0e Read-only . The name of the slot used by the armor. Returns : result (string) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) weightClass \u2693\ufe0e Read-only . The weight class of the armor. This value maps to tes3.armorWeightClass constants. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) calculateArmorRating \u2693\ufe0e Calculates what armor rating is provided for a given mobile actor. tes3armor : calculateArmorRating ( mobile ) Parameters : mobile ( tes3mobileActor )","title":"tes3armor"},{"location":"types/tes3armor/#tes3armor","text":"An armor game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3armor"},{"location":"types/tes3armor/#properties","text":"","title":"Properties"},{"location":"types/tes3armor/#armorrating","text":"The armor's defensive rating. Returns : result (number)","title":"armorRating"},{"location":"types/tes3armor/#armorscalar","text":"Read-only . No description yet available. Returns : result (number)","title":"armorScalar"},{"location":"types/tes3armor/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3armor/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3armor/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3armor/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3armor/#enchantcapacity","text":"The object's enchantment capacity. Returns : result (number)","title":"enchantCapacity"},{"location":"types/tes3armor/#enchantment","text":"The enchantment used by the object. Returns : result ( tes3enchantment )","title":"enchantment"},{"location":"types/tes3armor/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3armor/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3armor/#isleftpart","text":"Determines if the armor is the left part of a pair. Returns : result (boolean)","title":"isLeftPart"},{"location":"types/tes3armor/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3armor/#maxcondition","text":"The object's maximum condition. Returns : result (number)","title":"maxCondition"},{"location":"types/tes3armor/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3armor/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3armor/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3armor/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3armor/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3armor/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3armor/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3armor/#parts","text":"Read-only . An array-style table of the tes3wearablePart data on the object. Returns : result (table)","title":"parts"},{"location":"types/tes3armor/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3armor/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3armor/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3armor/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3armor/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3armor/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3armor/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3armor/#slot","text":"The slot used by the armor. Returns : result (number)","title":"slot"},{"location":"types/tes3armor/#slotname","text":"Read-only . The name of the slot used by the armor. Returns : result (string)","title":"slotName"},{"location":"types/tes3armor/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3armor/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3armor/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3armor/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3armor/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3armor/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3armor/#weightclass","text":"Read-only . The weight class of the armor. This value maps to tes3.armorWeightClass constants. Returns : result (number)","title":"weightClass"},{"location":"types/tes3armor/#methods","text":"","title":"Methods"},{"location":"types/tes3armor/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3armor/#calculatearmorrating","text":"Calculates what armor rating is provided for a given mobile actor. tes3armor : calculateArmorRating ( mobile ) Parameters : mobile ( tes3mobileActor )","title":"calculateArmorRating"},{"location":"types/tes3audioController/","text":"tes3audioController \u2693\ufe0e A controller for audio. It holds data on the status of the current and next music tracks, volume settings and other related facilities. All the volumes are expressed in range [0, 1]. Properties \u2693\ufe0e currentMusicFilePath \u2693\ufe0e File path of the currently playing music track. The path can not be longer than 260 characters. Returns : result (string) disableAudio \u2693\ufe0e A flag which controls whether the audio is disabled or not. Returns : result (boolean) listenerPosition \u2693\ufe0e Returns : result ( tes3vector3 ) musicDuration \u2693\ufe0e Read-only . The duration of the currently playing music track. Returns : result (number) musicFadeBeginTimestamp \u2693\ufe0e Returns : result (number) musicNextTrackStartTimestamp \u2693\ufe0e Returns : result (number) musicNextTrackVolume \u2693\ufe0e The volume of the next track. Returns : result (number) musicPosition \u2693\ufe0e Current play time for currently playing music track. Returns : result (number) nextMusicFilePath \u2693\ufe0e File path of the music track which is to be played next. The path can not be longer than 260 characters. Returns : result (string) pitchAxis \u2693\ufe0e Approximated pitch axis in radians. Returns : result (number) volumeEffects \u2693\ufe0e Volume of the effects. Corresponds to the effects volume slider in Audio settings. Returns : result (number) volumeFootsteps \u2693\ufe0e Volume of the footsteps. Corresponds to the footsteps volume slider in Audio settings. Returns : result (number) volumeMaster \u2693\ufe0e Master volume. Corresponds to the master volume slider in Audio settings. Returns : result (number) volumeMusic \u2693\ufe0e Volume of the music. Corresponds to the music volume slider in Audio settings. Returns : result (number) volumeVoice \u2693\ufe0e Volume of the voices. Corresponds to the voice volume slider in Audio settings. Returns : result (number) yawAxis \u2693\ufe0e Approximated yaw axis in radians. Returns : result (number) Methods \u2693\ufe0e changeMusicTrack \u2693\ufe0e Changes currently playing music track according to provided parameters. tes3audioController : changeMusicTrack ({ filename = ..., crossfade = ..., volume = ... }) Parameters : params (table) filename (string): File name of the new music track. crossfade (number): Default : 1000 . Duration of the crossfading between music tracks. Measured in miliseconds. volume (number): Default : 1 . Allows changing the volume of the music track. getMixVolume \u2693\ufe0e Final volume of a provided type of audio, after master volume and its own volume adjustments. Music volume is an exception since it isn't affected by master volume. local volume = tes3audioController : getMixVolume ( mix ) Parameters : mix (number): The type of sound mix to perform a check for. Accepts values from tes3.soundMix namespace. Returns : volume (number)","title":"tes3audioController"},{"location":"types/tes3audioController/#tes3audiocontroller","text":"A controller for audio. It holds data on the status of the current and next music tracks, volume settings and other related facilities. All the volumes are expressed in range [0, 1].","title":"tes3audioController"},{"location":"types/tes3audioController/#properties","text":"","title":"Properties"},{"location":"types/tes3audioController/#currentmusicfilepath","text":"File path of the currently playing music track. The path can not be longer than 260 characters. Returns : result (string)","title":"currentMusicFilePath"},{"location":"types/tes3audioController/#disableaudio","text":"A flag which controls whether the audio is disabled or not. Returns : result (boolean)","title":"disableAudio"},{"location":"types/tes3audioController/#listenerposition","text":"Returns : result ( tes3vector3 )","title":"listenerPosition"},{"location":"types/tes3audioController/#musicduration","text":"Read-only . The duration of the currently playing music track. Returns : result (number)","title":"musicDuration"},{"location":"types/tes3audioController/#musicfadebegintimestamp","text":"Returns : result (number)","title":"musicFadeBeginTimestamp"},{"location":"types/tes3audioController/#musicnexttrackstarttimestamp","text":"Returns : result (number)","title":"musicNextTrackStartTimestamp"},{"location":"types/tes3audioController/#musicnexttrackvolume","text":"The volume of the next track. Returns : result (number)","title":"musicNextTrackVolume"},{"location":"types/tes3audioController/#musicposition","text":"Current play time for currently playing music track. Returns : result (number)","title":"musicPosition"},{"location":"types/tes3audioController/#nextmusicfilepath","text":"File path of the music track which is to be played next. The path can not be longer than 260 characters. Returns : result (string)","title":"nextMusicFilePath"},{"location":"types/tes3audioController/#pitchaxis","text":"Approximated pitch axis in radians. Returns : result (number)","title":"pitchAxis"},{"location":"types/tes3audioController/#volumeeffects","text":"Volume of the effects. Corresponds to the effects volume slider in Audio settings. Returns : result (number)","title":"volumeEffects"},{"location":"types/tes3audioController/#volumefootsteps","text":"Volume of the footsteps. Corresponds to the footsteps volume slider in Audio settings. Returns : result (number)","title":"volumeFootsteps"},{"location":"types/tes3audioController/#volumemaster","text":"Master volume. Corresponds to the master volume slider in Audio settings. Returns : result (number)","title":"volumeMaster"},{"location":"types/tes3audioController/#volumemusic","text":"Volume of the music. Corresponds to the music volume slider in Audio settings. Returns : result (number)","title":"volumeMusic"},{"location":"types/tes3audioController/#volumevoice","text":"Volume of the voices. Corresponds to the voice volume slider in Audio settings. Returns : result (number)","title":"volumeVoice"},{"location":"types/tes3audioController/#yawaxis","text":"Approximated yaw axis in radians. Returns : result (number)","title":"yawAxis"},{"location":"types/tes3audioController/#methods","text":"","title":"Methods"},{"location":"types/tes3audioController/#changemusictrack","text":"Changes currently playing music track according to provided parameters. tes3audioController : changeMusicTrack ({ filename = ..., crossfade = ..., volume = ... }) Parameters : params (table) filename (string): File name of the new music track. crossfade (number): Default : 1000 . Duration of the crossfading between music tracks. Measured in miliseconds. volume (number): Default : 1 . Allows changing the volume of the music track.","title":"changeMusicTrack"},{"location":"types/tes3audioController/#getmixvolume","text":"Final volume of a provided type of audio, after master volume and its own volume adjustments. Music volume is an exception since it isn't affected by master volume. local volume = tes3audioController : getMixVolume ( mix ) Parameters : mix (number): The type of sound mix to perform a check for. Accepts values from tes3.soundMix namespace. Returns : volume (number)","title":"getMixVolume"},{"location":"types/tes3baseObject/","text":"tes3baseObject \u2693\ufe0e Almost anything that can be represented in the Construction Set is based on this structure. Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3baseObject"},{"location":"types/tes3baseObject/#tes3baseobject","text":"Almost anything that can be represented in the Construction Set is based on this structure.","title":"tes3baseObject"},{"location":"types/tes3baseObject/#properties","text":"","title":"Properties"},{"location":"types/tes3baseObject/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3baseObject/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3baseObject/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3baseObject/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3baseObject/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3baseObject/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3baseObject/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3baseObject/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3baseObject/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3baseObject/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3baseObject/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3baseObject/#methods","text":"","title":"Methods"},{"location":"types/tes3baseObject/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3birthsign/","text":"tes3birthsign \u2693\ufe0e An object representing a birthsign. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) description \u2693\ufe0e Read-only . Loads from disk and returns the description of the birthsign. Returns : result (string) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) spells \u2693\ufe0e Read-only . A list of spells granted by the birthsign. Returns : result ( tes3spellList ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) texturePath \u2693\ufe0e Path to the related image representing the birthsign. Returns : result (string) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3birthsign"},{"location":"types/tes3birthsign/#tes3birthsign","text":"An object representing a birthsign. This type inherits the following: tes3baseObject","title":"tes3birthsign"},{"location":"types/tes3birthsign/#properties","text":"","title":"Properties"},{"location":"types/tes3birthsign/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3birthsign/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3birthsign/#description","text":"Read-only . Loads from disk and returns the description of the birthsign. Returns : result (string)","title":"description"},{"location":"types/tes3birthsign/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3birthsign/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3birthsign/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3birthsign/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3birthsign/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3birthsign/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3birthsign/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3birthsign/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3birthsign/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3birthsign/#spells","text":"Read-only . A list of spells granted by the birthsign. Returns : result ( tes3spellList )","title":"spells"},{"location":"types/tes3birthsign/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3birthsign/#texturepath","text":"Path to the related image representing the birthsign. Returns : result (string)","title":"texturePath"},{"location":"types/tes3birthsign/#methods","text":"","title":"Methods"},{"location":"types/tes3birthsign/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3bodyPart/","text":"tes3bodyPart \u2693\ufe0e A body part game object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) female \u2693\ufe0e A flag that marks this body part as used for female actors. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) part \u2693\ufe0e No description yet available. Returns : result (number) partType \u2693\ufe0e No description yet available. Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) playable \u2693\ufe0e A flag that marks this body part as selectable during character generation. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) raceName \u2693\ufe0e Read-only . The name of the race associated with this body part. Returns : result (string) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The NiNode-derived object for the object's loaded mesh. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) vampiric \u2693\ufe0e A flag that marks this body part as used for vampires. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3bodyPart"},{"location":"types/tes3bodyPart/#tes3bodypart","text":"A body part game object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject","title":"tes3bodyPart"},{"location":"types/tes3bodyPart/#properties","text":"","title":"Properties"},{"location":"types/tes3bodyPart/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3bodyPart/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3bodyPart/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3bodyPart/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3bodyPart/#female","text":"A flag that marks this body part as used for female actors. Returns : result (boolean)","title":"female"},{"location":"types/tes3bodyPart/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3bodyPart/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3bodyPart/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3bodyPart/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3bodyPart/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3bodyPart/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3bodyPart/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3bodyPart/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3bodyPart/#part","text":"No description yet available. Returns : result (number)","title":"part"},{"location":"types/tes3bodyPart/#parttype","text":"No description yet available. Returns : result (number)","title":"partType"},{"location":"types/tes3bodyPart/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3bodyPart/#playable","text":"A flag that marks this body part as selectable during character generation. Returns : result (boolean)","title":"playable"},{"location":"types/tes3bodyPart/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3bodyPart/#racename","text":"Read-only . The name of the race associated with this body part. Returns : result (string)","title":"raceName"},{"location":"types/tes3bodyPart/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3bodyPart/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3bodyPart/#scenenode","text":"The NiNode-derived object for the object's loaded mesh. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3bodyPart/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3bodyPart/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3bodyPart/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3bodyPart/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3bodyPart/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3bodyPart/#vampiric","text":"A flag that marks this body part as used for vampires. Returns : result (boolean)","title":"vampiric"},{"location":"types/tes3bodyPart/#methods","text":"","title":"Methods"},{"location":"types/tes3bodyPart/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3bodyPartManager/","text":"tes3bodyPartManager \u2693\ufe0e A game object which holds information about body parts. Properties \u2693\ufe0e activeBodyParts \u2693\ufe0e Read-only . The access to the reference's tes3bodyPartManagerActiveBodyPart objects. It's a 2-dimensional table, with first dimension index values from tes3.activeBodyPartLayer namespace, while its second dimension indexes are values from tes3.activeBodyPart namespace. Returns : result (table) animationPhase \u2693\ufe0e Read-only . Returns : result (number) attachNodes \u2693\ufe0e Read-only . The access to the reference's tes3bodyPartManagerAttachNode objects. Indexes of that table are values from tes3.bodyPartAttachment namespace. Returns : result (table) reference \u2693\ufe0e Read-only . The access to the reference this body part manager operates for. Returns : result ( tes3reference ) Methods \u2693\ufe0e getActiveBodyPart \u2693\ufe0e The method fetches active body part of a actor at a given layer and position. local result = tes3bodyPartManager : getActiveBodyPart ({ layer = ..., index = ... }) Parameters : params (table) layer (number): A value from tes3.activeBodyPartLayer namespace. index (number): A value from tes3.activeBodyPart namespace. Returns : result ( tes3bodyPartManagerActiveBodyPart ) getActiveBodyPartForItem \u2693\ufe0e The method fetches active body part of a actor for the given item. local result = tes3bodyPartManager : getActiveBodyPartForItem ( item ) Parameters : item ( tes3item ): The item to fetch the active body part for. Returns : result ( tes3bodyPartManagerActiveBodyPart ) getActiveBodyPartNode \u2693\ufe0e The method fetches the NiNode-derived object for the loaded mesh of an active body part at a given layer and position. local result = tes3bodyPartManager : getActiveBodyPartNode ({ layer = ..., index = ... }) Parameters : params (table) layer (number): A value from tes3.activeBodyPartLayer namespace. index (number): A value from tes3.activeBodyPart namespace. Returns : result ( niNode ) removeEquippedLayers \u2693\ufe0e The method removes all currently equipped layers from the actor. tes3bodyPartManager : removeEquippedLayers () setActivePartData \u2693\ufe0e The method sets a niNode derived object as active body part at a given layer and position. tes3bodyPartManager : setActivePartData ({ layer = ..., index = ..., overwriteData = ..., node = ... }) Parameters : params (table) layer (number): A value from tes3.activeBodyPartLayer namespace. index (number): A value from tes3.activeBodyPart namespace. overwriteData (boolean): Default : true . A flag which controls whether the current data should be overwritten. node ( niNode ): Default : nil . setBodyPartByIdForObject \u2693\ufe0e The method sets a new body part for a given object. tes3bodyPartManager : setBodyPartByIdForObject ({ object = ..., index = ..., bodyPartId = ..., isFirstPerson = ... }) Parameters : params (table) object ( tes3physicalObject ): An object whose body part to set. index (number): A value from tes3.activeBodyPart namespace. bodyPartId (string): The unique ID of the tes3bodyPart object to set as a new body part for given object. isFirstPerson (boolean): Default : false . A flag which controls whether the body part is used in first person. setBodyPartForObject \u2693\ufe0e The method sets a new body part for a given object. tes3bodyPartManager : setBodyPartForObject ({ object = ..., index = ..., bodyPart = ..., isFirstPerson = ... }) Parameters : params (table) object ( tes3physicalObject ): An object whose body part to set. index (number): A value from tes3.activeBodyPart namespace. bodyPart ( tes3bodyPart ): The tes3bodyPart object to set as a new body part for given object. isFirstPerson (boolean): Default : false . A flag which controls whether the body part is used in first person. updateForReference \u2693\ufe0e The method updates all body parts for a given reference. tes3bodyPartManager : updateForReference ( reference ) Parameters : reference ( tes3reference ): The reference whose body parts to update.","title":"tes3bodyPartManager"},{"location":"types/tes3bodyPartManager/#tes3bodypartmanager","text":"A game object which holds information about body parts.","title":"tes3bodyPartManager"},{"location":"types/tes3bodyPartManager/#properties","text":"","title":"Properties"},{"location":"types/tes3bodyPartManager/#activebodyparts","text":"Read-only . The access to the reference's tes3bodyPartManagerActiveBodyPart objects. It's a 2-dimensional table, with first dimension index values from tes3.activeBodyPartLayer namespace, while its second dimension indexes are values from tes3.activeBodyPart namespace. Returns : result (table)","title":"activeBodyParts"},{"location":"types/tes3bodyPartManager/#animationphase","text":"Read-only . Returns : result (number)","title":"animationPhase"},{"location":"types/tes3bodyPartManager/#attachnodes","text":"Read-only . The access to the reference's tes3bodyPartManagerAttachNode objects. Indexes of that table are values from tes3.bodyPartAttachment namespace. Returns : result (table)","title":"attachNodes"},{"location":"types/tes3bodyPartManager/#reference","text":"Read-only . The access to the reference this body part manager operates for. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3bodyPartManager/#methods","text":"","title":"Methods"},{"location":"types/tes3bodyPartManager/#getactivebodypart","text":"The method fetches active body part of a actor at a given layer and position. local result = tes3bodyPartManager : getActiveBodyPart ({ layer = ..., index = ... }) Parameters : params (table) layer (number): A value from tes3.activeBodyPartLayer namespace. index (number): A value from tes3.activeBodyPart namespace. Returns : result ( tes3bodyPartManagerActiveBodyPart )","title":"getActiveBodyPart"},{"location":"types/tes3bodyPartManager/#getactivebodypartforitem","text":"The method fetches active body part of a actor for the given item. local result = tes3bodyPartManager : getActiveBodyPartForItem ( item ) Parameters : item ( tes3item ): The item to fetch the active body part for. Returns : result ( tes3bodyPartManagerActiveBodyPart )","title":"getActiveBodyPartForItem"},{"location":"types/tes3bodyPartManager/#getactivebodypartnode","text":"The method fetches the NiNode-derived object for the loaded mesh of an active body part at a given layer and position. local result = tes3bodyPartManager : getActiveBodyPartNode ({ layer = ..., index = ... }) Parameters : params (table) layer (number): A value from tes3.activeBodyPartLayer namespace. index (number): A value from tes3.activeBodyPart namespace. Returns : result ( niNode )","title":"getActiveBodyPartNode"},{"location":"types/tes3bodyPartManager/#removeequippedlayers","text":"The method removes all currently equipped layers from the actor. tes3bodyPartManager : removeEquippedLayers ()","title":"removeEquippedLayers"},{"location":"types/tes3bodyPartManager/#setactivepartdata","text":"The method sets a niNode derived object as active body part at a given layer and position. tes3bodyPartManager : setActivePartData ({ layer = ..., index = ..., overwriteData = ..., node = ... }) Parameters : params (table) layer (number): A value from tes3.activeBodyPartLayer namespace. index (number): A value from tes3.activeBodyPart namespace. overwriteData (boolean): Default : true . A flag which controls whether the current data should be overwritten. node ( niNode ): Default : nil .","title":"setActivePartData"},{"location":"types/tes3bodyPartManager/#setbodypartbyidforobject","text":"The method sets a new body part for a given object. tes3bodyPartManager : setBodyPartByIdForObject ({ object = ..., index = ..., bodyPartId = ..., isFirstPerson = ... }) Parameters : params (table) object ( tes3physicalObject ): An object whose body part to set. index (number): A value from tes3.activeBodyPart namespace. bodyPartId (string): The unique ID of the tes3bodyPart object to set as a new body part for given object. isFirstPerson (boolean): Default : false . A flag which controls whether the body part is used in first person.","title":"setBodyPartByIdForObject"},{"location":"types/tes3bodyPartManager/#setbodypartforobject","text":"The method sets a new body part for a given object. tes3bodyPartManager : setBodyPartForObject ({ object = ..., index = ..., bodyPart = ..., isFirstPerson = ... }) Parameters : params (table) object ( tes3physicalObject ): An object whose body part to set. index (number): A value from tes3.activeBodyPart namespace. bodyPart ( tes3bodyPart ): The tes3bodyPart object to set as a new body part for given object. isFirstPerson (boolean): Default : false . A flag which controls whether the body part is used in first person.","title":"setBodyPartForObject"},{"location":"types/tes3bodyPartManager/#updateforreference","text":"The method updates all body parts for a given reference. tes3bodyPartManager : updateForReference ( reference ) Parameters : reference ( tes3reference ): The reference whose body parts to update.","title":"updateForReference"},{"location":"types/tes3bodyPartManagerActiveBodyPart/","text":"tes3bodyPartManagerActiveBodyPart \u2693\ufe0e A game object which holds information about an active body part, it's associated item and scene node. Properties \u2693\ufe0e bodyPart \u2693\ufe0e Access to the body part object. Returns : result ( tes3bodyPart ) flags \u2693\ufe0e The raw flags. Returns : result (number) item \u2693\ufe0e The raw item object this active body part pertains to. Returns : result ( tes3item ) node \u2693\ufe0e The NiNode-derived object for the object's loaded mesh. Returns : result ( niNode )","title":"tes3bodyPartManagerActiveBodyPart"},{"location":"types/tes3bodyPartManagerActiveBodyPart/#tes3bodypartmanageractivebodypart","text":"A game object which holds information about an active body part, it's associated item and scene node.","title":"tes3bodyPartManagerActiveBodyPart"},{"location":"types/tes3bodyPartManagerActiveBodyPart/#properties","text":"","title":"Properties"},{"location":"types/tes3bodyPartManagerActiveBodyPart/#bodypart","text":"Access to the body part object. Returns : result ( tes3bodyPart )","title":"bodyPart"},{"location":"types/tes3bodyPartManagerActiveBodyPart/#flags","text":"The raw flags. Returns : result (number)","title":"flags"},{"location":"types/tes3bodyPartManagerActiveBodyPart/#item","text":"The raw item object this active body part pertains to. Returns : result ( tes3item )","title":"item"},{"location":"types/tes3bodyPartManagerActiveBodyPart/#node","text":"The NiNode-derived object for the object's loaded mesh. Returns : result ( niNode )","title":"node"},{"location":"types/tes3bodyPartManagerAttachNode/","text":"tes3bodyPartManagerAttachNode \u2693\ufe0e A game object which holds information about equipment attachments to the actor's skeleton. Properties \u2693\ufe0e flags \u2693\ufe0e The raw flags. Returns : result (number) node \u2693\ufe0e The NiNode-derived object for the object's loaded mesh. Returns : result ( niNode ) rotation \u2693\ufe0e The rotation for this Attachment node. Returns : result ( tes3matrix33 ) translation \u2693\ufe0e The translation for this Attachment node. Returns : result ( tes3vector3 )","title":"tes3bodyPartManagerAttachNode"},{"location":"types/tes3bodyPartManagerAttachNode/#tes3bodypartmanagerattachnode","text":"A game object which holds information about equipment attachments to the actor's skeleton.","title":"tes3bodyPartManagerAttachNode"},{"location":"types/tes3bodyPartManagerAttachNode/#properties","text":"","title":"Properties"},{"location":"types/tes3bodyPartManagerAttachNode/#flags","text":"The raw flags. Returns : result (number)","title":"flags"},{"location":"types/tes3bodyPartManagerAttachNode/#node","text":"The NiNode-derived object for the object's loaded mesh. Returns : result ( niNode )","title":"node"},{"location":"types/tes3bodyPartManagerAttachNode/#rotation","text":"The rotation for this Attachment node. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/tes3bodyPartManagerAttachNode/#translation","text":"The translation for this Attachment node. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/tes3book/","text":"tes3book \u2693\ufe0e A book game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) enchantCapacity \u2693\ufe0e The object's enchantment capacity. Returns : result (number) enchantment \u2693\ufe0e The enchantment used by the object. Returns : result ( tes3enchantment ) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) skill \u2693\ufe0e The skill learned from the book, or -1 if the book doesn't have one, or has already been read. Returns : result (number) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) text \u2693\ufe0e Read-only . Loads and displays the text of the book. Returns : result (string) type \u2693\ufe0e The book type. Maps to values in tes3.bookType namespace. Returns : result (number) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3book"},{"location":"types/tes3book/#tes3book","text":"A book game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3book"},{"location":"types/tes3book/#properties","text":"","title":"Properties"},{"location":"types/tes3book/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3book/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3book/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3book/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3book/#enchantcapacity","text":"The object's enchantment capacity. Returns : result (number)","title":"enchantCapacity"},{"location":"types/tes3book/#enchantment","text":"The enchantment used by the object. Returns : result ( tes3enchantment )","title":"enchantment"},{"location":"types/tes3book/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3book/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3book/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3book/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3book/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3book/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3book/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3book/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3book/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3book/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3book/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3book/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3book/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3book/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3book/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3book/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3book/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3book/#skill","text":"The skill learned from the book, or -1 if the book doesn't have one, or has already been read. Returns : result (number)","title":"skill"},{"location":"types/tes3book/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3book/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3book/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3book/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3book/#text","text":"Read-only . Loads and displays the text of the book. Returns : result (string)","title":"text"},{"location":"types/tes3book/#type","text":"The book type. Maps to values in tes3.bookType namespace. Returns : result (number)","title":"type"},{"location":"types/tes3book/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3book/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3book/#methods","text":"","title":"Methods"},{"location":"types/tes3book/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3boundingBox/","text":"tes3boundingBox \u2693\ufe0e A pair of vectors marking a bounding box. Properties \u2693\ufe0e max \u2693\ufe0e The maximum bound of the box. Returns : result ( tes3vector3 ) min \u2693\ufe0e The minimum bound of the box. Returns : result ( tes3vector3 ) Methods \u2693\ufe0e copy \u2693\ufe0e Creates a copy of the bounding box. local result = tes3boundingBox : copy () Returns : result ( tes3boundingBox )","title":"tes3boundingBox"},{"location":"types/tes3boundingBox/#tes3boundingbox","text":"A pair of vectors marking a bounding box.","title":"tes3boundingBox"},{"location":"types/tes3boundingBox/#properties","text":"","title":"Properties"},{"location":"types/tes3boundingBox/#max","text":"The maximum bound of the box. Returns : result ( tes3vector3 )","title":"max"},{"location":"types/tes3boundingBox/#min","text":"The minimum bound of the box. Returns : result ( tes3vector3 )","title":"min"},{"location":"types/tes3boundingBox/#methods","text":"","title":"Methods"},{"location":"types/tes3boundingBox/#copy","text":"Creates a copy of the bounding box. local result = tes3boundingBox : copy () Returns : result ( tes3boundingBox )","title":"copy"},{"location":"types/tes3cell/","text":"tes3cell \u2693\ufe0e An exterior or interior game area. This type inherits the following: tes3baseObject Properties \u2693\ufe0e activators \u2693\ufe0e Read-only . One of the three reference collections for a cell. Returns : result ( tes3referenceList ) actors \u2693\ufe0e Read-only . One of the three reference collections for a cell. Returns : result ( tes3referenceList ) ambientColor \u2693\ufe0e The cell's ambient color. Only available on interior cells. Returns : result ( tes3packedColor ) behavesAsExterior \u2693\ufe0e If true, the cell behaves as an exterior instead of an interior for certain properties. Only available on interior cells. Returns : result (boolean) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) cellFlags \u2693\ufe0e A numeric representation of the packed bit flags for the cell, typically accessed from other properties. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) displayName \u2693\ufe0e The name of the cell as displayed on the in-game UI. For exterior cells without an assigned name, this is the region name. Returns : result (string) editorName \u2693\ufe0e The name of the cell as displayed in the Construction Set. For exterior cells, this includes the cell coordinates. Returns : result (string) fogColor \u2693\ufe0e The cell's fog color. Only available on interior cells. Returns : result ( tes3packedColor ) fogDensity \u2693\ufe0e The cell's fog density. Only available on interior cells. Returns : result (number) gridX \u2693\ufe0e The cell's X grid coordinate. Only available on exterior cells. Returns : result (number) gridY \u2693\ufe0e The cell's Y grid coordinate. Only available on exterior cells. Returns : result (number) hasMapMarker \u2693\ufe0e Read-only . If true, the cell will have be marked on the player's map. This does not take into account if the player has been to that cell. Returns : result (boolean) hasWater \u2693\ufe0e If true, the cell has water. Only applies to interior cells. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isInterior \u2693\ufe0e If true, the cell is an interior. Returns : result (boolean) isOrBehavesAsExterior \u2693\ufe0e Read-only . true if the cell is not an interior or if it behaves as an exterior. Returns : result (boolean) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The name and id of the cell. See also displayName and editorName . Returns : result (string) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) pickObjectsRoot \u2693\ufe0e The scenegraph node containing player-interactable objects from this cell. Returns : result ( niNode ) region \u2693\ufe0e The region associated with the cell. Only available on exterior cells, or interior cells that behave as exterior cells. Returns : result ( tes3region ) restingIsIllegal \u2693\ufe0e If true, the player may not rest in the cell. Returns : result (boolean) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) staticObjectsRoot \u2693\ufe0e The scenegraph node containing static non-player-interactable objects from this cell. Returns : result ( tes3region ) statics \u2693\ufe0e Read-only . One of the three reference collections for a cell. Returns : result ( tes3referenceList ) sunColor \u2693\ufe0e The cell's sun color. Only available on interior cells. Returns : result ( tes3packedColor ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) waterLevel \u2693\ufe0e The water level in the cell. Only available on interior cells. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) isPointInCell \u2693\ufe0e Determines if a given X/Y coordinate falls in the given cell. This will always be true for interior cells. local inCell = tes3cell : isPointInCell ( x , y ) Parameters : x (number): The X position to test. y (number): The Y position to test. Returns : inCell (boolean): true, if the point is found in the cell. iterateReferences \u2693\ufe0e Used in a for loop, iterates over objects in the cell. tes3cell : iterateReferences ( filter ) Parameters : filter (number): Optional . The TES3 object type to filter results by. Those are stored in tes3.objectType namespace.","title":"tes3cell"},{"location":"types/tes3cell/#tes3cell","text":"An exterior or interior game area. This type inherits the following: tes3baseObject","title":"tes3cell"},{"location":"types/tes3cell/#properties","text":"","title":"Properties"},{"location":"types/tes3cell/#activators","text":"Read-only . One of the three reference collections for a cell. Returns : result ( tes3referenceList )","title":"activators"},{"location":"types/tes3cell/#actors","text":"Read-only . One of the three reference collections for a cell. Returns : result ( tes3referenceList )","title":"actors"},{"location":"types/tes3cell/#ambientcolor","text":"The cell's ambient color. Only available on interior cells. Returns : result ( tes3packedColor )","title":"ambientColor"},{"location":"types/tes3cell/#behavesasexterior","text":"If true, the cell behaves as an exterior instead of an interior for certain properties. Only available on interior cells. Returns : result (boolean)","title":"behavesAsExterior"},{"location":"types/tes3cell/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3cell/#cellflags","text":"A numeric representation of the packed bit flags for the cell, typically accessed from other properties. Returns : result (number)","title":"cellFlags"},{"location":"types/tes3cell/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3cell/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3cell/#displayname","text":"The name of the cell as displayed on the in-game UI. For exterior cells without an assigned name, this is the region name. Returns : result (string)","title":"displayName"},{"location":"types/tes3cell/#editorname","text":"The name of the cell as displayed in the Construction Set. For exterior cells, this includes the cell coordinates. Returns : result (string)","title":"editorName"},{"location":"types/tes3cell/#fogcolor","text":"The cell's fog color. Only available on interior cells. Returns : result ( tes3packedColor )","title":"fogColor"},{"location":"types/tes3cell/#fogdensity","text":"The cell's fog density. Only available on interior cells. Returns : result (number)","title":"fogDensity"},{"location":"types/tes3cell/#gridx","text":"The cell's X grid coordinate. Only available on exterior cells. Returns : result (number)","title":"gridX"},{"location":"types/tes3cell/#gridy","text":"The cell's Y grid coordinate. Only available on exterior cells. Returns : result (number)","title":"gridY"},{"location":"types/tes3cell/#hasmapmarker","text":"Read-only . If true, the cell will have be marked on the player's map. This does not take into account if the player has been to that cell. Returns : result (boolean)","title":"hasMapMarker"},{"location":"types/tes3cell/#haswater","text":"If true, the cell has water. Only applies to interior cells. Returns : result (boolean)","title":"hasWater"},{"location":"types/tes3cell/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3cell/#isinterior","text":"If true, the cell is an interior. Returns : result (boolean)","title":"isInterior"},{"location":"types/tes3cell/#isorbehavesasexterior","text":"Read-only . true if the cell is not an interior or if it behaves as an exterior. Returns : result (boolean)","title":"isOrBehavesAsExterior"},{"location":"types/tes3cell/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3cell/#name","text":"The name and id of the cell. See also displayName and editorName . Returns : result (string)","title":"name"},{"location":"types/tes3cell/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3cell/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3cell/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3cell/#pickobjectsroot","text":"The scenegraph node containing player-interactable objects from this cell. Returns : result ( niNode )","title":"pickObjectsRoot"},{"location":"types/tes3cell/#region","text":"The region associated with the cell. Only available on exterior cells, or interior cells that behave as exterior cells. Returns : result ( tes3region )","title":"region"},{"location":"types/tes3cell/#restingisillegal","text":"If true, the player may not rest in the cell. Returns : result (boolean)","title":"restingIsIllegal"},{"location":"types/tes3cell/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3cell/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3cell/#staticobjectsroot","text":"The scenegraph node containing static non-player-interactable objects from this cell. Returns : result ( tes3region )","title":"staticObjectsRoot"},{"location":"types/tes3cell/#statics","text":"Read-only . One of the three reference collections for a cell. Returns : result ( tes3referenceList )","title":"statics"},{"location":"types/tes3cell/#suncolor","text":"The cell's sun color. Only available on interior cells. Returns : result ( tes3packedColor )","title":"sunColor"},{"location":"types/tes3cell/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3cell/#waterlevel","text":"The water level in the cell. Only available on interior cells. Returns : result (number)","title":"waterLevel"},{"location":"types/tes3cell/#methods","text":"","title":"Methods"},{"location":"types/tes3cell/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3cell/#ispointincell","text":"Determines if a given X/Y coordinate falls in the given cell. This will always be true for interior cells. local inCell = tes3cell : isPointInCell ( x , y ) Parameters : x (number): The X position to test. y (number): The Y position to test. Returns : inCell (boolean): true, if the point is found in the cell.","title":"isPointInCell"},{"location":"types/tes3cell/#iteratereferences","text":"Used in a for loop, iterates over objects in the cell. tes3cell : iterateReferences ( filter ) Parameters : filter (number): Optional . The TES3 object type to filter results by. Those are stored in tes3.objectType namespace.","title":"iterateReferences"},{"location":"types/tes3cellExteriorData/","text":"tes3cellExteriorData \u2693\ufe0e A structure that contains a cell and its grid coordinates. Properties \u2693\ufe0e cell \u2693\ufe0e The cell in the package. Returns : result ( tes3cell ) gridX \u2693\ufe0e The cell in the package's X grid value. Returns : result (number) gridY \u2693\ufe0e The cell in the package's Y grid value. Returns : result (number)","title":"tes3cellExteriorData"},{"location":"types/tes3cellExteriorData/#tes3cellexteriordata","text":"A structure that contains a cell and its grid coordinates.","title":"tes3cellExteriorData"},{"location":"types/tes3cellExteriorData/#properties","text":"","title":"Properties"},{"location":"types/tes3cellExteriorData/#cell","text":"The cell in the package. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3cellExteriorData/#gridx","text":"The cell in the package's X grid value. Returns : result (number)","title":"gridX"},{"location":"types/tes3cellExteriorData/#gridy","text":"The cell in the package's Y grid value. Returns : result (number)","title":"gridY"},{"location":"types/tes3class/","text":"tes3class \u2693\ufe0e A core object representing a character class. This type inherits the following: tes3baseObject Properties \u2693\ufe0e attributes \u2693\ufe0e Read-only . An array-style table of the two attribute IDs associated with the class. Returns : result (table) bartersAlchemy \u2693\ufe0e If true, the class will barter alchemy items. Returns : result (boolean) bartersApparatus \u2693\ufe0e If true, the class will barter apparatus items. Returns : result (boolean) bartersArmor \u2693\ufe0e If true, the class will barter armor items. Returns : result (boolean) bartersBooks \u2693\ufe0e If true, the class will barter book items. Returns : result (boolean) bartersClothing \u2693\ufe0e If true, the class will barter clothing items. Returns : result (boolean) bartersEnchantedItems \u2693\ufe0e If true, the class will barter enchanted items. Returns : result (boolean) bartersIngredients \u2693\ufe0e If true, the class will barter ingredient items. Returns : result (boolean) bartersLights \u2693\ufe0e If true, the class will barter light items. Returns : result (boolean) bartersLockpicks \u2693\ufe0e If true, the class will barter lockpick items. Returns : result (boolean) bartersMiscItems \u2693\ufe0e If true, the class will barter misc items. Returns : result (boolean) bartersProbes \u2693\ufe0e If true, the class will barter probe items. Returns : result (boolean) bartersRepairTools \u2693\ufe0e If true, the class will barter repair items. Returns : result (boolean) bartersWeapons \u2693\ufe0e If true, the class will barter weapon items. Returns : result (boolean) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) description \u2693\ufe0e Loads from disk and returns the description of the class. Returns : result (string) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) majorSkills \u2693\ufe0e Read-only . An array-style table of the 5 skills IDs associated with the class' major skills. Returns : result (table) minorSkills \u2693\ufe0e Read-only . An array-style table of the 5 skills IDs associated with the class' minor skills. Returns : result (table) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) offersEnchanting \u2693\ufe0e If true, the class will offer repair services. Returns : result (boolean) offersRepairs \u2693\ufe0e If true, the class will offer enchanting services. Returns : result (boolean) offersSpellmaking \u2693\ufe0e If true, the class will offer spellmaking services. Returns : result (boolean) offersSpells \u2693\ufe0e If true, the class will offer spell selling services. Returns : result (boolean) offersTraining \u2693\ufe0e If true, the class will offer training services. Returns : result (boolean) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) playable \u2693\ufe0e If true, the class is selectable at character generation. Returns : result (boolean) services \u2693\ufe0e The services offered by the class. This is a bit field, and its values should typically be accessed through values such as bartersAlchemy . Returns : result (number) skills \u2693\ufe0e Read-only . An array-style table of the 10 skills IDs associated with the class. For major or minor skills specifically, use the majorSkills and minorSkills properties. Returns : result (table) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) specialization \u2693\ufe0e The specialization for the class. Maps to the tes3.specialization constants table. Returns : result (number) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3class"},{"location":"types/tes3class/#tes3class","text":"A core object representing a character class. This type inherits the following: tes3baseObject","title":"tes3class"},{"location":"types/tes3class/#properties","text":"","title":"Properties"},{"location":"types/tes3class/#attributes","text":"Read-only . An array-style table of the two attribute IDs associated with the class. Returns : result (table)","title":"attributes"},{"location":"types/tes3class/#bartersalchemy","text":"If true, the class will barter alchemy items. Returns : result (boolean)","title":"bartersAlchemy"},{"location":"types/tes3class/#bartersapparatus","text":"If true, the class will barter apparatus items. Returns : result (boolean)","title":"bartersApparatus"},{"location":"types/tes3class/#bartersarmor","text":"If true, the class will barter armor items. Returns : result (boolean)","title":"bartersArmor"},{"location":"types/tes3class/#bartersbooks","text":"If true, the class will barter book items. Returns : result (boolean)","title":"bartersBooks"},{"location":"types/tes3class/#bartersclothing","text":"If true, the class will barter clothing items. Returns : result (boolean)","title":"bartersClothing"},{"location":"types/tes3class/#bartersenchanteditems","text":"If true, the class will barter enchanted items. Returns : result (boolean)","title":"bartersEnchantedItems"},{"location":"types/tes3class/#bartersingredients","text":"If true, the class will barter ingredient items. Returns : result (boolean)","title":"bartersIngredients"},{"location":"types/tes3class/#barterslights","text":"If true, the class will barter light items. Returns : result (boolean)","title":"bartersLights"},{"location":"types/tes3class/#barterslockpicks","text":"If true, the class will barter lockpick items. Returns : result (boolean)","title":"bartersLockpicks"},{"location":"types/tes3class/#bartersmiscitems","text":"If true, the class will barter misc items. Returns : result (boolean)","title":"bartersMiscItems"},{"location":"types/tes3class/#bartersprobes","text":"If true, the class will barter probe items. Returns : result (boolean)","title":"bartersProbes"},{"location":"types/tes3class/#bartersrepairtools","text":"If true, the class will barter repair items. Returns : result (boolean)","title":"bartersRepairTools"},{"location":"types/tes3class/#bartersweapons","text":"If true, the class will barter weapon items. Returns : result (boolean)","title":"bartersWeapons"},{"location":"types/tes3class/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3class/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3class/#description","text":"Loads from disk and returns the description of the class. Returns : result (string)","title":"description"},{"location":"types/tes3class/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3class/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3class/#majorskills","text":"Read-only . An array-style table of the 5 skills IDs associated with the class' major skills. Returns : result (table)","title":"majorSkills"},{"location":"types/tes3class/#minorskills","text":"Read-only . An array-style table of the 5 skills IDs associated with the class' minor skills. Returns : result (table)","title":"minorSkills"},{"location":"types/tes3class/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3class/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3class/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3class/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3class/#offersenchanting","text":"If true, the class will offer repair services. Returns : result (boolean)","title":"offersEnchanting"},{"location":"types/tes3class/#offersrepairs","text":"If true, the class will offer enchanting services. Returns : result (boolean)","title":"offersRepairs"},{"location":"types/tes3class/#offersspellmaking","text":"If true, the class will offer spellmaking services. Returns : result (boolean)","title":"offersSpellmaking"},{"location":"types/tes3class/#offersspells","text":"If true, the class will offer spell selling services. Returns : result (boolean)","title":"offersSpells"},{"location":"types/tes3class/#offerstraining","text":"If true, the class will offer training services. Returns : result (boolean)","title":"offersTraining"},{"location":"types/tes3class/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3class/#playable","text":"If true, the class is selectable at character generation. Returns : result (boolean)","title":"playable"},{"location":"types/tes3class/#services","text":"The services offered by the class. This is a bit field, and its values should typically be accessed through values such as bartersAlchemy . Returns : result (number)","title":"services"},{"location":"types/tes3class/#skills","text":"Read-only . An array-style table of the 10 skills IDs associated with the class. For major or minor skills specifically, use the majorSkills and minorSkills properties. Returns : result (table)","title":"skills"},{"location":"types/tes3class/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3class/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3class/#specialization","text":"The specialization for the class. Maps to the tes3.specialization constants table. Returns : result (number)","title":"specialization"},{"location":"types/tes3class/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3class/#methods","text":"","title":"Methods"},{"location":"types/tes3class/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3clothing/","text":"tes3clothing \u2693\ufe0e A clothing game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) enchantCapacity \u2693\ufe0e The object's enchantment capacity. Returns : result (number) enchantment \u2693\ufe0e The enchantment used by the object. Returns : result ( tes3enchantment ) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLeftPart \u2693\ufe0e Determines if the armor is the left part of a pair. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) parts \u2693\ufe0e An array-style table of the tes3wearablePart data on the object. Returns : result (table) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) slot \u2693\ufe0e The slot used by the clothing object. Returns : result (number) slotName \u2693\ufe0e The name of the slot used by the clothing object. Returns : result (string) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e The value of the object. For this object type, its maximum value is 65535. Larger numbers will overflow. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3clothing"},{"location":"types/tes3clothing/#tes3clothing","text":"A clothing game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3clothing"},{"location":"types/tes3clothing/#properties","text":"","title":"Properties"},{"location":"types/tes3clothing/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3clothing/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3clothing/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3clothing/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3clothing/#enchantcapacity","text":"The object's enchantment capacity. Returns : result (number)","title":"enchantCapacity"},{"location":"types/tes3clothing/#enchantment","text":"The enchantment used by the object. Returns : result ( tes3enchantment )","title":"enchantment"},{"location":"types/tes3clothing/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3clothing/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3clothing/#isleftpart","text":"Determines if the armor is the left part of a pair. Returns : result (boolean)","title":"isLeftPart"},{"location":"types/tes3clothing/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3clothing/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3clothing/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3clothing/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3clothing/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3clothing/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3clothing/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3clothing/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3clothing/#parts","text":"An array-style table of the tes3wearablePart data on the object. Returns : result (table)","title":"parts"},{"location":"types/tes3clothing/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3clothing/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3clothing/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3clothing/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3clothing/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3clothing/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3clothing/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3clothing/#slot","text":"The slot used by the clothing object. Returns : result (number)","title":"slot"},{"location":"types/tes3clothing/#slotname","text":"The name of the slot used by the clothing object. Returns : result (string)","title":"slotName"},{"location":"types/tes3clothing/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3clothing/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3clothing/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3clothing/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3clothing/#value","text":"The value of the object. For this object type, its maximum value is 65535. Larger numbers will overflow. Returns : result (number)","title":"value"},{"location":"types/tes3clothing/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3clothing/#methods","text":"","title":"Methods"},{"location":"types/tes3clothing/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3combatSession/","text":"tes3combatSession \u2693\ufe0e A structure that keeps track of combat session data. Properties \u2693\ufe0e alchemyPriority \u2693\ufe0e No description yet available. Returns : result (number) data \u2693\ufe0e No description yet available. distance \u2693\ufe0e No description yet available. Returns : result (number) lastUseTimestamp \u2693\ufe0e No description yet available. Returns : result (number) mobile \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3mobileActor ) potionUseFlag \u2693\ufe0e No description yet available. Returns : result (number) selectedAction \u2693\ufe0e No description yet available. Returns : result (number) selectedAlchemy \u2693\ufe0e No description yet available. Returns : result ( tes3alchemy ) selectedItem \u2693\ufe0e No description yet available. Returns : result ( tes3itemStack ) selectedShield \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3equipmentStack ) selectedSpell \u2693\ufe0e No description yet available. Returns : result ( tes3spell ) selectedWeapon \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3equipmentStack ) selectionPriority \u2693\ufe0e No description yet available. Returns : result (number) Methods \u2693\ufe0e changeEquipment \u2693\ufe0e This method equips an item to the mobile in this combat sesion. tes3combatSession : changeEquipment ( equipmentStack ) Parameters : equipmentStack ( tes3equipmentStack ): An item to equip. selectAlchemyWithEffect \u2693\ufe0e Selects the alchemy item with the greatest value, for a given effect ID and loads it into the selectedAlchemy property. local result = tes3combatSession : selectAlchemyWithEffect ( id ) Parameters : id (number) Returns : result (number)","title":"tes3combatSession"},{"location":"types/tes3combatSession/#tes3combatsession","text":"A structure that keeps track of combat session data.","title":"tes3combatSession"},{"location":"types/tes3combatSession/#properties","text":"","title":"Properties"},{"location":"types/tes3combatSession/#alchemypriority","text":"No description yet available. Returns : result (number)","title":"alchemyPriority"},{"location":"types/tes3combatSession/#data","text":"No description yet available.","title":"data"},{"location":"types/tes3combatSession/#distance","text":"No description yet available. Returns : result (number)","title":"distance"},{"location":"types/tes3combatSession/#lastusetimestamp","text":"No description yet available. Returns : result (number)","title":"lastUseTimestamp"},{"location":"types/tes3combatSession/#mobile","text":"Read-only . No description yet available. Returns : result ( tes3mobileActor )","title":"mobile"},{"location":"types/tes3combatSession/#potionuseflag","text":"No description yet available. Returns : result (number)","title":"potionUseFlag"},{"location":"types/tes3combatSession/#selectedaction","text":"No description yet available. Returns : result (number)","title":"selectedAction"},{"location":"types/tes3combatSession/#selectedalchemy","text":"No description yet available. Returns : result ( tes3alchemy )","title":"selectedAlchemy"},{"location":"types/tes3combatSession/#selecteditem","text":"No description yet available. Returns : result ( tes3itemStack )","title":"selectedItem"},{"location":"types/tes3combatSession/#selectedshield","text":"Read-only . No description yet available. Returns : result ( tes3equipmentStack )","title":"selectedShield"},{"location":"types/tes3combatSession/#selectedspell","text":"No description yet available. Returns : result ( tes3spell )","title":"selectedSpell"},{"location":"types/tes3combatSession/#selectedweapon","text":"Read-only . No description yet available. Returns : result ( tes3equipmentStack )","title":"selectedWeapon"},{"location":"types/tes3combatSession/#selectionpriority","text":"No description yet available. Returns : result (number)","title":"selectionPriority"},{"location":"types/tes3combatSession/#methods","text":"","title":"Methods"},{"location":"types/tes3combatSession/#changeequipment","text":"This method equips an item to the mobile in this combat sesion. tes3combatSession : changeEquipment ( equipmentStack ) Parameters : equipmentStack ( tes3equipmentStack ): An item to equip.","title":"changeEquipment"},{"location":"types/tes3combatSession/#selectalchemywitheffect","text":"Selects the alchemy item with the greatest value, for a given effect ID and loads it into the selectedAlchemy property. local result = tes3combatSession : selectAlchemyWithEffect ( id ) Parameters : id (number) Returns : result (number)","title":"selectAlchemyWithEffect"},{"location":"types/tes3container/","text":"tes3container \u2693\ufe0e A container object that has not been cloned. Typically represents the raw information edited in the construction set. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e actorFlags \u2693\ufe0e Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number) barterGold \u2693\ufe0e Friendly access to actor's barter gold amount. Returns : result (number) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) blood \u2693\ufe0e Friendly access to actor's blood type. Returns : result (number) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) capacity \u2693\ufe0e The amount of weight that the container can hold. Returns : result (number) cloneCount \u2693\ufe0e Read-only . The number of clones that exist of this actor. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) equipment \u2693\ufe0e Read-only . The items currently equipped to the actor. Returns : result ( tes3iterator ) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) inventory \u2693\ufe0e Read-only . The items currently carried by the actor. Returns : result ( tes3inventory ) isInstance \u2693\ufe0e Always returns false. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) organic \u2693\ufe0e Determines if the container's organic flag is enabled. Returns : result (boolean) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) respawns \u2693\ufe0e Determines if the container's respawn flag is enabled. Returns : result (boolean) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) hasItemEquipped \u2693\ufe0e Checks if the actor has provided item equipped. local result = tes3actor : hasItemEquipped ({ item = ..., itemData = ... }) Parameters : params (table) item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean) offersService \u2693\ufe0e Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = tes3actor : offersService ( service ) Parameters : service (number): Use one of the tes3.merchantService.* constants. Returns : result (boolean) onInventoryClose \u2693\ufe0e A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. tes3actor : onInventoryClose ( reference ) Parameters : reference ( tes3reference ) tradesItemType \u2693\ufe0e Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = tes3actor : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tes3container"},{"location":"types/tes3container/#tes3container","text":"A container object that has not been cloned. Typically represents the raw information edited in the construction set. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject","title":"tes3container"},{"location":"types/tes3container/#properties","text":"","title":"Properties"},{"location":"types/tes3container/#actorflags","text":"Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number)","title":"actorFlags"},{"location":"types/tes3container/#bartergold","text":"Friendly access to actor's barter gold amount. Returns : result (number)","title":"barterGold"},{"location":"types/tes3container/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3container/#blood","text":"Friendly access to actor's blood type. Returns : result (number)","title":"blood"},{"location":"types/tes3container/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3container/#capacity","text":"The amount of weight that the container can hold. Returns : result (number)","title":"capacity"},{"location":"types/tes3container/#clonecount","text":"Read-only . The number of clones that exist of this actor. Returns : result (number)","title":"cloneCount"},{"location":"types/tes3container/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3container/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3container/#equipment","text":"Read-only . The items currently equipped to the actor. Returns : result ( tes3iterator )","title":"equipment"},{"location":"types/tes3container/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3container/#inventory","text":"Read-only . The items currently carried by the actor. Returns : result ( tes3inventory )","title":"inventory"},{"location":"types/tes3container/#isinstance","text":"Always returns false. Returns : result (boolean)","title":"isInstance"},{"location":"types/tes3container/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3container/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3container/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3container/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3container/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3container/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3container/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3container/#organic","text":"Determines if the container's organic flag is enabled. Returns : result (boolean)","title":"organic"},{"location":"types/tes3container/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3container/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3container/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3container/#respawns","text":"Determines if the container's respawn flag is enabled. Returns : result (boolean)","title":"respawns"},{"location":"types/tes3container/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3container/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3container/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3container/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3container/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3container/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3container/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3container/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3container/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3container/#methods","text":"","title":"Methods"},{"location":"types/tes3container/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3container/#hasitemequipped","text":"Checks if the actor has provided item equipped. local result = tes3actor : hasItemEquipped ({ item = ..., itemData = ... }) Parameters : params (table) item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean)","title":"hasItemEquipped"},{"location":"types/tes3container/#offersservice","text":"Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = tes3actor : offersService ( service ) Parameters : service (number): Use one of the tes3.merchantService.* constants. Returns : result (boolean)","title":"offersService"},{"location":"types/tes3container/#oninventoryclose","text":"A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. tes3actor : onInventoryClose ( reference ) Parameters : reference ( tes3reference )","title":"onInventoryClose"},{"location":"types/tes3container/#tradesitemtype","text":"Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = tes3actor : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tradesItemType"},{"location":"types/tes3containerInstance/","text":"tes3containerInstance \u2693\ufe0e A container object that has been cloned. Typically represents a container that has been instanced by being opened by the player. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e actorFlags \u2693\ufe0e Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number) barterGold \u2693\ufe0e Friendly access to actor's barter gold amount. Returns : result (number) baseObject \u2693\ufe0e Read-only . The base container object that the instance inherits from. Returns : result ( tes3object ) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) blood \u2693\ufe0e Friendly access to actor's blood type. Returns : result (number) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) cloneCount \u2693\ufe0e Read-only . The number of clones that exist of this actor. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) equipment \u2693\ufe0e Read-only . The items currently equipped to the actor. Returns : result ( tes3iterator ) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) inventory \u2693\ufe0e Read-only . The items currently carried by the actor. Returns : result ( tes3inventory ) isInstance \u2693\ufe0e Always returns true. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) organic \u2693\ufe0e Determines if the container's organic flag is enabled. Returns : result (boolean) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) reference \u2693\ufe0e Read-only . The reference that the object is represented by. Returns : result ( tes3reference ) respawns \u2693\ufe0e Determines if the container's respawn flag is enabled. Returns : result (boolean) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) hasItemEquipped \u2693\ufe0e Checks if the actor has provided item equipped. local result = tes3actor : hasItemEquipped ({ item = ..., itemData = ... }) Parameters : params (table) item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean) offersService \u2693\ufe0e Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = tes3actor : offersService ( service ) Parameters : service (number): Use one of the tes3.merchantService.* constants. Returns : result (boolean) onInventoryClose \u2693\ufe0e A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. tes3actor : onInventoryClose ( reference ) Parameters : reference ( tes3reference ) tradesItemType \u2693\ufe0e Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = tes3actor : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tes3containerInstance"},{"location":"types/tes3containerInstance/#tes3containerinstance","text":"A container object that has been cloned. Typically represents a container that has been instanced by being opened by the player. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject","title":"tes3containerInstance"},{"location":"types/tes3containerInstance/#properties","text":"","title":"Properties"},{"location":"types/tes3containerInstance/#actorflags","text":"Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number)","title":"actorFlags"},{"location":"types/tes3containerInstance/#bartergold","text":"Friendly access to actor's barter gold amount. Returns : result (number)","title":"barterGold"},{"location":"types/tes3containerInstance/#baseobject","text":"Read-only . The base container object that the instance inherits from. Returns : result ( tes3object )","title":"baseObject"},{"location":"types/tes3containerInstance/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3containerInstance/#blood","text":"Friendly access to actor's blood type. Returns : result (number)","title":"blood"},{"location":"types/tes3containerInstance/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3containerInstance/#clonecount","text":"Read-only . The number of clones that exist of this actor. Returns : result (number)","title":"cloneCount"},{"location":"types/tes3containerInstance/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3containerInstance/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3containerInstance/#equipment","text":"Read-only . The items currently equipped to the actor. Returns : result ( tes3iterator )","title":"equipment"},{"location":"types/tes3containerInstance/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3containerInstance/#inventory","text":"Read-only . The items currently carried by the actor. Returns : result ( tes3inventory )","title":"inventory"},{"location":"types/tes3containerInstance/#isinstance","text":"Always returns true. Returns : result (boolean)","title":"isInstance"},{"location":"types/tes3containerInstance/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3containerInstance/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3containerInstance/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3containerInstance/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3containerInstance/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3containerInstance/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3containerInstance/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3containerInstance/#organic","text":"Determines if the container's organic flag is enabled. Returns : result (boolean)","title":"organic"},{"location":"types/tes3containerInstance/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3containerInstance/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3containerInstance/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3containerInstance/#reference","text":"Read-only . The reference that the object is represented by. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3containerInstance/#respawns","text":"Determines if the container's respawn flag is enabled. Returns : result (boolean)","title":"respawns"},{"location":"types/tes3containerInstance/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3containerInstance/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3containerInstance/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3containerInstance/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3containerInstance/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3containerInstance/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3containerInstance/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3containerInstance/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3containerInstance/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3containerInstance/#methods","text":"","title":"Methods"},{"location":"types/tes3containerInstance/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3containerInstance/#hasitemequipped","text":"Checks if the actor has provided item equipped. local result = tes3actor : hasItemEquipped ({ item = ..., itemData = ... }) Parameters : params (table) item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean)","title":"hasItemEquipped"},{"location":"types/tes3containerInstance/#offersservice","text":"Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = tes3actor : offersService ( service ) Parameters : service (number): Use one of the tes3.merchantService.* constants. Returns : result (boolean)","title":"offersService"},{"location":"types/tes3containerInstance/#oninventoryclose","text":"A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. tes3actor : onInventoryClose ( reference ) Parameters : reference ( tes3reference )","title":"onInventoryClose"},{"location":"types/tes3containerInstance/#tradesitemtype","text":"Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = tes3actor : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tradesItemType"},{"location":"types/tes3creature/","text":"tes3creature \u2693\ufe0e A creature object that has not been cloned. Typically represents the raw information edited in the construction set. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e actorFlags \u2693\ufe0e Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number) aiConfig \u2693\ufe0e Read-only . A substructure off of actors that contains information on the current AI configuration. Returns : result ( tes3aiConfig ) attacks \u2693\ufe0e A table of three attacks, represented by a trio of tes3rangeInt . Returns : result (table) attributes \u2693\ufe0e A table of eight numbers, representing the base values for the actor's attributes. Returns : result (table) barterGold \u2693\ufe0e Friendly access to actor's barter gold amount. Returns : result (number) biped \u2693\ufe0e Access to the creature's biped flag. Returns : result (boolean) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) blood \u2693\ufe0e Friendly access to actor's blood type. Returns : result (number) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) cloneCount \u2693\ufe0e Read-only . The number of clones that exist of this actor. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) equipment \u2693\ufe0e Read-only . The items currently equipped to the actor. Returns : result ( tes3iterator ) fatigue \u2693\ufe0e Read-only . The actor's max fatigue. Returns : result (number) flies \u2693\ufe0e Access to the creature's flies flag. Returns : result (boolean) health \u2693\ufe0e Read-only . The actor's max health. Returns : result (number) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) inventory \u2693\ufe0e Read-only . The items currently carried by the actor. Returns : result ( tes3inventory ) isAttacked \u2693\ufe0e Read-only . If true, the actor's attacked flag is set. Returns : result (boolean) isEssential \u2693\ufe0e Read-only . If true, the actor's essential flag is set. Returns : result (boolean) isInstance \u2693\ufe0e Always returns false. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) isRespawn \u2693\ufe0e Read-only . If true, the actor's respawn flag is set. Returns : result (boolean) level \u2693\ufe0e Read-only . The base level of the creature. Returns : result (number) magicka \u2693\ufe0e Read-only . The actor's max magicka. Returns : result (number) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) respawns \u2693\ufe0e Access to the creature's respawns flag. Returns : result (boolean) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) skills \u2693\ufe0e A table of three numbers, representing the base values for the creature's combat, magic, and stealth skills. Returns : result (table) soul \u2693\ufe0e The amount of soul value that the creature provides. Returns : result (number) soundCreature \u2693\ufe0e A creature to use instead of this one for sound generation. Returns : result ( tes3creature ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) spells \u2693\ufe0e Read-only . A list of spells that the actor has access to. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, spell in pairs(creature.spells.iterator) do print(spell.name) end Returns : result ( tes3spellList ) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) swims \u2693\ufe0e Access to the creature's swims flag. Returns : result (boolean) type \u2693\ufe0e The type of the creature. Maps to tes3.creatureType constants. Returns : result (number) usesEquipment \u2693\ufe0e Access to the creature's usesEquipment flag. Returns : result (boolean) walks \u2693\ufe0e Access to the creature's walks flag. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) hasItemEquipped \u2693\ufe0e Checks if the actor has provided item equipped. local result = tes3actor : hasItemEquipped ({ item = ..., itemData = ... }) Parameters : params (table) item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean) offersService \u2693\ufe0e Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = tes3actor : offersService ( service ) Parameters : service (number): Use one of the tes3.merchantService.* constants. Returns : result (boolean) onInventoryClose \u2693\ufe0e A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. tes3actor : onInventoryClose ( reference ) Parameters : reference ( tes3reference ) tradesItemType \u2693\ufe0e Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = tes3actor : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tes3creature"},{"location":"types/tes3creature/#tes3creature","text":"A creature object that has not been cloned. Typically represents the raw information edited in the construction set. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject","title":"tes3creature"},{"location":"types/tes3creature/#properties","text":"","title":"Properties"},{"location":"types/tes3creature/#actorflags","text":"Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number)","title":"actorFlags"},{"location":"types/tes3creature/#aiconfig","text":"Read-only . A substructure off of actors that contains information on the current AI configuration. Returns : result ( tes3aiConfig )","title":"aiConfig"},{"location":"types/tes3creature/#attacks","text":"A table of three attacks, represented by a trio of tes3rangeInt . Returns : result (table)","title":"attacks"},{"location":"types/tes3creature/#attributes","text":"A table of eight numbers, representing the base values for the actor's attributes. Returns : result (table)","title":"attributes"},{"location":"types/tes3creature/#bartergold","text":"Friendly access to actor's barter gold amount. Returns : result (number)","title":"barterGold"},{"location":"types/tes3creature/#biped","text":"Access to the creature's biped flag. Returns : result (boolean)","title":"biped"},{"location":"types/tes3creature/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3creature/#blood","text":"Friendly access to actor's blood type. Returns : result (number)","title":"blood"},{"location":"types/tes3creature/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3creature/#clonecount","text":"Read-only . The number of clones that exist of this actor. Returns : result (number)","title":"cloneCount"},{"location":"types/tes3creature/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3creature/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3creature/#equipment","text":"Read-only . The items currently equipped to the actor. Returns : result ( tes3iterator )","title":"equipment"},{"location":"types/tes3creature/#fatigue","text":"Read-only . The actor's max fatigue. Returns : result (number)","title":"fatigue"},{"location":"types/tes3creature/#flies","text":"Access to the creature's flies flag. Returns : result (boolean)","title":"flies"},{"location":"types/tes3creature/#health","text":"Read-only . The actor's max health. Returns : result (number)","title":"health"},{"location":"types/tes3creature/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3creature/#inventory","text":"Read-only . The items currently carried by the actor. Returns : result ( tes3inventory )","title":"inventory"},{"location":"types/tes3creature/#isattacked","text":"Read-only . If true, the actor's attacked flag is set. Returns : result (boolean)","title":"isAttacked"},{"location":"types/tes3creature/#isessential","text":"Read-only . If true, the actor's essential flag is set. Returns : result (boolean)","title":"isEssential"},{"location":"types/tes3creature/#isinstance","text":"Always returns false. Returns : result (boolean)","title":"isInstance"},{"location":"types/tes3creature/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3creature/#isrespawn","text":"Read-only . If true, the actor's respawn flag is set. Returns : result (boolean)","title":"isRespawn"},{"location":"types/tes3creature/#level","text":"Read-only . The base level of the creature. Returns : result (number)","title":"level"},{"location":"types/tes3creature/#magicka","text":"Read-only . The actor's max magicka. Returns : result (number)","title":"magicka"},{"location":"types/tes3creature/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3creature/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3creature/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3creature/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3creature/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3creature/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3creature/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3creature/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3creature/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3creature/#respawns","text":"Access to the creature's respawns flag. Returns : result (boolean)","title":"respawns"},{"location":"types/tes3creature/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3creature/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3creature/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3creature/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3creature/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3creature/#skills","text":"A table of three numbers, representing the base values for the creature's combat, magic, and stealth skills. Returns : result (table)","title":"skills"},{"location":"types/tes3creature/#soul","text":"The amount of soul value that the creature provides. Returns : result (number)","title":"soul"},{"location":"types/tes3creature/#soundcreature","text":"A creature to use instead of this one for sound generation. Returns : result ( tes3creature )","title":"soundCreature"},{"location":"types/tes3creature/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3creature/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3creature/#spells","text":"Read-only . A list of spells that the actor has access to. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, spell in pairs(creature.spells.iterator) do print(spell.name) end Returns : result ( tes3spellList )","title":"spells"},{"location":"types/tes3creature/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3creature/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3creature/#swims","text":"Access to the creature's swims flag. Returns : result (boolean)","title":"swims"},{"location":"types/tes3creature/#type","text":"The type of the creature. Maps to tes3.creatureType constants. Returns : result (number)","title":"type"},{"location":"types/tes3creature/#usesequipment","text":"Access to the creature's usesEquipment flag. Returns : result (boolean)","title":"usesEquipment"},{"location":"types/tes3creature/#walks","text":"Access to the creature's walks flag. Returns : result (boolean)","title":"walks"},{"location":"types/tes3creature/#methods","text":"","title":"Methods"},{"location":"types/tes3creature/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3creature/#hasitemequipped","text":"Checks if the actor has provided item equipped. local result = tes3actor : hasItemEquipped ({ item = ..., itemData = ... }) Parameters : params (table) item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean)","title":"hasItemEquipped"},{"location":"types/tes3creature/#offersservice","text":"Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = tes3actor : offersService ( service ) Parameters : service (number): Use one of the tes3.merchantService.* constants. Returns : result (boolean)","title":"offersService"},{"location":"types/tes3creature/#oninventoryclose","text":"A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. tes3actor : onInventoryClose ( reference ) Parameters : reference ( tes3reference )","title":"onInventoryClose"},{"location":"types/tes3creature/#tradesitemtype","text":"Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = tes3actor : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tradesItemType"},{"location":"types/tes3creatureInstance/","text":"tes3creatureInstance \u2693\ufe0e A creature object that has been cloned. Typically represents a creature that has been instanced in the world. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e actorFlags \u2693\ufe0e Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number) aiConfig \u2693\ufe0e Read-only . Simplified access to the base creature's AI configuration. Returns : result ( tes3aiConfig ) attacks \u2693\ufe0e Simplified access to the base creature's attacks. A table of three attacks, represented by a trio of tes3rangeInt . Returns : result (table) attributes \u2693\ufe0e Simplified access to the base creature's attributes. A table of eight numbers, representing the base values for the creature's attributes. Returns : result (table) barterGold \u2693\ufe0e Friendly access to actor's barter gold amount. Returns : result (number) baseObject \u2693\ufe0e Access to creature that this one is instanced from. Returns : result ( tes3creature ) biped \u2693\ufe0e Access to the creature's biped flag. Returns : result (boolean) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) blood \u2693\ufe0e Friendly access to actor's blood type. Returns : result (number) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) cloneCount \u2693\ufe0e Read-only . The number of clones that exist of this actor. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) equipment \u2693\ufe0e Read-only . A collection that contains the currently equipped items. Returns : result ( tes3iterator ) fatigue \u2693\ufe0e Read-only . The creature's current fatigue. Returns : result (number) flies \u2693\ufe0e Access to the creature's flies flag. Returns : result (boolean) health \u2693\ufe0e Read-only . The creature's current health. Returns : result (number) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) inventory \u2693\ufe0e Read-only . The items currently carried by the actor. Returns : result ( tes3inventory ) isAttacked \u2693\ufe0e Read-only . If true, the creature attacked flag is set. Returns : result (boolean) isEssential \u2693\ufe0e Read-only . If true, the creature essential flag is set. Returns : result (boolean) isInstance \u2693\ufe0e Always returns true. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) isRespawn \u2693\ufe0e Read-only . If true, the creature respawn flag is set. Returns : result (boolean) level \u2693\ufe0e Read-only . The base level of the creature. Returns : result (number) magicka \u2693\ufe0e Read-only . The creature's current magicka. Returns : result (number) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) mobile \u2693\ufe0e Read-only . The mobile that the object is represented by. Returns : result ( tes3mobileActor ) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) reference \u2693\ufe0e Read-only . The reference that the object is represented by. Returns : result ( tes3reference ) respawns \u2693\ufe0e Access to the creature's respawns flag. Returns : result (boolean) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) skills \u2693\ufe0e Simplified access to the base creature's skills. A table of three numbers, representing the base values for the creature's combat, magic, and stealth skills. Returns : result (table) soul \u2693\ufe0e Simplified access to the base creature's soul. The amount of soul value that the creature provides. Returns : result (number) soundCreature \u2693\ufe0e Simplified access to the base creature's sound generator. A creature to use instead of this one for sound generation. Returns : result ( tes3creature ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) spells \u2693\ufe0e Read-only . Quick access to the base creature's spell list. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, spell in pairs(creature.spells.iterator) do print(spell.name) end Returns : result ( tes3spellList ) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) swims \u2693\ufe0e Access to the creature's swims flag. Returns : result (boolean) type \u2693\ufe0e Simplified access to the base creature's type. The type of the creature, maps to values in tes3.creatureType namespace. Returns : result (number) usesEquipment \u2693\ufe0e Access to the creature's usesEquipment flag. Returns : result (boolean) walks \u2693\ufe0e Access to the creature's walks flag. Returns : result (boolean) weapon \u2693\ufe0e Read-only . The creature's currently equipped weapon. Returns : result ( tes3weapon ) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) hasItemEquipped \u2693\ufe0e Checks if the actor has provided item equipped. local result = tes3actor : hasItemEquipped ({ item = ..., itemData = ... }) Parameters : params (table) item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean) offersService \u2693\ufe0e Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = tes3actor : offersService ( service ) Parameters : service (number): Use one of the tes3.merchantService.* constants. Returns : result (boolean) onInventoryClose \u2693\ufe0e A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. tes3actor : onInventoryClose ( reference ) Parameters : reference ( tes3reference ) reevaluateEquipment \u2693\ufe0e Causes the creature to reevaluate its equipment choices and equip the best available. tes3creatureInstance : reevaluateEquipment () tradesItemType \u2693\ufe0e Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = tes3actor : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tes3creatureInstance"},{"location":"types/tes3creatureInstance/#tes3creatureinstance","text":"A creature object that has been cloned. Typically represents a creature that has been instanced in the world. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject","title":"tes3creatureInstance"},{"location":"types/tes3creatureInstance/#properties","text":"","title":"Properties"},{"location":"types/tes3creatureInstance/#actorflags","text":"Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number)","title":"actorFlags"},{"location":"types/tes3creatureInstance/#aiconfig","text":"Read-only . Simplified access to the base creature's AI configuration. Returns : result ( tes3aiConfig )","title":"aiConfig"},{"location":"types/tes3creatureInstance/#attacks","text":"Simplified access to the base creature's attacks. A table of three attacks, represented by a trio of tes3rangeInt . Returns : result (table)","title":"attacks"},{"location":"types/tes3creatureInstance/#attributes","text":"Simplified access to the base creature's attributes. A table of eight numbers, representing the base values for the creature's attributes. Returns : result (table)","title":"attributes"},{"location":"types/tes3creatureInstance/#bartergold","text":"Friendly access to actor's barter gold amount. Returns : result (number)","title":"barterGold"},{"location":"types/tes3creatureInstance/#baseobject","text":"Access to creature that this one is instanced from. Returns : result ( tes3creature )","title":"baseObject"},{"location":"types/tes3creatureInstance/#biped","text":"Access to the creature's biped flag. Returns : result (boolean)","title":"biped"},{"location":"types/tes3creatureInstance/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3creatureInstance/#blood","text":"Friendly access to actor's blood type. Returns : result (number)","title":"blood"},{"location":"types/tes3creatureInstance/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3creatureInstance/#clonecount","text":"Read-only . The number of clones that exist of this actor. Returns : result (number)","title":"cloneCount"},{"location":"types/tes3creatureInstance/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3creatureInstance/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3creatureInstance/#equipment","text":"Read-only . A collection that contains the currently equipped items. Returns : result ( tes3iterator )","title":"equipment"},{"location":"types/tes3creatureInstance/#fatigue","text":"Read-only . The creature's current fatigue. Returns : result (number)","title":"fatigue"},{"location":"types/tes3creatureInstance/#flies","text":"Access to the creature's flies flag. Returns : result (boolean)","title":"flies"},{"location":"types/tes3creatureInstance/#health","text":"Read-only . The creature's current health. Returns : result (number)","title":"health"},{"location":"types/tes3creatureInstance/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3creatureInstance/#inventory","text":"Read-only . The items currently carried by the actor. Returns : result ( tes3inventory )","title":"inventory"},{"location":"types/tes3creatureInstance/#isattacked","text":"Read-only . If true, the creature attacked flag is set. Returns : result (boolean)","title":"isAttacked"},{"location":"types/tes3creatureInstance/#isessential","text":"Read-only . If true, the creature essential flag is set. Returns : result (boolean)","title":"isEssential"},{"location":"types/tes3creatureInstance/#isinstance","text":"Always returns true. Returns : result (boolean)","title":"isInstance"},{"location":"types/tes3creatureInstance/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3creatureInstance/#isrespawn","text":"Read-only . If true, the creature respawn flag is set. Returns : result (boolean)","title":"isRespawn"},{"location":"types/tes3creatureInstance/#level","text":"Read-only . The base level of the creature. Returns : result (number)","title":"level"},{"location":"types/tes3creatureInstance/#magicka","text":"Read-only . The creature's current magicka. Returns : result (number)","title":"magicka"},{"location":"types/tes3creatureInstance/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3creatureInstance/#mobile","text":"Read-only . The mobile that the object is represented by. Returns : result ( tes3mobileActor )","title":"mobile"},{"location":"types/tes3creatureInstance/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3creatureInstance/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3creatureInstance/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3creatureInstance/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3creatureInstance/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3creatureInstance/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3creatureInstance/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3creatureInstance/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3creatureInstance/#reference","text":"Read-only . The reference that the object is represented by. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3creatureInstance/#respawns","text":"Access to the creature's respawns flag. Returns : result (boolean)","title":"respawns"},{"location":"types/tes3creatureInstance/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3creatureInstance/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3creatureInstance/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3creatureInstance/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3creatureInstance/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3creatureInstance/#skills","text":"Simplified access to the base creature's skills. A table of three numbers, representing the base values for the creature's combat, magic, and stealth skills. Returns : result (table)","title":"skills"},{"location":"types/tes3creatureInstance/#soul","text":"Simplified access to the base creature's soul. The amount of soul value that the creature provides. Returns : result (number)","title":"soul"},{"location":"types/tes3creatureInstance/#soundcreature","text":"Simplified access to the base creature's sound generator. A creature to use instead of this one for sound generation. Returns : result ( tes3creature )","title":"soundCreature"},{"location":"types/tes3creatureInstance/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3creatureInstance/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3creatureInstance/#spells","text":"Read-only . Quick access to the base creature's spell list. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, spell in pairs(creature.spells.iterator) do print(spell.name) end Returns : result ( tes3spellList )","title":"spells"},{"location":"types/tes3creatureInstance/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3creatureInstance/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3creatureInstance/#swims","text":"Access to the creature's swims flag. Returns : result (boolean)","title":"swims"},{"location":"types/tes3creatureInstance/#type","text":"Simplified access to the base creature's type. The type of the creature, maps to values in tes3.creatureType namespace. Returns : result (number)","title":"type"},{"location":"types/tes3creatureInstance/#usesequipment","text":"Access to the creature's usesEquipment flag. Returns : result (boolean)","title":"usesEquipment"},{"location":"types/tes3creatureInstance/#walks","text":"Access to the creature's walks flag. Returns : result (boolean)","title":"walks"},{"location":"types/tes3creatureInstance/#weapon","text":"Read-only . The creature's currently equipped weapon. Returns : result ( tes3weapon )","title":"weapon"},{"location":"types/tes3creatureInstance/#methods","text":"","title":"Methods"},{"location":"types/tes3creatureInstance/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3creatureInstance/#hasitemequipped","text":"Checks if the actor has provided item equipped. local result = tes3actor : hasItemEquipped ({ item = ..., itemData = ... }) Parameters : params (table) item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean)","title":"hasItemEquipped"},{"location":"types/tes3creatureInstance/#offersservice","text":"Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = tes3actor : offersService ( service ) Parameters : service (number): Use one of the tes3.merchantService.* constants. Returns : result (boolean)","title":"offersService"},{"location":"types/tes3creatureInstance/#oninventoryclose","text":"A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. tes3actor : onInventoryClose ( reference ) Parameters : reference ( tes3reference )","title":"onInventoryClose"},{"location":"types/tes3creatureInstance/#reevaluateequipment","text":"Causes the creature to reevaluate its equipment choices and equip the best available. tes3creatureInstance : reevaluateEquipment ()","title":"reevaluateEquipment"},{"location":"types/tes3creatureInstance/#tradesitemtype","text":"Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = tes3actor : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tradesItemType"},{"location":"types/tes3dataHandler/","text":"tes3dataHandler \u2693\ufe0e A core game object used for storing both active and non-dynamic gameplay data. Properties \u2693\ufe0e backgroundThread \u2693\ufe0e Read-only . A Windows handle to the background processing thread. Returns : result (number) backgroundThreadId \u2693\ufe0e Read-only . The thread ID for the background processing thread. Returns : result (number) backgroundThreadRunning \u2693\ufe0e Read-only . Access to the running state for the background processing thread. Returns : result (boolean) cellChanged \u2693\ufe0e Read-only . A flag set for the frame that the player has changed cells. Returns : result (boolean) centralGridX \u2693\ufe0e Read-only . The position of the origin horizontal grid coordinate. Returns : result (boolean) centralGridY \u2693\ufe0e Read-only . The position of the origin longitudinal grid coordinate. Returns : result (boolean) currentAmbientWaterSound \u2693\ufe0e Access to the current ambient water sound. Returns : result ( tes3sound ) currentCell \u2693\ufe0e Read-only . Access to the cell that the player is currently in. Returns : result ( tes3cell ) currentInteriorCell \u2693\ufe0e Read-only . Access to the current interior cell, if the player is in an interior. Returns : result ( tes3cell ) dontThreadLoad \u2693\ufe0e Access to dontThreadLoad setting. Returns : result (boolean) exteriorCells \u2693\ufe0e Read-only . A table of nine tes3cellExteriorData objects for all loaded exterior cells. Returns : result (table) lastExteriorCell \u2693\ufe0e Read-only . Access to the last visited exterior cell. Returns : result ( tes3cell ) mainThread \u2693\ufe0e Read-only . A Windows handle to the main execution thread. Returns : result (number) mainThreadId \u2693\ufe0e Read-only . The thread ID for the main execution thread. Returns : result (number) nonDynamicData \u2693\ufe0e Read-only . A child structure where core game objects are held. Returns : result ( tes3nonDynamicData ) suppressThreadLoad \u2693\ufe0e Access to suppressThreadLoad setting. Returns : result (boolean) threadSleepTime \u2693\ufe0e Read-only . No description yet available. Returns : result (number) useCellTransitionFader \u2693\ufe0e An engine flag that controls if there is a fade in/out between cells. Returns : result (boolean) worldLandscapeRoot \u2693\ufe0e Read-only . One of the core parent scene graph nodes. Returns : result ( niNode ) worldObjectRoot \u2693\ufe0e Read-only . One of the core parent scene graph nodes. Returns : result ( niNode ) worldPickObjectRoot \u2693\ufe0e Read-only . One of the core parent scene graph nodes. Returns : result ( niNode ) Methods \u2693\ufe0e updateCollisionGroupsForActiveCells \u2693\ufe0e No description yet available. tes3dataHandler : updateCollisionGroupsForActiveCells ({ force = ..., isResettingData = ..., resetCollisionGroups = ... }) Parameters : params (table) force (boolean): Default : true . isResettingData (boolean): Default : false . resetCollisionGroups (boolean): Default : true .","title":"tes3dataHandler"},{"location":"types/tes3dataHandler/#tes3datahandler","text":"A core game object used for storing both active and non-dynamic gameplay data.","title":"tes3dataHandler"},{"location":"types/tes3dataHandler/#properties","text":"","title":"Properties"},{"location":"types/tes3dataHandler/#backgroundthread","text":"Read-only . A Windows handle to the background processing thread. Returns : result (number)","title":"backgroundThread"},{"location":"types/tes3dataHandler/#backgroundthreadid","text":"Read-only . The thread ID for the background processing thread. Returns : result (number)","title":"backgroundThreadId"},{"location":"types/tes3dataHandler/#backgroundthreadrunning","text":"Read-only . Access to the running state for the background processing thread. Returns : result (boolean)","title":"backgroundThreadRunning"},{"location":"types/tes3dataHandler/#cellchanged","text":"Read-only . A flag set for the frame that the player has changed cells. Returns : result (boolean)","title":"cellChanged"},{"location":"types/tes3dataHandler/#centralgridx","text":"Read-only . The position of the origin horizontal grid coordinate. Returns : result (boolean)","title":"centralGridX"},{"location":"types/tes3dataHandler/#centralgridy","text":"Read-only . The position of the origin longitudinal grid coordinate. Returns : result (boolean)","title":"centralGridY"},{"location":"types/tes3dataHandler/#currentambientwatersound","text":"Access to the current ambient water sound. Returns : result ( tes3sound )","title":"currentAmbientWaterSound"},{"location":"types/tes3dataHandler/#currentcell","text":"Read-only . Access to the cell that the player is currently in. Returns : result ( tes3cell )","title":"currentCell"},{"location":"types/tes3dataHandler/#currentinteriorcell","text":"Read-only . Access to the current interior cell, if the player is in an interior. Returns : result ( tes3cell )","title":"currentInteriorCell"},{"location":"types/tes3dataHandler/#dontthreadload","text":"Access to dontThreadLoad setting. Returns : result (boolean)","title":"dontThreadLoad"},{"location":"types/tes3dataHandler/#exteriorcells","text":"Read-only . A table of nine tes3cellExteriorData objects for all loaded exterior cells. Returns : result (table)","title":"exteriorCells"},{"location":"types/tes3dataHandler/#lastexteriorcell","text":"Read-only . Access to the last visited exterior cell. Returns : result ( tes3cell )","title":"lastExteriorCell"},{"location":"types/tes3dataHandler/#mainthread","text":"Read-only . A Windows handle to the main execution thread. Returns : result (number)","title":"mainThread"},{"location":"types/tes3dataHandler/#mainthreadid","text":"Read-only . The thread ID for the main execution thread. Returns : result (number)","title":"mainThreadId"},{"location":"types/tes3dataHandler/#nondynamicdata","text":"Read-only . A child structure where core game objects are held. Returns : result ( tes3nonDynamicData )","title":"nonDynamicData"},{"location":"types/tes3dataHandler/#suppressthreadload","text":"Access to suppressThreadLoad setting. Returns : result (boolean)","title":"suppressThreadLoad"},{"location":"types/tes3dataHandler/#threadsleeptime","text":"Read-only . No description yet available. Returns : result (number)","title":"threadSleepTime"},{"location":"types/tes3dataHandler/#usecelltransitionfader","text":"An engine flag that controls if there is a fade in/out between cells. Returns : result (boolean)","title":"useCellTransitionFader"},{"location":"types/tes3dataHandler/#worldlandscaperoot","text":"Read-only . One of the core parent scene graph nodes. Returns : result ( niNode )","title":"worldLandscapeRoot"},{"location":"types/tes3dataHandler/#worldobjectroot","text":"Read-only . One of the core parent scene graph nodes. Returns : result ( niNode )","title":"worldObjectRoot"},{"location":"types/tes3dataHandler/#worldpickobjectroot","text":"Read-only . One of the core parent scene graph nodes. Returns : result ( niNode )","title":"worldPickObjectRoot"},{"location":"types/tes3dataHandler/#methods","text":"","title":"Methods"},{"location":"types/tes3dataHandler/#updatecollisiongroupsforactivecells","text":"No description yet available. tes3dataHandler : updateCollisionGroupsForActiveCells ({ force = ..., isResettingData = ..., resetCollisionGroups = ... }) Parameters : params (table) force (boolean): Default : true . isResettingData (boolean): Default : false . resetCollisionGroups (boolean): Default : true .","title":"updateCollisionGroupsForActiveCells"},{"location":"types/tes3dialogue/","text":"tes3dialogue \u2693\ufe0e A parent-level dialogue, such as a topic, voice, greeting, persuasion response, or journal. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) info \u2693\ufe0e Read-only . A collection of individual entries in the dialogue. Returns : result ( tes3iterator ) journalIndex \u2693\ufe0e For journal dialogues, the currently active journal index. Returns : result (number, nil) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) type \u2693\ufe0e Read-only . The type of the dialogue. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) addToJournal \u2693\ufe0e Adds the dialogue to the player's journal, if applicable, at a given index. local result = tes3dialogue : addToJournal ({ index = ..., actor = ... }) Parameters : params (table) index (number): Default : 0 . actor ( tes3mobileActor , tes3reference , string): Default : tes3.player . Returns : result (boolean) getInfo \u2693\ufe0e Fetches the info that a given actor would produce for the dialogue. local result = tes3dialogue : getInfo ({ actor = ... }) Parameters : params (table) actor ( tes3mobileActor , tes3reference , string) Returns : result ( tes3dialogueInfo ) getJournalInfo \u2693\ufe0e Retrieves the info object for a journal. By default this will return the info for the player's current journal index for this dialogue. An index can be provided to fetch a specific index's related info. local journalInfo = tes3dialogue : getJournalInfo ( index ) Parameters : index (number): Optional . The index of the journal to fetch the info for. If not provided, the current player's journal index is used. Returns : journalInfo ( tes3dialogueInfo ) loadQuestName \u2693\ufe0e This method finds the info that contains the quest name, then loads and returns its text. This method accesses the disk, and may be slow to operate. For dialogues that aren't journal-based, this will be nil . local questName = tes3dialogue : loadQuestName () Returns : questName (string, nil)","title":"tes3dialogue"},{"location":"types/tes3dialogue/#tes3dialogue","text":"A parent-level dialogue, such as a topic, voice, greeting, persuasion response, or journal. This type inherits the following: tes3baseObject","title":"tes3dialogue"},{"location":"types/tes3dialogue/#properties","text":"","title":"Properties"},{"location":"types/tes3dialogue/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3dialogue/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3dialogue/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3dialogue/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3dialogue/#info","text":"Read-only . A collection of individual entries in the dialogue. Returns : result ( tes3iterator )","title":"info"},{"location":"types/tes3dialogue/#journalindex","text":"For journal dialogues, the currently active journal index. Returns : result (number, nil)","title":"journalIndex"},{"location":"types/tes3dialogue/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3dialogue/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3dialogue/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3dialogue/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3dialogue/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3dialogue/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3dialogue/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3dialogue/#type","text":"Read-only . The type of the dialogue. Returns : result (number)","title":"type"},{"location":"types/tes3dialogue/#methods","text":"","title":"Methods"},{"location":"types/tes3dialogue/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3dialogue/#addtojournal","text":"Adds the dialogue to the player's journal, if applicable, at a given index. local result = tes3dialogue : addToJournal ({ index = ..., actor = ... }) Parameters : params (table) index (number): Default : 0 . actor ( tes3mobileActor , tes3reference , string): Default : tes3.player . Returns : result (boolean)","title":"addToJournal"},{"location":"types/tes3dialogue/#getinfo","text":"Fetches the info that a given actor would produce for the dialogue. local result = tes3dialogue : getInfo ({ actor = ... }) Parameters : params (table) actor ( tes3mobileActor , tes3reference , string) Returns : result ( tes3dialogueInfo )","title":"getInfo"},{"location":"types/tes3dialogue/#getjournalinfo","text":"Retrieves the info object for a journal. By default this will return the info for the player's current journal index for this dialogue. An index can be provided to fetch a specific index's related info. local journalInfo = tes3dialogue : getJournalInfo ( index ) Parameters : index (number): Optional . The index of the journal to fetch the info for. If not provided, the current player's journal index is used. Returns : journalInfo ( tes3dialogueInfo )","title":"getJournalInfo"},{"location":"types/tes3dialogue/#loadquestname","text":"This method finds the info that contains the quest name, then loads and returns its text. This method accesses the disk, and may be slow to operate. For dialogues that aren't journal-based, this will be nil . local questName = tes3dialogue : loadQuestName () Returns : questName (string, nil)","title":"loadQuestName"},{"location":"types/tes3dialogueInfo/","text":"tes3dialogueInfo \u2693\ufe0e A child for a given dialogue. Whereas a dialogue may be a conversation topic, a tes3dialogueInfo would be an individual response. This type inherits the following: tes3baseObject Properties \u2693\ufe0e actor \u2693\ufe0e Read-only . The speaker's actor that the info is filtered for. Returns : result ( tes3actor ) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) cell \u2693\ufe0e Read-only . The speaker's current cell that the info is filtered for. Returns : result ( tes3cell ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) disposition \u2693\ufe0e The minimum disposition that the info is filtered for. For journal-based dialogues, this is the same as the journalIndex property, which should be used instead. Returns : result (number) firstHeardFrom \u2693\ufe0e The actor that the player first heard the info from. Returns : result ( tes3actor ) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isQuestFinished \u2693\ufe0e Quick access to the \"quest finished\" flag. For dialogues that aren't journal-based, this will be nil . Returns : result (boolean, nil) isQuestName \u2693\ufe0e Quick access to the \"quest name\" flag. If this is true, this info contains the name of the quest. For dialogues that aren't journal-based, this will be nil . Returns : result (boolean, nil) isQuestRestart \u2693\ufe0e Quick access to the \"quest restart\" flag. For dialogues that aren't journal-based, this will be nil . Returns : result (boolean, nil) journalIndex \u2693\ufe0e The current index for the quest. For dialogues that aren't journal-based, this will be nil . Returns : result (number, nil) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) npcClass \u2693\ufe0e Read-only . The speaker's class that the info is filtered for. Returns : result ( tes3class ) npcFaction \u2693\ufe0e Read-only . The speaker's faction that the info is filtered for. Returns : result ( tes3faction ) npcRace \u2693\ufe0e Read-only . The speaker's race that the info is filtered for. Returns : result ( tes3actor ) npcRank \u2693\ufe0e Read-only . The speaker's faction rank that the info is filtered for. Returns : result (number) npcSex \u2693\ufe0e Read-only . The speaker's sex that the info is filtered for. Returns : result (number) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) pcFaction \u2693\ufe0e Read-only . The player's joined faction that the info is filtered for. Returns : result (number) pcRank \u2693\ufe0e Read-only . The player's rank required rank in the speaker's faction. Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) text \u2693\ufe0e Read-only . String contents for the info. This is not kept in memory, and must be loaded from files for each call. Returns : result (string) type \u2693\ufe0e Read-only . The type of the info. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) filter \u2693\ufe0e This method filters the associated dialogue info for given arguments and returns true if the dialogue info filtering passes. This method rises infoFilter event. local result = tes3dialogueInfo : filter ( actor , reference , source , dialogue ) Parameters : actor ( tes3object ) reference ( tes3reference ) source (number) dialogue ( tes3dialogue ) Returns : result (boolean) runScript \u2693\ufe0e This method runs the dialogue info's associated script on a given reference. tes3dialogueInfo : runScript ( reference ) Parameters : reference ( tes3reference ): The reference on which to run the script on.","title":"tes3dialogueInfo"},{"location":"types/tes3dialogueInfo/#tes3dialogueinfo","text":"A child for a given dialogue. Whereas a dialogue may be a conversation topic, a tes3dialogueInfo would be an individual response. This type inherits the following: tes3baseObject","title":"tes3dialogueInfo"},{"location":"types/tes3dialogueInfo/#properties","text":"","title":"Properties"},{"location":"types/tes3dialogueInfo/#actor","text":"Read-only . The speaker's actor that the info is filtered for. Returns : result ( tes3actor )","title":"actor"},{"location":"types/tes3dialogueInfo/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3dialogueInfo/#cell","text":"Read-only . The speaker's current cell that the info is filtered for. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3dialogueInfo/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3dialogueInfo/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3dialogueInfo/#disposition","text":"The minimum disposition that the info is filtered for. For journal-based dialogues, this is the same as the journalIndex property, which should be used instead. Returns : result (number)","title":"disposition"},{"location":"types/tes3dialogueInfo/#firstheardfrom","text":"The actor that the player first heard the info from. Returns : result ( tes3actor )","title":"firstHeardFrom"},{"location":"types/tes3dialogueInfo/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3dialogueInfo/#isquestfinished","text":"Quick access to the \"quest finished\" flag. For dialogues that aren't journal-based, this will be nil . Returns : result (boolean, nil)","title":"isQuestFinished"},{"location":"types/tes3dialogueInfo/#isquestname","text":"Quick access to the \"quest name\" flag. If this is true, this info contains the name of the quest. For dialogues that aren't journal-based, this will be nil . Returns : result (boolean, nil)","title":"isQuestName"},{"location":"types/tes3dialogueInfo/#isquestrestart","text":"Quick access to the \"quest restart\" flag. For dialogues that aren't journal-based, this will be nil . Returns : result (boolean, nil)","title":"isQuestRestart"},{"location":"types/tes3dialogueInfo/#journalindex","text":"The current index for the quest. For dialogues that aren't journal-based, this will be nil . Returns : result (number, nil)","title":"journalIndex"},{"location":"types/tes3dialogueInfo/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3dialogueInfo/#npcclass","text":"Read-only . The speaker's class that the info is filtered for. Returns : result ( tes3class )","title":"npcClass"},{"location":"types/tes3dialogueInfo/#npcfaction","text":"Read-only . The speaker's faction that the info is filtered for. Returns : result ( tes3faction )","title":"npcFaction"},{"location":"types/tes3dialogueInfo/#npcrace","text":"Read-only . The speaker's race that the info is filtered for. Returns : result ( tes3actor )","title":"npcRace"},{"location":"types/tes3dialogueInfo/#npcrank","text":"Read-only . The speaker's faction rank that the info is filtered for. Returns : result (number)","title":"npcRank"},{"location":"types/tes3dialogueInfo/#npcsex","text":"Read-only . The speaker's sex that the info is filtered for. Returns : result (number)","title":"npcSex"},{"location":"types/tes3dialogueInfo/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3dialogueInfo/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3dialogueInfo/#pcfaction","text":"Read-only . The player's joined faction that the info is filtered for. Returns : result (number)","title":"pcFaction"},{"location":"types/tes3dialogueInfo/#pcrank","text":"Read-only . The player's rank required rank in the speaker's faction. Returns : result (number)","title":"pcRank"},{"location":"types/tes3dialogueInfo/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3dialogueInfo/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3dialogueInfo/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3dialogueInfo/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3dialogueInfo/#text","text":"Read-only . String contents for the info. This is not kept in memory, and must be loaded from files for each call. Returns : result (string)","title":"text"},{"location":"types/tes3dialogueInfo/#type","text":"Read-only . The type of the info. Returns : result (number)","title":"type"},{"location":"types/tes3dialogueInfo/#methods","text":"","title":"Methods"},{"location":"types/tes3dialogueInfo/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3dialogueInfo/#filter","text":"This method filters the associated dialogue info for given arguments and returns true if the dialogue info filtering passes. This method rises infoFilter event. local result = tes3dialogueInfo : filter ( actor , reference , source , dialogue ) Parameters : actor ( tes3object ) reference ( tes3reference ) source (number) dialogue ( tes3dialogue ) Returns : result (boolean)","title":"filter"},{"location":"types/tes3dialogueInfo/#runscript","text":"This method runs the dialogue info's associated script on a given reference. tes3dialogueInfo : runScript ( reference ) Parameters : reference ( tes3reference ): The reference on which to run the script on.","title":"runScript"},{"location":"types/tes3directInputMouseState/","text":"tes3directInputMouseState \u2693\ufe0e A raw DirectInput mouse state. Properties \u2693\ufe0e buttons \u2693\ufe0e Read-only . The array-style access to 8 buttons states available on the mouse. Not all may be used. Returns : result (table) x \u2693\ufe0e A basic property of the mouse for the X-axis. Returns : result (number) y \u2693\ufe0e A basic property of the mouse for the Y-axis. Returns : result (number) z \u2693\ufe0e A basic property of the mouse for the Z-axis. This is typically the scroll wheel. Returns : result (number)","title":"tes3directInputMouseState"},{"location":"types/tes3directInputMouseState/#tes3directinputmousestate","text":"A raw DirectInput mouse state.","title":"tes3directInputMouseState"},{"location":"types/tes3directInputMouseState/#properties","text":"","title":"Properties"},{"location":"types/tes3directInputMouseState/#buttons","text":"Read-only . The array-style access to 8 buttons states available on the mouse. Not all may be used. Returns : result (table)","title":"buttons"},{"location":"types/tes3directInputMouseState/#x","text":"A basic property of the mouse for the X-axis. Returns : result (number)","title":"x"},{"location":"types/tes3directInputMouseState/#y","text":"A basic property of the mouse for the Y-axis. Returns : result (number)","title":"y"},{"location":"types/tes3directInputMouseState/#z","text":"A basic property of the mouse for the Z-axis. This is typically the scroll wheel. Returns : result (number)","title":"z"},{"location":"types/tes3door/","text":"tes3door \u2693\ufe0e A door game object. Data specific to a single door is stored on the door reference as destination and lock attachments. See tes3reference for details. There is a special-case door with id PrisonMarker used for finding the nearest prison when the player is sent to jail. You should normally exclude this if you are iterating over all doors. Use the object.isLocationMarker property to detect these markers. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) closeSound \u2693\ufe0e The sound to be played when the door closes. Returns : result ( tes3sound ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) openSound \u2693\ufe0e The sound to be played when the door opens. Returns : result ( tes3sound ) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e Read-only . The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3door"},{"location":"types/tes3door/#tes3door","text":"A door game object. Data specific to a single door is stored on the door reference as destination and lock attachments. See tes3reference for details. There is a special-case door with id PrisonMarker used for finding the nearest prison when the player is sent to jail. You should normally exclude this if you are iterating over all doors. Use the object.isLocationMarker property to detect these markers. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject","title":"tes3door"},{"location":"types/tes3door/#properties","text":"","title":"Properties"},{"location":"types/tes3door/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3door/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3door/#closesound","text":"The sound to be played when the door closes. Returns : result ( tes3sound )","title":"closeSound"},{"location":"types/tes3door/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3door/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3door/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3door/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3door/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3door/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3door/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3door/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3door/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3door/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3door/#opensound","text":"The sound to be played when the door opens. Returns : result ( tes3sound )","title":"openSound"},{"location":"types/tes3door/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3door/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3door/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3door/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3door/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3door/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3door/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3door/#script","text":"Read-only . The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3door/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3door/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3door/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3door/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3door/#methods","text":"","title":"Methods"},{"location":"types/tes3door/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3effect/","text":"tes3effect \u2693\ufe0e A structure that defines information for an effect and its associated variables, typically found on spells, alchemy, and enchantments. Properties \u2693\ufe0e attribute \u2693\ufe0e The attribute associated with this effect, or -1 if no attribute is used. Returns : result (number) cost \u2693\ufe0e The base magicka cost of this effect. Returns : result (number) duration \u2693\ufe0e How long the effect should last. Returns : result (number) id \u2693\ufe0e The base tes3magicEffect ID that the effect uses. Returns : result (number) max \u2693\ufe0e The maximum magnitude of the effect. Returns : result (number) min \u2693\ufe0e The minimum magnitude of the effect. Returns : result (number) object \u2693\ufe0e Read-only . Fetches the tes3magicEffect for the given id used. Returns : result ( tes3magicEffect ) radius \u2693\ufe0e The radius of the effect. Returns : result (number) rangeType \u2693\ufe0e Determines if the effect is self, touch, or target ranged. Maps to tes3.effectRange constants. Returns : result (number) skill \u2693\ufe0e The skill associated with this effect, or -1 if no skill is used. Returns : result (number)","title":"tes3effect"},{"location":"types/tes3effect/#tes3effect","text":"A structure that defines information for an effect and its associated variables, typically found on spells, alchemy, and enchantments.","title":"tes3effect"},{"location":"types/tes3effect/#properties","text":"","title":"Properties"},{"location":"types/tes3effect/#attribute","text":"The attribute associated with this effect, or -1 if no attribute is used. Returns : result (number)","title":"attribute"},{"location":"types/tes3effect/#cost","text":"The base magicka cost of this effect. Returns : result (number)","title":"cost"},{"location":"types/tes3effect/#duration","text":"How long the effect should last. Returns : result (number)","title":"duration"},{"location":"types/tes3effect/#id","text":"The base tes3magicEffect ID that the effect uses. Returns : result (number)","title":"id"},{"location":"types/tes3effect/#max","text":"The maximum magnitude of the effect. Returns : result (number)","title":"max"},{"location":"types/tes3effect/#min","text":"The minimum magnitude of the effect. Returns : result (number)","title":"min"},{"location":"types/tes3effect/#object","text":"Read-only . Fetches the tes3magicEffect for the given id used. Returns : result ( tes3magicEffect )","title":"object"},{"location":"types/tes3effect/#radius","text":"The radius of the effect. Returns : result (number)","title":"radius"},{"location":"types/tes3effect/#rangetype","text":"Determines if the effect is self, touch, or target ranged. Maps to tes3.effectRange constants. Returns : result (number)","title":"rangeType"},{"location":"types/tes3effect/#skill","text":"The skill associated with this effect, or -1 if no skill is used. Returns : result (number)","title":"skill"},{"location":"types/tes3enchantment/","text":"tes3enchantment \u2693\ufe0e An enchantment game object. This type inherits the following: tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) castType \u2693\ufe0e The enchantment's cast type. Maps to tes3.enchantmentType constants. Returns : result (number) chargeCost \u2693\ufe0e The cost of using the enchantment. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) effects \u2693\ufe0e Read-only . An array-style table of the tes3effect data on the object. Returns : result (table) flags \u2693\ufe0e A bit field for the enchantment's flags. Returns : result (number) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) maxCharge \u2693\ufe0e The maximum charge for the associated enchantment. Returns : result (number) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) getActiveEffectCount \u2693\ufe0e Returns the amount of effects the tes3enchantment object has. local count = tes3enchantment : getActiveEffectCount () Returns : count (number) getFirstIndexOfEffect \u2693\ufe0e Returns the index of a first effect of a given effectId in the parent tes3enchantment object. local index = tes3enchantment : getFirstIndexOfEffect ( effectId ) Parameters : effectId (number): The effectId to perform a check for. Maps to tes3.effect constants, including magic effects added with tes3.addMagicEffect() . Returns : index (number) Functions \u2693\ufe0e","title":"tes3enchantment"},{"location":"types/tes3enchantment/#tes3enchantment","text":"An enchantment game object. This type inherits the following: tes3object , tes3baseObject","title":"tes3enchantment"},{"location":"types/tes3enchantment/#properties","text":"","title":"Properties"},{"location":"types/tes3enchantment/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3enchantment/#casttype","text":"The enchantment's cast type. Maps to tes3.enchantmentType constants. Returns : result (number)","title":"castType"},{"location":"types/tes3enchantment/#chargecost","text":"The cost of using the enchantment. Returns : result (number)","title":"chargeCost"},{"location":"types/tes3enchantment/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3enchantment/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3enchantment/#effects","text":"Read-only . An array-style table of the tes3effect data on the object. Returns : result (table)","title":"effects"},{"location":"types/tes3enchantment/#flags","text":"A bit field for the enchantment's flags. Returns : result (number)","title":"flags"},{"location":"types/tes3enchantment/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3enchantment/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3enchantment/#maxcharge","text":"The maximum charge for the associated enchantment. Returns : result (number)","title":"maxCharge"},{"location":"types/tes3enchantment/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3enchantment/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3enchantment/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3enchantment/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3enchantment/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3enchantment/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3enchantment/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3enchantment/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3enchantment/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3enchantment/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3enchantment/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3enchantment/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3enchantment/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3enchantment/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3enchantment/#methods","text":"","title":"Methods"},{"location":"types/tes3enchantment/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3enchantment/#getactiveeffectcount","text":"Returns the amount of effects the tes3enchantment object has. local count = tes3enchantment : getActiveEffectCount () Returns : count (number)","title":"getActiveEffectCount"},{"location":"types/tes3enchantment/#getfirstindexofeffect","text":"Returns the index of a first effect of a given effectId in the parent tes3enchantment object. local index = tes3enchantment : getFirstIndexOfEffect ( effectId ) Parameters : effectId (number): The effectId to perform a check for. Maps to tes3.effect constants, including magic effects added with tes3.addMagicEffect() . Returns : index (number)","title":"getFirstIndexOfEffect"},{"location":"types/tes3enchantment/#functions","text":"","title":"Functions"},{"location":"types/tes3equipmentStack/","text":"tes3equipmentStack \u2693\ufe0e A simple container that holds a relationship between an item, and any associated item data. Properties \u2693\ufe0e itemData \u2693\ufe0e Item data associated with the stack's object, if any. All equipped items except ammunition will have itemData. Returns : result ( tes3itemData ) object \u2693\ufe0e The core game object that the stack represents. Returns : result ( tes3item ) variables \u2693\ufe0e Variables that are associated with the stack's object, if any. Another alias for itemData. Returns : result ( tes3itemData )","title":"tes3equipmentStack"},{"location":"types/tes3equipmentStack/#tes3equipmentstack","text":"A simple container that holds a relationship between an item, and any associated item data.","title":"tes3equipmentStack"},{"location":"types/tes3equipmentStack/#properties","text":"","title":"Properties"},{"location":"types/tes3equipmentStack/#itemdata","text":"Item data associated with the stack's object, if any. All equipped items except ammunition will have itemData. Returns : result ( tes3itemData )","title":"itemData"},{"location":"types/tes3equipmentStack/#object","text":"The core game object that the stack represents. Returns : result ( tes3item )","title":"object"},{"location":"types/tes3equipmentStack/#variables","text":"Variables that are associated with the stack's object, if any. Another alias for itemData. Returns : result ( tes3itemData )","title":"variables"},{"location":"types/tes3faction/","text":"tes3faction \u2693\ufe0e A faction game object. This type inherits the following: tes3baseObject Properties \u2693\ufe0e attributes \u2693\ufe0e Read-only . An array-style table holding the two attributes that govern advancement. Returns : result (table) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The faction's player-facing name. Returns : result (string) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) playerExpelled \u2693\ufe0e The player's expelled state in the faction. Returns : result (boolean) playerJoined \u2693\ufe0e The player's join state for the faction. Returns : result (boolean) playerRank \u2693\ufe0e The player's current rank in the faction. Returns : result (number) playerReputation \u2693\ufe0e The player's current reputation in the faction. Returns : result (number) ranks \u2693\ufe0e Read-only . An array-style table holding the ten related tes3factionRank s. Returns : result (table) reactions \u2693\ufe0e Read-only . A collection of tes3factionReaction s. Returns : result ( tes3iterator ) skills \u2693\ufe0e Read-only . An array-style table holding the seven skills that govern advancement. Returns : result (table) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) getRankName \u2693\ufe0e This function fetches the player-facing name of a rank in the faction. local result = tes3faction : getRankName ( rank ) Parameters : rank (number): A rank number in range [0, 9] inclusive. Returns : result (string) setRankName \u2693\ufe0e This function changes the player-facing name of a given rank in the faction. tes3faction : setRankName ( rank , name ) Parameters : rank (number): A rank number in range [0, 9] inclusive. name (string): A new name to set.","title":"tes3faction"},{"location":"types/tes3faction/#tes3faction","text":"A faction game object. This type inherits the following: tes3baseObject","title":"tes3faction"},{"location":"types/tes3faction/#properties","text":"","title":"Properties"},{"location":"types/tes3faction/#attributes","text":"Read-only . An array-style table holding the two attributes that govern advancement. Returns : result (table)","title":"attributes"},{"location":"types/tes3faction/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3faction/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3faction/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3faction/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3faction/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3faction/#name","text":"The faction's player-facing name. Returns : result (string)","title":"name"},{"location":"types/tes3faction/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3faction/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3faction/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3faction/#playerexpelled","text":"The player's expelled state in the faction. Returns : result (boolean)","title":"playerExpelled"},{"location":"types/tes3faction/#playerjoined","text":"The player's join state for the faction. Returns : result (boolean)","title":"playerJoined"},{"location":"types/tes3faction/#playerrank","text":"The player's current rank in the faction. Returns : result (number)","title":"playerRank"},{"location":"types/tes3faction/#playerreputation","text":"The player's current reputation in the faction. Returns : result (number)","title":"playerReputation"},{"location":"types/tes3faction/#ranks","text":"Read-only . An array-style table holding the ten related tes3factionRank s. Returns : result (table)","title":"ranks"},{"location":"types/tes3faction/#reactions","text":"Read-only . A collection of tes3factionReaction s. Returns : result ( tes3iterator )","title":"reactions"},{"location":"types/tes3faction/#skills","text":"Read-only . An array-style table holding the seven skills that govern advancement. Returns : result (table)","title":"skills"},{"location":"types/tes3faction/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3faction/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3faction/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3faction/#methods","text":"","title":"Methods"},{"location":"types/tes3faction/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3faction/#getrankname","text":"This function fetches the player-facing name of a rank in the faction. local result = tes3faction : getRankName ( rank ) Parameters : rank (number): A rank number in range [0, 9] inclusive. Returns : result (string)","title":"getRankName"},{"location":"types/tes3faction/#setrankname","text":"This function changes the player-facing name of a given rank in the faction. tes3faction : setRankName ( rank , name ) Parameters : rank (number): A rank number in range [0, 9] inclusive. name (string): A new name to set.","title":"setRankName"},{"location":"types/tes3factionRank/","text":"tes3factionRank \u2693\ufe0e A container describing an individual rank inside a faction. Properties \u2693\ufe0e attributes \u2693\ufe0e Read-only . An array-style table holding the two attribute requirements. Returns : result (table) reputation \u2693\ufe0e The reputation requirement to advance to this rank. Returns : result (number) skills \u2693\ufe0e Read-only . An array-style table holding the two skill requirements. Returns : result (table)","title":"tes3factionRank"},{"location":"types/tes3factionRank/#tes3factionrank","text":"A container describing an individual rank inside a faction.","title":"tes3factionRank"},{"location":"types/tes3factionRank/#properties","text":"","title":"Properties"},{"location":"types/tes3factionRank/#attributes","text":"Read-only . An array-style table holding the two attribute requirements. Returns : result (table)","title":"attributes"},{"location":"types/tes3factionRank/#reputation","text":"The reputation requirement to advance to this rank. Returns : result (number)","title":"reputation"},{"location":"types/tes3factionRank/#skills","text":"Read-only . An array-style table holding the two skill requirements. Returns : result (table)","title":"skills"},{"location":"types/tes3factionReaction/","text":"tes3factionReaction \u2693\ufe0e A container mapping a reputation for an associated faction. Properties \u2693\ufe0e faction \u2693\ufe0e Read-only . The faction whose reaction will be adjusted. Returns : result ( tes3faction ) reputation \u2693\ufe0e The reaction adjustment for the faction. Returns : result (number)","title":"tes3factionReaction"},{"location":"types/tes3factionReaction/#tes3factionreaction","text":"A container mapping a reputation for an associated faction.","title":"tes3factionReaction"},{"location":"types/tes3factionReaction/#properties","text":"","title":"Properties"},{"location":"types/tes3factionReaction/#faction","text":"Read-only . The faction whose reaction will be adjusted. Returns : result ( tes3faction )","title":"faction"},{"location":"types/tes3factionReaction/#reputation","text":"The reaction adjustment for the faction. Returns : result (number)","title":"reputation"},{"location":"types/tes3fader/","text":"tes3fader \u2693\ufe0e An object that applies a graphical effect on the screen, such as screen glare or damage coloring. Properties \u2693\ufe0e active \u2693\ufe0e The activation state for the fader. Setting this effectively calls activate/deactivate. Returns : result (boolean) Methods \u2693\ufe0e activate \u2693\ufe0e Activates a deactivated fader. tes3fader : activate () deactivate \u2693\ufe0e Deactivates an activated fader. tes3fader : deactivate () fadeIn \u2693\ufe0e Transitions the fader to a value of 1 over a given duration. tes3fader : fadeIn ({ duration = ... }) Parameters : params (table) duration (number): Default : 1 . The time it takes to fade, in seconds. fadeOut \u2693\ufe0e Transitions the fader to a value of 0 over a given duration. tes3fader : fadeOut ({ duration = ... }) Parameters : params (table) duration (number): Default : 1 . The time it takes to fade, in seconds. fadeTo \u2693\ufe0e Transitions the fader to a value over a given duration. tes3fader : fadeTo ({ value = ..., duration = ... }) Parameters : params (table) value (number): Default : 1 . The value to fade to. duration (number): Default : 1 . The time it takes to fade, in seconds. setColor \u2693\ufe0e Applies a coloring effect to the fader. local result = tes3fader : setColor ({ color = ..., flag = ... }) Parameters : params (table) color ( tes3vector3 , table): The RGB values to set. flag (boolean) Returns : result (boolean) setTexture \u2693\ufe0e Updates the fader for the current frame. tes3fader : setTexture ( path ) Parameters : path (string): A path for the texture that will be displayed on screen. update \u2693\ufe0e Updates the fader for the current frame. tes3fader : update () updateMaterialProperty \u2693\ufe0e Updates the fader for the current frame. tes3fader : updateMaterialProperty ( value ) Parameters : value (number) Functions \u2693\ufe0e new \u2693\ufe0e Creates a new fader, and adds it to the fader system. local result = tes3fader . new () Returns : result ( tes3fader )","title":"tes3fader"},{"location":"types/tes3fader/#tes3fader","text":"An object that applies a graphical effect on the screen, such as screen glare or damage coloring.","title":"tes3fader"},{"location":"types/tes3fader/#properties","text":"","title":"Properties"},{"location":"types/tes3fader/#active","text":"The activation state for the fader. Setting this effectively calls activate/deactivate. Returns : result (boolean)","title":"active"},{"location":"types/tes3fader/#methods","text":"","title":"Methods"},{"location":"types/tes3fader/#activate","text":"Activates a deactivated fader. tes3fader : activate ()","title":"activate"},{"location":"types/tes3fader/#deactivate","text":"Deactivates an activated fader. tes3fader : deactivate ()","title":"deactivate"},{"location":"types/tes3fader/#fadein","text":"Transitions the fader to a value of 1 over a given duration. tes3fader : fadeIn ({ duration = ... }) Parameters : params (table) duration (number): Default : 1 . The time it takes to fade, in seconds.","title":"fadeIn"},{"location":"types/tes3fader/#fadeout","text":"Transitions the fader to a value of 0 over a given duration. tes3fader : fadeOut ({ duration = ... }) Parameters : params (table) duration (number): Default : 1 . The time it takes to fade, in seconds.","title":"fadeOut"},{"location":"types/tes3fader/#fadeto","text":"Transitions the fader to a value over a given duration. tes3fader : fadeTo ({ value = ..., duration = ... }) Parameters : params (table) value (number): Default : 1 . The value to fade to. duration (number): Default : 1 . The time it takes to fade, in seconds.","title":"fadeTo"},{"location":"types/tes3fader/#setcolor","text":"Applies a coloring effect to the fader. local result = tes3fader : setColor ({ color = ..., flag = ... }) Parameters : params (table) color ( tes3vector3 , table): The RGB values to set. flag (boolean) Returns : result (boolean)","title":"setColor"},{"location":"types/tes3fader/#settexture","text":"Updates the fader for the current frame. tes3fader : setTexture ( path ) Parameters : path (string): A path for the texture that will be displayed on screen.","title":"setTexture"},{"location":"types/tes3fader/#update","text":"Updates the fader for the current frame. tes3fader : update ()","title":"update"},{"location":"types/tes3fader/#updatematerialproperty","text":"Updates the fader for the current frame. tes3fader : updateMaterialProperty ( value ) Parameters : value (number)","title":"updateMaterialProperty"},{"location":"types/tes3fader/#functions","text":"","title":"Functions"},{"location":"types/tes3fader/#new","text":"Creates a new fader, and adds it to the fader system. local result = tes3fader . new () Returns : result ( tes3fader )","title":"new"},{"location":"types/tes3game/","text":"tes3game \u2693\ufe0e A core game object used for storing game settings. Properties \u2693\ufe0e parentWindowHandle \u2693\ufe0e Read-only . The Windows HWND for the parent window. Returns : result (number) playerTarget \u2693\ufe0e Read-only . The current activation target. Returns : result ( tes3reference ) renderDistance \u2693\ufe0e The game's rendering distance. Returns : result (number) screenShotsEnabled \u2693\ufe0e State on if screenshots are enabled. Returns : result (boolean) screenX \u2693\ufe0e Read-only . The screen's horizontal position. Returns : result (number) screenY \u2693\ufe0e Read-only . The screen's vertical position. Returns : result (number) soundQuality \u2693\ufe0e Sound quality level. Returns : result (number) voice \u2693\ufe0e Mix volumes for voices. Returns : result (number) volumeEffect \u2693\ufe0e Mix volumes for effects. Returns : result (number) volumeFootsteps \u2693\ufe0e Mix volumes for footsteps. Returns : result (number) volumeMaster \u2693\ufe0e Mix volumes for all sounds. Returns : result (number) volumeMedia \u2693\ufe0e Mix volumes for music. Returns : result (number) windowHandle \u2693\ufe0e Read-only . The Windows HWND for the window. Returns : result (number) wireframeProperty \u2693\ufe0e Read-only . The reused wireframe property, appled when toggling wireframe rendering. Returns : result ( niProperty ) worldSceneGraphRoot \u2693\ufe0e Read-only . Access to the root of the scene graph. Returns : result ( niNode ) Methods \u2693\ufe0e clearTarget \u2693\ufe0e Clears data related to activation, resetting what the player can activate. tes3game : clearTarget ()","title":"tes3game"},{"location":"types/tes3game/#tes3game","text":"A core game object used for storing game settings.","title":"tes3game"},{"location":"types/tes3game/#properties","text":"","title":"Properties"},{"location":"types/tes3game/#parentwindowhandle","text":"Read-only . The Windows HWND for the parent window. Returns : result (number)","title":"parentWindowHandle"},{"location":"types/tes3game/#playertarget","text":"Read-only . The current activation target. Returns : result ( tes3reference )","title":"playerTarget"},{"location":"types/tes3game/#renderdistance","text":"The game's rendering distance. Returns : result (number)","title":"renderDistance"},{"location":"types/tes3game/#screenshotsenabled","text":"State on if screenshots are enabled. Returns : result (boolean)","title":"screenShotsEnabled"},{"location":"types/tes3game/#screenx","text":"Read-only . The screen's horizontal position. Returns : result (number)","title":"screenX"},{"location":"types/tes3game/#screeny","text":"Read-only . The screen's vertical position. Returns : result (number)","title":"screenY"},{"location":"types/tes3game/#soundquality","text":"Sound quality level. Returns : result (number)","title":"soundQuality"},{"location":"types/tes3game/#voice","text":"Mix volumes for voices. Returns : result (number)","title":"voice"},{"location":"types/tes3game/#volumeeffect","text":"Mix volumes for effects. Returns : result (number)","title":"volumeEffect"},{"location":"types/tes3game/#volumefootsteps","text":"Mix volumes for footsteps. Returns : result (number)","title":"volumeFootsteps"},{"location":"types/tes3game/#volumemaster","text":"Mix volumes for all sounds. Returns : result (number)","title":"volumeMaster"},{"location":"types/tes3game/#volumemedia","text":"Mix volumes for music. Returns : result (number)","title":"volumeMedia"},{"location":"types/tes3game/#windowhandle","text":"Read-only . The Windows HWND for the window. Returns : result (number)","title":"windowHandle"},{"location":"types/tes3game/#wireframeproperty","text":"Read-only . The reused wireframe property, appled when toggling wireframe rendering. Returns : result ( niProperty )","title":"wireframeProperty"},{"location":"types/tes3game/#worldscenegraphroot","text":"Read-only . Access to the root of the scene graph. Returns : result ( niNode )","title":"worldSceneGraphRoot"},{"location":"types/tes3game/#methods","text":"","title":"Methods"},{"location":"types/tes3game/#cleartarget","text":"Clears data related to activation, resetting what the player can activate. tes3game : clearTarget ()","title":"clearTarget"},{"location":"types/tes3gameFile/","text":"tes3gameFile \u2693\ufe0e Represents a loaded ESM, ESP, or ESS file. Properties \u2693\ufe0e author \u2693\ufe0e Read-only . The file's author. Returns : result (string) cellName \u2693\ufe0e Read-only . The current cell, from a save game. Returns : result (string) currentHealth \u2693\ufe0e Read-only . The player's health, from a save game. Returns : result (number) day \u2693\ufe0e Read-only . The current day, from a save game. Returns : result (number) daysPassed \u2693\ufe0e Read-only . The number of days passed, from a save game. Returns : result (number) description \u2693\ufe0e Read-only . The description of the file. Returns : result (string) filename \u2693\ufe0e Read-only . The simple filename. Returns : result (string) fileSize \u2693\ufe0e Read-only . The size of the file. Returns : result (number) gameHour \u2693\ufe0e Read-only . The current game hour, from a save game. Returns : result (number) highestFormID \u2693\ufe0e Read-only . No description yet available. Returns : result (number) masters \u2693\ufe0e Read-only . An array-style table of the tes3gameFiles that this is dependent upon. Returns : result (table) maxHealth \u2693\ufe0e Read-only . The player's maximum health, from a save game. Returns : result (number) modifiedTime \u2693\ufe0e Read-only . The timestamp that the file was modified. Returns : result (string) month \u2693\ufe0e Read-only . The current month, from a save game. Returns : result (number) path \u2693\ufe0e Read-only . The path to the file. Returns : result (string) playerName \u2693\ufe0e Read-only . The player's name, from a save game. Returns : result (string) year \u2693\ufe0e Read-only . The current year, from a save game. Returns : result (number) Methods \u2693\ufe0e deleteFile \u2693\ufe0e Deletes the file. tes3gameFile : deleteFile ()","title":"tes3gameFile"},{"location":"types/tes3gameFile/#tes3gamefile","text":"Represents a loaded ESM, ESP, or ESS file.","title":"tes3gameFile"},{"location":"types/tes3gameFile/#properties","text":"","title":"Properties"},{"location":"types/tes3gameFile/#author","text":"Read-only . The file's author. Returns : result (string)","title":"author"},{"location":"types/tes3gameFile/#cellname","text":"Read-only . The current cell, from a save game. Returns : result (string)","title":"cellName"},{"location":"types/tes3gameFile/#currenthealth","text":"Read-only . The player's health, from a save game. Returns : result (number)","title":"currentHealth"},{"location":"types/tes3gameFile/#day","text":"Read-only . The current day, from a save game. Returns : result (number)","title":"day"},{"location":"types/tes3gameFile/#dayspassed","text":"Read-only . The number of days passed, from a save game. Returns : result (number)","title":"daysPassed"},{"location":"types/tes3gameFile/#description","text":"Read-only . The description of the file. Returns : result (string)","title":"description"},{"location":"types/tes3gameFile/#filename","text":"Read-only . The simple filename. Returns : result (string)","title":"filename"},{"location":"types/tes3gameFile/#filesize","text":"Read-only . The size of the file. Returns : result (number)","title":"fileSize"},{"location":"types/tes3gameFile/#gamehour","text":"Read-only . The current game hour, from a save game. Returns : result (number)","title":"gameHour"},{"location":"types/tes3gameFile/#highestformid","text":"Read-only . No description yet available. Returns : result (number)","title":"highestFormID"},{"location":"types/tes3gameFile/#masters","text":"Read-only . An array-style table of the tes3gameFiles that this is dependent upon. Returns : result (table)","title":"masters"},{"location":"types/tes3gameFile/#maxhealth","text":"Read-only . The player's maximum health, from a save game. Returns : result (number)","title":"maxHealth"},{"location":"types/tes3gameFile/#modifiedtime","text":"Read-only . The timestamp that the file was modified. Returns : result (string)","title":"modifiedTime"},{"location":"types/tes3gameFile/#month","text":"Read-only . The current month, from a save game. Returns : result (number)","title":"month"},{"location":"types/tes3gameFile/#path","text":"Read-only . The path to the file. Returns : result (string)","title":"path"},{"location":"types/tes3gameFile/#playername","text":"Read-only . The player's name, from a save game. Returns : result (string)","title":"playerName"},{"location":"types/tes3gameFile/#year","text":"Read-only . The current year, from a save game. Returns : result (number)","title":"year"},{"location":"types/tes3gameFile/#methods","text":"","title":"Methods"},{"location":"types/tes3gameFile/#deletefile","text":"Deletes the file. tes3gameFile : deleteFile ()","title":"deleteFile"},{"location":"types/tes3gameSetting/","text":"tes3gameSetting \u2693\ufe0e A GMST game object. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) defaultValue \u2693\ufe0e Read-only . The default value of the GMST, if no master defines the value. Returns : result (number, string) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) index \u2693\ufe0e Read-only . The array index for the GMST. Returns : result (number) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) rawValue \u2693\ufe0e The base value of the game setting, as stored in memory. Prefer to use .value unless you know what you're doing. Returns : result (number) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) type \u2693\ufe0e Read-only . The type of the variable, either i , f , or s . Returns : result (string) value \u2693\ufe0e The value of the GMST. Returns : result (number, string) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3gameSetting"},{"location":"types/tes3gameSetting/#tes3gamesetting","text":"A GMST game object. This type inherits the following: tes3baseObject","title":"tes3gameSetting"},{"location":"types/tes3gameSetting/#properties","text":"","title":"Properties"},{"location":"types/tes3gameSetting/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3gameSetting/#defaultvalue","text":"Read-only . The default value of the GMST, if no master defines the value. Returns : result (number, string)","title":"defaultValue"},{"location":"types/tes3gameSetting/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3gameSetting/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3gameSetting/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3gameSetting/#index","text":"Read-only . The array index for the GMST. Returns : result (number)","title":"index"},{"location":"types/tes3gameSetting/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3gameSetting/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3gameSetting/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3gameSetting/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3gameSetting/#rawvalue","text":"The base value of the game setting, as stored in memory. Prefer to use .value unless you know what you're doing. Returns : result (number)","title":"rawValue"},{"location":"types/tes3gameSetting/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3gameSetting/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3gameSetting/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3gameSetting/#type","text":"Read-only . The type of the variable, either i , f , or s . Returns : result (string)","title":"type"},{"location":"types/tes3gameSetting/#value","text":"The value of the GMST. Returns : result (number, string)","title":"value"},{"location":"types/tes3gameSetting/#methods","text":"","title":"Methods"},{"location":"types/tes3gameSetting/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3globalScript/","text":"tes3globalScript \u2693\ufe0e A global script object. Any script (in mwscript) that is not attached to any object is a global script. Properties \u2693\ufe0e context \u2693\ufe0e Read-only . A special context used for getting and setting script's variables. Returns : result ( tes3scriptContext ) reference \u2693\ufe0e Read-only . A reference this global script is tied to, if any. If the reference field isn't empty, then the global script in question is a Targeted script (a name given to it in Morrowind Scripting for Dummies). Returns : result ( tes3reference , nil) script \u2693\ufe0e Read-only . Access to global script object's associated script. Returns : result ( tes3script )","title":"tes3globalScript"},{"location":"types/tes3globalScript/#tes3globalscript","text":"A global script object. Any script (in mwscript) that is not attached to any object is a global script.","title":"tes3globalScript"},{"location":"types/tes3globalScript/#properties","text":"","title":"Properties"},{"location":"types/tes3globalScript/#context","text":"Read-only . A special context used for getting and setting script's variables. Returns : result ( tes3scriptContext )","title":"context"},{"location":"types/tes3globalScript/#reference","text":"Read-only . A reference this global script is tied to, if any. If the reference field isn't empty, then the global script in question is a Targeted script (a name given to it in Morrowind Scripting for Dummies). Returns : result ( tes3reference , nil)","title":"reference"},{"location":"types/tes3globalScript/#script","text":"Read-only . Access to global script object's associated script. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3globalVariable/","text":"tes3globalVariable \u2693\ufe0e A global variable game object. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e The value of the variable. Unlike GMSTs, globals are always numbers. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3globalVariable"},{"location":"types/tes3globalVariable/#tes3globalvariable","text":"A global variable game object. This type inherits the following: tes3baseObject","title":"tes3globalVariable"},{"location":"types/tes3globalVariable/#properties","text":"","title":"Properties"},{"location":"types/tes3globalVariable/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3globalVariable/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3globalVariable/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3globalVariable/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3globalVariable/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3globalVariable/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3globalVariable/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3globalVariable/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3globalVariable/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3globalVariable/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3globalVariable/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3globalVariable/#value","text":"The value of the variable. Unlike GMSTs, globals are always numbers. Returns : result (number)","title":"value"},{"location":"types/tes3globalVariable/#methods","text":"","title":"Methods"},{"location":"types/tes3globalVariable/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3ingredient/","text":"tes3ingredient \u2693\ufe0e An ingredient game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) effectAttributeIds \u2693\ufe0e Read-only . An array-style table access the attributes associated with the effects. Returns : result (table) effects \u2693\ufe0e Read-only . An array-style table access to the four ingredient effects. Unlike alchemy or enchanting objects, these are simple numbers representing the effect ID. Returns : result (table) effectSkillIds \u2693\ufe0e Read-only . An array-style table access the skills associated with the effects. Returns : result (table) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3ingredient"},{"location":"types/tes3ingredient/#tes3ingredient","text":"An ingredient game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3ingredient"},{"location":"types/tes3ingredient/#properties","text":"","title":"Properties"},{"location":"types/tes3ingredient/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3ingredient/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3ingredient/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3ingredient/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3ingredient/#effectattributeids","text":"Read-only . An array-style table access the attributes associated with the effects. Returns : result (table)","title":"effectAttributeIds"},{"location":"types/tes3ingredient/#effects","text":"Read-only . An array-style table access to the four ingredient effects. Unlike alchemy or enchanting objects, these are simple numbers representing the effect ID. Returns : result (table)","title":"effects"},{"location":"types/tes3ingredient/#effectskillids","text":"Read-only . An array-style table access the skills associated with the effects. Returns : result (table)","title":"effectSkillIds"},{"location":"types/tes3ingredient/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3ingredient/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3ingredient/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3ingredient/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3ingredient/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3ingredient/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3ingredient/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3ingredient/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3ingredient/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3ingredient/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3ingredient/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3ingredient/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3ingredient/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3ingredient/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3ingredient/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3ingredient/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3ingredient/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3ingredient/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3ingredient/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3ingredient/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3ingredient/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3ingredient/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3ingredient/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3ingredient/#methods","text":"","title":"Methods"},{"location":"types/tes3ingredient/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3inputConfig/","text":"tes3inputConfig \u2693\ufe0e A structure that represents a configured key binding. Properties \u2693\ufe0e code \u2693\ufe0e The scan or input button code for the binding. Device specific. For keyboards, this is a scan code. Returns : result (number) device \u2693\ufe0e The index of the device used in the keybinding, such as keyboard, mouse, joystick, or gamepad. Returns : result (number)","title":"tes3inputConfig"},{"location":"types/tes3inputConfig/#tes3inputconfig","text":"A structure that represents a configured key binding.","title":"tes3inputConfig"},{"location":"types/tes3inputConfig/#properties","text":"","title":"Properties"},{"location":"types/tes3inputConfig/#code","text":"The scan or input button code for the binding. Device specific. For keyboards, this is a scan code. Returns : result (number)","title":"code"},{"location":"types/tes3inputConfig/#device","text":"The index of the device used in the keybinding, such as keyboard, mouse, joystick, or gamepad. Returns : result (number)","title":"device"},{"location":"types/tes3inputController/","text":"tes3inputController \u2693\ufe0e A data structure, off of the world controller, that handles input. Properties \u2693\ufe0e creationFlags \u2693\ufe0e Read-only . A bit field representing device capabilities and settings. Returns : result (number) inputMaps \u2693\ufe0e Read-only . The array-style access to input bindings. Returns : result (table) keyboardState \u2693\ufe0e Read-only . The array-style access to raw key states. Returns : result (table) mouseState \u2693\ufe0e Read-only . The raw DirectInput mouse state. Returns : result ( tes3directInputMouseState ) previousKeyboardState \u2693\ufe0e Read-only . The array-style access to the previous frame's raw key states. Returns : result (table) previousMouseState \u2693\ufe0e Read-only . The raw DirectInput mouse state for the previous state. Returns : result ( tes3directInputMouseState ) Methods \u2693\ufe0e isAltDown \u2693\ufe0e Returns true if either alt modifier key is pressed. local isPressed = tes3inputController : isAltDown () Returns : isPressed (boolean): True if either alt key is pressed. isCapsLockActive \u2693\ufe0e Returns true if the caps lock mode is active. local isPressed = tes3inputController : isCapsLockActive () Returns : isPressed (boolean): True if caps lock is active. isControlDown \u2693\ufe0e Returns true if either control modifier key is pressed. local isPressed = tes3inputController : isControlDown () Returns : isPressed (boolean): True if either control key is pressed. isKeyDown \u2693\ufe0e Performs a key down test for a given scan key code. local result = tes3inputController : isKeyDown ( key ) Parameters : key (number): The scan code to test. Constants available through tes3.scanCode . Returns : result (boolean) isKeyPressedThisFrame \u2693\ufe0e Checks to see if a given scan code is pressed, and wasn't pressed last frame. local result = tes3inputController : isKeyPressedThisFrame ( key ) Parameters : key (number): The scan code to test. Constants available through tes3.scanCode . Returns : result (boolean) isKeyReleasedThisFrame \u2693\ufe0e Checks to see if a given scan code is released, and was pressed last frame. local result = tes3inputController : isKeyReleasedThisFrame ( key ) Parameters : key (number): The scan code to test. Constants available through tes3.scanCode . Returns : result (boolean) isMouseButtonDown \u2693\ufe0e Returns the mouse down state for a given mouse button. local result = tes3inputController : isMouseButtonDown ( button ) Parameters : button (number): The mouse button to test. Must be between 0 and 7 . Returns : result (boolean) isMouseButtonPressedThisFrame \u2693\ufe0e Returns true if a mouse button was up last frame, and down this frame. local result = tes3inputController : isMouseButtonPressedThisFrame ( button ) Parameters : button (number): The mouse button to test. Must be between 0 and 7 . Returns : result (boolean) isMouseButtonReleasedThisFrame \u2693\ufe0e Returns true if a mouse button was down last frame, and up this frame. local result = tes3inputController : isMouseButtonReleasedThisFrame ( button ) Parameters : button (number): The mouse button to test. Must be between 0 and 7 . Returns : result (boolean) isShiftDown \u2693\ufe0e Returns true if either shift modifier key is pressed. It does not take into account caps lock. local isPressed = tes3inputController : isShiftDown () Returns : isPressed (boolean): True if either shift key is pressed. isSuperDown \u2693\ufe0e Returns true if either super/windows modifier key is pressed. local isPressed = tes3inputController : isSuperDown () Returns : isPressed (boolean): True if either super/windows key is pressed. keybindTest \u2693\ufe0e Performs a test for a given keybind, and optionally a transition state. local result = tes3inputController : keybindTest ( key , transition ) Parameters : key (number): The keybind to test. Constants available through tes3.keybind . transition (number): Optional . Transition state, e.g. down, or up. Constants available through tes3.keyTransition . Returns : result (boolean)","title":"tes3inputController"},{"location":"types/tes3inputController/#tes3inputcontroller","text":"A data structure, off of the world controller, that handles input.","title":"tes3inputController"},{"location":"types/tes3inputController/#properties","text":"","title":"Properties"},{"location":"types/tes3inputController/#creationflags","text":"Read-only . A bit field representing device capabilities and settings. Returns : result (number)","title":"creationFlags"},{"location":"types/tes3inputController/#inputmaps","text":"Read-only . The array-style access to input bindings. Returns : result (table)","title":"inputMaps"},{"location":"types/tes3inputController/#keyboardstate","text":"Read-only . The array-style access to raw key states. Returns : result (table)","title":"keyboardState"},{"location":"types/tes3inputController/#mousestate","text":"Read-only . The raw DirectInput mouse state. Returns : result ( tes3directInputMouseState )","title":"mouseState"},{"location":"types/tes3inputController/#previouskeyboardstate","text":"Read-only . The array-style access to the previous frame's raw key states. Returns : result (table)","title":"previousKeyboardState"},{"location":"types/tes3inputController/#previousmousestate","text":"Read-only . The raw DirectInput mouse state for the previous state. Returns : result ( tes3directInputMouseState )","title":"previousMouseState"},{"location":"types/tes3inputController/#methods","text":"","title":"Methods"},{"location":"types/tes3inputController/#isaltdown","text":"Returns true if either alt modifier key is pressed. local isPressed = tes3inputController : isAltDown () Returns : isPressed (boolean): True if either alt key is pressed.","title":"isAltDown"},{"location":"types/tes3inputController/#iscapslockactive","text":"Returns true if the caps lock mode is active. local isPressed = tes3inputController : isCapsLockActive () Returns : isPressed (boolean): True if caps lock is active.","title":"isCapsLockActive"},{"location":"types/tes3inputController/#iscontroldown","text":"Returns true if either control modifier key is pressed. local isPressed = tes3inputController : isControlDown () Returns : isPressed (boolean): True if either control key is pressed.","title":"isControlDown"},{"location":"types/tes3inputController/#iskeydown","text":"Performs a key down test for a given scan key code. local result = tes3inputController : isKeyDown ( key ) Parameters : key (number): The scan code to test. Constants available through tes3.scanCode . Returns : result (boolean)","title":"isKeyDown"},{"location":"types/tes3inputController/#iskeypressedthisframe","text":"Checks to see if a given scan code is pressed, and wasn't pressed last frame. local result = tes3inputController : isKeyPressedThisFrame ( key ) Parameters : key (number): The scan code to test. Constants available through tes3.scanCode . Returns : result (boolean)","title":"isKeyPressedThisFrame"},{"location":"types/tes3inputController/#iskeyreleasedthisframe","text":"Checks to see if a given scan code is released, and was pressed last frame. local result = tes3inputController : isKeyReleasedThisFrame ( key ) Parameters : key (number): The scan code to test. Constants available through tes3.scanCode . Returns : result (boolean)","title":"isKeyReleasedThisFrame"},{"location":"types/tes3inputController/#ismousebuttondown","text":"Returns the mouse down state for a given mouse button. local result = tes3inputController : isMouseButtonDown ( button ) Parameters : button (number): The mouse button to test. Must be between 0 and 7 . Returns : result (boolean)","title":"isMouseButtonDown"},{"location":"types/tes3inputController/#ismousebuttonpressedthisframe","text":"Returns true if a mouse button was up last frame, and down this frame. local result = tes3inputController : isMouseButtonPressedThisFrame ( button ) Parameters : button (number): The mouse button to test. Must be between 0 and 7 . Returns : result (boolean)","title":"isMouseButtonPressedThisFrame"},{"location":"types/tes3inputController/#ismousebuttonreleasedthisframe","text":"Returns true if a mouse button was down last frame, and up this frame. local result = tes3inputController : isMouseButtonReleasedThisFrame ( button ) Parameters : button (number): The mouse button to test. Must be between 0 and 7 . Returns : result (boolean)","title":"isMouseButtonReleasedThisFrame"},{"location":"types/tes3inputController/#isshiftdown","text":"Returns true if either shift modifier key is pressed. It does not take into account caps lock. local isPressed = tes3inputController : isShiftDown () Returns : isPressed (boolean): True if either shift key is pressed.","title":"isShiftDown"},{"location":"types/tes3inputController/#issuperdown","text":"Returns true if either super/windows modifier key is pressed. local isPressed = tes3inputController : isSuperDown () Returns : isPressed (boolean): True if either super/windows key is pressed.","title":"isSuperDown"},{"location":"types/tes3inputController/#keybindtest","text":"Performs a test for a given keybind, and optionally a transition state. local result = tes3inputController : keybindTest ( key , transition ) Parameters : key (number): The keybind to test. Constants available through tes3.keybind . transition (number): Optional . Transition state, e.g. down, or up. Constants available through tes3.keyTransition . Returns : result (boolean)","title":"keybindTest"},{"location":"types/tes3inventory/","text":"tes3inventory \u2693\ufe0e An inventory composes of an iterator, and flags caching the state of the inventory. Properties \u2693\ufe0e flags \u2693\ufe0e Read-only . Raw bit-based flags. Returns : result (number) items \u2693\ufe0e Read-only . Direct acces to the container that holds the inventory's items. Returns : result ( tes3iterator ) iterator \u2693\ufe0e Read-only . Deprecated. Use for index, stack in pairs(inventory) to iterate over inventory stacks. Direct access to the container that holds the inventory's items. Returns : result ( tes3iterator ) Methods \u2693\ufe0e addItem \u2693\ufe0e Adds an item into the inventory directly. This should not be used, in favor of the tes3.addItem() function. tes3inventory : addItem ({ mobile = ..., item = ..., itemData = ..., count = ... }) Parameters : params (table) mobile ( tes3mobileActor , tes3reference , string): Optional . The mobile actor whose stats will be updated. item ( tes3item ): The item to add. itemData ( tes3itemData ): Optional . Any associated item data to add. count (number): Default : 1 . The number of items to add. calculateWeight \u2693\ufe0e Calculates the weight of all items in the container. local result = tes3inventory : calculateWeight () Returns : result (number) contains \u2693\ufe0e Checks to see if the inventory contains an item. local result = tes3inventory : contains ( item , itemData ) Parameters : item ( tes3item , string): The item to check for. itemData ( tes3itemData ): Optional . If provided, it will check for the specific data as well. Returns : result (boolean) dropItem \u2693\ufe0e Checks to see if the inventory contains an item. This should not be used, instead use the tes3.dropItem() function. tes3inventory : dropItem ( mobile , item , itemData , count , position , orientation , ignoreItemData ) Parameters : mobile ( tes3mobileActor , tes3reference , string): The mobile actor whose stats will be updated. item ( tes3item , string): The item to drop. itemData ( tes3itemData ): If provided, it will check for the specific data to drop it. count (number): The number of items to drop. position ( tes3vector3 ): A vector determining placement location. orientation ( tes3vector3 ): A vector determining placement rotation. ignoreItemData (boolean) findItemStack \u2693\ufe0e Searches for an item stack in the inventory. local result = tes3inventory : findItemStack ( item ) Parameters : item ( tes3item ): The item to search for. Returns : result ( tes3itemStack ) removeItem \u2693\ufe0e Removes an item from the inventory directly. This should not be used, in favor of the tes3.removeItem() function. tes3inventory : removeItem ({ mobile = ..., item = ..., itemData = ..., count = ..., deleteItemData = ... }) Parameters : params (table) mobile ( tes3mobileActor , tes3reference , string): Optional . The mobile actor whose stats will be updated. item ( tes3item ): The item to add. itemData ( tes3itemData ): Optional . Any associated item data to add. count (number): Default : 1 . The number of items to add. deleteItemData (boolean): If set, the itemData will be deleted after being removed. resolveLeveledItems \u2693\ufe0e Resolves all contained leveled lists and adds the randomized items to the inventory. This should generally not be called directly. tes3inventory : resolveLeveledItems ( mobile ) Parameters : mobile ( tes3mobileActor ): Optional . The mobile actor whose stats will be updated.","title":"tes3inventory"},{"location":"types/tes3inventory/#tes3inventory","text":"An inventory composes of an iterator, and flags caching the state of the inventory.","title":"tes3inventory"},{"location":"types/tes3inventory/#properties","text":"","title":"Properties"},{"location":"types/tes3inventory/#flags","text":"Read-only . Raw bit-based flags. Returns : result (number)","title":"flags"},{"location":"types/tes3inventory/#items","text":"Read-only . Direct acces to the container that holds the inventory's items. Returns : result ( tes3iterator )","title":"items"},{"location":"types/tes3inventory/#iterator","text":"Read-only . Deprecated. Use for index, stack in pairs(inventory) to iterate over inventory stacks. Direct access to the container that holds the inventory's items. Returns : result ( tes3iterator )","title":"iterator"},{"location":"types/tes3inventory/#methods","text":"","title":"Methods"},{"location":"types/tes3inventory/#additem","text":"Adds an item into the inventory directly. This should not be used, in favor of the tes3.addItem() function. tes3inventory : addItem ({ mobile = ..., item = ..., itemData = ..., count = ... }) Parameters : params (table) mobile ( tes3mobileActor , tes3reference , string): Optional . The mobile actor whose stats will be updated. item ( tes3item ): The item to add. itemData ( tes3itemData ): Optional . Any associated item data to add. count (number): Default : 1 . The number of items to add.","title":"addItem"},{"location":"types/tes3inventory/#calculateweight","text":"Calculates the weight of all items in the container. local result = tes3inventory : calculateWeight () Returns : result (number)","title":"calculateWeight"},{"location":"types/tes3inventory/#contains","text":"Checks to see if the inventory contains an item. local result = tes3inventory : contains ( item , itemData ) Parameters : item ( tes3item , string): The item to check for. itemData ( tes3itemData ): Optional . If provided, it will check for the specific data as well. Returns : result (boolean)","title":"contains"},{"location":"types/tes3inventory/#dropitem","text":"Checks to see if the inventory contains an item. This should not be used, instead use the tes3.dropItem() function. tes3inventory : dropItem ( mobile , item , itemData , count , position , orientation , ignoreItemData ) Parameters : mobile ( tes3mobileActor , tes3reference , string): The mobile actor whose stats will be updated. item ( tes3item , string): The item to drop. itemData ( tes3itemData ): If provided, it will check for the specific data to drop it. count (number): The number of items to drop. position ( tes3vector3 ): A vector determining placement location. orientation ( tes3vector3 ): A vector determining placement rotation. ignoreItemData (boolean)","title":"dropItem"},{"location":"types/tes3inventory/#finditemstack","text":"Searches for an item stack in the inventory. local result = tes3inventory : findItemStack ( item ) Parameters : item ( tes3item ): The item to search for. Returns : result ( tes3itemStack )","title":"findItemStack"},{"location":"types/tes3inventory/#removeitem","text":"Removes an item from the inventory directly. This should not be used, in favor of the tes3.removeItem() function. tes3inventory : removeItem ({ mobile = ..., item = ..., itemData = ..., count = ..., deleteItemData = ... }) Parameters : params (table) mobile ( tes3mobileActor , tes3reference , string): Optional . The mobile actor whose stats will be updated. item ( tes3item ): The item to add. itemData ( tes3itemData ): Optional . Any associated item data to add. count (number): Default : 1 . The number of items to add. deleteItemData (boolean): If set, the itemData will be deleted after being removed.","title":"removeItem"},{"location":"types/tes3inventory/#resolveleveleditems","text":"Resolves all contained leveled lists and adds the randomized items to the inventory. This should generally not be called directly. tes3inventory : resolveLeveledItems ( mobile ) Parameters : mobile ( tes3mobileActor ): Optional . The mobile actor whose stats will be updated.","title":"resolveLeveledItems"},{"location":"types/tes3inventoryTile/","text":"tes3inventoryTile \u2693\ufe0e An inventory tile, connecting an item, its data, and various related UI elements. Properties \u2693\ufe0e count \u2693\ufe0e Read-only . The number of items that the tile represents. Returns : result (number) element \u2693\ufe0e Read-only . The UI element associated with the tile. Returns : result ( tes3uiElement ) flags \u2693\ufe0e Read-only . Direct access to the tile's flags. Use .isBartered , .isBoundItem , or .isEquipped to access individual flags. Returns : result (number) isBartered \u2693\ufe0e If true , the tile represents an item being bartered. Returns : result (boolean) isBoundItem \u2693\ufe0e Read-only . If true , the tile represents a bound item. Returns : result (boolean) isEquipped \u2693\ufe0e If true , the tile represents an item that is equipped. Returns : result (boolean) item \u2693\ufe0e Read-only . The item the tile represents. Returns : result ( tes3item ) itemData \u2693\ufe0e Read-only . The item data associated with this tile. Returns : result ( tes3itemData ) type \u2693\ufe0e Read-only . The type of tile represented. Returns : result (number)","title":"tes3inventoryTile"},{"location":"types/tes3inventoryTile/#tes3inventorytile","text":"An inventory tile, connecting an item, its data, and various related UI elements.","title":"tes3inventoryTile"},{"location":"types/tes3inventoryTile/#properties","text":"","title":"Properties"},{"location":"types/tes3inventoryTile/#count","text":"Read-only . The number of items that the tile represents. Returns : result (number)","title":"count"},{"location":"types/tes3inventoryTile/#element","text":"Read-only . The UI element associated with the tile. Returns : result ( tes3uiElement )","title":"element"},{"location":"types/tes3inventoryTile/#flags","text":"Read-only . Direct access to the tile's flags. Use .isBartered , .isBoundItem , or .isEquipped to access individual flags. Returns : result (number)","title":"flags"},{"location":"types/tes3inventoryTile/#isbartered","text":"If true , the tile represents an item being bartered. Returns : result (boolean)","title":"isBartered"},{"location":"types/tes3inventoryTile/#isbounditem","text":"Read-only . If true , the tile represents a bound item. Returns : result (boolean)","title":"isBoundItem"},{"location":"types/tes3inventoryTile/#isequipped","text":"If true , the tile represents an item that is equipped. Returns : result (boolean)","title":"isEquipped"},{"location":"types/tes3inventoryTile/#item","text":"Read-only . The item the tile represents. Returns : result ( tes3item )","title":"item"},{"location":"types/tes3inventoryTile/#itemdata","text":"Read-only . The item data associated with this tile. Returns : result ( tes3itemData )","title":"itemData"},{"location":"types/tes3inventoryTile/#type","text":"Read-only . The type of tile represented. Returns : result (number)","title":"type"},{"location":"types/tes3item/","text":"tes3item \u2693\ufe0e An item object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3item"},{"location":"types/tes3item/#tes3item","text":"An item object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject","title":"tes3item"},{"location":"types/tes3item/#properties","text":"","title":"Properties"},{"location":"types/tes3item/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3item/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3item/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3item/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3item/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3item/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3item/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3item/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3item/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3item/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3item/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3item/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3item/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3item/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3item/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3item/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3item/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3item/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3item/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3item/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3item/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3item/#methods","text":"","title":"Methods"},{"location":"types/tes3item/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3itemData/","text":"tes3itemData \u2693\ufe0e A set of variables that differentiates one item from another. Properties \u2693\ufe0e charge \u2693\ufe0e The charge of the item. Provides incorrect values on misc items, which instead have a soul actor. Returns : result (number) condition \u2693\ufe0e The condition/health of the item. Provides incorrect values on light items, which instead have a timeLeft property. Returns : result (number) context \u2693\ufe0e Returns an ease of use script context for variable access. Returns : result ( tes3scriptContext ) count \u2693\ufe0e The total number of identical items represented by this data. Reserved for use by in-world references. It should always be 1 for items in inventories. Inventories utilize the stack count in tes3itemStack object. Returns : result (number) data \u2693\ufe0e A generic lua table that data can be written to, and synced to/from the save. All information stored must be valid for serialization to json. For data that doesn't persist, use tempData . Returns : result (table) owner \u2693\ufe0e The owner of the associated item. An item can have an owner or it can be faction-owned. Returns : result ( tes3npc , tes3faction , nil) requirement \u2693\ufe0e A requirement, typically associated with ownership and when the player may freely interact with an object. The type depends on the owner. Faction owners provide a required rank as a number, while NPCs provide a global variable to check. Returns : result ( tes3globalVariable , number, nil) script \u2693\ufe0e Read-only . The script associated with the scriptVariables. Returns : result ( tes3script ) scriptVariables \u2693\ufe0e Access to the structure where individual mwscript data is stored. Returns : result (tes3scriptVariables) soul \u2693\ufe0e Only available on misc items. The actor that is stored inside the soul gem. Returns : result ( tes3actor ) tempData \u2693\ufe0e A generic lua table that data can be written to, but is not synced to/from a save. Returns : result (table) timeLeft \u2693\ufe0e The time remaining on a light. Provides incorrect values on non-light items, which instead have a condition property. Returns : result (number)","title":"tes3itemData"},{"location":"types/tes3itemData/#tes3itemdata","text":"A set of variables that differentiates one item from another.","title":"tes3itemData"},{"location":"types/tes3itemData/#properties","text":"","title":"Properties"},{"location":"types/tes3itemData/#charge","text":"The charge of the item. Provides incorrect values on misc items, which instead have a soul actor. Returns : result (number)","title":"charge"},{"location":"types/tes3itemData/#condition","text":"The condition/health of the item. Provides incorrect values on light items, which instead have a timeLeft property. Returns : result (number)","title":"condition"},{"location":"types/tes3itemData/#context","text":"Returns an ease of use script context for variable access. Returns : result ( tes3scriptContext )","title":"context"},{"location":"types/tes3itemData/#count","text":"The total number of identical items represented by this data. Reserved for use by in-world references. It should always be 1 for items in inventories. Inventories utilize the stack count in tes3itemStack object. Returns : result (number)","title":"count"},{"location":"types/tes3itemData/#data","text":"A generic lua table that data can be written to, and synced to/from the save. All information stored must be valid for serialization to json. For data that doesn't persist, use tempData . Returns : result (table)","title":"data"},{"location":"types/tes3itemData/#owner","text":"The owner of the associated item. An item can have an owner or it can be faction-owned. Returns : result ( tes3npc , tes3faction , nil)","title":"owner"},{"location":"types/tes3itemData/#requirement","text":"A requirement, typically associated with ownership and when the player may freely interact with an object. The type depends on the owner. Faction owners provide a required rank as a number, while NPCs provide a global variable to check. Returns : result ( tes3globalVariable , number, nil)","title":"requirement"},{"location":"types/tes3itemData/#script","text":"Read-only . The script associated with the scriptVariables. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3itemData/#scriptvariables","text":"Access to the structure where individual mwscript data is stored. Returns : result (tes3scriptVariables)","title":"scriptVariables"},{"location":"types/tes3itemData/#soul","text":"Only available on misc items. The actor that is stored inside the soul gem. Returns : result ( tes3actor )","title":"soul"},{"location":"types/tes3itemData/#tempdata","text":"A generic lua table that data can be written to, but is not synced to/from a save. Returns : result (table)","title":"tempData"},{"location":"types/tes3itemData/#timeleft","text":"The time remaining on a light. Provides incorrect values on non-light items, which instead have a condition property. Returns : result (number)","title":"timeLeft"},{"location":"types/tes3itemStack/","text":"tes3itemStack \u2693\ufe0e A complex container that holds a relationship between an item, and zero or more associated item datas. Properties \u2693\ufe0e count \u2693\ufe0e The total number of items in the stack. Returns : result (number) object \u2693\ufe0e The core game object that the stack represents. Returns : result ( tes3item ) variables \u2693\ufe0e A collection of variables that are associated with the stack's object, or nil if there aren't any. Returns : result (tes3TArray)","title":"tes3itemStack"},{"location":"types/tes3itemStack/#tes3itemstack","text":"A complex container that holds a relationship between an item, and zero or more associated item datas.","title":"tes3itemStack"},{"location":"types/tes3itemStack/#properties","text":"","title":"Properties"},{"location":"types/tes3itemStack/#count","text":"The total number of items in the stack. Returns : result (number)","title":"count"},{"location":"types/tes3itemStack/#object","text":"The core game object that the stack represents. Returns : result ( tes3item )","title":"object"},{"location":"types/tes3itemStack/#variables","text":"A collection of variables that are associated with the stack's object, or nil if there aren't any. Returns : result (tes3TArray)","title":"variables"},{"location":"types/tes3iterator/","text":"tes3iterator \u2693\ufe0e A collection that can be iterated over Contains items in a simple linked list, and stores its head/tail. Properties \u2693\ufe0e current \u2693\ufe0e Read-only . A reference for the currently iterated node. This is used by the core game engine, but should not be accessed from lua. Returns : result ( tes3iteratorNode ) head \u2693\ufe0e Read-only . The first node in the collection. Returns : result ( tes3iteratorNode ) size \u2693\ufe0e Read-only . The amount of items in the iterator. Returns : result (number) tail \u2693\ufe0e Read-only . The last node in the collection. Returns : result ( tes3iteratorNode ) Example: Iterating Lists -- Check player equipment for _ , stack in pairs ( tes3 . player . object . equipment ) do -- stack is type tes3equipmentStack, as tes3.player.object.equipment is a list of tes3equipmentStack. mwse . log ( \"Equipment object ID: %s\" , stack . object . id ) end -- tes3.player.object.spells is a tes3spellList with helper functions. -- The actual list is spells.iterator. for _ , spell in pairs ( tes3 . player . object . spells . iterator ) do -- spell is type tes3spell, as tes3.player.object.spells.iterator is a list of spell. mwse . log ( \"Spell %s, cost %d\" , spell . name , spell . magickaCost ) end","title":"tes3iterator"},{"location":"types/tes3iterator/#tes3iterator","text":"A collection that can be iterated over Contains items in a simple linked list, and stores its head/tail.","title":"tes3iterator"},{"location":"types/tes3iterator/#properties","text":"","title":"Properties"},{"location":"types/tes3iterator/#current","text":"Read-only . A reference for the currently iterated node. This is used by the core game engine, but should not be accessed from lua. Returns : result ( tes3iteratorNode )","title":"current"},{"location":"types/tes3iterator/#head","text":"Read-only . The first node in the collection. Returns : result ( tes3iteratorNode )","title":"head"},{"location":"types/tes3iterator/#size","text":"Read-only . The amount of items in the iterator. Returns : result (number)","title":"size"},{"location":"types/tes3iterator/#tail","text":"Read-only . The last node in the collection. Returns : result ( tes3iteratorNode ) Example: Iterating Lists -- Check player equipment for _ , stack in pairs ( tes3 . player . object . equipment ) do -- stack is type tes3equipmentStack, as tes3.player.object.equipment is a list of tes3equipmentStack. mwse . log ( \"Equipment object ID: %s\" , stack . object . id ) end -- tes3.player.object.spells is a tes3spellList with helper functions. -- The actual list is spells.iterator. for _ , spell in pairs ( tes3 . player . object . spells . iterator ) do -- spell is type tes3spell, as tes3.player.object.spells.iterator is a list of spell. mwse . log ( \"Spell %s, cost %d\" , spell . name , spell . magickaCost ) end","title":"tail"},{"location":"types/tes3iteratorNode/","text":"tes3iteratorNode \u2693\ufe0e A node from a collection, which has a link to the previous and next node, as well as its contained data. Properties \u2693\ufe0e data \u2693\ufe0e Read-only . The data stored in the node. Its type depends on the specific collection. head \u2693\ufe0e Read-only . The previous node in the collection. Returns : result ( tes3iteratorNode ) tail \u2693\ufe0e Read-only . The next node in the collection. Returns : result ( tes3iteratorNode )","title":"tes3iteratorNode"},{"location":"types/tes3iteratorNode/#tes3iteratornode","text":"A node from a collection, which has a link to the previous and next node, as well as its contained data.","title":"tes3iteratorNode"},{"location":"types/tes3iteratorNode/#properties","text":"","title":"Properties"},{"location":"types/tes3iteratorNode/#data","text":"Read-only . The data stored in the node. Its type depends on the specific collection.","title":"data"},{"location":"types/tes3iteratorNode/#head","text":"Read-only . The previous node in the collection. Returns : result ( tes3iteratorNode )","title":"head"},{"location":"types/tes3iteratorNode/#tail","text":"Read-only . The next node in the collection. Returns : result ( tes3iteratorNode )","title":"tail"},{"location":"types/tes3leveledCreature/","text":"tes3leveledCreature \u2693\ufe0e A leveled creature game object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) calculateFromAllLevels \u2693\ufe0e If true , the leveled list is picked from the entire level range, instead of just the highest. Returns : result (boolean) chanceForNothing \u2693\ufe0e The percent chance, from 0 to 100 , for no object to be chosen. Returns : result (number) count \u2693\ufe0e Read-only . The number of possible options in the leveled object container. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) flags \u2693\ufe0e A numerical representation of bit flags for the object. Returns : result (number) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) list \u2693\ufe0e Read-only . The collection that contains tes3leveledListNode s. Returns : result ( tes3iterator ) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) insert \u2693\ufe0e This function inserts given creature in the creature leveled list. Returns true if the operation was successful. local result = tes3leveledCreature : insert ( entry , level ) Parameters : entry ( tes3baseObject ): A creature to insert. level (number): At which player level the creature can be resolved from the leveled list. Returns : result (boolean) pickFrom \u2693\ufe0e Chooses a random item from the list, based on the player's level. local result = tes3leveledCreature : pickFrom () Returns : result ( tes3creature ) remove \u2693\ufe0e This function removes a creature from the creature leveled list. Returns true if the operation was successful. local result = tes3leveledCreature : remove ( entry , level ) Parameters : entry ( tes3baseObject ): A creature to remove. level (number): At which player level the creature could be resolved from the leveled list. Returns : result (boolean)","title":"tes3leveledCreature"},{"location":"types/tes3leveledCreature/#tes3leveledcreature","text":"A leveled creature game object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject","title":"tes3leveledCreature"},{"location":"types/tes3leveledCreature/#properties","text":"","title":"Properties"},{"location":"types/tes3leveledCreature/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3leveledCreature/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3leveledCreature/#calculatefromalllevels","text":"If true , the leveled list is picked from the entire level range, instead of just the highest. Returns : result (boolean)","title":"calculateFromAllLevels"},{"location":"types/tes3leveledCreature/#chancefornothing","text":"The percent chance, from 0 to 100 , for no object to be chosen. Returns : result (number)","title":"chanceForNothing"},{"location":"types/tes3leveledCreature/#count","text":"Read-only . The number of possible options in the leveled object container. Returns : result (number)","title":"count"},{"location":"types/tes3leveledCreature/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3leveledCreature/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3leveledCreature/#flags","text":"A numerical representation of bit flags for the object. Returns : result (number)","title":"flags"},{"location":"types/tes3leveledCreature/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3leveledCreature/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3leveledCreature/#list","text":"Read-only . The collection that contains tes3leveledListNode s. Returns : result ( tes3iterator )","title":"list"},{"location":"types/tes3leveledCreature/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3leveledCreature/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3leveledCreature/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3leveledCreature/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3leveledCreature/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3leveledCreature/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3leveledCreature/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3leveledCreature/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3leveledCreature/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3leveledCreature/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3leveledCreature/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3leveledCreature/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3leveledCreature/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3leveledCreature/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3leveledCreature/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3leveledCreature/#methods","text":"","title":"Methods"},{"location":"types/tes3leveledCreature/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3leveledCreature/#insert","text":"This function inserts given creature in the creature leveled list. Returns true if the operation was successful. local result = tes3leveledCreature : insert ( entry , level ) Parameters : entry ( tes3baseObject ): A creature to insert. level (number): At which player level the creature can be resolved from the leveled list. Returns : result (boolean)","title":"insert"},{"location":"types/tes3leveledCreature/#pickfrom","text":"Chooses a random item from the list, based on the player's level. local result = tes3leveledCreature : pickFrom () Returns : result ( tes3creature )","title":"pickFrom"},{"location":"types/tes3leveledCreature/#remove","text":"This function removes a creature from the creature leveled list. Returns true if the operation was successful. local result = tes3leveledCreature : remove ( entry , level ) Parameters : entry ( tes3baseObject ): A creature to remove. level (number): At which player level the creature could be resolved from the leveled list. Returns : result (boolean)","title":"remove"},{"location":"types/tes3leveledItem/","text":"tes3leveledItem \u2693\ufe0e A leveled creature game object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) calculateForEachItem \u2693\ufe0e If true , each entry is rolled in the leveled list when resolving items. This can result in multiple items from one list being added. Returns : result (boolean) calculateFromAllLevels \u2693\ufe0e If true , the leveled list is picked from the entire level range, instead of just the highest. Returns : result (boolean) chanceForNothing \u2693\ufe0e The percent chance, from 0 to 100 , for no object to be chosen. Returns : result (number) count \u2693\ufe0e Read-only . The number of possible options in the leveled object container. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) flags \u2693\ufe0e A numerical representation of bit flags for the object. Returns : result (number) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) list \u2693\ufe0e Read-only . The collection that contains tes3leveledListNode s. Returns : result ( tes3iterator ) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) insert \u2693\ufe0e This function inserts given item in the leveled list. Returns true if the operation was successful. local result = tes3leveledItem : insert ( entry , level ) Parameters : entry ( tes3baseObject ): An item to insert. level (number): At which player level the item can be resolved from the leveled list. Returns : result (boolean) pickFrom \u2693\ufe0e Chooses a random item from the list, based on the player's level. local result = tes3leveledItem : pickFrom () Returns : result ( tes3item ) remove \u2693\ufe0e This function removes an item from the leveled list. Returns true if the operation was successful. local result = tes3leveledItem : remove ( entry , level ) Parameters : entry ( tes3baseObject ): An item to remove. level (number): At which player level the item could be resolved from the leveled list. Returns : result (boolean)","title":"tes3leveledItem"},{"location":"types/tes3leveledItem/#tes3leveleditem","text":"A leveled creature game object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject","title":"tes3leveledItem"},{"location":"types/tes3leveledItem/#properties","text":"","title":"Properties"},{"location":"types/tes3leveledItem/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3leveledItem/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3leveledItem/#calculateforeachitem","text":"If true , each entry is rolled in the leveled list when resolving items. This can result in multiple items from one list being added. Returns : result (boolean)","title":"calculateForEachItem"},{"location":"types/tes3leveledItem/#calculatefromalllevels","text":"If true , the leveled list is picked from the entire level range, instead of just the highest. Returns : result (boolean)","title":"calculateFromAllLevels"},{"location":"types/tes3leveledItem/#chancefornothing","text":"The percent chance, from 0 to 100 , for no object to be chosen. Returns : result (number)","title":"chanceForNothing"},{"location":"types/tes3leveledItem/#count","text":"Read-only . The number of possible options in the leveled object container. Returns : result (number)","title":"count"},{"location":"types/tes3leveledItem/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3leveledItem/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3leveledItem/#flags","text":"A numerical representation of bit flags for the object. Returns : result (number)","title":"flags"},{"location":"types/tes3leveledItem/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3leveledItem/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3leveledItem/#list","text":"Read-only . The collection that contains tes3leveledListNode s. Returns : result ( tes3iterator )","title":"list"},{"location":"types/tes3leveledItem/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3leveledItem/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3leveledItem/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3leveledItem/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3leveledItem/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3leveledItem/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3leveledItem/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3leveledItem/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3leveledItem/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3leveledItem/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3leveledItem/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3leveledItem/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3leveledItem/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3leveledItem/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3leveledItem/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3leveledItem/#methods","text":"","title":"Methods"},{"location":"types/tes3leveledItem/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3leveledItem/#insert","text":"This function inserts given item in the leveled list. Returns true if the operation was successful. local result = tes3leveledItem : insert ( entry , level ) Parameters : entry ( tes3baseObject ): An item to insert. level (number): At which player level the item can be resolved from the leveled list. Returns : result (boolean)","title":"insert"},{"location":"types/tes3leveledItem/#pickfrom","text":"Chooses a random item from the list, based on the player's level. local result = tes3leveledItem : pickFrom () Returns : result ( tes3item )","title":"pickFrom"},{"location":"types/tes3leveledItem/#remove","text":"This function removes an item from the leveled list. Returns true if the operation was successful. local result = tes3leveledItem : remove ( entry , level ) Parameters : entry ( tes3baseObject ): An item to remove. level (number): At which player level the item could be resolved from the leveled list. Returns : result (boolean)","title":"remove"},{"location":"types/tes3leveledListNode/","text":"tes3leveledListNode \u2693\ufe0e A simple collection that maps an object in a leveled list to a level required for that object to spawn. Properties \u2693\ufe0e levelRequired \u2693\ufe0e The minimum level the player must meet before the node can be used. Returns : result (number) object \u2693\ufe0e The item or creature that can be resolved. Returns : result ( tes3physicalObject )","title":"tes3leveledListNode"},{"location":"types/tes3leveledListNode/#tes3leveledlistnode","text":"A simple collection that maps an object in a leveled list to a level required for that object to spawn.","title":"tes3leveledListNode"},{"location":"types/tes3leveledListNode/#properties","text":"","title":"Properties"},{"location":"types/tes3leveledListNode/#levelrequired","text":"The minimum level the player must meet before the node can be used. Returns : result (number)","title":"levelRequired"},{"location":"types/tes3leveledListNode/#object","text":"The item or creature that can be resolved. Returns : result ( tes3physicalObject )","title":"object"},{"location":"types/tes3light/","text":"tes3light \u2693\ufe0e A core light object. This isn't actually a light in the rendering engine, but something like a lamp or torch. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) canCarry \u2693\ufe0e Access to the light's flags, determining if the light can be carried. Returns : result (boolean) color \u2693\ufe0e Read-only . Access to the light's base colors, in an array-style table of four values. The values can range from 0 to 255. Returns : result (table) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) flickers \u2693\ufe0e Access to the light's flags, determining if the light attenuation flickers. Returns : result (boolean) flickersSlowly \u2693\ufe0e Access to the light's flags, determining if the light attenuation flickers slowly. Returns : result (boolean) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isDynamic \u2693\ufe0e Access to the light's flags, determining if the light affects dynamically moving objects. Returns : result (boolean) isFire \u2693\ufe0e Access to the light's flags, determining if the light represents flame. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) isNegative \u2693\ufe0e Access to the light's flags, determining if the object creates darkness. Returns : result (boolean) isOffByDefault \u2693\ufe0e Access to the light's flags, determining if the light won't be active initially. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) pulses \u2693\ufe0e Access to the light's flags, determining if the light attenuation pulses. Returns : result (boolean) pulsesSlowly \u2693\ufe0e Access to the light's flags, determining if the light attenuation pulses slowly. Returns : result (boolean) radius \u2693\ufe0e The base radius of the light. Returns : result (number) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e Read-only . The script that runs on the object. Returns : result ( tes3script ) sound \u2693\ufe0e Read-only . The sound that runs on the object. Returns : result ( tes3sound ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) time \u2693\ufe0e The amount of time that the light will last. Returns : result (number) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) getTimeLeft \u2693\ufe0e Gets the time remaining for a light, given a tes3itemData , tes3reference , or tes3equipmentStack . local result = tes3light : getTimeLeft ( data ) Parameters : data ( tes3reference , tes3itemData , tes3equipmentStack ) Returns : result (number)","title":"tes3light"},{"location":"types/tes3light/#tes3light","text":"A core light object. This isn't actually a light in the rendering engine, but something like a lamp or torch. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3light"},{"location":"types/tes3light/#properties","text":"","title":"Properties"},{"location":"types/tes3light/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3light/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3light/#cancarry","text":"Access to the light's flags, determining if the light can be carried. Returns : result (boolean)","title":"canCarry"},{"location":"types/tes3light/#color","text":"Read-only . Access to the light's base colors, in an array-style table of four values. The values can range from 0 to 255. Returns : result (table)","title":"color"},{"location":"types/tes3light/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3light/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3light/#flickers","text":"Access to the light's flags, determining if the light attenuation flickers. Returns : result (boolean)","title":"flickers"},{"location":"types/tes3light/#flickersslowly","text":"Access to the light's flags, determining if the light attenuation flickers slowly. Returns : result (boolean)","title":"flickersSlowly"},{"location":"types/tes3light/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3light/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3light/#isdynamic","text":"Access to the light's flags, determining if the light affects dynamically moving objects. Returns : result (boolean)","title":"isDynamic"},{"location":"types/tes3light/#isfire","text":"Access to the light's flags, determining if the light represents flame. Returns : result (boolean)","title":"isFire"},{"location":"types/tes3light/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3light/#isnegative","text":"Access to the light's flags, determining if the object creates darkness. Returns : result (boolean)","title":"isNegative"},{"location":"types/tes3light/#isoffbydefault","text":"Access to the light's flags, determining if the light won't be active initially. Returns : result (boolean)","title":"isOffByDefault"},{"location":"types/tes3light/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3light/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3light/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3light/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3light/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3light/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3light/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3light/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3light/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3light/#pulses","text":"Access to the light's flags, determining if the light attenuation pulses. Returns : result (boolean)","title":"pulses"},{"location":"types/tes3light/#pulsesslowly","text":"Access to the light's flags, determining if the light attenuation pulses slowly. Returns : result (boolean)","title":"pulsesSlowly"},{"location":"types/tes3light/#radius","text":"The base radius of the light. Returns : result (number)","title":"radius"},{"location":"types/tes3light/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3light/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3light/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3light/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3light/#script","text":"Read-only . The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3light/#sound","text":"Read-only . The sound that runs on the object. Returns : result ( tes3sound )","title":"sound"},{"location":"types/tes3light/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3light/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3light/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3light/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3light/#time","text":"The amount of time that the light will last. Returns : result (number)","title":"time"},{"location":"types/tes3light/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3light/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3light/#methods","text":"","title":"Methods"},{"location":"types/tes3light/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3light/#gettimeleft","text":"Gets the time remaining for a light, given a tes3itemData , tes3reference , or tes3equipmentStack . local result = tes3light : getTimeLeft ( data ) Parameters : data ( tes3reference , tes3itemData , tes3equipmentStack ) Returns : result (number)","title":"getTimeLeft"},{"location":"types/tes3lightNode/","text":"tes3lightNode \u2693\ufe0e An attachment-capable structure that maintains dynamic lights. Properties \u2693\ufe0e light \u2693\ufe0e Access to the niLight object mantained by this tes3lightNode object. Returns : result ( niLight ) value \u2693\ufe0e The flicker phase of the light. Returns : result (number)","title":"tes3lightNode"},{"location":"types/tes3lightNode/#tes3lightnode","text":"An attachment-capable structure that maintains dynamic lights.","title":"tes3lightNode"},{"location":"types/tes3lightNode/#properties","text":"","title":"Properties"},{"location":"types/tes3lightNode/#light","text":"Access to the niLight object mantained by this tes3lightNode object. Returns : result ( niLight )","title":"light"},{"location":"types/tes3lightNode/#value","text":"The flicker phase of the light. Returns : result (number)","title":"value"},{"location":"types/tes3lockNode/","text":"tes3lockNode \u2693\ufe0e An attachment-capable structure that maintains lock and trap data. Properties \u2693\ufe0e key \u2693\ufe0e The key that will open this door. Returns : result ( tes3misc ) level \u2693\ufe0e The level of the lock. Returns : result (number) locked \u2693\ufe0e The locked state. Returns : result (boolean) trap \u2693\ufe0e The trap associated with the object. Returns : result ( tes3spell )","title":"tes3lockNode"},{"location":"types/tes3lockNode/#tes3locknode","text":"An attachment-capable structure that maintains lock and trap data.","title":"tes3lockNode"},{"location":"types/tes3lockNode/#properties","text":"","title":"Properties"},{"location":"types/tes3lockNode/#key","text":"The key that will open this door. Returns : result ( tes3misc )","title":"key"},{"location":"types/tes3lockNode/#level","text":"The level of the lock. Returns : result (number)","title":"level"},{"location":"types/tes3lockNode/#locked","text":"The locked state. Returns : result (boolean)","title":"locked"},{"location":"types/tes3lockNode/#trap","text":"The trap associated with the object. Returns : result ( tes3spell )","title":"trap"},{"location":"types/tes3lockpick/","text":"tes3lockpick \u2693\ufe0e A core lockpick object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) maxCondition \u2693\ufe0e The maximum condition/health of the lockpick object. Returns : result (number) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) quality \u2693\ufe0e The quality of the object, with how much of a bonus it has. Returns : result (number) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e Read-only . The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3lockpick"},{"location":"types/tes3lockpick/#tes3lockpick","text":"A core lockpick object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3lockpick"},{"location":"types/tes3lockpick/#properties","text":"","title":"Properties"},{"location":"types/tes3lockpick/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3lockpick/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3lockpick/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3lockpick/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3lockpick/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3lockpick/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3lockpick/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3lockpick/#maxcondition","text":"The maximum condition/health of the lockpick object. Returns : result (number)","title":"maxCondition"},{"location":"types/tes3lockpick/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3lockpick/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3lockpick/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3lockpick/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3lockpick/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3lockpick/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3lockpick/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3lockpick/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3lockpick/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3lockpick/#quality","text":"The quality of the object, with how much of a bonus it has. Returns : result (number)","title":"quality"},{"location":"types/tes3lockpick/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3lockpick/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3lockpick/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3lockpick/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3lockpick/#script","text":"Read-only . The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3lockpick/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3lockpick/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3lockpick/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3lockpick/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3lockpick/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3lockpick/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3lockpick/#methods","text":"","title":"Methods"},{"location":"types/tes3lockpick/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3magicEffect/","text":"tes3magicEffect \u2693\ufe0e A core magic effect definition. Properties \u2693\ufe0e allowEnchanting \u2693\ufe0e Access to the flag that determines if this effect can be used in enchanting. Returns : result (boolean) allowSpellmaking \u2693\ufe0e Access to the flag that determines if this effect can be used with spellmaking. Returns : result (boolean) appliesOnce \u2693\ufe0e Access to the base flag that determines if this effect is applied only once. Returns : result (boolean) areaSoundEffect \u2693\ufe0e The sound effect that plays on area of effect impacts. Can be set to nil to use the default sound effect for the magic school. Returns : result ( tes3sound ) areaVisualEffect \u2693\ufe0e No description yet available. Returns : result ( tes3physicalObject ) baseFlags \u2693\ufe0e No description yet available. Returns : result (number) baseMagickaCost \u2693\ufe0e The base magicka cost to use in calculations. Returns : result (number) bigIcon \u2693\ufe0e The path to the large icon to use for the effect. This is derived from the base icon path. Returns : result (string) boltSoundEffect \u2693\ufe0e The sound effect that plays for magic projectiles. Can be set to nil to use the default sound effect for the magic school. Returns : result ( tes3sound ) boltVisualEffect \u2693\ufe0e No description yet available. Returns : result ( tes3physicalObject ) canCastSelf \u2693\ufe0e Access to the base flag that determines if this effect can be used with a range of self. Returns : result (boolean) canCastTarget \u2693\ufe0e Access to the base flag that determines if this effect can be used with a range of target. Returns : result (boolean) canCastTouch \u2693\ufe0e Access to the base flag that determines if this effect can be used with a range of touch. Returns : result (boolean) casterLinked \u2693\ufe0e Access to the base flag. Returns : result (boolean) castSoundEffect \u2693\ufe0e The sound effect that plays when casting. Can be set to nil to use the default sound effect for the magic school. Returns : result ( tes3sound ) castVisualEffect \u2693\ufe0e No description yet available. Returns : result ( tes3physicalObject ) description \u2693\ufe0e Player-facing description of the effect. Returns : result (string) flags \u2693\ufe0e Raw access to the numerical representation of flags. Typically shouldn't be used. Returns : result (number) hasContinuousVFX \u2693\ufe0e Access to the base flag that determines if this effect's VFX continuously plays. Returns : result (boolean) hasNoDuration \u2693\ufe0e Access to the base flag that determines if this effect doesn't use a duration. Returns : result (boolean) hasNoMagnitude \u2693\ufe0e Access to the base flag that determines if this effect doesn't make use of its magnitude. Returns : result (boolean) hitSoundEffect \u2693\ufe0e The sound effect that plays when the effect hits a target. Can be set to nil to use the default sound effect for the magic school. Returns : result ( tes3sound ) hitVisualEffect \u2693\ufe0e No description yet available. Returns : result ( tes3physicalObject ) icon \u2693\ufe0e The path to the icon to use for the effect. Returns : result (string) illegalDaedra \u2693\ufe0e Access to the base flag that determines if this effect summons an illegal daedra. This flag isn't used. Returns : result (boolean) isHarmful \u2693\ufe0e Access to the base flag that determines if this effect is counted as a hostile action. Returns : result (boolean) lightingBlue \u2693\ufe0e The amount of blue lighting to use when lighting projectiles. Returns : result (number) lightingGreen \u2693\ufe0e The amount of green lighting to use when lighting projectiles. Returns : result (number) lightingRed \u2693\ufe0e The amount of red lighting to use when lighting projectiles. Returns : result (number) name \u2693\ufe0e Read-only . Player-facing name of the effect. Returns : result (string) nonRecastable \u2693\ufe0e Access to the base flag that determines if this effect can be refreshed by recasting. Returns : result (boolean) particleTexture \u2693\ufe0e Read-only . The path to use for the particle effect texture. Returns : result (boolean) school \u2693\ufe0e The school that the effect is associated with. Returns : result (number) size \u2693\ufe0e No description yet available. Returns : result (number) sizeCap \u2693\ufe0e No description yet available. Returns : result (number) skill \u2693\ufe0e Read-only . The skill for the associated school that the effect is associated with. Returns : result (number) speed \u2693\ufe0e No description yet available. Returns : result (number) spellFailureSoundEffect \u2693\ufe0e The sound effect that plays when a spell fails to cast, and when magic is resisted. This is determined only by the spell school. Returns : result ( tes3sound ) targetsAttributes \u2693\ufe0e Access to the base flag that determines if this effect makes use of attributes. Returns : result (boolean) targetsSkills \u2693\ufe0e Access to the base flag that determines if this effect makes use of skills. Returns : result (boolean) unreflectable \u2693\ufe0e Access to the base flag that determines if this effect can't be reflected. Returns : result (boolean) usesNegativeLighting \u2693\ufe0e Access to the base flag that determines if this effect provides negative lighting. Returns : result (boolean)","title":"tes3magicEffect"},{"location":"types/tes3magicEffect/#tes3magiceffect","text":"A core magic effect definition.","title":"tes3magicEffect"},{"location":"types/tes3magicEffect/#properties","text":"","title":"Properties"},{"location":"types/tes3magicEffect/#allowenchanting","text":"Access to the flag that determines if this effect can be used in enchanting. Returns : result (boolean)","title":"allowEnchanting"},{"location":"types/tes3magicEffect/#allowspellmaking","text":"Access to the flag that determines if this effect can be used with spellmaking. Returns : result (boolean)","title":"allowSpellmaking"},{"location":"types/tes3magicEffect/#appliesonce","text":"Access to the base flag that determines if this effect is applied only once. Returns : result (boolean)","title":"appliesOnce"},{"location":"types/tes3magicEffect/#areasoundeffect","text":"The sound effect that plays on area of effect impacts. Can be set to nil to use the default sound effect for the magic school. Returns : result ( tes3sound )","title":"areaSoundEffect"},{"location":"types/tes3magicEffect/#areavisualeffect","text":"No description yet available. Returns : result ( tes3physicalObject )","title":"areaVisualEffect"},{"location":"types/tes3magicEffect/#baseflags","text":"No description yet available. Returns : result (number)","title":"baseFlags"},{"location":"types/tes3magicEffect/#basemagickacost","text":"The base magicka cost to use in calculations. Returns : result (number)","title":"baseMagickaCost"},{"location":"types/tes3magicEffect/#bigicon","text":"The path to the large icon to use for the effect. This is derived from the base icon path. Returns : result (string)","title":"bigIcon"},{"location":"types/tes3magicEffect/#boltsoundeffect","text":"The sound effect that plays for magic projectiles. Can be set to nil to use the default sound effect for the magic school. Returns : result ( tes3sound )","title":"boltSoundEffect"},{"location":"types/tes3magicEffect/#boltvisualeffect","text":"No description yet available. Returns : result ( tes3physicalObject )","title":"boltVisualEffect"},{"location":"types/tes3magicEffect/#cancastself","text":"Access to the base flag that determines if this effect can be used with a range of self. Returns : result (boolean)","title":"canCastSelf"},{"location":"types/tes3magicEffect/#cancasttarget","text":"Access to the base flag that determines if this effect can be used with a range of target. Returns : result (boolean)","title":"canCastTarget"},{"location":"types/tes3magicEffect/#cancasttouch","text":"Access to the base flag that determines if this effect can be used with a range of touch. Returns : result (boolean)","title":"canCastTouch"},{"location":"types/tes3magicEffect/#casterlinked","text":"Access to the base flag. Returns : result (boolean)","title":"casterLinked"},{"location":"types/tes3magicEffect/#castsoundeffect","text":"The sound effect that plays when casting. Can be set to nil to use the default sound effect for the magic school. Returns : result ( tes3sound )","title":"castSoundEffect"},{"location":"types/tes3magicEffect/#castvisualeffect","text":"No description yet available. Returns : result ( tes3physicalObject )","title":"castVisualEffect"},{"location":"types/tes3magicEffect/#description","text":"Player-facing description of the effect. Returns : result (string)","title":"description"},{"location":"types/tes3magicEffect/#flags","text":"Raw access to the numerical representation of flags. Typically shouldn't be used. Returns : result (number)","title":"flags"},{"location":"types/tes3magicEffect/#hascontinuousvfx","text":"Access to the base flag that determines if this effect's VFX continuously plays. Returns : result (boolean)","title":"hasContinuousVFX"},{"location":"types/tes3magicEffect/#hasnoduration","text":"Access to the base flag that determines if this effect doesn't use a duration. Returns : result (boolean)","title":"hasNoDuration"},{"location":"types/tes3magicEffect/#hasnomagnitude","text":"Access to the base flag that determines if this effect doesn't make use of its magnitude. Returns : result (boolean)","title":"hasNoMagnitude"},{"location":"types/tes3magicEffect/#hitsoundeffect","text":"The sound effect that plays when the effect hits a target. Can be set to nil to use the default sound effect for the magic school. Returns : result ( tes3sound )","title":"hitSoundEffect"},{"location":"types/tes3magicEffect/#hitvisualeffect","text":"No description yet available. Returns : result ( tes3physicalObject )","title":"hitVisualEffect"},{"location":"types/tes3magicEffect/#icon","text":"The path to the icon to use for the effect. Returns : result (string)","title":"icon"},{"location":"types/tes3magicEffect/#illegaldaedra","text":"Access to the base flag that determines if this effect summons an illegal daedra. This flag isn't used. Returns : result (boolean)","title":"illegalDaedra"},{"location":"types/tes3magicEffect/#isharmful","text":"Access to the base flag that determines if this effect is counted as a hostile action. Returns : result (boolean)","title":"isHarmful"},{"location":"types/tes3magicEffect/#lightingblue","text":"The amount of blue lighting to use when lighting projectiles. Returns : result (number)","title":"lightingBlue"},{"location":"types/tes3magicEffect/#lightinggreen","text":"The amount of green lighting to use when lighting projectiles. Returns : result (number)","title":"lightingGreen"},{"location":"types/tes3magicEffect/#lightingred","text":"The amount of red lighting to use when lighting projectiles. Returns : result (number)","title":"lightingRed"},{"location":"types/tes3magicEffect/#name","text":"Read-only . Player-facing name of the effect. Returns : result (string)","title":"name"},{"location":"types/tes3magicEffect/#nonrecastable","text":"Access to the base flag that determines if this effect can be refreshed by recasting. Returns : result (boolean)","title":"nonRecastable"},{"location":"types/tes3magicEffect/#particletexture","text":"Read-only . The path to use for the particle effect texture. Returns : result (boolean)","title":"particleTexture"},{"location":"types/tes3magicEffect/#school","text":"The school that the effect is associated with. Returns : result (number)","title":"school"},{"location":"types/tes3magicEffect/#size","text":"No description yet available. Returns : result (number)","title":"size"},{"location":"types/tes3magicEffect/#sizecap","text":"No description yet available. Returns : result (number)","title":"sizeCap"},{"location":"types/tes3magicEffect/#skill","text":"Read-only . The skill for the associated school that the effect is associated with. Returns : result (number)","title":"skill"},{"location":"types/tes3magicEffect/#speed","text":"No description yet available. Returns : result (number)","title":"speed"},{"location":"types/tes3magicEffect/#spellfailuresoundeffect","text":"The sound effect that plays when a spell fails to cast, and when magic is resisted. This is determined only by the spell school. Returns : result ( tes3sound )","title":"spellFailureSoundEffect"},{"location":"types/tes3magicEffect/#targetsattributes","text":"Access to the base flag that determines if this effect makes use of attributes. Returns : result (boolean)","title":"targetsAttributes"},{"location":"types/tes3magicEffect/#targetsskills","text":"Access to the base flag that determines if this effect makes use of skills. Returns : result (boolean)","title":"targetsSkills"},{"location":"types/tes3magicEffect/#unreflectable","text":"Access to the base flag that determines if this effect can't be reflected. Returns : result (boolean)","title":"unreflectable"},{"location":"types/tes3magicEffect/#usesnegativelighting","text":"Access to the base flag that determines if this effect provides negative lighting. Returns : result (boolean)","title":"usesNegativeLighting"},{"location":"types/tes3magicEffectInstance/","text":"tes3magicEffectInstance \u2693\ufe0e Represents an individual instance of a magic effect being applied to a reference. Properties \u2693\ufe0e createdData \u2693\ufe0e Read-only . The bound or summoned data associated with the instance, for summoned creatures or items. The stack's object will be a reference in the case of summoned creatures. Returns : result ( tes3equipmentStack ) cumulativeMagnitude \u2693\ufe0e No description yet available. Returns : result (number) lastUsedArmor \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3armor ) lastUsedEnchItem \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3item ) lastUsedLight \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3light ) lastUsedShield \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3armor ) lastUsedWeapon \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3weapon ) magnitude \u2693\ufe0e No description yet available. Returns : result (number) resistedPercent \u2693\ufe0e No description yet available. Returns : result (number) state \u2693\ufe0e No description yet available. Returns : result (number) target \u2693\ufe0e No description yet available. Returns : result ( tes3reference ) timeActive \u2693\ufe0e No description yet available. Returns : result (number) visual \u2693\ufe0e No description yet available. Returns : result (number)","title":"tes3magicEffectInstance"},{"location":"types/tes3magicEffectInstance/#tes3magiceffectinstance","text":"Represents an individual instance of a magic effect being applied to a reference.","title":"tes3magicEffectInstance"},{"location":"types/tes3magicEffectInstance/#properties","text":"","title":"Properties"},{"location":"types/tes3magicEffectInstance/#createddata","text":"Read-only . The bound or summoned data associated with the instance, for summoned creatures or items. The stack's object will be a reference in the case of summoned creatures. Returns : result ( tes3equipmentStack )","title":"createdData"},{"location":"types/tes3magicEffectInstance/#cumulativemagnitude","text":"No description yet available. Returns : result (number)","title":"cumulativeMagnitude"},{"location":"types/tes3magicEffectInstance/#lastusedarmor","text":"Read-only . No description yet available. Returns : result ( tes3armor )","title":"lastUsedArmor"},{"location":"types/tes3magicEffectInstance/#lastusedenchitem","text":"Read-only . No description yet available. Returns : result ( tes3item )","title":"lastUsedEnchItem"},{"location":"types/tes3magicEffectInstance/#lastusedlight","text":"Read-only . No description yet available. Returns : result ( tes3light )","title":"lastUsedLight"},{"location":"types/tes3magicEffectInstance/#lastusedshield","text":"Read-only . No description yet available. Returns : result ( tes3armor )","title":"lastUsedShield"},{"location":"types/tes3magicEffectInstance/#lastusedweapon","text":"Read-only . No description yet available. Returns : result ( tes3weapon )","title":"lastUsedWeapon"},{"location":"types/tes3magicEffectInstance/#magnitude","text":"No description yet available. Returns : result (number)","title":"magnitude"},{"location":"types/tes3magicEffectInstance/#resistedpercent","text":"No description yet available. Returns : result (number)","title":"resistedPercent"},{"location":"types/tes3magicEffectInstance/#state","text":"No description yet available. Returns : result (number)","title":"state"},{"location":"types/tes3magicEffectInstance/#target","text":"No description yet available. Returns : result ( tes3reference )","title":"target"},{"location":"types/tes3magicEffectInstance/#timeactive","text":"No description yet available. Returns : result (number)","title":"timeActive"},{"location":"types/tes3magicEffectInstance/#visual","text":"No description yet available. Returns : result (number)","title":"visual"},{"location":"types/tes3magicSourceInstance/","text":"tes3magicSourceInstance \u2693\ufe0e A game structure that keeps track of a magic source on an object. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) castChanceOverride \u2693\ufe0e No description yet available. Returns : result (number) caster \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3reference ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) item \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3item ) itemData \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3itemData ) itemID \u2693\ufe0e Read-only . No description yet available. Returns : result (string) magicID \u2693\ufe0e Read-only . No description yet available. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) projectile \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3mobileProjectile ) serialNumber \u2693\ufe0e Read-only . Unique indentifier for just this magic source. Returns : result (number) source \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3alchemy , tes3enchantment , tes3spell ) sourceEffects \u2693\ufe0e Read-only . An array-style table holding spell effects this magic source has. Returns : result (table) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) sourceType \u2693\ufe0e Read-only . The type of this magic source. Maps to tes3.magicSourceType constants. Returns : result (number) state \u2693\ufe0e Shows if the state is pre-cast, cast, beginning, working, ending, retired, etc. Maps to tes3.spellState constants. Returns : result (number) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) target \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3reference ) timestampCastBegin \u2693\ufe0e No description yet available. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) getEffectInstance \u2693\ufe0e Gets the magic effect instance for a given effect index and target reference. Effect instances may not all be active on a target, due to reflect, absorption, dispels, different durations and other factors. local result = tes3magicSourceInstance : getEffectInstance ( index , target ) Parameters : index (number): The index in the effect list to fetch, between 0 and 7 . target ( tes3reference ): The target actor for the effect. Returns : result ( tes3magicEffectInstance ) getMagnitudeForIndex \u2693\ufe0e Gets the magnitude from the casting source for a given effect index. local result = tes3magicSourceInstance : getMagnitudeForIndex ( index ) Parameters : index (number): The index in the effect list to fetch, between 0 and 7 . Returns : result (number) playVisualEffect \u2693\ufe0e This function plays an animation for an effect from the tes3magicSourceInstance object. tes3magicSourceInstance : playVisualEffect ()","title":"tes3magicSourceInstance"},{"location":"types/tes3magicSourceInstance/#tes3magicsourceinstance","text":"A game structure that keeps track of a magic source on an object. This type inherits the following: tes3baseObject","title":"tes3magicSourceInstance"},{"location":"types/tes3magicSourceInstance/#properties","text":"","title":"Properties"},{"location":"types/tes3magicSourceInstance/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3magicSourceInstance/#castchanceoverride","text":"No description yet available. Returns : result (number)","title":"castChanceOverride"},{"location":"types/tes3magicSourceInstance/#caster","text":"Read-only . No description yet available. Returns : result ( tes3reference )","title":"caster"},{"location":"types/tes3magicSourceInstance/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3magicSourceInstance/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3magicSourceInstance/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3magicSourceInstance/#item","text":"Read-only . No description yet available. Returns : result ( tes3item )","title":"item"},{"location":"types/tes3magicSourceInstance/#itemdata","text":"Read-only . No description yet available. Returns : result ( tes3itemData )","title":"itemData"},{"location":"types/tes3magicSourceInstance/#itemid","text":"Read-only . No description yet available. Returns : result (string)","title":"itemID"},{"location":"types/tes3magicSourceInstance/#magicid","text":"Read-only . No description yet available. Returns : result (string)","title":"magicID"},{"location":"types/tes3magicSourceInstance/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3magicSourceInstance/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3magicSourceInstance/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3magicSourceInstance/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3magicSourceInstance/#projectile","text":"Read-only . No description yet available. Returns : result ( tes3mobileProjectile )","title":"projectile"},{"location":"types/tes3magicSourceInstance/#serialnumber","text":"Read-only . Unique indentifier for just this magic source. Returns : result (number)","title":"serialNumber"},{"location":"types/tes3magicSourceInstance/#source","text":"Read-only . No description yet available. Returns : result ( tes3alchemy , tes3enchantment , tes3spell )","title":"source"},{"location":"types/tes3magicSourceInstance/#sourceeffects","text":"Read-only . An array-style table holding spell effects this magic source has. Returns : result (table)","title":"sourceEffects"},{"location":"types/tes3magicSourceInstance/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3magicSourceInstance/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3magicSourceInstance/#sourcetype","text":"Read-only . The type of this magic source. Maps to tes3.magicSourceType constants. Returns : result (number)","title":"sourceType"},{"location":"types/tes3magicSourceInstance/#state","text":"Shows if the state is pre-cast, cast, beginning, working, ending, retired, etc. Maps to tes3.spellState constants. Returns : result (number)","title":"state"},{"location":"types/tes3magicSourceInstance/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3magicSourceInstance/#target","text":"Read-only . No description yet available. Returns : result ( tes3reference )","title":"target"},{"location":"types/tes3magicSourceInstance/#timestampcastbegin","text":"No description yet available. Returns : result (number)","title":"timestampCastBegin"},{"location":"types/tes3magicSourceInstance/#methods","text":"","title":"Methods"},{"location":"types/tes3magicSourceInstance/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3magicSourceInstance/#geteffectinstance","text":"Gets the magic effect instance for a given effect index and target reference. Effect instances may not all be active on a target, due to reflect, absorption, dispels, different durations and other factors. local result = tes3magicSourceInstance : getEffectInstance ( index , target ) Parameters : index (number): The index in the effect list to fetch, between 0 and 7 . target ( tes3reference ): The target actor for the effect. Returns : result ( tes3magicEffectInstance )","title":"getEffectInstance"},{"location":"types/tes3magicSourceInstance/#getmagnitudeforindex","text":"Gets the magnitude from the casting source for a given effect index. local result = tes3magicSourceInstance : getMagnitudeForIndex ( index ) Parameters : index (number): The index in the effect list to fetch, between 0 and 7 . Returns : result (number)","title":"getMagnitudeForIndex"},{"location":"types/tes3magicSourceInstance/#playvisualeffect","text":"This function plays an animation for an effect from the tes3magicSourceInstance object. tes3magicSourceInstance : playVisualEffect ()","title":"playVisualEffect"},{"location":"types/tes3markData/","text":"tes3markData \u2693\ufe0e A simple structure to hold mark/recall data. Properties \u2693\ufe0e cell \u2693\ufe0e Read-only . The cell to recall to. Returns : result ( tes3cell ) position \u2693\ufe0e The position to recall to. Returns : result ( tes3vector3 ) rotation \u2693\ufe0e The rotation to use when recalling. Returns : result (number)","title":"tes3markData"},{"location":"types/tes3markData/#tes3markdata","text":"A simple structure to hold mark/recall data.","title":"tes3markData"},{"location":"types/tes3markData/#properties","text":"","title":"Properties"},{"location":"types/tes3markData/#cell","text":"Read-only . The cell to recall to. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3markData/#position","text":"The position to recall to. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3markData/#rotation","text":"The rotation to use when recalling. Returns : result (number)","title":"rotation"},{"location":"types/tes3matrix33/","text":"tes3matrix33 \u2693\ufe0e A 3 by 3 matrix. Properties \u2693\ufe0e x \u2693\ufe0e The first row of the matrix. Returns : result ( tes3vector3 ) y \u2693\ufe0e The second row of the matrix. Returns : result ( tes3vector3 ) z \u2693\ufe0e The third row of the matrix. Returns : result ( tes3vector3 ) Methods \u2693\ufe0e copy \u2693\ufe0e Creates a copy of the matrix. local result = tes3matrix33 : copy () Returns : result ( tes3matrix33 ) fromEulerXYZ \u2693\ufe0e Fills the matrix with values from euler coordinates. tes3matrix33 : fromEulerXYZ ( x , y , z ) Parameters : x (number) y (number) z (number) fromEulerZYX \u2693\ufe0e Fills the matrix with values from euler coordinates. tes3matrix33 : fromEulerZYX ( z , y , x ) Parameters : z (number) y (number) x (number) invert \u2693\ufe0e Inverts the matrix. local matrix , valid = tes3matrix33 : invert () Returns : matrix ( tes3matrix33 ) valid (boolean) reorthogonalize \u2693\ufe0e Reorthogonalizes the matrix. local result = tes3matrix33 : reorthogonalize () Returns : result (boolean) toEulerXYZ \u2693\ufe0e Converts the matrix to a vector with 3 Euler angles. local isUnique , vector3 = tes3matrix33 : toEulerXYZ () Returns : isUnique (boolean) vector3 ( tes3vector3 ) toEulerZYX \u2693\ufe0e Converts the matrix to a vector with 3 Euler angles. local isUnique , vector3 = tes3matrix33 : toEulerZYX () Returns : isUnique (boolean) vector3 ( tes3vector3 ) toIdentity \u2693\ufe0e Converts the matrix to the identity matrix's values. tes3matrix33 : toIdentity () toRotation \u2693\ufe0e No description yet available. tes3matrix33 : toRotation ( angle , x , y , z ) Parameters : angle (number) x (number) y (number) z (number) toRotationX \u2693\ufe0e No description yet available. tes3matrix33 : toRotationX ( x ) Parameters : x (number) toRotationY \u2693\ufe0e No description yet available. tes3matrix33 : toRotationY ( y ) Parameters : y (number) toRotationZ \u2693\ufe0e No description yet available. tes3matrix33 : toRotationZ ( z ) Parameters : z (number) toZero \u2693\ufe0e Zeroes out all values in the matrix. tes3matrix33 : toZero () transpose \u2693\ufe0e No description yet available. local result = tes3matrix33 : transpose () Returns : result ( tes3matrix33 )","title":"tes3matrix33"},{"location":"types/tes3matrix33/#tes3matrix33","text":"A 3 by 3 matrix.","title":"tes3matrix33"},{"location":"types/tes3matrix33/#properties","text":"","title":"Properties"},{"location":"types/tes3matrix33/#x","text":"The first row of the matrix. Returns : result ( tes3vector3 )","title":"x"},{"location":"types/tes3matrix33/#y","text":"The second row of the matrix. Returns : result ( tes3vector3 )","title":"y"},{"location":"types/tes3matrix33/#z","text":"The third row of the matrix. Returns : result ( tes3vector3 )","title":"z"},{"location":"types/tes3matrix33/#methods","text":"","title":"Methods"},{"location":"types/tes3matrix33/#copy","text":"Creates a copy of the matrix. local result = tes3matrix33 : copy () Returns : result ( tes3matrix33 )","title":"copy"},{"location":"types/tes3matrix33/#fromeulerxyz","text":"Fills the matrix with values from euler coordinates. tes3matrix33 : fromEulerXYZ ( x , y , z ) Parameters : x (number) y (number) z (number)","title":"fromEulerXYZ"},{"location":"types/tes3matrix33/#fromeulerzyx","text":"Fills the matrix with values from euler coordinates. tes3matrix33 : fromEulerZYX ( z , y , x ) Parameters : z (number) y (number) x (number)","title":"fromEulerZYX"},{"location":"types/tes3matrix33/#invert","text":"Inverts the matrix. local matrix , valid = tes3matrix33 : invert () Returns : matrix ( tes3matrix33 ) valid (boolean)","title":"invert"},{"location":"types/tes3matrix33/#reorthogonalize","text":"Reorthogonalizes the matrix. local result = tes3matrix33 : reorthogonalize () Returns : result (boolean)","title":"reorthogonalize"},{"location":"types/tes3matrix33/#toeulerxyz","text":"Converts the matrix to a vector with 3 Euler angles. local isUnique , vector3 = tes3matrix33 : toEulerXYZ () Returns : isUnique (boolean) vector3 ( tes3vector3 )","title":"toEulerXYZ"},{"location":"types/tes3matrix33/#toeulerzyx","text":"Converts the matrix to a vector with 3 Euler angles. local isUnique , vector3 = tes3matrix33 : toEulerZYX () Returns : isUnique (boolean) vector3 ( tes3vector3 )","title":"toEulerZYX"},{"location":"types/tes3matrix33/#toidentity","text":"Converts the matrix to the identity matrix's values. tes3matrix33 : toIdentity ()","title":"toIdentity"},{"location":"types/tes3matrix33/#torotation","text":"No description yet available. tes3matrix33 : toRotation ( angle , x , y , z ) Parameters : angle (number) x (number) y (number) z (number)","title":"toRotation"},{"location":"types/tes3matrix33/#torotationx","text":"No description yet available. tes3matrix33 : toRotationX ( x ) Parameters : x (number)","title":"toRotationX"},{"location":"types/tes3matrix33/#torotationy","text":"No description yet available. tes3matrix33 : toRotationY ( y ) Parameters : y (number)","title":"toRotationY"},{"location":"types/tes3matrix33/#torotationz","text":"No description yet available. tes3matrix33 : toRotationZ ( z ) Parameters : z (number)","title":"toRotationZ"},{"location":"types/tes3matrix33/#tozero","text":"Zeroes out all values in the matrix. tes3matrix33 : toZero ()","title":"toZero"},{"location":"types/tes3matrix33/#transpose","text":"No description yet available. local result = tes3matrix33 : transpose () Returns : result ( tes3matrix33 )","title":"transpose"},{"location":"types/tes3matrix44/","text":"tes3matrix44 \u2693\ufe0e A 4 by 4 matrix. Properties \u2693\ufe0e w \u2693\ufe0e The 1st row of the matrix. Returns : result ( tes3vector4 ) x \u2693\ufe0e The 2nd row of the matrix. Returns : result ( tes3vector4 ) y \u2693\ufe0e The 3rd row of the matrix. Returns : result ( tes3vector4 ) z \u2693\ufe0e The 4th row of the matrix. Returns : result ( tes3vector4 ) Methods \u2693\ufe0e copy \u2693\ufe0e Creates a copy of the matrix. local result = tes3matrix44 : copy () Returns : result ( tes3matrix44 ) toZero \u2693\ufe0e Zeroes out all values in the matrix. tes3matrix44 : toZero ()","title":"tes3matrix44"},{"location":"types/tes3matrix44/#tes3matrix44","text":"A 4 by 4 matrix.","title":"tes3matrix44"},{"location":"types/tes3matrix44/#properties","text":"","title":"Properties"},{"location":"types/tes3matrix44/#w","text":"The 1st row of the matrix. Returns : result ( tes3vector4 )","title":"w"},{"location":"types/tes3matrix44/#x","text":"The 2nd row of the matrix. Returns : result ( tes3vector4 )","title":"x"},{"location":"types/tes3matrix44/#y","text":"The 3rd row of the matrix. Returns : result ( tes3vector4 )","title":"y"},{"location":"types/tes3matrix44/#z","text":"The 4th row of the matrix. Returns : result ( tes3vector4 )","title":"z"},{"location":"types/tes3matrix44/#methods","text":"","title":"Methods"},{"location":"types/tes3matrix44/#copy","text":"Creates a copy of the matrix. local result = tes3matrix44 : copy () Returns : result ( tes3matrix44 )","title":"copy"},{"location":"types/tes3matrix44/#tozero","text":"Zeroes out all values in the matrix. tes3matrix44 : toZero ()","title":"toZero"},{"location":"types/tes3misc/","text":"tes3misc \u2693\ufe0e A core miscellaneous object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isGold \u2693\ufe0e True if the misc item is a valid form of gold. Returns : result (boolean) isKey \u2693\ufe0e Access to the flag determining if this item is recognized as a key. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) isSoulGem \u2693\ufe0e Read-only . Determines if this item is a soul gem. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e Read-only . The script that runs on the object. Returns : result ( tes3script ) soulGemCapacity \u2693\ufe0e Read-only . Fetches capacity of the soul gem, if this item is a soul gem. Returns : result (number) soulGemData \u2693\ufe0e Read-only . Fetches related soul gem data, if this item is a soul gem. Returns : result ( tes3soulGemData ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) Functions \u2693\ufe0e","title":"tes3misc"},{"location":"types/tes3misc/#tes3misc","text":"A core miscellaneous object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3misc"},{"location":"types/tes3misc/#properties","text":"","title":"Properties"},{"location":"types/tes3misc/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3misc/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3misc/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3misc/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3misc/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3misc/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3misc/#isgold","text":"True if the misc item is a valid form of gold. Returns : result (boolean)","title":"isGold"},{"location":"types/tes3misc/#iskey","text":"Access to the flag determining if this item is recognized as a key. Returns : result (boolean)","title":"isKey"},{"location":"types/tes3misc/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3misc/#issoulgem","text":"Read-only . Determines if this item is a soul gem. Returns : result (boolean)","title":"isSoulGem"},{"location":"types/tes3misc/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3misc/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3misc/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3misc/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3misc/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3misc/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3misc/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3misc/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3misc/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3misc/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3misc/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3misc/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3misc/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3misc/#script","text":"Read-only . The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3misc/#soulgemcapacity","text":"Read-only . Fetches capacity of the soul gem, if this item is a soul gem. Returns : result (number)","title":"soulGemCapacity"},{"location":"types/tes3misc/#soulgemdata","text":"Read-only . Fetches related soul gem data, if this item is a soul gem. Returns : result ( tes3soulGemData )","title":"soulGemData"},{"location":"types/tes3misc/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3misc/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3misc/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3misc/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3misc/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3misc/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3misc/#methods","text":"","title":"Methods"},{"location":"types/tes3misc/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3misc/#functions","text":"","title":"Functions"},{"location":"types/tes3mobController/","text":"tes3mobController \u2693\ufe0e The controller responsible for mobile objects and collision. Properties \u2693\ufe0e processManager \u2693\ufe0e Read-only . Access to Process Manager. Returns : result ( tes3processManager ) projectileController \u2693\ufe0e Read-only . Access to Projectile Controller. Returns : result ( tes3projectileController )","title":"tes3mobController"},{"location":"types/tes3mobController/#tes3mobcontroller","text":"The controller responsible for mobile objects and collision.","title":"tes3mobController"},{"location":"types/tes3mobController/#properties","text":"","title":"Properties"},{"location":"types/tes3mobController/#processmanager","text":"Read-only . Access to Process Manager. Returns : result ( tes3processManager )","title":"processManager"},{"location":"types/tes3mobController/#projectilecontroller","text":"Read-only . Access to Projectile Controller. Returns : result ( tes3projectileController )","title":"projectileController"},{"location":"types/tes3mobileActor/","text":"tes3mobileActor \u2693\ufe0e A mobile object for a creature, NPC, or the player. This type inherits the following: tes3mobileObject Properties \u2693\ufe0e actionBeforeCombat \u2693\ufe0e Read-only . Action data stored before the actor entered combat. Returns : result ( tes3actionData ) actionData \u2693\ufe0e Read-only . Current action data. Pre-combat action data is stored in the actionBeforeCombat property. Returns : result ( tes3actionData ) activeAI \u2693\ufe0e Friendly access to the actor's flag that controls if AI is active. Returns : result (boolean) activeMagicEffectList \u2693\ufe0e Read-only . The active magic effects on the actor, from which all others can be accessed. A table with tes3activeMagicEffect items. Returns : result (table) actorType \u2693\ufe0e Read-only . The type of the mobile actor. Maps to values in tes3.actorType namespace. Returns : result (number) agility \u2693\ufe0e Read-only . Direct access to the actor's agility attribute statistic. Returns : result ( tes3statistic ) aiPlanner \u2693\ufe0e Read-only . Access to the mobile's AI planner and AI package information. Returns : result ( tes3aiPlanner ) alarm \u2693\ufe0e The actor's alarm AI value. Returns : result (number) animationController \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3actorAnimationController ) armorRating \u2693\ufe0e Read-only . The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the applyDamage function. Armour mitigation calculation: x = damage / (damage + target.armorRating) damage *= max(fCombatArmorMinMult, x) if damage < 1 then damage = 1 end Returns : result (number) attackBonus \u2693\ufe0e Direct access to the actor's attack bonus effect attribute. Returns : result (number) attacked \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor has been attacked. Returns : result (boolean) attributes \u2693\ufe0e Read-only . Access to a table of 8 tes3statistic objects for the actor's attributes. Returns : result (table) barterGold \u2693\ufe0e The current amount of gold that the actor has access to for bartering. Returns : result (number) blind \u2693\ufe0e Direct access to the actor's blind effect attribute. Returns : result (number) boundSize \u2693\ufe0e A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 ) boundSize2D \u2693\ufe0e A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 ) cell \u2693\ufe0e Read-only . Fetches the cell that the actor is in. Returns : result ( tes3cell ) cellX \u2693\ufe0e Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number) cellY \u2693\ufe0e Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number) chameleon \u2693\ufe0e Direct access to the actor's chameleon effect attribute. Returns : result (number) collidingReference \u2693\ufe0e Read-only . The reference that the mobile has collided with this frame. Returns : result ( tes3reference ) combatSession \u2693\ufe0e Read-only . Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Returns : result ( tes3combatSession ) corpseHourstamp \u2693\ufe0e No description yet available. Returns : result (number) currentEnchantedItem \u2693\ufe0e Read-only . The currently equipped enchanted item that the actor will use. Returns : result ( tes3equipmentStack ) currentSpell \u2693\ufe0e Read-only . The currently equipped spell that the actor will use. Returns : result ( tes3spell ) effectAttributes \u2693\ufe0e Read-only . Access to a table of 24 numbers for the actor's effect attributes. In order those are: attackBonus , sanctuary , resistMagicka , resistFire , resistFrost , resistShock , resistCommonDisease , resistBlightDisease , resistCorprus , resistPoison , resistParalysis , chameleon , resistNormalWeapons , waterBreathing , waterWalking , swiftSwim , jump , levitate , shield , sound , silence , blind , paralyze , and invisibility . Each of those can be accessed individually. For example, tes3mobileActor.chameleon . Returns : result (table) encumbrance \u2693\ufe0e Read-only . Access to the actor's encumbrance statistic. Returns : result ( tes3statistic ) endurance \u2693\ufe0e Read-only . Direct access to the actor's endurance attribute statistic. Returns : result ( tes3statistic ) facing \u2693\ufe0e Read-only . The facing of the actor, in radians. Returns : result (number) fatigue \u2693\ufe0e Read-only . Access to the actor's fatigue statistic. Returns : result ( tes3statistic ) fight \u2693\ufe0e The actor's fight AI value. Returns : result (number) flags \u2693\ufe0e Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (number) flee \u2693\ufe0e The actor's flee AI value. Returns : result (number) friendlyActors \u2693\ufe0e Read-only . A collection of other tes3mobileActor s that this actor considers friendly. Returns : result ( tes3iterator ) greetDuration \u2693\ufe0e No description yet available. Returns : result (number) greetTimer \u2693\ufe0e Read-only . No description yet available. Returns : result (number) health \u2693\ufe0e Read-only . Access to the actor's health statistic. Returns : result ( tes3statistic ) height \u2693\ufe0e The height of the mobile above the ground. Returns : result (number) hello \u2693\ufe0e The actor's hello AI value. Returns : result (number) holdBreathTime \u2693\ufe0e No description yet available. Returns : result (number) hostileActors \u2693\ufe0e Read-only . A collection of other tes3mobileActor s that this actor considers hostile. Returns : result ( tes3iterator ) idleAnim \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is using their idle animation. Returns : result (boolean) impulseVelocity \u2693\ufe0e A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 ) inCombat \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is in combat. Returns : result (boolean) intelligence \u2693\ufe0e Read-only . Direct access to the actor's intelligence attribute statistic. Returns : result ( tes3statistic ) invisibility \u2693\ufe0e Direct access to the actor's invisibility effect attribute. Returns : result (number) isCrittable \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor can be critically hit. Returns : result (boolean) isDead \u2693\ufe0e Read-only . True if the actor is dead. Returns : result (boolean) isFalling \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge. Returns : result (boolean) isFlying \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is flying. Returns : result (boolean) isJumping \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is jumping. Returns : result (boolean) isMovingBack \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving backwards. Returns : result (boolean) isMovingForward \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving forwards. Returns : result (boolean) isMovingLeft \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving left. Returns : result (boolean) isMovingRight \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving right. Returns : result (boolean) isPlayerDetected \u2693\ufe0e Direct access to the actor's flag showing the player was detected on the last detection check. Returns : result (boolean) isPlayerHidden \u2693\ufe0e Direct access to the actor's flag showing the player was hidden on the last detection check. Returns : result (boolean) isRunning \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is running. Returns : result (boolean) isSneaking \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is sneaking. Returns : result (boolean) isSwimming \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is swimming. Returns : result (boolean) isTurningLeft \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is turning left. Returns : result (boolean) isTurningRight \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is turning right. Returns : result (boolean) isWalking \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is walking. Returns : result (boolean) jump \u2693\ufe0e Direct access to the actor's jump effect attribute. Returns : result (number) lastGroundZ \u2693\ufe0e No description yet available. Returns : result (number) levitate \u2693\ufe0e Direct access to the actor's levitate effect attribute. Returns : result (number) luck \u2693\ufe0e Read-only . Direct access to the actor's luck attribute statistic. Returns : result ( tes3statistic ) magicka \u2693\ufe0e Read-only . Access to the actor's magicka statistic. Returns : result ( tes3statistic ) magickaMultiplier \u2693\ufe0e Read-only . Access to the actor's magicka multiplier statistic. Returns : result ( tes3statistic ) mobToMobCollision \u2693\ufe0e Allows modifying if this actor will collide with other actors. When true (default), the actor cannot move through other actors. When false , the actor is allowed to move through other actors, and other actors can move through it. May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor. Returns : result (boolean) movementCollision \u2693\ufe0e Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean) movementFlags \u2693\ufe0e Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (number) nextActionWeight \u2693\ufe0e Read-only . No description yet available. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number) paralyze \u2693\ufe0e Direct access to the actor's paralyze effect attribute. Returns : result (number) personality \u2693\ufe0e Read-only . Direct access to the actor's personality attribute statistic. Returns : result ( tes3statistic ) playerDistance \u2693\ufe0e The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number) position \u2693\ufe0e A vector that represents the 3D position of the object. Returns : result ( tes3vector3 ) prevMovementFlags \u2693\ufe0e Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (number) readiedAmmo \u2693\ufe0e The currently equipped ammo. Returns : result ( tes3equipmentStack ) readiedAmmoCount \u2693\ufe0e The number of ammo equipped for the readied ammo. Returns : result (number) readiedShield \u2693\ufe0e The currently equipped shield. Returns : result ( tes3equipmentStack ) readiedWeapon \u2693\ufe0e The currently equipped weapon. Returns : result ( tes3equipmentStack ) reference \u2693\ufe0e Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference ) resistBlightDisease \u2693\ufe0e Direct access to the actor's blight disease resistance effect attribute. Returns : result (number) resistCommonDisease \u2693\ufe0e Direct access to the actor's common disease resistance effect attribute. Returns : result (number) resistCorprus \u2693\ufe0e Direct access to the actor's corprus disease resistance effect attribute. Returns : result (number) resistFire \u2693\ufe0e Direct access to the actor's fire resistance effect attribute. Returns : result (number) resistFrost \u2693\ufe0e Direct access to the actor's frost resistance effect attribute. Returns : result (number) resistMagicka \u2693\ufe0e Direct access to the actor's magicka resistance effect attribute. Returns : result (number) resistNormalWeapons \u2693\ufe0e Direct access to the actor's normal weapon resistance effect attribute. Returns : result (number) resistParalysis \u2693\ufe0e Direct access to the actor's paralysis resistance effect attribute. Returns : result (number) resistPoison \u2693\ufe0e Direct access to the actor's poison resistance effect attribute. Returns : result (number) resistShock \u2693\ufe0e Direct access to the actor's shock resistance effect attribute. Returns : result (number) sanctuary \u2693\ufe0e Direct access to the actor's sanctuary effect attribute. Returns : result (number) scanInterval \u2693\ufe0e Read-only . No description yet available. Returns : result (number) scanTimer \u2693\ufe0e Read-only . No description yet available. Returns : result (number) shield \u2693\ufe0e Direct access to the actor's shield effect attribute. Returns : result (number) silence \u2693\ufe0e Direct access to the actor's silence effect attribute. Returns : result (number) sound \u2693\ufe0e Direct access to the actor's sound effect attribute. Returns : result (number) speed \u2693\ufe0e Read-only . Direct access to the actor's speed attribute statistic. Returns : result ( tes3statistic ) spellReadied \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor has a spell readied. Returns : result (boolean) strength \u2693\ufe0e Read-only . Direct access to the actor's strength attribute statistic. Returns : result ( tes3statistic ) swiftSwim \u2693\ufe0e Direct access to the actor's swift swim effect attribute. Returns : result (number) talkedTo \u2693\ufe0e Direct access to the actor's flag that shows it was recently talked to. Returns : result (boolean) torchSlot \u2693\ufe0e The currently equipped light. Returns : result ( tes3equipmentStack ) underwater \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is under water. Returns : result (boolean) velocity \u2693\ufe0e A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 ) waterBreathing \u2693\ufe0e Direct access to the actor's water breathing effect attribute. Returns : result (number) waterWalking \u2693\ufe0e Direct access to the actor's water walking effect attribute. Returns : result (number) weaponDrawn \u2693\ufe0e Read-only . Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again. Returns : result (boolean) weaponReady \u2693\ufe0e A flag for if the actor has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the actor to take out their weapon. Setting it to false will cause the actor to put it away. Returns : result (boolean) werewolf \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor in werewolf form. Returns : result (boolean) width \u2693\ufe0e Read-only . No description yet available. Returns : result (number) willpower \u2693\ufe0e Read-only . Direct access to the actor's willpower attribute statistic. Returns : result ( tes3statistic ) Methods \u2693\ufe0e applyDamage \u2693\ufe0e Damages the actor, with options to control mitigation and difficulty scaling. Invokes the damage and damaged events, with tes3.damageSource.script source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = tes3mobileActor : applyDamage ({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Optional . If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. applyDifficulty (boolean): Optional . If the game difficulty modifier should be applied. Must be used with the playerAttack argument to apply the correct modifier. playerAttack (boolean): Optional . If the attack came from the player. Used for difficulty calculation. doNotChangeHealth (boolean): Optional . If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit. Returns : result (number) applyFatigueDamage \u2693\ufe0e Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the damageHandToHand and damagedHandToHand events, with tes3.damageSource.script source. Returns the actual fatigue damage done. local result = tes3mobileActor : applyFatigueDamage ( fatigueDamage , swing , alwaysPlayHitVoice ) Parameters : fatigueDamage (number): The amount of fatigue damage to apply. swing (number): Optional . The attack swing magnitude, range 0-1. Only modifies hit volume. alwaysPlayHitVoice (boolean): Optional . Always play the hit reaction voiceover. Returns : result (number) applyHealthDamage \u2693\ufe0e Deprecated, please use applyDamage() instead. Damages the actor. local result = tes3mobileActor : applyHealthDamage ( damage , isPlayerAttack , scaleWithDifficulty , doNotChangeHealth ) Parameters : damage (number): The amount of damage to apply. isPlayerAttack (boolean): Used to calculate difficulty scaling. scaleWithDifficulty (boolean): Apply difficulty scaling to the damage. doNotChangeHealth (boolean): Do all the audiovisual effects of damage without the health change. Returns : result (boolean) calcEffectiveDamage \u2693\ufe0e Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = tes3mobileActor : calcEffectiveDamage ({ damage = ..., applyArmor = ..., resistAttribute = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Optional . If armor should mitigate the incoming damage. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. Returns : result (number) equip \u2693\ufe0e Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return true . local itemEquipped = tes3mobileActor : equip ({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... }) Parameters : params (table) item ( tes3item , string): The item to equip. itemData ( tes3itemData ): Optional . The item data of the specific item to equip. addItem (boolean): If true , the item will be added to the actor's inventory if needed. selectBestCondition (boolean): If true , the item in the inventory with the best condition and best charge will be selected. selectWorstCondition (boolean): If true , the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools. Returns : itemEquipped (boolean) getActiveMagicEffects \u2693\ufe0e Fetches a filtered list of the active magic effects on the actor. Returns a table with tes3activeMagicEffect items. local result = tes3mobileActor : getActiveMagicEffects ({ effect = ..., serial = ... }) Parameters : params (table): Optional . effect (number): Optional . The magic effect ID to search for. serial (number): Optional . The magic instance serial to search for. Returns : result (table) getBootsWeight \u2693\ufe0e Read-only . Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped. local result = tes3mobileActor : getBootsWeight () Returns : result (number) getFatigueTerm \u2693\ufe0e Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base)) local result = tes3mobileActor : getFatigueTerm () Returns : result (number) getPowerUseTimestamp \u2693\ufe0e Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . local timestamp = tes3mobileActor : getPowerUseTimestamp ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : timestamp (number) getSkillStatistic \u2693\ufe0e Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = tes3mobileActor : getSkillStatistic ( skillId ) Parameters : skillId (number): The index of the skill statistic to fetch. Maps to values in tes3.skill namespace. Returns : result ( tes3statisticSkill ) getSkillValue \u2693\ufe0e Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = tes3mobileActor : getSkillValue ( skillId ) Parameters : skillId (number): The index of the skill statistic's value to fetch. Maps to values in tes3.skill namespace. Returns : result (number) getViewToActor \u2693\ufe0e No description yet available. local result = tes3mobileActor : getViewToActor () Returns : result (number) getViewToPoint \u2693\ufe0e No description yet available. local result = tes3mobileActor : getViewToPoint () Returns : result (number) getViewToPointWithFacing \u2693\ufe0e No description yet available. local result = tes3mobileActor : getViewToPointWithFacing () Returns : result (number) getWeaponSpeed \u2693\ufe0e Fetches the weapon speed of the actor's currently equipped weapon, or 1.0 if no weapon is equipped. local result = tes3mobileActor : getWeaponSpeed () Returns : result (number) hasFreeAction \u2693\ufe0e If true, the actor isn't paralyzed, dead, stunned, or otherwise unable to take action. local result = tes3mobileActor : hasFreeAction () Returns : result (boolean) hasUsedPower \u2693\ufe0e Check if a power has been used and is recharging. local result = tes3mobileActor : hasUsedPower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean) isAffectedByObject \u2693\ufe0e Determines if the actor is currently being affected by a given alchemy, enchantment, or spell. local result = tes3mobileActor : isAffectedByObject ( object ) Parameters : object ( tes3alchemy , tes3enchantment , tes3spell ): The magic to check for. Returns : result (boolean) rechargePower \u2693\ufe0e Makes a power immediately available for casting again. local result = tes3mobileActor : rechargePower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (number) setPowerUseTimestamp \u2693\ufe0e Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. tes3mobileActor : setPowerUseTimestamp ( power , timestamp ) Parameters : power ( tes3spell ): The spell object for the power. timestamp (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . startCombat \u2693\ufe0e Forces the actor into combat with another actor. tes3mobileActor : startCombat ( target ) Parameters : target ( tes3mobileActor ) startDialogue \u2693\ufe0e Starts dialogue with this actor for the player. tes3mobileActor : startDialogue () stopCombat \u2693\ufe0e Ends combat for the actor. tes3mobileActor : stopCombat ( force ) Parameters : force (boolean): If false , the function won't stop combat if the actor has other valid hostile targets. unequip \u2693\ufe0e Unequips one or more items from the actor. local itemUnequipped = tes3mobileActor : unequip ({ item = ..., type = ..., armorSlot = ..., clothingSlot = ... }) Parameters : params (table) item ( tes3item , string): Optional . The item to unequip. type (number): Optional . The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from tes3.objectType can be passed here. armorSlot (number): Optional . The armor slot to unequip. Maps to values in tes3.armorSlot namespace. clothingSlot (number): Optional . The clothing slot to unequip. Maps to values in tes3.clothingSlot namespace Returns : itemUnequipped (boolean) updateDerivedStatistics \u2693\ufe0e Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use tes3.modStatistic() . tes3mobileActor : updateDerivedStatistics ( attribute ) Parameters : attribute ( tes3statistic ): Optional . Limits the update to statistics derived from this attribute. e.g. mobile:updateDerivedStatistics(mobile.strength) . If not present, all derived statistics will be updated. updateOpacity \u2693\ufe0e Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects. tes3mobileActor : updateOpacity ()","title":"tes3mobileActor"},{"location":"types/tes3mobileActor/#tes3mobileactor","text":"A mobile object for a creature, NPC, or the player. This type inherits the following: tes3mobileObject","title":"tes3mobileActor"},{"location":"types/tes3mobileActor/#properties","text":"","title":"Properties"},{"location":"types/tes3mobileActor/#actionbeforecombat","text":"Read-only . Action data stored before the actor entered combat. Returns : result ( tes3actionData )","title":"actionBeforeCombat"},{"location":"types/tes3mobileActor/#actiondata","text":"Read-only . Current action data. Pre-combat action data is stored in the actionBeforeCombat property. Returns : result ( tes3actionData )","title":"actionData"},{"location":"types/tes3mobileActor/#activeai","text":"Friendly access to the actor's flag that controls if AI is active. Returns : result (boolean)","title":"activeAI"},{"location":"types/tes3mobileActor/#activemagiceffectlist","text":"Read-only . The active magic effects on the actor, from which all others can be accessed. A table with tes3activeMagicEffect items. Returns : result (table)","title":"activeMagicEffectList"},{"location":"types/tes3mobileActor/#actortype","text":"Read-only . The type of the mobile actor. Maps to values in tes3.actorType namespace. Returns : result (number)","title":"actorType"},{"location":"types/tes3mobileActor/#agility","text":"Read-only . Direct access to the actor's agility attribute statistic. Returns : result ( tes3statistic )","title":"agility"},{"location":"types/tes3mobileActor/#aiplanner","text":"Read-only . Access to the mobile's AI planner and AI package information. Returns : result ( tes3aiPlanner )","title":"aiPlanner"},{"location":"types/tes3mobileActor/#alarm","text":"The actor's alarm AI value. Returns : result (number)","title":"alarm"},{"location":"types/tes3mobileActor/#animationcontroller","text":"Read-only . No description yet available. Returns : result ( tes3actorAnimationController )","title":"animationController"},{"location":"types/tes3mobileActor/#armorrating","text":"Read-only . The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the applyDamage function. Armour mitigation calculation: x = damage / (damage + target.armorRating) damage *= max(fCombatArmorMinMult, x) if damage < 1 then damage = 1 end Returns : result (number)","title":"armorRating"},{"location":"types/tes3mobileActor/#attackbonus","text":"Direct access to the actor's attack bonus effect attribute. Returns : result (number)","title":"attackBonus"},{"location":"types/tes3mobileActor/#attacked","text":"Read-only . Friendly access to the actor's flag that controls if the actor has been attacked. Returns : result (boolean)","title":"attacked"},{"location":"types/tes3mobileActor/#attributes","text":"Read-only . Access to a table of 8 tes3statistic objects for the actor's attributes. Returns : result (table)","title":"attributes"},{"location":"types/tes3mobileActor/#bartergold","text":"The current amount of gold that the actor has access to for bartering. Returns : result (number)","title":"barterGold"},{"location":"types/tes3mobileActor/#blind","text":"Direct access to the actor's blind effect attribute. Returns : result (number)","title":"blind"},{"location":"types/tes3mobileActor/#boundsize","text":"A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 )","title":"boundSize"},{"location":"types/tes3mobileActor/#boundsize2d","text":"A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 )","title":"boundSize2D"},{"location":"types/tes3mobileActor/#cell","text":"Read-only . Fetches the cell that the actor is in. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3mobileActor/#cellx","text":"Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellX"},{"location":"types/tes3mobileActor/#celly","text":"Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellY"},{"location":"types/tes3mobileActor/#chameleon","text":"Direct access to the actor's chameleon effect attribute. Returns : result (number)","title":"chameleon"},{"location":"types/tes3mobileActor/#collidingreference","text":"Read-only . The reference that the mobile has collided with this frame. Returns : result ( tes3reference )","title":"collidingReference"},{"location":"types/tes3mobileActor/#combatsession","text":"Read-only . Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Returns : result ( tes3combatSession )","title":"combatSession"},{"location":"types/tes3mobileActor/#corpsehourstamp","text":"No description yet available. Returns : result (number)","title":"corpseHourstamp"},{"location":"types/tes3mobileActor/#currentenchanteditem","text":"Read-only . The currently equipped enchanted item that the actor will use. Returns : result ( tes3equipmentStack )","title":"currentEnchantedItem"},{"location":"types/tes3mobileActor/#currentspell","text":"Read-only . The currently equipped spell that the actor will use. Returns : result ( tes3spell )","title":"currentSpell"},{"location":"types/tes3mobileActor/#effectattributes","text":"Read-only . Access to a table of 24 numbers for the actor's effect attributes. In order those are: attackBonus , sanctuary , resistMagicka , resistFire , resistFrost , resistShock , resistCommonDisease , resistBlightDisease , resistCorprus , resistPoison , resistParalysis , chameleon , resistNormalWeapons , waterBreathing , waterWalking , swiftSwim , jump , levitate , shield , sound , silence , blind , paralyze , and invisibility . Each of those can be accessed individually. For example, tes3mobileActor.chameleon . Returns : result (table)","title":"effectAttributes"},{"location":"types/tes3mobileActor/#encumbrance","text":"Read-only . Access to the actor's encumbrance statistic. Returns : result ( tes3statistic )","title":"encumbrance"},{"location":"types/tes3mobileActor/#endurance","text":"Read-only . Direct access to the actor's endurance attribute statistic. Returns : result ( tes3statistic )","title":"endurance"},{"location":"types/tes3mobileActor/#facing","text":"Read-only . The facing of the actor, in radians. Returns : result (number)","title":"facing"},{"location":"types/tes3mobileActor/#fatigue","text":"Read-only . Access to the actor's fatigue statistic. Returns : result ( tes3statistic )","title":"fatigue"},{"location":"types/tes3mobileActor/#fight","text":"The actor's fight AI value. Returns : result (number)","title":"fight"},{"location":"types/tes3mobileActor/#flags","text":"Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"flags"},{"location":"types/tes3mobileActor/#flee","text":"The actor's flee AI value. Returns : result (number)","title":"flee"},{"location":"types/tes3mobileActor/#friendlyactors","text":"Read-only . A collection of other tes3mobileActor s that this actor considers friendly. Returns : result ( tes3iterator )","title":"friendlyActors"},{"location":"types/tes3mobileActor/#greetduration","text":"No description yet available. Returns : result (number)","title":"greetDuration"},{"location":"types/tes3mobileActor/#greettimer","text":"Read-only . No description yet available. Returns : result (number)","title":"greetTimer"},{"location":"types/tes3mobileActor/#health","text":"Read-only . Access to the actor's health statistic. Returns : result ( tes3statistic )","title":"health"},{"location":"types/tes3mobileActor/#height","text":"The height of the mobile above the ground. Returns : result (number)","title":"height"},{"location":"types/tes3mobileActor/#hello","text":"The actor's hello AI value. Returns : result (number)","title":"hello"},{"location":"types/tes3mobileActor/#holdbreathtime","text":"No description yet available. Returns : result (number)","title":"holdBreathTime"},{"location":"types/tes3mobileActor/#hostileactors","text":"Read-only . A collection of other tes3mobileActor s that this actor considers hostile. Returns : result ( tes3iterator )","title":"hostileActors"},{"location":"types/tes3mobileActor/#idleanim","text":"Read-only . Friendly access to the actor's flag that controls if the actor is using their idle animation. Returns : result (boolean)","title":"idleAnim"},{"location":"types/tes3mobileActor/#impulsevelocity","text":"A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 )","title":"impulseVelocity"},{"location":"types/tes3mobileActor/#incombat","text":"Read-only . Friendly access to the actor's flag that controls if the actor is in combat. Returns : result (boolean)","title":"inCombat"},{"location":"types/tes3mobileActor/#intelligence","text":"Read-only . Direct access to the actor's intelligence attribute statistic. Returns : result ( tes3statistic )","title":"intelligence"},{"location":"types/tes3mobileActor/#invisibility","text":"Direct access to the actor's invisibility effect attribute. Returns : result (number)","title":"invisibility"},{"location":"types/tes3mobileActor/#iscrittable","text":"Read-only . Friendly access to the actor's flag that controls if the actor can be critically hit. Returns : result (boolean)","title":"isCrittable"},{"location":"types/tes3mobileActor/#isdead","text":"Read-only . True if the actor is dead. Returns : result (boolean)","title":"isDead"},{"location":"types/tes3mobileActor/#isfalling","text":"Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge. Returns : result (boolean)","title":"isFalling"},{"location":"types/tes3mobileActor/#isflying","text":"Direct access to the actor's current movement flags, showing if the actor is flying. Returns : result (boolean)","title":"isFlying"},{"location":"types/tes3mobileActor/#isjumping","text":"Direct access to the actor's current movement flags, showing if the actor is jumping. Returns : result (boolean)","title":"isJumping"},{"location":"types/tes3mobileActor/#ismovingback","text":"Direct access to the actor's current movement flags, showing if the actor is moving backwards. Returns : result (boolean)","title":"isMovingBack"},{"location":"types/tes3mobileActor/#ismovingforward","text":"Direct access to the actor's current movement flags, showing if the actor is moving forwards. Returns : result (boolean)","title":"isMovingForward"},{"location":"types/tes3mobileActor/#ismovingleft","text":"Direct access to the actor's current movement flags, showing if the actor is moving left. Returns : result (boolean)","title":"isMovingLeft"},{"location":"types/tes3mobileActor/#ismovingright","text":"Direct access to the actor's current movement flags, showing if the actor is moving right. Returns : result (boolean)","title":"isMovingRight"},{"location":"types/tes3mobileActor/#isplayerdetected","text":"Direct access to the actor's flag showing the player was detected on the last detection check. Returns : result (boolean)","title":"isPlayerDetected"},{"location":"types/tes3mobileActor/#isplayerhidden","text":"Direct access to the actor's flag showing the player was hidden on the last detection check. Returns : result (boolean)","title":"isPlayerHidden"},{"location":"types/tes3mobileActor/#isrunning","text":"Direct access to the actor's current movement flags, showing if the actor is running. Returns : result (boolean)","title":"isRunning"},{"location":"types/tes3mobileActor/#issneaking","text":"Direct access to the actor's current movement flags, showing if the actor is sneaking. Returns : result (boolean)","title":"isSneaking"},{"location":"types/tes3mobileActor/#isswimming","text":"Direct access to the actor's current movement flags, showing if the actor is swimming. Returns : result (boolean)","title":"isSwimming"},{"location":"types/tes3mobileActor/#isturningleft","text":"Direct access to the actor's current movement flags, showing if the actor is turning left. Returns : result (boolean)","title":"isTurningLeft"},{"location":"types/tes3mobileActor/#isturningright","text":"Direct access to the actor's current movement flags, showing if the actor is turning right. Returns : result (boolean)","title":"isTurningRight"},{"location":"types/tes3mobileActor/#iswalking","text":"Direct access to the actor's current movement flags, showing if the actor is walking. Returns : result (boolean)","title":"isWalking"},{"location":"types/tes3mobileActor/#jump","text":"Direct access to the actor's jump effect attribute. Returns : result (number)","title":"jump"},{"location":"types/tes3mobileActor/#lastgroundz","text":"No description yet available. Returns : result (number)","title":"lastGroundZ"},{"location":"types/tes3mobileActor/#levitate","text":"Direct access to the actor's levitate effect attribute. Returns : result (number)","title":"levitate"},{"location":"types/tes3mobileActor/#luck","text":"Read-only . Direct access to the actor's luck attribute statistic. Returns : result ( tes3statistic )","title":"luck"},{"location":"types/tes3mobileActor/#magicka","text":"Read-only . Access to the actor's magicka statistic. Returns : result ( tes3statistic )","title":"magicka"},{"location":"types/tes3mobileActor/#magickamultiplier","text":"Read-only . Access to the actor's magicka multiplier statistic. Returns : result ( tes3statistic )","title":"magickaMultiplier"},{"location":"types/tes3mobileActor/#mobtomobcollision","text":"Allows modifying if this actor will collide with other actors. When true (default), the actor cannot move through other actors. When false , the actor is allowed to move through other actors, and other actors can move through it. May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor. Returns : result (boolean)","title":"mobToMobCollision"},{"location":"types/tes3mobileActor/#movementcollision","text":"Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean)","title":"movementCollision"},{"location":"types/tes3mobileActor/#movementflags","text":"Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"movementFlags"},{"location":"types/tes3mobileActor/#nextactionweight","text":"Read-only . No description yet available. Returns : result (number)","title":"nextActionWeight"},{"location":"types/tes3mobileActor/#objecttype","text":"Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number)","title":"objectType"},{"location":"types/tes3mobileActor/#paralyze","text":"Direct access to the actor's paralyze effect attribute. Returns : result (number)","title":"paralyze"},{"location":"types/tes3mobileActor/#personality","text":"Read-only . Direct access to the actor's personality attribute statistic. Returns : result ( tes3statistic )","title":"personality"},{"location":"types/tes3mobileActor/#playerdistance","text":"The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number)","title":"playerDistance"},{"location":"types/tes3mobileActor/#position","text":"A vector that represents the 3D position of the object. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3mobileActor/#prevmovementflags","text":"Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"prevMovementFlags"},{"location":"types/tes3mobileActor/#readiedammo","text":"The currently equipped ammo. Returns : result ( tes3equipmentStack )","title":"readiedAmmo"},{"location":"types/tes3mobileActor/#readiedammocount","text":"The number of ammo equipped for the readied ammo. Returns : result (number)","title":"readiedAmmoCount"},{"location":"types/tes3mobileActor/#readiedshield","text":"The currently equipped shield. Returns : result ( tes3equipmentStack )","title":"readiedShield"},{"location":"types/tes3mobileActor/#readiedweapon","text":"The currently equipped weapon. Returns : result ( tes3equipmentStack )","title":"readiedWeapon"},{"location":"types/tes3mobileActor/#reference","text":"Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3mobileActor/#resistblightdisease","text":"Direct access to the actor's blight disease resistance effect attribute. Returns : result (number)","title":"resistBlightDisease"},{"location":"types/tes3mobileActor/#resistcommondisease","text":"Direct access to the actor's common disease resistance effect attribute. Returns : result (number)","title":"resistCommonDisease"},{"location":"types/tes3mobileActor/#resistcorprus","text":"Direct access to the actor's corprus disease resistance effect attribute. Returns : result (number)","title":"resistCorprus"},{"location":"types/tes3mobileActor/#resistfire","text":"Direct access to the actor's fire resistance effect attribute. Returns : result (number)","title":"resistFire"},{"location":"types/tes3mobileActor/#resistfrost","text":"Direct access to the actor's frost resistance effect attribute. Returns : result (number)","title":"resistFrost"},{"location":"types/tes3mobileActor/#resistmagicka","text":"Direct access to the actor's magicka resistance effect attribute. Returns : result (number)","title":"resistMagicka"},{"location":"types/tes3mobileActor/#resistnormalweapons","text":"Direct access to the actor's normal weapon resistance effect attribute. Returns : result (number)","title":"resistNormalWeapons"},{"location":"types/tes3mobileActor/#resistparalysis","text":"Direct access to the actor's paralysis resistance effect attribute. Returns : result (number)","title":"resistParalysis"},{"location":"types/tes3mobileActor/#resistpoison","text":"Direct access to the actor's poison resistance effect attribute. Returns : result (number)","title":"resistPoison"},{"location":"types/tes3mobileActor/#resistshock","text":"Direct access to the actor's shock resistance effect attribute. Returns : result (number)","title":"resistShock"},{"location":"types/tes3mobileActor/#sanctuary","text":"Direct access to the actor's sanctuary effect attribute. Returns : result (number)","title":"sanctuary"},{"location":"types/tes3mobileActor/#scaninterval","text":"Read-only . No description yet available. Returns : result (number)","title":"scanInterval"},{"location":"types/tes3mobileActor/#scantimer","text":"Read-only . No description yet available. Returns : result (number)","title":"scanTimer"},{"location":"types/tes3mobileActor/#shield","text":"Direct access to the actor's shield effect attribute. Returns : result (number)","title":"shield"},{"location":"types/tes3mobileActor/#silence","text":"Direct access to the actor's silence effect attribute. Returns : result (number)","title":"silence"},{"location":"types/tes3mobileActor/#sound","text":"Direct access to the actor's sound effect attribute. Returns : result (number)","title":"sound"},{"location":"types/tes3mobileActor/#speed","text":"Read-only . Direct access to the actor's speed attribute statistic. Returns : result ( tes3statistic )","title":"speed"},{"location":"types/tes3mobileActor/#spellreadied","text":"Read-only . Friendly access to the actor's flag that controls if the actor has a spell readied. Returns : result (boolean)","title":"spellReadied"},{"location":"types/tes3mobileActor/#strength","text":"Read-only . Direct access to the actor's strength attribute statistic. Returns : result ( tes3statistic )","title":"strength"},{"location":"types/tes3mobileActor/#swiftswim","text":"Direct access to the actor's swift swim effect attribute. Returns : result (number)","title":"swiftSwim"},{"location":"types/tes3mobileActor/#talkedto","text":"Direct access to the actor's flag that shows it was recently talked to. Returns : result (boolean)","title":"talkedTo"},{"location":"types/tes3mobileActor/#torchslot","text":"The currently equipped light. Returns : result ( tes3equipmentStack )","title":"torchSlot"},{"location":"types/tes3mobileActor/#underwater","text":"Read-only . Friendly access to the actor's flag that controls if the actor is under water. Returns : result (boolean)","title":"underwater"},{"location":"types/tes3mobileActor/#velocity","text":"A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/tes3mobileActor/#waterbreathing","text":"Direct access to the actor's water breathing effect attribute. Returns : result (number)","title":"waterBreathing"},{"location":"types/tes3mobileActor/#waterwalking","text":"Direct access to the actor's water walking effect attribute. Returns : result (number)","title":"waterWalking"},{"location":"types/tes3mobileActor/#weapondrawn","text":"Read-only . Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again. Returns : result (boolean)","title":"weaponDrawn"},{"location":"types/tes3mobileActor/#weaponready","text":"A flag for if the actor has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the actor to take out their weapon. Setting it to false will cause the actor to put it away. Returns : result (boolean)","title":"weaponReady"},{"location":"types/tes3mobileActor/#werewolf","text":"Read-only . Friendly access to the actor's flag that controls if the actor in werewolf form. Returns : result (boolean)","title":"werewolf"},{"location":"types/tes3mobileActor/#width","text":"Read-only . No description yet available. Returns : result (number)","title":"width"},{"location":"types/tes3mobileActor/#willpower","text":"Read-only . Direct access to the actor's willpower attribute statistic. Returns : result ( tes3statistic )","title":"willpower"},{"location":"types/tes3mobileActor/#methods","text":"","title":"Methods"},{"location":"types/tes3mobileActor/#applydamage","text":"Damages the actor, with options to control mitigation and difficulty scaling. Invokes the damage and damaged events, with tes3.damageSource.script source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = tes3mobileActor : applyDamage ({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Optional . If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. applyDifficulty (boolean): Optional . If the game difficulty modifier should be applied. Must be used with the playerAttack argument to apply the correct modifier. playerAttack (boolean): Optional . If the attack came from the player. Used for difficulty calculation. doNotChangeHealth (boolean): Optional . If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit. Returns : result (number)","title":"applyDamage"},{"location":"types/tes3mobileActor/#applyfatiguedamage","text":"Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the damageHandToHand and damagedHandToHand events, with tes3.damageSource.script source. Returns the actual fatigue damage done. local result = tes3mobileActor : applyFatigueDamage ( fatigueDamage , swing , alwaysPlayHitVoice ) Parameters : fatigueDamage (number): The amount of fatigue damage to apply. swing (number): Optional . The attack swing magnitude, range 0-1. Only modifies hit volume. alwaysPlayHitVoice (boolean): Optional . Always play the hit reaction voiceover. Returns : result (number)","title":"applyFatigueDamage"},{"location":"types/tes3mobileActor/#applyhealthdamage","text":"Deprecated, please use applyDamage() instead. Damages the actor. local result = tes3mobileActor : applyHealthDamage ( damage , isPlayerAttack , scaleWithDifficulty , doNotChangeHealth ) Parameters : damage (number): The amount of damage to apply. isPlayerAttack (boolean): Used to calculate difficulty scaling. scaleWithDifficulty (boolean): Apply difficulty scaling to the damage. doNotChangeHealth (boolean): Do all the audiovisual effects of damage without the health change. Returns : result (boolean)","title":"applyHealthDamage"},{"location":"types/tes3mobileActor/#calceffectivedamage","text":"Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = tes3mobileActor : calcEffectiveDamage ({ damage = ..., applyArmor = ..., resistAttribute = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Optional . If armor should mitigate the incoming damage. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. Returns : result (number)","title":"calcEffectiveDamage"},{"location":"types/tes3mobileActor/#equip","text":"Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return true . local itemEquipped = tes3mobileActor : equip ({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... }) Parameters : params (table) item ( tes3item , string): The item to equip. itemData ( tes3itemData ): Optional . The item data of the specific item to equip. addItem (boolean): If true , the item will be added to the actor's inventory if needed. selectBestCondition (boolean): If true , the item in the inventory with the best condition and best charge will be selected. selectWorstCondition (boolean): If true , the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools. Returns : itemEquipped (boolean)","title":"equip"},{"location":"types/tes3mobileActor/#getactivemagiceffects","text":"Fetches a filtered list of the active magic effects on the actor. Returns a table with tes3activeMagicEffect items. local result = tes3mobileActor : getActiveMagicEffects ({ effect = ..., serial = ... }) Parameters : params (table): Optional . effect (number): Optional . The magic effect ID to search for. serial (number): Optional . The magic instance serial to search for. Returns : result (table)","title":"getActiveMagicEffects"},{"location":"types/tes3mobileActor/#getbootsweight","text":"Read-only . Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped. local result = tes3mobileActor : getBootsWeight () Returns : result (number)","title":"getBootsWeight"},{"location":"types/tes3mobileActor/#getfatigueterm","text":"Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base)) local result = tes3mobileActor : getFatigueTerm () Returns : result (number)","title":"getFatigueTerm"},{"location":"types/tes3mobileActor/#getpowerusetimestamp","text":"Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . local timestamp = tes3mobileActor : getPowerUseTimestamp ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : timestamp (number)","title":"getPowerUseTimestamp"},{"location":"types/tes3mobileActor/#getskillstatistic","text":"Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = tes3mobileActor : getSkillStatistic ( skillId ) Parameters : skillId (number): The index of the skill statistic to fetch. Maps to values in tes3.skill namespace. Returns : result ( tes3statisticSkill )","title":"getSkillStatistic"},{"location":"types/tes3mobileActor/#getskillvalue","text":"Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = tes3mobileActor : getSkillValue ( skillId ) Parameters : skillId (number): The index of the skill statistic's value to fetch. Maps to values in tes3.skill namespace. Returns : result (number)","title":"getSkillValue"},{"location":"types/tes3mobileActor/#getviewtoactor","text":"No description yet available. local result = tes3mobileActor : getViewToActor () Returns : result (number)","title":"getViewToActor"},{"location":"types/tes3mobileActor/#getviewtopoint","text":"No description yet available. local result = tes3mobileActor : getViewToPoint () Returns : result (number)","title":"getViewToPoint"},{"location":"types/tes3mobileActor/#getviewtopointwithfacing","text":"No description yet available. local result = tes3mobileActor : getViewToPointWithFacing () Returns : result (number)","title":"getViewToPointWithFacing"},{"location":"types/tes3mobileActor/#getweaponspeed","text":"Fetches the weapon speed of the actor's currently equipped weapon, or 1.0 if no weapon is equipped. local result = tes3mobileActor : getWeaponSpeed () Returns : result (number)","title":"getWeaponSpeed"},{"location":"types/tes3mobileActor/#hasfreeaction","text":"If true, the actor isn't paralyzed, dead, stunned, or otherwise unable to take action. local result = tes3mobileActor : hasFreeAction () Returns : result (boolean)","title":"hasFreeAction"},{"location":"types/tes3mobileActor/#hasusedpower","text":"Check if a power has been used and is recharging. local result = tes3mobileActor : hasUsedPower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean)","title":"hasUsedPower"},{"location":"types/tes3mobileActor/#isaffectedbyobject","text":"Determines if the actor is currently being affected by a given alchemy, enchantment, or spell. local result = tes3mobileActor : isAffectedByObject ( object ) Parameters : object ( tes3alchemy , tes3enchantment , tes3spell ): The magic to check for. Returns : result (boolean)","title":"isAffectedByObject"},{"location":"types/tes3mobileActor/#rechargepower","text":"Makes a power immediately available for casting again. local result = tes3mobileActor : rechargePower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (number)","title":"rechargePower"},{"location":"types/tes3mobileActor/#setpowerusetimestamp","text":"Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. tes3mobileActor : setPowerUseTimestamp ( power , timestamp ) Parameters : power ( tes3spell ): The spell object for the power. timestamp (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() .","title":"setPowerUseTimestamp"},{"location":"types/tes3mobileActor/#startcombat","text":"Forces the actor into combat with another actor. tes3mobileActor : startCombat ( target ) Parameters : target ( tes3mobileActor )","title":"startCombat"},{"location":"types/tes3mobileActor/#startdialogue","text":"Starts dialogue with this actor for the player. tes3mobileActor : startDialogue ()","title":"startDialogue"},{"location":"types/tes3mobileActor/#stopcombat","text":"Ends combat for the actor. tes3mobileActor : stopCombat ( force ) Parameters : force (boolean): If false , the function won't stop combat if the actor has other valid hostile targets.","title":"stopCombat"},{"location":"types/tes3mobileActor/#unequip","text":"Unequips one or more items from the actor. local itemUnequipped = tes3mobileActor : unequip ({ item = ..., type = ..., armorSlot = ..., clothingSlot = ... }) Parameters : params (table) item ( tes3item , string): Optional . The item to unequip. type (number): Optional . The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from tes3.objectType can be passed here. armorSlot (number): Optional . The armor slot to unequip. Maps to values in tes3.armorSlot namespace. clothingSlot (number): Optional . The clothing slot to unequip. Maps to values in tes3.clothingSlot namespace Returns : itemUnequipped (boolean)","title":"unequip"},{"location":"types/tes3mobileActor/#updatederivedstatistics","text":"Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use tes3.modStatistic() . tes3mobileActor : updateDerivedStatistics ( attribute ) Parameters : attribute ( tes3statistic ): Optional . Limits the update to statistics derived from this attribute. e.g. mobile:updateDerivedStatistics(mobile.strength) . If not present, all derived statistics will be updated.","title":"updateDerivedStatistics"},{"location":"types/tes3mobileActor/#updateopacity","text":"Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects. tes3mobileActor : updateOpacity ()","title":"updateOpacity"},{"location":"types/tes3mobileCreature/","text":"tes3mobileCreature \u2693\ufe0e A mobile object for a creature. This type inherits the following: tes3mobileActor , tes3mobileObject Properties \u2693\ufe0e actionBeforeCombat \u2693\ufe0e Read-only . Action data stored before the actor entered combat. Returns : result ( tes3actionData ) actionData \u2693\ufe0e Read-only . Current action data. Pre-combat action data is stored in the actionBeforeCombat property. Returns : result ( tes3actionData ) activeAI \u2693\ufe0e Friendly access to the actor's flag that controls if AI is active. Returns : result (boolean) activeMagicEffectList \u2693\ufe0e Read-only . The active magic effects on the actor, from which all others can be accessed. A table with tes3activeMagicEffect items. Returns : result (table) actorType \u2693\ufe0e Read-only . The type of the mobile actor. Maps to values in tes3.actorType namespace. Returns : result (number) agility \u2693\ufe0e Read-only . Direct access to the actor's agility attribute statistic. Returns : result ( tes3statistic ) aiPlanner \u2693\ufe0e Read-only . Access to the mobile's AI planner and AI package information. Returns : result ( tes3aiPlanner ) alarm \u2693\ufe0e The actor's alarm AI value. Returns : result (number) animationController \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3actorAnimationController ) armorRating \u2693\ufe0e Read-only . The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the applyDamage function. Armour mitigation calculation: x = damage / (damage + target.armorRating) damage *= max(fCombatArmorMinMult, x) if damage < 1 then damage = 1 end Returns : result (number) attackBonus \u2693\ufe0e Direct access to the actor's attack bonus effect attribute. Returns : result (number) attacked \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor has been attacked. Returns : result (boolean) attributes \u2693\ufe0e Read-only . Access to a table of 8 tes3statistic objects for the actor's attributes. Returns : result (table) barterGold \u2693\ufe0e The current amount of gold that the actor has access to for bartering. Returns : result (number) blind \u2693\ufe0e Direct access to the actor's blind effect attribute. Returns : result (number) boundSize \u2693\ufe0e A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 ) boundSize2D \u2693\ufe0e A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 ) cell \u2693\ufe0e Read-only . Fetches the cell that the actor is in. Returns : result ( tes3cell ) cellX \u2693\ufe0e Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number) cellY \u2693\ufe0e Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number) chameleon \u2693\ufe0e Direct access to the actor's chameleon effect attribute. Returns : result (number) collidingReference \u2693\ufe0e Read-only . The reference that the mobile has collided with this frame. Returns : result ( tes3reference ) combat \u2693\ufe0e Read-only . Direct access to the creature's combat statistic. This is a creature-specific generalization of skills, where this statistic is used in place of all combat skills. To get an individual skill value by skill ID, see the getSkillValue or getSkillStatistic methods. Returns : result ( tes3statistic ) combatSession \u2693\ufe0e Read-only . Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Returns : result ( tes3combatSession ) corpseHourstamp \u2693\ufe0e No description yet available. Returns : result (number) currentEnchantedItem \u2693\ufe0e Read-only . The currently equipped enchanted item that the actor will use. Returns : result ( tes3equipmentStack ) currentSpell \u2693\ufe0e Read-only . The currently equipped spell that the actor will use. Returns : result ( tes3spell ) effectAttributes \u2693\ufe0e Read-only . Access to a table of 24 numbers for the actor's effect attributes. In order those are: attackBonus , sanctuary , resistMagicka , resistFire , resistFrost , resistShock , resistCommonDisease , resistBlightDisease , resistCorprus , resistPoison , resistParalysis , chameleon , resistNormalWeapons , waterBreathing , waterWalking , swiftSwim , jump , levitate , shield , sound , silence , blind , paralyze , and invisibility . Each of those can be accessed individually. For example, tes3mobileActor.chameleon . Returns : result (table) encumbrance \u2693\ufe0e Read-only . Access to the actor's encumbrance statistic. Returns : result ( tes3statistic ) endurance \u2693\ufe0e Read-only . Direct access to the actor's endurance attribute statistic. Returns : result ( tes3statistic ) facing \u2693\ufe0e Read-only . The facing of the actor, in radians. Returns : result (number) fatigue \u2693\ufe0e Read-only . Access to the actor's fatigue statistic. Returns : result ( tes3statistic ) fight \u2693\ufe0e The actor's fight AI value. Returns : result (number) flags \u2693\ufe0e Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (number) flee \u2693\ufe0e The actor's flee AI value. Returns : result (number) flySpeed \u2693\ufe0e Read-only . The calculated fly movement speed. Returns : result (number) friendlyActors \u2693\ufe0e Read-only . A collection of other tes3mobileActor s that this actor considers friendly. Returns : result ( tes3iterator ) greetDuration \u2693\ufe0e No description yet available. Returns : result (number) greetTimer \u2693\ufe0e Read-only . No description yet available. Returns : result (number) health \u2693\ufe0e Read-only . Access to the actor's health statistic. Returns : result ( tes3statistic ) height \u2693\ufe0e The height of the mobile above the ground. Returns : result (number) hello \u2693\ufe0e The actor's hello AI value. Returns : result (number) holdBreathTime \u2693\ufe0e No description yet available. Returns : result (number) hostileActors \u2693\ufe0e Read-only . A collection of other tes3mobileActor s that this actor considers hostile. Returns : result ( tes3iterator ) idleAnim \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is using their idle animation. Returns : result (boolean) impulseVelocity \u2693\ufe0e A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 ) inCombat \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is in combat. Returns : result (boolean) intelligence \u2693\ufe0e Read-only . Direct access to the actor's intelligence attribute statistic. Returns : result ( tes3statistic ) invisibility \u2693\ufe0e Direct access to the actor's invisibility effect attribute. Returns : result (number) isCrittable \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor can be critically hit. Returns : result (boolean) isDead \u2693\ufe0e Read-only . True if the actor is dead. Returns : result (boolean) isFalling \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge. Returns : result (boolean) isFlying \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is flying. Returns : result (boolean) isJumping \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is jumping. Returns : result (boolean) isMovingBack \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving backwards. Returns : result (boolean) isMovingForward \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving forwards. Returns : result (boolean) isMovingLeft \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving left. Returns : result (boolean) isMovingRight \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving right. Returns : result (boolean) isPlayerDetected \u2693\ufe0e Direct access to the actor's flag showing the player was detected on the last detection check. Returns : result (boolean) isPlayerHidden \u2693\ufe0e Direct access to the actor's flag showing the player was hidden on the last detection check. Returns : result (boolean) isRunning \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is running. Returns : result (boolean) isSneaking \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is sneaking. Returns : result (boolean) isSwimming \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is swimming. Returns : result (boolean) isTurningLeft \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is turning left. Returns : result (boolean) isTurningRight \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is turning right. Returns : result (boolean) isWalking \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is walking. Returns : result (boolean) jump \u2693\ufe0e Direct access to the actor's jump effect attribute. Returns : result (number) lastGroundZ \u2693\ufe0e No description yet available. Returns : result (number) levitate \u2693\ufe0e Direct access to the actor's levitate effect attribute. Returns : result (number) luck \u2693\ufe0e Read-only . Direct access to the actor's luck attribute statistic. Returns : result ( tes3statistic ) magic \u2693\ufe0e Read-only . Direct access to the creature's magic statistic. This is a creature-specific generalization of skills, where this statistic is used in place of all magic skills. To get an individual skill value by skill ID, see the getSkillValue or getSkillStatistic methods. Returns : result ( tes3statistic ) magicka \u2693\ufe0e Read-only . Access to the actor's magicka statistic. Returns : result ( tes3statistic ) magickaMultiplier \u2693\ufe0e Read-only . Access to the actor's magicka multiplier statistic. Returns : result ( tes3statistic ) mobToMobCollision \u2693\ufe0e Allows modifying if this actor will collide with other actors. When true (default), the actor cannot move through other actors. When false , the actor is allowed to move through other actors, and other actors can move through it. May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor. Returns : result (boolean) movementCollision \u2693\ufe0e Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean) movementFlags \u2693\ufe0e Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (number) moveSpeed \u2693\ufe0e Read-only . The calculated base movement speed. Returns : result (number) nextActionWeight \u2693\ufe0e Read-only . No description yet available. Returns : result (number) object \u2693\ufe0e Read-only . The actor object that maps to this mobile. Returns : result ( tes3creatureInstance ) objectType \u2693\ufe0e Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number) paralyze \u2693\ufe0e Direct access to the actor's paralyze effect attribute. Returns : result (number) personality \u2693\ufe0e Read-only . Direct access to the actor's personality attribute statistic. Returns : result ( tes3statistic ) playerDistance \u2693\ufe0e The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number) position \u2693\ufe0e A vector that represents the 3D position of the object. Returns : result ( tes3vector3 ) prevMovementFlags \u2693\ufe0e Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (number) readiedAmmo \u2693\ufe0e The currently equipped ammo. Returns : result ( tes3equipmentStack ) readiedAmmoCount \u2693\ufe0e The number of ammo equipped for the readied ammo. Returns : result (number) readiedShield \u2693\ufe0e The currently equipped shield. Returns : result ( tes3equipmentStack ) readiedWeapon \u2693\ufe0e The currently equipped weapon. Returns : result ( tes3equipmentStack ) reference \u2693\ufe0e Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference ) resistBlightDisease \u2693\ufe0e Direct access to the actor's blight disease resistance effect attribute. Returns : result (number) resistCommonDisease \u2693\ufe0e Direct access to the actor's common disease resistance effect attribute. Returns : result (number) resistCorprus \u2693\ufe0e Direct access to the actor's corprus disease resistance effect attribute. Returns : result (number) resistFire \u2693\ufe0e Direct access to the actor's fire resistance effect attribute. Returns : result (number) resistFrost \u2693\ufe0e Direct access to the actor's frost resistance effect attribute. Returns : result (number) resistMagicka \u2693\ufe0e Direct access to the actor's magicka resistance effect attribute. Returns : result (number) resistNormalWeapons \u2693\ufe0e Direct access to the actor's normal weapon resistance effect attribute. Returns : result (number) resistParalysis \u2693\ufe0e Direct access to the actor's paralysis resistance effect attribute. Returns : result (number) resistPoison \u2693\ufe0e Direct access to the actor's poison resistance effect attribute. Returns : result (number) resistShock \u2693\ufe0e Direct access to the actor's shock resistance effect attribute. Returns : result (number) runSpeed \u2693\ufe0e Read-only . The calculated run movement speed. Returns : result (number) sanctuary \u2693\ufe0e Direct access to the actor's sanctuary effect attribute. Returns : result (number) scanInterval \u2693\ufe0e Read-only . No description yet available. Returns : result (number) scanTimer \u2693\ufe0e Read-only . No description yet available. Returns : result (number) shield \u2693\ufe0e Direct access to the actor's shield effect attribute. Returns : result (number) silence \u2693\ufe0e Direct access to the actor's silence effect attribute. Returns : result (number) skills \u2693\ufe0e Read-only . An array-style table with access to the three creature skill statistics. Returns : result (table) sound \u2693\ufe0e Direct access to the actor's sound effect attribute. Returns : result (number) speed \u2693\ufe0e Read-only . Direct access to the actor's speed attribute statistic. Returns : result ( tes3statistic ) spellReadied \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor has a spell readied. Returns : result (boolean) stealth \u2693\ufe0e Read-only . Direct access to the creature's stealth statistic. This is a creature-specific generalization of skills, where this statistic is used in place of all stealth skills. To get an individual skill value by skill ID, see the getSkillValue or getSkillStatistic methods. Returns : result ( tes3statistic ) strength \u2693\ufe0e Read-only . Direct access to the actor's strength attribute statistic. Returns : result ( tes3statistic ) swiftSwim \u2693\ufe0e Direct access to the actor's swift swim effect attribute. Returns : result (number) swimRunSpeed \u2693\ufe0e Read-only . The calculated swim movement speed while running. Returns : result (number) swimSpeed \u2693\ufe0e Read-only . The calculated swim movement speed. Returns : result (number) talkedTo \u2693\ufe0e Direct access to the actor's flag that shows it was recently talked to. Returns : result (boolean) torchSlot \u2693\ufe0e The currently equipped light. Returns : result ( tes3equipmentStack ) underwater \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is under water. Returns : result (boolean) velocity \u2693\ufe0e A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 ) walkSpeed \u2693\ufe0e Read-only . The calculated walk movement speed. Returns : result (number) waterBreathing \u2693\ufe0e Direct access to the actor's water breathing effect attribute. Returns : result (number) waterWalking \u2693\ufe0e Direct access to the actor's water walking effect attribute. Returns : result (number) weaponDrawn \u2693\ufe0e Read-only . Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again. Returns : result (boolean) weaponReady \u2693\ufe0e A flag for if the actor has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the actor to take out their weapon. Setting it to false will cause the actor to put it away. Returns : result (boolean) werewolf \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor in werewolf form. Returns : result (boolean) width \u2693\ufe0e Read-only . No description yet available. Returns : result (number) willpower \u2693\ufe0e Read-only . Direct access to the actor's willpower attribute statistic. Returns : result ( tes3statistic ) Methods \u2693\ufe0e applyDamage \u2693\ufe0e Damages the actor, with options to control mitigation and difficulty scaling. Invokes the damage and damaged events, with tes3.damageSource.script source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = tes3mobileActor : applyDamage ({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Optional . If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. applyDifficulty (boolean): Optional . If the game difficulty modifier should be applied. Must be used with the playerAttack argument to apply the correct modifier. playerAttack (boolean): Optional . If the attack came from the player. Used for difficulty calculation. doNotChangeHealth (boolean): Optional . If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit. Returns : result (number) applyFatigueDamage \u2693\ufe0e Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the damageHandToHand and damagedHandToHand events, with tes3.damageSource.script source. Returns the actual fatigue damage done. local result = tes3mobileActor : applyFatigueDamage ( fatigueDamage , swing , alwaysPlayHitVoice ) Parameters : fatigueDamage (number): The amount of fatigue damage to apply. swing (number): Optional . The attack swing magnitude, range 0-1. Only modifies hit volume. alwaysPlayHitVoice (boolean): Optional . Always play the hit reaction voiceover. Returns : result (number) applyHealthDamage \u2693\ufe0e Deprecated, please use applyDamage() instead. Damages the actor. local result = tes3mobileActor : applyHealthDamage ( damage , isPlayerAttack , scaleWithDifficulty , doNotChangeHealth ) Parameters : damage (number): The amount of damage to apply. isPlayerAttack (boolean): Used to calculate difficulty scaling. scaleWithDifficulty (boolean): Apply difficulty scaling to the damage. doNotChangeHealth (boolean): Do all the audiovisual effects of damage without the health change. Returns : result (boolean) calcEffectiveDamage \u2693\ufe0e Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = tes3mobileActor : calcEffectiveDamage ({ damage = ..., applyArmor = ..., resistAttribute = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Optional . If armor should mitigate the incoming damage. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. Returns : result (number) equip \u2693\ufe0e Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return true . local itemEquipped = tes3mobileActor : equip ({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... }) Parameters : params (table) item ( tes3item , string): The item to equip. itemData ( tes3itemData ): Optional . The item data of the specific item to equip. addItem (boolean): If true , the item will be added to the actor's inventory if needed. selectBestCondition (boolean): If true , the item in the inventory with the best condition and best charge will be selected. selectWorstCondition (boolean): If true , the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools. Returns : itemEquipped (boolean) getActiveMagicEffects \u2693\ufe0e Fetches a filtered list of the active magic effects on the actor. Returns a table with tes3activeMagicEffect items. local result = tes3mobileActor : getActiveMagicEffects ({ effect = ..., serial = ... }) Parameters : params (table): Optional . effect (number): Optional . The magic effect ID to search for. serial (number): Optional . The magic instance serial to search for. Returns : result (table) getBootsWeight \u2693\ufe0e Read-only . Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped. local result = tes3mobileActor : getBootsWeight () Returns : result (number) getFatigueTerm \u2693\ufe0e Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base)) local result = tes3mobileActor : getFatigueTerm () Returns : result (number) getPowerUseTimestamp \u2693\ufe0e Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . local timestamp = tes3mobileActor : getPowerUseTimestamp ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : timestamp (number) getSkillStatistic \u2693\ufe0e Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = tes3mobileActor : getSkillStatistic ( skillId ) Parameters : skillId (number): The index of the skill statistic to fetch. Maps to values in tes3.skill namespace. Returns : result ( tes3statisticSkill ) getSkillValue \u2693\ufe0e Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = tes3mobileActor : getSkillValue ( skillId ) Parameters : skillId (number): The index of the skill statistic's value to fetch. Maps to values in tes3.skill namespace. Returns : result (number) getViewToActor \u2693\ufe0e No description yet available. local result = tes3mobileActor : getViewToActor () Returns : result (number) getViewToPoint \u2693\ufe0e No description yet available. local result = tes3mobileActor : getViewToPoint () Returns : result (number) getViewToPointWithFacing \u2693\ufe0e No description yet available. local result = tes3mobileActor : getViewToPointWithFacing () Returns : result (number) getWeaponSpeed \u2693\ufe0e Fetches the weapon speed of the actor's currently equipped weapon, or 1.0 if no weapon is equipped. local result = tes3mobileActor : getWeaponSpeed () Returns : result (number) hasFreeAction \u2693\ufe0e If true, the actor isn't paralyzed, dead, stunned, or otherwise unable to take action. local result = tes3mobileActor : hasFreeAction () Returns : result (boolean) hasUsedPower \u2693\ufe0e Check if a power has been used and is recharging. local result = tes3mobileActor : hasUsedPower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean) isAffectedByObject \u2693\ufe0e Determines if the actor is currently being affected by a given alchemy, enchantment, or spell. local result = tes3mobileActor : isAffectedByObject ( object ) Parameters : object ( tes3alchemy , tes3enchantment , tes3spell ): The magic to check for. Returns : result (boolean) rechargePower \u2693\ufe0e Makes a power immediately available for casting again. local result = tes3mobileActor : rechargePower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (number) setPowerUseTimestamp \u2693\ufe0e Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. tes3mobileActor : setPowerUseTimestamp ( power , timestamp ) Parameters : power ( tes3spell ): The spell object for the power. timestamp (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . startCombat \u2693\ufe0e Forces the actor into combat with another actor. tes3mobileActor : startCombat ( target ) Parameters : target ( tes3mobileActor ) startDialogue \u2693\ufe0e Starts dialogue with this actor for the player. tes3mobileActor : startDialogue () stopCombat \u2693\ufe0e Ends combat for the actor. tes3mobileActor : stopCombat ( force ) Parameters : force (boolean): If false , the function won't stop combat if the actor has other valid hostile targets. unequip \u2693\ufe0e Unequips one or more items from the actor. local itemUnequipped = tes3mobileActor : unequip ({ item = ..., type = ..., armorSlot = ..., clothingSlot = ... }) Parameters : params (table) item ( tes3item , string): Optional . The item to unequip. type (number): Optional . The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from tes3.objectType can be passed here. armorSlot (number): Optional . The armor slot to unequip. Maps to values in tes3.armorSlot namespace. clothingSlot (number): Optional . The clothing slot to unequip. Maps to values in tes3.clothingSlot namespace Returns : itemUnequipped (boolean) updateDerivedStatistics \u2693\ufe0e Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use tes3.modStatistic() . tes3mobileActor : updateDerivedStatistics ( attribute ) Parameters : attribute ( tes3statistic ): Optional . Limits the update to statistics derived from this attribute. e.g. mobile:updateDerivedStatistics(mobile.strength) . If not present, all derived statistics will be updated. updateOpacity \u2693\ufe0e Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects. tes3mobileActor : updateOpacity ()","title":"tes3mobileCreature"},{"location":"types/tes3mobileCreature/#tes3mobilecreature","text":"A mobile object for a creature. This type inherits the following: tes3mobileActor , tes3mobileObject","title":"tes3mobileCreature"},{"location":"types/tes3mobileCreature/#properties","text":"","title":"Properties"},{"location":"types/tes3mobileCreature/#actionbeforecombat","text":"Read-only . Action data stored before the actor entered combat. Returns : result ( tes3actionData )","title":"actionBeforeCombat"},{"location":"types/tes3mobileCreature/#actiondata","text":"Read-only . Current action data. Pre-combat action data is stored in the actionBeforeCombat property. Returns : result ( tes3actionData )","title":"actionData"},{"location":"types/tes3mobileCreature/#activeai","text":"Friendly access to the actor's flag that controls if AI is active. Returns : result (boolean)","title":"activeAI"},{"location":"types/tes3mobileCreature/#activemagiceffectlist","text":"Read-only . The active magic effects on the actor, from which all others can be accessed. A table with tes3activeMagicEffect items. Returns : result (table)","title":"activeMagicEffectList"},{"location":"types/tes3mobileCreature/#actortype","text":"Read-only . The type of the mobile actor. Maps to values in tes3.actorType namespace. Returns : result (number)","title":"actorType"},{"location":"types/tes3mobileCreature/#agility","text":"Read-only . Direct access to the actor's agility attribute statistic. Returns : result ( tes3statistic )","title":"agility"},{"location":"types/tes3mobileCreature/#aiplanner","text":"Read-only . Access to the mobile's AI planner and AI package information. Returns : result ( tes3aiPlanner )","title":"aiPlanner"},{"location":"types/tes3mobileCreature/#alarm","text":"The actor's alarm AI value. Returns : result (number)","title":"alarm"},{"location":"types/tes3mobileCreature/#animationcontroller","text":"Read-only . No description yet available. Returns : result ( tes3actorAnimationController )","title":"animationController"},{"location":"types/tes3mobileCreature/#armorrating","text":"Read-only . The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the applyDamage function. Armour mitigation calculation: x = damage / (damage + target.armorRating) damage *= max(fCombatArmorMinMult, x) if damage < 1 then damage = 1 end Returns : result (number)","title":"armorRating"},{"location":"types/tes3mobileCreature/#attackbonus","text":"Direct access to the actor's attack bonus effect attribute. Returns : result (number)","title":"attackBonus"},{"location":"types/tes3mobileCreature/#attacked","text":"Read-only . Friendly access to the actor's flag that controls if the actor has been attacked. Returns : result (boolean)","title":"attacked"},{"location":"types/tes3mobileCreature/#attributes","text":"Read-only . Access to a table of 8 tes3statistic objects for the actor's attributes. Returns : result (table)","title":"attributes"},{"location":"types/tes3mobileCreature/#bartergold","text":"The current amount of gold that the actor has access to for bartering. Returns : result (number)","title":"barterGold"},{"location":"types/tes3mobileCreature/#blind","text":"Direct access to the actor's blind effect attribute. Returns : result (number)","title":"blind"},{"location":"types/tes3mobileCreature/#boundsize","text":"A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 )","title":"boundSize"},{"location":"types/tes3mobileCreature/#boundsize2d","text":"A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 )","title":"boundSize2D"},{"location":"types/tes3mobileCreature/#cell","text":"Read-only . Fetches the cell that the actor is in. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3mobileCreature/#cellx","text":"Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellX"},{"location":"types/tes3mobileCreature/#celly","text":"Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellY"},{"location":"types/tes3mobileCreature/#chameleon","text":"Direct access to the actor's chameleon effect attribute. Returns : result (number)","title":"chameleon"},{"location":"types/tes3mobileCreature/#collidingreference","text":"Read-only . The reference that the mobile has collided with this frame. Returns : result ( tes3reference )","title":"collidingReference"},{"location":"types/tes3mobileCreature/#combat","text":"Read-only . Direct access to the creature's combat statistic. This is a creature-specific generalization of skills, where this statistic is used in place of all combat skills. To get an individual skill value by skill ID, see the getSkillValue or getSkillStatistic methods. Returns : result ( tes3statistic )","title":"combat"},{"location":"types/tes3mobileCreature/#combatsession","text":"Read-only . Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Returns : result ( tes3combatSession )","title":"combatSession"},{"location":"types/tes3mobileCreature/#corpsehourstamp","text":"No description yet available. Returns : result (number)","title":"corpseHourstamp"},{"location":"types/tes3mobileCreature/#currentenchanteditem","text":"Read-only . The currently equipped enchanted item that the actor will use. Returns : result ( tes3equipmentStack )","title":"currentEnchantedItem"},{"location":"types/tes3mobileCreature/#currentspell","text":"Read-only . The currently equipped spell that the actor will use. Returns : result ( tes3spell )","title":"currentSpell"},{"location":"types/tes3mobileCreature/#effectattributes","text":"Read-only . Access to a table of 24 numbers for the actor's effect attributes. In order those are: attackBonus , sanctuary , resistMagicka , resistFire , resistFrost , resistShock , resistCommonDisease , resistBlightDisease , resistCorprus , resistPoison , resistParalysis , chameleon , resistNormalWeapons , waterBreathing , waterWalking , swiftSwim , jump , levitate , shield , sound , silence , blind , paralyze , and invisibility . Each of those can be accessed individually. For example, tes3mobileActor.chameleon . Returns : result (table)","title":"effectAttributes"},{"location":"types/tes3mobileCreature/#encumbrance","text":"Read-only . Access to the actor's encumbrance statistic. Returns : result ( tes3statistic )","title":"encumbrance"},{"location":"types/tes3mobileCreature/#endurance","text":"Read-only . Direct access to the actor's endurance attribute statistic. Returns : result ( tes3statistic )","title":"endurance"},{"location":"types/tes3mobileCreature/#facing","text":"Read-only . The facing of the actor, in radians. Returns : result (number)","title":"facing"},{"location":"types/tes3mobileCreature/#fatigue","text":"Read-only . Access to the actor's fatigue statistic. Returns : result ( tes3statistic )","title":"fatigue"},{"location":"types/tes3mobileCreature/#fight","text":"The actor's fight AI value. Returns : result (number)","title":"fight"},{"location":"types/tes3mobileCreature/#flags","text":"Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"flags"},{"location":"types/tes3mobileCreature/#flee","text":"The actor's flee AI value. Returns : result (number)","title":"flee"},{"location":"types/tes3mobileCreature/#flyspeed","text":"Read-only . The calculated fly movement speed. Returns : result (number)","title":"flySpeed"},{"location":"types/tes3mobileCreature/#friendlyactors","text":"Read-only . A collection of other tes3mobileActor s that this actor considers friendly. Returns : result ( tes3iterator )","title":"friendlyActors"},{"location":"types/tes3mobileCreature/#greetduration","text":"No description yet available. Returns : result (number)","title":"greetDuration"},{"location":"types/tes3mobileCreature/#greettimer","text":"Read-only . No description yet available. Returns : result (number)","title":"greetTimer"},{"location":"types/tes3mobileCreature/#health","text":"Read-only . Access to the actor's health statistic. Returns : result ( tes3statistic )","title":"health"},{"location":"types/tes3mobileCreature/#height","text":"The height of the mobile above the ground. Returns : result (number)","title":"height"},{"location":"types/tes3mobileCreature/#hello","text":"The actor's hello AI value. Returns : result (number)","title":"hello"},{"location":"types/tes3mobileCreature/#holdbreathtime","text":"No description yet available. Returns : result (number)","title":"holdBreathTime"},{"location":"types/tes3mobileCreature/#hostileactors","text":"Read-only . A collection of other tes3mobileActor s that this actor considers hostile. Returns : result ( tes3iterator )","title":"hostileActors"},{"location":"types/tes3mobileCreature/#idleanim","text":"Read-only . Friendly access to the actor's flag that controls if the actor is using their idle animation. Returns : result (boolean)","title":"idleAnim"},{"location":"types/tes3mobileCreature/#impulsevelocity","text":"A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 )","title":"impulseVelocity"},{"location":"types/tes3mobileCreature/#incombat","text":"Read-only . Friendly access to the actor's flag that controls if the actor is in combat. Returns : result (boolean)","title":"inCombat"},{"location":"types/tes3mobileCreature/#intelligence","text":"Read-only . Direct access to the actor's intelligence attribute statistic. Returns : result ( tes3statistic )","title":"intelligence"},{"location":"types/tes3mobileCreature/#invisibility","text":"Direct access to the actor's invisibility effect attribute. Returns : result (number)","title":"invisibility"},{"location":"types/tes3mobileCreature/#iscrittable","text":"Read-only . Friendly access to the actor's flag that controls if the actor can be critically hit. Returns : result (boolean)","title":"isCrittable"},{"location":"types/tes3mobileCreature/#isdead","text":"Read-only . True if the actor is dead. Returns : result (boolean)","title":"isDead"},{"location":"types/tes3mobileCreature/#isfalling","text":"Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge. Returns : result (boolean)","title":"isFalling"},{"location":"types/tes3mobileCreature/#isflying","text":"Direct access to the actor's current movement flags, showing if the actor is flying. Returns : result (boolean)","title":"isFlying"},{"location":"types/tes3mobileCreature/#isjumping","text":"Direct access to the actor's current movement flags, showing if the actor is jumping. Returns : result (boolean)","title":"isJumping"},{"location":"types/tes3mobileCreature/#ismovingback","text":"Direct access to the actor's current movement flags, showing if the actor is moving backwards. Returns : result (boolean)","title":"isMovingBack"},{"location":"types/tes3mobileCreature/#ismovingforward","text":"Direct access to the actor's current movement flags, showing if the actor is moving forwards. Returns : result (boolean)","title":"isMovingForward"},{"location":"types/tes3mobileCreature/#ismovingleft","text":"Direct access to the actor's current movement flags, showing if the actor is moving left. Returns : result (boolean)","title":"isMovingLeft"},{"location":"types/tes3mobileCreature/#ismovingright","text":"Direct access to the actor's current movement flags, showing if the actor is moving right. Returns : result (boolean)","title":"isMovingRight"},{"location":"types/tes3mobileCreature/#isplayerdetected","text":"Direct access to the actor's flag showing the player was detected on the last detection check. Returns : result (boolean)","title":"isPlayerDetected"},{"location":"types/tes3mobileCreature/#isplayerhidden","text":"Direct access to the actor's flag showing the player was hidden on the last detection check. Returns : result (boolean)","title":"isPlayerHidden"},{"location":"types/tes3mobileCreature/#isrunning","text":"Direct access to the actor's current movement flags, showing if the actor is running. Returns : result (boolean)","title":"isRunning"},{"location":"types/tes3mobileCreature/#issneaking","text":"Direct access to the actor's current movement flags, showing if the actor is sneaking. Returns : result (boolean)","title":"isSneaking"},{"location":"types/tes3mobileCreature/#isswimming","text":"Direct access to the actor's current movement flags, showing if the actor is swimming. Returns : result (boolean)","title":"isSwimming"},{"location":"types/tes3mobileCreature/#isturningleft","text":"Direct access to the actor's current movement flags, showing if the actor is turning left. Returns : result (boolean)","title":"isTurningLeft"},{"location":"types/tes3mobileCreature/#isturningright","text":"Direct access to the actor's current movement flags, showing if the actor is turning right. Returns : result (boolean)","title":"isTurningRight"},{"location":"types/tes3mobileCreature/#iswalking","text":"Direct access to the actor's current movement flags, showing if the actor is walking. Returns : result (boolean)","title":"isWalking"},{"location":"types/tes3mobileCreature/#jump","text":"Direct access to the actor's jump effect attribute. Returns : result (number)","title":"jump"},{"location":"types/tes3mobileCreature/#lastgroundz","text":"No description yet available. Returns : result (number)","title":"lastGroundZ"},{"location":"types/tes3mobileCreature/#levitate","text":"Direct access to the actor's levitate effect attribute. Returns : result (number)","title":"levitate"},{"location":"types/tes3mobileCreature/#luck","text":"Read-only . Direct access to the actor's luck attribute statistic. Returns : result ( tes3statistic )","title":"luck"},{"location":"types/tes3mobileCreature/#magic","text":"Read-only . Direct access to the creature's magic statistic. This is a creature-specific generalization of skills, where this statistic is used in place of all magic skills. To get an individual skill value by skill ID, see the getSkillValue or getSkillStatistic methods. Returns : result ( tes3statistic )","title":"magic"},{"location":"types/tes3mobileCreature/#magicka","text":"Read-only . Access to the actor's magicka statistic. Returns : result ( tes3statistic )","title":"magicka"},{"location":"types/tes3mobileCreature/#magickamultiplier","text":"Read-only . Access to the actor's magicka multiplier statistic. Returns : result ( tes3statistic )","title":"magickaMultiplier"},{"location":"types/tes3mobileCreature/#mobtomobcollision","text":"Allows modifying if this actor will collide with other actors. When true (default), the actor cannot move through other actors. When false , the actor is allowed to move through other actors, and other actors can move through it. May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor. Returns : result (boolean)","title":"mobToMobCollision"},{"location":"types/tes3mobileCreature/#movementcollision","text":"Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean)","title":"movementCollision"},{"location":"types/tes3mobileCreature/#movementflags","text":"Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"movementFlags"},{"location":"types/tes3mobileCreature/#movespeed","text":"Read-only . The calculated base movement speed. Returns : result (number)","title":"moveSpeed"},{"location":"types/tes3mobileCreature/#nextactionweight","text":"Read-only . No description yet available. Returns : result (number)","title":"nextActionWeight"},{"location":"types/tes3mobileCreature/#object","text":"Read-only . The actor object that maps to this mobile. Returns : result ( tes3creatureInstance )","title":"object"},{"location":"types/tes3mobileCreature/#objecttype","text":"Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number)","title":"objectType"},{"location":"types/tes3mobileCreature/#paralyze","text":"Direct access to the actor's paralyze effect attribute. Returns : result (number)","title":"paralyze"},{"location":"types/tes3mobileCreature/#personality","text":"Read-only . Direct access to the actor's personality attribute statistic. Returns : result ( tes3statistic )","title":"personality"},{"location":"types/tes3mobileCreature/#playerdistance","text":"The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number)","title":"playerDistance"},{"location":"types/tes3mobileCreature/#position","text":"A vector that represents the 3D position of the object. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3mobileCreature/#prevmovementflags","text":"Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"prevMovementFlags"},{"location":"types/tes3mobileCreature/#readiedammo","text":"The currently equipped ammo. Returns : result ( tes3equipmentStack )","title":"readiedAmmo"},{"location":"types/tes3mobileCreature/#readiedammocount","text":"The number of ammo equipped for the readied ammo. Returns : result (number)","title":"readiedAmmoCount"},{"location":"types/tes3mobileCreature/#readiedshield","text":"The currently equipped shield. Returns : result ( tes3equipmentStack )","title":"readiedShield"},{"location":"types/tes3mobileCreature/#readiedweapon","text":"The currently equipped weapon. Returns : result ( tes3equipmentStack )","title":"readiedWeapon"},{"location":"types/tes3mobileCreature/#reference","text":"Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3mobileCreature/#resistblightdisease","text":"Direct access to the actor's blight disease resistance effect attribute. Returns : result (number)","title":"resistBlightDisease"},{"location":"types/tes3mobileCreature/#resistcommondisease","text":"Direct access to the actor's common disease resistance effect attribute. Returns : result (number)","title":"resistCommonDisease"},{"location":"types/tes3mobileCreature/#resistcorprus","text":"Direct access to the actor's corprus disease resistance effect attribute. Returns : result (number)","title":"resistCorprus"},{"location":"types/tes3mobileCreature/#resistfire","text":"Direct access to the actor's fire resistance effect attribute. Returns : result (number)","title":"resistFire"},{"location":"types/tes3mobileCreature/#resistfrost","text":"Direct access to the actor's frost resistance effect attribute. Returns : result (number)","title":"resistFrost"},{"location":"types/tes3mobileCreature/#resistmagicka","text":"Direct access to the actor's magicka resistance effect attribute. Returns : result (number)","title":"resistMagicka"},{"location":"types/tes3mobileCreature/#resistnormalweapons","text":"Direct access to the actor's normal weapon resistance effect attribute. Returns : result (number)","title":"resistNormalWeapons"},{"location":"types/tes3mobileCreature/#resistparalysis","text":"Direct access to the actor's paralysis resistance effect attribute. Returns : result (number)","title":"resistParalysis"},{"location":"types/tes3mobileCreature/#resistpoison","text":"Direct access to the actor's poison resistance effect attribute. Returns : result (number)","title":"resistPoison"},{"location":"types/tes3mobileCreature/#resistshock","text":"Direct access to the actor's shock resistance effect attribute. Returns : result (number)","title":"resistShock"},{"location":"types/tes3mobileCreature/#runspeed","text":"Read-only . The calculated run movement speed. Returns : result (number)","title":"runSpeed"},{"location":"types/tes3mobileCreature/#sanctuary","text":"Direct access to the actor's sanctuary effect attribute. Returns : result (number)","title":"sanctuary"},{"location":"types/tes3mobileCreature/#scaninterval","text":"Read-only . No description yet available. Returns : result (number)","title":"scanInterval"},{"location":"types/tes3mobileCreature/#scantimer","text":"Read-only . No description yet available. Returns : result (number)","title":"scanTimer"},{"location":"types/tes3mobileCreature/#shield","text":"Direct access to the actor's shield effect attribute. Returns : result (number)","title":"shield"},{"location":"types/tes3mobileCreature/#silence","text":"Direct access to the actor's silence effect attribute. Returns : result (number)","title":"silence"},{"location":"types/tes3mobileCreature/#skills","text":"Read-only . An array-style table with access to the three creature skill statistics. Returns : result (table)","title":"skills"},{"location":"types/tes3mobileCreature/#sound","text":"Direct access to the actor's sound effect attribute. Returns : result (number)","title":"sound"},{"location":"types/tes3mobileCreature/#speed","text":"Read-only . Direct access to the actor's speed attribute statistic. Returns : result ( tes3statistic )","title":"speed"},{"location":"types/tes3mobileCreature/#spellreadied","text":"Read-only . Friendly access to the actor's flag that controls if the actor has a spell readied. Returns : result (boolean)","title":"spellReadied"},{"location":"types/tes3mobileCreature/#stealth","text":"Read-only . Direct access to the creature's stealth statistic. This is a creature-specific generalization of skills, where this statistic is used in place of all stealth skills. To get an individual skill value by skill ID, see the getSkillValue or getSkillStatistic methods. Returns : result ( tes3statistic )","title":"stealth"},{"location":"types/tes3mobileCreature/#strength","text":"Read-only . Direct access to the actor's strength attribute statistic. Returns : result ( tes3statistic )","title":"strength"},{"location":"types/tes3mobileCreature/#swiftswim","text":"Direct access to the actor's swift swim effect attribute. Returns : result (number)","title":"swiftSwim"},{"location":"types/tes3mobileCreature/#swimrunspeed","text":"Read-only . The calculated swim movement speed while running. Returns : result (number)","title":"swimRunSpeed"},{"location":"types/tes3mobileCreature/#swimspeed","text":"Read-only . The calculated swim movement speed. Returns : result (number)","title":"swimSpeed"},{"location":"types/tes3mobileCreature/#talkedto","text":"Direct access to the actor's flag that shows it was recently talked to. Returns : result (boolean)","title":"talkedTo"},{"location":"types/tes3mobileCreature/#torchslot","text":"The currently equipped light. Returns : result ( tes3equipmentStack )","title":"torchSlot"},{"location":"types/tes3mobileCreature/#underwater","text":"Read-only . Friendly access to the actor's flag that controls if the actor is under water. Returns : result (boolean)","title":"underwater"},{"location":"types/tes3mobileCreature/#velocity","text":"A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/tes3mobileCreature/#walkspeed","text":"Read-only . The calculated walk movement speed. Returns : result (number)","title":"walkSpeed"},{"location":"types/tes3mobileCreature/#waterbreathing","text":"Direct access to the actor's water breathing effect attribute. Returns : result (number)","title":"waterBreathing"},{"location":"types/tes3mobileCreature/#waterwalking","text":"Direct access to the actor's water walking effect attribute. Returns : result (number)","title":"waterWalking"},{"location":"types/tes3mobileCreature/#weapondrawn","text":"Read-only . Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again. Returns : result (boolean)","title":"weaponDrawn"},{"location":"types/tes3mobileCreature/#weaponready","text":"A flag for if the actor has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the actor to take out their weapon. Setting it to false will cause the actor to put it away. Returns : result (boolean)","title":"weaponReady"},{"location":"types/tes3mobileCreature/#werewolf","text":"Read-only . Friendly access to the actor's flag that controls if the actor in werewolf form. Returns : result (boolean)","title":"werewolf"},{"location":"types/tes3mobileCreature/#width","text":"Read-only . No description yet available. Returns : result (number)","title":"width"},{"location":"types/tes3mobileCreature/#willpower","text":"Read-only . Direct access to the actor's willpower attribute statistic. Returns : result ( tes3statistic )","title":"willpower"},{"location":"types/tes3mobileCreature/#methods","text":"","title":"Methods"},{"location":"types/tes3mobileCreature/#applydamage","text":"Damages the actor, with options to control mitigation and difficulty scaling. Invokes the damage and damaged events, with tes3.damageSource.script source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = tes3mobileActor : applyDamage ({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Optional . If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. applyDifficulty (boolean): Optional . If the game difficulty modifier should be applied. Must be used with the playerAttack argument to apply the correct modifier. playerAttack (boolean): Optional . If the attack came from the player. Used for difficulty calculation. doNotChangeHealth (boolean): Optional . If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit. Returns : result (number)","title":"applyDamage"},{"location":"types/tes3mobileCreature/#applyfatiguedamage","text":"Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the damageHandToHand and damagedHandToHand events, with tes3.damageSource.script source. Returns the actual fatigue damage done. local result = tes3mobileActor : applyFatigueDamage ( fatigueDamage , swing , alwaysPlayHitVoice ) Parameters : fatigueDamage (number): The amount of fatigue damage to apply. swing (number): Optional . The attack swing magnitude, range 0-1. Only modifies hit volume. alwaysPlayHitVoice (boolean): Optional . Always play the hit reaction voiceover. Returns : result (number)","title":"applyFatigueDamage"},{"location":"types/tes3mobileCreature/#applyhealthdamage","text":"Deprecated, please use applyDamage() instead. Damages the actor. local result = tes3mobileActor : applyHealthDamage ( damage , isPlayerAttack , scaleWithDifficulty , doNotChangeHealth ) Parameters : damage (number): The amount of damage to apply. isPlayerAttack (boolean): Used to calculate difficulty scaling. scaleWithDifficulty (boolean): Apply difficulty scaling to the damage. doNotChangeHealth (boolean): Do all the audiovisual effects of damage without the health change. Returns : result (boolean)","title":"applyHealthDamage"},{"location":"types/tes3mobileCreature/#calceffectivedamage","text":"Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = tes3mobileActor : calcEffectiveDamage ({ damage = ..., applyArmor = ..., resistAttribute = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Optional . If armor should mitigate the incoming damage. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. Returns : result (number)","title":"calcEffectiveDamage"},{"location":"types/tes3mobileCreature/#equip","text":"Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return true . local itemEquipped = tes3mobileActor : equip ({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... }) Parameters : params (table) item ( tes3item , string): The item to equip. itemData ( tes3itemData ): Optional . The item data of the specific item to equip. addItem (boolean): If true , the item will be added to the actor's inventory if needed. selectBestCondition (boolean): If true , the item in the inventory with the best condition and best charge will be selected. selectWorstCondition (boolean): If true , the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools. Returns : itemEquipped (boolean)","title":"equip"},{"location":"types/tes3mobileCreature/#getactivemagiceffects","text":"Fetches a filtered list of the active magic effects on the actor. Returns a table with tes3activeMagicEffect items. local result = tes3mobileActor : getActiveMagicEffects ({ effect = ..., serial = ... }) Parameters : params (table): Optional . effect (number): Optional . The magic effect ID to search for. serial (number): Optional . The magic instance serial to search for. Returns : result (table)","title":"getActiveMagicEffects"},{"location":"types/tes3mobileCreature/#getbootsweight","text":"Read-only . Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped. local result = tes3mobileActor : getBootsWeight () Returns : result (number)","title":"getBootsWeight"},{"location":"types/tes3mobileCreature/#getfatigueterm","text":"Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base)) local result = tes3mobileActor : getFatigueTerm () Returns : result (number)","title":"getFatigueTerm"},{"location":"types/tes3mobileCreature/#getpowerusetimestamp","text":"Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . local timestamp = tes3mobileActor : getPowerUseTimestamp ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : timestamp (number)","title":"getPowerUseTimestamp"},{"location":"types/tes3mobileCreature/#getskillstatistic","text":"Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = tes3mobileActor : getSkillStatistic ( skillId ) Parameters : skillId (number): The index of the skill statistic to fetch. Maps to values in tes3.skill namespace. Returns : result ( tes3statisticSkill )","title":"getSkillStatistic"},{"location":"types/tes3mobileCreature/#getskillvalue","text":"Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = tes3mobileActor : getSkillValue ( skillId ) Parameters : skillId (number): The index of the skill statistic's value to fetch. Maps to values in tes3.skill namespace. Returns : result (number)","title":"getSkillValue"},{"location":"types/tes3mobileCreature/#getviewtoactor","text":"No description yet available. local result = tes3mobileActor : getViewToActor () Returns : result (number)","title":"getViewToActor"},{"location":"types/tes3mobileCreature/#getviewtopoint","text":"No description yet available. local result = tes3mobileActor : getViewToPoint () Returns : result (number)","title":"getViewToPoint"},{"location":"types/tes3mobileCreature/#getviewtopointwithfacing","text":"No description yet available. local result = tes3mobileActor : getViewToPointWithFacing () Returns : result (number)","title":"getViewToPointWithFacing"},{"location":"types/tes3mobileCreature/#getweaponspeed","text":"Fetches the weapon speed of the actor's currently equipped weapon, or 1.0 if no weapon is equipped. local result = tes3mobileActor : getWeaponSpeed () Returns : result (number)","title":"getWeaponSpeed"},{"location":"types/tes3mobileCreature/#hasfreeaction","text":"If true, the actor isn't paralyzed, dead, stunned, or otherwise unable to take action. local result = tes3mobileActor : hasFreeAction () Returns : result (boolean)","title":"hasFreeAction"},{"location":"types/tes3mobileCreature/#hasusedpower","text":"Check if a power has been used and is recharging. local result = tes3mobileActor : hasUsedPower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean)","title":"hasUsedPower"},{"location":"types/tes3mobileCreature/#isaffectedbyobject","text":"Determines if the actor is currently being affected by a given alchemy, enchantment, or spell. local result = tes3mobileActor : isAffectedByObject ( object ) Parameters : object ( tes3alchemy , tes3enchantment , tes3spell ): The magic to check for. Returns : result (boolean)","title":"isAffectedByObject"},{"location":"types/tes3mobileCreature/#rechargepower","text":"Makes a power immediately available for casting again. local result = tes3mobileActor : rechargePower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (number)","title":"rechargePower"},{"location":"types/tes3mobileCreature/#setpowerusetimestamp","text":"Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. tes3mobileActor : setPowerUseTimestamp ( power , timestamp ) Parameters : power ( tes3spell ): The spell object for the power. timestamp (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() .","title":"setPowerUseTimestamp"},{"location":"types/tes3mobileCreature/#startcombat","text":"Forces the actor into combat with another actor. tes3mobileActor : startCombat ( target ) Parameters : target ( tes3mobileActor )","title":"startCombat"},{"location":"types/tes3mobileCreature/#startdialogue","text":"Starts dialogue with this actor for the player. tes3mobileActor : startDialogue ()","title":"startDialogue"},{"location":"types/tes3mobileCreature/#stopcombat","text":"Ends combat for the actor. tes3mobileActor : stopCombat ( force ) Parameters : force (boolean): If false , the function won't stop combat if the actor has other valid hostile targets.","title":"stopCombat"},{"location":"types/tes3mobileCreature/#unequip","text":"Unequips one or more items from the actor. local itemUnequipped = tes3mobileActor : unequip ({ item = ..., type = ..., armorSlot = ..., clothingSlot = ... }) Parameters : params (table) item ( tes3item , string): Optional . The item to unequip. type (number): Optional . The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from tes3.objectType can be passed here. armorSlot (number): Optional . The armor slot to unequip. Maps to values in tes3.armorSlot namespace. clothingSlot (number): Optional . The clothing slot to unequip. Maps to values in tes3.clothingSlot namespace Returns : itemUnequipped (boolean)","title":"unequip"},{"location":"types/tes3mobileCreature/#updatederivedstatistics","text":"Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use tes3.modStatistic() . tes3mobileActor : updateDerivedStatistics ( attribute ) Parameters : attribute ( tes3statistic ): Optional . Limits the update to statistics derived from this attribute. e.g. mobile:updateDerivedStatistics(mobile.strength) . If not present, all derived statistics will be updated.","title":"updateDerivedStatistics"},{"location":"types/tes3mobileCreature/#updateopacity","text":"Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects. tes3mobileActor : updateOpacity ()","title":"updateOpacity"},{"location":"types/tes3mobileNPC/","text":"tes3mobileNPC \u2693\ufe0e A mobile object for an NPC. This type inherits the following: tes3mobileActor , tes3mobileObject Properties \u2693\ufe0e acrobatics \u2693\ufe0e Read-only . Direct access to the NPC's acrobatics skill statistic. Returns : result ( tes3statisticSkill ) actionBeforeCombat \u2693\ufe0e Read-only . Action data stored before the actor entered combat. Returns : result ( tes3actionData ) actionData \u2693\ufe0e Read-only . Current action data. Pre-combat action data is stored in the actionBeforeCombat property. Returns : result ( tes3actionData ) activeAI \u2693\ufe0e Friendly access to the actor's flag that controls if AI is active. Returns : result (boolean) activeMagicEffectList \u2693\ufe0e Read-only . The active magic effects on the actor, from which all others can be accessed. A table with tes3activeMagicEffect items. Returns : result (table) actorType \u2693\ufe0e Read-only . The type of the mobile actor. Maps to values in tes3.actorType namespace. Returns : result (number) agility \u2693\ufe0e Read-only . Direct access to the actor's agility attribute statistic. Returns : result ( tes3statistic ) aiPlanner \u2693\ufe0e Read-only . Access to the mobile's AI planner and AI package information. Returns : result ( tes3aiPlanner ) alarm \u2693\ufe0e The actor's alarm AI value. Returns : result (number) alchemy \u2693\ufe0e Read-only . Direct access to the NPC's alchemy skill statistic. Returns : result ( tes3statisticSkill ) alteration \u2693\ufe0e Read-only . Direct access to the NPC's alteration skill statistic. Returns : result ( tes3statisticSkill ) animationController \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3actorAnimationController ) armorer \u2693\ufe0e Read-only . Direct access to the NPC's armorer skill statistic. Returns : result ( tes3statisticSkill ) armorRating \u2693\ufe0e Read-only . The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the applyDamage function. Armour mitigation calculation: x = damage / (damage + target.armorRating) damage *= max(fCombatArmorMinMult, x) if damage < 1 then damage = 1 end Returns : result (number) athletics \u2693\ufe0e Read-only . Direct access to the NPC's athletics skill statistic. Returns : result ( tes3statisticSkill ) attackBonus \u2693\ufe0e Direct access to the actor's attack bonus effect attribute. Returns : result (number) attacked \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor has been attacked. Returns : result (boolean) attributes \u2693\ufe0e Read-only . Access to a table of 8 tes3statistic objects for the actor's attributes. Returns : result (table) axe \u2693\ufe0e Read-only . Direct access to the NPC's axe skill statistic. Returns : result ( tes3statisticSkill ) barterGold \u2693\ufe0e The current amount of gold that the actor has access to for bartering. Returns : result (number) blind \u2693\ufe0e Direct access to the actor's blind effect attribute. Returns : result (number) block \u2693\ufe0e Read-only . Direct access to the NPC's block skill statistic. Returns : result ( tes3statisticSkill ) bluntWeapon \u2693\ufe0e Read-only . Direct access to the NPC's blunt weapon skill statistic. Returns : result ( tes3statisticSkill ) boundSize \u2693\ufe0e A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 ) boundSize2D \u2693\ufe0e A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 ) cell \u2693\ufe0e Read-only . Fetches the cell that the actor is in. Returns : result ( tes3cell ) cellX \u2693\ufe0e Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number) cellY \u2693\ufe0e Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number) chameleon \u2693\ufe0e Direct access to the actor's chameleon effect attribute. Returns : result (number) collidingReference \u2693\ufe0e Read-only . The reference that the mobile has collided with this frame. Returns : result ( tes3reference ) combatSession \u2693\ufe0e Read-only . Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Returns : result ( tes3combatSession ) conjuration \u2693\ufe0e Read-only . Direct access to the NPC's conjuration skill statistic. Returns : result ( tes3statisticSkill ) corpseHourstamp \u2693\ufe0e No description yet available. Returns : result (number) currentEnchantedItem \u2693\ufe0e Read-only . The currently equipped enchanted item that the actor will use. Returns : result ( tes3equipmentStack ) currentSpell \u2693\ufe0e Read-only . The currently equipped spell that the actor will use. Returns : result ( tes3spell ) destruction \u2693\ufe0e Read-only . Direct access to the NPC's destruction skill statistic. Returns : result ( tes3statisticSkill ) effectAttributes \u2693\ufe0e Read-only . Access to a table of 24 numbers for the actor's effect attributes. In order those are: attackBonus , sanctuary , resistMagicka , resistFire , resistFrost , resistShock , resistCommonDisease , resistBlightDisease , resistCorprus , resistPoison , resistParalysis , chameleon , resistNormalWeapons , waterBreathing , waterWalking , swiftSwim , jump , levitate , shield , sound , silence , blind , paralyze , and invisibility . Each of those can be accessed individually. For example, tes3mobileActor.chameleon . Returns : result (table) enchant \u2693\ufe0e Read-only . Direct access to the NPC's enchant skill statistic. Returns : result ( tes3statisticSkill ) encumbrance \u2693\ufe0e Read-only . Access to the actor's encumbrance statistic. Returns : result ( tes3statistic ) endurance \u2693\ufe0e Read-only . Direct access to the actor's endurance attribute statistic. Returns : result ( tes3statistic ) facing \u2693\ufe0e Read-only . The facing of the actor, in radians. Returns : result (number) fatigue \u2693\ufe0e Read-only . Access to the actor's fatigue statistic. Returns : result ( tes3statistic ) fight \u2693\ufe0e The actor's fight AI value. Returns : result (number) flags \u2693\ufe0e Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (number) flee \u2693\ufe0e The actor's flee AI value. Returns : result (number) flySpeed \u2693\ufe0e Read-only . The calculated fly movement speed. Returns : result (number) forceJump \u2693\ufe0e Toggle flag for if the NPC jumps. Returns : result (boolean) forceMoveJump \u2693\ufe0e Toggle flag for if the NPC moves and jumps. Returns : result (boolean) forceRun \u2693\ufe0e Toggle flag for if the NPC runs. Returns : result (boolean) forceSneak \u2693\ufe0e Toggle flag for if the NPC sneaks. Returns : result (boolean) friendlyActors \u2693\ufe0e Read-only . A collection of other tes3mobileActor s that this actor considers friendly. Returns : result ( tes3iterator ) greetDuration \u2693\ufe0e No description yet available. Returns : result (number) greetTimer \u2693\ufe0e Read-only . No description yet available. Returns : result (number) handToHand \u2693\ufe0e Read-only . Direct access to the NPC's hand to hand skill statistic. Returns : result ( tes3statisticSkill ) health \u2693\ufe0e Read-only . Access to the actor's health statistic. Returns : result ( tes3statistic ) heavyArmor \u2693\ufe0e Read-only . Direct access to the NPC's heavy armor skill statistic. Returns : result ( tes3statisticSkill ) height \u2693\ufe0e The height of the mobile above the ground. Returns : result (number) hello \u2693\ufe0e The actor's hello AI value. Returns : result (number) holdBreathTime \u2693\ufe0e No description yet available. Returns : result (number) hostileActors \u2693\ufe0e Read-only . A collection of other tes3mobileActor s that this actor considers hostile. Returns : result ( tes3iterator ) idleAnim \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is using their idle animation. Returns : result (boolean) illusion \u2693\ufe0e Read-only . Direct access to the NPC's illusion skill statistic. Returns : result ( tes3statisticSkill ) impulseVelocity \u2693\ufe0e A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 ) inCombat \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is in combat. Returns : result (boolean) intelligence \u2693\ufe0e Read-only . Direct access to the actor's intelligence attribute statistic. Returns : result ( tes3statistic ) invisibility \u2693\ufe0e Direct access to the actor's invisibility effect attribute. Returns : result (number) isCrittable \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor can be critically hit. Returns : result (boolean) isDead \u2693\ufe0e Read-only . True if the actor is dead. Returns : result (boolean) isFalling \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge. Returns : result (boolean) isFlying \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is flying. Returns : result (boolean) isJumping \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is jumping. Returns : result (boolean) isMovingBack \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving backwards. Returns : result (boolean) isMovingForward \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving forwards. Returns : result (boolean) isMovingLeft \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving left. Returns : result (boolean) isMovingRight \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving right. Returns : result (boolean) isPlayerDetected \u2693\ufe0e Direct access to the actor's flag showing the player was detected on the last detection check. Returns : result (boolean) isPlayerHidden \u2693\ufe0e Direct access to the actor's flag showing the player was hidden on the last detection check. Returns : result (boolean) isRunning \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is running. Returns : result (boolean) isSneaking \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is sneaking. Returns : result (boolean) isSwimming \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is swimming. Returns : result (boolean) isTurningLeft \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is turning left. Returns : result (boolean) isTurningRight \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is turning right. Returns : result (boolean) isWalking \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is walking. Returns : result (boolean) jump \u2693\ufe0e Direct access to the actor's jump effect attribute. Returns : result (number) lastGroundZ \u2693\ufe0e No description yet available. Returns : result (number) levitate \u2693\ufe0e Direct access to the actor's levitate effect attribute. Returns : result (number) lightArmor \u2693\ufe0e Read-only . Direct access to the NPC's light armor skill statistic. Returns : result ( tes3statisticSkill ) longBlade \u2693\ufe0e Read-only . Direct access to the NPC's long blade skill statistic. Returns : result ( tes3statisticSkill ) luck \u2693\ufe0e Read-only . Direct access to the actor's luck attribute statistic. Returns : result ( tes3statistic ) magicka \u2693\ufe0e Read-only . Access to the actor's magicka statistic. Returns : result ( tes3statistic ) magickaMultiplier \u2693\ufe0e Read-only . Access to the actor's magicka multiplier statistic. Returns : result ( tes3statistic ) marksman \u2693\ufe0e Read-only . Direct access to the NPC's marksman skill statistic. Returns : result ( tes3statisticSkill ) mediumArmor \u2693\ufe0e Read-only . Direct access to the NPC's medium armor skill statistic. Returns : result ( tes3statisticSkill ) mercantile \u2693\ufe0e Read-only . Direct access to the NPC's mercantile skill statistic. Returns : result ( tes3statisticSkill ) mobToMobCollision \u2693\ufe0e Allows modifying if this actor will collide with other actors. When true (default), the actor cannot move through other actors. When false , the actor is allowed to move through other actors, and other actors can move through it. May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor. Returns : result (boolean) movementCollision \u2693\ufe0e Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean) movementFlags \u2693\ufe0e Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (number) moveSpeed \u2693\ufe0e Read-only . The calculated base movement speed. Returns : result (number) mysticism \u2693\ufe0e Read-only . Direct access to the NPC's mysticism skill statistic. Returns : result ( tes3statisticSkill ) nextActionWeight \u2693\ufe0e Read-only . No description yet available. Returns : result (number) object \u2693\ufe0e Read-only . The actor object that maps to this mobile. Returns : result ( tes3npcInstance ) objectType \u2693\ufe0e Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number) paralyze \u2693\ufe0e Direct access to the actor's paralyze effect attribute. Returns : result (number) personality \u2693\ufe0e Read-only . Direct access to the actor's personality attribute statistic. Returns : result ( tes3statistic ) playerDistance \u2693\ufe0e The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number) position \u2693\ufe0e A vector that represents the 3D position of the object. Returns : result ( tes3vector3 ) prevMovementFlags \u2693\ufe0e Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (number) readiedAmmo \u2693\ufe0e The currently equipped ammo. Returns : result ( tes3equipmentStack ) readiedAmmoCount \u2693\ufe0e The number of ammo equipped for the readied ammo. Returns : result (number) readiedShield \u2693\ufe0e The currently equipped shield. Returns : result ( tes3equipmentStack ) readiedWeapon \u2693\ufe0e The currently equipped weapon. Returns : result ( tes3equipmentStack ) reference \u2693\ufe0e Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference ) resistBlightDisease \u2693\ufe0e Direct access to the actor's blight disease resistance effect attribute. Returns : result (number) resistCommonDisease \u2693\ufe0e Direct access to the actor's common disease resistance effect attribute. Returns : result (number) resistCorprus \u2693\ufe0e Direct access to the actor's corprus disease resistance effect attribute. Returns : result (number) resistFire \u2693\ufe0e Direct access to the actor's fire resistance effect attribute. Returns : result (number) resistFrost \u2693\ufe0e Direct access to the actor's frost resistance effect attribute. Returns : result (number) resistMagicka \u2693\ufe0e Direct access to the actor's magicka resistance effect attribute. Returns : result (number) resistNormalWeapons \u2693\ufe0e Direct access to the actor's normal weapon resistance effect attribute. Returns : result (number) resistParalysis \u2693\ufe0e Direct access to the actor's paralysis resistance effect attribute. Returns : result (number) resistPoison \u2693\ufe0e Direct access to the actor's poison resistance effect attribute. Returns : result (number) resistShock \u2693\ufe0e Direct access to the actor's shock resistance effect attribute. Returns : result (number) restoration \u2693\ufe0e Read-only . Direct access to the NPC's restoration skill statistic. Returns : result ( tes3statisticSkill ) runSpeed \u2693\ufe0e Read-only . The calculated run movement speed. Returns : result (number) sanctuary \u2693\ufe0e Direct access to the actor's sanctuary effect attribute. Returns : result (number) scanInterval \u2693\ufe0e Read-only . No description yet available. Returns : result (number) scanTimer \u2693\ufe0e Read-only . No description yet available. Returns : result (number) security \u2693\ufe0e Read-only . Direct access to the NPC's security skill statistic. Returns : result ( tes3statisticSkill ) shield \u2693\ufe0e Direct access to the actor's shield effect attribute. Returns : result (number) shortBlade \u2693\ufe0e Read-only . Direct access to the NPC's short blade skill statistic. Returns : result ( tes3statisticSkill ) silence \u2693\ufe0e Direct access to the actor's silence effect attribute. Returns : result (number) skills \u2693\ufe0e Read-only . An array-style table with access to the twenty seven NPC skill statistics ( tes3statisticSkill ). Returns : result (table) sneak \u2693\ufe0e Read-only . Direct access to the NPC's sneak skill statistic. Returns : result ( tes3statisticSkill ) sound \u2693\ufe0e Direct access to the actor's sound effect attribute. Returns : result (number) spear \u2693\ufe0e Read-only . Direct access to the NPC's spear skill statistic. Returns : result ( tes3statisticSkill ) speechcraft \u2693\ufe0e Read-only . Direct access to the NPC's speechcraft skill statistic. Returns : result ( tes3statisticSkill ) speed \u2693\ufe0e Read-only . Direct access to the actor's speed attribute statistic. Returns : result ( tes3statistic ) spellReadied \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor has a spell readied. Returns : result (boolean) strength \u2693\ufe0e Read-only . Direct access to the actor's strength attribute statistic. Returns : result ( tes3statistic ) swiftSwim \u2693\ufe0e Direct access to the actor's swift swim effect attribute. Returns : result (number) swimRunSpeed \u2693\ufe0e Read-only . The calculated swim movement speed while running. Returns : result (number) swimSpeed \u2693\ufe0e Read-only . The calculated swim movement speed. Returns : result (number) talkedTo \u2693\ufe0e Direct access to the actor's flag that shows it was recently talked to. Returns : result (boolean) torchSlot \u2693\ufe0e The currently equipped light. Returns : result ( tes3equipmentStack ) unarmored \u2693\ufe0e Read-only . Direct access to the NPC's unarmored skill statistic. Returns : result ( tes3statisticSkill ) underwater \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is under water. Returns : result (boolean) velocity \u2693\ufe0e A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 ) walkSpeed \u2693\ufe0e Read-only . The calculated walk movement speed. Returns : result (number) waterBreathing \u2693\ufe0e Direct access to the actor's water breathing effect attribute. Returns : result (number) waterWalking \u2693\ufe0e Direct access to the actor's water walking effect attribute. Returns : result (number) weaponDrawn \u2693\ufe0e Read-only . Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again. Returns : result (boolean) weaponReady \u2693\ufe0e A flag for if the actor has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the actor to take out their weapon. Setting it to false will cause the actor to put it away. Returns : result (boolean) werewolf \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor in werewolf form. Returns : result (boolean) width \u2693\ufe0e Read-only . No description yet available. Returns : result (number) willpower \u2693\ufe0e Read-only . Direct access to the actor's willpower attribute statistic. Returns : result ( tes3statistic ) Methods \u2693\ufe0e applyDamage \u2693\ufe0e Damages the actor, with options to control mitigation and difficulty scaling. Invokes the damage and damaged events, with tes3.damageSource.script source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = tes3mobileActor : applyDamage ({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Optional . If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. applyDifficulty (boolean): Optional . If the game difficulty modifier should be applied. Must be used with the playerAttack argument to apply the correct modifier. playerAttack (boolean): Optional . If the attack came from the player. Used for difficulty calculation. doNotChangeHealth (boolean): Optional . If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit. Returns : result (number) applyFatigueDamage \u2693\ufe0e Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the damageHandToHand and damagedHandToHand events, with tes3.damageSource.script source. Returns the actual fatigue damage done. local result = tes3mobileActor : applyFatigueDamage ( fatigueDamage , swing , alwaysPlayHitVoice ) Parameters : fatigueDamage (number): The amount of fatigue damage to apply. swing (number): Optional . The attack swing magnitude, range 0-1. Only modifies hit volume. alwaysPlayHitVoice (boolean): Optional . Always play the hit reaction voiceover. Returns : result (number) applyHealthDamage \u2693\ufe0e Deprecated, please use applyDamage() instead. Damages the actor. local result = tes3mobileActor : applyHealthDamage ( damage , isPlayerAttack , scaleWithDifficulty , doNotChangeHealth ) Parameters : damage (number): The amount of damage to apply. isPlayerAttack (boolean): Used to calculate difficulty scaling. scaleWithDifficulty (boolean): Apply difficulty scaling to the damage. doNotChangeHealth (boolean): Do all the audiovisual effects of damage without the health change. Returns : result (boolean) calcEffectiveDamage \u2693\ufe0e Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = tes3mobileActor : calcEffectiveDamage ({ damage = ..., applyArmor = ..., resistAttribute = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Optional . If armor should mitigate the incoming damage. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. Returns : result (number) equip \u2693\ufe0e Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return true . local itemEquipped = tes3mobileActor : equip ({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... }) Parameters : params (table) item ( tes3item , string): The item to equip. itemData ( tes3itemData ): Optional . The item data of the specific item to equip. addItem (boolean): If true , the item will be added to the actor's inventory if needed. selectBestCondition (boolean): If true , the item in the inventory with the best condition and best charge will be selected. selectWorstCondition (boolean): If true , the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools. Returns : itemEquipped (boolean) getActiveMagicEffects \u2693\ufe0e Fetches a filtered list of the active magic effects on the actor. Returns a table with tes3activeMagicEffect items. local result = tes3mobileActor : getActiveMagicEffects ({ effect = ..., serial = ... }) Parameters : params (table): Optional . effect (number): Optional . The magic effect ID to search for. serial (number): Optional . The magic instance serial to search for. Returns : result (table) getBootsWeight \u2693\ufe0e Read-only . Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped. local result = tes3mobileActor : getBootsWeight () Returns : result (number) getFatigueTerm \u2693\ufe0e Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base)) local result = tes3mobileActor : getFatigueTerm () Returns : result (number) getPowerUseTimestamp \u2693\ufe0e Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . local timestamp = tes3mobileActor : getPowerUseTimestamp ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : timestamp (number) getSkillStatistic \u2693\ufe0e Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = tes3mobileActor : getSkillStatistic ( skillId ) Parameters : skillId (number): The index of the skill statistic to fetch. Maps to values in tes3.skill namespace. Returns : result ( tes3statisticSkill ) getSkillValue \u2693\ufe0e Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = tes3mobileActor : getSkillValue ( skillId ) Parameters : skillId (number): The index of the skill statistic's value to fetch. Maps to values in tes3.skill namespace. Returns : result (number) getViewToActor \u2693\ufe0e No description yet available. local result = tes3mobileActor : getViewToActor () Returns : result (number) getViewToPoint \u2693\ufe0e No description yet available. local result = tes3mobileActor : getViewToPoint () Returns : result (number) getViewToPointWithFacing \u2693\ufe0e No description yet available. local result = tes3mobileActor : getViewToPointWithFacing () Returns : result (number) getWeaponSpeed \u2693\ufe0e Fetches the weapon speed of the actor's currently equipped weapon, or 1.0 if no weapon is equipped. local result = tes3mobileActor : getWeaponSpeed () Returns : result (number) hasFreeAction \u2693\ufe0e If true, the actor isn't paralyzed, dead, stunned, or otherwise unable to take action. local result = tes3mobileActor : hasFreeAction () Returns : result (boolean) hasUsedPower \u2693\ufe0e Check if a power has been used and is recharging. local result = tes3mobileActor : hasUsedPower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean) isAffectedByObject \u2693\ufe0e Determines if the actor is currently being affected by a given alchemy, enchantment, or spell. local result = tes3mobileActor : isAffectedByObject ( object ) Parameters : object ( tes3alchemy , tes3enchantment , tes3spell ): The magic to check for. Returns : result (boolean) rechargePower \u2693\ufe0e Makes a power immediately available for casting again. local result = tes3mobileActor : rechargePower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (number) setPowerUseTimestamp \u2693\ufe0e Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. tes3mobileActor : setPowerUseTimestamp ( power , timestamp ) Parameters : power ( tes3spell ): The spell object for the power. timestamp (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . startCombat \u2693\ufe0e Forces the actor into combat with another actor. tes3mobileActor : startCombat ( target ) Parameters : target ( tes3mobileActor ) startDialogue \u2693\ufe0e Starts dialogue with this actor for the player. tes3mobileActor : startDialogue () stopCombat \u2693\ufe0e Ends combat for the actor. tes3mobileActor : stopCombat ( force ) Parameters : force (boolean): If false , the function won't stop combat if the actor has other valid hostile targets. unequip \u2693\ufe0e Unequips one or more items from the actor. local itemUnequipped = tes3mobileActor : unequip ({ item = ..., type = ..., armorSlot = ..., clothingSlot = ... }) Parameters : params (table) item ( tes3item , string): Optional . The item to unequip. type (number): Optional . The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from tes3.objectType can be passed here. armorSlot (number): Optional . The armor slot to unequip. Maps to values in tes3.armorSlot namespace. clothingSlot (number): Optional . The clothing slot to unequip. Maps to values in tes3.clothingSlot namespace Returns : itemUnequipped (boolean) updateDerivedStatistics \u2693\ufe0e Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use tes3.modStatistic() . tes3mobileActor : updateDerivedStatistics ( attribute ) Parameters : attribute ( tes3statistic ): Optional . Limits the update to statistics derived from this attribute. e.g. mobile:updateDerivedStatistics(mobile.strength) . If not present, all derived statistics will be updated. updateOpacity \u2693\ufe0e Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects. tes3mobileActor : updateOpacity ()","title":"tes3mobileNPC"},{"location":"types/tes3mobileNPC/#tes3mobilenpc","text":"A mobile object for an NPC. This type inherits the following: tes3mobileActor , tes3mobileObject","title":"tes3mobileNPC"},{"location":"types/tes3mobileNPC/#properties","text":"","title":"Properties"},{"location":"types/tes3mobileNPC/#acrobatics","text":"Read-only . Direct access to the NPC's acrobatics skill statistic. Returns : result ( tes3statisticSkill )","title":"acrobatics"},{"location":"types/tes3mobileNPC/#actionbeforecombat","text":"Read-only . Action data stored before the actor entered combat. Returns : result ( tes3actionData )","title":"actionBeforeCombat"},{"location":"types/tes3mobileNPC/#actiondata","text":"Read-only . Current action data. Pre-combat action data is stored in the actionBeforeCombat property. Returns : result ( tes3actionData )","title":"actionData"},{"location":"types/tes3mobileNPC/#activeai","text":"Friendly access to the actor's flag that controls if AI is active. Returns : result (boolean)","title":"activeAI"},{"location":"types/tes3mobileNPC/#activemagiceffectlist","text":"Read-only . The active magic effects on the actor, from which all others can be accessed. A table with tes3activeMagicEffect items. Returns : result (table)","title":"activeMagicEffectList"},{"location":"types/tes3mobileNPC/#actortype","text":"Read-only . The type of the mobile actor. Maps to values in tes3.actorType namespace. Returns : result (number)","title":"actorType"},{"location":"types/tes3mobileNPC/#agility","text":"Read-only . Direct access to the actor's agility attribute statistic. Returns : result ( tes3statistic )","title":"agility"},{"location":"types/tes3mobileNPC/#aiplanner","text":"Read-only . Access to the mobile's AI planner and AI package information. Returns : result ( tes3aiPlanner )","title":"aiPlanner"},{"location":"types/tes3mobileNPC/#alarm","text":"The actor's alarm AI value. Returns : result (number)","title":"alarm"},{"location":"types/tes3mobileNPC/#alchemy","text":"Read-only . Direct access to the NPC's alchemy skill statistic. Returns : result ( tes3statisticSkill )","title":"alchemy"},{"location":"types/tes3mobileNPC/#alteration","text":"Read-only . Direct access to the NPC's alteration skill statistic. Returns : result ( tes3statisticSkill )","title":"alteration"},{"location":"types/tes3mobileNPC/#animationcontroller","text":"Read-only . No description yet available. Returns : result ( tes3actorAnimationController )","title":"animationController"},{"location":"types/tes3mobileNPC/#armorer","text":"Read-only . Direct access to the NPC's armorer skill statistic. Returns : result ( tes3statisticSkill )","title":"armorer"},{"location":"types/tes3mobileNPC/#armorrating","text":"Read-only . The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the applyDamage function. Armour mitigation calculation: x = damage / (damage + target.armorRating) damage *= max(fCombatArmorMinMult, x) if damage < 1 then damage = 1 end Returns : result (number)","title":"armorRating"},{"location":"types/tes3mobileNPC/#athletics","text":"Read-only . Direct access to the NPC's athletics skill statistic. Returns : result ( tes3statisticSkill )","title":"athletics"},{"location":"types/tes3mobileNPC/#attackbonus","text":"Direct access to the actor's attack bonus effect attribute. Returns : result (number)","title":"attackBonus"},{"location":"types/tes3mobileNPC/#attacked","text":"Read-only . Friendly access to the actor's flag that controls if the actor has been attacked. Returns : result (boolean)","title":"attacked"},{"location":"types/tes3mobileNPC/#attributes","text":"Read-only . Access to a table of 8 tes3statistic objects for the actor's attributes. Returns : result (table)","title":"attributes"},{"location":"types/tes3mobileNPC/#axe","text":"Read-only . Direct access to the NPC's axe skill statistic. Returns : result ( tes3statisticSkill )","title":"axe"},{"location":"types/tes3mobileNPC/#bartergold","text":"The current amount of gold that the actor has access to for bartering. Returns : result (number)","title":"barterGold"},{"location":"types/tes3mobileNPC/#blind","text":"Direct access to the actor's blind effect attribute. Returns : result (number)","title":"blind"},{"location":"types/tes3mobileNPC/#block","text":"Read-only . Direct access to the NPC's block skill statistic. Returns : result ( tes3statisticSkill )","title":"block"},{"location":"types/tes3mobileNPC/#bluntweapon","text":"Read-only . Direct access to the NPC's blunt weapon skill statistic. Returns : result ( tes3statisticSkill )","title":"bluntWeapon"},{"location":"types/tes3mobileNPC/#boundsize","text":"A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 )","title":"boundSize"},{"location":"types/tes3mobileNPC/#boundsize2d","text":"A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 )","title":"boundSize2D"},{"location":"types/tes3mobileNPC/#cell","text":"Read-only . Fetches the cell that the actor is in. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3mobileNPC/#cellx","text":"Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellX"},{"location":"types/tes3mobileNPC/#celly","text":"Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellY"},{"location":"types/tes3mobileNPC/#chameleon","text":"Direct access to the actor's chameleon effect attribute. Returns : result (number)","title":"chameleon"},{"location":"types/tes3mobileNPC/#collidingreference","text":"Read-only . The reference that the mobile has collided with this frame. Returns : result ( tes3reference )","title":"collidingReference"},{"location":"types/tes3mobileNPC/#combatsession","text":"Read-only . Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Returns : result ( tes3combatSession )","title":"combatSession"},{"location":"types/tes3mobileNPC/#conjuration","text":"Read-only . Direct access to the NPC's conjuration skill statistic. Returns : result ( tes3statisticSkill )","title":"conjuration"},{"location":"types/tes3mobileNPC/#corpsehourstamp","text":"No description yet available. Returns : result (number)","title":"corpseHourstamp"},{"location":"types/tes3mobileNPC/#currentenchanteditem","text":"Read-only . The currently equipped enchanted item that the actor will use. Returns : result ( tes3equipmentStack )","title":"currentEnchantedItem"},{"location":"types/tes3mobileNPC/#currentspell","text":"Read-only . The currently equipped spell that the actor will use. Returns : result ( tes3spell )","title":"currentSpell"},{"location":"types/tes3mobileNPC/#destruction","text":"Read-only . Direct access to the NPC's destruction skill statistic. Returns : result ( tes3statisticSkill )","title":"destruction"},{"location":"types/tes3mobileNPC/#effectattributes","text":"Read-only . Access to a table of 24 numbers for the actor's effect attributes. In order those are: attackBonus , sanctuary , resistMagicka , resistFire , resistFrost , resistShock , resistCommonDisease , resistBlightDisease , resistCorprus , resistPoison , resistParalysis , chameleon , resistNormalWeapons , waterBreathing , waterWalking , swiftSwim , jump , levitate , shield , sound , silence , blind , paralyze , and invisibility . Each of those can be accessed individually. For example, tes3mobileActor.chameleon . Returns : result (table)","title":"effectAttributes"},{"location":"types/tes3mobileNPC/#enchant","text":"Read-only . Direct access to the NPC's enchant skill statistic. Returns : result ( tes3statisticSkill )","title":"enchant"},{"location":"types/tes3mobileNPC/#encumbrance","text":"Read-only . Access to the actor's encumbrance statistic. Returns : result ( tes3statistic )","title":"encumbrance"},{"location":"types/tes3mobileNPC/#endurance","text":"Read-only . Direct access to the actor's endurance attribute statistic. Returns : result ( tes3statistic )","title":"endurance"},{"location":"types/tes3mobileNPC/#facing","text":"Read-only . The facing of the actor, in radians. Returns : result (number)","title":"facing"},{"location":"types/tes3mobileNPC/#fatigue","text":"Read-only . Access to the actor's fatigue statistic. Returns : result ( tes3statistic )","title":"fatigue"},{"location":"types/tes3mobileNPC/#fight","text":"The actor's fight AI value. Returns : result (number)","title":"fight"},{"location":"types/tes3mobileNPC/#flags","text":"Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"flags"},{"location":"types/tes3mobileNPC/#flee","text":"The actor's flee AI value. Returns : result (number)","title":"flee"},{"location":"types/tes3mobileNPC/#flyspeed","text":"Read-only . The calculated fly movement speed. Returns : result (number)","title":"flySpeed"},{"location":"types/tes3mobileNPC/#forcejump","text":"Toggle flag for if the NPC jumps. Returns : result (boolean)","title":"forceJump"},{"location":"types/tes3mobileNPC/#forcemovejump","text":"Toggle flag for if the NPC moves and jumps. Returns : result (boolean)","title":"forceMoveJump"},{"location":"types/tes3mobileNPC/#forcerun","text":"Toggle flag for if the NPC runs. Returns : result (boolean)","title":"forceRun"},{"location":"types/tes3mobileNPC/#forcesneak","text":"Toggle flag for if the NPC sneaks. Returns : result (boolean)","title":"forceSneak"},{"location":"types/tes3mobileNPC/#friendlyactors","text":"Read-only . A collection of other tes3mobileActor s that this actor considers friendly. Returns : result ( tes3iterator )","title":"friendlyActors"},{"location":"types/tes3mobileNPC/#greetduration","text":"No description yet available. Returns : result (number)","title":"greetDuration"},{"location":"types/tes3mobileNPC/#greettimer","text":"Read-only . No description yet available. Returns : result (number)","title":"greetTimer"},{"location":"types/tes3mobileNPC/#handtohand","text":"Read-only . Direct access to the NPC's hand to hand skill statistic. Returns : result ( tes3statisticSkill )","title":"handToHand"},{"location":"types/tes3mobileNPC/#health","text":"Read-only . Access to the actor's health statistic. Returns : result ( tes3statistic )","title":"health"},{"location":"types/tes3mobileNPC/#heavyarmor","text":"Read-only . Direct access to the NPC's heavy armor skill statistic. Returns : result ( tes3statisticSkill )","title":"heavyArmor"},{"location":"types/tes3mobileNPC/#height","text":"The height of the mobile above the ground. Returns : result (number)","title":"height"},{"location":"types/tes3mobileNPC/#hello","text":"The actor's hello AI value. Returns : result (number)","title":"hello"},{"location":"types/tes3mobileNPC/#holdbreathtime","text":"No description yet available. Returns : result (number)","title":"holdBreathTime"},{"location":"types/tes3mobileNPC/#hostileactors","text":"Read-only . A collection of other tes3mobileActor s that this actor considers hostile. Returns : result ( tes3iterator )","title":"hostileActors"},{"location":"types/tes3mobileNPC/#idleanim","text":"Read-only . Friendly access to the actor's flag that controls if the actor is using their idle animation. Returns : result (boolean)","title":"idleAnim"},{"location":"types/tes3mobileNPC/#illusion","text":"Read-only . Direct access to the NPC's illusion skill statistic. Returns : result ( tes3statisticSkill )","title":"illusion"},{"location":"types/tes3mobileNPC/#impulsevelocity","text":"A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 )","title":"impulseVelocity"},{"location":"types/tes3mobileNPC/#incombat","text":"Read-only . Friendly access to the actor's flag that controls if the actor is in combat. Returns : result (boolean)","title":"inCombat"},{"location":"types/tes3mobileNPC/#intelligence","text":"Read-only . Direct access to the actor's intelligence attribute statistic. Returns : result ( tes3statistic )","title":"intelligence"},{"location":"types/tes3mobileNPC/#invisibility","text":"Direct access to the actor's invisibility effect attribute. Returns : result (number)","title":"invisibility"},{"location":"types/tes3mobileNPC/#iscrittable","text":"Read-only . Friendly access to the actor's flag that controls if the actor can be critically hit. Returns : result (boolean)","title":"isCrittable"},{"location":"types/tes3mobileNPC/#isdead","text":"Read-only . True if the actor is dead. Returns : result (boolean)","title":"isDead"},{"location":"types/tes3mobileNPC/#isfalling","text":"Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge. Returns : result (boolean)","title":"isFalling"},{"location":"types/tes3mobileNPC/#isflying","text":"Direct access to the actor's current movement flags, showing if the actor is flying. Returns : result (boolean)","title":"isFlying"},{"location":"types/tes3mobileNPC/#isjumping","text":"Direct access to the actor's current movement flags, showing if the actor is jumping. Returns : result (boolean)","title":"isJumping"},{"location":"types/tes3mobileNPC/#ismovingback","text":"Direct access to the actor's current movement flags, showing if the actor is moving backwards. Returns : result (boolean)","title":"isMovingBack"},{"location":"types/tes3mobileNPC/#ismovingforward","text":"Direct access to the actor's current movement flags, showing if the actor is moving forwards. Returns : result (boolean)","title":"isMovingForward"},{"location":"types/tes3mobileNPC/#ismovingleft","text":"Direct access to the actor's current movement flags, showing if the actor is moving left. Returns : result (boolean)","title":"isMovingLeft"},{"location":"types/tes3mobileNPC/#ismovingright","text":"Direct access to the actor's current movement flags, showing if the actor is moving right. Returns : result (boolean)","title":"isMovingRight"},{"location":"types/tes3mobileNPC/#isplayerdetected","text":"Direct access to the actor's flag showing the player was detected on the last detection check. Returns : result (boolean)","title":"isPlayerDetected"},{"location":"types/tes3mobileNPC/#isplayerhidden","text":"Direct access to the actor's flag showing the player was hidden on the last detection check. Returns : result (boolean)","title":"isPlayerHidden"},{"location":"types/tes3mobileNPC/#isrunning","text":"Direct access to the actor's current movement flags, showing if the actor is running. Returns : result (boolean)","title":"isRunning"},{"location":"types/tes3mobileNPC/#issneaking","text":"Direct access to the actor's current movement flags, showing if the actor is sneaking. Returns : result (boolean)","title":"isSneaking"},{"location":"types/tes3mobileNPC/#isswimming","text":"Direct access to the actor's current movement flags, showing if the actor is swimming. Returns : result (boolean)","title":"isSwimming"},{"location":"types/tes3mobileNPC/#isturningleft","text":"Direct access to the actor's current movement flags, showing if the actor is turning left. Returns : result (boolean)","title":"isTurningLeft"},{"location":"types/tes3mobileNPC/#isturningright","text":"Direct access to the actor's current movement flags, showing if the actor is turning right. Returns : result (boolean)","title":"isTurningRight"},{"location":"types/tes3mobileNPC/#iswalking","text":"Direct access to the actor's current movement flags, showing if the actor is walking. Returns : result (boolean)","title":"isWalking"},{"location":"types/tes3mobileNPC/#jump","text":"Direct access to the actor's jump effect attribute. Returns : result (number)","title":"jump"},{"location":"types/tes3mobileNPC/#lastgroundz","text":"No description yet available. Returns : result (number)","title":"lastGroundZ"},{"location":"types/tes3mobileNPC/#levitate","text":"Direct access to the actor's levitate effect attribute. Returns : result (number)","title":"levitate"},{"location":"types/tes3mobileNPC/#lightarmor","text":"Read-only . Direct access to the NPC's light armor skill statistic. Returns : result ( tes3statisticSkill )","title":"lightArmor"},{"location":"types/tes3mobileNPC/#longblade","text":"Read-only . Direct access to the NPC's long blade skill statistic. Returns : result ( tes3statisticSkill )","title":"longBlade"},{"location":"types/tes3mobileNPC/#luck","text":"Read-only . Direct access to the actor's luck attribute statistic. Returns : result ( tes3statistic )","title":"luck"},{"location":"types/tes3mobileNPC/#magicka","text":"Read-only . Access to the actor's magicka statistic. Returns : result ( tes3statistic )","title":"magicka"},{"location":"types/tes3mobileNPC/#magickamultiplier","text":"Read-only . Access to the actor's magicka multiplier statistic. Returns : result ( tes3statistic )","title":"magickaMultiplier"},{"location":"types/tes3mobileNPC/#marksman","text":"Read-only . Direct access to the NPC's marksman skill statistic. Returns : result ( tes3statisticSkill )","title":"marksman"},{"location":"types/tes3mobileNPC/#mediumarmor","text":"Read-only . Direct access to the NPC's medium armor skill statistic. Returns : result ( tes3statisticSkill )","title":"mediumArmor"},{"location":"types/tes3mobileNPC/#mercantile","text":"Read-only . Direct access to the NPC's mercantile skill statistic. Returns : result ( tes3statisticSkill )","title":"mercantile"},{"location":"types/tes3mobileNPC/#mobtomobcollision","text":"Allows modifying if this actor will collide with other actors. When true (default), the actor cannot move through other actors. When false , the actor is allowed to move through other actors, and other actors can move through it. May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor. Returns : result (boolean)","title":"mobToMobCollision"},{"location":"types/tes3mobileNPC/#movementcollision","text":"Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean)","title":"movementCollision"},{"location":"types/tes3mobileNPC/#movementflags","text":"Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"movementFlags"},{"location":"types/tes3mobileNPC/#movespeed","text":"Read-only . The calculated base movement speed. Returns : result (number)","title":"moveSpeed"},{"location":"types/tes3mobileNPC/#mysticism","text":"Read-only . Direct access to the NPC's mysticism skill statistic. Returns : result ( tes3statisticSkill )","title":"mysticism"},{"location":"types/tes3mobileNPC/#nextactionweight","text":"Read-only . No description yet available. Returns : result (number)","title":"nextActionWeight"},{"location":"types/tes3mobileNPC/#object","text":"Read-only . The actor object that maps to this mobile. Returns : result ( tes3npcInstance )","title":"object"},{"location":"types/tes3mobileNPC/#objecttype","text":"Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number)","title":"objectType"},{"location":"types/tes3mobileNPC/#paralyze","text":"Direct access to the actor's paralyze effect attribute. Returns : result (number)","title":"paralyze"},{"location":"types/tes3mobileNPC/#personality","text":"Read-only . Direct access to the actor's personality attribute statistic. Returns : result ( tes3statistic )","title":"personality"},{"location":"types/tes3mobileNPC/#playerdistance","text":"The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number)","title":"playerDistance"},{"location":"types/tes3mobileNPC/#position","text":"A vector that represents the 3D position of the object. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3mobileNPC/#prevmovementflags","text":"Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"prevMovementFlags"},{"location":"types/tes3mobileNPC/#readiedammo","text":"The currently equipped ammo. Returns : result ( tes3equipmentStack )","title":"readiedAmmo"},{"location":"types/tes3mobileNPC/#readiedammocount","text":"The number of ammo equipped for the readied ammo. Returns : result (number)","title":"readiedAmmoCount"},{"location":"types/tes3mobileNPC/#readiedshield","text":"The currently equipped shield. Returns : result ( tes3equipmentStack )","title":"readiedShield"},{"location":"types/tes3mobileNPC/#readiedweapon","text":"The currently equipped weapon. Returns : result ( tes3equipmentStack )","title":"readiedWeapon"},{"location":"types/tes3mobileNPC/#reference","text":"Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3mobileNPC/#resistblightdisease","text":"Direct access to the actor's blight disease resistance effect attribute. Returns : result (number)","title":"resistBlightDisease"},{"location":"types/tes3mobileNPC/#resistcommondisease","text":"Direct access to the actor's common disease resistance effect attribute. Returns : result (number)","title":"resistCommonDisease"},{"location":"types/tes3mobileNPC/#resistcorprus","text":"Direct access to the actor's corprus disease resistance effect attribute. Returns : result (number)","title":"resistCorprus"},{"location":"types/tes3mobileNPC/#resistfire","text":"Direct access to the actor's fire resistance effect attribute. Returns : result (number)","title":"resistFire"},{"location":"types/tes3mobileNPC/#resistfrost","text":"Direct access to the actor's frost resistance effect attribute. Returns : result (number)","title":"resistFrost"},{"location":"types/tes3mobileNPC/#resistmagicka","text":"Direct access to the actor's magicka resistance effect attribute. Returns : result (number)","title":"resistMagicka"},{"location":"types/tes3mobileNPC/#resistnormalweapons","text":"Direct access to the actor's normal weapon resistance effect attribute. Returns : result (number)","title":"resistNormalWeapons"},{"location":"types/tes3mobileNPC/#resistparalysis","text":"Direct access to the actor's paralysis resistance effect attribute. Returns : result (number)","title":"resistParalysis"},{"location":"types/tes3mobileNPC/#resistpoison","text":"Direct access to the actor's poison resistance effect attribute. Returns : result (number)","title":"resistPoison"},{"location":"types/tes3mobileNPC/#resistshock","text":"Direct access to the actor's shock resistance effect attribute. Returns : result (number)","title":"resistShock"},{"location":"types/tes3mobileNPC/#restoration","text":"Read-only . Direct access to the NPC's restoration skill statistic. Returns : result ( tes3statisticSkill )","title":"restoration"},{"location":"types/tes3mobileNPC/#runspeed","text":"Read-only . The calculated run movement speed. Returns : result (number)","title":"runSpeed"},{"location":"types/tes3mobileNPC/#sanctuary","text":"Direct access to the actor's sanctuary effect attribute. Returns : result (number)","title":"sanctuary"},{"location":"types/tes3mobileNPC/#scaninterval","text":"Read-only . No description yet available. Returns : result (number)","title":"scanInterval"},{"location":"types/tes3mobileNPC/#scantimer","text":"Read-only . No description yet available. Returns : result (number)","title":"scanTimer"},{"location":"types/tes3mobileNPC/#security","text":"Read-only . Direct access to the NPC's security skill statistic. Returns : result ( tes3statisticSkill )","title":"security"},{"location":"types/tes3mobileNPC/#shield","text":"Direct access to the actor's shield effect attribute. Returns : result (number)","title":"shield"},{"location":"types/tes3mobileNPC/#shortblade","text":"Read-only . Direct access to the NPC's short blade skill statistic. Returns : result ( tes3statisticSkill )","title":"shortBlade"},{"location":"types/tes3mobileNPC/#silence","text":"Direct access to the actor's silence effect attribute. Returns : result (number)","title":"silence"},{"location":"types/tes3mobileNPC/#skills","text":"Read-only . An array-style table with access to the twenty seven NPC skill statistics ( tes3statisticSkill ). Returns : result (table)","title":"skills"},{"location":"types/tes3mobileNPC/#sneak","text":"Read-only . Direct access to the NPC's sneak skill statistic. Returns : result ( tes3statisticSkill )","title":"sneak"},{"location":"types/tes3mobileNPC/#sound","text":"Direct access to the actor's sound effect attribute. Returns : result (number)","title":"sound"},{"location":"types/tes3mobileNPC/#spear","text":"Read-only . Direct access to the NPC's spear skill statistic. Returns : result ( tes3statisticSkill )","title":"spear"},{"location":"types/tes3mobileNPC/#speechcraft","text":"Read-only . Direct access to the NPC's speechcraft skill statistic. Returns : result ( tes3statisticSkill )","title":"speechcraft"},{"location":"types/tes3mobileNPC/#speed","text":"Read-only . Direct access to the actor's speed attribute statistic. Returns : result ( tes3statistic )","title":"speed"},{"location":"types/tes3mobileNPC/#spellreadied","text":"Read-only . Friendly access to the actor's flag that controls if the actor has a spell readied. Returns : result (boolean)","title":"spellReadied"},{"location":"types/tes3mobileNPC/#strength","text":"Read-only . Direct access to the actor's strength attribute statistic. Returns : result ( tes3statistic )","title":"strength"},{"location":"types/tes3mobileNPC/#swiftswim","text":"Direct access to the actor's swift swim effect attribute. Returns : result (number)","title":"swiftSwim"},{"location":"types/tes3mobileNPC/#swimrunspeed","text":"Read-only . The calculated swim movement speed while running. Returns : result (number)","title":"swimRunSpeed"},{"location":"types/tes3mobileNPC/#swimspeed","text":"Read-only . The calculated swim movement speed. Returns : result (number)","title":"swimSpeed"},{"location":"types/tes3mobileNPC/#talkedto","text":"Direct access to the actor's flag that shows it was recently talked to. Returns : result (boolean)","title":"talkedTo"},{"location":"types/tes3mobileNPC/#torchslot","text":"The currently equipped light. Returns : result ( tes3equipmentStack )","title":"torchSlot"},{"location":"types/tes3mobileNPC/#unarmored","text":"Read-only . Direct access to the NPC's unarmored skill statistic. Returns : result ( tes3statisticSkill )","title":"unarmored"},{"location":"types/tes3mobileNPC/#underwater","text":"Read-only . Friendly access to the actor's flag that controls if the actor is under water. Returns : result (boolean)","title":"underwater"},{"location":"types/tes3mobileNPC/#velocity","text":"A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/tes3mobileNPC/#walkspeed","text":"Read-only . The calculated walk movement speed. Returns : result (number)","title":"walkSpeed"},{"location":"types/tes3mobileNPC/#waterbreathing","text":"Direct access to the actor's water breathing effect attribute. Returns : result (number)","title":"waterBreathing"},{"location":"types/tes3mobileNPC/#waterwalking","text":"Direct access to the actor's water walking effect attribute. Returns : result (number)","title":"waterWalking"},{"location":"types/tes3mobileNPC/#weapondrawn","text":"Read-only . Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again. Returns : result (boolean)","title":"weaponDrawn"},{"location":"types/tes3mobileNPC/#weaponready","text":"A flag for if the actor has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the actor to take out their weapon. Setting it to false will cause the actor to put it away. Returns : result (boolean)","title":"weaponReady"},{"location":"types/tes3mobileNPC/#werewolf","text":"Read-only . Friendly access to the actor's flag that controls if the actor in werewolf form. Returns : result (boolean)","title":"werewolf"},{"location":"types/tes3mobileNPC/#width","text":"Read-only . No description yet available. Returns : result (number)","title":"width"},{"location":"types/tes3mobileNPC/#willpower","text":"Read-only . Direct access to the actor's willpower attribute statistic. Returns : result ( tes3statistic )","title":"willpower"},{"location":"types/tes3mobileNPC/#methods","text":"","title":"Methods"},{"location":"types/tes3mobileNPC/#applydamage","text":"Damages the actor, with options to control mitigation and difficulty scaling. Invokes the damage and damaged events, with tes3.damageSource.script source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = tes3mobileActor : applyDamage ({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Optional . If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. applyDifficulty (boolean): Optional . If the game difficulty modifier should be applied. Must be used with the playerAttack argument to apply the correct modifier. playerAttack (boolean): Optional . If the attack came from the player. Used for difficulty calculation. doNotChangeHealth (boolean): Optional . If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit. Returns : result (number)","title":"applyDamage"},{"location":"types/tes3mobileNPC/#applyfatiguedamage","text":"Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the damageHandToHand and damagedHandToHand events, with tes3.damageSource.script source. Returns the actual fatigue damage done. local result = tes3mobileActor : applyFatigueDamage ( fatigueDamage , swing , alwaysPlayHitVoice ) Parameters : fatigueDamage (number): The amount of fatigue damage to apply. swing (number): Optional . The attack swing magnitude, range 0-1. Only modifies hit volume. alwaysPlayHitVoice (boolean): Optional . Always play the hit reaction voiceover. Returns : result (number)","title":"applyFatigueDamage"},{"location":"types/tes3mobileNPC/#applyhealthdamage","text":"Deprecated, please use applyDamage() instead. Damages the actor. local result = tes3mobileActor : applyHealthDamage ( damage , isPlayerAttack , scaleWithDifficulty , doNotChangeHealth ) Parameters : damage (number): The amount of damage to apply. isPlayerAttack (boolean): Used to calculate difficulty scaling. scaleWithDifficulty (boolean): Apply difficulty scaling to the damage. doNotChangeHealth (boolean): Do all the audiovisual effects of damage without the health change. Returns : result (boolean)","title":"applyHealthDamage"},{"location":"types/tes3mobileNPC/#calceffectivedamage","text":"Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = tes3mobileActor : calcEffectiveDamage ({ damage = ..., applyArmor = ..., resistAttribute = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Optional . If armor should mitigate the incoming damage. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. Returns : result (number)","title":"calcEffectiveDamage"},{"location":"types/tes3mobileNPC/#equip","text":"Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return true . local itemEquipped = tes3mobileActor : equip ({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... }) Parameters : params (table) item ( tes3item , string): The item to equip. itemData ( tes3itemData ): Optional . The item data of the specific item to equip. addItem (boolean): If true , the item will be added to the actor's inventory if needed. selectBestCondition (boolean): If true , the item in the inventory with the best condition and best charge will be selected. selectWorstCondition (boolean): If true , the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools. Returns : itemEquipped (boolean)","title":"equip"},{"location":"types/tes3mobileNPC/#getactivemagiceffects","text":"Fetches a filtered list of the active magic effects on the actor. Returns a table with tes3activeMagicEffect items. local result = tes3mobileActor : getActiveMagicEffects ({ effect = ..., serial = ... }) Parameters : params (table): Optional . effect (number): Optional . The magic effect ID to search for. serial (number): Optional . The magic instance serial to search for. Returns : result (table)","title":"getActiveMagicEffects"},{"location":"types/tes3mobileNPC/#getbootsweight","text":"Read-only . Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped. local result = tes3mobileActor : getBootsWeight () Returns : result (number)","title":"getBootsWeight"},{"location":"types/tes3mobileNPC/#getfatigueterm","text":"Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base)) local result = tes3mobileActor : getFatigueTerm () Returns : result (number)","title":"getFatigueTerm"},{"location":"types/tes3mobileNPC/#getpowerusetimestamp","text":"Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . local timestamp = tes3mobileActor : getPowerUseTimestamp ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : timestamp (number)","title":"getPowerUseTimestamp"},{"location":"types/tes3mobileNPC/#getskillstatistic","text":"Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = tes3mobileActor : getSkillStatistic ( skillId ) Parameters : skillId (number): The index of the skill statistic to fetch. Maps to values in tes3.skill namespace. Returns : result ( tes3statisticSkill )","title":"getSkillStatistic"},{"location":"types/tes3mobileNPC/#getskillvalue","text":"Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = tes3mobileActor : getSkillValue ( skillId ) Parameters : skillId (number): The index of the skill statistic's value to fetch. Maps to values in tes3.skill namespace. Returns : result (number)","title":"getSkillValue"},{"location":"types/tes3mobileNPC/#getviewtoactor","text":"No description yet available. local result = tes3mobileActor : getViewToActor () Returns : result (number)","title":"getViewToActor"},{"location":"types/tes3mobileNPC/#getviewtopoint","text":"No description yet available. local result = tes3mobileActor : getViewToPoint () Returns : result (number)","title":"getViewToPoint"},{"location":"types/tes3mobileNPC/#getviewtopointwithfacing","text":"No description yet available. local result = tes3mobileActor : getViewToPointWithFacing () Returns : result (number)","title":"getViewToPointWithFacing"},{"location":"types/tes3mobileNPC/#getweaponspeed","text":"Fetches the weapon speed of the actor's currently equipped weapon, or 1.0 if no weapon is equipped. local result = tes3mobileActor : getWeaponSpeed () Returns : result (number)","title":"getWeaponSpeed"},{"location":"types/tes3mobileNPC/#hasfreeaction","text":"If true, the actor isn't paralyzed, dead, stunned, or otherwise unable to take action. local result = tes3mobileActor : hasFreeAction () Returns : result (boolean)","title":"hasFreeAction"},{"location":"types/tes3mobileNPC/#hasusedpower","text":"Check if a power has been used and is recharging. local result = tes3mobileActor : hasUsedPower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean)","title":"hasUsedPower"},{"location":"types/tes3mobileNPC/#isaffectedbyobject","text":"Determines if the actor is currently being affected by a given alchemy, enchantment, or spell. local result = tes3mobileActor : isAffectedByObject ( object ) Parameters : object ( tes3alchemy , tes3enchantment , tes3spell ): The magic to check for. Returns : result (boolean)","title":"isAffectedByObject"},{"location":"types/tes3mobileNPC/#rechargepower","text":"Makes a power immediately available for casting again. local result = tes3mobileActor : rechargePower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (number)","title":"rechargePower"},{"location":"types/tes3mobileNPC/#setpowerusetimestamp","text":"Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. tes3mobileActor : setPowerUseTimestamp ( power , timestamp ) Parameters : power ( tes3spell ): The spell object for the power. timestamp (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() .","title":"setPowerUseTimestamp"},{"location":"types/tes3mobileNPC/#startcombat","text":"Forces the actor into combat with another actor. tes3mobileActor : startCombat ( target ) Parameters : target ( tes3mobileActor )","title":"startCombat"},{"location":"types/tes3mobileNPC/#startdialogue","text":"Starts dialogue with this actor for the player. tes3mobileActor : startDialogue ()","title":"startDialogue"},{"location":"types/tes3mobileNPC/#stopcombat","text":"Ends combat for the actor. tes3mobileActor : stopCombat ( force ) Parameters : force (boolean): If false , the function won't stop combat if the actor has other valid hostile targets.","title":"stopCombat"},{"location":"types/tes3mobileNPC/#unequip","text":"Unequips one or more items from the actor. local itemUnequipped = tes3mobileActor : unequip ({ item = ..., type = ..., armorSlot = ..., clothingSlot = ... }) Parameters : params (table) item ( tes3item , string): Optional . The item to unequip. type (number): Optional . The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from tes3.objectType can be passed here. armorSlot (number): Optional . The armor slot to unequip. Maps to values in tes3.armorSlot namespace. clothingSlot (number): Optional . The clothing slot to unequip. Maps to values in tes3.clothingSlot namespace Returns : itemUnequipped (boolean)","title":"unequip"},{"location":"types/tes3mobileNPC/#updatederivedstatistics","text":"Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use tes3.modStatistic() . tes3mobileActor : updateDerivedStatistics ( attribute ) Parameters : attribute ( tes3statistic ): Optional . Limits the update to statistics derived from this attribute. e.g. mobile:updateDerivedStatistics(mobile.strength) . If not present, all derived statistics will be updated.","title":"updateDerivedStatistics"},{"location":"types/tes3mobileNPC/#updateopacity","text":"Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects. tes3mobileActor : updateOpacity ()","title":"updateOpacity"},{"location":"types/tes3mobileObject/","text":"tes3mobileObject \u2693\ufe0e The base object from which all other mobiles (AI/movement using) structures derive. Properties \u2693\ufe0e boundSize \u2693\ufe0e A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 ) boundSize2D \u2693\ufe0e A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 ) cellX \u2693\ufe0e Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number) cellY \u2693\ufe0e Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number) flags \u2693\ufe0e Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (number) height \u2693\ufe0e The height of the mobile above the ground. Returns : result (number) impulseVelocity \u2693\ufe0e A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 ) movementCollision \u2693\ufe0e Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean) movementFlags \u2693\ufe0e Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number) playerDistance \u2693\ufe0e The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number) position \u2693\ufe0e A vector that represents the 3D position of the object. Returns : result ( tes3vector3 ) prevMovementFlags \u2693\ufe0e Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (number) reference \u2693\ufe0e Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference ) velocity \u2693\ufe0e A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 )","title":"tes3mobileObject"},{"location":"types/tes3mobileObject/#tes3mobileobject","text":"The base object from which all other mobiles (AI/movement using) structures derive.","title":"tes3mobileObject"},{"location":"types/tes3mobileObject/#properties","text":"","title":"Properties"},{"location":"types/tes3mobileObject/#boundsize","text":"A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 )","title":"boundSize"},{"location":"types/tes3mobileObject/#boundsize2d","text":"A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 )","title":"boundSize2D"},{"location":"types/tes3mobileObject/#cellx","text":"Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellX"},{"location":"types/tes3mobileObject/#celly","text":"Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellY"},{"location":"types/tes3mobileObject/#flags","text":"Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"flags"},{"location":"types/tes3mobileObject/#height","text":"The height of the mobile above the ground. Returns : result (number)","title":"height"},{"location":"types/tes3mobileObject/#impulsevelocity","text":"A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 )","title":"impulseVelocity"},{"location":"types/tes3mobileObject/#movementcollision","text":"Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean)","title":"movementCollision"},{"location":"types/tes3mobileObject/#movementflags","text":"Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"movementFlags"},{"location":"types/tes3mobileObject/#objecttype","text":"Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number)","title":"objectType"},{"location":"types/tes3mobileObject/#playerdistance","text":"The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number)","title":"playerDistance"},{"location":"types/tes3mobileObject/#position","text":"A vector that represents the 3D position of the object. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3mobileObject/#prevmovementflags","text":"Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"prevMovementFlags"},{"location":"types/tes3mobileObject/#reference","text":"Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3mobileObject/#velocity","text":"A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/tes3mobilePlayer/","text":"tes3mobilePlayer \u2693\ufe0e A mobile object for a the player. This type inherits the following: tes3mobileNPC , tes3mobileActor , tes3mobileObject Properties \u2693\ufe0e acrobatics \u2693\ufe0e Read-only . Direct access to the NPC's acrobatics skill statistic. Returns : result ( tes3statisticSkill ) actionBeforeCombat \u2693\ufe0e Read-only . Action data stored before the actor entered combat. Returns : result ( tes3actionData ) actionData \u2693\ufe0e Read-only . Current action data. Pre-combat action data is stored in the actionBeforeCombat property. Returns : result ( tes3actionData ) activeAI \u2693\ufe0e Friendly access to the actor's flag that controls if AI is active. Returns : result (boolean) activeMagicEffectList \u2693\ufe0e Read-only . The active magic effects on the actor, from which all others can be accessed. A table with tes3activeMagicEffect items. Returns : result (table) actorType \u2693\ufe0e Read-only . The type of the mobile actor. Maps to values in tes3.actorType namespace. Returns : result (number) agility \u2693\ufe0e Read-only . Direct access to the actor's agility attribute statistic. Returns : result ( tes3statistic ) aiPlanner \u2693\ufe0e Read-only . Access to the mobile's AI planner and AI package information. Returns : result ( tes3aiPlanner ) alarm \u2693\ufe0e The actor's alarm AI value. Returns : result (number) alchemy \u2693\ufe0e Read-only . Direct access to the NPC's alchemy skill statistic. Returns : result ( tes3statisticSkill ) alteration \u2693\ufe0e Read-only . Direct access to the NPC's alteration skill statistic. Returns : result ( tes3statisticSkill ) alwaysRun \u2693\ufe0e Toggle flag for if the player should always run. Returns : result (boolean) animationController \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3actorAnimationController ) armorer \u2693\ufe0e Read-only . Direct access to the NPC's armorer skill statistic. Returns : result ( tes3statisticSkill ) armorRating \u2693\ufe0e Read-only . The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the applyDamage function. Armour mitigation calculation: x = damage / (damage + target.armorRating) damage *= max(fCombatArmorMinMult, x) if damage < 1 then damage = 1 end Returns : result (number) athletics \u2693\ufe0e Read-only . Direct access to the NPC's athletics skill statistic. Returns : result ( tes3statisticSkill ) attackBonus \u2693\ufe0e Direct access to the actor's attack bonus effect attribute. Returns : result (number) attackDisabled \u2693\ufe0e Toggle flag for if the player can attack. Returns : result (boolean) attacked \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor has been attacked. Returns : result (boolean) attributes \u2693\ufe0e Read-only . Access to a table of 8 tes3statistic objects for the actor's attributes. Returns : result (table) autoRun \u2693\ufe0e Toggle flag for if the player should constantly run forward. Returns : result (boolean) axe \u2693\ufe0e Read-only . Direct access to the NPC's axe skill statistic. Returns : result ( tes3statisticSkill ) barterGold \u2693\ufe0e The current amount of gold that the actor has access to for bartering. Returns : result (number) birthsign \u2693\ufe0e Read-only . The player's birthsign. Returns : result ( tes3birthsign ) blind \u2693\ufe0e Direct access to the actor's blind effect attribute. Returns : result (number) block \u2693\ufe0e Read-only . Direct access to the NPC's block skill statistic. Returns : result ( tes3statisticSkill ) bluntWeapon \u2693\ufe0e Read-only . Direct access to the NPC's blunt weapon skill statistic. Returns : result ( tes3statisticSkill ) boundSize \u2693\ufe0e A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 ) boundSize2D \u2693\ufe0e A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 ) bounty \u2693\ufe0e The player's current bounty. Returns : result (number) cameraHeight \u2693\ufe0e Access to the player camera height, used for both the first person and third person camera (specifically the orbit centre). It is normally placed at head height by the game, on loading, or when a race is selected. The camera height can be reset to its regular value by setting this property to nil . Returns : result (number) Example: Adjust the camera to match shrunken player scale local function shrink () -- Shrink player. tes3 . player . scale = 0.5 -- Reset camera height to default value. tes3 . mobilePlayer . cameraHeight = nil -- Modify camera height to match scale. tes3 . mobilePlayer . cameraHeight = tes3 . player . scale * tes3 . mobilePlayer . cameraHeight end local function unshrink () tes3 . player . scale = 1 tes3 . mobilePlayer . cameraHeight = nil end castReady \u2693\ufe0e Toggle flag for if the player has casting ready. Returns : result (boolean) cell \u2693\ufe0e Read-only . Fetches the cell that the actor is in. Returns : result ( tes3cell ) cellX \u2693\ufe0e Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number) cellY \u2693\ufe0e Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number) chameleon \u2693\ufe0e Direct access to the actor's chameleon effect attribute. Returns : result (number) clawMultiplier \u2693\ufe0e Read-only . Quick access to the ClawMultiplier global variable. Returns : result ( tes3globalVariable ) collidingReference \u2693\ufe0e Read-only . The reference that the mobile has collided with this frame. Returns : result ( tes3reference ) combatSession \u2693\ufe0e Read-only . Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Returns : result ( tes3combatSession ) conjuration \u2693\ufe0e Read-only . Direct access to the NPC's conjuration skill statistic. Returns : result ( tes3statisticSkill ) controlsDisabled \u2693\ufe0e Toggle flag for if the player's controls are disabled. Returns : result (boolean) corpseHourstamp \u2693\ufe0e No description yet available. Returns : result (number) currentEnchantedItem \u2693\ufe0e Read-only . The currently equipped enchanted item that the actor will use. Returns : result ( tes3equipmentStack ) currentSpell \u2693\ufe0e Read-only . The currently equipped spell that the actor will use. Returns : result ( tes3spell ) destruction \u2693\ufe0e Read-only . Direct access to the NPC's destruction skill statistic. Returns : result ( tes3statisticSkill ) dialogueList \u2693\ufe0e Read-only . Access to the collection that holds what dialogue topics the player has access to. Returns : result ( tes3iterator ) effectAttributes \u2693\ufe0e Read-only . Access to a table of 24 numbers for the actor's effect attributes. In order those are: attackBonus , sanctuary , resistMagicka , resistFire , resistFrost , resistShock , resistCommonDisease , resistBlightDisease , resistCorprus , resistPoison , resistParalysis , chameleon , resistNormalWeapons , waterBreathing , waterWalking , swiftSwim , jump , levitate , shield , sound , silence , blind , paralyze , and invisibility . Each of those can be accessed individually. For example, tes3mobileActor.chameleon . Returns : result (table) enchant \u2693\ufe0e Read-only . Direct access to the NPC's enchant skill statistic. Returns : result ( tes3statisticSkill ) encumbrance \u2693\ufe0e Read-only . Access to the actor's encumbrance statistic. Returns : result ( tes3statistic ) endurance \u2693\ufe0e Read-only . Direct access to the actor's endurance attribute statistic. Returns : result ( tes3statistic ) facing \u2693\ufe0e Read-only . The facing of the actor, in radians. Returns : result (number) fatigue \u2693\ufe0e Read-only . Access to the actor's fatigue statistic. Returns : result ( tes3statistic ) fight \u2693\ufe0e The actor's fight AI value. Returns : result (number) firstPerson \u2693\ufe0e Read-only . Quick access to the first person NPC. Returns : result ( tes3npc ) firstPersonReference \u2693\ufe0e Read-only . Quick access to the first person NPC's reference. Returns : result ( tes3reference ) flags \u2693\ufe0e Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (number) flee \u2693\ufe0e The actor's flee AI value. Returns : result (number) flySpeed \u2693\ufe0e Read-only . The calculated fly movement speed. Returns : result (number) forceJump \u2693\ufe0e Toggle flag for if the NPC jumps. Returns : result (boolean) forceMoveJump \u2693\ufe0e Toggle flag for if the NPC moves and jumps. Returns : result (boolean) forceRun \u2693\ufe0e Toggle flag for if the NPC runs. Returns : result (boolean) forceSneak \u2693\ufe0e Toggle flag for if the NPC sneaks. Returns : result (boolean) friendlyActors \u2693\ufe0e Read-only . A collection of other tes3mobileActor s that this actor considers friendly. Returns : result ( tes3iterator ) greetDuration \u2693\ufe0e No description yet available. Returns : result (number) greetTimer \u2693\ufe0e Read-only . No description yet available. Returns : result (number) handToHand \u2693\ufe0e Read-only . Direct access to the NPC's hand to hand skill statistic. Returns : result ( tes3statisticSkill ) health \u2693\ufe0e Read-only . Access to the actor's health statistic. Returns : result ( tes3statistic ) heavyArmor \u2693\ufe0e Read-only . Direct access to the NPC's heavy armor skill statistic. Returns : result ( tes3statisticSkill ) height \u2693\ufe0e The height of the mobile above the ground. Returns : result (number) hello \u2693\ufe0e The actor's hello AI value. Returns : result (number) holdBreathTime \u2693\ufe0e No description yet available. Returns : result (number) hostileActors \u2693\ufe0e Read-only . A collection of other tes3mobileActor s that this actor considers hostile. Returns : result ( tes3iterator ) idleAnim \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is using their idle animation. Returns : result (boolean) illusion \u2693\ufe0e Read-only . Direct access to the NPC's illusion skill statistic. Returns : result ( tes3statisticSkill ) impulseVelocity \u2693\ufe0e A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 ) inactivityTime \u2693\ufe0e The time that the player has spent inactive. Returns : result (number) inCombat \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is in combat. Returns : result (boolean) inJail \u2693\ufe0e Toggle flag for if the player is currently in jail. Returns : result (boolean) intelligence \u2693\ufe0e Read-only . Direct access to the actor's intelligence attribute statistic. Returns : result ( tes3statistic ) invisibility \u2693\ufe0e Direct access to the actor's invisibility effect attribute. Returns : result (number) is3rdPerson \u2693\ufe0e Read-only . Shows if the player's camera is currently in 3rd person view. Returns : result (boolean) isCrittable \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor can be critically hit. Returns : result (boolean) isDead \u2693\ufe0e Read-only . True if the actor is dead. Returns : result (boolean) isFalling \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge. Returns : result (boolean) isFlying \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is flying. Returns : result (boolean) isJumping \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is jumping. Returns : result (boolean) isMovingBack \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving backwards. Returns : result (boolean) isMovingForward \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving forwards. Returns : result (boolean) isMovingLeft \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving left. Returns : result (boolean) isMovingRight \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving right. Returns : result (boolean) isPlayerDetected \u2693\ufe0e Direct access to the actor's flag showing the player was detected on the last detection check. Returns : result (boolean) isPlayerHidden \u2693\ufe0e Direct access to the actor's flag showing the player was hidden on the last detection check. Returns : result (boolean) isRunning \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is running. Returns : result (boolean) isSneaking \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is sneaking. Returns : result (boolean) isSwimming \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is swimming. Returns : result (boolean) isTurningLeft \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is turning left. Returns : result (boolean) isTurningRight \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is turning right. Returns : result (boolean) isWalking \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is walking. Returns : result (boolean) jump \u2693\ufe0e Direct access to the actor's jump effect attribute. Returns : result (number) jumpingDisabled \u2693\ufe0e Toggle flag for if the player can jump. Returns : result (boolean) knownWerewolf \u2693\ufe0e Read-only . Quick access to the KnownWerewolf global variable. Returns : result ( tes3globalVariable ) lastGroundZ \u2693\ufe0e No description yet available. Returns : result (number) lastUsedAlembic \u2693\ufe0e Read-only . The last used alchemy alembic. Returns : result ( tes3apparatus ) lastUsedAmmoCount \u2693\ufe0e The amount of ammo for the ranged weapon that that was last equipped. Returns : result (number) lastUsedCalcinator \u2693\ufe0e Read-only . The last used alchemy calcinator. Returns : result ( tes3apparatus ) lastUsedMortar \u2693\ufe0e Read-only . The last used alchemy mortar. Returns : result ( tes3apparatus ) lastUsedRetort \u2693\ufe0e Read-only . The last used alchemy retort. Returns : result ( tes3apparatus ) levelupPerSpecialization \u2693\ufe0e Read-only . Array-style table access to how many skill levels there have been for each of the 3 specializations. Returns : result (table) levelUpProgress \u2693\ufe0e The progress the player has made towards leveling up. Returns : result (number) levelupsPerAttribute \u2693\ufe0e Read-only . Array-style table access to how many skill levels there have been for each of the 8 attributes. Returns : result (table) levitate \u2693\ufe0e Direct access to the actor's levitate effect attribute. Returns : result (number) lightArmor \u2693\ufe0e Read-only . Direct access to the NPC's light armor skill statistic. Returns : result ( tes3statisticSkill ) longBlade \u2693\ufe0e Read-only . Direct access to the NPC's long blade skill statistic. Returns : result ( tes3statisticSkill ) luck \u2693\ufe0e Read-only . Direct access to the actor's luck attribute statistic. Returns : result ( tes3statistic ) magicDisabled \u2693\ufe0e Toggle flag for if the player can use magic. Returns : result (boolean) magicka \u2693\ufe0e Read-only . Access to the actor's magicka statistic. Returns : result ( tes3statistic ) magickaMultiplier \u2693\ufe0e Read-only . Access to the actor's magicka multiplier statistic. Returns : result ( tes3statistic ) markLocation \u2693\ufe0e Read-only . Access to the structure that holds the player's current mark/recall location. Returns : result ( tes3markData ) marksman \u2693\ufe0e Read-only . Direct access to the NPC's marksman skill statistic. Returns : result ( tes3statisticSkill ) mediumArmor \u2693\ufe0e Read-only . Direct access to the NPC's medium armor skill statistic. Returns : result ( tes3statisticSkill ) mercantile \u2693\ufe0e Read-only . Direct access to the NPC's mercantile skill statistic. Returns : result ( tes3statisticSkill ) mobToMobCollision \u2693\ufe0e Allows modifying if this actor will collide with other actors. When true (default), the actor cannot move through other actors. When false , the actor is allowed to move through other actors, and other actors can move through it. May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor. Returns : result (boolean) mouseLookDisabled \u2693\ufe0e Toggle flag for if the player's mouse look controls are disabled. Returns : result (boolean) movementCollision \u2693\ufe0e Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean) movementFlags \u2693\ufe0e Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (number) moveSpeed \u2693\ufe0e Read-only . The calculated base movement speed. Returns : result (number) mysticism \u2693\ufe0e Read-only . Direct access to the NPC's mysticism skill statistic. Returns : result ( tes3statisticSkill ) nextActionWeight \u2693\ufe0e Read-only . No description yet available. Returns : result (number) object \u2693\ufe0e Read-only . The actor object that maps to this mobile. Returns : result ( tes3npcInstance ) objectType \u2693\ufe0e Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number) paralyze \u2693\ufe0e Direct access to the actor's paralyze effect attribute. Returns : result (number) personality \u2693\ufe0e Read-only . Direct access to the actor's personality attribute statistic. Returns : result ( tes3statistic ) playerDistance \u2693\ufe0e The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number) position \u2693\ufe0e A vector that represents the 3D position of the object. Returns : result ( tes3vector3 ) prevMovementFlags \u2693\ufe0e Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (number) readiedAmmo \u2693\ufe0e The currently equipped ammo. Returns : result ( tes3equipmentStack ) readiedAmmoCount \u2693\ufe0e The number of ammo equipped for the readied ammo. Returns : result (number) readiedShield \u2693\ufe0e The currently equipped shield. Returns : result ( tes3equipmentStack ) readiedWeapon \u2693\ufe0e The currently equipped weapon. Returns : result ( tes3equipmentStack ) reference \u2693\ufe0e Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference ) resistBlightDisease \u2693\ufe0e Direct access to the actor's blight disease resistance effect attribute. Returns : result (number) resistCommonDisease \u2693\ufe0e Direct access to the actor's common disease resistance effect attribute. Returns : result (number) resistCorprus \u2693\ufe0e Direct access to the actor's corprus disease resistance effect attribute. Returns : result (number) resistFire \u2693\ufe0e Direct access to the actor's fire resistance effect attribute. Returns : result (number) resistFrost \u2693\ufe0e Direct access to the actor's frost resistance effect attribute. Returns : result (number) resistMagicka \u2693\ufe0e Direct access to the actor's magicka resistance effect attribute. Returns : result (number) resistNormalWeapons \u2693\ufe0e Direct access to the actor's normal weapon resistance effect attribute. Returns : result (number) resistParalysis \u2693\ufe0e Direct access to the actor's paralysis resistance effect attribute. Returns : result (number) resistPoison \u2693\ufe0e Direct access to the actor's poison resistance effect attribute. Returns : result (number) resistShock \u2693\ufe0e Direct access to the actor's shock resistance effect attribute. Returns : result (number) restHoursRemaining \u2693\ufe0e How many hours are left while resting. Returns : result (number) restoration \u2693\ufe0e Read-only . Direct access to the NPC's restoration skill statistic. Returns : result ( tes3statisticSkill ) runSpeed \u2693\ufe0e Read-only . The calculated run movement speed. Returns : result (number) sanctuary \u2693\ufe0e Direct access to the actor's sanctuary effect attribute. Returns : result (number) scanInterval \u2693\ufe0e Read-only . No description yet available. Returns : result (number) scanTimer \u2693\ufe0e Read-only . No description yet available. Returns : result (number) security \u2693\ufe0e Read-only . Direct access to the NPC's security skill statistic. Returns : result ( tes3statisticSkill ) shield \u2693\ufe0e Direct access to the actor's shield effect attribute. Returns : result (number) shortBlade \u2693\ufe0e Read-only . Direct access to the NPC's short blade skill statistic. Returns : result ( tes3statisticSkill ) silence \u2693\ufe0e Direct access to the actor's silence effect attribute. Returns : result (number) skillProgress \u2693\ufe0e Read-only . Array-style table access to skill progress for each of the 27 skills. Returns : result (table) skills \u2693\ufe0e Read-only . An array-style table with access to the twenty seven NPC skill statistics ( tes3statisticSkill ). Returns : result (table) sleeping \u2693\ufe0e Toggle flag for if the player is currently sleeping. Returns : result (boolean) sneak \u2693\ufe0e Read-only . Direct access to the NPC's sneak skill statistic. Returns : result ( tes3statisticSkill ) sound \u2693\ufe0e Direct access to the actor's sound effect attribute. Returns : result (number) spear \u2693\ufe0e Read-only . Direct access to the NPC's spear skill statistic. Returns : result ( tes3statisticSkill ) speechcraft \u2693\ufe0e Read-only . Direct access to the NPC's speechcraft skill statistic. Returns : result ( tes3statisticSkill ) speed \u2693\ufe0e Read-only . Direct access to the actor's speed attribute statistic. Returns : result ( tes3statistic ) spellReadied \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor has a spell readied. Returns : result (boolean) strength \u2693\ufe0e Read-only . Direct access to the actor's strength attribute statistic. Returns : result ( tes3statistic ) swiftSwim \u2693\ufe0e Direct access to the actor's swift swim effect attribute. Returns : result (number) swimRunSpeed \u2693\ufe0e Read-only . The calculated swim movement speed while running. Returns : result (number) swimSpeed \u2693\ufe0e Read-only . The calculated swim movement speed. Returns : result (number) talkedTo \u2693\ufe0e Direct access to the actor's flag that shows it was recently talked to. Returns : result (boolean) telekinesis \u2693\ufe0e Direct access to the player's telekinesis effect attribute. Returns : result (number) torchSlot \u2693\ufe0e The currently equipped light. Returns : result ( tes3equipmentStack ) traveling \u2693\ufe0e Toggle flag for if the player is currently travelling. Returns : result (boolean) unarmored \u2693\ufe0e Read-only . Direct access to the NPC's unarmored skill statistic. Returns : result ( tes3statisticSkill ) underwater \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is under water. Returns : result (boolean) vanityDisabled \u2693\ufe0e Toggle flag for if the player's vanity camera is disabled. Returns : result (boolean) velocity \u2693\ufe0e A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 ) viewSwitchDisabled \u2693\ufe0e Toggle flag for if the player can switch between first person and vanity cameras. Returns : result (boolean) visionBonus \u2693\ufe0e Direct access to the player's vision bonus effect attribute. Returns : result (number) waiting \u2693\ufe0e Toggle flag for if the player is currently waiting. Returns : result (boolean) walkSpeed \u2693\ufe0e Read-only . The calculated walk movement speed. Returns : result (number) waterBreathing \u2693\ufe0e Direct access to the actor's water breathing effect attribute. Returns : result (number) waterWalking \u2693\ufe0e Direct access to the actor's water walking effect attribute. Returns : result (number) weaponDrawn \u2693\ufe0e Read-only . Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again. Returns : result (boolean) weaponReady \u2693\ufe0e A flag for if the player has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the player to take out their weapon. Setting it to false will cause the player to put it away. Returns : result (boolean) werewolf \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor in werewolf form. Returns : result (boolean) width \u2693\ufe0e Read-only . No description yet available. Returns : result (number) willpower \u2693\ufe0e Read-only . Direct access to the actor's willpower attribute statistic. Returns : result ( tes3statistic ) Methods \u2693\ufe0e applyDamage \u2693\ufe0e Damages the actor, with options to control mitigation and difficulty scaling. Invokes the damage and damaged events, with tes3.damageSource.script source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = tes3mobileActor : applyDamage ({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Optional . If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. applyDifficulty (boolean): Optional . If the game difficulty modifier should be applied. Must be used with the playerAttack argument to apply the correct modifier. playerAttack (boolean): Optional . If the attack came from the player. Used for difficulty calculation. doNotChangeHealth (boolean): Optional . If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit. Returns : result (number) applyFatigueDamage \u2693\ufe0e Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the damageHandToHand and damagedHandToHand events, with tes3.damageSource.script source. Returns the actual fatigue damage done. local result = tes3mobileActor : applyFatigueDamage ( fatigueDamage , swing , alwaysPlayHitVoice ) Parameters : fatigueDamage (number): The amount of fatigue damage to apply. swing (number): Optional . The attack swing magnitude, range 0-1. Only modifies hit volume. alwaysPlayHitVoice (boolean): Optional . Always play the hit reaction voiceover. Returns : result (number) applyHealthDamage \u2693\ufe0e Deprecated, please use applyDamage() instead. Damages the actor. local result = tes3mobileActor : applyHealthDamage ( damage , isPlayerAttack , scaleWithDifficulty , doNotChangeHealth ) Parameters : damage (number): The amount of damage to apply. isPlayerAttack (boolean): Used to calculate difficulty scaling. scaleWithDifficulty (boolean): Apply difficulty scaling to the damage. doNotChangeHealth (boolean): Do all the audiovisual effects of damage without the health change. Returns : result (boolean) calcEffectiveDamage \u2693\ufe0e Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = tes3mobileActor : calcEffectiveDamage ({ damage = ..., applyArmor = ..., resistAttribute = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Optional . If armor should mitigate the incoming damage. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. Returns : result (number) equip \u2693\ufe0e Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return true . local itemEquipped = tes3mobileActor : equip ({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... }) Parameters : params (table) item ( tes3item , string): The item to equip. itemData ( tes3itemData ): Optional . The item data of the specific item to equip. addItem (boolean): If true , the item will be added to the actor's inventory if needed. selectBestCondition (boolean): If true , the item in the inventory with the best condition and best charge will be selected. selectWorstCondition (boolean): If true , the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools. Returns : itemEquipped (boolean) exerciseSkill \u2693\ufe0e Exercises a skill, providing experience in it. tes3mobilePlayer : exerciseSkill ( skill , progress ) Parameters : skill (number): The skill index to give experience to. progress (number): The amount of experience to grant. getActiveMagicEffects \u2693\ufe0e Fetches a filtered list of the active magic effects on the actor. Returns a table with tes3activeMagicEffect items. local result = tes3mobileActor : getActiveMagicEffects ({ effect = ..., serial = ... }) Parameters : params (table): Optional . effect (number): Optional . The magic effect ID to search for. serial (number): Optional . The magic instance serial to search for. Returns : result (table) getBootsWeight \u2693\ufe0e Read-only . Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped. local result = tes3mobileActor : getBootsWeight () Returns : result (number) getFatigueTerm \u2693\ufe0e Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base)) local result = tes3mobileActor : getFatigueTerm () Returns : result (number) getPowerUseTimestamp \u2693\ufe0e Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . local timestamp = tes3mobileActor : getPowerUseTimestamp ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : timestamp (number) getSkillProgressRequirement \u2693\ufe0e Returns the total progress needed to progress the skill to the next level. local progressNeeded = tes3mobilePlayer : getSkillProgressRequirement ( skill ) Parameters : skill (number): The skill index to check. Returns : progressNeeded (number) getSkillStatistic \u2693\ufe0e Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = tes3mobileActor : getSkillStatistic ( skillId ) Parameters : skillId (number): The index of the skill statistic to fetch. Maps to values in tes3.skill namespace. Returns : result ( tes3statisticSkill ) getSkillValue \u2693\ufe0e Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = tes3mobileActor : getSkillValue ( skillId ) Parameters : skillId (number): The index of the skill statistic's value to fetch. Maps to values in tes3.skill namespace. Returns : result (number) getViewToActor \u2693\ufe0e No description yet available. local result = tes3mobileActor : getViewToActor () Returns : result (number) getViewToPoint \u2693\ufe0e No description yet available. local result = tes3mobileActor : getViewToPoint () Returns : result (number) getViewToPointWithFacing \u2693\ufe0e No description yet available. local result = tes3mobileActor : getViewToPointWithFacing () Returns : result (number) getWeaponSpeed \u2693\ufe0e Fetches the weapon speed of the actor's currently equipped weapon, or 1.0 if no weapon is equipped. local result = tes3mobileActor : getWeaponSpeed () Returns : result (number) hasFreeAction \u2693\ufe0e If true, the actor isn't paralyzed, dead, stunned, or otherwise unable to take action. local result = tes3mobileActor : hasFreeAction () Returns : result (boolean) hasUsedPower \u2693\ufe0e Check if a power has been used and is recharging. local result = tes3mobileActor : hasUsedPower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean) isAffectedByObject \u2693\ufe0e Determines if the actor is currently being affected by a given alchemy, enchantment, or spell. local result = tes3mobileActor : isAffectedByObject ( object ) Parameters : object ( tes3alchemy , tes3enchantment , tes3spell ): The magic to check for. Returns : result (boolean) progressSkillLevelIfRequirementsMet \u2693\ufe0e Checks to see if a skill is ready to be leveled up, and performs any levelup logic. tes3mobilePlayer : progressSkillLevelIfRequirementsMet ( skill ) Parameters : skill (number): The skill index to check for leveling. progressSkillToNextLevel \u2693\ufe0e Increments the player's skill to the next level, while respecting all level up mechanics. local newLevel = tes3mobilePlayer : progressSkillToNextLevel ( skill ) Parameters : skill (number): The skill index to increase. Returns : newLevel (number) rechargePower \u2693\ufe0e Makes a power immediately available for casting again. local result = tes3mobileActor : rechargePower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (number) setPowerUseTimestamp \u2693\ufe0e Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. tes3mobileActor : setPowerUseTimestamp ( power , timestamp ) Parameters : power ( tes3spell ): The spell object for the power. timestamp (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . startCombat \u2693\ufe0e Forces the actor into combat with another actor. tes3mobileActor : startCombat ( target ) Parameters : target ( tes3mobileActor ) startDialogue \u2693\ufe0e Starts dialogue with this actor for the player. tes3mobileActor : startDialogue () stopCombat \u2693\ufe0e Ends combat for the actor. tes3mobileActor : stopCombat ( force ) Parameters : force (boolean): If false , the function won't stop combat if the actor has other valid hostile targets. unequip \u2693\ufe0e Unequips one or more items from the actor. local itemUnequipped = tes3mobileActor : unequip ({ item = ..., type = ..., armorSlot = ..., clothingSlot = ... }) Parameters : params (table) item ( tes3item , string): Optional . The item to unequip. type (number): Optional . The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from tes3.objectType can be passed here. armorSlot (number): Optional . The armor slot to unequip. Maps to values in tes3.armorSlot namespace. clothingSlot (number): Optional . The clothing slot to unequip. Maps to values in tes3.clothingSlot namespace Returns : itemUnequipped (boolean) updateDerivedStatistics \u2693\ufe0e Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use tes3.modStatistic() . tes3mobileActor : updateDerivedStatistics ( attribute ) Parameters : attribute ( tes3statistic ): Optional . Limits the update to statistics derived from this attribute. e.g. mobile:updateDerivedStatistics(mobile.strength) . If not present, all derived statistics will be updated. updateOpacity \u2693\ufe0e Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects. tes3mobileActor : updateOpacity ()","title":"tes3mobilePlayer"},{"location":"types/tes3mobilePlayer/#tes3mobileplayer","text":"A mobile object for a the player. This type inherits the following: tes3mobileNPC , tes3mobileActor , tes3mobileObject","title":"tes3mobilePlayer"},{"location":"types/tes3mobilePlayer/#properties","text":"","title":"Properties"},{"location":"types/tes3mobilePlayer/#acrobatics","text":"Read-only . Direct access to the NPC's acrobatics skill statistic. Returns : result ( tes3statisticSkill )","title":"acrobatics"},{"location":"types/tes3mobilePlayer/#actionbeforecombat","text":"Read-only . Action data stored before the actor entered combat. Returns : result ( tes3actionData )","title":"actionBeforeCombat"},{"location":"types/tes3mobilePlayer/#actiondata","text":"Read-only . Current action data. Pre-combat action data is stored in the actionBeforeCombat property. Returns : result ( tes3actionData )","title":"actionData"},{"location":"types/tes3mobilePlayer/#activeai","text":"Friendly access to the actor's flag that controls if AI is active. Returns : result (boolean)","title":"activeAI"},{"location":"types/tes3mobilePlayer/#activemagiceffectlist","text":"Read-only . The active magic effects on the actor, from which all others can be accessed. A table with tes3activeMagicEffect items. Returns : result (table)","title":"activeMagicEffectList"},{"location":"types/tes3mobilePlayer/#actortype","text":"Read-only . The type of the mobile actor. Maps to values in tes3.actorType namespace. Returns : result (number)","title":"actorType"},{"location":"types/tes3mobilePlayer/#agility","text":"Read-only . Direct access to the actor's agility attribute statistic. Returns : result ( tes3statistic )","title":"agility"},{"location":"types/tes3mobilePlayer/#aiplanner","text":"Read-only . Access to the mobile's AI planner and AI package information. Returns : result ( tes3aiPlanner )","title":"aiPlanner"},{"location":"types/tes3mobilePlayer/#alarm","text":"The actor's alarm AI value. Returns : result (number)","title":"alarm"},{"location":"types/tes3mobilePlayer/#alchemy","text":"Read-only . Direct access to the NPC's alchemy skill statistic. Returns : result ( tes3statisticSkill )","title":"alchemy"},{"location":"types/tes3mobilePlayer/#alteration","text":"Read-only . Direct access to the NPC's alteration skill statistic. Returns : result ( tes3statisticSkill )","title":"alteration"},{"location":"types/tes3mobilePlayer/#alwaysrun","text":"Toggle flag for if the player should always run. Returns : result (boolean)","title":"alwaysRun"},{"location":"types/tes3mobilePlayer/#animationcontroller","text":"Read-only . No description yet available. Returns : result ( tes3actorAnimationController )","title":"animationController"},{"location":"types/tes3mobilePlayer/#armorer","text":"Read-only . Direct access to the NPC's armorer skill statistic. Returns : result ( tes3statisticSkill )","title":"armorer"},{"location":"types/tes3mobilePlayer/#armorrating","text":"Read-only . The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the applyDamage function. Armour mitigation calculation: x = damage / (damage + target.armorRating) damage *= max(fCombatArmorMinMult, x) if damage < 1 then damage = 1 end Returns : result (number)","title":"armorRating"},{"location":"types/tes3mobilePlayer/#athletics","text":"Read-only . Direct access to the NPC's athletics skill statistic. Returns : result ( tes3statisticSkill )","title":"athletics"},{"location":"types/tes3mobilePlayer/#attackbonus","text":"Direct access to the actor's attack bonus effect attribute. Returns : result (number)","title":"attackBonus"},{"location":"types/tes3mobilePlayer/#attackdisabled","text":"Toggle flag for if the player can attack. Returns : result (boolean)","title":"attackDisabled"},{"location":"types/tes3mobilePlayer/#attacked","text":"Read-only . Friendly access to the actor's flag that controls if the actor has been attacked. Returns : result (boolean)","title":"attacked"},{"location":"types/tes3mobilePlayer/#attributes","text":"Read-only . Access to a table of 8 tes3statistic objects for the actor's attributes. Returns : result (table)","title":"attributes"},{"location":"types/tes3mobilePlayer/#autorun","text":"Toggle flag for if the player should constantly run forward. Returns : result (boolean)","title":"autoRun"},{"location":"types/tes3mobilePlayer/#axe","text":"Read-only . Direct access to the NPC's axe skill statistic. Returns : result ( tes3statisticSkill )","title":"axe"},{"location":"types/tes3mobilePlayer/#bartergold","text":"The current amount of gold that the actor has access to for bartering. Returns : result (number)","title":"barterGold"},{"location":"types/tes3mobilePlayer/#birthsign","text":"Read-only . The player's birthsign. Returns : result ( tes3birthsign )","title":"birthsign"},{"location":"types/tes3mobilePlayer/#blind","text":"Direct access to the actor's blind effect attribute. Returns : result (number)","title":"blind"},{"location":"types/tes3mobilePlayer/#block","text":"Read-only . Direct access to the NPC's block skill statistic. Returns : result ( tes3statisticSkill )","title":"block"},{"location":"types/tes3mobilePlayer/#bluntweapon","text":"Read-only . Direct access to the NPC's blunt weapon skill statistic. Returns : result ( tes3statisticSkill )","title":"bluntWeapon"},{"location":"types/tes3mobilePlayer/#boundsize","text":"A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 )","title":"boundSize"},{"location":"types/tes3mobilePlayer/#boundsize2d","text":"A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 )","title":"boundSize2D"},{"location":"types/tes3mobilePlayer/#bounty","text":"The player's current bounty. Returns : result (number)","title":"bounty"},{"location":"types/tes3mobilePlayer/#cameraheight","text":"Access to the player camera height, used for both the first person and third person camera (specifically the orbit centre). It is normally placed at head height by the game, on loading, or when a race is selected. The camera height can be reset to its regular value by setting this property to nil . Returns : result (number) Example: Adjust the camera to match shrunken player scale local function shrink () -- Shrink player. tes3 . player . scale = 0.5 -- Reset camera height to default value. tes3 . mobilePlayer . cameraHeight = nil -- Modify camera height to match scale. tes3 . mobilePlayer . cameraHeight = tes3 . player . scale * tes3 . mobilePlayer . cameraHeight end local function unshrink () tes3 . player . scale = 1 tes3 . mobilePlayer . cameraHeight = nil end","title":"cameraHeight"},{"location":"types/tes3mobilePlayer/#castready","text":"Toggle flag for if the player has casting ready. Returns : result (boolean)","title":"castReady"},{"location":"types/tes3mobilePlayer/#cell","text":"Read-only . Fetches the cell that the actor is in. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3mobilePlayer/#cellx","text":"Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellX"},{"location":"types/tes3mobilePlayer/#celly","text":"Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellY"},{"location":"types/tes3mobilePlayer/#chameleon","text":"Direct access to the actor's chameleon effect attribute. Returns : result (number)","title":"chameleon"},{"location":"types/tes3mobilePlayer/#clawmultiplier","text":"Read-only . Quick access to the ClawMultiplier global variable. Returns : result ( tes3globalVariable )","title":"clawMultiplier"},{"location":"types/tes3mobilePlayer/#collidingreference","text":"Read-only . The reference that the mobile has collided with this frame. Returns : result ( tes3reference )","title":"collidingReference"},{"location":"types/tes3mobilePlayer/#combatsession","text":"Read-only . Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Returns : result ( tes3combatSession )","title":"combatSession"},{"location":"types/tes3mobilePlayer/#conjuration","text":"Read-only . Direct access to the NPC's conjuration skill statistic. Returns : result ( tes3statisticSkill )","title":"conjuration"},{"location":"types/tes3mobilePlayer/#controlsdisabled","text":"Toggle flag for if the player's controls are disabled. Returns : result (boolean)","title":"controlsDisabled"},{"location":"types/tes3mobilePlayer/#corpsehourstamp","text":"No description yet available. Returns : result (number)","title":"corpseHourstamp"},{"location":"types/tes3mobilePlayer/#currentenchanteditem","text":"Read-only . The currently equipped enchanted item that the actor will use. Returns : result ( tes3equipmentStack )","title":"currentEnchantedItem"},{"location":"types/tes3mobilePlayer/#currentspell","text":"Read-only . The currently equipped spell that the actor will use. Returns : result ( tes3spell )","title":"currentSpell"},{"location":"types/tes3mobilePlayer/#destruction","text":"Read-only . Direct access to the NPC's destruction skill statistic. Returns : result ( tes3statisticSkill )","title":"destruction"},{"location":"types/tes3mobilePlayer/#dialoguelist","text":"Read-only . Access to the collection that holds what dialogue topics the player has access to. Returns : result ( tes3iterator )","title":"dialogueList"},{"location":"types/tes3mobilePlayer/#effectattributes","text":"Read-only . Access to a table of 24 numbers for the actor's effect attributes. In order those are: attackBonus , sanctuary , resistMagicka , resistFire , resistFrost , resistShock , resistCommonDisease , resistBlightDisease , resistCorprus , resistPoison , resistParalysis , chameleon , resistNormalWeapons , waterBreathing , waterWalking , swiftSwim , jump , levitate , shield , sound , silence , blind , paralyze , and invisibility . Each of those can be accessed individually. For example, tes3mobileActor.chameleon . Returns : result (table)","title":"effectAttributes"},{"location":"types/tes3mobilePlayer/#enchant","text":"Read-only . Direct access to the NPC's enchant skill statistic. Returns : result ( tes3statisticSkill )","title":"enchant"},{"location":"types/tes3mobilePlayer/#encumbrance","text":"Read-only . Access to the actor's encumbrance statistic. Returns : result ( tes3statistic )","title":"encumbrance"},{"location":"types/tes3mobilePlayer/#endurance","text":"Read-only . Direct access to the actor's endurance attribute statistic. Returns : result ( tes3statistic )","title":"endurance"},{"location":"types/tes3mobilePlayer/#facing","text":"Read-only . The facing of the actor, in radians. Returns : result (number)","title":"facing"},{"location":"types/tes3mobilePlayer/#fatigue","text":"Read-only . Access to the actor's fatigue statistic. Returns : result ( tes3statistic )","title":"fatigue"},{"location":"types/tes3mobilePlayer/#fight","text":"The actor's fight AI value. Returns : result (number)","title":"fight"},{"location":"types/tes3mobilePlayer/#firstperson","text":"Read-only . Quick access to the first person NPC. Returns : result ( tes3npc )","title":"firstPerson"},{"location":"types/tes3mobilePlayer/#firstpersonreference","text":"Read-only . Quick access to the first person NPC's reference. Returns : result ( tes3reference )","title":"firstPersonReference"},{"location":"types/tes3mobilePlayer/#flags","text":"Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"flags"},{"location":"types/tes3mobilePlayer/#flee","text":"The actor's flee AI value. Returns : result (number)","title":"flee"},{"location":"types/tes3mobilePlayer/#flyspeed","text":"Read-only . The calculated fly movement speed. Returns : result (number)","title":"flySpeed"},{"location":"types/tes3mobilePlayer/#forcejump","text":"Toggle flag for if the NPC jumps. Returns : result (boolean)","title":"forceJump"},{"location":"types/tes3mobilePlayer/#forcemovejump","text":"Toggle flag for if the NPC moves and jumps. Returns : result (boolean)","title":"forceMoveJump"},{"location":"types/tes3mobilePlayer/#forcerun","text":"Toggle flag for if the NPC runs. Returns : result (boolean)","title":"forceRun"},{"location":"types/tes3mobilePlayer/#forcesneak","text":"Toggle flag for if the NPC sneaks. Returns : result (boolean)","title":"forceSneak"},{"location":"types/tes3mobilePlayer/#friendlyactors","text":"Read-only . A collection of other tes3mobileActor s that this actor considers friendly. Returns : result ( tes3iterator )","title":"friendlyActors"},{"location":"types/tes3mobilePlayer/#greetduration","text":"No description yet available. Returns : result (number)","title":"greetDuration"},{"location":"types/tes3mobilePlayer/#greettimer","text":"Read-only . No description yet available. Returns : result (number)","title":"greetTimer"},{"location":"types/tes3mobilePlayer/#handtohand","text":"Read-only . Direct access to the NPC's hand to hand skill statistic. Returns : result ( tes3statisticSkill )","title":"handToHand"},{"location":"types/tes3mobilePlayer/#health","text":"Read-only . Access to the actor's health statistic. Returns : result ( tes3statistic )","title":"health"},{"location":"types/tes3mobilePlayer/#heavyarmor","text":"Read-only . Direct access to the NPC's heavy armor skill statistic. Returns : result ( tes3statisticSkill )","title":"heavyArmor"},{"location":"types/tes3mobilePlayer/#height","text":"The height of the mobile above the ground. Returns : result (number)","title":"height"},{"location":"types/tes3mobilePlayer/#hello","text":"The actor's hello AI value. Returns : result (number)","title":"hello"},{"location":"types/tes3mobilePlayer/#holdbreathtime","text":"No description yet available. Returns : result (number)","title":"holdBreathTime"},{"location":"types/tes3mobilePlayer/#hostileactors","text":"Read-only . A collection of other tes3mobileActor s that this actor considers hostile. Returns : result ( tes3iterator )","title":"hostileActors"},{"location":"types/tes3mobilePlayer/#idleanim","text":"Read-only . Friendly access to the actor's flag that controls if the actor is using their idle animation. Returns : result (boolean)","title":"idleAnim"},{"location":"types/tes3mobilePlayer/#illusion","text":"Read-only . Direct access to the NPC's illusion skill statistic. Returns : result ( tes3statisticSkill )","title":"illusion"},{"location":"types/tes3mobilePlayer/#impulsevelocity","text":"A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 )","title":"impulseVelocity"},{"location":"types/tes3mobilePlayer/#inactivitytime","text":"The time that the player has spent inactive. Returns : result (number)","title":"inactivityTime"},{"location":"types/tes3mobilePlayer/#incombat","text":"Read-only . Friendly access to the actor's flag that controls if the actor is in combat. Returns : result (boolean)","title":"inCombat"},{"location":"types/tes3mobilePlayer/#injail","text":"Toggle flag for if the player is currently in jail. Returns : result (boolean)","title":"inJail"},{"location":"types/tes3mobilePlayer/#intelligence","text":"Read-only . Direct access to the actor's intelligence attribute statistic. Returns : result ( tes3statistic )","title":"intelligence"},{"location":"types/tes3mobilePlayer/#invisibility","text":"Direct access to the actor's invisibility effect attribute. Returns : result (number)","title":"invisibility"},{"location":"types/tes3mobilePlayer/#is3rdperson","text":"Read-only . Shows if the player's camera is currently in 3rd person view. Returns : result (boolean)","title":"is3rdPerson"},{"location":"types/tes3mobilePlayer/#iscrittable","text":"Read-only . Friendly access to the actor's flag that controls if the actor can be critically hit. Returns : result (boolean)","title":"isCrittable"},{"location":"types/tes3mobilePlayer/#isdead","text":"Read-only . True if the actor is dead. Returns : result (boolean)","title":"isDead"},{"location":"types/tes3mobilePlayer/#isfalling","text":"Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge. Returns : result (boolean)","title":"isFalling"},{"location":"types/tes3mobilePlayer/#isflying","text":"Direct access to the actor's current movement flags, showing if the actor is flying. Returns : result (boolean)","title":"isFlying"},{"location":"types/tes3mobilePlayer/#isjumping","text":"Direct access to the actor's current movement flags, showing if the actor is jumping. Returns : result (boolean)","title":"isJumping"},{"location":"types/tes3mobilePlayer/#ismovingback","text":"Direct access to the actor's current movement flags, showing if the actor is moving backwards. Returns : result (boolean)","title":"isMovingBack"},{"location":"types/tes3mobilePlayer/#ismovingforward","text":"Direct access to the actor's current movement flags, showing if the actor is moving forwards. Returns : result (boolean)","title":"isMovingForward"},{"location":"types/tes3mobilePlayer/#ismovingleft","text":"Direct access to the actor's current movement flags, showing if the actor is moving left. Returns : result (boolean)","title":"isMovingLeft"},{"location":"types/tes3mobilePlayer/#ismovingright","text":"Direct access to the actor's current movement flags, showing if the actor is moving right. Returns : result (boolean)","title":"isMovingRight"},{"location":"types/tes3mobilePlayer/#isplayerdetected","text":"Direct access to the actor's flag showing the player was detected on the last detection check. Returns : result (boolean)","title":"isPlayerDetected"},{"location":"types/tes3mobilePlayer/#isplayerhidden","text":"Direct access to the actor's flag showing the player was hidden on the last detection check. Returns : result (boolean)","title":"isPlayerHidden"},{"location":"types/tes3mobilePlayer/#isrunning","text":"Direct access to the actor's current movement flags, showing if the actor is running. Returns : result (boolean)","title":"isRunning"},{"location":"types/tes3mobilePlayer/#issneaking","text":"Direct access to the actor's current movement flags, showing if the actor is sneaking. Returns : result (boolean)","title":"isSneaking"},{"location":"types/tes3mobilePlayer/#isswimming","text":"Direct access to the actor's current movement flags, showing if the actor is swimming. Returns : result (boolean)","title":"isSwimming"},{"location":"types/tes3mobilePlayer/#isturningleft","text":"Direct access to the actor's current movement flags, showing if the actor is turning left. Returns : result (boolean)","title":"isTurningLeft"},{"location":"types/tes3mobilePlayer/#isturningright","text":"Direct access to the actor's current movement flags, showing if the actor is turning right. Returns : result (boolean)","title":"isTurningRight"},{"location":"types/tes3mobilePlayer/#iswalking","text":"Direct access to the actor's current movement flags, showing if the actor is walking. Returns : result (boolean)","title":"isWalking"},{"location":"types/tes3mobilePlayer/#jump","text":"Direct access to the actor's jump effect attribute. Returns : result (number)","title":"jump"},{"location":"types/tes3mobilePlayer/#jumpingdisabled","text":"Toggle flag for if the player can jump. Returns : result (boolean)","title":"jumpingDisabled"},{"location":"types/tes3mobilePlayer/#knownwerewolf","text":"Read-only . Quick access to the KnownWerewolf global variable. Returns : result ( tes3globalVariable )","title":"knownWerewolf"},{"location":"types/tes3mobilePlayer/#lastgroundz","text":"No description yet available. Returns : result (number)","title":"lastGroundZ"},{"location":"types/tes3mobilePlayer/#lastusedalembic","text":"Read-only . The last used alchemy alembic. Returns : result ( tes3apparatus )","title":"lastUsedAlembic"},{"location":"types/tes3mobilePlayer/#lastusedammocount","text":"The amount of ammo for the ranged weapon that that was last equipped. Returns : result (number)","title":"lastUsedAmmoCount"},{"location":"types/tes3mobilePlayer/#lastusedcalcinator","text":"Read-only . The last used alchemy calcinator. Returns : result ( tes3apparatus )","title":"lastUsedCalcinator"},{"location":"types/tes3mobilePlayer/#lastusedmortar","text":"Read-only . The last used alchemy mortar. Returns : result ( tes3apparatus )","title":"lastUsedMortar"},{"location":"types/tes3mobilePlayer/#lastusedretort","text":"Read-only . The last used alchemy retort. Returns : result ( tes3apparatus )","title":"lastUsedRetort"},{"location":"types/tes3mobilePlayer/#levelupperspecialization","text":"Read-only . Array-style table access to how many skill levels there have been for each of the 3 specializations. Returns : result (table)","title":"levelupPerSpecialization"},{"location":"types/tes3mobilePlayer/#levelupprogress","text":"The progress the player has made towards leveling up. Returns : result (number)","title":"levelUpProgress"},{"location":"types/tes3mobilePlayer/#levelupsperattribute","text":"Read-only . Array-style table access to how many skill levels there have been for each of the 8 attributes. Returns : result (table)","title":"levelupsPerAttribute"},{"location":"types/tes3mobilePlayer/#levitate","text":"Direct access to the actor's levitate effect attribute. Returns : result (number)","title":"levitate"},{"location":"types/tes3mobilePlayer/#lightarmor","text":"Read-only . Direct access to the NPC's light armor skill statistic. Returns : result ( tes3statisticSkill )","title":"lightArmor"},{"location":"types/tes3mobilePlayer/#longblade","text":"Read-only . Direct access to the NPC's long blade skill statistic. Returns : result ( tes3statisticSkill )","title":"longBlade"},{"location":"types/tes3mobilePlayer/#luck","text":"Read-only . Direct access to the actor's luck attribute statistic. Returns : result ( tes3statistic )","title":"luck"},{"location":"types/tes3mobilePlayer/#magicdisabled","text":"Toggle flag for if the player can use magic. Returns : result (boolean)","title":"magicDisabled"},{"location":"types/tes3mobilePlayer/#magicka","text":"Read-only . Access to the actor's magicka statistic. Returns : result ( tes3statistic )","title":"magicka"},{"location":"types/tes3mobilePlayer/#magickamultiplier","text":"Read-only . Access to the actor's magicka multiplier statistic. Returns : result ( tes3statistic )","title":"magickaMultiplier"},{"location":"types/tes3mobilePlayer/#marklocation","text":"Read-only . Access to the structure that holds the player's current mark/recall location. Returns : result ( tes3markData )","title":"markLocation"},{"location":"types/tes3mobilePlayer/#marksman","text":"Read-only . Direct access to the NPC's marksman skill statistic. Returns : result ( tes3statisticSkill )","title":"marksman"},{"location":"types/tes3mobilePlayer/#mediumarmor","text":"Read-only . Direct access to the NPC's medium armor skill statistic. Returns : result ( tes3statisticSkill )","title":"mediumArmor"},{"location":"types/tes3mobilePlayer/#mercantile","text":"Read-only . Direct access to the NPC's mercantile skill statistic. Returns : result ( tes3statisticSkill )","title":"mercantile"},{"location":"types/tes3mobilePlayer/#mobtomobcollision","text":"Allows modifying if this actor will collide with other actors. When true (default), the actor cannot move through other actors. When false , the actor is allowed to move through other actors, and other actors can move through it. May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor. Returns : result (boolean)","title":"mobToMobCollision"},{"location":"types/tes3mobilePlayer/#mouselookdisabled","text":"Toggle flag for if the player's mouse look controls are disabled. Returns : result (boolean)","title":"mouseLookDisabled"},{"location":"types/tes3mobilePlayer/#movementcollision","text":"Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean)","title":"movementCollision"},{"location":"types/tes3mobilePlayer/#movementflags","text":"Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"movementFlags"},{"location":"types/tes3mobilePlayer/#movespeed","text":"Read-only . The calculated base movement speed. Returns : result (number)","title":"moveSpeed"},{"location":"types/tes3mobilePlayer/#mysticism","text":"Read-only . Direct access to the NPC's mysticism skill statistic. Returns : result ( tes3statisticSkill )","title":"mysticism"},{"location":"types/tes3mobilePlayer/#nextactionweight","text":"Read-only . No description yet available. Returns : result (number)","title":"nextActionWeight"},{"location":"types/tes3mobilePlayer/#object","text":"Read-only . The actor object that maps to this mobile. Returns : result ( tes3npcInstance )","title":"object"},{"location":"types/tes3mobilePlayer/#objecttype","text":"Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number)","title":"objectType"},{"location":"types/tes3mobilePlayer/#paralyze","text":"Direct access to the actor's paralyze effect attribute. Returns : result (number)","title":"paralyze"},{"location":"types/tes3mobilePlayer/#personality","text":"Read-only . Direct access to the actor's personality attribute statistic. Returns : result ( tes3statistic )","title":"personality"},{"location":"types/tes3mobilePlayer/#playerdistance","text":"The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number)","title":"playerDistance"},{"location":"types/tes3mobilePlayer/#position","text":"A vector that represents the 3D position of the object. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3mobilePlayer/#prevmovementflags","text":"Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"prevMovementFlags"},{"location":"types/tes3mobilePlayer/#readiedammo","text":"The currently equipped ammo. Returns : result ( tes3equipmentStack )","title":"readiedAmmo"},{"location":"types/tes3mobilePlayer/#readiedammocount","text":"The number of ammo equipped for the readied ammo. Returns : result (number)","title":"readiedAmmoCount"},{"location":"types/tes3mobilePlayer/#readiedshield","text":"The currently equipped shield. Returns : result ( tes3equipmentStack )","title":"readiedShield"},{"location":"types/tes3mobilePlayer/#readiedweapon","text":"The currently equipped weapon. Returns : result ( tes3equipmentStack )","title":"readiedWeapon"},{"location":"types/tes3mobilePlayer/#reference","text":"Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3mobilePlayer/#resistblightdisease","text":"Direct access to the actor's blight disease resistance effect attribute. Returns : result (number)","title":"resistBlightDisease"},{"location":"types/tes3mobilePlayer/#resistcommondisease","text":"Direct access to the actor's common disease resistance effect attribute. Returns : result (number)","title":"resistCommonDisease"},{"location":"types/tes3mobilePlayer/#resistcorprus","text":"Direct access to the actor's corprus disease resistance effect attribute. Returns : result (number)","title":"resistCorprus"},{"location":"types/tes3mobilePlayer/#resistfire","text":"Direct access to the actor's fire resistance effect attribute. Returns : result (number)","title":"resistFire"},{"location":"types/tes3mobilePlayer/#resistfrost","text":"Direct access to the actor's frost resistance effect attribute. Returns : result (number)","title":"resistFrost"},{"location":"types/tes3mobilePlayer/#resistmagicka","text":"Direct access to the actor's magicka resistance effect attribute. Returns : result (number)","title":"resistMagicka"},{"location":"types/tes3mobilePlayer/#resistnormalweapons","text":"Direct access to the actor's normal weapon resistance effect attribute. Returns : result (number)","title":"resistNormalWeapons"},{"location":"types/tes3mobilePlayer/#resistparalysis","text":"Direct access to the actor's paralysis resistance effect attribute. Returns : result (number)","title":"resistParalysis"},{"location":"types/tes3mobilePlayer/#resistpoison","text":"Direct access to the actor's poison resistance effect attribute. Returns : result (number)","title":"resistPoison"},{"location":"types/tes3mobilePlayer/#resistshock","text":"Direct access to the actor's shock resistance effect attribute. Returns : result (number)","title":"resistShock"},{"location":"types/tes3mobilePlayer/#resthoursremaining","text":"How many hours are left while resting. Returns : result (number)","title":"restHoursRemaining"},{"location":"types/tes3mobilePlayer/#restoration","text":"Read-only . Direct access to the NPC's restoration skill statistic. Returns : result ( tes3statisticSkill )","title":"restoration"},{"location":"types/tes3mobilePlayer/#runspeed","text":"Read-only . The calculated run movement speed. Returns : result (number)","title":"runSpeed"},{"location":"types/tes3mobilePlayer/#sanctuary","text":"Direct access to the actor's sanctuary effect attribute. Returns : result (number)","title":"sanctuary"},{"location":"types/tes3mobilePlayer/#scaninterval","text":"Read-only . No description yet available. Returns : result (number)","title":"scanInterval"},{"location":"types/tes3mobilePlayer/#scantimer","text":"Read-only . No description yet available. Returns : result (number)","title":"scanTimer"},{"location":"types/tes3mobilePlayer/#security","text":"Read-only . Direct access to the NPC's security skill statistic. Returns : result ( tes3statisticSkill )","title":"security"},{"location":"types/tes3mobilePlayer/#shield","text":"Direct access to the actor's shield effect attribute. Returns : result (number)","title":"shield"},{"location":"types/tes3mobilePlayer/#shortblade","text":"Read-only . Direct access to the NPC's short blade skill statistic. Returns : result ( tes3statisticSkill )","title":"shortBlade"},{"location":"types/tes3mobilePlayer/#silence","text":"Direct access to the actor's silence effect attribute. Returns : result (number)","title":"silence"},{"location":"types/tes3mobilePlayer/#skillprogress","text":"Read-only . Array-style table access to skill progress for each of the 27 skills. Returns : result (table)","title":"skillProgress"},{"location":"types/tes3mobilePlayer/#skills","text":"Read-only . An array-style table with access to the twenty seven NPC skill statistics ( tes3statisticSkill ). Returns : result (table)","title":"skills"},{"location":"types/tes3mobilePlayer/#sleeping","text":"Toggle flag for if the player is currently sleeping. Returns : result (boolean)","title":"sleeping"},{"location":"types/tes3mobilePlayer/#sneak","text":"Read-only . Direct access to the NPC's sneak skill statistic. Returns : result ( tes3statisticSkill )","title":"sneak"},{"location":"types/tes3mobilePlayer/#sound","text":"Direct access to the actor's sound effect attribute. Returns : result (number)","title":"sound"},{"location":"types/tes3mobilePlayer/#spear","text":"Read-only . Direct access to the NPC's spear skill statistic. Returns : result ( tes3statisticSkill )","title":"spear"},{"location":"types/tes3mobilePlayer/#speechcraft","text":"Read-only . Direct access to the NPC's speechcraft skill statistic. Returns : result ( tes3statisticSkill )","title":"speechcraft"},{"location":"types/tes3mobilePlayer/#speed","text":"Read-only . Direct access to the actor's speed attribute statistic. Returns : result ( tes3statistic )","title":"speed"},{"location":"types/tes3mobilePlayer/#spellreadied","text":"Read-only . Friendly access to the actor's flag that controls if the actor has a spell readied. Returns : result (boolean)","title":"spellReadied"},{"location":"types/tes3mobilePlayer/#strength","text":"Read-only . Direct access to the actor's strength attribute statistic. Returns : result ( tes3statistic )","title":"strength"},{"location":"types/tes3mobilePlayer/#swiftswim","text":"Direct access to the actor's swift swim effect attribute. Returns : result (number)","title":"swiftSwim"},{"location":"types/tes3mobilePlayer/#swimrunspeed","text":"Read-only . The calculated swim movement speed while running. Returns : result (number)","title":"swimRunSpeed"},{"location":"types/tes3mobilePlayer/#swimspeed","text":"Read-only . The calculated swim movement speed. Returns : result (number)","title":"swimSpeed"},{"location":"types/tes3mobilePlayer/#talkedto","text":"Direct access to the actor's flag that shows it was recently talked to. Returns : result (boolean)","title":"talkedTo"},{"location":"types/tes3mobilePlayer/#telekinesis","text":"Direct access to the player's telekinesis effect attribute. Returns : result (number)","title":"telekinesis"},{"location":"types/tes3mobilePlayer/#torchslot","text":"The currently equipped light. Returns : result ( tes3equipmentStack )","title":"torchSlot"},{"location":"types/tes3mobilePlayer/#traveling","text":"Toggle flag for if the player is currently travelling. Returns : result (boolean)","title":"traveling"},{"location":"types/tes3mobilePlayer/#unarmored","text":"Read-only . Direct access to the NPC's unarmored skill statistic. Returns : result ( tes3statisticSkill )","title":"unarmored"},{"location":"types/tes3mobilePlayer/#underwater","text":"Read-only . Friendly access to the actor's flag that controls if the actor is under water. Returns : result (boolean)","title":"underwater"},{"location":"types/tes3mobilePlayer/#vanitydisabled","text":"Toggle flag for if the player's vanity camera is disabled. Returns : result (boolean)","title":"vanityDisabled"},{"location":"types/tes3mobilePlayer/#velocity","text":"A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/tes3mobilePlayer/#viewswitchdisabled","text":"Toggle flag for if the player can switch between first person and vanity cameras. Returns : result (boolean)","title":"viewSwitchDisabled"},{"location":"types/tes3mobilePlayer/#visionbonus","text":"Direct access to the player's vision bonus effect attribute. Returns : result (number)","title":"visionBonus"},{"location":"types/tes3mobilePlayer/#waiting","text":"Toggle flag for if the player is currently waiting. Returns : result (boolean)","title":"waiting"},{"location":"types/tes3mobilePlayer/#walkspeed","text":"Read-only . The calculated walk movement speed. Returns : result (number)","title":"walkSpeed"},{"location":"types/tes3mobilePlayer/#waterbreathing","text":"Direct access to the actor's water breathing effect attribute. Returns : result (number)","title":"waterBreathing"},{"location":"types/tes3mobilePlayer/#waterwalking","text":"Direct access to the actor's water walking effect attribute. Returns : result (number)","title":"waterWalking"},{"location":"types/tes3mobilePlayer/#weapondrawn","text":"Read-only . Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again. Returns : result (boolean)","title":"weaponDrawn"},{"location":"types/tes3mobilePlayer/#weaponready","text":"A flag for if the player has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the player to take out their weapon. Setting it to false will cause the player to put it away. Returns : result (boolean)","title":"weaponReady"},{"location":"types/tes3mobilePlayer/#werewolf","text":"Read-only . Friendly access to the actor's flag that controls if the actor in werewolf form. Returns : result (boolean)","title":"werewolf"},{"location":"types/tes3mobilePlayer/#width","text":"Read-only . No description yet available. Returns : result (number)","title":"width"},{"location":"types/tes3mobilePlayer/#willpower","text":"Read-only . Direct access to the actor's willpower attribute statistic. Returns : result ( tes3statistic )","title":"willpower"},{"location":"types/tes3mobilePlayer/#methods","text":"","title":"Methods"},{"location":"types/tes3mobilePlayer/#applydamage","text":"Damages the actor, with options to control mitigation and difficulty scaling. Invokes the damage and damaged events, with tes3.damageSource.script source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = tes3mobileActor : applyDamage ({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Optional . If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. applyDifficulty (boolean): Optional . If the game difficulty modifier should be applied. Must be used with the playerAttack argument to apply the correct modifier. playerAttack (boolean): Optional . If the attack came from the player. Used for difficulty calculation. doNotChangeHealth (boolean): Optional . If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit. Returns : result (number)","title":"applyDamage"},{"location":"types/tes3mobilePlayer/#applyfatiguedamage","text":"Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the damageHandToHand and damagedHandToHand events, with tes3.damageSource.script source. Returns the actual fatigue damage done. local result = tes3mobileActor : applyFatigueDamage ( fatigueDamage , swing , alwaysPlayHitVoice ) Parameters : fatigueDamage (number): The amount of fatigue damage to apply. swing (number): Optional . The attack swing magnitude, range 0-1. Only modifies hit volume. alwaysPlayHitVoice (boolean): Optional . Always play the hit reaction voiceover. Returns : result (number)","title":"applyFatigueDamage"},{"location":"types/tes3mobilePlayer/#applyhealthdamage","text":"Deprecated, please use applyDamage() instead. Damages the actor. local result = tes3mobileActor : applyHealthDamage ( damage , isPlayerAttack , scaleWithDifficulty , doNotChangeHealth ) Parameters : damage (number): The amount of damage to apply. isPlayerAttack (boolean): Used to calculate difficulty scaling. scaleWithDifficulty (boolean): Apply difficulty scaling to the damage. doNotChangeHealth (boolean): Do all the audiovisual effects of damage without the health change. Returns : result (boolean)","title":"applyHealthDamage"},{"location":"types/tes3mobilePlayer/#calceffectivedamage","text":"Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = tes3mobileActor : calcEffectiveDamage ({ damage = ..., applyArmor = ..., resistAttribute = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Optional . If armor should mitigate the incoming damage. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. Returns : result (number)","title":"calcEffectiveDamage"},{"location":"types/tes3mobilePlayer/#equip","text":"Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return true . local itemEquipped = tes3mobileActor : equip ({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... }) Parameters : params (table) item ( tes3item , string): The item to equip. itemData ( tes3itemData ): Optional . The item data of the specific item to equip. addItem (boolean): If true , the item will be added to the actor's inventory if needed. selectBestCondition (boolean): If true , the item in the inventory with the best condition and best charge will be selected. selectWorstCondition (boolean): If true , the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools. Returns : itemEquipped (boolean)","title":"equip"},{"location":"types/tes3mobilePlayer/#exerciseskill","text":"Exercises a skill, providing experience in it. tes3mobilePlayer : exerciseSkill ( skill , progress ) Parameters : skill (number): The skill index to give experience to. progress (number): The amount of experience to grant.","title":"exerciseSkill"},{"location":"types/tes3mobilePlayer/#getactivemagiceffects","text":"Fetches a filtered list of the active magic effects on the actor. Returns a table with tes3activeMagicEffect items. local result = tes3mobileActor : getActiveMagicEffects ({ effect = ..., serial = ... }) Parameters : params (table): Optional . effect (number): Optional . The magic effect ID to search for. serial (number): Optional . The magic instance serial to search for. Returns : result (table)","title":"getActiveMagicEffects"},{"location":"types/tes3mobilePlayer/#getbootsweight","text":"Read-only . Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped. local result = tes3mobileActor : getBootsWeight () Returns : result (number)","title":"getBootsWeight"},{"location":"types/tes3mobilePlayer/#getfatigueterm","text":"Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base)) local result = tes3mobileActor : getFatigueTerm () Returns : result (number)","title":"getFatigueTerm"},{"location":"types/tes3mobilePlayer/#getpowerusetimestamp","text":"Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . local timestamp = tes3mobileActor : getPowerUseTimestamp ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : timestamp (number)","title":"getPowerUseTimestamp"},{"location":"types/tes3mobilePlayer/#getskillprogressrequirement","text":"Returns the total progress needed to progress the skill to the next level. local progressNeeded = tes3mobilePlayer : getSkillProgressRequirement ( skill ) Parameters : skill (number): The skill index to check. Returns : progressNeeded (number)","title":"getSkillProgressRequirement"},{"location":"types/tes3mobilePlayer/#getskillstatistic","text":"Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = tes3mobileActor : getSkillStatistic ( skillId ) Parameters : skillId (number): The index of the skill statistic to fetch. Maps to values in tes3.skill namespace. Returns : result ( tes3statisticSkill )","title":"getSkillStatistic"},{"location":"types/tes3mobilePlayer/#getskillvalue","text":"Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = tes3mobileActor : getSkillValue ( skillId ) Parameters : skillId (number): The index of the skill statistic's value to fetch. Maps to values in tes3.skill namespace. Returns : result (number)","title":"getSkillValue"},{"location":"types/tes3mobilePlayer/#getviewtoactor","text":"No description yet available. local result = tes3mobileActor : getViewToActor () Returns : result (number)","title":"getViewToActor"},{"location":"types/tes3mobilePlayer/#getviewtopoint","text":"No description yet available. local result = tes3mobileActor : getViewToPoint () Returns : result (number)","title":"getViewToPoint"},{"location":"types/tes3mobilePlayer/#getviewtopointwithfacing","text":"No description yet available. local result = tes3mobileActor : getViewToPointWithFacing () Returns : result (number)","title":"getViewToPointWithFacing"},{"location":"types/tes3mobilePlayer/#getweaponspeed","text":"Fetches the weapon speed of the actor's currently equipped weapon, or 1.0 if no weapon is equipped. local result = tes3mobileActor : getWeaponSpeed () Returns : result (number)","title":"getWeaponSpeed"},{"location":"types/tes3mobilePlayer/#hasfreeaction","text":"If true, the actor isn't paralyzed, dead, stunned, or otherwise unable to take action. local result = tes3mobileActor : hasFreeAction () Returns : result (boolean)","title":"hasFreeAction"},{"location":"types/tes3mobilePlayer/#hasusedpower","text":"Check if a power has been used and is recharging. local result = tes3mobileActor : hasUsedPower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean)","title":"hasUsedPower"},{"location":"types/tes3mobilePlayer/#isaffectedbyobject","text":"Determines if the actor is currently being affected by a given alchemy, enchantment, or spell. local result = tes3mobileActor : isAffectedByObject ( object ) Parameters : object ( tes3alchemy , tes3enchantment , tes3spell ): The magic to check for. Returns : result (boolean)","title":"isAffectedByObject"},{"location":"types/tes3mobilePlayer/#progressskilllevelifrequirementsmet","text":"Checks to see if a skill is ready to be leveled up, and performs any levelup logic. tes3mobilePlayer : progressSkillLevelIfRequirementsMet ( skill ) Parameters : skill (number): The skill index to check for leveling.","title":"progressSkillLevelIfRequirementsMet"},{"location":"types/tes3mobilePlayer/#progressskilltonextlevel","text":"Increments the player's skill to the next level, while respecting all level up mechanics. local newLevel = tes3mobilePlayer : progressSkillToNextLevel ( skill ) Parameters : skill (number): The skill index to increase. Returns : newLevel (number)","title":"progressSkillToNextLevel"},{"location":"types/tes3mobilePlayer/#rechargepower","text":"Makes a power immediately available for casting again. local result = tes3mobileActor : rechargePower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (number)","title":"rechargePower"},{"location":"types/tes3mobilePlayer/#setpowerusetimestamp","text":"Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. tes3mobileActor : setPowerUseTimestamp ( power , timestamp ) Parameters : power ( tes3spell ): The spell object for the power. timestamp (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() .","title":"setPowerUseTimestamp"},{"location":"types/tes3mobilePlayer/#startcombat","text":"Forces the actor into combat with another actor. tes3mobileActor : startCombat ( target ) Parameters : target ( tes3mobileActor )","title":"startCombat"},{"location":"types/tes3mobilePlayer/#startdialogue","text":"Starts dialogue with this actor for the player. tes3mobileActor : startDialogue ()","title":"startDialogue"},{"location":"types/tes3mobilePlayer/#stopcombat","text":"Ends combat for the actor. tes3mobileActor : stopCombat ( force ) Parameters : force (boolean): If false , the function won't stop combat if the actor has other valid hostile targets.","title":"stopCombat"},{"location":"types/tes3mobilePlayer/#unequip","text":"Unequips one or more items from the actor. local itemUnequipped = tes3mobileActor : unequip ({ item = ..., type = ..., armorSlot = ..., clothingSlot = ... }) Parameters : params (table) item ( tes3item , string): Optional . The item to unequip. type (number): Optional . The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from tes3.objectType can be passed here. armorSlot (number): Optional . The armor slot to unequip. Maps to values in tes3.armorSlot namespace. clothingSlot (number): Optional . The clothing slot to unequip. Maps to values in tes3.clothingSlot namespace Returns : itemUnequipped (boolean)","title":"unequip"},{"location":"types/tes3mobilePlayer/#updatederivedstatistics","text":"Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use tes3.modStatistic() . tes3mobileActor : updateDerivedStatistics ( attribute ) Parameters : attribute ( tes3statistic ): Optional . Limits the update to statistics derived from this attribute. e.g. mobile:updateDerivedStatistics(mobile.strength) . If not present, all derived statistics will be updated.","title":"updateDerivedStatistics"},{"location":"types/tes3mobilePlayer/#updateopacity","text":"Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects. tes3mobileActor : updateOpacity ()","title":"updateOpacity"},{"location":"types/tes3mobileProjectile/","text":"tes3mobileProjectile \u2693\ufe0e A mobile object for a physical projectile. This type inherits the following: tes3mobileObject Properties \u2693\ufe0e animTime \u2693\ufe0e The time index for the projectile model's animation controllers. Returns : result (number) attackSwing \u2693\ufe0e The attack swing value of the attacker at the time of releasing the projectile. Returns : result (number) boundSize \u2693\ufe0e A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 ) boundSize2D \u2693\ufe0e A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 ) cellX \u2693\ufe0e Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number) cellY \u2693\ufe0e Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number) damage \u2693\ufe0e Access to the raw damage that this projectile will inflict. Returns : result (number) expire \u2693\ufe0e A flag that causes the projectile to expire when set to 1 . Returns : result (number) firingMobile \u2693\ufe0e Read-only . The mobile that fired this projectile. Returns : result ( tes3mobileActor ) firingWeapon \u2693\ufe0e Read-only . The weapon that fired this projectile. Returns : result ( tes3weapon ) flags \u2693\ufe0e Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (number) height \u2693\ufe0e The height of the mobile above the ground. Returns : result (number) impulseVelocity \u2693\ufe0e A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 ) initialSpeed \u2693\ufe0e Read-only . The initial speed that the projectile was launched at. Returns : result (number) movementCollision \u2693\ufe0e Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean) movementFlags \u2693\ufe0e Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number) playerDistance \u2693\ufe0e The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number) position \u2693\ufe0e A vector that represents the 3D position of the object. Returns : result ( tes3vector3 ) prevMovementFlags \u2693\ufe0e Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (number) reference \u2693\ufe0e Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference ) spellInstance \u2693\ufe0e A quick access to tes3magicSourceInstance object of this tes3mobileProjectile if aplicable. Returns : result ( tes3magicSourceInstance ) velocity \u2693\ufe0e Access to the current velocity of the projectile. Returns : result ( tes3vector3 )","title":"tes3mobileProjectile"},{"location":"types/tes3mobileProjectile/#tes3mobileprojectile","text":"A mobile object for a physical projectile. This type inherits the following: tes3mobileObject","title":"tes3mobileProjectile"},{"location":"types/tes3mobileProjectile/#properties","text":"","title":"Properties"},{"location":"types/tes3mobileProjectile/#animtime","text":"The time index for the projectile model's animation controllers. Returns : result (number)","title":"animTime"},{"location":"types/tes3mobileProjectile/#attackswing","text":"The attack swing value of the attacker at the time of releasing the projectile. Returns : result (number)","title":"attackSwing"},{"location":"types/tes3mobileProjectile/#boundsize","text":"A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 )","title":"boundSize"},{"location":"types/tes3mobileProjectile/#boundsize2d","text":"A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 )","title":"boundSize2D"},{"location":"types/tes3mobileProjectile/#cellx","text":"Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellX"},{"location":"types/tes3mobileProjectile/#celly","text":"Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellY"},{"location":"types/tes3mobileProjectile/#damage","text":"Access to the raw damage that this projectile will inflict. Returns : result (number)","title":"damage"},{"location":"types/tes3mobileProjectile/#expire","text":"A flag that causes the projectile to expire when set to 1 . Returns : result (number)","title":"expire"},{"location":"types/tes3mobileProjectile/#firingmobile","text":"Read-only . The mobile that fired this projectile. Returns : result ( tes3mobileActor )","title":"firingMobile"},{"location":"types/tes3mobileProjectile/#firingweapon","text":"Read-only . The weapon that fired this projectile. Returns : result ( tes3weapon )","title":"firingWeapon"},{"location":"types/tes3mobileProjectile/#flags","text":"Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"flags"},{"location":"types/tes3mobileProjectile/#height","text":"The height of the mobile above the ground. Returns : result (number)","title":"height"},{"location":"types/tes3mobileProjectile/#impulsevelocity","text":"A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 )","title":"impulseVelocity"},{"location":"types/tes3mobileProjectile/#initialspeed","text":"Read-only . The initial speed that the projectile was launched at. Returns : result (number)","title":"initialSpeed"},{"location":"types/tes3mobileProjectile/#movementcollision","text":"Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean)","title":"movementCollision"},{"location":"types/tes3mobileProjectile/#movementflags","text":"Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"movementFlags"},{"location":"types/tes3mobileProjectile/#objecttype","text":"Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number)","title":"objectType"},{"location":"types/tes3mobileProjectile/#playerdistance","text":"The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number)","title":"playerDistance"},{"location":"types/tes3mobileProjectile/#position","text":"A vector that represents the 3D position of the object. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3mobileProjectile/#prevmovementflags","text":"Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"prevMovementFlags"},{"location":"types/tes3mobileProjectile/#reference","text":"Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3mobileProjectile/#spellinstance","text":"A quick access to tes3magicSourceInstance object of this tes3mobileProjectile if aplicable. Returns : result ( tes3magicSourceInstance )","title":"spellInstance"},{"location":"types/tes3mobileProjectile/#velocity","text":"Access to the current velocity of the projectile. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/tes3mobileSpellProjectile/","text":"tes3mobileSpellProjectile \u2693\ufe0e A mobile object for a spell projectile. This type inherits the following: tes3mobileProjectile , tes3mobileObject Properties \u2693\ufe0e animTime \u2693\ufe0e The time index for the projectile model's animation controllers. Returns : result (number) attackSwing \u2693\ufe0e The attack swing value of the attacker at the time of releasing the projectile. Returns : result (number) boundSize \u2693\ufe0e A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 ) boundSize2D \u2693\ufe0e A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 ) cellX \u2693\ufe0e Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number) cellY \u2693\ufe0e Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number) damage \u2693\ufe0e Access to the raw damage that this projectile will inflict. Returns : result (number) expire \u2693\ufe0e A flag that causes the projectile to expire when set to 1 . Returns : result (number) firingMobile \u2693\ufe0e Read-only . The mobile that fired this projectile. Returns : result ( tes3mobileActor ) firingWeapon \u2693\ufe0e Read-only . The weapon that fired this projectile. Returns : result ( tes3weapon ) flags \u2693\ufe0e Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (number) height \u2693\ufe0e The height of the mobile above the ground. Returns : result (number) impulseVelocity \u2693\ufe0e A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 ) initialSpeed \u2693\ufe0e Read-only . The initial speed that the projectile was launched at. Returns : result (number) movementCollision \u2693\ufe0e Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean) movementFlags \u2693\ufe0e Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number) playerDistance \u2693\ufe0e The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number) position \u2693\ufe0e A vector that represents the 3D position of the object. Returns : result ( tes3vector3 ) prevMovementFlags \u2693\ufe0e Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (number) reference \u2693\ufe0e Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference ) rotationSpeed \u2693\ufe0e The angular speed that the projectile rotates around its local Y axis. Returns : result (number) spellInstance \u2693\ufe0e Access to the magic source instance of the object. Returns : result ( tes3magicSourceInstance ) spellInstanceSerial \u2693\ufe0e No description yet available. Returns : result (number) velocity \u2693\ufe0e Access to the current velocity of the projectile. Returns : result ( tes3vector3 ) Methods \u2693\ufe0e explode \u2693\ufe0e Detonates the projectile, as if it hit a static object. The effects of detonation are not applied immediately, but later in the frame, at the same time as projectile collisions. This ensures consistent behaviour of the magic system. tes3mobileSpellProjectile : explode ()","title":"tes3mobileSpellProjectile"},{"location":"types/tes3mobileSpellProjectile/#tes3mobilespellprojectile","text":"A mobile object for a spell projectile. This type inherits the following: tes3mobileProjectile , tes3mobileObject","title":"tes3mobileSpellProjectile"},{"location":"types/tes3mobileSpellProjectile/#properties","text":"","title":"Properties"},{"location":"types/tes3mobileSpellProjectile/#animtime","text":"The time index for the projectile model's animation controllers. Returns : result (number)","title":"animTime"},{"location":"types/tes3mobileSpellProjectile/#attackswing","text":"The attack swing value of the attacker at the time of releasing the projectile. Returns : result (number)","title":"attackSwing"},{"location":"types/tes3mobileSpellProjectile/#boundsize","text":"A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 )","title":"boundSize"},{"location":"types/tes3mobileSpellProjectile/#boundsize2d","text":"A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 )","title":"boundSize2D"},{"location":"types/tes3mobileSpellProjectile/#cellx","text":"Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellX"},{"location":"types/tes3mobileSpellProjectile/#celly","text":"Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellY"},{"location":"types/tes3mobileSpellProjectile/#damage","text":"Access to the raw damage that this projectile will inflict. Returns : result (number)","title":"damage"},{"location":"types/tes3mobileSpellProjectile/#expire","text":"A flag that causes the projectile to expire when set to 1 . Returns : result (number)","title":"expire"},{"location":"types/tes3mobileSpellProjectile/#firingmobile","text":"Read-only . The mobile that fired this projectile. Returns : result ( tes3mobileActor )","title":"firingMobile"},{"location":"types/tes3mobileSpellProjectile/#firingweapon","text":"Read-only . The weapon that fired this projectile. Returns : result ( tes3weapon )","title":"firingWeapon"},{"location":"types/tes3mobileSpellProjectile/#flags","text":"Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"flags"},{"location":"types/tes3mobileSpellProjectile/#height","text":"The height of the mobile above the ground. Returns : result (number)","title":"height"},{"location":"types/tes3mobileSpellProjectile/#impulsevelocity","text":"A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 )","title":"impulseVelocity"},{"location":"types/tes3mobileSpellProjectile/#initialspeed","text":"Read-only . The initial speed that the projectile was launched at. Returns : result (number)","title":"initialSpeed"},{"location":"types/tes3mobileSpellProjectile/#movementcollision","text":"Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean)","title":"movementCollision"},{"location":"types/tes3mobileSpellProjectile/#movementflags","text":"Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"movementFlags"},{"location":"types/tes3mobileSpellProjectile/#objecttype","text":"Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number)","title":"objectType"},{"location":"types/tes3mobileSpellProjectile/#playerdistance","text":"The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number)","title":"playerDistance"},{"location":"types/tes3mobileSpellProjectile/#position","text":"A vector that represents the 3D position of the object. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3mobileSpellProjectile/#prevmovementflags","text":"Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (number)","title":"prevMovementFlags"},{"location":"types/tes3mobileSpellProjectile/#reference","text":"Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3mobileSpellProjectile/#rotationspeed","text":"The angular speed that the projectile rotates around its local Y axis. Returns : result (number)","title":"rotationSpeed"},{"location":"types/tes3mobileSpellProjectile/#spellinstance","text":"Access to the magic source instance of the object. Returns : result ( tes3magicSourceInstance )","title":"spellInstance"},{"location":"types/tes3mobileSpellProjectile/#spellinstanceserial","text":"No description yet available. Returns : result (number)","title":"spellInstanceSerial"},{"location":"types/tes3mobileSpellProjectile/#velocity","text":"Access to the current velocity of the projectile. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/tes3mobileSpellProjectile/#methods","text":"","title":"Methods"},{"location":"types/tes3mobileSpellProjectile/#explode","text":"Detonates the projectile, as if it hit a static object. The effects of detonation are not applied immediately, but later in the frame, at the same time as projectile collisions. This ensures consistent behaviour of the magic system. tes3mobileSpellProjectile : explode ()","title":"explode"},{"location":"types/tes3moon/","text":"tes3moon \u2693\ufe0e A structure that keeps track of information related two the game's two moons. Properties \u2693\ufe0e axisOffset \u2693\ufe0e No description yet available. Returns : result (number) dailyIncrement \u2693\ufe0e No description yet available. Returns : result (number) fadeEndAngle \u2693\ufe0e No description yet available. Returns : result (number) fadeInFinish \u2693\ufe0e No description yet available. Returns : result (number) fadeInStart \u2693\ufe0e No description yet available. Returns : result (number) fadeOutFinish \u2693\ufe0e No description yet available. Returns : result (number) fadeOutStart \u2693\ufe0e No description yet available. Returns : result (number) fadeStartAngle \u2693\ufe0e No description yet available. Returns : result (number) index \u2693\ufe0e Read-only . The index of the moon, 0 for Masser, 1 for Secunda Returns : result (number) isRed \u2693\ufe0e Determines if the moon is red, typically during the events of Bloodmoon. Returns : result (boolean) phase \u2693\ufe0e No description yet available. Returns : result (number) shadowEarlyFadeAngle \u2693\ufe0e No description yet available. Returns : result (number) speed \u2693\ufe0e No description yet available. Returns : result (number) texture \u2693\ufe0e Read-only . The texture to use for the moon. Returns : result (string) weatherController \u2693\ufe0e Read-only . Quick access back to the weather controller structure. Returns : result ( tes3weatherController )","title":"tes3moon"},{"location":"types/tes3moon/#tes3moon","text":"A structure that keeps track of information related two the game's two moons.","title":"tes3moon"},{"location":"types/tes3moon/#properties","text":"","title":"Properties"},{"location":"types/tes3moon/#axisoffset","text":"No description yet available. Returns : result (number)","title":"axisOffset"},{"location":"types/tes3moon/#dailyincrement","text":"No description yet available. Returns : result (number)","title":"dailyIncrement"},{"location":"types/tes3moon/#fadeendangle","text":"No description yet available. Returns : result (number)","title":"fadeEndAngle"},{"location":"types/tes3moon/#fadeinfinish","text":"No description yet available. Returns : result (number)","title":"fadeInFinish"},{"location":"types/tes3moon/#fadeinstart","text":"No description yet available. Returns : result (number)","title":"fadeInStart"},{"location":"types/tes3moon/#fadeoutfinish","text":"No description yet available. Returns : result (number)","title":"fadeOutFinish"},{"location":"types/tes3moon/#fadeoutstart","text":"No description yet available. Returns : result (number)","title":"fadeOutStart"},{"location":"types/tes3moon/#fadestartangle","text":"No description yet available. Returns : result (number)","title":"fadeStartAngle"},{"location":"types/tes3moon/#index","text":"Read-only . The index of the moon, 0 for Masser, 1 for Secunda Returns : result (number)","title":"index"},{"location":"types/tes3moon/#isred","text":"Determines if the moon is red, typically during the events of Bloodmoon. Returns : result (boolean)","title":"isRed"},{"location":"types/tes3moon/#phase","text":"No description yet available. Returns : result (number)","title":"phase"},{"location":"types/tes3moon/#shadowearlyfadeangle","text":"No description yet available. Returns : result (number)","title":"shadowEarlyFadeAngle"},{"location":"types/tes3moon/#speed","text":"No description yet available. Returns : result (number)","title":"speed"},{"location":"types/tes3moon/#texture","text":"Read-only . The texture to use for the moon. Returns : result (string)","title":"texture"},{"location":"types/tes3moon/#weathercontroller","text":"Read-only . Quick access back to the weather controller structure. Returns : result ( tes3weatherController )","title":"weatherController"},{"location":"types/tes3nonDynamicData/","text":"tes3nonDynamicData \u2693\ufe0e A child container from tes3dataHandler , where game data is stored. Properties \u2693\ufe0e birthsigns \u2693\ufe0e Read-only . A collection of all birthsign objects. Returns : result ( tes3iterator ) cells \u2693\ufe0e Read-only . A collection of all cell objects. Returns : result (tes3stlList) classes \u2693\ufe0e Read-only . A collection of all class objects. Returns : result ( tes3iterator ) dialogues \u2693\ufe0e Read-only . A collection of all dialogue objects. Returns : result ( tes3iterator ) factions \u2693\ufe0e Read-only . A collection of all faction objects. Returns : result ( tes3iterator ) globals \u2693\ufe0e Read-only . A collection of all global variable objects. Returns : result ( tes3iterator ) magicEffects \u2693\ufe0e Read-only . A table of references to all 143 magic effects. Returns : result (table) objects \u2693\ufe0e Read-only . A collection of all other game objects. Returns : result (tes3linkedList) races \u2693\ufe0e Read-only . A collection of all race objects. Returns : result ( tes3iterator ) regions \u2693\ufe0e Read-only . A collection of all region objects. Returns : result ( tes3iterator ) scripts \u2693\ufe0e Read-only . A collection of all script objects. Returns : result ( tes3iterator ) skills \u2693\ufe0e Read-only . A table of references to all 27 skills. Returns : result (table) soundGenerators \u2693\ufe0e Read-only . A collection of all sound generator objects. Returns : result ( tes3iterator ) sounds \u2693\ufe0e Read-only . A collection of all sound objects. Returns : result ( tes3iterator ) spells \u2693\ufe0e Read-only . A collection of all spell objects. Returns : result (tes3linkedList) startScripts \u2693\ufe0e Read-only . A collection of all tes3startScript objects. Returns : result ( tes3iterator ) Methods \u2693\ufe0e addNewObject \u2693\ufe0e Inserts a newly created object into the proper collections. local result = tes3nonDynamicData : addNewObject ( object ) Parameters : object ( tes3baseObject ) Returns : result (boolean) deleteObject \u2693\ufe0e Removes an object from the proper collections. tes3nonDynamicData : deleteObject ( object ) Parameters : object ( tes3baseObject ) drawCellMapMarker \u2693\ufe0e Draws a map marker box for an exterior cell onto the world map. tes3nonDynamicData : drawCellMapMarker ( cell ) Parameters : cell ( tes3cell ) findDialogue \u2693\ufe0e Locates a dialogue for a given ID. local result = tes3nonDynamicData : findDialogue ( id ) Parameters : id (string) Returns : result ( tes3dialogue ) findFirstCloneOfActor \u2693\ufe0e Locates the first reference for a given object ID. local result = tes3nonDynamicData : findFirstCloneOfActor ( id ) Parameters : id (string) Returns : result ( tes3reference ) findGlobalVariable \u2693\ufe0e Locates a global variable for a given ID. local result = tes3nonDynamicData : findGlobalVariable ( id ) Parameters : id (string) Returns : result ( tes3globalVariable ) findScript \u2693\ufe0e Locates a script for a given ID. local result = tes3nonDynamicData : findScript ( id ) Parameters : id (string) Returns : result ( tes3script ) findSound \u2693\ufe0e Locates a sound for a given ID. local result = tes3nonDynamicData : findSound ( id ) Parameters : id (string) Returns : result ( tes3sound ) resolveObject \u2693\ufe0e Locates a general object for a given ID. local result = tes3nonDynamicData : resolveObject ( id ) Parameters : id (string) Returns : result ( tes3baseObject ) showLocationOnMap \u2693\ufe0e Draws map marker boxes onto the world map for all cells with names starting with the prefix. e.g. showLocationOnMap(\"Vivec\") draws boxes for all cells in Vivec, because the cell names \"Vivec, Arena\", \"Vivec, Temple\", etc. matches. tes3nonDynamicData : showLocationOnMap ( cellNamePrefix ) Parameters : cellNamePrefix (string)","title":"tes3nonDynamicData"},{"location":"types/tes3nonDynamicData/#tes3nondynamicdata","text":"A child container from tes3dataHandler , where game data is stored.","title":"tes3nonDynamicData"},{"location":"types/tes3nonDynamicData/#properties","text":"","title":"Properties"},{"location":"types/tes3nonDynamicData/#birthsigns","text":"Read-only . A collection of all birthsign objects. Returns : result ( tes3iterator )","title":"birthsigns"},{"location":"types/tes3nonDynamicData/#cells","text":"Read-only . A collection of all cell objects. Returns : result (tes3stlList)","title":"cells"},{"location":"types/tes3nonDynamicData/#classes","text":"Read-only . A collection of all class objects. Returns : result ( tes3iterator )","title":"classes"},{"location":"types/tes3nonDynamicData/#dialogues","text":"Read-only . A collection of all dialogue objects. Returns : result ( tes3iterator )","title":"dialogues"},{"location":"types/tes3nonDynamicData/#factions","text":"Read-only . A collection of all faction objects. Returns : result ( tes3iterator )","title":"factions"},{"location":"types/tes3nonDynamicData/#globals","text":"Read-only . A collection of all global variable objects. Returns : result ( tes3iterator )","title":"globals"},{"location":"types/tes3nonDynamicData/#magiceffects","text":"Read-only . A table of references to all 143 magic effects. Returns : result (table)","title":"magicEffects"},{"location":"types/tes3nonDynamicData/#objects","text":"Read-only . A collection of all other game objects. Returns : result (tes3linkedList)","title":"objects"},{"location":"types/tes3nonDynamicData/#races","text":"Read-only . A collection of all race objects. Returns : result ( tes3iterator )","title":"races"},{"location":"types/tes3nonDynamicData/#regions","text":"Read-only . A collection of all region objects. Returns : result ( tes3iterator )","title":"regions"},{"location":"types/tes3nonDynamicData/#scripts","text":"Read-only . A collection of all script objects. Returns : result ( tes3iterator )","title":"scripts"},{"location":"types/tes3nonDynamicData/#skills","text":"Read-only . A table of references to all 27 skills. Returns : result (table)","title":"skills"},{"location":"types/tes3nonDynamicData/#soundgenerators","text":"Read-only . A collection of all sound generator objects. Returns : result ( tes3iterator )","title":"soundGenerators"},{"location":"types/tes3nonDynamicData/#sounds","text":"Read-only . A collection of all sound objects. Returns : result ( tes3iterator )","title":"sounds"},{"location":"types/tes3nonDynamicData/#spells","text":"Read-only . A collection of all spell objects. Returns : result (tes3linkedList)","title":"spells"},{"location":"types/tes3nonDynamicData/#startscripts","text":"Read-only . A collection of all tes3startScript objects. Returns : result ( tes3iterator )","title":"startScripts"},{"location":"types/tes3nonDynamicData/#methods","text":"","title":"Methods"},{"location":"types/tes3nonDynamicData/#addnewobject","text":"Inserts a newly created object into the proper collections. local result = tes3nonDynamicData : addNewObject ( object ) Parameters : object ( tes3baseObject ) Returns : result (boolean)","title":"addNewObject"},{"location":"types/tes3nonDynamicData/#deleteobject","text":"Removes an object from the proper collections. tes3nonDynamicData : deleteObject ( object ) Parameters : object ( tes3baseObject )","title":"deleteObject"},{"location":"types/tes3nonDynamicData/#drawcellmapmarker","text":"Draws a map marker box for an exterior cell onto the world map. tes3nonDynamicData : drawCellMapMarker ( cell ) Parameters : cell ( tes3cell )","title":"drawCellMapMarker"},{"location":"types/tes3nonDynamicData/#finddialogue","text":"Locates a dialogue for a given ID. local result = tes3nonDynamicData : findDialogue ( id ) Parameters : id (string) Returns : result ( tes3dialogue )","title":"findDialogue"},{"location":"types/tes3nonDynamicData/#findfirstcloneofactor","text":"Locates the first reference for a given object ID. local result = tes3nonDynamicData : findFirstCloneOfActor ( id ) Parameters : id (string) Returns : result ( tes3reference )","title":"findFirstCloneOfActor"},{"location":"types/tes3nonDynamicData/#findglobalvariable","text":"Locates a global variable for a given ID. local result = tes3nonDynamicData : findGlobalVariable ( id ) Parameters : id (string) Returns : result ( tes3globalVariable )","title":"findGlobalVariable"},{"location":"types/tes3nonDynamicData/#findscript","text":"Locates a script for a given ID. local result = tes3nonDynamicData : findScript ( id ) Parameters : id (string) Returns : result ( tes3script )","title":"findScript"},{"location":"types/tes3nonDynamicData/#findsound","text":"Locates a sound for a given ID. local result = tes3nonDynamicData : findSound ( id ) Parameters : id (string) Returns : result ( tes3sound )","title":"findSound"},{"location":"types/tes3nonDynamicData/#resolveobject","text":"Locates a general object for a given ID. local result = tes3nonDynamicData : resolveObject ( id ) Parameters : id (string) Returns : result ( tes3baseObject )","title":"resolveObject"},{"location":"types/tes3nonDynamicData/#showlocationonmap","text":"Draws map marker boxes onto the world map for all cells with names starting with the prefix. e.g. showLocationOnMap(\"Vivec\") draws boxes for all cells in Vivec, because the cell names \"Vivec, Arena\", \"Vivec, Temple\", etc. matches. tes3nonDynamicData : showLocationOnMap ( cellNamePrefix ) Parameters : cellNamePrefix (string)","title":"showLocationOnMap"},{"location":"types/tes3npc/","text":"tes3npc \u2693\ufe0e An NPC object that has not been cloned. Typically represents the raw information edited in the construction set. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e actorFlags \u2693\ufe0e Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number) aiConfig \u2693\ufe0e Read-only . A substructure off of actors that contains information on the current AI configuration. Returns : result ( tes3aiConfig ) attributes \u2693\ufe0e A table of eight numbers, representing the base values for the actor's attributes. Returns : result (table) autoCalc \u2693\ufe0e Direct access to the actor autocalc flag. Returns : result (boolean) barterGold \u2693\ufe0e Friendly access to actor's barter gold amount. Returns : result (number) baseDisposition \u2693\ufe0e The actor's base disposition. Returns : result (number) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) blood \u2693\ufe0e Friendly access to actor's blood type. Returns : result (number) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) class \u2693\ufe0e Read-only . The class that the NPC uses. Returns : result ( tes3class ) cloneCount \u2693\ufe0e Read-only . The number of clones that exist of this actor. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) equipment \u2693\ufe0e Read-only . The items currently equipped to the actor. Returns : result ( tes3iterator ) faction \u2693\ufe0e Read-only . The class that the NPC is joined to. Returns : result ( tes3faction ) factionIndex \u2693\ufe0e No description yet available. Returns : result (number) factionRank \u2693\ufe0e The NPC's rank in their faction. Returns : result (number) fatigue \u2693\ufe0e The actor's max fatigue. Returns : result (number) female \u2693\ufe0e Direct access to the actor female flag. Returns : result (boolean) hair \u2693\ufe0e The hair body part that the NPC will use. Returns : result ( tes3bodyPart ) head \u2693\ufe0e The head body part that the NPC will use. Returns : result ( tes3bodyPart ) health \u2693\ufe0e The actor's max health. Returns : result (number) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) inventory \u2693\ufe0e Read-only . The items currently carried by the actor. Returns : result ( tes3inventory ) isAttacked \u2693\ufe0e Read-only . If true, the actor's attacked flag is set. Returns : result (boolean) isEssential \u2693\ufe0e Read-only . If true, the actor's essential flag is set. Returns : result (boolean) isInstance \u2693\ufe0e Always returns false. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) isRespawn \u2693\ufe0e Read-only . If true, the actor's respawn flag is set. Returns : result (boolean) level \u2693\ufe0e The actor's level. Returns : result (number) magicka \u2693\ufe0e The actor's max magicka. Returns : result (number) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) race \u2693\ufe0e Read-only . The race that the NPC uses. Returns : result ( tes3race ) reputation \u2693\ufe0e The actor's base reputation. Returns : result (number) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) skills \u2693\ufe0e A table of twenty seven numbers, representing the base values for the NPC's skills. Returns : result (table) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) spells \u2693\ufe0e Read-only . A list of spells that the actor has access to. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, spell in pairs(npc.spells.iterator) do print(spell.name) end Returns : result ( tes3spellList ) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) hasItemEquipped \u2693\ufe0e Checks if the actor has provided item equipped. local result = tes3actor : hasItemEquipped ({ item = ..., itemData = ... }) Parameters : params (table) item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean) offersService \u2693\ufe0e Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = tes3actor : offersService ( service ) Parameters : service (number): Use one of the tes3.merchantService.* constants. Returns : result (boolean) onInventoryClose \u2693\ufe0e A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. tes3actor : onInventoryClose ( reference ) Parameters : reference ( tes3reference ) tradesItemType \u2693\ufe0e Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = tes3actor : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tes3npc"},{"location":"types/tes3npc/#tes3npc","text":"An NPC object that has not been cloned. Typically represents the raw information edited in the construction set. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject","title":"tes3npc"},{"location":"types/tes3npc/#properties","text":"","title":"Properties"},{"location":"types/tes3npc/#actorflags","text":"Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number)","title":"actorFlags"},{"location":"types/tes3npc/#aiconfig","text":"Read-only . A substructure off of actors that contains information on the current AI configuration. Returns : result ( tes3aiConfig )","title":"aiConfig"},{"location":"types/tes3npc/#attributes","text":"A table of eight numbers, representing the base values for the actor's attributes. Returns : result (table)","title":"attributes"},{"location":"types/tes3npc/#autocalc","text":"Direct access to the actor autocalc flag. Returns : result (boolean)","title":"autoCalc"},{"location":"types/tes3npc/#bartergold","text":"Friendly access to actor's barter gold amount. Returns : result (number)","title":"barterGold"},{"location":"types/tes3npc/#basedisposition","text":"The actor's base disposition. Returns : result (number)","title":"baseDisposition"},{"location":"types/tes3npc/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3npc/#blood","text":"Friendly access to actor's blood type. Returns : result (number)","title":"blood"},{"location":"types/tes3npc/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3npc/#class","text":"Read-only . The class that the NPC uses. Returns : result ( tes3class )","title":"class"},{"location":"types/tes3npc/#clonecount","text":"Read-only . The number of clones that exist of this actor. Returns : result (number)","title":"cloneCount"},{"location":"types/tes3npc/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3npc/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3npc/#equipment","text":"Read-only . The items currently equipped to the actor. Returns : result ( tes3iterator )","title":"equipment"},{"location":"types/tes3npc/#faction","text":"Read-only . The class that the NPC is joined to. Returns : result ( tes3faction )","title":"faction"},{"location":"types/tes3npc/#factionindex","text":"No description yet available. Returns : result (number)","title":"factionIndex"},{"location":"types/tes3npc/#factionrank","text":"The NPC's rank in their faction. Returns : result (number)","title":"factionRank"},{"location":"types/tes3npc/#fatigue","text":"The actor's max fatigue. Returns : result (number)","title":"fatigue"},{"location":"types/tes3npc/#female","text":"Direct access to the actor female flag. Returns : result (boolean)","title":"female"},{"location":"types/tes3npc/#hair","text":"The hair body part that the NPC will use. Returns : result ( tes3bodyPart )","title":"hair"},{"location":"types/tes3npc/#head","text":"The head body part that the NPC will use. Returns : result ( tes3bodyPart )","title":"head"},{"location":"types/tes3npc/#health","text":"The actor's max health. Returns : result (number)","title":"health"},{"location":"types/tes3npc/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3npc/#inventory","text":"Read-only . The items currently carried by the actor. Returns : result ( tes3inventory )","title":"inventory"},{"location":"types/tes3npc/#isattacked","text":"Read-only . If true, the actor's attacked flag is set. Returns : result (boolean)","title":"isAttacked"},{"location":"types/tes3npc/#isessential","text":"Read-only . If true, the actor's essential flag is set. Returns : result (boolean)","title":"isEssential"},{"location":"types/tes3npc/#isinstance","text":"Always returns false. Returns : result (boolean)","title":"isInstance"},{"location":"types/tes3npc/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3npc/#isrespawn","text":"Read-only . If true, the actor's respawn flag is set. Returns : result (boolean)","title":"isRespawn"},{"location":"types/tes3npc/#level","text":"The actor's level. Returns : result (number)","title":"level"},{"location":"types/tes3npc/#magicka","text":"The actor's max magicka. Returns : result (number)","title":"magicka"},{"location":"types/tes3npc/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3npc/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3npc/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3npc/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3npc/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3npc/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3npc/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3npc/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3npc/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3npc/#race","text":"Read-only . The race that the NPC uses. Returns : result ( tes3race )","title":"race"},{"location":"types/tes3npc/#reputation","text":"The actor's base reputation. Returns : result (number)","title":"reputation"},{"location":"types/tes3npc/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3npc/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3npc/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3npc/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3npc/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3npc/#skills","text":"A table of twenty seven numbers, representing the base values for the NPC's skills. Returns : result (table)","title":"skills"},{"location":"types/tes3npc/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3npc/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3npc/#spells","text":"Read-only . A list of spells that the actor has access to. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, spell in pairs(npc.spells.iterator) do print(spell.name) end Returns : result ( tes3spellList )","title":"spells"},{"location":"types/tes3npc/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3npc/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3npc/#methods","text":"","title":"Methods"},{"location":"types/tes3npc/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3npc/#hasitemequipped","text":"Checks if the actor has provided item equipped. local result = tes3actor : hasItemEquipped ({ item = ..., itemData = ... }) Parameters : params (table) item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean)","title":"hasItemEquipped"},{"location":"types/tes3npc/#offersservice","text":"Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = tes3actor : offersService ( service ) Parameters : service (number): Use one of the tes3.merchantService.* constants. Returns : result (boolean)","title":"offersService"},{"location":"types/tes3npc/#oninventoryclose","text":"A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. tes3actor : onInventoryClose ( reference ) Parameters : reference ( tes3reference )","title":"onInventoryClose"},{"location":"types/tes3npc/#tradesitemtype","text":"Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = tes3actor : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tradesItemType"},{"location":"types/tes3npcInstance/","text":"tes3npcInstance \u2693\ufe0e An NPC object that has been cloned. Typically represents an NPC that has been instanced in the world. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e actorFlags \u2693\ufe0e Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number) aiConfig \u2693\ufe0e Read-only . A substructure off of actors that contains information on the current AI configuration. Returns : result ( tes3aiConfig ) attributes \u2693\ufe0e Quick access to the base NPC's attributes. Returns : result (table) barterGold \u2693\ufe0e Friendly access to actor's barter gold amount. Returns : result (number) baseObject \u2693\ufe0e Read-only . Access to the base NPC object. Returns : result ( tes3npc ) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) blood \u2693\ufe0e Friendly access to actor's blood type. Returns : result (number) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) class \u2693\ufe0e Read-only . Quick access to the base NPC's class. Returns : result ( tes3class ) cloneCount \u2693\ufe0e Read-only . The number of clones that exist of this actor. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) disposition \u2693\ufe0e Read-only . The actor's effective disposition, with all modifiers applied. Returns : result (number) equipment \u2693\ufe0e Read-only . The items currently equipped to the actor. Returns : result ( tes3iterator ) faction \u2693\ufe0e Read-only . Quick access to the base NPC's faction. Returns : result ( tes3faction ) factionIndex \u2693\ufe0e No description yet available. Returns : result (number) fatigue \u2693\ufe0e Read-only . Quick access to the base NPC's fatigue. Returns : result (number) health \u2693\ufe0e Read-only . Quick access to the base NPC's health. Returns : result (number) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) inventory \u2693\ufe0e Read-only . The items currently carried by the actor. Returns : result ( tes3inventory ) isAttacked \u2693\ufe0e Read-only . If true, the actor's attacked flag is set. Returns : result (boolean) isEssential \u2693\ufe0e Read-only . If true, the actor's essential flag is set. Returns : result (boolean) isInstance \u2693\ufe0e Always returns true. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) isRespawn \u2693\ufe0e Read-only . If true, the actor's respawn flag is set. Returns : result (boolean) level \u2693\ufe0e Read-only . Quick access to the base NPC's level. Returns : result (number) magicka \u2693\ufe0e Read-only . Quick access to the base NPC's magicka. Returns : result (number) mobile \u2693\ufe0e Read-only . The mobile that the object is represented by. Returns : result ( tes3mobileActor ) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e Quick access to the base NPC's name. Returns : result (number) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) race \u2693\ufe0e Read-only . Quick access to the base NPC's race. Returns : result ( tes3race ) reference \u2693\ufe0e Read-only . The reference that the object is represented by. Returns : result ( tes3reference ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e Read-only . Quick access to the base NPC's script. Returns : result ( tes3script ) skills \u2693\ufe0e Quick access to the base NPC's skills. Returns : result (table) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) spells \u2693\ufe0e Read-only . Quick access to the base NPC's spell list. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, spell in pairs(npc.spells.iterator) do print(spell.name) end Returns : result ( tes3spellList ) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) hasItemEquipped \u2693\ufe0e Checks if the actor has provided item equipped. local result = tes3actor : hasItemEquipped ({ item = ..., itemData = ... }) Parameters : params (table) item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean) offersService \u2693\ufe0e Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = tes3actor : offersService ( service ) Parameters : service (number): Use one of the tes3.merchantService.* constants. Returns : result (boolean) onInventoryClose \u2693\ufe0e A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. tes3actor : onInventoryClose ( reference ) Parameters : reference ( tes3reference ) reevaluateEquipment \u2693\ufe0e Causes the NPC to reevaluate his/hers equipment choices and equip the best available. tes3npcInstance : reevaluateEquipment () tradesItemType \u2693\ufe0e Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = tes3actor : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tes3npcInstance"},{"location":"types/tes3npcInstance/#tes3npcinstance","text":"An NPC object that has been cloned. Typically represents an NPC that has been instanced in the world. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject","title":"tes3npcInstance"},{"location":"types/tes3npcInstance/#properties","text":"","title":"Properties"},{"location":"types/tes3npcInstance/#actorflags","text":"Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number)","title":"actorFlags"},{"location":"types/tes3npcInstance/#aiconfig","text":"Read-only . A substructure off of actors that contains information on the current AI configuration. Returns : result ( tes3aiConfig )","title":"aiConfig"},{"location":"types/tes3npcInstance/#attributes","text":"Quick access to the base NPC's attributes. Returns : result (table)","title":"attributes"},{"location":"types/tes3npcInstance/#bartergold","text":"Friendly access to actor's barter gold amount. Returns : result (number)","title":"barterGold"},{"location":"types/tes3npcInstance/#baseobject","text":"Read-only . Access to the base NPC object. Returns : result ( tes3npc )","title":"baseObject"},{"location":"types/tes3npcInstance/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3npcInstance/#blood","text":"Friendly access to actor's blood type. Returns : result (number)","title":"blood"},{"location":"types/tes3npcInstance/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3npcInstance/#class","text":"Read-only . Quick access to the base NPC's class. Returns : result ( tes3class )","title":"class"},{"location":"types/tes3npcInstance/#clonecount","text":"Read-only . The number of clones that exist of this actor. Returns : result (number)","title":"cloneCount"},{"location":"types/tes3npcInstance/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3npcInstance/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3npcInstance/#disposition","text":"Read-only . The actor's effective disposition, with all modifiers applied. Returns : result (number)","title":"disposition"},{"location":"types/tes3npcInstance/#equipment","text":"Read-only . The items currently equipped to the actor. Returns : result ( tes3iterator )","title":"equipment"},{"location":"types/tes3npcInstance/#faction","text":"Read-only . Quick access to the base NPC's faction. Returns : result ( tes3faction )","title":"faction"},{"location":"types/tes3npcInstance/#factionindex","text":"No description yet available. Returns : result (number)","title":"factionIndex"},{"location":"types/tes3npcInstance/#fatigue","text":"Read-only . Quick access to the base NPC's fatigue. Returns : result (number)","title":"fatigue"},{"location":"types/tes3npcInstance/#health","text":"Read-only . Quick access to the base NPC's health. Returns : result (number)","title":"health"},{"location":"types/tes3npcInstance/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3npcInstance/#inventory","text":"Read-only . The items currently carried by the actor. Returns : result ( tes3inventory )","title":"inventory"},{"location":"types/tes3npcInstance/#isattacked","text":"Read-only . If true, the actor's attacked flag is set. Returns : result (boolean)","title":"isAttacked"},{"location":"types/tes3npcInstance/#isessential","text":"Read-only . If true, the actor's essential flag is set. Returns : result (boolean)","title":"isEssential"},{"location":"types/tes3npcInstance/#isinstance","text":"Always returns true. Returns : result (boolean)","title":"isInstance"},{"location":"types/tes3npcInstance/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3npcInstance/#isrespawn","text":"Read-only . If true, the actor's respawn flag is set. Returns : result (boolean)","title":"isRespawn"},{"location":"types/tes3npcInstance/#level","text":"Read-only . Quick access to the base NPC's level. Returns : result (number)","title":"level"},{"location":"types/tes3npcInstance/#magicka","text":"Read-only . Quick access to the base NPC's magicka. Returns : result (number)","title":"magicka"},{"location":"types/tes3npcInstance/#mobile","text":"Read-only . The mobile that the object is represented by. Returns : result ( tes3mobileActor )","title":"mobile"},{"location":"types/tes3npcInstance/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3npcInstance/#name","text":"Quick access to the base NPC's name. Returns : result (number)","title":"name"},{"location":"types/tes3npcInstance/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3npcInstance/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3npcInstance/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3npcInstance/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3npcInstance/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3npcInstance/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3npcInstance/#race","text":"Read-only . Quick access to the base NPC's race. Returns : result ( tes3race )","title":"race"},{"location":"types/tes3npcInstance/#reference","text":"Read-only . The reference that the object is represented by. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3npcInstance/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3npcInstance/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3npcInstance/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3npcInstance/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3npcInstance/#script","text":"Read-only . Quick access to the base NPC's script. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3npcInstance/#skills","text":"Quick access to the base NPC's skills. Returns : result (table)","title":"skills"},{"location":"types/tes3npcInstance/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3npcInstance/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3npcInstance/#spells","text":"Read-only . Quick access to the base NPC's spell list. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, spell in pairs(npc.spells.iterator) do print(spell.name) end Returns : result ( tes3spellList )","title":"spells"},{"location":"types/tes3npcInstance/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3npcInstance/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3npcInstance/#methods","text":"","title":"Methods"},{"location":"types/tes3npcInstance/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3npcInstance/#hasitemequipped","text":"Checks if the actor has provided item equipped. local result = tes3actor : hasItemEquipped ({ item = ..., itemData = ... }) Parameters : params (table) item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean)","title":"hasItemEquipped"},{"location":"types/tes3npcInstance/#offersservice","text":"Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = tes3actor : offersService ( service ) Parameters : service (number): Use one of the tes3.merchantService.* constants. Returns : result (boolean)","title":"offersService"},{"location":"types/tes3npcInstance/#oninventoryclose","text":"A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. tes3actor : onInventoryClose ( reference ) Parameters : reference ( tes3reference )","title":"onInventoryClose"},{"location":"types/tes3npcInstance/#reevaluateequipment","text":"Causes the NPC to reevaluate his/hers equipment choices and equip the best available. tes3npcInstance : reevaluateEquipment ()","title":"reevaluateEquipment"},{"location":"types/tes3npcInstance/#tradesitemtype","text":"Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = tes3actor : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tradesItemType"},{"location":"types/tes3object/","text":"tes3object \u2693\ufe0e Almost anything that can be represented in the Construction Set is based on this structure. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3object"},{"location":"types/tes3object/#tes3object","text":"Almost anything that can be represented in the Construction Set is based on this structure. This type inherits the following: tes3baseObject","title":"tes3object"},{"location":"types/tes3object/#properties","text":"","title":"Properties"},{"location":"types/tes3object/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3object/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3object/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3object/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3object/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3object/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3object/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3object/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3object/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3object/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3object/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3object/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3object/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3object/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3object/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3object/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3object/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3object/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3object/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3object/#methods","text":"","title":"Methods"},{"location":"types/tes3object/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3packedColor/","text":"tes3packedColor \u2693\ufe0e A densely packed structure for single-byte red, green, blue and alpha values. Properties \u2693\ufe0e a \u2693\ufe0e The alpha color value. Returns : result (number) alpha \u2693\ufe0e The alpha color value. Another alias for a. Returns : result (number) b \u2693\ufe0e The blue color value. Returns : result (number) blue \u2693\ufe0e The blue color value. Another alias for b. Returns : result (number) g \u2693\ufe0e The green color value. Returns : result (number) green \u2693\ufe0e The green color value. Another alias for g. Returns : result (number) r \u2693\ufe0e The red color value. Returns : result (number) red \u2693\ufe0e The red color value. Another alias for r. Returns : result (number)","title":"tes3packedColor"},{"location":"types/tes3packedColor/#tes3packedcolor","text":"A densely packed structure for single-byte red, green, blue and alpha values.","title":"tes3packedColor"},{"location":"types/tes3packedColor/#properties","text":"","title":"Properties"},{"location":"types/tes3packedColor/#a","text":"The alpha color value. Returns : result (number)","title":"a"},{"location":"types/tes3packedColor/#alpha","text":"The alpha color value. Another alias for a. Returns : result (number)","title":"alpha"},{"location":"types/tes3packedColor/#b","text":"The blue color value. Returns : result (number)","title":"b"},{"location":"types/tes3packedColor/#blue","text":"The blue color value. Another alias for b. Returns : result (number)","title":"blue"},{"location":"types/tes3packedColor/#g","text":"The green color value. Returns : result (number)","title":"g"},{"location":"types/tes3packedColor/#green","text":"The green color value. Another alias for g. Returns : result (number)","title":"green"},{"location":"types/tes3packedColor/#r","text":"The red color value. Returns : result (number)","title":"r"},{"location":"types/tes3packedColor/#red","text":"The red color value. Another alias for r. Returns : result (number)","title":"red"},{"location":"types/tes3physicalObject/","text":"tes3physicalObject \u2693\ufe0e Almost anything that can be represented in the Construction Set is based on this structure. This type inherits the following: tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3physicalObject"},{"location":"types/tes3physicalObject/#tes3physicalobject","text":"Almost anything that can be represented in the Construction Set is based on this structure. This type inherits the following: tes3object , tes3baseObject","title":"tes3physicalObject"},{"location":"types/tes3physicalObject/#properties","text":"","title":"Properties"},{"location":"types/tes3physicalObject/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3physicalObject/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3physicalObject/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3physicalObject/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3physicalObject/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3physicalObject/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3physicalObject/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3physicalObject/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3physicalObject/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3physicalObject/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3physicalObject/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3physicalObject/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3physicalObject/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3physicalObject/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3physicalObject/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3physicalObject/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3physicalObject/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3physicalObject/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3physicalObject/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3physicalObject/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3physicalObject/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3physicalObject/#methods","text":"","title":"Methods"},{"location":"types/tes3physicalObject/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3playerAnimationController/","text":"tes3playerAnimationController \u2693\ufe0e Works in conjuction with mobile AI to perform idle, movement, and attack animations. Holds data on the status of the current and next desired animation states for the different body sections that can be animated. This type inherits the following: tes3actorAnimationController Properties \u2693\ufe0e mobile \u2693\ufe0e Read-only . The mobile actor that this controller is responsible for. Returns : result ( tes3mobileActor ) weaponSpeed \u2693\ufe0e Read-only . The animation speed scaling of the weapon animations. This includes all weapon related idle, attack, and ready/unready animations. This value is reset at the starting frame of each weapon strike, normally equal to the the weapon speed. Therefore if you use this it should be changed after every strike, and reset after. Ready/unready actions do not change speed, but are affected by speed. Use by getting the animation controller from the mobile. e.g. mobile.animationController.weaponSpeed = 0.5 Returns : result (number)","title":"tes3playerAnimationController"},{"location":"types/tes3playerAnimationController/#tes3playeranimationcontroller","text":"Works in conjuction with mobile AI to perform idle, movement, and attack animations. Holds data on the status of the current and next desired animation states for the different body sections that can be animated. This type inherits the following: tes3actorAnimationController","title":"tes3playerAnimationController"},{"location":"types/tes3playerAnimationController/#properties","text":"","title":"Properties"},{"location":"types/tes3playerAnimationController/#mobile","text":"Read-only . The mobile actor that this controller is responsible for. Returns : result ( tes3mobileActor )","title":"mobile"},{"location":"types/tes3playerAnimationController/#weaponspeed","text":"Read-only . The animation speed scaling of the weapon animations. This includes all weapon related idle, attack, and ready/unready animations. This value is reset at the starting frame of each weapon strike, normally equal to the the weapon speed. Therefore if you use this it should be changed after every strike, and reset after. Ready/unready actions do not change speed, but are affected by speed. Use by getting the animation controller from the mobile. e.g. mobile.animationController.weaponSpeed = 0.5 Returns : result (number)","title":"weaponSpeed"},{"location":"types/tes3probe/","text":"tes3probe \u2693\ufe0e A core lockpick object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) maxCondition \u2693\ufe0e The maximum condition/health of the object. Returns : result (number) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) quality \u2693\ufe0e The quality of the object, with how much of a bonus it has. Returns : result (number) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e Read-only . The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3probe"},{"location":"types/tes3probe/#tes3probe","text":"A core lockpick object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3probe"},{"location":"types/tes3probe/#properties","text":"","title":"Properties"},{"location":"types/tes3probe/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3probe/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3probe/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3probe/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3probe/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3probe/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3probe/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3probe/#maxcondition","text":"The maximum condition/health of the object. Returns : result (number)","title":"maxCondition"},{"location":"types/tes3probe/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3probe/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3probe/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3probe/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3probe/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3probe/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3probe/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3probe/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3probe/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3probe/#quality","text":"The quality of the object, with how much of a bonus it has. Returns : result (number)","title":"quality"},{"location":"types/tes3probe/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3probe/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3probe/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3probe/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3probe/#script","text":"Read-only . The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3probe/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3probe/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3probe/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3probe/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3probe/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3probe/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3probe/#methods","text":"","title":"Methods"},{"location":"types/tes3probe/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3processManager/","text":"tes3processManager \u2693\ufe0e Properties \u2693\ufe0e aiDistance \u2693\ufe0e A value which controls how far the game AI is processed, measured in game distance units. Corresponds to AI Distance slider in Options menu. Returns : result (number) aiDistanceScale \u2693\ufe0e A value which controls how far the game AI is processed. Corresponds to AI Distance slider in Options menu. This scale is in range [0, 1]. Where 0 means the minimal AI processing range, while 1 means maximal AI processing range. Returns : result (number) Functions \u2693\ufe0e checkAlarmRadius \u2693\ufe0e tes3processManager . checkAlarmRadius ({ actor = ..., container = ... }) Parameters : params (table) actor ( tes3mobileActor ): container ( tes3aiPlanner ): checkNearbyEnemiesAllowRest \u2693\ufe0e Performs a check whether any potential nearby enemies allow the player to rest. local result = tes3processManager . checkNearbyEnemiesAllowRest () Returns : result (boolean) checkPlayerDistance \u2693\ufe0e tes3processManager . checkPlayerDistance () detectPresence \u2693\ufe0e This function performs a check for presence of a given mobile actor. tes3processManager . detectPresence ({ actor = ..., unknown = ... }) Parameters : params (table) actor ( tes3mobileActor ): The actor to perform a check for. unknown (boolean) detectSneak \u2693\ufe0e This function performs a check whether a detector can detect another actor sneaking. local isDetected = tes3processManager . detectSneak ({ detector = ..., target = ..., unknown = ... }) Parameters : params (table) detector ( tes3mobileActor ): The detector actor to perform a check for. target ( tes3mobileActor ): The target actor to perform a check for. unknown (boolean) Returns : isDetected (boolean)","title":"tes3processManager"},{"location":"types/tes3processManager/#tes3processmanager","text":"","title":"tes3processManager"},{"location":"types/tes3processManager/#properties","text":"","title":"Properties"},{"location":"types/tes3processManager/#aidistance","text":"A value which controls how far the game AI is processed, measured in game distance units. Corresponds to AI Distance slider in Options menu. Returns : result (number)","title":"aiDistance"},{"location":"types/tes3processManager/#aidistancescale","text":"A value which controls how far the game AI is processed. Corresponds to AI Distance slider in Options menu. This scale is in range [0, 1]. Where 0 means the minimal AI processing range, while 1 means maximal AI processing range. Returns : result (number)","title":"aiDistanceScale"},{"location":"types/tes3processManager/#functions","text":"","title":"Functions"},{"location":"types/tes3processManager/#checkalarmradius","text":"tes3processManager . checkAlarmRadius ({ actor = ..., container = ... }) Parameters : params (table) actor ( tes3mobileActor ): container ( tes3aiPlanner ):","title":"checkAlarmRadius"},{"location":"types/tes3processManager/#checknearbyenemiesallowrest","text":"Performs a check whether any potential nearby enemies allow the player to rest. local result = tes3processManager . checkNearbyEnemiesAllowRest () Returns : result (boolean)","title":"checkNearbyEnemiesAllowRest"},{"location":"types/tes3processManager/#checkplayerdistance","text":"tes3processManager . checkPlayerDistance ()","title":"checkPlayerDistance"},{"location":"types/tes3processManager/#detectpresence","text":"This function performs a check for presence of a given mobile actor. tes3processManager . detectPresence ({ actor = ..., unknown = ... }) Parameters : params (table) actor ( tes3mobileActor ): The actor to perform a check for. unknown (boolean)","title":"detectPresence"},{"location":"types/tes3processManager/#detectsneak","text":"This function performs a check whether a detector can detect another actor sneaking. local isDetected = tes3processManager . detectSneak ({ detector = ..., target = ..., unknown = ... }) Parameters : params (table) detector ( tes3mobileActor ): The detector actor to perform a check for. target ( tes3mobileActor ): The target actor to perform a check for. unknown (boolean) Returns : isDetected (boolean)","title":"detectSneak"},{"location":"types/tes3projectileController/","text":"tes3projectileController \u2693\ufe0e A game structure which holds all active projectiles. Properties \u2693\ufe0e projectiles \u2693\ufe0e Read-only . A table with all currently active projectiles. Returns : result (table)","title":"tes3projectileController"},{"location":"types/tes3projectileController/#tes3projectilecontroller","text":"A game structure which holds all active projectiles.","title":"tes3projectileController"},{"location":"types/tes3projectileController/#properties","text":"","title":"Properties"},{"location":"types/tes3projectileController/#projectiles","text":"Read-only . A table with all currently active projectiles. Returns : result (table)","title":"projectiles"},{"location":"types/tes3quest/","text":"tes3quest \u2693\ufe0e A representation of a quest, with associated dialogue and info. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) dialogue \u2693\ufe0e Read-only . A collection of dialogues associated with the quest. Returns : result ( tes3iterator ) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) info \u2693\ufe0e Read-only . A collection of dialogue info associated with the quest. Returns : result ( tes3iterator ) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3quest"},{"location":"types/tes3quest/#tes3quest","text":"A representation of a quest, with associated dialogue and info. This type inherits the following: tes3baseObject","title":"tes3quest"},{"location":"types/tes3quest/#properties","text":"","title":"Properties"},{"location":"types/tes3quest/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3quest/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3quest/#dialogue","text":"Read-only . A collection of dialogues associated with the quest. Returns : result ( tes3iterator )","title":"dialogue"},{"location":"types/tes3quest/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3quest/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3quest/#info","text":"Read-only . A collection of dialogue info associated with the quest. Returns : result ( tes3iterator )","title":"info"},{"location":"types/tes3quest/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3quest/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3quest/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3quest/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3quest/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3quest/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3quest/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3quest/#methods","text":"","title":"Methods"},{"location":"types/tes3quest/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3quickKey/","text":"tes3quickKey \u2693\ufe0e A configuration detailing a quick key. Properties \u2693\ufe0e item \u2693\ufe0e Read-only . The raw item bound to the quick key. To change its value, use either the setItem or setMagic methods. Returns : result ( tes3item ) itemData \u2693\ufe0e Read-only . The raw item data bound to the quick key. To change its value, use either the setItem or setMagic methods. Returns : result ( tes3itemData ) spell \u2693\ufe0e Read-only . The raw spell bound to the quick key. To change its value, use the setMagic method. Returns : result ( tes3spell ) type \u2693\ufe0e Read-only . The type of the quick key, with the numeric value matching tes3.quickKeyType constants. Returns : result (number) Methods \u2693\ufe0e clear \u2693\ufe0e Unbinds the quick key, removing any data in it. tes3quickKey : clear () getItem \u2693\ufe0e Gets the item associated with the given quick key. If the quick key is not marked as an item, this will return nil . This is equivalent to fetching the item and itemData properties, after checking to make sure the type is set to item. local source , data = tes3quickKey : getItem () Returns : source ( tes3item , nil): The item bound to the quick key. data ( tes3itemData , nil): Any associated item data bound to the quick key getMagic \u2693\ufe0e Gets the magic associated with the given quick key. If the quick key is not marked as magic, this will return nil . This is equivalent to fetching either the spell or item properties and the itemData property, after checking to make sure the type is set to magic. local source , data = tes3quickKey : getMagic () Returns : source ( tes3spell , tes3item , nil): The castable source bound to the quick key. data ( tes3itemData , nil): Any associated item data bound to the quick key setItem \u2693\ufe0e Sets the binding of the quick key to a given item source. tes3quickKey : setItem ( source , data ) Parameters : source ( tes3item ): The item to be bound to the quick key. data ( tes3itemData , nil): The optional item data to be paired with the binding. setMagic \u2693\ufe0e Sets the binding of the quick key to a given magic source. This must be a spell, or an item with an on-use enchantment. tes3quickKey : setMagic ( source , data ) Parameters : source ( tes3spell , tes3item ): The castable source to be bound to the quick key. data ( tes3itemData , nil): If given an item as the source, the optional item data to be paired with the binding.","title":"tes3quickKey"},{"location":"types/tes3quickKey/#tes3quickkey","text":"A configuration detailing a quick key.","title":"tes3quickKey"},{"location":"types/tes3quickKey/#properties","text":"","title":"Properties"},{"location":"types/tes3quickKey/#item","text":"Read-only . The raw item bound to the quick key. To change its value, use either the setItem or setMagic methods. Returns : result ( tes3item )","title":"item"},{"location":"types/tes3quickKey/#itemdata","text":"Read-only . The raw item data bound to the quick key. To change its value, use either the setItem or setMagic methods. Returns : result ( tes3itemData )","title":"itemData"},{"location":"types/tes3quickKey/#spell","text":"Read-only . The raw spell bound to the quick key. To change its value, use the setMagic method. Returns : result ( tes3spell )","title":"spell"},{"location":"types/tes3quickKey/#type","text":"Read-only . The type of the quick key, with the numeric value matching tes3.quickKeyType constants. Returns : result (number)","title":"type"},{"location":"types/tes3quickKey/#methods","text":"","title":"Methods"},{"location":"types/tes3quickKey/#clear","text":"Unbinds the quick key, removing any data in it. tes3quickKey : clear ()","title":"clear"},{"location":"types/tes3quickKey/#getitem","text":"Gets the item associated with the given quick key. If the quick key is not marked as an item, this will return nil . This is equivalent to fetching the item and itemData properties, after checking to make sure the type is set to item. local source , data = tes3quickKey : getItem () Returns : source ( tes3item , nil): The item bound to the quick key. data ( tes3itemData , nil): Any associated item data bound to the quick key","title":"getItem"},{"location":"types/tes3quickKey/#getmagic","text":"Gets the magic associated with the given quick key. If the quick key is not marked as magic, this will return nil . This is equivalent to fetching either the spell or item properties and the itemData property, after checking to make sure the type is set to magic. local source , data = tes3quickKey : getMagic () Returns : source ( tes3spell , tes3item , nil): The castable source bound to the quick key. data ( tes3itemData , nil): Any associated item data bound to the quick key","title":"getMagic"},{"location":"types/tes3quickKey/#setitem","text":"Sets the binding of the quick key to a given item source. tes3quickKey : setItem ( source , data ) Parameters : source ( tes3item ): The item to be bound to the quick key. data ( tes3itemData , nil): The optional item data to be paired with the binding.","title":"setItem"},{"location":"types/tes3quickKey/#setmagic","text":"Sets the binding of the quick key to a given magic source. This must be a spell, or an item with an on-use enchantment. tes3quickKey : setMagic ( source , data ) Parameters : source ( tes3spell , tes3item ): The castable source to be bound to the quick key. data ( tes3itemData , nil): If given an item as the source, the optional item data to be paired with the binding.","title":"setMagic"},{"location":"types/tes3race/","text":"tes3race \u2693\ufe0e A core object representing a character race. This type inherits the following: tes3baseObject Properties \u2693\ufe0e abilities \u2693\ufe0e Read-only . A list of abilities that NPCs of that race have access to. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, ability in pairs(race.abilities.iterator) do print(ability.name) end Returns : result ( tes3spellList ) baseAttributes \u2693\ufe0e Read-only . Array-style table access to base 8 attributes for the race. Each element in the array is a tes3raceBaseAttribute . Returns : result (table) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) description \u2693\ufe0e Read-only . Loads from disk and returns the description of the race. Returns : result (string) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) femaleBody \u2693\ufe0e Read-only . Access to all the body parts that will be used for female actors of this race. Returns : result ( tes3raceBodyParts ) flags \u2693\ufe0e Raw bit-based flags. Returns : result (number) height \u2693\ufe0e Read-only . Access to the the height pair for males/females of the race. Returns : result ( tes3raceHeightWeight ) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isBeast \u2693\ufe0e Access to the beast race flag. Returns : result (boolean) isPlayable \u2693\ufe0e Access to the playable race flag. Returns : result (boolean) maleBody \u2693\ufe0e Read-only . Access to all the body parts that will be used for male actors of this race. Returns : result ( tes3raceBodyParts ) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e Read-only . The player-facing name for the object. Returns : result (string) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) skillBonuses \u2693\ufe0e Read-only . Array-style table access for 7 skill bonuses for the race. Each element in the array is a tes3raceSkillBonus . Returns : result (table) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) weight \u2693\ufe0e Read-only . Access to the the height pair for males/females of the race. Returns : result ( tes3raceHeightWeight ) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3race"},{"location":"types/tes3race/#tes3race","text":"A core object representing a character race. This type inherits the following: tes3baseObject","title":"tes3race"},{"location":"types/tes3race/#properties","text":"","title":"Properties"},{"location":"types/tes3race/#abilities","text":"Read-only . A list of abilities that NPCs of that race have access to. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, ability in pairs(race.abilities.iterator) do print(ability.name) end Returns : result ( tes3spellList )","title":"abilities"},{"location":"types/tes3race/#baseattributes","text":"Read-only . Array-style table access to base 8 attributes for the race. Each element in the array is a tes3raceBaseAttribute . Returns : result (table)","title":"baseAttributes"},{"location":"types/tes3race/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3race/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3race/#description","text":"Read-only . Loads from disk and returns the description of the race. Returns : result (string)","title":"description"},{"location":"types/tes3race/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3race/#femalebody","text":"Read-only . Access to all the body parts that will be used for female actors of this race. Returns : result ( tes3raceBodyParts )","title":"femaleBody"},{"location":"types/tes3race/#flags","text":"Raw bit-based flags. Returns : result (number)","title":"flags"},{"location":"types/tes3race/#height","text":"Read-only . Access to the the height pair for males/females of the race. Returns : result ( tes3raceHeightWeight )","title":"height"},{"location":"types/tes3race/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3race/#isbeast","text":"Access to the beast race flag. Returns : result (boolean)","title":"isBeast"},{"location":"types/tes3race/#isplayable","text":"Access to the playable race flag. Returns : result (boolean)","title":"isPlayable"},{"location":"types/tes3race/#malebody","text":"Read-only . Access to all the body parts that will be used for male actors of this race. Returns : result ( tes3raceBodyParts )","title":"maleBody"},{"location":"types/tes3race/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3race/#name","text":"Read-only . The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3race/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3race/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3race/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3race/#skillbonuses","text":"Read-only . Array-style table access for 7 skill bonuses for the race. Each element in the array is a tes3raceSkillBonus . Returns : result (table)","title":"skillBonuses"},{"location":"types/tes3race/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3race/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3race/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3race/#weight","text":"Read-only . Access to the the height pair for males/females of the race. Returns : result ( tes3raceHeightWeight )","title":"weight"},{"location":"types/tes3race/#methods","text":"","title":"Methods"},{"location":"types/tes3race/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3raceBaseAttribute/","text":"tes3raceBaseAttribute \u2693\ufe0e A substructure for a race, storing a base attribute value for male and female actors. Properties \u2693\ufe0e female \u2693\ufe0e The base attribute for female actors. Returns : result (number) male \u2693\ufe0e The base attribute for male actors. Returns : result (number)","title":"tes3raceBaseAttribute"},{"location":"types/tes3raceBaseAttribute/#tes3racebaseattribute","text":"A substructure for a race, storing a base attribute value for male and female actors.","title":"tes3raceBaseAttribute"},{"location":"types/tes3raceBaseAttribute/#properties","text":"","title":"Properties"},{"location":"types/tes3raceBaseAttribute/#female","text":"The base attribute for female actors. Returns : result (number)","title":"female"},{"location":"types/tes3raceBaseAttribute/#male","text":"The base attribute for male actors. Returns : result (number)","title":"male"},{"location":"types/tes3raceBodyParts/","text":"tes3raceBodyParts \u2693\ufe0e A substructure for a race, storing the used body parts for a given sex. Properties \u2693\ufe0e ankle \u2693\ufe0e The ankle that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) chest \u2693\ufe0e The chest that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) clavicle \u2693\ufe0e The clavicle that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) foot \u2693\ufe0e The foot that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) forearm \u2693\ufe0e The forearm that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) groin \u2693\ufe0e The groin that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) hair \u2693\ufe0e The base hair that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) hands \u2693\ufe0e The hands that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) head1 \u2693\ufe0e The head that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) head2 \u2693\ufe0e The head that an actor of this race and sex will use, when he/she is a vampire. Returns : result ( tes3bodyPart ) knee \u2693\ufe0e The knee that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) neck \u2693\ufe0e The neck that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) tail \u2693\ufe0e The tail that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) upperArm \u2693\ufe0e The upper arm that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) upperLeg \u2693\ufe0e The upper leg that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) wrist \u2693\ufe0e The wrist that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"tes3raceBodyParts"},{"location":"types/tes3raceBodyParts/#tes3racebodyparts","text":"A substructure for a race, storing the used body parts for a given sex.","title":"tes3raceBodyParts"},{"location":"types/tes3raceBodyParts/#properties","text":"","title":"Properties"},{"location":"types/tes3raceBodyParts/#ankle","text":"The ankle that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"ankle"},{"location":"types/tes3raceBodyParts/#chest","text":"The chest that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"chest"},{"location":"types/tes3raceBodyParts/#clavicle","text":"The clavicle that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"clavicle"},{"location":"types/tes3raceBodyParts/#foot","text":"The foot that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"foot"},{"location":"types/tes3raceBodyParts/#forearm","text":"The forearm that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"forearm"},{"location":"types/tes3raceBodyParts/#groin","text":"The groin that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"groin"},{"location":"types/tes3raceBodyParts/#hair","text":"The base hair that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"hair"},{"location":"types/tes3raceBodyParts/#hands","text":"The hands that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"hands"},{"location":"types/tes3raceBodyParts/#head1","text":"The head that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"head1"},{"location":"types/tes3raceBodyParts/#head2","text":"The head that an actor of this race and sex will use, when he/she is a vampire. Returns : result ( tes3bodyPart )","title":"head2"},{"location":"types/tes3raceBodyParts/#knee","text":"The knee that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"knee"},{"location":"types/tes3raceBodyParts/#neck","text":"The neck that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"neck"},{"location":"types/tes3raceBodyParts/#tail","text":"The tail that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"tail"},{"location":"types/tes3raceBodyParts/#upperarm","text":"The upper arm that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"upperArm"},{"location":"types/tes3raceBodyParts/#upperleg","text":"The upper leg that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"upperLeg"},{"location":"types/tes3raceBodyParts/#wrist","text":"The wrist that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"wrist"},{"location":"types/tes3raceHeightWeight/","text":"tes3raceHeightWeight \u2693\ufe0e A substructure for a race, storing a height or weight for male and female actors. Properties \u2693\ufe0e female \u2693\ufe0e The height or weight for female actors. Returns : result (number) male \u2693\ufe0e The height or weight for male actors. Returns : result (number)","title":"tes3raceHeightWeight"},{"location":"types/tes3raceHeightWeight/#tes3raceheightweight","text":"A substructure for a race, storing a height or weight for male and female actors.","title":"tes3raceHeightWeight"},{"location":"types/tes3raceHeightWeight/#properties","text":"","title":"Properties"},{"location":"types/tes3raceHeightWeight/#female","text":"The height or weight for female actors. Returns : result (number)","title":"female"},{"location":"types/tes3raceHeightWeight/#male","text":"The height or weight for male actors. Returns : result (number)","title":"male"},{"location":"types/tes3raceSkillBonus/","text":"tes3raceSkillBonus \u2693\ufe0e A substructure for a race, storing up to 7 skill bonuses. Properties \u2693\ufe0e bonus \u2693\ufe0e The value to modify the skill with. Returns : result (number) skill \u2693\ufe0e The skill id to modify. Returns : result (number)","title":"tes3raceSkillBonus"},{"location":"types/tes3raceSkillBonus/#tes3raceskillbonus","text":"A substructure for a race, storing up to 7 skill bonuses.","title":"tes3raceSkillBonus"},{"location":"types/tes3raceSkillBonus/#properties","text":"","title":"Properties"},{"location":"types/tes3raceSkillBonus/#bonus","text":"The value to modify the skill with. Returns : result (number)","title":"bonus"},{"location":"types/tes3raceSkillBonus/#skill","text":"The skill id to modify. Returns : result (number)","title":"skill"},{"location":"types/tes3rangeInt/","text":"tes3rangeInt \u2693\ufe0e A simple pair of integers, typically used to define a range. Properties \u2693\ufe0e max \u2693\ufe0e The maximum value in the range. Returns : result (number) min \u2693\ufe0e The minimum value in the range. Returns : result (number)","title":"tes3rangeInt"},{"location":"types/tes3rangeInt/#tes3rangeint","text":"A simple pair of integers, typically used to define a range.","title":"tes3rangeInt"},{"location":"types/tes3rangeInt/#properties","text":"","title":"Properties"},{"location":"types/tes3rangeInt/#max","text":"The maximum value in the range. Returns : result (number)","title":"max"},{"location":"types/tes3rangeInt/#min","text":"The minimum value in the range. Returns : result (number)","title":"min"},{"location":"types/tes3rechargingItem/","text":"tes3rechargingItem \u2693\ufe0e Data for a recharging item. Not necessarily an item owned by the player. Properties \u2693\ufe0e enchantment \u2693\ufe0e The enchantment of the recharging item. Returns : result ( tes3enchantment ) itemData \u2693\ufe0e The specific item data being recharged. Returns : result ( tes3itemData ) object \u2693\ufe0e The item being recharged. Returns : result ( tes3item )","title":"tes3rechargingItem"},{"location":"types/tes3rechargingItem/#tes3rechargingitem","text":"Data for a recharging item. Not necessarily an item owned by the player.","title":"tes3rechargingItem"},{"location":"types/tes3rechargingItem/#properties","text":"","title":"Properties"},{"location":"types/tes3rechargingItem/#enchantment","text":"The enchantment of the recharging item. Returns : result ( tes3enchantment )","title":"enchantment"},{"location":"types/tes3rechargingItem/#itemdata","text":"The specific item data being recharged. Returns : result ( tes3itemData )","title":"itemData"},{"location":"types/tes3rechargingItem/#object","text":"The item being recharged. Returns : result ( tes3item )","title":"object"},{"location":"types/tes3reference/","text":"tes3reference \u2693\ufe0e A reference is a sort of container structure for objects. It holds a base object, as well as various variables associated with that object that make it unique. For example, many doors may share the same base object. However, each door reference might have a different owner, different lock/trap statuses, etc. that make the object unique. This type inherits the following: tes3object , tes3baseObject Properties \u2693\ufe0e activationReference \u2693\ufe0e The current reference, if any, that this reference will activate. Returns : result ( tes3reference ) attachments \u2693\ufe0e Read-only . A table with friendly named access to all supported attachments. Returns : result (table) baseObject \u2693\ufe0e Read-only . This is similar to the object field, but is guaranteed to provide the base-most object. If object is an actor clone, the base actor will be given instead. Returns : result ( tes3physicalObject ) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) bodyPartManager \u2693\ufe0e Read-only . Access to the reference's body part manager, if available. Typically this is only available on NPC references. Returns : result ( tes3bodyPartManager , nil) cell \u2693\ufe0e Read-only . The cell that the reference is currently in. Returns : result ( tes3cell ) context \u2693\ufe0e Read-only . Access to the script context for this reference and its associated script. Returns : result ( tes3scriptContext ) data \u2693\ufe0e A generic lua table that data can be written to, and synced to/from the save. All information stored must be valid for serialization to json. For item references, this is the same table as on the tes3itemData structure. To store data that doesn't get serialized to/from the save, use tempData . Returns : result (table) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) destination \u2693\ufe0e Read-only . Returns the travel destination node for this reference, or nil . This can be used to determine where a given door links to. Returns : result ( tes3travelDestinationNode , nil) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) facing \u2693\ufe0e Convenient access to the z-component of the reference's orientation. Setting the facing sets the reference as modified. Returns : result (number) hasNoCollision \u2693\ufe0e Sets the no-collision flag on this reference, and recalculates collision groups. Use the setNoCollisionFlag() function to manage collision group recalculation instead. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isDead \u2693\ufe0e Read-only . Returns true if the object is dead, false if they are alive, or nil if that couldn't be determined. Returns : result (boolean, nil) isEmpty \u2693\ufe0e Friendly access onto the reference's empty inventory flag. Returns : result (boolean) isLeveledSpawn \u2693\ufe0e Read-only . If true, this reference was created as a result of a leveled spawn. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) isRespawn \u2693\ufe0e Read-only . If true, the references respawn flag is set. Returns : result (boolean) itemData \u2693\ufe0e Gets or sets the attached itemData for this reference. If set to nil , the item data will be unhooked but not deleted. Returns : result ( tes3itemData ) leveledBaseReference \u2693\ufe0e Read-only . If this reference is a leveled spawn, this is the leveled creature spawn reference. If this reference wasn't the result of a leveled spawn, the value is nil . Returns : result ( tes3reference , nil) light \u2693\ufe0e Read-only . Direct access to the scene graph light, if a dynamic light is set. Returns : result ( niPointLight ) lockNode \u2693\ufe0e Read-only . Quick access to the reference's lock node, if any. Returns : result ( tes3lockNode ) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) mobile \u2693\ufe0e Read-only . Access to the attached mobile object, if applicable. Returns : result ( tes3mobileCreature , tes3mobileNPC , tes3mobilePlayer , tes3mobileProjectile , tes3mobileSpell, nil) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) nextNode \u2693\ufe0e Read-only . The next reference in the parent reference list. Returns : result ( tes3reference ) nodeData \u2693\ufe0e Read-only . Redundant access to this object, for iterating over a tes3referenceList. Returns : result ( tes3reference ) object \u2693\ufe0e Read-only . The object that the reference is for, such as a weapon, armor, or actor. Returns : result ( tes3physicalObject ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) orientation \u2693\ufe0e Access to the reference's orientation. Setting the orientation sets the reference as modified. Returns : result ( tes3vector3 ) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) position \u2693\ufe0e Access to the reference's position. Setting the position sets the reference as modified. Returns : result ( tes3vector3 ) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) previousNode \u2693\ufe0e Read-only . The previous reference in the parent reference list. Returns : result ( tes3reference ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e Read-only . The scene graph node that the reference uses for rendering. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) sourceFormId \u2693\ufe0e No description yet available. Returns : result (number) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) sourceModId \u2693\ufe0e No description yet available. Returns : result (number) stackSize \u2693\ufe0e Access to the size of a stack, if the reference represents one or more items. Returns : result (number) supportsLuaData \u2693\ufe0e If true, this reference can store temporary or persistent lua data. Returns : result (boolean) targetFormId \u2693\ufe0e No description yet available. Returns : result (number) targetModId \u2693\ufe0e No description yet available. Returns : result (number) tempData \u2693\ufe0e As with the data field, a generic lua table that data can be written to. No information in this table will persist into saves. For item references, this is the same table as on the tes3itemData structure. Returns : result (table) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) activate \u2693\ufe0e Causes this reference to activate another. This will lead them to go through doors, pick up items, etc. tes3reference : activate ( reference ) Parameters : reference ( tes3reference ): The other reference to activate. clearActionFlag \u2693\ufe0e Unsets a bit in the reference's action data attachment tes3reference : clearActionFlag ( flagIndex ) Parameters : flagIndex (number): The action flag to clear. Maps to values in tes3.actionFlag namespace. clone \u2693\ufe0e Clones a reference for a base actor into a reference to an instance of that actor. For example, this will force a container to resolve its leveled items and have its own unique inventory. local result = tes3reference : clone () Returns : result (boolean) delete \u2693\ufe0e Disables the reference, removes all its attachments, resets its scale, and sets the reference to be deleted. tes3reference : delete () deleteDynamicLightAttachment \u2693\ufe0e Deletes the dynamic light attachment, if it exists. This will automatically detach the dynamic light from affected nodes. tes3reference : deleteDynamicLightAttachment ( removeLightFromParent ) Parameters : removeLightFromParent (boolean): Default : false . If true , the dynamic light is removed from its parent node as well. detachDynamicLightFromAffectedNodes \u2693\ufe0e Removes the dynamic light from any affected scene graph nodes, but will not delete the associated attachment. tes3reference : detachDynamicLightFromAffectedNodes () disable \u2693\ufe0e Hides the reference, detaches all dynamic lights and sounds, and stops any mobile simulation. Sets the reference as modified implicitly. local success = tes3reference : disable () Returns : success (boolean): If true , the reference was successfully disabled. enable \u2693\ufe0e Shows the reference, reattaches all dynamic lights and sounds, and restarts any mobile simulation if the player is close enough. Sets the reference as modified implicitly. local success = tes3reference : enable () Returns : success (boolean): If true , the reference was successfully enabled. getAngleTo \u2693\ufe0e Calculates the angle from this reference's current facing to the target reference. local angle = tes3reference : getAngleTo ( reference ) Parameters : reference ( tes3reference ): The reference to calculate the angle to. Returns : angle (number): The angle to the given reference. getAttachedDynamicLight \u2693\ufe0e Fetches the dynamic light attachment. local result = tes3reference : getAttachedDynamicLight () Returns : result ( tes3lightNode ) getOrCreateAttachedDynamicLight \u2693\ufe0e Fetches the dynamic light attachment. If there isn't one, a new one will be created with the given light and value. If no light is supplied as an argument, a point light of radius 512 will be automatically created. If the light is not attached to any part of the scene graph yet, the point light will be placed as a child of the \"attachLight\" subnode of the model, or a child of the model if \"attachLight\" is not found. local result = tes3reference : getOrCreateAttachedDynamicLight ( light , phase ) Parameters : light ( niPointLight ): Optional . phase (number): Optional . Returns : result ( tes3lightNode ) onCloseInventory \u2693\ufe0e A function that tells the game that an inventory has been closed, if you are simulating inventory operations. It has the capability of un-cloning an inventory if it has not been modified. Typically not used outside of specific purposes. local result = tes3reference : onCloseInventory () Returns : result (boolean) setActionFlag \u2693\ufe0e Sets a bit in the reference's action data attachment tes3reference : setActionFlag ( flagIndex ) Parameters : flagIndex (number): The action flag to clear. setDynamicLighting \u2693\ufe0e Sets the dynamic lighting state of the reference using the global data handler. tes3reference : setDynamicLighting () setNoCollisionFlag \u2693\ufe0e Sets if this reference has active collision. This is preferable to changing the hasNoCollision property, if you are manipulating multiple objects at once and do not want to constantly recalculate collision groups. tes3reference : setNoCollisionFlag ( hasNoCollision , updateCollisions ) Parameters : hasNoCollision (boolean): If true , the reference no longer has collision. updateCollisions (boolean): If true , collision groups for the active cells are recalculated. testActionFlag \u2693\ufe0e Returns the flag's value in the reference's action data attachment. local result = tes3reference : testActionFlag ( flagIndex ) Parameters : flagIndex (number): The action flag to test. Maps to values in tes3.actionFlag namespace. Returns : result (boolean) updateEquipment \u2693\ufe0e Causes the reference, if of an actor, to update the reference's bodyparts with the currently equipped ones. tes3reference : updateEquipment () updateLighting \u2693\ufe0e Updates the lighting of the reference using the global data handler. tes3reference : updateLighting () updateSceneGraph \u2693\ufe0e Updates the reference's local rotation matrix, propagates position changes to the scene graph, and sets the reference's modified flag. You need to call this if the orientation or position was manually modified. tes3reference : updateSceneGraph ()","title":"tes3reference"},{"location":"types/tes3reference/#tes3reference","text":"A reference is a sort of container structure for objects. It holds a base object, as well as various variables associated with that object that make it unique. For example, many doors may share the same base object. However, each door reference might have a different owner, different lock/trap statuses, etc. that make the object unique. This type inherits the following: tes3object , tes3baseObject","title":"tes3reference"},{"location":"types/tes3reference/#properties","text":"","title":"Properties"},{"location":"types/tes3reference/#activationreference","text":"The current reference, if any, that this reference will activate. Returns : result ( tes3reference )","title":"activationReference"},{"location":"types/tes3reference/#attachments","text":"Read-only . A table with friendly named access to all supported attachments. Returns : result (table)","title":"attachments"},{"location":"types/tes3reference/#baseobject","text":"Read-only . This is similar to the object field, but is guaranteed to provide the base-most object. If object is an actor clone, the base actor will be given instead. Returns : result ( tes3physicalObject )","title":"baseObject"},{"location":"types/tes3reference/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3reference/#bodypartmanager","text":"Read-only . Access to the reference's body part manager, if available. Typically this is only available on NPC references. Returns : result ( tes3bodyPartManager , nil)","title":"bodyPartManager"},{"location":"types/tes3reference/#cell","text":"Read-only . The cell that the reference is currently in. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3reference/#context","text":"Read-only . Access to the script context for this reference and its associated script. Returns : result ( tes3scriptContext )","title":"context"},{"location":"types/tes3reference/#data","text":"A generic lua table that data can be written to, and synced to/from the save. All information stored must be valid for serialization to json. For item references, this is the same table as on the tes3itemData structure. To store data that doesn't get serialized to/from the save, use tempData . Returns : result (table)","title":"data"},{"location":"types/tes3reference/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3reference/#destination","text":"Read-only . Returns the travel destination node for this reference, or nil . This can be used to determine where a given door links to. Returns : result ( tes3travelDestinationNode , nil)","title":"destination"},{"location":"types/tes3reference/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3reference/#facing","text":"Convenient access to the z-component of the reference's orientation. Setting the facing sets the reference as modified. Returns : result (number)","title":"facing"},{"location":"types/tes3reference/#hasnocollision","text":"Sets the no-collision flag on this reference, and recalculates collision groups. Use the setNoCollisionFlag() function to manage collision group recalculation instead. Returns : result (boolean)","title":"hasNoCollision"},{"location":"types/tes3reference/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3reference/#isdead","text":"Read-only . Returns true if the object is dead, false if they are alive, or nil if that couldn't be determined. Returns : result (boolean, nil)","title":"isDead"},{"location":"types/tes3reference/#isempty","text":"Friendly access onto the reference's empty inventory flag. Returns : result (boolean)","title":"isEmpty"},{"location":"types/tes3reference/#isleveledspawn","text":"Read-only . If true, this reference was created as a result of a leveled spawn. Returns : result (boolean)","title":"isLeveledSpawn"},{"location":"types/tes3reference/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3reference/#isrespawn","text":"Read-only . If true, the references respawn flag is set. Returns : result (boolean)","title":"isRespawn"},{"location":"types/tes3reference/#itemdata","text":"Gets or sets the attached itemData for this reference. If set to nil , the item data will be unhooked but not deleted. Returns : result ( tes3itemData )","title":"itemData"},{"location":"types/tes3reference/#leveledbasereference","text":"Read-only . If this reference is a leveled spawn, this is the leveled creature spawn reference. If this reference wasn't the result of a leveled spawn, the value is nil . Returns : result ( tes3reference , nil)","title":"leveledBaseReference"},{"location":"types/tes3reference/#light","text":"Read-only . Direct access to the scene graph light, if a dynamic light is set. Returns : result ( niPointLight )","title":"light"},{"location":"types/tes3reference/#locknode","text":"Read-only . Quick access to the reference's lock node, if any. Returns : result ( tes3lockNode )","title":"lockNode"},{"location":"types/tes3reference/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3reference/#mobile","text":"Read-only . Access to the attached mobile object, if applicable. Returns : result ( tes3mobileCreature , tes3mobileNPC , tes3mobilePlayer , tes3mobileProjectile , tes3mobileSpell, nil)","title":"mobile"},{"location":"types/tes3reference/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3reference/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3reference/#nextnode","text":"Read-only . The next reference in the parent reference list. Returns : result ( tes3reference )","title":"nextNode"},{"location":"types/tes3reference/#nodedata","text":"Read-only . Redundant access to this object, for iterating over a tes3referenceList. Returns : result ( tes3reference )","title":"nodeData"},{"location":"types/tes3reference/#object","text":"Read-only . The object that the reference is for, such as a weapon, armor, or actor. Returns : result ( tes3physicalObject )","title":"object"},{"location":"types/tes3reference/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3reference/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3reference/#orientation","text":"Access to the reference's orientation. Setting the orientation sets the reference as modified. Returns : result ( tes3vector3 )","title":"orientation"},{"location":"types/tes3reference/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3reference/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3reference/#position","text":"Access to the reference's position. Setting the position sets the reference as modified. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3reference/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3reference/#previousnode","text":"Read-only . The previous reference in the parent reference list. Returns : result ( tes3reference )","title":"previousNode"},{"location":"types/tes3reference/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3reference/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3reference/#scenenode","text":"Read-only . The scene graph node that the reference uses for rendering. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3reference/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3reference/#sourceformid","text":"No description yet available. Returns : result (number)","title":"sourceFormId"},{"location":"types/tes3reference/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3reference/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3reference/#sourcemodid","text":"No description yet available. Returns : result (number)","title":"sourceModId"},{"location":"types/tes3reference/#stacksize","text":"Access to the size of a stack, if the reference represents one or more items. Returns : result (number)","title":"stackSize"},{"location":"types/tes3reference/#supportsluadata","text":"If true, this reference can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3reference/#targetformid","text":"No description yet available. Returns : result (number)","title":"targetFormId"},{"location":"types/tes3reference/#targetmodid","text":"No description yet available. Returns : result (number)","title":"targetModId"},{"location":"types/tes3reference/#tempdata","text":"As with the data field, a generic lua table that data can be written to. No information in this table will persist into saves. For item references, this is the same table as on the tes3itemData structure. Returns : result (table)","title":"tempData"},{"location":"types/tes3reference/#methods","text":"","title":"Methods"},{"location":"types/tes3reference/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3reference/#activate","text":"Causes this reference to activate another. This will lead them to go through doors, pick up items, etc. tes3reference : activate ( reference ) Parameters : reference ( tes3reference ): The other reference to activate.","title":"activate"},{"location":"types/tes3reference/#clearactionflag","text":"Unsets a bit in the reference's action data attachment tes3reference : clearActionFlag ( flagIndex ) Parameters : flagIndex (number): The action flag to clear. Maps to values in tes3.actionFlag namespace.","title":"clearActionFlag"},{"location":"types/tes3reference/#clone","text":"Clones a reference for a base actor into a reference to an instance of that actor. For example, this will force a container to resolve its leveled items and have its own unique inventory. local result = tes3reference : clone () Returns : result (boolean)","title":"clone"},{"location":"types/tes3reference/#delete","text":"Disables the reference, removes all its attachments, resets its scale, and sets the reference to be deleted. tes3reference : delete ()","title":"delete"},{"location":"types/tes3reference/#deletedynamiclightattachment","text":"Deletes the dynamic light attachment, if it exists. This will automatically detach the dynamic light from affected nodes. tes3reference : deleteDynamicLightAttachment ( removeLightFromParent ) Parameters : removeLightFromParent (boolean): Default : false . If true , the dynamic light is removed from its parent node as well.","title":"deleteDynamicLightAttachment"},{"location":"types/tes3reference/#detachdynamiclightfromaffectednodes","text":"Removes the dynamic light from any affected scene graph nodes, but will not delete the associated attachment. tes3reference : detachDynamicLightFromAffectedNodes ()","title":"detachDynamicLightFromAffectedNodes"},{"location":"types/tes3reference/#disable","text":"Hides the reference, detaches all dynamic lights and sounds, and stops any mobile simulation. Sets the reference as modified implicitly. local success = tes3reference : disable () Returns : success (boolean): If true , the reference was successfully disabled.","title":"disable"},{"location":"types/tes3reference/#enable","text":"Shows the reference, reattaches all dynamic lights and sounds, and restarts any mobile simulation if the player is close enough. Sets the reference as modified implicitly. local success = tes3reference : enable () Returns : success (boolean): If true , the reference was successfully enabled.","title":"enable"},{"location":"types/tes3reference/#getangleto","text":"Calculates the angle from this reference's current facing to the target reference. local angle = tes3reference : getAngleTo ( reference ) Parameters : reference ( tes3reference ): The reference to calculate the angle to. Returns : angle (number): The angle to the given reference.","title":"getAngleTo"},{"location":"types/tes3reference/#getattacheddynamiclight","text":"Fetches the dynamic light attachment. local result = tes3reference : getAttachedDynamicLight () Returns : result ( tes3lightNode )","title":"getAttachedDynamicLight"},{"location":"types/tes3reference/#getorcreateattacheddynamiclight","text":"Fetches the dynamic light attachment. If there isn't one, a new one will be created with the given light and value. If no light is supplied as an argument, a point light of radius 512 will be automatically created. If the light is not attached to any part of the scene graph yet, the point light will be placed as a child of the \"attachLight\" subnode of the model, or a child of the model if \"attachLight\" is not found. local result = tes3reference : getOrCreateAttachedDynamicLight ( light , phase ) Parameters : light ( niPointLight ): Optional . phase (number): Optional . Returns : result ( tes3lightNode )","title":"getOrCreateAttachedDynamicLight"},{"location":"types/tes3reference/#oncloseinventory","text":"A function that tells the game that an inventory has been closed, if you are simulating inventory operations. It has the capability of un-cloning an inventory if it has not been modified. Typically not used outside of specific purposes. local result = tes3reference : onCloseInventory () Returns : result (boolean)","title":"onCloseInventory"},{"location":"types/tes3reference/#setactionflag","text":"Sets a bit in the reference's action data attachment tes3reference : setActionFlag ( flagIndex ) Parameters : flagIndex (number): The action flag to clear.","title":"setActionFlag"},{"location":"types/tes3reference/#setdynamiclighting","text":"Sets the dynamic lighting state of the reference using the global data handler. tes3reference : setDynamicLighting ()","title":"setDynamicLighting"},{"location":"types/tes3reference/#setnocollisionflag","text":"Sets if this reference has active collision. This is preferable to changing the hasNoCollision property, if you are manipulating multiple objects at once and do not want to constantly recalculate collision groups. tes3reference : setNoCollisionFlag ( hasNoCollision , updateCollisions ) Parameters : hasNoCollision (boolean): If true , the reference no longer has collision. updateCollisions (boolean): If true , collision groups for the active cells are recalculated.","title":"setNoCollisionFlag"},{"location":"types/tes3reference/#testactionflag","text":"Returns the flag's value in the reference's action data attachment. local result = tes3reference : testActionFlag ( flagIndex ) Parameters : flagIndex (number): The action flag to test. Maps to values in tes3.actionFlag namespace. Returns : result (boolean)","title":"testActionFlag"},{"location":"types/tes3reference/#updateequipment","text":"Causes the reference, if of an actor, to update the reference's bodyparts with the currently equipped ones. tes3reference : updateEquipment ()","title":"updateEquipment"},{"location":"types/tes3reference/#updatelighting","text":"Updates the lighting of the reference using the global data handler. tes3reference : updateLighting ()","title":"updateLighting"},{"location":"types/tes3reference/#updatescenegraph","text":"Updates the reference's local rotation matrix, propagates position changes to the scene graph, and sets the reference's modified flag. You need to call this if the orientation or position was manually modified. tes3reference : updateSceneGraph ()","title":"updateSceneGraph"},{"location":"types/tes3referenceList/","text":"tes3referenceList \u2693\ufe0e A collection for references, holding a cell and a linked list of references contained in the cell. Properties \u2693\ufe0e cell \u2693\ufe0e Read-only . The cell for the collection. Returns : result ( tes3cell ) head \u2693\ufe0e Read-only . The first reference in the collection. Returns : result ( tes3reference ) size \u2693\ufe0e Read-only . The number of references in the collection. Returns : result ( tes3reference ) tail \u2693\ufe0e Read-only . The last reference in the collection. Returns : result ( tes3reference )","title":"tes3referenceList"},{"location":"types/tes3referenceList/#tes3referencelist","text":"A collection for references, holding a cell and a linked list of references contained in the cell.","title":"tes3referenceList"},{"location":"types/tes3referenceList/#properties","text":"","title":"Properties"},{"location":"types/tes3referenceList/#cell","text":"Read-only . The cell for the collection. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3referenceList/#head","text":"Read-only . The first reference in the collection. Returns : result ( tes3reference )","title":"head"},{"location":"types/tes3referenceList/#size","text":"Read-only . The number of references in the collection. Returns : result ( tes3reference )","title":"size"},{"location":"types/tes3referenceList/#tail","text":"Read-only . The last reference in the collection. Returns : result ( tes3reference )","title":"tail"},{"location":"types/tes3region/","text":"tes3region \u2693\ufe0e A structure that contains region information. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The region's name. It must be a string less than 32 characters long. Returns : result (string) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sleepCreature \u2693\ufe0e Read-only . The region's leveled creature that can be spawned while the player is sleeping. Returns : result ( tes3leveledCreature ) sounds \u2693\ufe0e Read-only . Array-style table for the different region sounds. Each object in the table is a tes3regionSound . Returns : result (table) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) weather \u2693\ufe0e The region's current weather. Returns : result ( tes3weather ) weatherChanceAsh \u2693\ufe0e The chance the Ash weather-type will be used. Must be an integer between 0 - 100. Returns : result (number) weatherChanceBlight \u2693\ufe0e The chance the Blight weather-type will be used. Must be an integer between 0 - 100. Returns : result (number) weatherChanceBlizzard \u2693\ufe0e The chance the Blizzard weather-type will be used. Must be an integer between 0 - 100. Returns : result (number) weatherChanceClear \u2693\ufe0e The chance the Clear weather-type will be used. Must be an integer between 0 - 100. Returns : result (number) weatherChanceCloudy \u2693\ufe0e The chance the Cloudy weather-type will be used. Must be an integer between 0 - 100. Returns : result (number) weatherChanceFoggy \u2693\ufe0e The chance the Foggy weather-type will be used. Must be an integer between 0 - 100. Returns : result (number) weatherChanceOvercast \u2693\ufe0e The chance the Overcast weather-type will be used. Must be an integer between 0 - 100. Returns : result (number) weatherChanceRain \u2693\ufe0e The chance the Rain weather-type will be used. Must be an integer between 0 - 100. Returns : result (number) weatherChances \u2693\ufe0e Read-only . Array-style table for the different weather chances. Each object in the table is a number, between 1 - 100. The index of the table is the weather type. Returns : result (table) weatherChanceSnow \u2693\ufe0e The chance the Snow weather-type will be used. Must be an integer between 0 - 100. Returns : result (number) weatherChanceThunder \u2693\ufe0e The chance the Thunder weather-type will be used. Must be an integer between 0 - 100. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) changeWeather \u2693\ufe0e Changes the current weather for the region to the provided weather-type parameter. tes3region : changeWeather ( weatherId ) Parameters : weatherId (number): Maps to values in tes3.weather namespace. randomizeWeather \u2693\ufe0e Changes the weather to a random weather type. tes3region : randomizeWeather () Parameters :","title":"tes3region"},{"location":"types/tes3region/#tes3region","text":"A structure that contains region information. This type inherits the following: tes3baseObject","title":"tes3region"},{"location":"types/tes3region/#properties","text":"","title":"Properties"},{"location":"types/tes3region/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3region/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3region/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3region/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3region/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3region/#name","text":"The region's name. It must be a string less than 32 characters long. Returns : result (string)","title":"name"},{"location":"types/tes3region/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3region/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3region/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3region/#sleepcreature","text":"Read-only . The region's leveled creature that can be spawned while the player is sleeping. Returns : result ( tes3leveledCreature )","title":"sleepCreature"},{"location":"types/tes3region/#sounds","text":"Read-only . Array-style table for the different region sounds. Each object in the table is a tes3regionSound . Returns : result (table)","title":"sounds"},{"location":"types/tes3region/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3region/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3region/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3region/#weather","text":"The region's current weather. Returns : result ( tes3weather )","title":"weather"},{"location":"types/tes3region/#weatherchanceash","text":"The chance the Ash weather-type will be used. Must be an integer between 0 - 100. Returns : result (number)","title":"weatherChanceAsh"},{"location":"types/tes3region/#weatherchanceblight","text":"The chance the Blight weather-type will be used. Must be an integer between 0 - 100. Returns : result (number)","title":"weatherChanceBlight"},{"location":"types/tes3region/#weatherchanceblizzard","text":"The chance the Blizzard weather-type will be used. Must be an integer between 0 - 100. Returns : result (number)","title":"weatherChanceBlizzard"},{"location":"types/tes3region/#weatherchanceclear","text":"The chance the Clear weather-type will be used. Must be an integer between 0 - 100. Returns : result (number)","title":"weatherChanceClear"},{"location":"types/tes3region/#weatherchancecloudy","text":"The chance the Cloudy weather-type will be used. Must be an integer between 0 - 100. Returns : result (number)","title":"weatherChanceCloudy"},{"location":"types/tes3region/#weatherchancefoggy","text":"The chance the Foggy weather-type will be used. Must be an integer between 0 - 100. Returns : result (number)","title":"weatherChanceFoggy"},{"location":"types/tes3region/#weatherchanceovercast","text":"The chance the Overcast weather-type will be used. Must be an integer between 0 - 100. Returns : result (number)","title":"weatherChanceOvercast"},{"location":"types/tes3region/#weatherchancerain","text":"The chance the Rain weather-type will be used. Must be an integer between 0 - 100. Returns : result (number)","title":"weatherChanceRain"},{"location":"types/tes3region/#weatherchances","text":"Read-only . Array-style table for the different weather chances. Each object in the table is a number, between 1 - 100. The index of the table is the weather type. Returns : result (table)","title":"weatherChances"},{"location":"types/tes3region/#weatherchancesnow","text":"The chance the Snow weather-type will be used. Must be an integer between 0 - 100. Returns : result (number)","title":"weatherChanceSnow"},{"location":"types/tes3region/#weatherchancethunder","text":"The chance the Thunder weather-type will be used. Must be an integer between 0 - 100. Returns : result (number)","title":"weatherChanceThunder"},{"location":"types/tes3region/#methods","text":"","title":"Methods"},{"location":"types/tes3region/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3region/#changeweather","text":"Changes the current weather for the region to the provided weather-type parameter. tes3region : changeWeather ( weatherId ) Parameters : weatherId (number): Maps to values in tes3.weather namespace.","title":"changeWeather"},{"location":"types/tes3region/#randomizeweather","text":"Changes the weather to a random weather type. tes3region : randomizeWeather () Parameters :","title":"randomizeWeather"},{"location":"types/tes3regionSound/","text":"tes3regionSound \u2693\ufe0e A structure that contains region sound information. Properties \u2693\ufe0e chance \u2693\ufe0e The chance the region sound will be used. Must be an integer between 0 - 100. Returns : result (number) sound \u2693\ufe0e The access to object's associated sound. Returns : result ( tes3sound )","title":"tes3regionSound"},{"location":"types/tes3regionSound/#tes3regionsound","text":"A structure that contains region sound information.","title":"tes3regionSound"},{"location":"types/tes3regionSound/#properties","text":"","title":"Properties"},{"location":"types/tes3regionSound/#chance","text":"The chance the region sound will be used. Must be an integer between 0 - 100. Returns : result (number)","title":"chance"},{"location":"types/tes3regionSound/#sound","text":"The access to object's associated sound. Returns : result ( tes3sound )","title":"sound"},{"location":"types/tes3repairTool/","text":"tes3repairTool \u2693\ufe0e A core repair tool object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) maxCondition \u2693\ufe0e The maximum condition/health of the object. Returns : result (number) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) quality \u2693\ufe0e The quality of the object, with how much of a bonus it has. Returns : result (number) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e Read-only . The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3repairTool"},{"location":"types/tes3repairTool/#tes3repairtool","text":"A core repair tool object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3repairTool"},{"location":"types/tes3repairTool/#properties","text":"","title":"Properties"},{"location":"types/tes3repairTool/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3repairTool/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3repairTool/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3repairTool/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3repairTool/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3repairTool/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3repairTool/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3repairTool/#maxcondition","text":"The maximum condition/health of the object. Returns : result (number)","title":"maxCondition"},{"location":"types/tes3repairTool/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3repairTool/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3repairTool/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3repairTool/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3repairTool/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3repairTool/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3repairTool/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3repairTool/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3repairTool/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3repairTool/#quality","text":"The quality of the object, with how much of a bonus it has. Returns : result (number)","title":"quality"},{"location":"types/tes3repairTool/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3repairTool/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3repairTool/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3repairTool/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3repairTool/#script","text":"Read-only . The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3repairTool/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3repairTool/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3repairTool/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3repairTool/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3repairTool/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3repairTool/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3repairTool/#methods","text":"","title":"Methods"},{"location":"types/tes3repairTool/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3script/","text":"tes3script \u2693\ufe0e A script object. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) context \u2693\ufe0e Read-only . A special context used for getting and setting script's variables. Returns : result ( tes3scriptContext ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) floatVariableCount \u2693\ufe0e Read-only . The number of variables of float type in the script. Returns : result (number) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) longVariableCount \u2693\ufe0e Read-only . The number of variables of long type in the script. Returns : result (number) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) shortVariableCount \u2693\ufe0e Read-only . The number of variables of short type in the script. Returns : result (number) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) getVariableData \u2693\ufe0e This method fetches all of the script's variables as a table. local results = tes3script : getVariableData () Returns : results (table): The table with all of script's variable names as keys. Each entry has the following fields: type - s , f or l , which stand for short , float , and long index - the order of occurrence of the variable in the script, starting from 0 value - this can have nil value","title":"tes3script"},{"location":"types/tes3script/#tes3script","text":"A script object. This type inherits the following: tes3baseObject","title":"tes3script"},{"location":"types/tes3script/#properties","text":"","title":"Properties"},{"location":"types/tes3script/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3script/#context","text":"Read-only . A special context used for getting and setting script's variables. Returns : result ( tes3scriptContext )","title":"context"},{"location":"types/tes3script/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3script/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3script/#floatvariablecount","text":"Read-only . The number of variables of float type in the script. Returns : result (number)","title":"floatVariableCount"},{"location":"types/tes3script/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3script/#longvariablecount","text":"Read-only . The number of variables of long type in the script. Returns : result (number)","title":"longVariableCount"},{"location":"types/tes3script/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3script/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3script/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3script/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3script/#shortvariablecount","text":"Read-only . The number of variables of short type in the script. Returns : result (number)","title":"shortVariableCount"},{"location":"types/tes3script/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3script/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3script/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3script/#methods","text":"","title":"Methods"},{"location":"types/tes3script/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3script/#getvariabledata","text":"This method fetches all of the script's variables as a table. local results = tes3script : getVariableData () Returns : results (table): The table with all of script's variable names as keys. Each entry has the following fields: type - s , f or l , which stand for short , float , and long index - the order of occurrence of the variable in the script, starting from 0 value - this can have nil value","title":"getVariableData"},{"location":"types/tes3scriptContext/","text":"tes3scriptContext \u2693\ufe0e A script context object, which allows variables to be get/set using the variable name. Methods \u2693\ufe0e getVariableData \u2693\ufe0e This method fetches all of the script's variables as a table. local results = tes3scriptContext : getVariableData () Returns : results (table): The table with all of script's variable names as keys. Each entry has following fields: 1.) type - `s`, `f` or `l`, which stand for `short`, `float`, and `long` 2.) index - the order of occurance of the variable in the script, starting from `0` 3.) value - this can have `nil` value","title":"tes3scriptContext"},{"location":"types/tes3scriptContext/#tes3scriptcontext","text":"A script context object, which allows variables to be get/set using the variable name.","title":"tes3scriptContext"},{"location":"types/tes3scriptContext/#methods","text":"","title":"Methods"},{"location":"types/tes3scriptContext/#getvariabledata","text":"This method fetches all of the script's variables as a table. local results = tes3scriptContext : getVariableData () Returns : results (table): The table with all of script's variable names as keys. Each entry has following fields: 1.) type - `s`, `f` or `l`, which stand for `short`, `float`, and `long` 2.) index - the order of occurance of the variable in the script, starting from `0` 3.) value - this can have `nil` value","title":"getVariableData"},{"location":"types/tes3skill/","text":"tes3skill \u2693\ufe0e A skill object. This type inherits the following: tes3baseObject Properties \u2693\ufe0e actions \u2693\ufe0e Read-only . A table with 4 values. The amount of experience an action (use of skill) awards. Returns : result (table) attribute \u2693\ufe0e Read-only . Skill's governing attribute. Maps to tes3.attribute constants. Returns : result (number) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) iconPath \u2693\ufe0e Read-only . The path to the icon for the skill. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e Read-only . The player-facing name of the skill. Returns : result (string) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) specialization \u2693\ufe0e The specialization in which the skill belongs. Maps to tes3.specialization constants. Returns : result (number) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3skill"},{"location":"types/tes3skill/#tes3skill","text":"A skill object. This type inherits the following: tes3baseObject","title":"tes3skill"},{"location":"types/tes3skill/#properties","text":"","title":"Properties"},{"location":"types/tes3skill/#actions","text":"Read-only . A table with 4 values. The amount of experience an action (use of skill) awards. Returns : result (table)","title":"actions"},{"location":"types/tes3skill/#attribute","text":"Read-only . Skill's governing attribute. Maps to tes3.attribute constants. Returns : result (number)","title":"attribute"},{"location":"types/tes3skill/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3skill/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3skill/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3skill/#iconpath","text":"Read-only . The path to the icon for the skill. Returns : result (string)","title":"iconPath"},{"location":"types/tes3skill/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3skill/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3skill/#name","text":"Read-only . The player-facing name of the skill. Returns : result (string)","title":"name"},{"location":"types/tes3skill/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3skill/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3skill/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3skill/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3skill/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3skill/#specialization","text":"The specialization in which the skill belongs. Maps to tes3.specialization constants. Returns : result (number)","title":"specialization"},{"location":"types/tes3skill/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3skill/#methods","text":"","title":"Methods"},{"location":"types/tes3skill/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3soulGemData/","text":"tes3soulGemData \u2693\ufe0e A structure that holds (sometimes redundant) information on a soul gem. Properties \u2693\ufe0e capacity \u2693\ufe0e Read-only . The capacity of the soul gem. Returns : result (number) id \u2693\ufe0e Read-only . The unique object ID. Returns : result (string) item \u2693\ufe0e Read-only . A reference back to the misc item that the soul gem represents. Returns : result ( tes3misc ) mesh \u2693\ufe0e Read-only . The path to the object's mesh. Returns : result (string) name \u2693\ufe0e Read-only . The player-facing name for the object. Returns : result (string) texture \u2693\ufe0e Read-only . The path to the object's texture. Returns : result (string) value \u2693\ufe0e Read-only . The value of the object. Returns : result (number) weight \u2693\ufe0e Read-only . The weight of the object. Returns : result (number)","title":"tes3soulGemData"},{"location":"types/tes3soulGemData/#tes3soulgemdata","text":"A structure that holds (sometimes redundant) information on a soul gem.","title":"tes3soulGemData"},{"location":"types/tes3soulGemData/#properties","text":"","title":"Properties"},{"location":"types/tes3soulGemData/#capacity","text":"Read-only . The capacity of the soul gem. Returns : result (number)","title":"capacity"},{"location":"types/tes3soulGemData/#id","text":"Read-only . The unique object ID. Returns : result (string)","title":"id"},{"location":"types/tes3soulGemData/#item","text":"Read-only . A reference back to the misc item that the soul gem represents. Returns : result ( tes3misc )","title":"item"},{"location":"types/tes3soulGemData/#mesh","text":"Read-only . The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3soulGemData/#name","text":"Read-only . The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3soulGemData/#texture","text":"Read-only . The path to the object's texture. Returns : result (string)","title":"texture"},{"location":"types/tes3soulGemData/#value","text":"Read-only . The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3soulGemData/#weight","text":"Read-only . The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3sound/","text":"tes3sound \u2693\ufe0e A sound object created in the TES3 CS. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) filename \u2693\ufe0e Read-only . Path to the sound file. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) maxDistance \u2693\ufe0e The maximum distance the sound will be played at. Defaults to 0 . If both this and minDistance are 0 , the values are ignored. Returns : result (number) minDistance \u2693\ufe0e The minimum distance the sound will be played at. Defaults to 0 . Returns : result (number) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) volume \u2693\ufe0e Direct access to sound's volume. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local result = tes3sound : __tojson () Returns : result (string) isLooping \u2693\ufe0e Returns true if the sound is actively looping. local result = tes3sound : isLooping () Returns : result (boolean) isPlaying \u2693\ufe0e Returns true if the sound is actively playing. local result = tes3sound : isPlaying () Returns : result (boolean) play \u2693\ufe0e This method plays the sound. tes3sound : play ( playbackFlags , volume , pitch , isNot3D ) Parameters : playbackFlags (number): Optional . These match low-level DirectSound flags. Most mods don't need to modify this, though a value of 1 to loop may be useful. The rest of the flags can be read in the IDirectSoundBuffer8::Play documentation: https://docs.microsoft.com/en-us/previous-versions/windows/desktop/ee418074(v=vs.85). volume (number): Optional . pitch (number): Optional . isNot3D (boolean): Optional . stop \u2693\ufe0e This stops playing the sound. tes3sound : stop ()","title":"tes3sound"},{"location":"types/tes3sound/#tes3sound","text":"A sound object created in the TES3 CS. This type inherits the following: tes3baseObject","title":"tes3sound"},{"location":"types/tes3sound/#properties","text":"","title":"Properties"},{"location":"types/tes3sound/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3sound/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3sound/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3sound/#filename","text":"Read-only . Path to the sound file. Returns : result (string)","title":"filename"},{"location":"types/tes3sound/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3sound/#maxdistance","text":"The maximum distance the sound will be played at. Defaults to 0 . If both this and minDistance are 0 , the values are ignored. Returns : result (number)","title":"maxDistance"},{"location":"types/tes3sound/#mindistance","text":"The minimum distance the sound will be played at. Defaults to 0 . Returns : result (number)","title":"minDistance"},{"location":"types/tes3sound/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3sound/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3sound/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3sound/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3sound/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3sound/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3sound/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3sound/#volume","text":"Direct access to sound's volume. Returns : result (number)","title":"volume"},{"location":"types/tes3sound/#methods","text":"","title":"Methods"},{"location":"types/tes3sound/#__tojson","text":"Serializes the object to json. local result = tes3sound : __tojson () Returns : result (string)","title":"__tojson"},{"location":"types/tes3sound/#islooping","text":"Returns true if the sound is actively looping. local result = tes3sound : isLooping () Returns : result (boolean)","title":"isLooping"},{"location":"types/tes3sound/#isplaying","text":"Returns true if the sound is actively playing. local result = tes3sound : isPlaying () Returns : result (boolean)","title":"isPlaying"},{"location":"types/tes3sound/#play","text":"This method plays the sound. tes3sound : play ( playbackFlags , volume , pitch , isNot3D ) Parameters : playbackFlags (number): Optional . These match low-level DirectSound flags. Most mods don't need to modify this, though a value of 1 to loop may be useful. The rest of the flags can be read in the IDirectSoundBuffer8::Play documentation: https://docs.microsoft.com/en-us/previous-versions/windows/desktop/ee418074(v=vs.85). volume (number): Optional . pitch (number): Optional . isNot3D (boolean): Optional .","title":"play"},{"location":"types/tes3sound/#stop","text":"This stops playing the sound. tes3sound : stop ()","title":"stop"},{"location":"types/tes3soundGenerator/","text":"tes3soundGenerator \u2693\ufe0e A sound generator object created in the TES3 CS This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sound \u2693\ufe0e Read-only . Sound object tied to this sound generator. Returns : result ( tes3sound ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) type \u2693\ufe0e Read-only . Maps to tes3.soundGenType constants. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local result = tes3soundGenerator : __tojson () Returns : result (string)","title":"tes3soundGenerator"},{"location":"types/tes3soundGenerator/#tes3soundgenerator","text":"A sound generator object created in the TES3 CS This type inherits the following: tes3baseObject","title":"tes3soundGenerator"},{"location":"types/tes3soundGenerator/#properties","text":"","title":"Properties"},{"location":"types/tes3soundGenerator/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3soundGenerator/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3soundGenerator/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3soundGenerator/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3soundGenerator/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3soundGenerator/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3soundGenerator/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3soundGenerator/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3soundGenerator/#sound","text":"Read-only . Sound object tied to this sound generator. Returns : result ( tes3sound )","title":"sound"},{"location":"types/tes3soundGenerator/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3soundGenerator/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3soundGenerator/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3soundGenerator/#type","text":"Read-only . Maps to tes3.soundGenType constants. Returns : result (number)","title":"type"},{"location":"types/tes3soundGenerator/#methods","text":"","title":"Methods"},{"location":"types/tes3soundGenerator/#__tojson","text":"Serializes the object to json. local result = tes3soundGenerator : __tojson () Returns : result (string)","title":"__tojson"},{"location":"types/tes3spell/","text":"tes3spell \u2693\ufe0e A spell game object. This type inherits the following: tes3object , tes3baseObject Properties \u2693\ufe0e alwaysSucceeds \u2693\ufe0e A flag that determines if casting the spell will always succeed. Returns : result (boolean) autoCalc \u2693\ufe0e Determines if the magicka cost for the spell is autocalculated, and if the spell may be automatically assigned to NPCs if they are skillful enough to cast it. Returns : result (boolean) basePurchaseCost \u2693\ufe0e Calculates the base cost to purchase the spell. This value is not adjusted by mercantile skills. Returns : result (number) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) castType \u2693\ufe0e The spell's cast type. Maps to tes3.spellType constants. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) effects \u2693\ufe0e Read-only . An array-style table of the tes3effect data on the object. Returns : result (table) flags \u2693\ufe0e A bit field for the spell's flags. Returns : result (number) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isActiveCast \u2693\ufe0e Read-only . True if the spell is actively cast. If false, the spell's effects are always passively affecting the owner. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) magickaCost \u2693\ufe0e No description yet available. Returns : result (number) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The name of the spell. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) playerStart \u2693\ufe0e A flag that determines if the spell may be assigned to the player at character generation if the player has enough skill to cast it. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e Read-only . The calculated base price of the spell. This is the magickaCost of the spell multiplied by the fSpellValueMult GMST. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) calculateCastChance \u2693\ufe0e Calculates the chance that a caster can cast a given spell. local result = tes3spell : calculateCastChance ({ checkMagicka = ..., caster = ... }) Parameters : params (table) checkMagicka (boolean): Optional . Determines if the caster's magicka should be taken into account during the calculation. caster ( tes3reference , tes3mobileActor ): The caster to perform the calculation against. Returns : result (number) getActiveEffectCount \u2693\ufe0e Gets the number of active effects in the spell effect table. local result = tes3spell : getActiveEffectCount () Returns : result (number) getFirstIndexOfEffect \u2693\ufe0e Gets the first index of an effect ID in the spell effect table. local result = tes3spell : getFirstIndexOfEffect ( effectId ) Parameters : effectId (number): The ID of a tes3effect object to look for. Returns : result (number) getLeastProficientEffect \u2693\ufe0e Returns the effect of the spell that a given actor is least proficient with. local effect = tes3spell : getLeastProficientEffect ( actor ) Parameters : actor ( tes3mobileActor , tes3reference , tes3npc , tes3npcInstance ): The actor to calculate for. A mobile actor is preferred, as passing only a tes3npc will not use up to date skill information. Returns : effect ( tes3effect , nil): The least proficient effect, or nil if the spell has no valid effects. getLeastProficientSchool \u2693\ufe0e Returns the school of the least proficient effect on the spell, for a given actor. local schoolID = tes3spell : getLeastProficientSchool ( actor ) Parameters : actor ( tes3mobileActor , tes3reference , tes3npc , tes3npcInstance ): The actor to calculate for. A mobile actor is preferred, as passing only a tes3npc will not use up to date skill information. Returns : schoolID (number, nil): The least proficient school ID, or nil if the spell has no valid effects. Functions \u2693\ufe0e","title":"tes3spell"},{"location":"types/tes3spell/#tes3spell","text":"A spell game object. This type inherits the following: tes3object , tes3baseObject","title":"tes3spell"},{"location":"types/tes3spell/#properties","text":"","title":"Properties"},{"location":"types/tes3spell/#alwayssucceeds","text":"A flag that determines if casting the spell will always succeed. Returns : result (boolean)","title":"alwaysSucceeds"},{"location":"types/tes3spell/#autocalc","text":"Determines if the magicka cost for the spell is autocalculated, and if the spell may be automatically assigned to NPCs if they are skillful enough to cast it. Returns : result (boolean)","title":"autoCalc"},{"location":"types/tes3spell/#basepurchasecost","text":"Calculates the base cost to purchase the spell. This value is not adjusted by mercantile skills. Returns : result (number)","title":"basePurchaseCost"},{"location":"types/tes3spell/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3spell/#casttype","text":"The spell's cast type. Maps to tes3.spellType constants. Returns : result (number)","title":"castType"},{"location":"types/tes3spell/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3spell/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3spell/#effects","text":"Read-only . An array-style table of the tes3effect data on the object. Returns : result (table)","title":"effects"},{"location":"types/tes3spell/#flags","text":"A bit field for the spell's flags. Returns : result (number)","title":"flags"},{"location":"types/tes3spell/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3spell/#isactivecast","text":"Read-only . True if the spell is actively cast. If false, the spell's effects are always passively affecting the owner. Returns : result (boolean)","title":"isActiveCast"},{"location":"types/tes3spell/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3spell/#magickacost","text":"No description yet available. Returns : result (number)","title":"magickaCost"},{"location":"types/tes3spell/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3spell/#name","text":"The name of the spell. Returns : result (string)","title":"name"},{"location":"types/tes3spell/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3spell/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3spell/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3spell/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3spell/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3spell/#playerstart","text":"A flag that determines if the spell may be assigned to the player at character generation if the player has enough skill to cast it. Returns : result (boolean)","title":"playerStart"},{"location":"types/tes3spell/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3spell/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3spell/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3spell/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3spell/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3spell/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3spell/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3spell/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3spell/#value","text":"Read-only . The calculated base price of the spell. This is the magickaCost of the spell multiplied by the fSpellValueMult GMST. Returns : result (number)","title":"value"},{"location":"types/tes3spell/#methods","text":"","title":"Methods"},{"location":"types/tes3spell/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3spell/#calculatecastchance","text":"Calculates the chance that a caster can cast a given spell. local result = tes3spell : calculateCastChance ({ checkMagicka = ..., caster = ... }) Parameters : params (table) checkMagicka (boolean): Optional . Determines if the caster's magicka should be taken into account during the calculation. caster ( tes3reference , tes3mobileActor ): The caster to perform the calculation against. Returns : result (number)","title":"calculateCastChance"},{"location":"types/tes3spell/#getactiveeffectcount","text":"Gets the number of active effects in the spell effect table. local result = tes3spell : getActiveEffectCount () Returns : result (number)","title":"getActiveEffectCount"},{"location":"types/tes3spell/#getfirstindexofeffect","text":"Gets the first index of an effect ID in the spell effect table. local result = tes3spell : getFirstIndexOfEffect ( effectId ) Parameters : effectId (number): The ID of a tes3effect object to look for. Returns : result (number)","title":"getFirstIndexOfEffect"},{"location":"types/tes3spell/#getleastproficienteffect","text":"Returns the effect of the spell that a given actor is least proficient with. local effect = tes3spell : getLeastProficientEffect ( actor ) Parameters : actor ( tes3mobileActor , tes3reference , tes3npc , tes3npcInstance ): The actor to calculate for. A mobile actor is preferred, as passing only a tes3npc will not use up to date skill information. Returns : effect ( tes3effect , nil): The least proficient effect, or nil if the spell has no valid effects.","title":"getLeastProficientEffect"},{"location":"types/tes3spell/#getleastproficientschool","text":"Returns the school of the least proficient effect on the spell, for a given actor. local schoolID = tes3spell : getLeastProficientSchool ( actor ) Parameters : actor ( tes3mobileActor , tes3reference , tes3npc , tes3npcInstance ): The actor to calculate for. A mobile actor is preferred, as passing only a tes3npc will not use up to date skill information. Returns : schoolID (number, nil): The least proficient school ID, or nil if the spell has no valid effects.","title":"getLeastProficientSchool"},{"location":"types/tes3spell/#functions","text":"","title":"Functions"},{"location":"types/tes3spellList/","text":"tes3spellList \u2693\ufe0e A list of spells. Used by actors, birthsigns, and races. Properties \u2693\ufe0e iterator \u2693\ufe0e Read-only . A collection of spells. Can be iterated over using pairs . Returns : result ( tes3iterator ) Methods \u2693\ufe0e add \u2693\ufe0e Adds a spell to the list. local result = tes3spellList : add ( spell ) Parameters : spell (string, tes3spell ): The spell. Returns : result (boolean) contains \u2693\ufe0e Checks if the specified spell is contained in the spell list. local result = tes3spellList : contains ( spell ) Parameters : spell (string, tes3spell ): The spell. Returns : result (boolean) containsType \u2693\ufe0e Finds the first spell with the type provided. local result = tes3spellList : containsType ( spellType ) Parameters : spellType (number): A value from tes3.spellType enumeration. Returns : result ( tes3spell ) getCheapest \u2693\ufe0e Finds the castable spell in the list with the lowest casting cost. local result = tes3spellList : getCheapest () Returns : result ( tes3spell ) remove \u2693\ufe0e Removes a spell from the list. local result = tes3spellList : remove ( spell ) Parameters : spell (string, tes3spell ): The spell. Returns : result (boolean)","title":"tes3spellList"},{"location":"types/tes3spellList/#tes3spelllist","text":"A list of spells. Used by actors, birthsigns, and races.","title":"tes3spellList"},{"location":"types/tes3spellList/#properties","text":"","title":"Properties"},{"location":"types/tes3spellList/#iterator","text":"Read-only . A collection of spells. Can be iterated over using pairs . Returns : result ( tes3iterator )","title":"iterator"},{"location":"types/tes3spellList/#methods","text":"","title":"Methods"},{"location":"types/tes3spellList/#add","text":"Adds a spell to the list. local result = tes3spellList : add ( spell ) Parameters : spell (string, tes3spell ): The spell. Returns : result (boolean)","title":"add"},{"location":"types/tes3spellList/#contains","text":"Checks if the specified spell is contained in the spell list. local result = tes3spellList : contains ( spell ) Parameters : spell (string, tes3spell ): The spell. Returns : result (boolean)","title":"contains"},{"location":"types/tes3spellList/#containstype","text":"Finds the first spell with the type provided. local result = tes3spellList : containsType ( spellType ) Parameters : spellType (number): A value from tes3.spellType enumeration. Returns : result ( tes3spell )","title":"containsType"},{"location":"types/tes3spellList/#getcheapest","text":"Finds the castable spell in the list with the lowest casting cost. local result = tes3spellList : getCheapest () Returns : result ( tes3spell )","title":"getCheapest"},{"location":"types/tes3spellList/#remove","text":"Removes a spell from the list. local result = tes3spellList : remove ( spell ) Parameters : spell (string, tes3spell ): The spell. Returns : result (boolean)","title":"remove"},{"location":"types/tes3splashController/","text":"tes3splashController \u2693\ufe0e A core game controller responsible for controlling temporary graphics. Properties \u2693\ufe0e activeSplashes \u2693\ufe0e Read-only . A list of tes3splashControllerActiveSplash objects. Returns : result (table) bloodMeshCount \u2693\ufe0e Read-only . The number of loaded blood meshes. Returns : result (number) bloodMeshes \u2693\ufe0e Read-only . A list of loaded blood meshes. Returns : result (table) bloodSplashDurations \u2693\ufe0e Read-only . A list of blood splash durations. Returns : result (table) bloodTextureCount \u2693\ufe0e Read-only . The number of loaded blood textures. Returns : result (number) bloodTextureProperties \u2693\ufe0e Read-only . A list of loaded blood texturing properties. Returns : result (table) bloodTextures \u2693\ufe0e Read-only . A list of blood splash textures. Returns : result (table)","title":"tes3splashController"},{"location":"types/tes3splashController/#tes3splashcontroller","text":"A core game controller responsible for controlling temporary graphics.","title":"tes3splashController"},{"location":"types/tes3splashController/#properties","text":"","title":"Properties"},{"location":"types/tes3splashController/#activesplashes","text":"Read-only . A list of tes3splashControllerActiveSplash objects. Returns : result (table)","title":"activeSplashes"},{"location":"types/tes3splashController/#bloodmeshcount","text":"Read-only . The number of loaded blood meshes. Returns : result (number)","title":"bloodMeshCount"},{"location":"types/tes3splashController/#bloodmeshes","text":"Read-only . A list of loaded blood meshes. Returns : result (table)","title":"bloodMeshes"},{"location":"types/tes3splashController/#bloodsplashdurations","text":"Read-only . A list of blood splash durations. Returns : result (table)","title":"bloodSplashDurations"},{"location":"types/tes3splashController/#bloodtexturecount","text":"Read-only . The number of loaded blood textures. Returns : result (number)","title":"bloodTextureCount"},{"location":"types/tes3splashController/#bloodtextureproperties","text":"Read-only . A list of loaded blood texturing properties. Returns : result (table)","title":"bloodTextureProperties"},{"location":"types/tes3splashController/#bloodtextures","text":"Read-only . A list of blood splash textures. Returns : result (table)","title":"bloodTextures"},{"location":"types/tes3splashControllerActiveSplash/","text":"tes3splashControllerActiveSplash \u2693\ufe0e An object representing an active splash, such as a blood particle. Properties \u2693\ufe0e age \u2693\ufe0e The splash's current age. Returns : result (number) maxAge \u2693\ufe0e The splash's maximum age. Returns : result (number) node \u2693\ufe0e Read-only . The splash's node. Returns : result ( niNode )","title":"tes3splashControllerActiveSplash"},{"location":"types/tes3splashControllerActiveSplash/#tes3splashcontrolleractivesplash","text":"An object representing an active splash, such as a blood particle.","title":"tes3splashControllerActiveSplash"},{"location":"types/tes3splashControllerActiveSplash/#properties","text":"","title":"Properties"},{"location":"types/tes3splashControllerActiveSplash/#age","text":"The splash's current age. Returns : result (number)","title":"age"},{"location":"types/tes3splashControllerActiveSplash/#maxage","text":"The splash's maximum age. Returns : result (number)","title":"maxAge"},{"location":"types/tes3splashControllerActiveSplash/#node","text":"Read-only . The splash's node. Returns : result ( niNode )","title":"node"},{"location":"types/tes3startScript/","text":"tes3startScript \u2693\ufe0e An object representing a script which autostarts at the game load. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) script \u2693\ufe0e Read-only . A script which is set to start at game start with this tes3startScript object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"tes3startScript"},{"location":"types/tes3startScript/#tes3startscript","text":"An object representing a script which autostarts at the game load. This type inherits the following: tes3baseObject","title":"tes3startScript"},{"location":"types/tes3startScript/#properties","text":"","title":"Properties"},{"location":"types/tes3startScript/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3startScript/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3startScript/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3startScript/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3startScript/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3startScript/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3startScript/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3startScript/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3startScript/#script","text":"Read-only . A script which is set to start at game start with this tes3startScript object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3startScript/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3startScript/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3startScript/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3startScript/#methods","text":"","title":"Methods"},{"location":"types/tes3startScript/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3static/","text":"tes3static \u2693\ufe0e A static game object. A non-animated object like a building or rock. There are special-case marker statics used for gameplay purposes, such as travel and intervention. Use the object.isLocationMarker property to detect these markers. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) Functions \u2693\ufe0e","title":"tes3static"},{"location":"types/tes3static/#tes3static","text":"A static game object. A non-animated object like a building or rock. There are special-case marker statics used for gameplay purposes, such as travel and intervention. Use the object.isLocationMarker property to detect these markers. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject","title":"tes3static"},{"location":"types/tes3static/#properties","text":"","title":"Properties"},{"location":"types/tes3static/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3static/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3static/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3static/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3static/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3static/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3static/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3static/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3static/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3static/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3static/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3static/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3static/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3static/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3static/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3static/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3static/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3static/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3static/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3static/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3static/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3static/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3static/#methods","text":"","title":"Methods"},{"location":"types/tes3static/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3static/#functions","text":"","title":"Functions"},{"location":"types/tes3statistic/","text":"tes3statistic \u2693\ufe0e A structure that holds statistical information relating to the current and base values of a statistic such as health, fatigue, magicka, attributes, or skills. Morrowind statistics do not track buffs and debuffs separately. Instead, total buff or debuff values can be calculated with the tes3.getEffectMagnitude() function, using the appropriate buff or debuff magic effect for the statistic. Properties \u2693\ufe0e base \u2693\ufe0e The base value of the statistic. For example, for a mobile with a normal health amount of 100, fortified by 50, and having taken damage of 25, the base value would be 100, the normal health amount. Returns : result (number) baseRaw \u2693\ufe0e The base value of the statistic, as stored in memory. Prefer to use .base unless you know what you're doing. Returns : result (number) current \u2693\ufe0e The current value of the statistic. For example, for a mobile with a normal health amount of 100, fortified by 50, and having taken damage of 25, the current value would be 125, the health amount after all buffs and debuffs have been accounted for. Returns : result (number) currentRaw \u2693\ufe0e The current value of the statistic, as stored in memory. Prefer to use .current unless you know what you're doing. Returns : result (number) normalized \u2693\ufe0e The normalized value of the statistic. For example, for an account with current health of 50 and base health of 100, the normalized value would be equal to current divided by base. 50 (current) / 100 (base) = .5 (normalized). This is useful for quickly calculating percentages for statistics. Returns : result (number)","title":"tes3statistic"},{"location":"types/tes3statistic/#tes3statistic","text":"A structure that holds statistical information relating to the current and base values of a statistic such as health, fatigue, magicka, attributes, or skills. Morrowind statistics do not track buffs and debuffs separately. Instead, total buff or debuff values can be calculated with the tes3.getEffectMagnitude() function, using the appropriate buff or debuff magic effect for the statistic.","title":"tes3statistic"},{"location":"types/tes3statistic/#properties","text":"","title":"Properties"},{"location":"types/tes3statistic/#base","text":"The base value of the statistic. For example, for a mobile with a normal health amount of 100, fortified by 50, and having taken damage of 25, the base value would be 100, the normal health amount. Returns : result (number)","title":"base"},{"location":"types/tes3statistic/#baseraw","text":"The base value of the statistic, as stored in memory. Prefer to use .base unless you know what you're doing. Returns : result (number)","title":"baseRaw"},{"location":"types/tes3statistic/#current","text":"The current value of the statistic. For example, for a mobile with a normal health amount of 100, fortified by 50, and having taken damage of 25, the current value would be 125, the health amount after all buffs and debuffs have been accounted for. Returns : result (number)","title":"current"},{"location":"types/tes3statistic/#currentraw","text":"The current value of the statistic, as stored in memory. Prefer to use .current unless you know what you're doing. Returns : result (number)","title":"currentRaw"},{"location":"types/tes3statistic/#normalized","text":"The normalized value of the statistic. For example, for an account with current health of 50 and base health of 100, the normalized value would be equal to current divided by base. 50 (current) / 100 (base) = .5 (normalized). This is useful for quickly calculating percentages for statistics. Returns : result (number)","title":"normalized"},{"location":"types/tes3statisticSkill/","text":"tes3statisticSkill \u2693\ufe0e A structure that holds statistical information relating to the current and base values of a skill statistic. Morrowind statistics do not track buffs and debuffs separately. Instead, total buff or debuff values can be calculated with the tes3.getEffectMagnitude() function, using the appropriate buff or debuff magic effect for the statistic. This type inherits the following: tes3statistic Properties \u2693\ufe0e base \u2693\ufe0e The base value of the skill statistic. Damage, and fortify spell effects don't change base skill value. Returns : result (number) baseRaw \u2693\ufe0e The base value of the skill statistic, as stored in memory. Prefer to use .base unless you know what you're doing. Returns : result (number) current \u2693\ufe0e The current value of the skill statistic. Returns : result (number) currentRaw \u2693\ufe0e The current value of the skill statistic, as stored in memory. Prefer to use .current unless you know what you're doing. Returns : result (number) normalized \u2693\ufe0e The normalized value of the skill statistic. Returns : result (number) type \u2693\ufe0e No description yet available. Returns : result (number)","title":"tes3statisticSkill"},{"location":"types/tes3statisticSkill/#tes3statisticskill","text":"A structure that holds statistical information relating to the current and base values of a skill statistic. Morrowind statistics do not track buffs and debuffs separately. Instead, total buff or debuff values can be calculated with the tes3.getEffectMagnitude() function, using the appropriate buff or debuff magic effect for the statistic. This type inherits the following: tes3statistic","title":"tes3statisticSkill"},{"location":"types/tes3statisticSkill/#properties","text":"","title":"Properties"},{"location":"types/tes3statisticSkill/#base","text":"The base value of the skill statistic. Damage, and fortify spell effects don't change base skill value. Returns : result (number)","title":"base"},{"location":"types/tes3statisticSkill/#baseraw","text":"The base value of the skill statistic, as stored in memory. Prefer to use .base unless you know what you're doing. Returns : result (number)","title":"baseRaw"},{"location":"types/tes3statisticSkill/#current","text":"The current value of the skill statistic. Returns : result (number)","title":"current"},{"location":"types/tes3statisticSkill/#currentraw","text":"The current value of the skill statistic, as stored in memory. Prefer to use .current unless you know what you're doing. Returns : result (number)","title":"currentRaw"},{"location":"types/tes3statisticSkill/#normalized","text":"The normalized value of the skill statistic. Returns : result (number)","title":"normalized"},{"location":"types/tes3statisticSkill/#type","text":"No description yet available. Returns : result (number)","title":"type"},{"location":"types/tes3transform/","text":"tes3transform \u2693\ufe0e A rotation matrix, translation vector, and scale that marks an object's transformation. Properties \u2693\ufe0e rotation \u2693\ufe0e The transform's rotation matrix. Returns : result ( tes3matrix33 ) scale \u2693\ufe0e The transform's scale. Returns : result (number) translation \u2693\ufe0e The transform's translation vector. Returns : result ( tes3vector3 ) Methods \u2693\ufe0e copy \u2693\ufe0e Creates a copy of the transform. local result = tes3transform : copy () Returns : result ( tes3transform )","title":"tes3transform"},{"location":"types/tes3transform/#tes3transform","text":"A rotation matrix, translation vector, and scale that marks an object's transformation.","title":"tes3transform"},{"location":"types/tes3transform/#properties","text":"","title":"Properties"},{"location":"types/tes3transform/#rotation","text":"The transform's rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/tes3transform/#scale","text":"The transform's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3transform/#translation","text":"The transform's translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/tes3transform/#methods","text":"","title":"Methods"},{"location":"types/tes3transform/#copy","text":"Creates a copy of the transform. local result = tes3transform : copy () Returns : result ( tes3transform )","title":"copy"},{"location":"types/tes3travelDestinationNode/","text":"tes3travelDestinationNode \u2693\ufe0e An attachment-capable structure to manage a travel destination. This is either exposed as a destination attachment for a door or as part of a list of possible travel services in an actor's AI configuration. Properties \u2693\ufe0e cell \u2693\ufe0e The destination cell. Returns : result ( tes3cell ) marker \u2693\ufe0e The reference door marker that the destination places the traveling actor at. Returns : result ( tes3reference )","title":"tes3travelDestinationNode"},{"location":"types/tes3travelDestinationNode/#tes3traveldestinationnode","text":"An attachment-capable structure to manage a travel destination. This is either exposed as a destination attachment for a door or as part of a list of possible travel services in an actor's AI configuration.","title":"tes3travelDestinationNode"},{"location":"types/tes3travelDestinationNode/#properties","text":"","title":"Properties"},{"location":"types/tes3travelDestinationNode/#cell","text":"The destination cell. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3travelDestinationNode/#marker","text":"The reference door marker that the destination places the traveling actor at. Returns : result ( tes3reference )","title":"marker"},{"location":"types/tes3uiElement/","text":"tes3uiElement \u2693\ufe0e A UI element, the main building block of the UI system. All elements are created with methods on a parent Element. Elements are very configurable, and have many HTML-like layout features. All layout properties can be set to nil to reset them to the default value, which will deactivate any related layout mode. Elements can have custom data attached using their Property _ key-value store, and specific Elements have specific element.widget accessors to control behaviour. Properties \u2693\ufe0e absolutePosAlignX \u2693\ufe0e Sets element position to a point relative to the parent element. 0.0 = left/top content edge, 1.0 = right/bottom content edge. The positioning is absolute, which frees the element from the standard flow layout and allows overlapping elements. Bug note: Elements may not respond to widthProportional/heightProportional sizing after either of these properties are set. If you need to use both you should consider testing if it works first. Returns : result (number) absolutePosAlignY \u2693\ufe0e See absolutePosAlignX. Returns : result (number) alpha \u2693\ufe0e Element alpha colour, using range [0.0, 1.0]. Used to composite elements. If you wish to hide an element completely, use disable instead. Returns : result (number) autoHeight \u2693\ufe0e When true , automatically expands element dimensions to fit child elements. Dimensions are restricted by minWidth , minHeight , maxWidth and maxHeight properties. Returns : result (boolean) autoWidth \u2693\ufe0e When true , automatically expands element dimensions to fit child elements. Dimensions are restricted by minWidth , minHeight , maxWidth and maxHeight properties. Returns : result (boolean) borderAllSides \u2693\ufe0e Integer number. Border size in pixels. Border is the extra empty space around an element. Individual border sizes default to using the borderAllSides setting. Returns : result (number) borderBottom \u2693\ufe0e Integer number. Bottom border size in pixels. When this is set to -1 , the borderAllSides setting is used for this side instead. Returns : result (number) borderLeft \u2693\ufe0e Integer number. Left border size in pixels. When this is set to -1 , the borderAllSides setting is used for this side instead. Returns : result (number) borderRight \u2693\ufe0e Integer number. Left border size in pixels. When this is set to -1 , the borderAllSides setting is used for this side instead. Returns : result (number) borderTop \u2693\ufe0e Integer number. Top border size in pixels. When this is set to -1 , the borderAllSides setting is used for this side instead. Returns : result (number) childAlignX \u2693\ufe0e Sets alignment of child elements inside its parent, though it only works in specific conditions. 0.0 = left/top edge touches left/top edge of parent, 0.5 = centred, 1.0 = right/bottom edge touches right/bottom edge of parent. For negative values, there is a special case behaviour: all children but the last will be left-aligned/top-aligned, the last child will be right-aligned/bottom-aligned. Child alignment only works if the element has proportional sizing (using widthProportional/heightProportional) and all children use non-proportional sizing (widthProportional and heightProportional are nil). Returns : result (number) childAlignY \u2693\ufe0e See childAlignX. Returns : result (number) childOffsetX \u2693\ufe0e Integer number. View offset in pixels, applied to the position of child nodes. Used in scroll panes. Returns : result (number) childOffsetY \u2693\ufe0e See childOffsetX. Returns : result (number) children \u2693\ufe0e Read-only . A table containing references to child elements. This is a copy that does not track changes. Returns : result (table) color \u2693\ufe0e Element RGB colour, an array of 3 floats with value range [0.0, 1.0]. For menus and rects, it sets the background colour. For text, it sets the text colour. For images, it multiplies the image by the colour. Returns : result (table) consumeMouseEvents \u2693\ufe0e When true , mouse events over this element are sent to event handlers, or discarded if there is no handler. When false , mouse events go upwards to the first ancestor that can consume mouse events. Useful to set on widget sub-elements. true by default. Returns : result (boolean) disabled \u2693\ufe0e Disables user actions on this element. Widgets may stop accepting mouse and keyboard input while disabled. Returns : result (boolean) flowDirection \u2693\ufe0e Can have values \"left_to_right\" or \"top_to_bottom\" . These values are available as tes3.flowDirection enumeration. Indicates which direction child elements are laid out. Returns : result (string) font \u2693\ufe0e Index of font to use for text. 0 - Magic Cards (default) 1 - Century Sans 2 - Daedric Returns : result (number) height \u2693\ufe0e Element dimensions in pixels. Integer number. Returns : result (number) heightProportional \u2693\ufe0e Sets element dimensions using a proportional sizer. The sizer starts with the parent dimension in the flow direction, subtracts any fixed dimension children leaving the proportional sizer space. Each proportionally sized element then gets an equal division of the space, multiplied by this member. Values above 1.0 are permissible. Bug note: If widthProportional is used without heightProportional, an element may not respond to changes in parent size. It is recommended to set heightProportional, or have a fixed size sibling element if dynamic reflow is required. Overrides fixed, minimum and maximum sizes unless this value is `nil` (default). Returns : result (boolean) id \u2693\ufe0e Read-only . The element's ID. The element can be later accessed by ancestor:findChild(id) . Note that multiple elements may have the same ID, such as subparts of a widget, or list items. Therefore, you may think of ids as an element class identifier. Returns : result (number) imageScaleX \u2693\ufe0e Image scaling multipliers. Only applies to image elements. Returns : result (number) imageScaleY \u2693\ufe0e Image scaling multipliers. Only applies to image elements. Returns : result (number) justifyText \u2693\ufe0e Can have values \"left\" , \"center\" , or \"right\" . Controls text justification. These values are available as tes3.justifyText enumeration. To work correctly for center/right justification, wrapText must be true . Returns : result (string) maxHeight \u2693\ufe0e Maximum dimensions for auto-size layout and resizable frames. Integer number. Returns : result (number) maxWidth \u2693\ufe0e Maximum dimensions for auto-size layout and resizable frames. Integer number. Returns : result (number) minHeight \u2693\ufe0e Minimum dimensions for auto-size layout and resizable frames. Integer number. Returns : result (number) minWidth \u2693\ufe0e Minimum dimensions for auto-size layout and resizable frames. Integer number. Returns : result (number) name \u2693\ufe0e Read-only . The element's name, taken from the name registered for the ID. Returns : result (string) paddingAllSides \u2693\ufe0e Integer number. Padding size in pixels. Padding is the blank space between the edge of an element and its contents. Individual padding sizes default to -1 , making it use the paddingAllSides setting. Returns : result (number) paddingBottom \u2693\ufe0e Integer number. Bottom padding size in pixels. When this is set to -1 , the paddingAllSides setting is used for this side instead. Returns : result (number) paddingLeft \u2693\ufe0e Integer number. Left padding size in pixels. When this is set to -1 , the paddingAllSides setting is used for this side instead. Returns : result (number) paddingRight \u2693\ufe0e Integer number. Right padding size in pixels. When this is set to -1 , the paddingAllSides setting is used for this side instead. Returns : result (number) paddingTop \u2693\ufe0e Integer number. Top padding size in pixels. When this is set to -1 , the paddingAllSides setting is used for this side instead. Returns : result (number) parent \u2693\ufe0e Read-only . A reference to the parent element. Returns : result ( tes3uiElement ) positionX \u2693\ufe0e Integer number. Element X position relative to its parent's top-left content area. For top-level menus there is a difference: (0, 0) is the centre of the screen. Returns : result (number) positionY \u2693\ufe0e Integer number. Element Y position relative to its parent's top-left content area. For top-level menus there is a difference: (0, 0) is the centre of the screen. Returns : result (number) rawText \u2693\ufe0e The raw value of the element's text. This, unlike the normal text property, will not directly read widget information or handle the removal of the positional cursor. Returns : result (string) repeatKeys \u2693\ufe0e Controls if there is repeating text input when keys are held down. true by default. Returns : result (boolean) scaleMode \u2693\ufe0e When set to true on image and NIF elements, they are scaled to fit width and height . Returns : result (boolean) text \u2693\ufe0e The element's text. Text input can be read by accessing this property. Returns : result (string) visible \u2693\ufe0e Controls if the element is visible. Returns : result (boolean) widget \u2693\ufe0e Access to custom properties specific to a widget. These properties are documented in the widget create* function descriptions. Returns : result (table) width \u2693\ufe0e Element dimensions in pixels. Integer number. Returns : result (number) widthProportional \u2693\ufe0e Sets element dimensions using a proportional sizer. The sizer starts with the parent dimension in the flow direction, subtracts any fixed dimension children leaving the proportional sizer space. Each proportionally sized element then gets an equal division of the space, multiplied by this member. Values above 1.0 are permissible. Bug note: If widthProportional is used without heightProportional, an element may not respond to changes in parent size. It is recommended to set heightProportional, or have a fixed size sibling element if dynamic reflow is required. Overrides fixed, minimum and maximum sizes unless this value is `nil` (default). Returns : result (boolean) wrapText \u2693\ufe0e Controls text wrapping. Setting this to true will also set layoutHeightFraction to 1.0 , which is required for wrapping text to adjust to its container size. Returns : result (boolean) Methods \u2693\ufe0e createBlock \u2693\ufe0e Creates an empty block container inside the element. Used to group and layout elements. local result = tes3uiElement : createBlock ( id ) Parameters : id (number): Optional . A registered identifier to help find this element later. Returns : result ( tes3uiElement ) createButton \u2693\ufe0e Creates a clickable button. Register the mouseClick event to capture a button press. Custom widget properties: | `number`_ `element.widget.state`: Interaction state. 1 = normal, 2 = disabled, 4 = active. Controls which colour set to use for text. | `table`_ (float[3]) `element.widget.idle`: Text colour for normal state, no mouse interaction. | `table`_ (float[3]) `element.widget.over`: Text colour for normal state, on mouseOver. | `table`_ (float[3]) `element.widget.pressed`: Text colour for normal state, on mouseDown. | `table`_ (float[3]) `element.widget.idleDisabled`: Text colour for disabled state, no mouse interaction. | `table`_ (float[3]) `element.widget.overDisabled`: Text colour for disabled state, on mouseOver. | `table`_ (float[3]) `element.widget.pressedDisabled`: Text colour for disabled state, on mouseDown. | `table`_ (float[3]) `element.widget.idleActive`: Text colour for active state, no mouse interaction. | `table`_ (float[3]) `element.widget.overActive`: Text colour for active state, on mouseOver. | `table`_ (float[3]) `element.widget.pressedActive`: Text colour for active state, on mouseDown. local result = tes3uiElement : createButton ( id ) Parameters : id (number): Optional . A registered identifier to help find this element later. Returns : result ( tes3uiElement ) createDivider \u2693\ufe0e Creates a textured horizontal divider line, as used in the magic and stat menus. Scales automatically to the container width. local result = tes3uiElement : createDivider ( id ) Parameters : id (number): Optional . A registered identifier to help find this element later. Returns : result ( tes3uiElement ) createFillBar \u2693\ufe0e Creates a horizontal quantity indicator bar. Custom widget properties: | `number`_ (integer) `element.widget.current`: Current (filled) value. | `number`_ (integer) `element.widget.max`: Maximum value. | `boolean`_ `element.widget.showText`: If text of the format \"current/max\" is shown. Default is `true`. | `table`_ (float[3]) `element.widget.fillColor`: Colour of filled area. | `number`_ (float) `element.widget.fillAlpha`: Alpha transparency of filled area. local result = tes3uiElement : createFillBar ( id , current , max ) Parameters : id (number): Optional . A registered identifier to help find this element later. current (number): Optional . The initial current value. max (number): Optional . The initial maximum value. Returns : result ( tes3uiElement ) createHorizontalScrollPane \u2693\ufe0e Creates a horizontally scrolling pane. Custom widget properties: | `number`_ `element.widget.positionX`: Horizontal scroll offset in pixels. | `boolean`_ `element.widget.scrollbarVisible`: Set if the scrollbar is displayed. Custom widget methods: | `element.widget:contentsChanged()`: Call to update scroll bar slider and limits after adding or removing elements to the content container. Because content size depends on layout, this must be run after a menu:updateLayout(). Only required if the content size changes. local result = tes3uiElement : createHorizontalScrollPane ( id ) Parameters : id (number): Optional . A registered identifier to help find this element later. Returns : result ( tes3uiElement ) createHypertext \u2693\ufe0e Creates a text area with clickable words as links. Usage is still under research. local result = tes3uiElement : createHypertext ( id ) Parameters : id (number): Optional . A registered identifier to help find this element later. Returns : result ( tes3uiElement ) createImage \u2693\ufe0e Creates an image element from a texture file. The texture must have power-of-2 dimensions (i.e. 16, 32, 64, 128, 256, 512, 1024); the final display size can be trimmed by setting width and height. local result = tes3uiElement : createImage ( id , path ) Parameters : id (number): Optional . A registered identifier to help find this element later. path (string): An image path. This path is relative to Data Files . Returns : result ( tes3uiElement ) createImageButton \u2693\ufe0e Creates an interactive button composed of images for the idle , over , and pressed states. The texture must have power-of-2 dimensions (i.e. 16, 32, 64, 128, 256, 512, 1024); the final display size can be trimmed by setting width and height. local result = tes3uiElement : createImageButton ( id , idle , over , path ) Parameters : id (number): Optional . A registered identifier to help find this element later. idle (string): The path to the idle image. This path is relative to Data Files . over (string): The path to the mouse hover image. This path is relative to Data Files . path (string): The path to the mouse pressed image. This path is relative to Data Files . Returns : result ( tes3uiElement ) createLabel \u2693\ufe0e Creates a text label. It defaults to displaying all text on a single line. To get a multi-line label, set wrap_text to true . The element is created with autoWidth and autoHeight turned on. local result = tes3uiElement : createLabel ( id , text ) Parameters : id (number): Optional . A registered identifier to help find this element later. text (string): The text to display. Returns : result ( tes3uiElement ) createNif \u2693\ufe0e Creates a NIF model from a file. Still under research. local result = tes3uiElement : createNif ( id , text ) Parameters : id (number): Optional . A registered identifier to help find this element later. text (string): A model path. This path is relative to Data Files . Returns : result ( tes3uiElement ) createParagraphInput \u2693\ufe0e Creates a multi-line text input element, with line wrapping on. To receive input the keyboard must be captured with tes3ui.acquireTextInput(element) . Read the input with the text property. Write an initial value to edit by setting the text property. Custom widget properties: | `number`_ (integer) `element.widget.lengthLimit`: Maximum input length. Default is `1023`. local result = tes3uiElement : createParagraphInput ( id ) Parameters : id (number): Optional . A registered identifier to help find this element later. Returns : result ( tes3uiElement ) createRect \u2693\ufe0e Creates a filled rectangle. The rectangle is displayed as filled with the element's colour. It supports alpha compositing. local result = tes3uiElement : createRect ( id , color ) Parameters : id (number): Optional . A registered identifier to help find this element later. color (table): Optional . The fill colour for the element. Returns : result ( tes3uiElement ) createSlider \u2693\ufe0e Creates a horizontal slider. Custom widget properties: | `number`_ (integer) `element.widget.current`: Current value. | `number`_ (integer) `element.widget.max`: Maximum value. | `number`_ (integer) `element.widget.step`: Amount changed by left and right arrow buttons. | `number`_ (integer) `element.widget.jump`: Amount changed by clicking inside the slider area. Custom events used with register: | `\"PartScrollBar_changed\"`: Triggers on value change; moving the slider is not enough if the value is the same. local result = tes3uiElement : createSlider ( id , current , max , step , jump ) Parameters : id (number): Optional . A registered identifier to help find this element later. current (number): The initial value for the slider. max (number): The maximum value for the slider. step (number): Optional . Amount changed by left and right arrow buttons. jump (number): Optional . Amount changed by clicking inside the slider area. Returns : result ( tes3uiElement ) createSliderVertical \u2693\ufe0e Creates a vertical slider. Custom widget properties: | `number`_ (integer) `element.widget.current`: Current value. | `number`_ (integer) `element.widget.max`: Maximum value. | `number`_ (integer) `element.widget.step`: Amount changed by up and down arrow buttons. | `number`_ (integer) `element.widget.jump`: Amount changed by clicking inside the slider area. Custom events used with register: | `\"PartScrollBar_changed\"`: Triggers on value change; moving the slider is not enough if the value is the same. local result = tes3uiElement : createSliderVertical ( id , current , max , step , jump ) Parameters : id (number): Optional . A registered identifier to help find this element later. current (number): The initial value for the slider. max (number): The maximum value for the slider. step (number): Optional . Amount changed by left and right arrow buttons. The default is 1. jump (number): Optional . Amount changed by clicking inside the slider area. The default is 5. Returns : result ( tes3uiElement ) createTextInput \u2693\ufe0e Creates a single line text input element. To receive input the keyboard must be captured with tes3ui.acquireTextInput(element) . Read the input with the text property. Write an initial value to display by setting the text property; that value will be cleared on the first keypress. Custom widget properties: | `boolean`_ `element.widget.eraseOnFirstKey`: Clears the initial value if the first keypress is not an edit action. Default is `true`. | `number`_ (integer) `element.widget.lengthLimit\"`: Maximum input length, or `nil` for no limit. If you are setting names, the engine limits most identifiers to 31 characters. Default is `nil`. local result = tes3uiElement : createTextInput ( id ) Parameters : id (number): Optional . A registered identifier to help find this element later. Returns : result ( tes3uiElement ) createTextSelect \u2693\ufe0e Creates a selectable line of text, with configurable hover, click, and disabled colours. Can be used to create a list box by placing them in a ScrollPane. state sets the initial interaction state. local result = tes3uiElement : createTextSelect ( id , text , state ) Parameters : id (number): Optional . A registered identifier to help find this element later. text (string): Optional . The text to display. state (number): Optional . The initial interaction state. Defaults to normal. Returns : result (tes3uiWidgetTextSelect) createThinBorder \u2693\ufe0e Creates a styled thin border element. Any content should be created as children of this border. local result = tes3uiElement : createThinBorder ( id ) Parameters : id (number): Optional . A registered identifier to help find this element later. Returns : result ( tes3uiElement ) createVerticalScrollPane \u2693\ufe0e Creates a vertically scrolling pane. Useful as a list box. Custom widget properties: | `number`_ `element.widget.positionY`: Vertical scroll offset in pixels. | `boolean`_ `element.widget.scrollbarVisible`: Set if the scrollbar is displayed. Custom widget methods: | `element.widget:contentsChanged()`: Call to update scroll bar slider and limits after adding or removing elements to the content container. Because content size depends on layout, this must be run after a menu:updateLayout(). Only required if the content size changes. local result = tes3uiElement : createVerticalScrollPane ( id ) Parameters : id (number): Optional . A registered identifier to help find this element later. Returns : result ( tes3uiElement ) destroy \u2693\ufe0e Deletes an element and all its child elements. If any element is bound to text input by tes3ui.acquireTextInput _, the input is automatically released. tes3uiElement : destroy () destroyChildren \u2693\ufe0e Deletes all the child elements of this element. If any element is bound to text input by tes3ui.acquireTextInput _, the input is automatically released. tes3uiElement : destroyChildren () findChild \u2693\ufe0e Finds a child element matching the id argument. Searches children recursively. Returns the first child element with a matching id, or nil if no match found. local result = tes3uiElement : findChild ( id ) Parameters : id (number): The id to search for. Returns : result ( tes3uiElement ) forwardEvent \u2693\ufe0e Forwards an event to the original Morrowind event handler, using this element as a source. This may be optionally called at any point in a callback. Note that handler may or may not destroy the event widget or the menu, so you should know how it behaves before accessing any elements after a callback. tes3uiElement : forwardEvent ( id ) Parameters : id (tes3uiEvent): The original UI event. getContentElement \u2693\ufe0e Returns the descendant element that creation functions used on this element will place children into, or the calling element if there is no specific descendant for children. Some widgets like ScrollPanes are built of multiple layers of elements. When an element is created in a complex widget, it is automatically placed as a child of a content element, but other functions do not access this content element directly. This function finds this content container for any element, so that changing layout and accessing children is possible. For simple elements, the calling element will be returned so that there is always a valid container element. local result = tes3uiElement : getContentElement () Returns : result ( tes3uiElement ) getPropertyBool \u2693\ufe0e Properties are named variables attached to an element. Gets a property value with propName as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. Returns false if the property key did not have data. local result = tes3uiElement : getPropertyBool ( propName ) Parameters : propName (string): The property name. Returns : result (boolean) getPropertyFloat \u2693\ufe0e Properties are named variables attached to an element. Gets a property value with propName as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. Returns 0 if the property key did not have data. local result = tes3uiElement : getPropertyFloat ( propName ) Parameters : propName (string): The property name. Returns : result (number) getPropertyInt \u2693\ufe0e Properties are named variables attached to an element. Gets a property value with propName as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. Returns 0 if the property key did not have data. local result = tes3uiElement : getPropertyInt ( propName ) Parameters : propName (string): The property name. Returns : result (number) getPropertyObject \u2693\ufe0e Properties are named variables attached to an element. Gets a property value with propName as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. Returns nil if the property key did not have data, or if it could not guess the type of the property value. For `getPropertyObject`, an expected return value not derived from `tes3baseObject` requires the usertype to be provided as well. Currently accepted usertypes are: `tes3itemData` `tes3itemStack` `tes3gameFile` `tes3inventoryTile` `tes3uiElement` This is required because there is no identifying type information stored with the pointer. If the usertype is incorrect, there are no safety checks keeping the game from crashing. local result = tes3uiElement : getPropertyObject ( propName , expectedUsertype ) Parameters : propName (string): The property name. expectedUsertype (string): Optional . A Lua usertype name, if expecting a non-standard object type. Returns : result ( tes3baseObject , tes3mobileObject , any) getTopLevelMenu \u2693\ufe0e Finds the parent menu containing the element. Useful for finding the correct menu to run layout updates on. local result = tes3uiElement : getTopLevelMenu () Returns : result ( tes3uiElement ) loadMenuPosition \u2693\ufe0e Restores the menu's position and size information from the Morrowind.ini file. This may only be called on top-level parents. tes3uiElement : loadMenuPosition () register \u2693\ufe0e Sets an event handler, which can add or override an existing event handler. The use of registerBefore or registerAfter is recommended if you do not want to replace the existing event handler. The eventID can be a standard event name, or an event specific to an element class. The callback receives an argument with the event data. See below for details. The original Morrowind callback is captured and can be invoked with the forwardEvent method on the event argument. If there is an existing Lua callback, it is replaced. Lua UI event specification: Events can be bound to elements via the Element _ register method, which takes an event name. Event names can be one of the standard events listed here, or a widget-specific event. Standard events: mouseLeave Mouse cursor moving outside an element. Triggers once. mouseOver Mouse cursor moving over an element. Triggers once. mouseDown Left mouse button down over an element. mouseClick Left mouse button up over an element, after a mouseDown over the element. mouseScrollUp .. mouseScrollDown Mouse wheel scrolling. mouseDoubleClick Standard double-click. mouseStillIdle Mouse cursor positioned outside an element. Triggers every frame. mouseStillOver Mouse cursor positioned over an element. Triggers every frame. mouseStillPressed Mouse cursor positioned over an element, after a mouseDown over the element. Triggers every frame. mouseStillPressedOutside Apparently not working in the engine. Mouse cursor positioned outside an element, after a mouseDown over the element. Triggers every frame. mouseRelease Left mouse button up over an element. keyPress A raw key press. keyEnter The Return key is pressed. help On mouseover, but also marking the element as having a tooltip. Create a tooltip within the callback using the tes3ui.createTooltipMenu _ function. focus When a menu is clicked on, and moved on top of other menus. unfocus Just before another menu is clicked on, or a widget in that menu receives an event, or when the menu mode is toggled off. You may return false from this event to prevent the menu from being deselected, and to prevent leaving menu mode. preUpdate Before the menu layout is updated. update After the menu layout is updated. destroy When the UI element is destroyed, before any data or children are destroyed. Widget-specific events To be documented. Event forwarding \u2693\ufe0e The original Morrowind event handler is saved when you first register an event. It may be optionally invoked with the forwardEvent method. Note that handler may or may not destroy the event widget or the menu, so you should know how it behaves before accessing any elements after a callback. Example .. code-block:: lua local function onClick(e) -- pre-event code e.source:forwardEvent(e) -- post-event code end local button = menu:findChild(\"MenuExample_Ok\") button:register(\"mouseClick\", onClick) Event handler \u2693\ufe0e The standard type signature for events. boolean _ eventHandler( EventData e) Returns: optional Returning false may cancel an interaction for certain events. e.g. unfocus EventData: **source** (`Element`_) The source element of the event. **id** (`number`_) The numeric id of the event type. **widget** (`Element`_) The widget element that the source belongs to, if the element is a sub-part of a widget. May not be accurate if the element is not a sub-part. **data0** (`number`_) .. **data1** (`number`_) Event-specific raw data values. For mouse events, these are the screen X and Y coordinates of the pointer. For keyboard events, data0 is the `scan code`_. **relativeX** (`number`_) .. **relativeY** (`number`_) For mouse events only. X and Y coordinates of the pointer relative to the top-left of the element. tes3uiElement : register ( eventID , callback ) Parameters : eventID (string): The event id. callback (function): The callback function. registerAfter \u2693\ufe0e Sets an event handler to run after any existing event handler on the element. Can be any event usable with register . The callback receives an argument with the event data. See register for details. tes3uiElement : registerAfter ( eventID , callback ) Parameters : eventID (string): The event id. callback (function): The callback function. registerBefore \u2693\ufe0e Sets an event handler to run before any existing event handler on the element. Can be any event usable with register . The callback receives an argument with the event data. See register for details. tes3uiElement : registerBefore ( eventID , callback ) Parameters : eventID (string): The event id. callback (function): The callback function. reorderChildren \u2693\ufe0e Moves the layout order of the children of this element. `count` elements are taken from starting child `Element`_ or index (0-based) `moveFrom`, and moved before the child `Element`_ or index (0-based) `insertBefore`. If `count` is -1, all children after `moveFrom` are moved. If any index is a negative number, then the index represents a distance from the end of the child list. Returns `true` if the operation succeeded, or `false` if at least one argument was invalid. local result = tes3uiElement : reorderChildren ( insertBefore , moveFrom , count ) Parameters : insertBefore ( tes3uiElement , number): The insertion point (or its 0-based child index). moveFrom ( tes3uiElement , number): The first child (or 0-based child index) to be moved. count (number): The property name. Returns : result (boolean) saveMenuPosition \u2693\ufe0e Saves the menu's position and size information to the Morrowind.ini file. This may only be called on top-level parents. Note that most menus save their position automatically. tes3uiElement : saveMenuPosition () setPropertyBool \u2693\ufe0e Sets a property value with prop as the property key. Properties are named variables attached to an element. Gets a property value with propName as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. tes3uiElement : setPropertyBool ( propName , value ) Parameters : propName (string): The property name. value (boolean): The value to set. setPropertyFloat \u2693\ufe0e Sets a property value with prop as the property key. Properties are named variables attached to an element. Gets a property value with propName as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. tes3uiElement : setPropertyFloat ( propName , value ) Parameters : propName (string): The property name. value (number): The value to set. setPropertyInt \u2693\ufe0e Sets a property value with prop as the property key. Properties are named variables attached to an element. Gets a property value with propName as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. tes3uiElement : setPropertyInt ( propName , value ) Parameters : propName (string): The property name. value (number): The value to set. setPropertyObject \u2693\ufe0e Sets a property value with prop as the property key. Properties are named variables attached to an element. Gets a property value with propName as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. tes3uiElement : setPropertyObject ( propName , value ) Parameters : propName (string): The property name. value (object): The value to set. sortChildren \u2693\ufe0e Reorders the element's children given a sorting function. tes3uiElement : sortChildren ( sortFunction ) Parameters : sortFunction (function): The function to sort with. Like most sorting functions, this is given two arguments to compare. triggerEvent \u2693\ufe0e Triggers a UI event on an element, either using supplied event data, or by constructing new event data using eventName . eventName is the same as used in register . tes3uiElement : triggerEvent ( eventID ) Parameters : eventID (tes3uiEvent, string): The event, or event ID. unregister \u2693\ufe0e Unregisters an event handler. local wasUnregistered = tes3uiElement : unregister ( eventID ) Parameters : eventID (string): The event id. Returns : wasUnregistered (boolean) unregisterAfter \u2693\ufe0e Unregisters a function previously registered using :registerAfter . local wasUnregistered = tes3uiElement : unregisterAfter ( eventID , callback ) Parameters : eventID (string): The event id. callback (function): The callback function. Returns : wasUnregistered (boolean) unregisterBefore \u2693\ufe0e Unregisters a function previously registered using :registerBefore . local wasUnregistered = tes3uiElement : unregisterBefore ( eventID , callback ) Parameters : eventID (string): The event id. callback (function): The callback function. Returns : wasUnregistered (boolean) updateLayout \u2693\ufe0e Updates a menu's element layout and all child elements. Needs to be called on a top level menu when any elements contained in it are added, moved or resized. tes3uiElement : updateLayout ()","title":"tes3uiElement"},{"location":"types/tes3uiElement/#tes3uielement","text":"A UI element, the main building block of the UI system. All elements are created with methods on a parent Element. Elements are very configurable, and have many HTML-like layout features. All layout properties can be set to nil to reset them to the default value, which will deactivate any related layout mode. Elements can have custom data attached using their Property _ key-value store, and specific Elements have specific element.widget accessors to control behaviour.","title":"tes3uiElement"},{"location":"types/tes3uiElement/#properties","text":"","title":"Properties"},{"location":"types/tes3uiElement/#absoluteposalignx","text":"Sets element position to a point relative to the parent element. 0.0 = left/top content edge, 1.0 = right/bottom content edge. The positioning is absolute, which frees the element from the standard flow layout and allows overlapping elements. Bug note: Elements may not respond to widthProportional/heightProportional sizing after either of these properties are set. If you need to use both you should consider testing if it works first. Returns : result (number)","title":"absolutePosAlignX"},{"location":"types/tes3uiElement/#absoluteposaligny","text":"See absolutePosAlignX. Returns : result (number)","title":"absolutePosAlignY"},{"location":"types/tes3uiElement/#alpha","text":"Element alpha colour, using range [0.0, 1.0]. Used to composite elements. If you wish to hide an element completely, use disable instead. Returns : result (number)","title":"alpha"},{"location":"types/tes3uiElement/#autoheight","text":"When true , automatically expands element dimensions to fit child elements. Dimensions are restricted by minWidth , minHeight , maxWidth and maxHeight properties. Returns : result (boolean)","title":"autoHeight"},{"location":"types/tes3uiElement/#autowidth","text":"When true , automatically expands element dimensions to fit child elements. Dimensions are restricted by minWidth , minHeight , maxWidth and maxHeight properties. Returns : result (boolean)","title":"autoWidth"},{"location":"types/tes3uiElement/#borderallsides","text":"Integer number. Border size in pixels. Border is the extra empty space around an element. Individual border sizes default to using the borderAllSides setting. Returns : result (number)","title":"borderAllSides"},{"location":"types/tes3uiElement/#borderbottom","text":"Integer number. Bottom border size in pixels. When this is set to -1 , the borderAllSides setting is used for this side instead. Returns : result (number)","title":"borderBottom"},{"location":"types/tes3uiElement/#borderleft","text":"Integer number. Left border size in pixels. When this is set to -1 , the borderAllSides setting is used for this side instead. Returns : result (number)","title":"borderLeft"},{"location":"types/tes3uiElement/#borderright","text":"Integer number. Left border size in pixels. When this is set to -1 , the borderAllSides setting is used for this side instead. Returns : result (number)","title":"borderRight"},{"location":"types/tes3uiElement/#bordertop","text":"Integer number. Top border size in pixels. When this is set to -1 , the borderAllSides setting is used for this side instead. Returns : result (number)","title":"borderTop"},{"location":"types/tes3uiElement/#childalignx","text":"Sets alignment of child elements inside its parent, though it only works in specific conditions. 0.0 = left/top edge touches left/top edge of parent, 0.5 = centred, 1.0 = right/bottom edge touches right/bottom edge of parent. For negative values, there is a special case behaviour: all children but the last will be left-aligned/top-aligned, the last child will be right-aligned/bottom-aligned. Child alignment only works if the element has proportional sizing (using widthProportional/heightProportional) and all children use non-proportional sizing (widthProportional and heightProportional are nil). Returns : result (number)","title":"childAlignX"},{"location":"types/tes3uiElement/#childaligny","text":"See childAlignX. Returns : result (number)","title":"childAlignY"},{"location":"types/tes3uiElement/#childoffsetx","text":"Integer number. View offset in pixels, applied to the position of child nodes. Used in scroll panes. Returns : result (number)","title":"childOffsetX"},{"location":"types/tes3uiElement/#childoffsety","text":"See childOffsetX. Returns : result (number)","title":"childOffsetY"},{"location":"types/tes3uiElement/#children","text":"Read-only . A table containing references to child elements. This is a copy that does not track changes. Returns : result (table)","title":"children"},{"location":"types/tes3uiElement/#color","text":"Element RGB colour, an array of 3 floats with value range [0.0, 1.0]. For menus and rects, it sets the background colour. For text, it sets the text colour. For images, it multiplies the image by the colour. Returns : result (table)","title":"color"},{"location":"types/tes3uiElement/#consumemouseevents","text":"When true , mouse events over this element are sent to event handlers, or discarded if there is no handler. When false , mouse events go upwards to the first ancestor that can consume mouse events. Useful to set on widget sub-elements. true by default. Returns : result (boolean)","title":"consumeMouseEvents"},{"location":"types/tes3uiElement/#disabled","text":"Disables user actions on this element. Widgets may stop accepting mouse and keyboard input while disabled. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3uiElement/#flowdirection","text":"Can have values \"left_to_right\" or \"top_to_bottom\" . These values are available as tes3.flowDirection enumeration. Indicates which direction child elements are laid out. Returns : result (string)","title":"flowDirection"},{"location":"types/tes3uiElement/#font","text":"Index of font to use for text. 0 - Magic Cards (default) 1 - Century Sans 2 - Daedric Returns : result (number)","title":"font"},{"location":"types/tes3uiElement/#height","text":"Element dimensions in pixels. Integer number. Returns : result (number)","title":"height"},{"location":"types/tes3uiElement/#heightproportional","text":"Sets element dimensions using a proportional sizer. The sizer starts with the parent dimension in the flow direction, subtracts any fixed dimension children leaving the proportional sizer space. Each proportionally sized element then gets an equal division of the space, multiplied by this member. Values above 1.0 are permissible. Bug note: If widthProportional is used without heightProportional, an element may not respond to changes in parent size. It is recommended to set heightProportional, or have a fixed size sibling element if dynamic reflow is required. Overrides fixed, minimum and maximum sizes unless this value is `nil` (default). Returns : result (boolean)","title":"heightProportional"},{"location":"types/tes3uiElement/#id","text":"Read-only . The element's ID. The element can be later accessed by ancestor:findChild(id) . Note that multiple elements may have the same ID, such as subparts of a widget, or list items. Therefore, you may think of ids as an element class identifier. Returns : result (number)","title":"id"},{"location":"types/tes3uiElement/#imagescalex","text":"Image scaling multipliers. Only applies to image elements. Returns : result (number)","title":"imageScaleX"},{"location":"types/tes3uiElement/#imagescaley","text":"Image scaling multipliers. Only applies to image elements. Returns : result (number)","title":"imageScaleY"},{"location":"types/tes3uiElement/#justifytext","text":"Can have values \"left\" , \"center\" , or \"right\" . Controls text justification. These values are available as tes3.justifyText enumeration. To work correctly for center/right justification, wrapText must be true . Returns : result (string)","title":"justifyText"},{"location":"types/tes3uiElement/#maxheight","text":"Maximum dimensions for auto-size layout and resizable frames. Integer number. Returns : result (number)","title":"maxHeight"},{"location":"types/tes3uiElement/#maxwidth","text":"Maximum dimensions for auto-size layout and resizable frames. Integer number. Returns : result (number)","title":"maxWidth"},{"location":"types/tes3uiElement/#minheight","text":"Minimum dimensions for auto-size layout and resizable frames. Integer number. Returns : result (number)","title":"minHeight"},{"location":"types/tes3uiElement/#minwidth","text":"Minimum dimensions for auto-size layout and resizable frames. Integer number. Returns : result (number)","title":"minWidth"},{"location":"types/tes3uiElement/#name","text":"Read-only . The element's name, taken from the name registered for the ID. Returns : result (string)","title":"name"},{"location":"types/tes3uiElement/#paddingallsides","text":"Integer number. Padding size in pixels. Padding is the blank space between the edge of an element and its contents. Individual padding sizes default to -1 , making it use the paddingAllSides setting. Returns : result (number)","title":"paddingAllSides"},{"location":"types/tes3uiElement/#paddingbottom","text":"Integer number. Bottom padding size in pixels. When this is set to -1 , the paddingAllSides setting is used for this side instead. Returns : result (number)","title":"paddingBottom"},{"location":"types/tes3uiElement/#paddingleft","text":"Integer number. Left padding size in pixels. When this is set to -1 , the paddingAllSides setting is used for this side instead. Returns : result (number)","title":"paddingLeft"},{"location":"types/tes3uiElement/#paddingright","text":"Integer number. Right padding size in pixels. When this is set to -1 , the paddingAllSides setting is used for this side instead. Returns : result (number)","title":"paddingRight"},{"location":"types/tes3uiElement/#paddingtop","text":"Integer number. Top padding size in pixels. When this is set to -1 , the paddingAllSides setting is used for this side instead. Returns : result (number)","title":"paddingTop"},{"location":"types/tes3uiElement/#parent","text":"Read-only . A reference to the parent element. Returns : result ( tes3uiElement )","title":"parent"},{"location":"types/tes3uiElement/#positionx","text":"Integer number. Element X position relative to its parent's top-left content area. For top-level menus there is a difference: (0, 0) is the centre of the screen. Returns : result (number)","title":"positionX"},{"location":"types/tes3uiElement/#positiony","text":"Integer number. Element Y position relative to its parent's top-left content area. For top-level menus there is a difference: (0, 0) is the centre of the screen. Returns : result (number)","title":"positionY"},{"location":"types/tes3uiElement/#rawtext","text":"The raw value of the element's text. This, unlike the normal text property, will not directly read widget information or handle the removal of the positional cursor. Returns : result (string)","title":"rawText"},{"location":"types/tes3uiElement/#repeatkeys","text":"Controls if there is repeating text input when keys are held down. true by default. Returns : result (boolean)","title":"repeatKeys"},{"location":"types/tes3uiElement/#scalemode","text":"When set to true on image and NIF elements, they are scaled to fit width and height . Returns : result (boolean)","title":"scaleMode"},{"location":"types/tes3uiElement/#text","text":"The element's text. Text input can be read by accessing this property. Returns : result (string)","title":"text"},{"location":"types/tes3uiElement/#visible","text":"Controls if the element is visible. Returns : result (boolean)","title":"visible"},{"location":"types/tes3uiElement/#widget","text":"Access to custom properties specific to a widget. These properties are documented in the widget create* function descriptions. Returns : result (table)","title":"widget"},{"location":"types/tes3uiElement/#width","text":"Element dimensions in pixels. Integer number. Returns : result (number)","title":"width"},{"location":"types/tes3uiElement/#widthproportional","text":"Sets element dimensions using a proportional sizer. The sizer starts with the parent dimension in the flow direction, subtracts any fixed dimension children leaving the proportional sizer space. Each proportionally sized element then gets an equal division of the space, multiplied by this member. Values above 1.0 are permissible. Bug note: If widthProportional is used without heightProportional, an element may not respond to changes in parent size. It is recommended to set heightProportional, or have a fixed size sibling element if dynamic reflow is required. Overrides fixed, minimum and maximum sizes unless this value is `nil` (default). Returns : result (boolean)","title":"widthProportional"},{"location":"types/tes3uiElement/#wraptext","text":"Controls text wrapping. Setting this to true will also set layoutHeightFraction to 1.0 , which is required for wrapping text to adjust to its container size. Returns : result (boolean)","title":"wrapText"},{"location":"types/tes3uiElement/#methods","text":"","title":"Methods"},{"location":"types/tes3uiElement/#createblock","text":"Creates an empty block container inside the element. Used to group and layout elements. local result = tes3uiElement : createBlock ( id ) Parameters : id (number): Optional . A registered identifier to help find this element later. Returns : result ( tes3uiElement )","title":"createBlock"},{"location":"types/tes3uiElement/#createbutton","text":"Creates a clickable button. Register the mouseClick event to capture a button press. Custom widget properties: | `number`_ `element.widget.state`: Interaction state. 1 = normal, 2 = disabled, 4 = active. Controls which colour set to use for text. | `table`_ (float[3]) `element.widget.idle`: Text colour for normal state, no mouse interaction. | `table`_ (float[3]) `element.widget.over`: Text colour for normal state, on mouseOver. | `table`_ (float[3]) `element.widget.pressed`: Text colour for normal state, on mouseDown. | `table`_ (float[3]) `element.widget.idleDisabled`: Text colour for disabled state, no mouse interaction. | `table`_ (float[3]) `element.widget.overDisabled`: Text colour for disabled state, on mouseOver. | `table`_ (float[3]) `element.widget.pressedDisabled`: Text colour for disabled state, on mouseDown. | `table`_ (float[3]) `element.widget.idleActive`: Text colour for active state, no mouse interaction. | `table`_ (float[3]) `element.widget.overActive`: Text colour for active state, on mouseOver. | `table`_ (float[3]) `element.widget.pressedActive`: Text colour for active state, on mouseDown. local result = tes3uiElement : createButton ( id ) Parameters : id (number): Optional . A registered identifier to help find this element later. Returns : result ( tes3uiElement )","title":"createButton"},{"location":"types/tes3uiElement/#createdivider","text":"Creates a textured horizontal divider line, as used in the magic and stat menus. Scales automatically to the container width. local result = tes3uiElement : createDivider ( id ) Parameters : id (number): Optional . A registered identifier to help find this element later. Returns : result ( tes3uiElement )","title":"createDivider"},{"location":"types/tes3uiElement/#createfillbar","text":"Creates a horizontal quantity indicator bar. Custom widget properties: | `number`_ (integer) `element.widget.current`: Current (filled) value. | `number`_ (integer) `element.widget.max`: Maximum value. | `boolean`_ `element.widget.showText`: If text of the format \"current/max\" is shown. Default is `true`. | `table`_ (float[3]) `element.widget.fillColor`: Colour of filled area. | `number`_ (float) `element.widget.fillAlpha`: Alpha transparency of filled area. local result = tes3uiElement : createFillBar ( id , current , max ) Parameters : id (number): Optional . A registered identifier to help find this element later. current (number): Optional . The initial current value. max (number): Optional . The initial maximum value. Returns : result ( tes3uiElement )","title":"createFillBar"},{"location":"types/tes3uiElement/#createhorizontalscrollpane","text":"Creates a horizontally scrolling pane. Custom widget properties: | `number`_ `element.widget.positionX`: Horizontal scroll offset in pixels. | `boolean`_ `element.widget.scrollbarVisible`: Set if the scrollbar is displayed. Custom widget methods: | `element.widget:contentsChanged()`: Call to update scroll bar slider and limits after adding or removing elements to the content container. Because content size depends on layout, this must be run after a menu:updateLayout(). Only required if the content size changes. local result = tes3uiElement : createHorizontalScrollPane ( id ) Parameters : id (number): Optional . A registered identifier to help find this element later. Returns : result ( tes3uiElement )","title":"createHorizontalScrollPane"},{"location":"types/tes3uiElement/#createhypertext","text":"Creates a text area with clickable words as links. Usage is still under research. local result = tes3uiElement : createHypertext ( id ) Parameters : id (number): Optional . A registered identifier to help find this element later. Returns : result ( tes3uiElement )","title":"createHypertext"},{"location":"types/tes3uiElement/#createimage","text":"Creates an image element from a texture file. The texture must have power-of-2 dimensions (i.e. 16, 32, 64, 128, 256, 512, 1024); the final display size can be trimmed by setting width and height. local result = tes3uiElement : createImage ( id , path ) Parameters : id (number): Optional . A registered identifier to help find this element later. path (string): An image path. This path is relative to Data Files . Returns : result ( tes3uiElement )","title":"createImage"},{"location":"types/tes3uiElement/#createimagebutton","text":"Creates an interactive button composed of images for the idle , over , and pressed states. The texture must have power-of-2 dimensions (i.e. 16, 32, 64, 128, 256, 512, 1024); the final display size can be trimmed by setting width and height. local result = tes3uiElement : createImageButton ( id , idle , over , path ) Parameters : id (number): Optional . A registered identifier to help find this element later. idle (string): The path to the idle image. This path is relative to Data Files . over (string): The path to the mouse hover image. This path is relative to Data Files . path (string): The path to the mouse pressed image. This path is relative to Data Files . Returns : result ( tes3uiElement )","title":"createImageButton"},{"location":"types/tes3uiElement/#createlabel","text":"Creates a text label. It defaults to displaying all text on a single line. To get a multi-line label, set wrap_text to true . The element is created with autoWidth and autoHeight turned on. local result = tes3uiElement : createLabel ( id , text ) Parameters : id (number): Optional . A registered identifier to help find this element later. text (string): The text to display. Returns : result ( tes3uiElement )","title":"createLabel"},{"location":"types/tes3uiElement/#createnif","text":"Creates a NIF model from a file. Still under research. local result = tes3uiElement : createNif ( id , text ) Parameters : id (number): Optional . A registered identifier to help find this element later. text (string): A model path. This path is relative to Data Files . Returns : result ( tes3uiElement )","title":"createNif"},{"location":"types/tes3uiElement/#createparagraphinput","text":"Creates a multi-line text input element, with line wrapping on. To receive input the keyboard must be captured with tes3ui.acquireTextInput(element) . Read the input with the text property. Write an initial value to edit by setting the text property. Custom widget properties: | `number`_ (integer) `element.widget.lengthLimit`: Maximum input length. Default is `1023`. local result = tes3uiElement : createParagraphInput ( id ) Parameters : id (number): Optional . A registered identifier to help find this element later. Returns : result ( tes3uiElement )","title":"createParagraphInput"},{"location":"types/tes3uiElement/#createrect","text":"Creates a filled rectangle. The rectangle is displayed as filled with the element's colour. It supports alpha compositing. local result = tes3uiElement : createRect ( id , color ) Parameters : id (number): Optional . A registered identifier to help find this element later. color (table): Optional . The fill colour for the element. Returns : result ( tes3uiElement )","title":"createRect"},{"location":"types/tes3uiElement/#createslider","text":"Creates a horizontal slider. Custom widget properties: | `number`_ (integer) `element.widget.current`: Current value. | `number`_ (integer) `element.widget.max`: Maximum value. | `number`_ (integer) `element.widget.step`: Amount changed by left and right arrow buttons. | `number`_ (integer) `element.widget.jump`: Amount changed by clicking inside the slider area. Custom events used with register: | `\"PartScrollBar_changed\"`: Triggers on value change; moving the slider is not enough if the value is the same. local result = tes3uiElement : createSlider ( id , current , max , step , jump ) Parameters : id (number): Optional . A registered identifier to help find this element later. current (number): The initial value for the slider. max (number): The maximum value for the slider. step (number): Optional . Amount changed by left and right arrow buttons. jump (number): Optional . Amount changed by clicking inside the slider area. Returns : result ( tes3uiElement )","title":"createSlider"},{"location":"types/tes3uiElement/#createslidervertical","text":"Creates a vertical slider. Custom widget properties: | `number`_ (integer) `element.widget.current`: Current value. | `number`_ (integer) `element.widget.max`: Maximum value. | `number`_ (integer) `element.widget.step`: Amount changed by up and down arrow buttons. | `number`_ (integer) `element.widget.jump`: Amount changed by clicking inside the slider area. Custom events used with register: | `\"PartScrollBar_changed\"`: Triggers on value change; moving the slider is not enough if the value is the same. local result = tes3uiElement : createSliderVertical ( id , current , max , step , jump ) Parameters : id (number): Optional . A registered identifier to help find this element later. current (number): The initial value for the slider. max (number): The maximum value for the slider. step (number): Optional . Amount changed by left and right arrow buttons. The default is 1. jump (number): Optional . Amount changed by clicking inside the slider area. The default is 5. Returns : result ( tes3uiElement )","title":"createSliderVertical"},{"location":"types/tes3uiElement/#createtextinput","text":"Creates a single line text input element. To receive input the keyboard must be captured with tes3ui.acquireTextInput(element) . Read the input with the text property. Write an initial value to display by setting the text property; that value will be cleared on the first keypress. Custom widget properties: | `boolean`_ `element.widget.eraseOnFirstKey`: Clears the initial value if the first keypress is not an edit action. Default is `true`. | `number`_ (integer) `element.widget.lengthLimit\"`: Maximum input length, or `nil` for no limit. If you are setting names, the engine limits most identifiers to 31 characters. Default is `nil`. local result = tes3uiElement : createTextInput ( id ) Parameters : id (number): Optional . A registered identifier to help find this element later. Returns : result ( tes3uiElement )","title":"createTextInput"},{"location":"types/tes3uiElement/#createtextselect","text":"Creates a selectable line of text, with configurable hover, click, and disabled colours. Can be used to create a list box by placing them in a ScrollPane. state sets the initial interaction state. local result = tes3uiElement : createTextSelect ( id , text , state ) Parameters : id (number): Optional . A registered identifier to help find this element later. text (string): Optional . The text to display. state (number): Optional . The initial interaction state. Defaults to normal. Returns : result (tes3uiWidgetTextSelect)","title":"createTextSelect"},{"location":"types/tes3uiElement/#createthinborder","text":"Creates a styled thin border element. Any content should be created as children of this border. local result = tes3uiElement : createThinBorder ( id ) Parameters : id (number): Optional . A registered identifier to help find this element later. Returns : result ( tes3uiElement )","title":"createThinBorder"},{"location":"types/tes3uiElement/#createverticalscrollpane","text":"Creates a vertically scrolling pane. Useful as a list box. Custom widget properties: | `number`_ `element.widget.positionY`: Vertical scroll offset in pixels. | `boolean`_ `element.widget.scrollbarVisible`: Set if the scrollbar is displayed. Custom widget methods: | `element.widget:contentsChanged()`: Call to update scroll bar slider and limits after adding or removing elements to the content container. Because content size depends on layout, this must be run after a menu:updateLayout(). Only required if the content size changes. local result = tes3uiElement : createVerticalScrollPane ( id ) Parameters : id (number): Optional . A registered identifier to help find this element later. Returns : result ( tes3uiElement )","title":"createVerticalScrollPane"},{"location":"types/tes3uiElement/#destroy","text":"Deletes an element and all its child elements. If any element is bound to text input by tes3ui.acquireTextInput _, the input is automatically released. tes3uiElement : destroy ()","title":"destroy"},{"location":"types/tes3uiElement/#destroychildren","text":"Deletes all the child elements of this element. If any element is bound to text input by tes3ui.acquireTextInput _, the input is automatically released. tes3uiElement : destroyChildren ()","title":"destroyChildren"},{"location":"types/tes3uiElement/#findchild","text":"Finds a child element matching the id argument. Searches children recursively. Returns the first child element with a matching id, or nil if no match found. local result = tes3uiElement : findChild ( id ) Parameters : id (number): The id to search for. Returns : result ( tes3uiElement )","title":"findChild"},{"location":"types/tes3uiElement/#forwardevent","text":"Forwards an event to the original Morrowind event handler, using this element as a source. This may be optionally called at any point in a callback. Note that handler may or may not destroy the event widget or the menu, so you should know how it behaves before accessing any elements after a callback. tes3uiElement : forwardEvent ( id ) Parameters : id (tes3uiEvent): The original UI event.","title":"forwardEvent"},{"location":"types/tes3uiElement/#getcontentelement","text":"Returns the descendant element that creation functions used on this element will place children into, or the calling element if there is no specific descendant for children. Some widgets like ScrollPanes are built of multiple layers of elements. When an element is created in a complex widget, it is automatically placed as a child of a content element, but other functions do not access this content element directly. This function finds this content container for any element, so that changing layout and accessing children is possible. For simple elements, the calling element will be returned so that there is always a valid container element. local result = tes3uiElement : getContentElement () Returns : result ( tes3uiElement )","title":"getContentElement"},{"location":"types/tes3uiElement/#getpropertybool","text":"Properties are named variables attached to an element. Gets a property value with propName as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. Returns false if the property key did not have data. local result = tes3uiElement : getPropertyBool ( propName ) Parameters : propName (string): The property name. Returns : result (boolean)","title":"getPropertyBool"},{"location":"types/tes3uiElement/#getpropertyfloat","text":"Properties are named variables attached to an element. Gets a property value with propName as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. Returns 0 if the property key did not have data. local result = tes3uiElement : getPropertyFloat ( propName ) Parameters : propName (string): The property name. Returns : result (number)","title":"getPropertyFloat"},{"location":"types/tes3uiElement/#getpropertyint","text":"Properties are named variables attached to an element. Gets a property value with propName as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. Returns 0 if the property key did not have data. local result = tes3uiElement : getPropertyInt ( propName ) Parameters : propName (string): The property name. Returns : result (number)","title":"getPropertyInt"},{"location":"types/tes3uiElement/#getpropertyobject","text":"Properties are named variables attached to an element. Gets a property value with propName as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. Returns nil if the property key did not have data, or if it could not guess the type of the property value. For `getPropertyObject`, an expected return value not derived from `tes3baseObject` requires the usertype to be provided as well. Currently accepted usertypes are: `tes3itemData` `tes3itemStack` `tes3gameFile` `tes3inventoryTile` `tes3uiElement` This is required because there is no identifying type information stored with the pointer. If the usertype is incorrect, there are no safety checks keeping the game from crashing. local result = tes3uiElement : getPropertyObject ( propName , expectedUsertype ) Parameters : propName (string): The property name. expectedUsertype (string): Optional . A Lua usertype name, if expecting a non-standard object type. Returns : result ( tes3baseObject , tes3mobileObject , any)","title":"getPropertyObject"},{"location":"types/tes3uiElement/#gettoplevelmenu","text":"Finds the parent menu containing the element. Useful for finding the correct menu to run layout updates on. local result = tes3uiElement : getTopLevelMenu () Returns : result ( tes3uiElement )","title":"getTopLevelMenu"},{"location":"types/tes3uiElement/#loadmenuposition","text":"Restores the menu's position and size information from the Morrowind.ini file. This may only be called on top-level parents. tes3uiElement : loadMenuPosition ()","title":"loadMenuPosition"},{"location":"types/tes3uiElement/#register","text":"Sets an event handler, which can add or override an existing event handler. The use of registerBefore or registerAfter is recommended if you do not want to replace the existing event handler. The eventID can be a standard event name, or an event specific to an element class. The callback receives an argument with the event data. See below for details. The original Morrowind callback is captured and can be invoked with the forwardEvent method on the event argument. If there is an existing Lua callback, it is replaced. Lua UI event specification: Events can be bound to elements via the Element _ register method, which takes an event name. Event names can be one of the standard events listed here, or a widget-specific event. Standard events: mouseLeave Mouse cursor moving outside an element. Triggers once. mouseOver Mouse cursor moving over an element. Triggers once. mouseDown Left mouse button down over an element. mouseClick Left mouse button up over an element, after a mouseDown over the element. mouseScrollUp .. mouseScrollDown Mouse wheel scrolling. mouseDoubleClick Standard double-click. mouseStillIdle Mouse cursor positioned outside an element. Triggers every frame. mouseStillOver Mouse cursor positioned over an element. Triggers every frame. mouseStillPressed Mouse cursor positioned over an element, after a mouseDown over the element. Triggers every frame. mouseStillPressedOutside Apparently not working in the engine. Mouse cursor positioned outside an element, after a mouseDown over the element. Triggers every frame. mouseRelease Left mouse button up over an element. keyPress A raw key press. keyEnter The Return key is pressed. help On mouseover, but also marking the element as having a tooltip. Create a tooltip within the callback using the tes3ui.createTooltipMenu _ function. focus When a menu is clicked on, and moved on top of other menus. unfocus Just before another menu is clicked on, or a widget in that menu receives an event, or when the menu mode is toggled off. You may return false from this event to prevent the menu from being deselected, and to prevent leaving menu mode. preUpdate Before the menu layout is updated. update After the menu layout is updated. destroy When the UI element is destroyed, before any data or children are destroyed. Widget-specific events To be documented.","title":"register"},{"location":"types/tes3uiElement/#event-forwarding","text":"The original Morrowind event handler is saved when you first register an event. It may be optionally invoked with the forwardEvent method. Note that handler may or may not destroy the event widget or the menu, so you should know how it behaves before accessing any elements after a callback. Example .. code-block:: lua local function onClick(e) -- pre-event code e.source:forwardEvent(e) -- post-event code end local button = menu:findChild(\"MenuExample_Ok\") button:register(\"mouseClick\", onClick)","title":"Event forwarding"},{"location":"types/tes3uiElement/#event-handler","text":"The standard type signature for events. boolean _ eventHandler( EventData e) Returns: optional Returning false may cancel an interaction for certain events. e.g. unfocus EventData: **source** (`Element`_) The source element of the event. **id** (`number`_) The numeric id of the event type. **widget** (`Element`_) The widget element that the source belongs to, if the element is a sub-part of a widget. May not be accurate if the element is not a sub-part. **data0** (`number`_) .. **data1** (`number`_) Event-specific raw data values. For mouse events, these are the screen X and Y coordinates of the pointer. For keyboard events, data0 is the `scan code`_. **relativeX** (`number`_) .. **relativeY** (`number`_) For mouse events only. X and Y coordinates of the pointer relative to the top-left of the element. tes3uiElement : register ( eventID , callback ) Parameters : eventID (string): The event id. callback (function): The callback function.","title":"Event handler"},{"location":"types/tes3uiElement/#registerafter","text":"Sets an event handler to run after any existing event handler on the element. Can be any event usable with register . The callback receives an argument with the event data. See register for details. tes3uiElement : registerAfter ( eventID , callback ) Parameters : eventID (string): The event id. callback (function): The callback function.","title":"registerAfter"},{"location":"types/tes3uiElement/#registerbefore","text":"Sets an event handler to run before any existing event handler on the element. Can be any event usable with register . The callback receives an argument with the event data. See register for details. tes3uiElement : registerBefore ( eventID , callback ) Parameters : eventID (string): The event id. callback (function): The callback function.","title":"registerBefore"},{"location":"types/tes3uiElement/#reorderchildren","text":"Moves the layout order of the children of this element. `count` elements are taken from starting child `Element`_ or index (0-based) `moveFrom`, and moved before the child `Element`_ or index (0-based) `insertBefore`. If `count` is -1, all children after `moveFrom` are moved. If any index is a negative number, then the index represents a distance from the end of the child list. Returns `true` if the operation succeeded, or `false` if at least one argument was invalid. local result = tes3uiElement : reorderChildren ( insertBefore , moveFrom , count ) Parameters : insertBefore ( tes3uiElement , number): The insertion point (or its 0-based child index). moveFrom ( tes3uiElement , number): The first child (or 0-based child index) to be moved. count (number): The property name. Returns : result (boolean)","title":"reorderChildren"},{"location":"types/tes3uiElement/#savemenuposition","text":"Saves the menu's position and size information to the Morrowind.ini file. This may only be called on top-level parents. Note that most menus save their position automatically. tes3uiElement : saveMenuPosition ()","title":"saveMenuPosition"},{"location":"types/tes3uiElement/#setpropertybool","text":"Sets a property value with prop as the property key. Properties are named variables attached to an element. Gets a property value with propName as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. tes3uiElement : setPropertyBool ( propName , value ) Parameters : propName (string): The property name. value (boolean): The value to set.","title":"setPropertyBool"},{"location":"types/tes3uiElement/#setpropertyfloat","text":"Sets a property value with prop as the property key. Properties are named variables attached to an element. Gets a property value with propName as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. tes3uiElement : setPropertyFloat ( propName , value ) Parameters : propName (string): The property name. value (number): The value to set.","title":"setPropertyFloat"},{"location":"types/tes3uiElement/#setpropertyint","text":"Sets a property value with prop as the property key. Properties are named variables attached to an element. Gets a property value with propName as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. tes3uiElement : setPropertyInt ( propName , value ) Parameters : propName (string): The property name. value (number): The value to set.","title":"setPropertyInt"},{"location":"types/tes3uiElement/#setpropertyobject","text":"Sets a property value with prop as the property key. Properties are named variables attached to an element. Gets a property value with propName as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. tes3uiElement : setPropertyObject ( propName , value ) Parameters : propName (string): The property name. value (object): The value to set.","title":"setPropertyObject"},{"location":"types/tes3uiElement/#sortchildren","text":"Reorders the element's children given a sorting function. tes3uiElement : sortChildren ( sortFunction ) Parameters : sortFunction (function): The function to sort with. Like most sorting functions, this is given two arguments to compare.","title":"sortChildren"},{"location":"types/tes3uiElement/#triggerevent","text":"Triggers a UI event on an element, either using supplied event data, or by constructing new event data using eventName . eventName is the same as used in register . tes3uiElement : triggerEvent ( eventID ) Parameters : eventID (tes3uiEvent, string): The event, or event ID.","title":"triggerEvent"},{"location":"types/tes3uiElement/#unregister","text":"Unregisters an event handler. local wasUnregistered = tes3uiElement : unregister ( eventID ) Parameters : eventID (string): The event id. Returns : wasUnregistered (boolean)","title":"unregister"},{"location":"types/tes3uiElement/#unregisterafter","text":"Unregisters a function previously registered using :registerAfter . local wasUnregistered = tes3uiElement : unregisterAfter ( eventID , callback ) Parameters : eventID (string): The event id. callback (function): The callback function. Returns : wasUnregistered (boolean)","title":"unregisterAfter"},{"location":"types/tes3uiElement/#unregisterbefore","text":"Unregisters a function previously registered using :registerBefore . local wasUnregistered = tes3uiElement : unregisterBefore ( eventID , callback ) Parameters : eventID (string): The event id. callback (function): The callback function. Returns : wasUnregistered (boolean)","title":"unregisterBefore"},{"location":"types/tes3uiElement/#updatelayout","text":"Updates a menu's element layout and all child elements. Needs to be called on a top level menu when any elements contained in it are added, moved or resized. tes3uiElement : updateLayout ()","title":"updateLayout"},{"location":"types/tes3uiEventData/","text":"tes3uiEventData \u2693\ufe0e Contains information from a standard UI callback. This is the parameter passed to callbacks when using :register , :registerBefore , or :registerAfter . Properties \u2693\ufe0e forwardSource \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3uiElement ) id \u2693\ufe0e Read-only . The ID of the event that is being triggered. Returns : result (number) relativeX \u2693\ufe0e Read-only . For mouse-related events, this is the relative horizontal position for the current element. Returns : result (number, nil) relativeY \u2693\ufe0e Read-only . For mouse-related events, this is the relative vertical position for the current element. Returns : result (number, nil) source \u2693\ufe0e Read-only . The element that owns the event. Returns : result ( tes3uiElement ) widget \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3uiElement )","title":"tes3uiEventData"},{"location":"types/tes3uiEventData/#tes3uieventdata","text":"Contains information from a standard UI callback. This is the parameter passed to callbacks when using :register , :registerBefore , or :registerAfter .","title":"tes3uiEventData"},{"location":"types/tes3uiEventData/#properties","text":"","title":"Properties"},{"location":"types/tes3uiEventData/#forwardsource","text":"Read-only . No description yet available. Returns : result ( tes3uiElement )","title":"forwardSource"},{"location":"types/tes3uiEventData/#id","text":"Read-only . The ID of the event that is being triggered. Returns : result (number)","title":"id"},{"location":"types/tes3uiEventData/#relativex","text":"Read-only . For mouse-related events, this is the relative horizontal position for the current element. Returns : result (number, nil)","title":"relativeX"},{"location":"types/tes3uiEventData/#relativey","text":"Read-only . For mouse-related events, this is the relative vertical position for the current element. Returns : result (number, nil)","title":"relativeY"},{"location":"types/tes3uiEventData/#source","text":"Read-only . The element that owns the event. Returns : result ( tes3uiElement )","title":"source"},{"location":"types/tes3uiEventData/#widget","text":"Read-only . No description yet available. Returns : result ( tes3uiElement )","title":"widget"},{"location":"types/tes3uiFontColor/","text":"tes3uiFontColor \u2693\ufe0e Contains color information of a font. Properties \u2693\ufe0e b \u2693\ufe0e Blue colour value, in range [0.0, 1.0]. Returns : result (number) g \u2693\ufe0e Green colour value, in range [0.0, 1.0]. Returns : result (number) r \u2693\ufe0e Red colour value, in range [0.0, 1.0]. Returns : result (number)","title":"tes3uiFontColor"},{"location":"types/tes3uiFontColor/#tes3uifontcolor","text":"Contains color information of a font.","title":"tes3uiFontColor"},{"location":"types/tes3uiFontColor/#properties","text":"","title":"Properties"},{"location":"types/tes3uiFontColor/#b","text":"Blue colour value, in range [0.0, 1.0]. Returns : result (number)","title":"b"},{"location":"types/tes3uiFontColor/#g","text":"Green colour value, in range [0.0, 1.0]. Returns : result (number)","title":"g"},{"location":"types/tes3uiFontColor/#r","text":"Red colour value, in range [0.0, 1.0]. Returns : result (number)","title":"r"},{"location":"types/tes3uiMenuController/","text":"tes3uiMenuController \u2693\ufe0e The controller responsible for the menu system. Properties \u2693\ufe0e fontColors \u2693\ufe0e Read-only . A 1-indexed table with 49 tes3uiFontColor objects for all different in-game uses for fonts. Namely: normal, normal_over, normal_pressed, active, active_over, active_pressed, disabled, disabled_over, disabled_pressed, link, link_over, link_pressed, journal, journal_over, journal_pressed, journal_topic, journal_topic_over, journal_topic_pressed, journal_finished_quest_topic, journal_finished_quest_topic_over, journal_finished_quest_topic_pressed, answer, answer_over, answer_pressed, header, notify, big_normal, big_normal_over, big_normal_pressed, big_link, big_link_over, big_link_pressed, big_answer, big_answer_over, big_answer_pressed, big_header, big_notify, background, focus, npc_health, health, magic, fatigue, misc, weapon_fill, magic_fill, positive, negative, count. Returns : result (table) helpDelay \u2693\ufe0e Read-only . Delay in seconds before help tooltip appears. Corresponds to the Menu Help Delay slider in Options menu. Returns : result (number) helpRoot \u2693\ufe0e Read-only . Returns : result ( tes3uiElement ) inputController \u2693\ufe0e Read-only . Access to tes3uiMenuInputController . Returns : result ( tes3uiMenuInputController ) inventoryMenuEnabled \u2693\ufe0e A flag that controls whether the inventory menu is enabled or disabled. Returns : result (boolean) magicMenuEnabled \u2693\ufe0e A flag that controls whether the magic menu is enabled or disabled. Magic menu is the menu used to select a spell for casting from available spells, scrolls and enchantments. Returns : result (boolean) mainRoot \u2693\ufe0e Read-only . Returns : result ( tes3uiElement ) mapMenuEnabled \u2693\ufe0e A flag that controls whether the map menu is enabled or disabled. Returns : result (boolean) scriptCompiler \u2693\ufe0e Read-only . Access to tes3scriptCompiler object. Returns : result (tes3scriptCompiler) statsMenuEnabled \u2693\ufe0e A flag that controls whether the stats menu is enabled or disabled. Stats menu lists all of the player's current skill and attribute values, level, race, class, health, magicka and fatigue. Returns : result (boolean)","title":"tes3uiMenuController"},{"location":"types/tes3uiMenuController/#tes3uimenucontroller","text":"The controller responsible for the menu system.","title":"tes3uiMenuController"},{"location":"types/tes3uiMenuController/#properties","text":"","title":"Properties"},{"location":"types/tes3uiMenuController/#fontcolors","text":"Read-only . A 1-indexed table with 49 tes3uiFontColor objects for all different in-game uses for fonts. Namely: normal, normal_over, normal_pressed, active, active_over, active_pressed, disabled, disabled_over, disabled_pressed, link, link_over, link_pressed, journal, journal_over, journal_pressed, journal_topic, journal_topic_over, journal_topic_pressed, journal_finished_quest_topic, journal_finished_quest_topic_over, journal_finished_quest_topic_pressed, answer, answer_over, answer_pressed, header, notify, big_normal, big_normal_over, big_normal_pressed, big_link, big_link_over, big_link_pressed, big_answer, big_answer_over, big_answer_pressed, big_header, big_notify, background, focus, npc_health, health, magic, fatigue, misc, weapon_fill, magic_fill, positive, negative, count. Returns : result (table)","title":"fontColors"},{"location":"types/tes3uiMenuController/#helpdelay","text":"Read-only . Delay in seconds before help tooltip appears. Corresponds to the Menu Help Delay slider in Options menu. Returns : result (number)","title":"helpDelay"},{"location":"types/tes3uiMenuController/#helproot","text":"Read-only . Returns : result ( tes3uiElement )","title":"helpRoot"},{"location":"types/tes3uiMenuController/#inputcontroller","text":"Read-only . Access to tes3uiMenuInputController . Returns : result ( tes3uiMenuInputController )","title":"inputController"},{"location":"types/tes3uiMenuController/#inventorymenuenabled","text":"A flag that controls whether the inventory menu is enabled or disabled. Returns : result (boolean)","title":"inventoryMenuEnabled"},{"location":"types/tes3uiMenuController/#magicmenuenabled","text":"A flag that controls whether the magic menu is enabled or disabled. Magic menu is the menu used to select a spell for casting from available spells, scrolls and enchantments. Returns : result (boolean)","title":"magicMenuEnabled"},{"location":"types/tes3uiMenuController/#mainroot","text":"Read-only . Returns : result ( tes3uiElement )","title":"mainRoot"},{"location":"types/tes3uiMenuController/#mapmenuenabled","text":"A flag that controls whether the map menu is enabled or disabled. Returns : result (boolean)","title":"mapMenuEnabled"},{"location":"types/tes3uiMenuController/#scriptcompiler","text":"Read-only . Access to tes3scriptCompiler object. Returns : result (tes3scriptCompiler)","title":"scriptCompiler"},{"location":"types/tes3uiMenuController/#statsmenuenabled","text":"A flag that controls whether the stats menu is enabled or disabled. Stats menu lists all of the player's current skill and attribute values, level, race, class, health, magicka and fatigue. Returns : result (boolean)","title":"statsMenuEnabled"},{"location":"types/tes3uiMenuInputController/","text":"tes3uiMenuInputController \u2693\ufe0e A core came structure responsible for managing the input around menu elements. Properties \u2693\ufe0e lastInputTime \u2693\ufe0e The amount of seconds that have passed since the last time the input was updated. Returns : result (number) menuController \u2693\ufe0e A handle back to the main menu controller. Returns : result ( tes3uiMenuController ) textInputFocus \u2693\ufe0e The element that is currently focused for text input. Returns : result ( tes3uiElement ) Methods \u2693\ufe0e flushBufferedTextEvents \u2693\ufe0e Clears the current text input. If no text has been passed to the current text focus, this will prevent it from doing so. tes3uiMenuInputController : flushBufferedTextEvents ()","title":"tes3uiMenuInputController"},{"location":"types/tes3uiMenuInputController/#tes3uimenuinputcontroller","text":"A core came structure responsible for managing the input around menu elements.","title":"tes3uiMenuInputController"},{"location":"types/tes3uiMenuInputController/#properties","text":"","title":"Properties"},{"location":"types/tes3uiMenuInputController/#lastinputtime","text":"The amount of seconds that have passed since the last time the input was updated. Returns : result (number)","title":"lastInputTime"},{"location":"types/tes3uiMenuInputController/#menucontroller","text":"A handle back to the main menu controller. Returns : result ( tes3uiMenuController )","title":"menuController"},{"location":"types/tes3uiMenuInputController/#textinputfocus","text":"The element that is currently focused for text input. Returns : result ( tes3uiElement )","title":"textInputFocus"},{"location":"types/tes3uiMenuInputController/#methods","text":"","title":"Methods"},{"location":"types/tes3uiMenuInputController/#flushbufferedtextevents","text":"Clears the current text input. If no text has been passed to the current text focus, this will prevent it from doing so. tes3uiMenuInputController : flushBufferedTextEvents ()","title":"flushBufferedTextEvents"},{"location":"types/tes3uiProperty/","text":"tes3uiProperty \u2693\ufe0e Properties \u2693\ufe0e id \u2693\ufe0e UI property's unique ID. Returns : result (string) name \u2693\ufe0e Read-only . The name of this UI property. Returns : result (string) type \u2693\ufe0e Read-only . The type of this UI property. Returns : result (number, property) value \u2693\ufe0e Read-only . The value of this UI property. Returns : result (number, boolean, property)","title":"tes3uiProperty"},{"location":"types/tes3uiProperty/#tes3uiproperty","text":"","title":"tes3uiProperty"},{"location":"types/tes3uiProperty/#properties","text":"","title":"Properties"},{"location":"types/tes3uiProperty/#id","text":"UI property's unique ID. Returns : result (string)","title":"id"},{"location":"types/tes3uiProperty/#name","text":"Read-only . The name of this UI property. Returns : result (string)","title":"name"},{"location":"types/tes3uiProperty/#type","text":"Read-only . The type of this UI property. Returns : result (number, property)","title":"type"},{"location":"types/tes3uiProperty/#value","text":"Read-only . The value of this UI property. Returns : result (number, boolean, property)","title":"value"},{"location":"types/tes3vector2/","text":"tes3vector2 \u2693\ufe0e A simple pair of floating-point numbers. Properties \u2693\ufe0e x \u2693\ufe0e The first value in the vector. Returns : result (number) y \u2693\ufe0e The second value in the vector. Returns : result (number) Methods \u2693\ufe0e copy \u2693\ufe0e Creates a copy of the vector. local result = tes3vector2 : copy () Returns : result ( tes3vector2 ) length \u2693\ufe0e Calculates the length of the vector. local result = tes3vector2 : length () Returns : result (number)","title":"tes3vector2"},{"location":"types/tes3vector2/#tes3vector2","text":"A simple pair of floating-point numbers.","title":"tes3vector2"},{"location":"types/tes3vector2/#properties","text":"","title":"Properties"},{"location":"types/tes3vector2/#x","text":"The first value in the vector. Returns : result (number)","title":"x"},{"location":"types/tes3vector2/#y","text":"The second value in the vector. Returns : result (number)","title":"y"},{"location":"types/tes3vector2/#methods","text":"","title":"Methods"},{"location":"types/tes3vector2/#copy","text":"Creates a copy of the vector. local result = tes3vector2 : copy () Returns : result ( tes3vector2 )","title":"copy"},{"location":"types/tes3vector2/#length","text":"Calculates the length of the vector. local result = tes3vector2 : length () Returns : result (number)","title":"length"},{"location":"types/tes3vector3/","text":"tes3vector3 \u2693\ufe0e A simple trio of floating-point numbers. Properties \u2693\ufe0e angle \u2693\ufe0e The angle between the vector and the water plane. Returns : result (number) b \u2693\ufe0e The third value in the vector. An alias for z . Returns : result (number) g \u2693\ufe0e The second value in the vector. An alias for y . Returns : result (number) r \u2693\ufe0e The first value in the vector. An alias for x . Returns : result (number) x \u2693\ufe0e The first value in the vector. Returns : result (number) y \u2693\ufe0e The second value in the vector. Returns : result (number) z \u2693\ufe0e The third value in the vector. Returns : result (number) Methods \u2693\ufe0e copy \u2693\ufe0e Creates a copy of the vector. local result = tes3vector3 : copy () Returns : result ( tes3vector3 ) cross \u2693\ufe0e Calculates the cross product with another vector. local result = tes3vector3 : cross ( vec ) Parameters : vec ( tes3vector3 ) Returns : result ( tes3vector3 ) distance \u2693\ufe0e Calculates the distance to another vector. local result = tes3vector3 : distance ( vec ) Parameters : vec ( tes3vector3 ) Returns : result (number) dot \u2693\ufe0e Calculates the dot product with another vector. local result = tes3vector3 : dot ( vec ) Parameters : vec ( tes3vector3 ) Returns : result ( tes3vector3 ) heightDifference \u2693\ufe0e Calculates the vertical distance to another vector. local result = tes3vector3 : heightDifference ( vec ) Parameters : vec ( tes3vector3 ) Returns : result (number) interpolate \u2693\ufe0e Calculates the interpolated position against the target vector using the distance parameter. local result = tes3vector3 : interpolate ( targetPoint , distance ) Parameters : targetPoint ( tes3vector3 ) distance (number) Returns : result ( tes3vector3 ) length \u2693\ufe0e Calculates the length of the vector. local result = tes3vector3 : length () Returns : result (number) lerp \u2693\ufe0e Calculates the interpolated vector between this vector and another, given a transition. local lerpedVector = tes3vector3 : lerp ( toVector , transition ) Parameters : toVector ( tes3vector3 ): The vector to interpolate towards. transition (number): The interpolation value. Must be between 0.0 (closer to this vector) and 1.0 (closer to the other vector). Returns : lerpedVector ( tes3vector3 ): The calculated value. negate \u2693\ufe0e Negates all values in the vector. tes3vector3 : negate () normalize \u2693\ufe0e Normalize the vector in-place, or set its components to zero if normalization is not possible. Returns true if the vector was successfully normalized. local result = tes3vector3 : normalize () Returns : result (boolean) normalized \u2693\ufe0e Get a normalized copy of the vector. local result = tes3vector3 : normalized () Returns : result ( tes3vector3 ) outerProduct \u2693\ufe0e Calculates the outer product with another vector. local result = tes3vector3 : outerProduct ( vec ) Parameters : vec ( tes3vector3 ) Returns : result ( tes3matrix33 ) toColor \u2693\ufe0e Converts the vector to niColor object. local result = tes3vector3 : toColor () Returns : result ( niColor )","title":"tes3vector3"},{"location":"types/tes3vector3/#tes3vector3","text":"A simple trio of floating-point numbers.","title":"tes3vector3"},{"location":"types/tes3vector3/#properties","text":"","title":"Properties"},{"location":"types/tes3vector3/#angle","text":"The angle between the vector and the water plane. Returns : result (number)","title":"angle"},{"location":"types/tes3vector3/#b","text":"The third value in the vector. An alias for z . Returns : result (number)","title":"b"},{"location":"types/tes3vector3/#g","text":"The second value in the vector. An alias for y . Returns : result (number)","title":"g"},{"location":"types/tes3vector3/#r","text":"The first value in the vector. An alias for x . Returns : result (number)","title":"r"},{"location":"types/tes3vector3/#x","text":"The first value in the vector. Returns : result (number)","title":"x"},{"location":"types/tes3vector3/#y","text":"The second value in the vector. Returns : result (number)","title":"y"},{"location":"types/tes3vector3/#z","text":"The third value in the vector. Returns : result (number)","title":"z"},{"location":"types/tes3vector3/#methods","text":"","title":"Methods"},{"location":"types/tes3vector3/#copy","text":"Creates a copy of the vector. local result = tes3vector3 : copy () Returns : result ( tes3vector3 )","title":"copy"},{"location":"types/tes3vector3/#cross","text":"Calculates the cross product with another vector. local result = tes3vector3 : cross ( vec ) Parameters : vec ( tes3vector3 ) Returns : result ( tes3vector3 )","title":"cross"},{"location":"types/tes3vector3/#distance","text":"Calculates the distance to another vector. local result = tes3vector3 : distance ( vec ) Parameters : vec ( tes3vector3 ) Returns : result (number)","title":"distance"},{"location":"types/tes3vector3/#dot","text":"Calculates the dot product with another vector. local result = tes3vector3 : dot ( vec ) Parameters : vec ( tes3vector3 ) Returns : result ( tes3vector3 )","title":"dot"},{"location":"types/tes3vector3/#heightdifference","text":"Calculates the vertical distance to another vector. local result = tes3vector3 : heightDifference ( vec ) Parameters : vec ( tes3vector3 ) Returns : result (number)","title":"heightDifference"},{"location":"types/tes3vector3/#interpolate","text":"Calculates the interpolated position against the target vector using the distance parameter. local result = tes3vector3 : interpolate ( targetPoint , distance ) Parameters : targetPoint ( tes3vector3 ) distance (number) Returns : result ( tes3vector3 )","title":"interpolate"},{"location":"types/tes3vector3/#length","text":"Calculates the length of the vector. local result = tes3vector3 : length () Returns : result (number)","title":"length"},{"location":"types/tes3vector3/#lerp","text":"Calculates the interpolated vector between this vector and another, given a transition. local lerpedVector = tes3vector3 : lerp ( toVector , transition ) Parameters : toVector ( tes3vector3 ): The vector to interpolate towards. transition (number): The interpolation value. Must be between 0.0 (closer to this vector) and 1.0 (closer to the other vector). Returns : lerpedVector ( tes3vector3 ): The calculated value.","title":"lerp"},{"location":"types/tes3vector3/#negate","text":"Negates all values in the vector. tes3vector3 : negate ()","title":"negate"},{"location":"types/tes3vector3/#normalize","text":"Normalize the vector in-place, or set its components to zero if normalization is not possible. Returns true if the vector was successfully normalized. local result = tes3vector3 : normalize () Returns : result (boolean)","title":"normalize"},{"location":"types/tes3vector3/#normalized","text":"Get a normalized copy of the vector. local result = tes3vector3 : normalized () Returns : result ( tes3vector3 )","title":"normalized"},{"location":"types/tes3vector3/#outerproduct","text":"Calculates the outer product with another vector. local result = tes3vector3 : outerProduct ( vec ) Parameters : vec ( tes3vector3 ) Returns : result ( tes3matrix33 )","title":"outerProduct"},{"location":"types/tes3vector3/#tocolor","text":"Converts the vector to niColor object. local result = tes3vector3 : toColor () Returns : result ( niColor )","title":"toColor"},{"location":"types/tes3vector4/","text":"tes3vector4 \u2693\ufe0e A set of 4 floating-point numbers. Properties \u2693\ufe0e w \u2693\ufe0e The 1st value in the vector. Returns : result (number) x \u2693\ufe0e The 2nd value in the vector. Returns : result (number) y \u2693\ufe0e The 3rd value in the vector. Returns : result (number) z \u2693\ufe0e The 4th value in the vector. Returns : result (number) Methods \u2693\ufe0e copy \u2693\ufe0e Creates a copy of the vector. local result = tes3vector4 : copy () Returns : result ( tes3vector4 ) length \u2693\ufe0e Calculates the length of the vector. local result = tes3vector4 : length () Returns : result (number)","title":"tes3vector4"},{"location":"types/tes3vector4/#tes3vector4","text":"A set of 4 floating-point numbers.","title":"tes3vector4"},{"location":"types/tes3vector4/#properties","text":"","title":"Properties"},{"location":"types/tes3vector4/#w","text":"The 1st value in the vector. Returns : result (number)","title":"w"},{"location":"types/tes3vector4/#x","text":"The 2nd value in the vector. Returns : result (number)","title":"x"},{"location":"types/tes3vector4/#y","text":"The 3rd value in the vector. Returns : result (number)","title":"y"},{"location":"types/tes3vector4/#z","text":"The 4th value in the vector. Returns : result (number)","title":"z"},{"location":"types/tes3vector4/#methods","text":"","title":"Methods"},{"location":"types/tes3vector4/#copy","text":"Creates a copy of the vector. local result = tes3vector4 : copy () Returns : result ( tes3vector4 )","title":"copy"},{"location":"types/tes3vector4/#length","text":"Calculates the length of the vector. local result = tes3vector4 : length () Returns : result (number)","title":"length"},{"location":"types/tes3weapon/","text":"tes3weapon \u2693\ufe0e A weapon game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) chopMax \u2693\ufe0e Chop damage inflicted at maximum weapon swing. Returns : result (number) chopMin \u2693\ufe0e Chop damage inflicted at minimum weapon swing. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) enchantCapacity \u2693\ufe0e The object's enchantment capacity. Returns : result (number) enchantment \u2693\ufe0e The enchantment used by the object. Returns : result ( tes3enchantment ) flags \u2693\ufe0e Access to the weapon flag bitfield. Known flags can be accessed via other weapon properties. Returns : result (number) hasDurability \u2693\ufe0e Read-only . Whether the weapon type has durability. Thrown weapons and ammunition are used once fired, and therefore do not use durability. Returns : result (boolean) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) ignoresNormalWeaponResistance \u2693\ufe0e Access to the flag that controls if this weapon bypasses the \"Resist normal weapons\" magic effect. Returns : result (boolean) isAmmo \u2693\ufe0e Read-only . If true, the weapon is a type of ammunition. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) isMelee \u2693\ufe0e Read-only . If true, the weapon has a melee weapon type. Returns : result (boolean) isOneHanded \u2693\ufe0e Read-only . If true, the weapon is a one-handed weapon. Returns : result (boolean) isProjectile \u2693\ufe0e Read-only . If true, the weapon is a projectile. Returns : result (boolean) isRanged \u2693\ufe0e Read-only . If true, the weapon is a ranged weapon. Returns : result (boolean) isSilver \u2693\ufe0e If true, the weapon has a silver material flag. Returns : result (boolean) isTwoHanded \u2693\ufe0e Read-only . If true, the weapon is a two-handed melee weapon. Returns : result (boolean) maxCondition \u2693\ufe0e The object's maximum condition. Returns : result (number) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) reach \u2693\ufe0e The weapon's relative reach. A value of 1.0 is the standard reach. It is multiplied by the GMST fCombatDistance to find the attack reach in world units. Returns : result (number) scale \u2693\ufe0e The object's scale. Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sceneReference \u2693\ufe0e The scene graph reference node for this object. Returns : result ( niNode ) script \u2693\ufe0e Read-only . The script that runs on the object. Returns : result ( tes3script ) skill \u2693\ufe0e Gets the skill data for the attack skill used by the weapon. Returns : result ( tes3skill ) skillId \u2693\ufe0e Gets the skill ID for the attack skill used by the weapon. Returns : result (number) slashMax \u2693\ufe0e Slash damage inflicted at maximum weapon swing. Returns : result (number) slashMin \u2693\ufe0e Slash damage inflicted at minimum weapon swing. Returns : result (number) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename of the mod that owns this object. Returns : result (string) speed \u2693\ufe0e The relative attack speed of the weapon. Controls attack timing and animation speed. Standard speed is 1.0 . Returns : result (number) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3iterator ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) thrustMax \u2693\ufe0e Thrust damage inflicted at maximum weapon swing. Returns : result (number) thrustMin \u2693\ufe0e Thrust damage inflicted at minimum weapon swing. Returns : result (number) type \u2693\ufe0e Read-only . A number representing the weapon type. Matches values from the tes3.weaponType table. Returns : result (number) typeName \u2693\ufe0e Read-only . The player-facing name for the weapon type. Returns : result (string) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string) getMaterialFlag \u2693\ufe0e Access to the material flag bitfield. Known material flags can be accessed via other weapon properties. local result = tes3weapon : getMaterialFlag ( flagBit ) Parameters : flagBit (number) Returns : result (number) setMaterialFlag \u2693\ufe0e Access to the material flag bitfield. Known material flags can be accessed via other weapon properties. tes3weapon : setMaterialFlag ( flagBit , value ) Parameters : flagBit (number) value (boolean)","title":"tes3weapon"},{"location":"types/tes3weapon/#tes3weapon","text":"A weapon game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3weapon"},{"location":"types/tes3weapon/#properties","text":"","title":"Properties"},{"location":"types/tes3weapon/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3weapon/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3weapon/#chopmax","text":"Chop damage inflicted at maximum weapon swing. Returns : result (number)","title":"chopMax"},{"location":"types/tes3weapon/#chopmin","text":"Chop damage inflicted at minimum weapon swing. Returns : result (number)","title":"chopMin"},{"location":"types/tes3weapon/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3weapon/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3weapon/#enchantcapacity","text":"The object's enchantment capacity. Returns : result (number)","title":"enchantCapacity"},{"location":"types/tes3weapon/#enchantment","text":"The enchantment used by the object. Returns : result ( tes3enchantment )","title":"enchantment"},{"location":"types/tes3weapon/#flags","text":"Access to the weapon flag bitfield. Known flags can be accessed via other weapon properties. Returns : result (number)","title":"flags"},{"location":"types/tes3weapon/#hasdurability","text":"Read-only . Whether the weapon type has durability. Thrown weapons and ammunition are used once fired, and therefore do not use durability. Returns : result (boolean)","title":"hasDurability"},{"location":"types/tes3weapon/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3weapon/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3weapon/#ignoresnormalweaponresistance","text":"Access to the flag that controls if this weapon bypasses the \"Resist normal weapons\" magic effect. Returns : result (boolean)","title":"ignoresNormalWeaponResistance"},{"location":"types/tes3weapon/#isammo","text":"Read-only . If true, the weapon is a type of ammunition. Returns : result (boolean)","title":"isAmmo"},{"location":"types/tes3weapon/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3weapon/#ismelee","text":"Read-only . If true, the weapon has a melee weapon type. Returns : result (boolean)","title":"isMelee"},{"location":"types/tes3weapon/#isonehanded","text":"Read-only . If true, the weapon is a one-handed weapon. Returns : result (boolean)","title":"isOneHanded"},{"location":"types/tes3weapon/#isprojectile","text":"Read-only . If true, the weapon is a projectile. Returns : result (boolean)","title":"isProjectile"},{"location":"types/tes3weapon/#isranged","text":"Read-only . If true, the weapon is a ranged weapon. Returns : result (boolean)","title":"isRanged"},{"location":"types/tes3weapon/#issilver","text":"If true, the weapon has a silver material flag. Returns : result (boolean)","title":"isSilver"},{"location":"types/tes3weapon/#istwohanded","text":"Read-only . If true, the weapon is a two-handed melee weapon. Returns : result (boolean)","title":"isTwoHanded"},{"location":"types/tes3weapon/#maxcondition","text":"The object's maximum condition. Returns : result (number)","title":"maxCondition"},{"location":"types/tes3weapon/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3weapon/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3weapon/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3weapon/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3weapon/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3weapon/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3weapon/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3weapon/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3weapon/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3weapon/#reach","text":"The weapon's relative reach. A value of 1.0 is the standard reach. It is multiplied by the GMST fCombatDistance to find the attack reach in world units. Returns : result (number)","title":"reach"},{"location":"types/tes3weapon/#scale","text":"The object's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3weapon/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3weapon/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3weapon/#scenereference","text":"The scene graph reference node for this object. Returns : result ( niNode )","title":"sceneReference"},{"location":"types/tes3weapon/#script","text":"Read-only . The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3weapon/#skill","text":"Gets the skill data for the attack skill used by the weapon. Returns : result ( tes3skill )","title":"skill"},{"location":"types/tes3weapon/#skillid","text":"Gets the skill ID for the attack skill used by the weapon. Returns : result (number)","title":"skillId"},{"location":"types/tes3weapon/#slashmax","text":"Slash damage inflicted at maximum weapon swing. Returns : result (number)","title":"slashMax"},{"location":"types/tes3weapon/#slashmin","text":"Slash damage inflicted at minimum weapon swing. Returns : result (number)","title":"slashMin"},{"location":"types/tes3weapon/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3weapon/#sourcemod","text":"Read-only . The filename of the mod that owns this object. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3weapon/#speed","text":"The relative attack speed of the weapon. Controls attack timing and animation speed. Standard speed is 1.0 . Returns : result (number)","title":"speed"},{"location":"types/tes3weapon/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3iterator )","title":"stolenList"},{"location":"types/tes3weapon/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3weapon/#thrustmax","text":"Thrust damage inflicted at maximum weapon swing. Returns : result (number)","title":"thrustMax"},{"location":"types/tes3weapon/#thrustmin","text":"Thrust damage inflicted at minimum weapon swing. Returns : result (number)","title":"thrustMin"},{"location":"types/tes3weapon/#type","text":"Read-only . A number representing the weapon type. Matches values from the tes3.weaponType table. Returns : result (number)","title":"type"},{"location":"types/tes3weapon/#typename","text":"Read-only . The player-facing name for the weapon type. Returns : result (string)","title":"typeName"},{"location":"types/tes3weapon/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3weapon/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3weapon/#methods","text":"","title":"Methods"},{"location":"types/tes3weapon/#__tojson","text":"Serializes the object to json. local string = tes3baseObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3weapon/#getmaterialflag","text":"Access to the material flag bitfield. Known material flags can be accessed via other weapon properties. local result = tes3weapon : getMaterialFlag ( flagBit ) Parameters : flagBit (number) Returns : result (number)","title":"getMaterialFlag"},{"location":"types/tes3weapon/#setmaterialflag","text":"Access to the material flag bitfield. Known material flags can be accessed via other weapon properties. tes3weapon : setMaterialFlag ( flagBit , value ) Parameters : flagBit (number) value (boolean)","title":"setMaterialFlag"},{"location":"types/tes3wearablePart/","text":"tes3wearablePart \u2693\ufe0e A container class that maps a body part id to its male and female body parts. Properties \u2693\ufe0e female \u2693\ufe0e The body part object used for female actors. Returns : result ( tes3bodyPart ) male \u2693\ufe0e The body part object used for male actors. Returns : result ( tes3bodyPart ) type \u2693\ufe0e No description yet available. Returns : result (number)","title":"tes3wearablePart"},{"location":"types/tes3wearablePart/#tes3wearablepart","text":"A container class that maps a body part id to its male and female body parts.","title":"tes3wearablePart"},{"location":"types/tes3wearablePart/#properties","text":"","title":"Properties"},{"location":"types/tes3wearablePart/#female","text":"The body part object used for female actors. Returns : result ( tes3bodyPart )","title":"female"},{"location":"types/tes3wearablePart/#male","text":"The body part object used for male actors. Returns : result ( tes3bodyPart )","title":"male"},{"location":"types/tes3wearablePart/#type","text":"No description yet available. Returns : result (number)","title":"type"},{"location":"types/tes3weather/","text":"tes3weather \u2693\ufe0e A structure that contains base weather information shared by inheriting weather structures. Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 ) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weather"},{"location":"types/tes3weather/#tes3weather","text":"A structure that contains base weather information shared by inheriting weather structures.","title":"tes3weather"},{"location":"types/tes3weather/#properties","text":"","title":"Properties"},{"location":"types/tes3weather/#ambientdaycolor","text":"Read-only . The weather's ambient day color. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weather/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weather/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weather/#ambientnightcolor","text":"Read-only . The weather's ambient night color. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weather/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weather/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weather/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weather/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weather/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weather/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weather/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weather/#fogdaycolor","text":"Read-only . The weather's fog day color. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weather/#fognightcolor","text":"Read-only . The weather's fog night color. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weather/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weather/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weather/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weather/#index","text":"Read-only . The weather's index ID. Returns : result (number)","title":"index"},{"location":"types/tes3weather/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weather/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weather/#skydaycolor","text":"Read-only . The weather's sky day color. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weather/#skynightcolor","text":"Read-only . The weather's sky night color. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weather/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weather/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weather/#sundaycolor","text":"Read-only . The weather's sun day color. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weather/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weather/#sunnightcolor","text":"Read-only . The weather's sun night color. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weather/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weather/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weather/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weather/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weather/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherAsh/","text":"tes3weatherAsh \u2693\ufe0e A structure that contains weather information for the ashstorm weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 ) threshold \u2693\ufe0e The weather's threshold value. Returns : result (number) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherAsh"},{"location":"types/tes3weatherAsh/#tes3weatherash","text":"A structure that contains weather information for the ashstorm weather type. This type inherits the following: tes3weather","title":"tes3weatherAsh"},{"location":"types/tes3weatherAsh/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherAsh/#ambientdaycolor","text":"Read-only . The weather's ambient day color. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherAsh/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherAsh/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherAsh/#ambientnightcolor","text":"Read-only . The weather's ambient night color. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherAsh/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherAsh/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherAsh/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherAsh/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherAsh/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherAsh/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherAsh/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherAsh/#fogdaycolor","text":"Read-only . The weather's fog day color. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherAsh/#fognightcolor","text":"Read-only . The weather's fog night color. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherAsh/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherAsh/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherAsh/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherAsh/#index","text":"Read-only . The weather's index ID. Returns : result (number)","title":"index"},{"location":"types/tes3weatherAsh/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherAsh/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherAsh/#skydaycolor","text":"Read-only . The weather's sky day color. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherAsh/#skynightcolor","text":"Read-only . The weather's sky night color. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherAsh/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherAsh/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherAsh/#sundaycolor","text":"Read-only . The weather's sun day color. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherAsh/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherAsh/#sunnightcolor","text":"Read-only . The weather's sun night color. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherAsh/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherAsh/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherAsh/#threshold","text":"The weather's threshold value. Returns : result (number)","title":"threshold"},{"location":"types/tes3weatherAsh/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherAsh/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherAsh/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherBlight/","text":"tes3weatherBlight \u2693\ufe0e A structure that contains weather information for the blightstorm weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 ) blightDiseaseChance \u2693\ufe0e The weather's blight chance value. Returns : result (number) blightDiseases \u2693\ufe0e Read-only . The weather's blight diseases, provided as a table of tes3spell objects. Returns : result (table) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 ) threshold \u2693\ufe0e The weather's threshold value. Returns : result (number) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherBlight"},{"location":"types/tes3weatherBlight/#tes3weatherblight","text":"A structure that contains weather information for the blightstorm weather type. This type inherits the following: tes3weather","title":"tes3weatherBlight"},{"location":"types/tes3weatherBlight/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherBlight/#ambientdaycolor","text":"Read-only . The weather's ambient day color. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherBlight/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherBlight/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherBlight/#ambientnightcolor","text":"Read-only . The weather's ambient night color. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherBlight/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherBlight/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherBlight/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherBlight/#blightdiseasechance","text":"The weather's blight chance value. Returns : result (number)","title":"blightDiseaseChance"},{"location":"types/tes3weatherBlight/#blightdiseases","text":"Read-only . The weather's blight diseases, provided as a table of tes3spell objects. Returns : result (table)","title":"blightDiseases"},{"location":"types/tes3weatherBlight/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherBlight/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherBlight/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherBlight/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherBlight/#fogdaycolor","text":"Read-only . The weather's fog day color. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherBlight/#fognightcolor","text":"Read-only . The weather's fog night color. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherBlight/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherBlight/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherBlight/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherBlight/#index","text":"Read-only . The weather's index ID. Returns : result (number)","title":"index"},{"location":"types/tes3weatherBlight/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherBlight/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherBlight/#skydaycolor","text":"Read-only . The weather's sky day color. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherBlight/#skynightcolor","text":"Read-only . The weather's sky night color. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherBlight/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherBlight/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherBlight/#sundaycolor","text":"Read-only . The weather's sun day color. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherBlight/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherBlight/#sunnightcolor","text":"Read-only . The weather's sun night color. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherBlight/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherBlight/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherBlight/#threshold","text":"The weather's threshold value. Returns : result (number)","title":"threshold"},{"location":"types/tes3weatherBlight/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherBlight/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherBlight/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherBlizzard/","text":"tes3weatherBlizzard \u2693\ufe0e A structure that contains weather information for the blizzard weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 ) threshold \u2693\ufe0e The weather's threshold value. Returns : result (number) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherBlizzard"},{"location":"types/tes3weatherBlizzard/#tes3weatherblizzard","text":"A structure that contains weather information for the blizzard weather type. This type inherits the following: tes3weather","title":"tes3weatherBlizzard"},{"location":"types/tes3weatherBlizzard/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherBlizzard/#ambientdaycolor","text":"Read-only . The weather's ambient day color. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherBlizzard/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherBlizzard/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherBlizzard/#ambientnightcolor","text":"Read-only . The weather's ambient night color. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherBlizzard/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherBlizzard/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherBlizzard/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherBlizzard/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherBlizzard/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherBlizzard/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherBlizzard/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherBlizzard/#fogdaycolor","text":"Read-only . The weather's fog day color. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherBlizzard/#fognightcolor","text":"Read-only . The weather's fog night color. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherBlizzard/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherBlizzard/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherBlizzard/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherBlizzard/#index","text":"Read-only . The weather's index ID. Returns : result (number)","title":"index"},{"location":"types/tes3weatherBlizzard/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherBlizzard/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherBlizzard/#skydaycolor","text":"Read-only . The weather's sky day color. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherBlizzard/#skynightcolor","text":"Read-only . The weather's sky night color. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherBlizzard/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherBlizzard/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherBlizzard/#sundaycolor","text":"Read-only . The weather's sun day color. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherBlizzard/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherBlizzard/#sunnightcolor","text":"Read-only . The weather's sun night color. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherBlizzard/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherBlizzard/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherBlizzard/#threshold","text":"The weather's threshold value. Returns : result (number)","title":"threshold"},{"location":"types/tes3weatherBlizzard/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherBlizzard/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherBlizzard/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherClear/","text":"tes3weatherClear \u2693\ufe0e A structure that contains weather information for the clear skies weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 ) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherClear"},{"location":"types/tes3weatherClear/#tes3weatherclear","text":"A structure that contains weather information for the clear skies weather type. This type inherits the following: tes3weather","title":"tes3weatherClear"},{"location":"types/tes3weatherClear/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherClear/#ambientdaycolor","text":"Read-only . The weather's ambient day color. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherClear/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherClear/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherClear/#ambientnightcolor","text":"Read-only . The weather's ambient night color. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherClear/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherClear/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherClear/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherClear/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherClear/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherClear/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherClear/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherClear/#fogdaycolor","text":"Read-only . The weather's fog day color. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherClear/#fognightcolor","text":"Read-only . The weather's fog night color. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherClear/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherClear/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherClear/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherClear/#index","text":"Read-only . The weather's index ID. Returns : result (number)","title":"index"},{"location":"types/tes3weatherClear/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherClear/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherClear/#skydaycolor","text":"Read-only . The weather's sky day color. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherClear/#skynightcolor","text":"Read-only . The weather's sky night color. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherClear/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherClear/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherClear/#sundaycolor","text":"Read-only . The weather's sun day color. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherClear/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherClear/#sunnightcolor","text":"Read-only . The weather's sun night color. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherClear/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherClear/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherClear/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherClear/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherClear/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherCloudy/","text":"tes3weatherCloudy \u2693\ufe0e A structure that contains weather information for the cloudy weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 ) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherCloudy"},{"location":"types/tes3weatherCloudy/#tes3weathercloudy","text":"A structure that contains weather information for the cloudy weather type. This type inherits the following: tes3weather","title":"tes3weatherCloudy"},{"location":"types/tes3weatherCloudy/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherCloudy/#ambientdaycolor","text":"Read-only . The weather's ambient day color. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherCloudy/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherCloudy/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherCloudy/#ambientnightcolor","text":"Read-only . The weather's ambient night color. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherCloudy/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherCloudy/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherCloudy/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherCloudy/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherCloudy/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherCloudy/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherCloudy/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherCloudy/#fogdaycolor","text":"Read-only . The weather's fog day color. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherCloudy/#fognightcolor","text":"Read-only . The weather's fog night color. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherCloudy/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherCloudy/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherCloudy/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherCloudy/#index","text":"Read-only . The weather's index ID. Returns : result (number)","title":"index"},{"location":"types/tes3weatherCloudy/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherCloudy/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherCloudy/#skydaycolor","text":"Read-only . The weather's sky day color. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherCloudy/#skynightcolor","text":"Read-only . The weather's sky night color. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherCloudy/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherCloudy/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherCloudy/#sundaycolor","text":"Read-only . The weather's sun day color. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherCloudy/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherCloudy/#sunnightcolor","text":"Read-only . The weather's sun night color. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherCloudy/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherCloudy/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherCloudy/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherCloudy/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherCloudy/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherController/","text":"tes3weatherController \u2693\ufe0e A data structure that handles the weather. Properties \u2693\ufe0e currentFogColor \u2693\ufe0e The current fog color. Returns : result ( tes3vector3 ) currentSkyColor \u2693\ufe0e The current sky color. Returns : result ( tes3vector3 ) currentWeather \u2693\ufe0e Read-only . The current weather. Returns : result ( tes3weather ) daysRemaining \u2693\ufe0e The days remaining. Returns : result (number) hoursBetweenWeatherChange \u2693\ufe0e The hours between weather changes. Stored as a float value. Returns : result (number) hoursRemaining \u2693\ufe0e The hours remaining. Returns : result (number) lastActiveRegion \u2693\ufe0e Read-only . Provides read-only access to last active region object. Returns : result ( tes3region ) masser \u2693\ufe0e Read-only . Provides read-only access to the Masser moon object. Returns : result ( tes3moon ) nextWeather \u2693\ufe0e Read-only . The next weather. Returns : result ( tes3weather ) sceneRainRoot \u2693\ufe0e Read-only . Provides read-only access to the scene rain root NiNode. Returns : result ( niNode ) sceneSkyLight \u2693\ufe0e Read-only . Provides read-only access to the scene sky light directional light. Returns : result ( niDirectionalLight ) sceneSkyRoot \u2693\ufe0e Read-only . Provides read-only access to the scene sky root NiNode. Returns : result ( niNode ) sceneSnowRoot \u2693\ufe0e Read-only . Provides read-only access to the scene snow root NiNode. Returns : result ( niNode ) sceneStormRoot \u2693\ufe0e Read-only . Provides read-only access to the scene storm root NiNode. Returns : result ( niNode ) sceneSunBase \u2693\ufe0e Read-only . Provides read-only access to the scenesun base NiNode. Returns : result ( niNode ) sceneSunGlare \u2693\ufe0e Read-only . Provides read-only access to the scene sun glare NiNode. Returns : result ( niNode ) sceneSunVis \u2693\ufe0e Read-only . Provides read-only access to the scene sun vis NiNode. Returns : result ( niNode ) secunda \u2693\ufe0e Read-only . Provides read-only access to the Secunda moon object. Returns : result ( tes3moon ) sunglareFaderAngleMax \u2693\ufe0e The sunglare fader maximum angle. Returns : result (number) sunglareFaderColor \u2693\ufe0e The sunglare fader color. Returns : result ( tes3vector3 ) sunglareFaderMax \u2693\ufe0e The sunglare fader maximum. Returns : result (number) sunriseDuration \u2693\ufe0e The sunrise duration. Returns : result (number) sunriseHour \u2693\ufe0e The sunrise hour. Returns : result (number) sunsetDuration \u2693\ufe0e The sunset duration. Returns : result (number) sunsetHour \u2693\ufe0e The sunset hour. Returns : result (number) timescaleClouds \u2693\ufe0e The timescale for clouds. Returns : result (string) transitionScalar \u2693\ufe0e The scalar transition. Returns : result (number) underwaterColor \u2693\ufe0e The underwater color, represented as a vector. Returns : result ( tes3vector3 ) underwaterColorWeight \u2693\ufe0e The underwater color weight. Returns : result (number) underwaterDayFog \u2693\ufe0e The underwater day fog value. Returns : result (number) underwaterIndoorFog \u2693\ufe0e The underwater indoor fog value. Returns : result (number) underwaterNightFog \u2693\ufe0e The underwater night fog value. Returns : result (number) underwaterSunriseFog \u2693\ufe0e The underwater sunrise fog value. Returns : result (number) underwaterSunsetFog \u2693\ufe0e The underwater sunset fog value. Returns : result (number) weathers \u2693\ufe0e Read-only . Array-style table for the different weather types. Each object in the table is a tes3weather. Returns : result (table) windVelocityCurrWeather \u2693\ufe0e The wind velocity for the current weather. Returns : result ( tes3vector3 ) windVelocityNextWeather \u2693\ufe0e The wind velocity for the next weather. Returns : result ( tes3vector3 ) Methods \u2693\ufe0e calcSunDamageScalar \u2693\ufe0e Calculates the sun damage based on the current weather. local result = tes3weatherController : calcSunDamageScalar () Parameters : Returns : result (number) switchImmediate \u2693\ufe0e Immediately switches the weather to the provided weather parameter. tes3weatherController : switchImmediate ( weatherId ) Parameters : weatherId (number) switchTransition \u2693\ufe0e Transitions the weather to the provided weather parameter based on the weather controller settings. tes3weatherController : switchTransition ( weatherId ) Parameters : weatherId (number) updateVisuals \u2693\ufe0e Updates the weather controller visuals. This should be called after any weather transitions. tes3weatherController : updateVisuals () Parameters :","title":"tes3weatherController"},{"location":"types/tes3weatherController/#tes3weathercontroller","text":"A data structure that handles the weather.","title":"tes3weatherController"},{"location":"types/tes3weatherController/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherController/#currentfogcolor","text":"The current fog color. Returns : result ( tes3vector3 )","title":"currentFogColor"},{"location":"types/tes3weatherController/#currentskycolor","text":"The current sky color. Returns : result ( tes3vector3 )","title":"currentSkyColor"},{"location":"types/tes3weatherController/#currentweather","text":"Read-only . The current weather. Returns : result ( tes3weather )","title":"currentWeather"},{"location":"types/tes3weatherController/#daysremaining","text":"The days remaining. Returns : result (number)","title":"daysRemaining"},{"location":"types/tes3weatherController/#hoursbetweenweatherchange","text":"The hours between weather changes. Stored as a float value. Returns : result (number)","title":"hoursBetweenWeatherChange"},{"location":"types/tes3weatherController/#hoursremaining","text":"The hours remaining. Returns : result (number)","title":"hoursRemaining"},{"location":"types/tes3weatherController/#lastactiveregion","text":"Read-only . Provides read-only access to last active region object. Returns : result ( tes3region )","title":"lastActiveRegion"},{"location":"types/tes3weatherController/#masser","text":"Read-only . Provides read-only access to the Masser moon object. Returns : result ( tes3moon )","title":"masser"},{"location":"types/tes3weatherController/#nextweather","text":"Read-only . The next weather. Returns : result ( tes3weather )","title":"nextWeather"},{"location":"types/tes3weatherController/#scenerainroot","text":"Read-only . Provides read-only access to the scene rain root NiNode. Returns : result ( niNode )","title":"sceneRainRoot"},{"location":"types/tes3weatherController/#sceneskylight","text":"Read-only . Provides read-only access to the scene sky light directional light. Returns : result ( niDirectionalLight )","title":"sceneSkyLight"},{"location":"types/tes3weatherController/#sceneskyroot","text":"Read-only . Provides read-only access to the scene sky root NiNode. Returns : result ( niNode )","title":"sceneSkyRoot"},{"location":"types/tes3weatherController/#scenesnowroot","text":"Read-only . Provides read-only access to the scene snow root NiNode. Returns : result ( niNode )","title":"sceneSnowRoot"},{"location":"types/tes3weatherController/#scenestormroot","text":"Read-only . Provides read-only access to the scene storm root NiNode. Returns : result ( niNode )","title":"sceneStormRoot"},{"location":"types/tes3weatherController/#scenesunbase","text":"Read-only . Provides read-only access to the scenesun base NiNode. Returns : result ( niNode )","title":"sceneSunBase"},{"location":"types/tes3weatherController/#scenesunglare","text":"Read-only . Provides read-only access to the scene sun glare NiNode. Returns : result ( niNode )","title":"sceneSunGlare"},{"location":"types/tes3weatherController/#scenesunvis","text":"Read-only . Provides read-only access to the scene sun vis NiNode. Returns : result ( niNode )","title":"sceneSunVis"},{"location":"types/tes3weatherController/#secunda","text":"Read-only . Provides read-only access to the Secunda moon object. Returns : result ( tes3moon )","title":"secunda"},{"location":"types/tes3weatherController/#sunglarefaderanglemax","text":"The sunglare fader maximum angle. Returns : result (number)","title":"sunglareFaderAngleMax"},{"location":"types/tes3weatherController/#sunglarefadercolor","text":"The sunglare fader color. Returns : result ( tes3vector3 )","title":"sunglareFaderColor"},{"location":"types/tes3weatherController/#sunglarefadermax","text":"The sunglare fader maximum. Returns : result (number)","title":"sunglareFaderMax"},{"location":"types/tes3weatherController/#sunriseduration","text":"The sunrise duration. Returns : result (number)","title":"sunriseDuration"},{"location":"types/tes3weatherController/#sunrisehour","text":"The sunrise hour. Returns : result (number)","title":"sunriseHour"},{"location":"types/tes3weatherController/#sunsetduration","text":"The sunset duration. Returns : result (number)","title":"sunsetDuration"},{"location":"types/tes3weatherController/#sunsethour","text":"The sunset hour. Returns : result (number)","title":"sunsetHour"},{"location":"types/tes3weatherController/#timescaleclouds","text":"The timescale for clouds. Returns : result (string)","title":"timescaleClouds"},{"location":"types/tes3weatherController/#transitionscalar","text":"The scalar transition. Returns : result (number)","title":"transitionScalar"},{"location":"types/tes3weatherController/#underwatercolor","text":"The underwater color, represented as a vector. Returns : result ( tes3vector3 )","title":"underwaterColor"},{"location":"types/tes3weatherController/#underwatercolorweight","text":"The underwater color weight. Returns : result (number)","title":"underwaterColorWeight"},{"location":"types/tes3weatherController/#underwaterdayfog","text":"The underwater day fog value. Returns : result (number)","title":"underwaterDayFog"},{"location":"types/tes3weatherController/#underwaterindoorfog","text":"The underwater indoor fog value. Returns : result (number)","title":"underwaterIndoorFog"},{"location":"types/tes3weatherController/#underwaternightfog","text":"The underwater night fog value. Returns : result (number)","title":"underwaterNightFog"},{"location":"types/tes3weatherController/#underwatersunrisefog","text":"The underwater sunrise fog value. Returns : result (number)","title":"underwaterSunriseFog"},{"location":"types/tes3weatherController/#underwatersunsetfog","text":"The underwater sunset fog value. Returns : result (number)","title":"underwaterSunsetFog"},{"location":"types/tes3weatherController/#weathers","text":"Read-only . Array-style table for the different weather types. Each object in the table is a tes3weather. Returns : result (table)","title":"weathers"},{"location":"types/tes3weatherController/#windvelocitycurrweather","text":"The wind velocity for the current weather. Returns : result ( tes3vector3 )","title":"windVelocityCurrWeather"},{"location":"types/tes3weatherController/#windvelocitynextweather","text":"The wind velocity for the next weather. Returns : result ( tes3vector3 )","title":"windVelocityNextWeather"},{"location":"types/tes3weatherController/#methods","text":"","title":"Methods"},{"location":"types/tes3weatherController/#calcsundamagescalar","text":"Calculates the sun damage based on the current weather. local result = tes3weatherController : calcSunDamageScalar () Parameters : Returns : result (number)","title":"calcSunDamageScalar"},{"location":"types/tes3weatherController/#switchimmediate","text":"Immediately switches the weather to the provided weather parameter. tes3weatherController : switchImmediate ( weatherId ) Parameters : weatherId (number)","title":"switchImmediate"},{"location":"types/tes3weatherController/#switchtransition","text":"Transitions the weather to the provided weather parameter based on the weather controller settings. tes3weatherController : switchTransition ( weatherId ) Parameters : weatherId (number)","title":"switchTransition"},{"location":"types/tes3weatherController/#updatevisuals","text":"Updates the weather controller visuals. This should be called after any weather transitions. tes3weatherController : updateVisuals () Parameters :","title":"updateVisuals"},{"location":"types/tes3weatherFoggy/","text":"tes3weatherFoggy \u2693\ufe0e A structure that contains weather information for the foggy weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 ) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherFoggy"},{"location":"types/tes3weatherFoggy/#tes3weatherfoggy","text":"A structure that contains weather information for the foggy weather type. This type inherits the following: tes3weather","title":"tes3weatherFoggy"},{"location":"types/tes3weatherFoggy/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherFoggy/#ambientdaycolor","text":"Read-only . The weather's ambient day color. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherFoggy/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherFoggy/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherFoggy/#ambientnightcolor","text":"Read-only . The weather's ambient night color. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherFoggy/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherFoggy/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherFoggy/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherFoggy/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherFoggy/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherFoggy/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherFoggy/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherFoggy/#fogdaycolor","text":"Read-only . The weather's fog day color. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherFoggy/#fognightcolor","text":"Read-only . The weather's fog night color. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherFoggy/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherFoggy/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherFoggy/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherFoggy/#index","text":"Read-only . The weather's index ID. Returns : result (number)","title":"index"},{"location":"types/tes3weatherFoggy/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherFoggy/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherFoggy/#skydaycolor","text":"Read-only . The weather's sky day color. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherFoggy/#skynightcolor","text":"Read-only . The weather's sky night color. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherFoggy/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherFoggy/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherFoggy/#sundaycolor","text":"Read-only . The weather's sun day color. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherFoggy/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherFoggy/#sunnightcolor","text":"Read-only . The weather's sun night color. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherFoggy/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherFoggy/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherFoggy/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherFoggy/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherFoggy/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherOvercast/","text":"tes3weatherOvercast \u2693\ufe0e A structure that contains weather information for the overcast weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 ) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherOvercast"},{"location":"types/tes3weatherOvercast/#tes3weatherovercast","text":"A structure that contains weather information for the overcast weather type. This type inherits the following: tes3weather","title":"tes3weatherOvercast"},{"location":"types/tes3weatherOvercast/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherOvercast/#ambientdaycolor","text":"Read-only . The weather's ambient day color. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherOvercast/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherOvercast/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherOvercast/#ambientnightcolor","text":"Read-only . The weather's ambient night color. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherOvercast/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherOvercast/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherOvercast/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherOvercast/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherOvercast/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherOvercast/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherOvercast/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherOvercast/#fogdaycolor","text":"Read-only . The weather's fog day color. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherOvercast/#fognightcolor","text":"Read-only . The weather's fog night color. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherOvercast/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherOvercast/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherOvercast/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherOvercast/#index","text":"Read-only . The weather's index ID. Returns : result (number)","title":"index"},{"location":"types/tes3weatherOvercast/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherOvercast/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherOvercast/#skydaycolor","text":"Read-only . The weather's sky day color. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherOvercast/#skynightcolor","text":"Read-only . The weather's sky night color. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherOvercast/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherOvercast/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherOvercast/#sundaycolor","text":"Read-only . The weather's sun day color. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherOvercast/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherOvercast/#sunnightcolor","text":"Read-only . The weather's sun night color. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherOvercast/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherOvercast/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherOvercast/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherOvercast/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherOvercast/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherRain/","text":"tes3weatherRain \u2693\ufe0e A structure that contains weather information for the rain weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) maxParticles \u2693\ufe0e The weather's maximum particles. Returns : result (number) particleEntranceSpeed \u2693\ufe0e The weather's particle entrance speed. Returns : result (number) particleHeightMax \u2693\ufe0e The weather's particle maximum height. Returns : result (number) particleHeightMin \u2693\ufe0e The weather's particle minimum height. Returns : result (number) particleRadius \u2693\ufe0e The weather's particle radius. Returns : result (number) rainActive \u2693\ufe0e Read-only . The weather's active rain flag. Returns : result (boolean) rainLoopSound \u2693\ufe0e Read-only . The weather's rain loop sound object. Returns : result ( tes3sound ) rainLoopSoundId \u2693\ufe0e The weather's rain loop sound ID. Returns : result (string) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 ) threshold \u2693\ufe0e The weather's threshold value. Returns : result (number) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherRain"},{"location":"types/tes3weatherRain/#tes3weatherrain","text":"A structure that contains weather information for the rain weather type. This type inherits the following: tes3weather","title":"tes3weatherRain"},{"location":"types/tes3weatherRain/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherRain/#ambientdaycolor","text":"Read-only . The weather's ambient day color. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherRain/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherRain/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherRain/#ambientnightcolor","text":"Read-only . The weather's ambient night color. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherRain/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherRain/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherRain/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherRain/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherRain/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherRain/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherRain/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherRain/#fogdaycolor","text":"Read-only . The weather's fog day color. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherRain/#fognightcolor","text":"Read-only . The weather's fog night color. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherRain/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherRain/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherRain/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherRain/#index","text":"Read-only . The weather's index ID. Returns : result (number)","title":"index"},{"location":"types/tes3weatherRain/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherRain/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherRain/#maxparticles","text":"The weather's maximum particles. Returns : result (number)","title":"maxParticles"},{"location":"types/tes3weatherRain/#particleentrancespeed","text":"The weather's particle entrance speed. Returns : result (number)","title":"particleEntranceSpeed"},{"location":"types/tes3weatherRain/#particleheightmax","text":"The weather's particle maximum height. Returns : result (number)","title":"particleHeightMax"},{"location":"types/tes3weatherRain/#particleheightmin","text":"The weather's particle minimum height. Returns : result (number)","title":"particleHeightMin"},{"location":"types/tes3weatherRain/#particleradius","text":"The weather's particle radius. Returns : result (number)","title":"particleRadius"},{"location":"types/tes3weatherRain/#rainactive","text":"Read-only . The weather's active rain flag. Returns : result (boolean)","title":"rainActive"},{"location":"types/tes3weatherRain/#rainloopsound","text":"Read-only . The weather's rain loop sound object. Returns : result ( tes3sound )","title":"rainLoopSound"},{"location":"types/tes3weatherRain/#rainloopsoundid","text":"The weather's rain loop sound ID. Returns : result (string)","title":"rainLoopSoundId"},{"location":"types/tes3weatherRain/#skydaycolor","text":"Read-only . The weather's sky day color. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherRain/#skynightcolor","text":"Read-only . The weather's sky night color. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherRain/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherRain/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherRain/#sundaycolor","text":"Read-only . The weather's sun day color. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherRain/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherRain/#sunnightcolor","text":"Read-only . The weather's sun night color. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherRain/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherRain/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherRain/#threshold","text":"The weather's threshold value. Returns : result (number)","title":"threshold"},{"location":"types/tes3weatherRain/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherRain/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherRain/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherSnow/","text":"tes3weatherSnow \u2693\ufe0e A structure that contains weather information for the snow weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) maxParticles \u2693\ufe0e The weather's maximum particles. Returns : result (number) particleEntranceSpeed \u2693\ufe0e The weather's particle entrance speed. Returns : result (number) particleHeightMax \u2693\ufe0e The weather's particle maximum height. Returns : result (number) particleHeightMin \u2693\ufe0e The weather's particle minimum height. Returns : result (number) particleRadius \u2693\ufe0e The weather's particle radius. Returns : result (number) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 ) threshold \u2693\ufe0e The weather's threshold value. Returns : result (number) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherSnow"},{"location":"types/tes3weatherSnow/#tes3weathersnow","text":"A structure that contains weather information for the snow weather type. This type inherits the following: tes3weather","title":"tes3weatherSnow"},{"location":"types/tes3weatherSnow/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherSnow/#ambientdaycolor","text":"Read-only . The weather's ambient day color. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherSnow/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherSnow/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherSnow/#ambientnightcolor","text":"Read-only . The weather's ambient night color. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherSnow/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherSnow/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherSnow/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherSnow/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherSnow/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherSnow/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherSnow/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherSnow/#fogdaycolor","text":"Read-only . The weather's fog day color. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherSnow/#fognightcolor","text":"Read-only . The weather's fog night color. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherSnow/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherSnow/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherSnow/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherSnow/#index","text":"Read-only . The weather's index ID. Returns : result (number)","title":"index"},{"location":"types/tes3weatherSnow/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherSnow/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherSnow/#maxparticles","text":"The weather's maximum particles. Returns : result (number)","title":"maxParticles"},{"location":"types/tes3weatherSnow/#particleentrancespeed","text":"The weather's particle entrance speed. Returns : result (number)","title":"particleEntranceSpeed"},{"location":"types/tes3weatherSnow/#particleheightmax","text":"The weather's particle maximum height. Returns : result (number)","title":"particleHeightMax"},{"location":"types/tes3weatherSnow/#particleheightmin","text":"The weather's particle minimum height. Returns : result (number)","title":"particleHeightMin"},{"location":"types/tes3weatherSnow/#particleradius","text":"The weather's particle radius. Returns : result (number)","title":"particleRadius"},{"location":"types/tes3weatherSnow/#skydaycolor","text":"Read-only . The weather's sky day color. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherSnow/#skynightcolor","text":"Read-only . The weather's sky night color. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherSnow/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherSnow/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherSnow/#sundaycolor","text":"Read-only . The weather's sun day color. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherSnow/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherSnow/#sunnightcolor","text":"Read-only . The weather's sun night color. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherSnow/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherSnow/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherSnow/#threshold","text":"The weather's threshold value. Returns : result (number)","title":"threshold"},{"location":"types/tes3weatherSnow/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherSnow/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherSnow/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherThunder/","text":"tes3weatherThunder \u2693\ufe0e A structure that contains weather information for the thunder weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) flashDecrement \u2693\ufe0e The weather's flash decrement value. Returns : result (number) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) maxParticles \u2693\ufe0e The weather's maximum particles. Returns : result (number) particleEntranceSpeed \u2693\ufe0e The weather's particle entrance speed. Returns : result (number) particleHeightMax \u2693\ufe0e The weather's particle maximum height. Returns : result (number) particleHeightMin \u2693\ufe0e The weather's particle minimum height. Returns : result (number) particleRadius \u2693\ufe0e The weather's particle radius. Returns : result (number) rainActive \u2693\ufe0e Read-only . The weather's active rain flag. Returns : result (boolean) rainLoopSound \u2693\ufe0e Read-only . The weather's rain loop sound object. Returns : result ( tes3sound ) rainLoopSoundId \u2693\ufe0e The weather's rain loop sound ID. Returns : result (string) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 ) threshold \u2693\ufe0e The weather's threshold value. Returns : result (number) thunderFrequency \u2693\ufe0e The weather's thunder frequency. Returns : result (number) thunderSound1 \u2693\ufe0e Read-only . The weather's thunder sound 1 object. Returns : result ( tes3sound ) thunderSound1Id \u2693\ufe0e The weather's thunder sound 1 ID. Returns : result (string) thunderSound2 \u2693\ufe0e Read-only . The weather's thunder sound 2 object. Returns : result ( tes3sound ) thunderSound2Id \u2693\ufe0e The weather's thunder sound 2 ID. Returns : result (string) thunderSound3 \u2693\ufe0e Read-only . The weather's thunder sound 3 object. Returns : result ( tes3sound ) thunderSound3Id \u2693\ufe0e The weather's thunder sound 3 ID. Returns : result (string) thunderSound4 \u2693\ufe0e Read-only . The weather's thunder sound 4 object. Returns : result ( tes3sound ) thunderSound4Id \u2693\ufe0e The weather's thunder sound 4 ID. Returns : result (string) thunderSoundCount \u2693\ufe0e The weather's thunder sound count. Returns : result (number) thunderThreshold \u2693\ufe0e The weather's thunder threshold. Returns : result (number) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherThunder"},{"location":"types/tes3weatherThunder/#tes3weatherthunder","text":"A structure that contains weather information for the thunder weather type. This type inherits the following: tes3weather","title":"tes3weatherThunder"},{"location":"types/tes3weatherThunder/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherThunder/#ambientdaycolor","text":"Read-only . The weather's ambient day color. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherThunder/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherThunder/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherThunder/#ambientnightcolor","text":"Read-only . The weather's ambient night color. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherThunder/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherThunder/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherThunder/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherThunder/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherThunder/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherThunder/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherThunder/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherThunder/#flashdecrement","text":"The weather's flash decrement value. Returns : result (number)","title":"flashDecrement"},{"location":"types/tes3weatherThunder/#fogdaycolor","text":"Read-only . The weather's fog day color. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherThunder/#fognightcolor","text":"Read-only . The weather's fog night color. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherThunder/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherThunder/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherThunder/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherThunder/#index","text":"Read-only . The weather's index ID. Returns : result (number)","title":"index"},{"location":"types/tes3weatherThunder/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherThunder/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherThunder/#maxparticles","text":"The weather's maximum particles. Returns : result (number)","title":"maxParticles"},{"location":"types/tes3weatherThunder/#particleentrancespeed","text":"The weather's particle entrance speed. Returns : result (number)","title":"particleEntranceSpeed"},{"location":"types/tes3weatherThunder/#particleheightmax","text":"The weather's particle maximum height. Returns : result (number)","title":"particleHeightMax"},{"location":"types/tes3weatherThunder/#particleheightmin","text":"The weather's particle minimum height. Returns : result (number)","title":"particleHeightMin"},{"location":"types/tes3weatherThunder/#particleradius","text":"The weather's particle radius. Returns : result (number)","title":"particleRadius"},{"location":"types/tes3weatherThunder/#rainactive","text":"Read-only . The weather's active rain flag. Returns : result (boolean)","title":"rainActive"},{"location":"types/tes3weatherThunder/#rainloopsound","text":"Read-only . The weather's rain loop sound object. Returns : result ( tes3sound )","title":"rainLoopSound"},{"location":"types/tes3weatherThunder/#rainloopsoundid","text":"The weather's rain loop sound ID. Returns : result (string)","title":"rainLoopSoundId"},{"location":"types/tes3weatherThunder/#skydaycolor","text":"Read-only . The weather's sky day color. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherThunder/#skynightcolor","text":"Read-only . The weather's sky night color. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherThunder/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherThunder/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherThunder/#sundaycolor","text":"Read-only . The weather's sun day color. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherThunder/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherThunder/#sunnightcolor","text":"Read-only . The weather's sun night color. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherThunder/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherThunder/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherThunder/#threshold","text":"The weather's threshold value. Returns : result (number)","title":"threshold"},{"location":"types/tes3weatherThunder/#thunderfrequency","text":"The weather's thunder frequency. Returns : result (number)","title":"thunderFrequency"},{"location":"types/tes3weatherThunder/#thundersound1","text":"Read-only . The weather's thunder sound 1 object. Returns : result ( tes3sound )","title":"thunderSound1"},{"location":"types/tes3weatherThunder/#thundersound1id","text":"The weather's thunder sound 1 ID. Returns : result (string)","title":"thunderSound1Id"},{"location":"types/tes3weatherThunder/#thundersound2","text":"Read-only . The weather's thunder sound 2 object. Returns : result ( tes3sound )","title":"thunderSound2"},{"location":"types/tes3weatherThunder/#thundersound2id","text":"The weather's thunder sound 2 ID. Returns : result (string)","title":"thunderSound2Id"},{"location":"types/tes3weatherThunder/#thundersound3","text":"Read-only . The weather's thunder sound 3 object. Returns : result ( tes3sound )","title":"thunderSound3"},{"location":"types/tes3weatherThunder/#thundersound3id","text":"The weather's thunder sound 3 ID. Returns : result (string)","title":"thunderSound3Id"},{"location":"types/tes3weatherThunder/#thundersound4","text":"Read-only . The weather's thunder sound 4 object. Returns : result ( tes3sound )","title":"thunderSound4"},{"location":"types/tes3weatherThunder/#thundersound4id","text":"The weather's thunder sound 4 ID. Returns : result (string)","title":"thunderSound4Id"},{"location":"types/tes3weatherThunder/#thundersoundcount","text":"The weather's thunder sound count. Returns : result (number)","title":"thunderSoundCount"},{"location":"types/tes3weatherThunder/#thunderthreshold","text":"The weather's thunder threshold. Returns : result (number)","title":"thunderThreshold"},{"location":"types/tes3weatherThunder/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherThunder/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherThunder/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3worldController/","text":"tes3worldController \u2693\ufe0e A core game object used for storing world simulation data. Properties \u2693\ufe0e aiDistanceScale \u2693\ufe0e A value in the range [0, 1]. The (relative) maximum distance setting for AI simulation. Corresponds to the AI distance option in the Options menu. Returns : result (number) allMobileActors \u2693\ufe0e Read-only . The list of all active mobile actors ( tes3mobileActor ). Mobile actors expire after 72 hours if they have not been in a loaded cell. Returns : result ( tes3iterator ) armCamera \u2693\ufe0e Read-only . The access to the first person arms camera. Returns : result ( tes3worldControllerRenderCamera ) audioController \u2693\ufe0e Read-only . The audio controller. Returns : result ( tes3audioController ) blindnessFader \u2693\ufe0e Read-only . Screen overlay fader for the blind effect. Returns : result ( tes3fader ) characterRenderTarget \u2693\ufe0e Read-only . Returns : result (tes3worldControllerRenderTarget) charGenState \u2693\ufe0e Read-only . The charGenState global variable. Indicates progress through character generation. Has a value of -1 when chargen is complete. Returns : result (tes3global) countMusicTracksBattle \u2693\ufe0e Read-only . The number of available battle music tracks. Returns : result (number) countMusicTracksExplore \u2693\ufe0e Read-only . The number of available explore music tracks. Returns : result (number) criticalDamageSound \u2693\ufe0e The sound played when an actor takes damage from a critical hit. It plays instead of the normal health damage sound. Returns : result ( tes3sound ) cursorOff \u2693\ufe0e If the target crosshair is disabled. Corresponds to the \"Crosshair\" option in the Options menu. Returns : result (boolean) day \u2693\ufe0e Read-only . The Day global variable, indicating the current day. Day numbering starts at 1 for the first day of a month. Returns : result (tes3global) daysPassed \u2693\ufe0e Read-only . The DaysPassed global variable, indicating the days passed since the game started for this character. Returns : result (tes3global) deadFloatScale \u2693\ufe0e Returns : result (number) defaultLandSound \u2693\ufe0e Returns : result ( tes3sound ) defaultLandWaterSound \u2693\ufe0e Returns : result ( tes3sound ) deltaTime \u2693\ufe0e The time interval (in seconds) between this frame and the last frame. Useful for calculations that involve movement or damage over a period of time. Returns : result (number) difficulty \u2693\ufe0e A number in the range [-1, 1]. Corresponds to the \"Difficulty\" option in the Options menu. Returns : result (number) drowingDamageSound \u2693\ufe0e The sound played when an actor takes health damage while drowning. It plays instead of the normal health damage sound. Returns : result ( tes3sound ) drownSound \u2693\ufe0e The sound played when an actor is losing health by drowning. Returns : result ( tes3sound ) enchantedItemEffect \u2693\ufe0e Read-only . The animated texture effect that is applied onto equipped enchanted items. Returns : result (niTextureEffect) enchantedItemEffectCreated \u2693\ufe0e Read-only . If the enchantedItemEffect is available. Returns : result (boolean) enchantedItemEffectTextures \u2693\ufe0e Read-only . An array of textures used for the enchanted item effect. Returns : result ( tes3iterator ) flagLevitationDisabled \u2693\ufe0e If levitation is disabled. Returns : result (boolean) flagTeleportingDisabled \u2693\ufe0e If teleporting is disabled. Returns : result (boolean) globalScripts \u2693\ufe0e Read-only . A list of active global scripts. Returns : result ( tes3iterator ) handToHandHit2Sound \u2693\ufe0e A sound played when a hand to hand attack hits. For each attack, handToHandHitSound or handToHandHitSound2 are randomly chosen. Returns : result ( tes3sound ) handToHandHitSound \u2693\ufe0e A sound played when a hand to hand attack hits. For each attack, handToHandHitSound or handToHandHitSound2 are randomly chosen. Returns : result ( tes3sound ) healthDamageSound \u2693\ufe0e The sound played when health damage is taken. Returns : result ( tes3sound ) heavyArmorHitSound \u2693\ufe0e The sound played when a heavy armor piece is hit. Returns : result ( tes3sound ) helpDelay \u2693\ufe0e A number in the range [0, 2]. The delay in seconds before a tooltip appears. Corresponds to the \"Menu help delay\" option in the Options menu. Returns : result (number) hitFader \u2693\ufe0e Read-only . Screen overlay fader that pulses when damage is taken. Returns : result ( tes3fader ) hour \u2693\ufe0e Read-only . The GameHour global variable, indicating the time of day. Returns : result (tes3global) hudStyle \u2693\ufe0e No known effect. Returns : result (number) inputController \u2693\ufe0e Read-only . The controller responsible for player input. Returns : result ( tes3inputController ) instance \u2693\ufe0e Read-only . Returns : result (HINSTANCE) itemRepairSound \u2693\ufe0e The sound played when an item is repaired. Returns : result ( tes3sound ) lastFrameTime \u2693\ufe0e Read-only . The value of tes3.worldController.systemTime at the start of the previous frame. Measured in milliseconds since the program was started. Returns : result (object) lightArmorHitSound \u2693\ufe0e The sound played when a light armor piece is hit. Returns : result ( tes3sound ) mapController \u2693\ufe0e Read-only . The controller responsible for the world and local maps. Returns : result (tes3mapController) maxFPS \u2693\ufe0e Maximum framerate target for the engine's FPS limiter. Returns : result (number) mediumArmorHitSound \u2693\ufe0e The sound played when a medium armor piece is hit. Returns : result ( tes3sound ) menuAlpha \u2693\ufe0e A value in the range [0, 1]. The alpha value of the black background of menus. Corresponds to the \"Menu transparency\" option in the Options menu. Returns : result (number) menuCamera \u2693\ufe0e Read-only . The access to the camera used to render menus. Returns : result ( tes3worldControllerRenderCamera ) menuClickSound \u2693\ufe0e The sound played when a UI button or other control is clicked. Returns : result ( tes3sound ) menuController \u2693\ufe0e Read-only . The controller responsible for the menu system. Returns : result ( tes3uiMenuController ) menuSizeSound \u2693\ufe0e Unused sound. Not used when a menu is resized. Returns : result ( tes3sound ) missSound \u2693\ufe0e The sound played when a weapon fails its to-hit check. Returns : result ( tes3sound ) mobController \u2693\ufe0e Read-only . The controller responsible for mobile objects and collision. Returns : result ( tes3mobController ) month \u2693\ufe0e Read-only . The Month global variable, indicating the current month. Month numbering starts at 0 for the first month, Morning Star. Returns : result (tes3global) monthsToRespawn \u2693\ufe0e Read-only . The monthsToRespawn global variable, used by the game to count the time left until containers are respawned. This is decremented at the end of a month (or end of a day with the appropriate MCP option). When it reaches 0 , containers are respawned. Returns : result (tes3global) mouseSensitivityX \u2693\ufe0e The horizontal camera rotation sensitivity. Corresponds to the \"Horizontal sensitivity\" option in the Options menu. Returns : result (number) mouseSensitivityY \u2693\ufe0e The vertical camera rotation sensitivity. Corresponds to the \"Vertical sensitivity\" option in the Options menu. Returns : result (number) musicSituation \u2693\ufe0e The kind of music being played. Only updates when music is not muted. 0 Explore music 1 Combat music 2 Main menu music Note: These values are available as tes3.musicSituation constants Returns : result (number) nodeCursor \u2693\ufe0e Read-only . The scenegraph node for the target crosshair. Returns : result ( niNode ) parentWindowHandle \u2693\ufe0e Read-only . Handle to the parent window. Returns : result (HWND) projectionDistance \u2693\ufe0e Returns : result (number) quests \u2693\ufe0e Read-only . A list of all available tes3quest s. Returns : result ( tes3iterator ) quickSaveWhenResting \u2693\ufe0e Controls if auto-save on resting or waiting is enabled. Corresponds to the \"Auto-save when rest\" option in the Options menu. Returns : result (object) rechargingItems \u2693\ufe0e Read-only . A list of enchanted items that are recharging (type tes3rechargingItem ). Items in the list may not all belong to the player. Returns : result ( tes3iterator ) shaderWaterReflectTerrain \u2693\ufe0e If pixel shader water reflection includes terrain. Not functional with MGE enabled. Returns : result (boolean) shaderWaterReflectUpdate \u2693\ufe0e Period between reflection updates for pixel shader water. Not functional with MGE enabled. Returns : result (number) shadowCamera \u2693\ufe0e Read-only . The access to the camera used for shadows rendering. Returns : result ( tes3worldControllerRenderCamera ) shadows \u2693\ufe0e An integer in the range [0,6]. Controls the amount of actor shadows drawn. Corresponds to the \"Real-time shadows\" option in the Options menu. Returns : result (number) showSubtitles \u2693\ufe0e If subtitles are shown. Corresponds to the \"Subtitles\" option in the Options menu. Returns : result (boolean) simulationTimeScalar \u2693\ufe0e A scalar used for simulation time. At the start of every frame, the deltaTime is multiplied by this value. Doing this here is safer than doing it in another event. Returns : result (number) splashController \u2693\ufe0e Read-only . Access to the splash controller. Returns : result ( tes3splashController ) splashscreenCamera \u2693\ufe0e Read-only . The access to the camera used to render splashscreens. Returns : result ( tes3worldControllerRenderCamera ) stopGameLoop \u2693\ufe0e When true, the game simulation loop will stop. Not normally used, and may have other unknown effects. Returns : result (boolean) sunglareFader \u2693\ufe0e Read-only . Screen overlay fader for sunglare. Returns : result ( tes3fader ) systemTime \u2693\ufe0e Read-only . Time in milliseconds since the program was started. Returns : result (number) timescale \u2693\ufe0e Read-only . The timescale global variable. Used to convert real time to in-game time. Returns : result (tes3global) transitionFader \u2693\ufe0e Read-only . Screen overlay fader for cell transitions. Returns : result ( tes3fader ) useBestAttack \u2693\ufe0e Automatically choose the best attack direction for attacks. Corresponds to the \"Always use best attack\" option in the Options menu. Returns : result (boolean) viewHeight \u2693\ufe0e Read-only . The height of the UI viewport in pixels. Affected by UI scaling. For screen resolution, use tes3.getViewportSize() . Returns : result (number) viewWidth \u2693\ufe0e Read-only . The width of the UI viewport in pixels. Affected by UI scaling. For screen resolution, use tes3.getViewportSize() . Returns : result (number) weaponSwishSound \u2693\ufe0e The sound played when an attack with a melee weapon is performed. It always plays when a melee attack is released, irrespective of hit or miss. Returns : result ( tes3sound ) weatherController \u2693\ufe0e Read-only . The weather controller. Returns : result ( tes3weatherController ) werewolfFader \u2693\ufe0e Read-only . Screen overlay fader for werewolf vision. Returns : result ( tes3fader ) werewolfFOV \u2693\ufe0e The camera FOV when the player is a werewolf. Returns : result (number) worldCamera \u2693\ufe0e Read-only . The access to the world camera. Returns : result ( tes3worldControllerRenderCamera ) year \u2693\ufe0e Read-only . The Year global variable, indicating the current year. Returns : result (tes3global) Functions \u2693\ufe0e applyEnchantEffect \u2693\ufe0e This function applies an enchantment's effects to a scene node. local result = tes3worldController . applyEnchantEffect ({ node = ..., enchantment = ... }) Parameters : params (table) node ( niNode ): A scene node to which to apply the enchantment's effects. enchantment ( tes3enchantment ): The enchantment's effects to apply. Returns : result (boolean)","title":"tes3worldController"},{"location":"types/tes3worldController/#tes3worldcontroller","text":"A core game object used for storing world simulation data.","title":"tes3worldController"},{"location":"types/tes3worldController/#properties","text":"","title":"Properties"},{"location":"types/tes3worldController/#aidistancescale","text":"A value in the range [0, 1]. The (relative) maximum distance setting for AI simulation. Corresponds to the AI distance option in the Options menu. Returns : result (number)","title":"aiDistanceScale"},{"location":"types/tes3worldController/#allmobileactors","text":"Read-only . The list of all active mobile actors ( tes3mobileActor ). Mobile actors expire after 72 hours if they have not been in a loaded cell. Returns : result ( tes3iterator )","title":"allMobileActors"},{"location":"types/tes3worldController/#armcamera","text":"Read-only . The access to the first person arms camera. Returns : result ( tes3worldControllerRenderCamera )","title":"armCamera"},{"location":"types/tes3worldController/#audiocontroller","text":"Read-only . The audio controller. Returns : result ( tes3audioController )","title":"audioController"},{"location":"types/tes3worldController/#blindnessfader","text":"Read-only . Screen overlay fader for the blind effect. Returns : result ( tes3fader )","title":"blindnessFader"},{"location":"types/tes3worldController/#characterrendertarget","text":"Read-only . Returns : result (tes3worldControllerRenderTarget)","title":"characterRenderTarget"},{"location":"types/tes3worldController/#chargenstate","text":"Read-only . The charGenState global variable. Indicates progress through character generation. Has a value of -1 when chargen is complete. Returns : result (tes3global)","title":"charGenState"},{"location":"types/tes3worldController/#countmusictracksbattle","text":"Read-only . The number of available battle music tracks. Returns : result (number)","title":"countMusicTracksBattle"},{"location":"types/tes3worldController/#countmusictracksexplore","text":"Read-only . The number of available explore music tracks. Returns : result (number)","title":"countMusicTracksExplore"},{"location":"types/tes3worldController/#criticaldamagesound","text":"The sound played when an actor takes damage from a critical hit. It plays instead of the normal health damage sound. Returns : result ( tes3sound )","title":"criticalDamageSound"},{"location":"types/tes3worldController/#cursoroff","text":"If the target crosshair is disabled. Corresponds to the \"Crosshair\" option in the Options menu. Returns : result (boolean)","title":"cursorOff"},{"location":"types/tes3worldController/#day","text":"Read-only . The Day global variable, indicating the current day. Day numbering starts at 1 for the first day of a month. Returns : result (tes3global)","title":"day"},{"location":"types/tes3worldController/#dayspassed","text":"Read-only . The DaysPassed global variable, indicating the days passed since the game started for this character. Returns : result (tes3global)","title":"daysPassed"},{"location":"types/tes3worldController/#deadfloatscale","text":"Returns : result (number)","title":"deadFloatScale"},{"location":"types/tes3worldController/#defaultlandsound","text":"Returns : result ( tes3sound )","title":"defaultLandSound"},{"location":"types/tes3worldController/#defaultlandwatersound","text":"Returns : result ( tes3sound )","title":"defaultLandWaterSound"},{"location":"types/tes3worldController/#deltatime","text":"The time interval (in seconds) between this frame and the last frame. Useful for calculations that involve movement or damage over a period of time. Returns : result (number)","title":"deltaTime"},{"location":"types/tes3worldController/#difficulty","text":"A number in the range [-1, 1]. Corresponds to the \"Difficulty\" option in the Options menu. Returns : result (number)","title":"difficulty"},{"location":"types/tes3worldController/#drowingdamagesound","text":"The sound played when an actor takes health damage while drowning. It plays instead of the normal health damage sound. Returns : result ( tes3sound )","title":"drowingDamageSound"},{"location":"types/tes3worldController/#drownsound","text":"The sound played when an actor is losing health by drowning. Returns : result ( tes3sound )","title":"drownSound"},{"location":"types/tes3worldController/#enchanteditemeffect","text":"Read-only . The animated texture effect that is applied onto equipped enchanted items. Returns : result (niTextureEffect)","title":"enchantedItemEffect"},{"location":"types/tes3worldController/#enchanteditemeffectcreated","text":"Read-only . If the enchantedItemEffect is available. Returns : result (boolean)","title":"enchantedItemEffectCreated"},{"location":"types/tes3worldController/#enchanteditemeffecttextures","text":"Read-only . An array of textures used for the enchanted item effect. Returns : result ( tes3iterator )","title":"enchantedItemEffectTextures"},{"location":"types/tes3worldController/#flaglevitationdisabled","text":"If levitation is disabled. Returns : result (boolean)","title":"flagLevitationDisabled"},{"location":"types/tes3worldController/#flagteleportingdisabled","text":"If teleporting is disabled. Returns : result (boolean)","title":"flagTeleportingDisabled"},{"location":"types/tes3worldController/#globalscripts","text":"Read-only . A list of active global scripts. Returns : result ( tes3iterator )","title":"globalScripts"},{"location":"types/tes3worldController/#handtohandhit2sound","text":"A sound played when a hand to hand attack hits. For each attack, handToHandHitSound or handToHandHitSound2 are randomly chosen. Returns : result ( tes3sound )","title":"handToHandHit2Sound"},{"location":"types/tes3worldController/#handtohandhitsound","text":"A sound played when a hand to hand attack hits. For each attack, handToHandHitSound or handToHandHitSound2 are randomly chosen. Returns : result ( tes3sound )","title":"handToHandHitSound"},{"location":"types/tes3worldController/#healthdamagesound","text":"The sound played when health damage is taken. Returns : result ( tes3sound )","title":"healthDamageSound"},{"location":"types/tes3worldController/#heavyarmorhitsound","text":"The sound played when a heavy armor piece is hit. Returns : result ( tes3sound )","title":"heavyArmorHitSound"},{"location":"types/tes3worldController/#helpdelay","text":"A number in the range [0, 2]. The delay in seconds before a tooltip appears. Corresponds to the \"Menu help delay\" option in the Options menu. Returns : result (number)","title":"helpDelay"},{"location":"types/tes3worldController/#hitfader","text":"Read-only . Screen overlay fader that pulses when damage is taken. Returns : result ( tes3fader )","title":"hitFader"},{"location":"types/tes3worldController/#hour","text":"Read-only . The GameHour global variable, indicating the time of day. Returns : result (tes3global)","title":"hour"},{"location":"types/tes3worldController/#hudstyle","text":"No known effect. Returns : result (number)","title":"hudStyle"},{"location":"types/tes3worldController/#inputcontroller","text":"Read-only . The controller responsible for player input. Returns : result ( tes3inputController )","title":"inputController"},{"location":"types/tes3worldController/#instance","text":"Read-only . Returns : result (HINSTANCE)","title":"instance"},{"location":"types/tes3worldController/#itemrepairsound","text":"The sound played when an item is repaired. Returns : result ( tes3sound )","title":"itemRepairSound"},{"location":"types/tes3worldController/#lastframetime","text":"Read-only . The value of tes3.worldController.systemTime at the start of the previous frame. Measured in milliseconds since the program was started. Returns : result (object)","title":"lastFrameTime"},{"location":"types/tes3worldController/#lightarmorhitsound","text":"The sound played when a light armor piece is hit. Returns : result ( tes3sound )","title":"lightArmorHitSound"},{"location":"types/tes3worldController/#mapcontroller","text":"Read-only . The controller responsible for the world and local maps. Returns : result (tes3mapController)","title":"mapController"},{"location":"types/tes3worldController/#maxfps","text":"Maximum framerate target for the engine's FPS limiter. Returns : result (number)","title":"maxFPS"},{"location":"types/tes3worldController/#mediumarmorhitsound","text":"The sound played when a medium armor piece is hit. Returns : result ( tes3sound )","title":"mediumArmorHitSound"},{"location":"types/tes3worldController/#menualpha","text":"A value in the range [0, 1]. The alpha value of the black background of menus. Corresponds to the \"Menu transparency\" option in the Options menu. Returns : result (number)","title":"menuAlpha"},{"location":"types/tes3worldController/#menucamera","text":"Read-only . The access to the camera used to render menus. Returns : result ( tes3worldControllerRenderCamera )","title":"menuCamera"},{"location":"types/tes3worldController/#menuclicksound","text":"The sound played when a UI button or other control is clicked. Returns : result ( tes3sound )","title":"menuClickSound"},{"location":"types/tes3worldController/#menucontroller","text":"Read-only . The controller responsible for the menu system. Returns : result ( tes3uiMenuController )","title":"menuController"},{"location":"types/tes3worldController/#menusizesound","text":"Unused sound. Not used when a menu is resized. Returns : result ( tes3sound )","title":"menuSizeSound"},{"location":"types/tes3worldController/#misssound","text":"The sound played when a weapon fails its to-hit check. Returns : result ( tes3sound )","title":"missSound"},{"location":"types/tes3worldController/#mobcontroller","text":"Read-only . The controller responsible for mobile objects and collision. Returns : result ( tes3mobController )","title":"mobController"},{"location":"types/tes3worldController/#month","text":"Read-only . The Month global variable, indicating the current month. Month numbering starts at 0 for the first month, Morning Star. Returns : result (tes3global)","title":"month"},{"location":"types/tes3worldController/#monthstorespawn","text":"Read-only . The monthsToRespawn global variable, used by the game to count the time left until containers are respawned. This is decremented at the end of a month (or end of a day with the appropriate MCP option). When it reaches 0 , containers are respawned. Returns : result (tes3global)","title":"monthsToRespawn"},{"location":"types/tes3worldController/#mousesensitivityx","text":"The horizontal camera rotation sensitivity. Corresponds to the \"Horizontal sensitivity\" option in the Options menu. Returns : result (number)","title":"mouseSensitivityX"},{"location":"types/tes3worldController/#mousesensitivityy","text":"The vertical camera rotation sensitivity. Corresponds to the \"Vertical sensitivity\" option in the Options menu. Returns : result (number)","title":"mouseSensitivityY"},{"location":"types/tes3worldController/#musicsituation","text":"The kind of music being played. Only updates when music is not muted. 0 Explore music 1 Combat music 2 Main menu music Note: These values are available as tes3.musicSituation constants Returns : result (number)","title":"musicSituation"},{"location":"types/tes3worldController/#nodecursor","text":"Read-only . The scenegraph node for the target crosshair. Returns : result ( niNode )","title":"nodeCursor"},{"location":"types/tes3worldController/#parentwindowhandle","text":"Read-only . Handle to the parent window. Returns : result (HWND)","title":"parentWindowHandle"},{"location":"types/tes3worldController/#projectiondistance","text":"Returns : result (number)","title":"projectionDistance"},{"location":"types/tes3worldController/#quests","text":"Read-only . A list of all available tes3quest s. Returns : result ( tes3iterator )","title":"quests"},{"location":"types/tes3worldController/#quicksavewhenresting","text":"Controls if auto-save on resting or waiting is enabled. Corresponds to the \"Auto-save when rest\" option in the Options menu. Returns : result (object)","title":"quickSaveWhenResting"},{"location":"types/tes3worldController/#rechargingitems","text":"Read-only . A list of enchanted items that are recharging (type tes3rechargingItem ). Items in the list may not all belong to the player. Returns : result ( tes3iterator )","title":"rechargingItems"},{"location":"types/tes3worldController/#shaderwaterreflectterrain","text":"If pixel shader water reflection includes terrain. Not functional with MGE enabled. Returns : result (boolean)","title":"shaderWaterReflectTerrain"},{"location":"types/tes3worldController/#shaderwaterreflectupdate","text":"Period between reflection updates for pixel shader water. Not functional with MGE enabled. Returns : result (number)","title":"shaderWaterReflectUpdate"},{"location":"types/tes3worldController/#shadowcamera","text":"Read-only . The access to the camera used for shadows rendering. Returns : result ( tes3worldControllerRenderCamera )","title":"shadowCamera"},{"location":"types/tes3worldController/#shadows","text":"An integer in the range [0,6]. Controls the amount of actor shadows drawn. Corresponds to the \"Real-time shadows\" option in the Options menu. Returns : result (number)","title":"shadows"},{"location":"types/tes3worldController/#showsubtitles","text":"If subtitles are shown. Corresponds to the \"Subtitles\" option in the Options menu. Returns : result (boolean)","title":"showSubtitles"},{"location":"types/tes3worldController/#simulationtimescalar","text":"A scalar used for simulation time. At the start of every frame, the deltaTime is multiplied by this value. Doing this here is safer than doing it in another event. Returns : result (number)","title":"simulationTimeScalar"},{"location":"types/tes3worldController/#splashcontroller","text":"Read-only . Access to the splash controller. Returns : result ( tes3splashController )","title":"splashController"},{"location":"types/tes3worldController/#splashscreencamera","text":"Read-only . The access to the camera used to render splashscreens. Returns : result ( tes3worldControllerRenderCamera )","title":"splashscreenCamera"},{"location":"types/tes3worldController/#stopgameloop","text":"When true, the game simulation loop will stop. Not normally used, and may have other unknown effects. Returns : result (boolean)","title":"stopGameLoop"},{"location":"types/tes3worldController/#sunglarefader","text":"Read-only . Screen overlay fader for sunglare. Returns : result ( tes3fader )","title":"sunglareFader"},{"location":"types/tes3worldController/#systemtime","text":"Read-only . Time in milliseconds since the program was started. Returns : result (number)","title":"systemTime"},{"location":"types/tes3worldController/#timescale","text":"Read-only . The timescale global variable. Used to convert real time to in-game time. Returns : result (tes3global)","title":"timescale"},{"location":"types/tes3worldController/#transitionfader","text":"Read-only . Screen overlay fader for cell transitions. Returns : result ( tes3fader )","title":"transitionFader"},{"location":"types/tes3worldController/#usebestattack","text":"Automatically choose the best attack direction for attacks. Corresponds to the \"Always use best attack\" option in the Options menu. Returns : result (boolean)","title":"useBestAttack"},{"location":"types/tes3worldController/#viewheight","text":"Read-only . The height of the UI viewport in pixels. Affected by UI scaling. For screen resolution, use tes3.getViewportSize() . Returns : result (number)","title":"viewHeight"},{"location":"types/tes3worldController/#viewwidth","text":"Read-only . The width of the UI viewport in pixels. Affected by UI scaling. For screen resolution, use tes3.getViewportSize() . Returns : result (number)","title":"viewWidth"},{"location":"types/tes3worldController/#weaponswishsound","text":"The sound played when an attack with a melee weapon is performed. It always plays when a melee attack is released, irrespective of hit or miss. Returns : result ( tes3sound )","title":"weaponSwishSound"},{"location":"types/tes3worldController/#weathercontroller","text":"Read-only . The weather controller. Returns : result ( tes3weatherController )","title":"weatherController"},{"location":"types/tes3worldController/#werewolffader","text":"Read-only . Screen overlay fader for werewolf vision. Returns : result ( tes3fader )","title":"werewolfFader"},{"location":"types/tes3worldController/#werewolffov","text":"The camera FOV when the player is a werewolf. Returns : result (number)","title":"werewolfFOV"},{"location":"types/tes3worldController/#worldcamera","text":"Read-only . The access to the world camera. Returns : result ( tes3worldControllerRenderCamera )","title":"worldCamera"},{"location":"types/tes3worldController/#year","text":"Read-only . The Year global variable, indicating the current year. Returns : result (tes3global)","title":"year"},{"location":"types/tes3worldController/#functions","text":"","title":"Functions"},{"location":"types/tes3worldController/#applyenchanteffect","text":"This function applies an enchantment's effects to a scene node. local result = tes3worldController . applyEnchantEffect ({ node = ..., enchantment = ... }) Parameters : params (table) node ( niNode ): A scene node to which to apply the enchantment's effects. enchantment ( tes3enchantment ): The enchantment's effects to apply. Returns : result (boolean)","title":"applyEnchantEffect"},{"location":"types/tes3worldControllerRenderCamera/","text":"tes3worldControllerRenderCamera \u2693\ufe0e A core game object used for storing camera objects. Properties \u2693\ufe0e cameraData \u2693\ufe0e Read-only . The additional data of the camera. Returns : result ( tes3worldControllerRenderCameraData ) cameraRoot \u2693\ufe0e Read-only . The root scene node of the camera. Returns : result ( niNode ) renderer \u2693\ufe0e Read-only . The renderer of the camera. Returns : result (niRenderer) root \u2693\ufe0e Read-only . Returns : result ( niNode )","title":"tes3worldControllerRenderCamera"},{"location":"types/tes3worldControllerRenderCamera/#tes3worldcontrollerrendercamera","text":"A core game object used for storing camera objects.","title":"tes3worldControllerRenderCamera"},{"location":"types/tes3worldControllerRenderCamera/#properties","text":"","title":"Properties"},{"location":"types/tes3worldControllerRenderCamera/#cameradata","text":"Read-only . The additional data of the camera. Returns : result ( tes3worldControllerRenderCameraData )","title":"cameraData"},{"location":"types/tes3worldControllerRenderCamera/#cameraroot","text":"Read-only . The root scene node of the camera. Returns : result ( niNode )","title":"cameraRoot"},{"location":"types/tes3worldControllerRenderCamera/#renderer","text":"Read-only . The renderer of the camera. Returns : result (niRenderer)","title":"renderer"},{"location":"types/tes3worldControllerRenderCamera/#root","text":"Read-only . Returns : result ( niNode )","title":"root"},{"location":"types/tes3worldControllerRenderCameraData/","text":"tes3worldControllerRenderCameraData \u2693\ufe0e A core game object used for storing additional data for camera objects. Properties \u2693\ufe0e camera \u2693\ufe0e The camera scene node. Returns : result ( niCamera ) farPlaneDistance \u2693\ufe0e The distance of the camera's far plane. Returns : result (number) fov \u2693\ufe0e The camera's Field of View. Returns : result (number) nearPlaneDistance \u2693\ufe0e The distance of the camera's near plane. Returns : result (number) viewportHeight \u2693\ufe0e The viewport height. Returns : result (number) viewportWidth \u2693\ufe0e The viewport width. Returns : result (number)","title":"tes3worldControllerRenderCameraData"},{"location":"types/tes3worldControllerRenderCameraData/#tes3worldcontrollerrendercameradata","text":"A core game object used for storing additional data for camera objects.","title":"tes3worldControllerRenderCameraData"},{"location":"types/tes3worldControllerRenderCameraData/#properties","text":"","title":"Properties"},{"location":"types/tes3worldControllerRenderCameraData/#camera","text":"The camera scene node. Returns : result ( niCamera )","title":"camera"},{"location":"types/tes3worldControllerRenderCameraData/#farplanedistance","text":"The distance of the camera's far plane. Returns : result (number)","title":"farPlaneDistance"},{"location":"types/tes3worldControllerRenderCameraData/#fov","text":"The camera's Field of View. Returns : result (number)","title":"fov"},{"location":"types/tes3worldControllerRenderCameraData/#nearplanedistance","text":"The distance of the camera's near plane. Returns : result (number)","title":"nearPlaneDistance"},{"location":"types/tes3worldControllerRenderCameraData/#viewportheight","text":"The viewport height. Returns : result (number)","title":"viewportHeight"},{"location":"types/tes3worldControllerRenderCameraData/#viewportwidth","text":"The viewport width. Returns : result (number)","title":"viewportWidth"}]}