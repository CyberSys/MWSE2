{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About \u2693\ufe0e The Morrowind Script Extender makes additional functions available for use in Morrowind scripts, beyond those provided by the game's construction set. These extra functions allow modders to add features and behavior to scripts that would otherwise be impractical or impossible. Morrowind Modding Community Discord If you are looking for MWSE scripting advice or discussions, try the Morrowind Modding Community Discord . Installation \u2693\ufe0e Before running Morrowind with MWSE enabled, download these prerequisites: Visual Studio x86 2022 Redistributable . Note that you will need the x86 version, even if you already have the x64 redistributable installed. Morrowind Code Patch modifies the game executable, and MWSE assumes you have at least the base patches performed for its own modifications. Morrowind Graphic Extender XE (MGE XE) allows MWSE to be loaded, and provides additional functionality. Once these are installed, run MWSE-Update.exe in your Morrowind install folder. MGE XE comes bundled with MWSE's updater to make this process simpler. This updater downloads the latest automated build from GitHub . These can be downloaded manually if the updater fails. Contributing \u2693\ufe0e The Morrowind Script Extender is open source software that welcomes contributions in the forms of ideas, bug fixes, documentation, and new features. There is a separate guide for documentation contributions found here . Requirements \u2693\ufe0e Visual Studio \u2693\ufe0e Contributing to MWSE requires a copy of Visual Studio 2022 , with the following features enabled: Workloads: Desktop development with C++ LuaJIT \u2693\ufe0e LuaJIT needs to be compiled once, and is included in the project. To compile, use Tools > Visual Studio Command Prompt and run the following: cd deps\\LuaJIT\\src msvcbuild.bat GitHub \u2693\ufe0e Code contributions are managed via GitHub . Discord \u2693\ufe0e Communication of features, designs, and requests are handled on Discord. See the #mwse channel in the Morrowind Modding Community Discord . Authors \u2693\ufe0e The following individuals have contributed to the Morrowind Script Extender. Anthony Garcia C3pa Charles Cooley (cdcooley) Cody Erekson (Fliggerty) FreshFish Grant McDorman Greatness7 Hrnchamd Merzasphor Michael Wallar (NullCascade) OperatorJack Pete Goodfellow (Petethegoat) Pierre Steeg Sebastien Levy (MetaBarj0) Tim Peters Timeslip","title":"About"},{"location":"#about","text":"The Morrowind Script Extender makes additional functions available for use in Morrowind scripts, beyond those provided by the game's construction set. These extra functions allow modders to add features and behavior to scripts that would otherwise be impractical or impossible. Morrowind Modding Community Discord If you are looking for MWSE scripting advice or discussions, try the Morrowind Modding Community Discord .","title":"About"},{"location":"#installation","text":"Before running Morrowind with MWSE enabled, download these prerequisites: Visual Studio x86 2022 Redistributable . Note that you will need the x86 version, even if you already have the x64 redistributable installed. Morrowind Code Patch modifies the game executable, and MWSE assumes you have at least the base patches performed for its own modifications. Morrowind Graphic Extender XE (MGE XE) allows MWSE to be loaded, and provides additional functionality. Once these are installed, run MWSE-Update.exe in your Morrowind install folder. MGE XE comes bundled with MWSE's updater to make this process simpler. This updater downloads the latest automated build from GitHub . These can be downloaded manually if the updater fails.","title":"Installation"},{"location":"#contributing","text":"The Morrowind Script Extender is open source software that welcomes contributions in the forms of ideas, bug fixes, documentation, and new features. There is a separate guide for documentation contributions found here .","title":"Contributing"},{"location":"#requirements","text":"","title":"Requirements"},{"location":"#github","text":"Code contributions are managed via GitHub .","title":"GitHub"},{"location":"#discord","text":"Communication of features, designs, and requests are handled on Discord. See the #mwse channel in the Morrowind Modding Community Discord .","title":"Discord"},{"location":"#authors","text":"The following individuals have contributed to the Morrowind Script Extender. Anthony Garcia C3pa Charles Cooley (cdcooley) Cody Erekson (Fliggerty) FreshFish Grant McDorman Greatness7 Hrnchamd Merzasphor Michael Wallar (NullCascade) OperatorJack Pete Goodfellow (Petethegoat) Pierre Steeg Sebastien Levy (MetaBarj0) Tim Peters Timeslip","title":"Authors"},{"location":"apis/debug/","text":"debug \u2693\ufe0e This is an extension of Lua Debug library. Functions \u2693\ufe0e debug.clearLogCacheForFile \u2693\ufe0e Clears any prefix information from cache for use with debug.log . This is useful if your file loads dynamically via dofile , and is subject to change during development. debug . clearLogCacheForFile ( file ) Parameters : file (string?): The path to the file. If omitted, the calling file will have its associated log cache removed. debug.log \u2693\ufe0e Logs a message to MWSE.log file. The output format is [path] \"msg\" = msg , where the path is the path and line at which the function was called. local value = debug . log ( value ) Parameters : value (string): The message to log. Returns : value (string)","title":"Debug"},{"location":"apis/debug/#debug","text":"This is an extension of Lua Debug library.","title":"debug"},{"location":"apis/debug/#functions","text":"","title":"Functions"},{"location":"apis/debug/#debugclearlogcacheforfile","text":"Clears any prefix information from cache for use with debug.log . This is useful if your file loads dynamically via dofile , and is subject to change during development. debug . clearLogCacheForFile ( file ) Parameters : file (string?): The path to the file. If omitted, the calling file will have its associated log cache removed.","title":"debug.clearLogCacheForFile"},{"location":"apis/debug/#debuglog","text":"Logs a message to MWSE.log file. The output format is [path] \"msg\" = msg , where the path is the path and line at which the function was called. local value = debug . log ( value ) Parameters : value (string): The message to log. Returns : value (string)","title":"debug.log"},{"location":"apis/dofile/","text":"dofile \u2693\ufe0e Reads, loads, and excutes a lua file at a given path. Similar to the require and include functions, dofile allows the use of periods as a path delimiter. Unlike require , a path relative to Morrowind.exe may be given. dofile ( path ) Parameters : path (string)","title":"Dofile"},{"location":"apis/dofile/#dofile","text":"Reads, loads, and excutes a lua file at a given path. Similar to the require and include functions, dofile allows the use of periods as a path delimiter. Unlike require , a path relative to Morrowind.exe may be given. dofile ( path ) Parameters : path (string)","title":"dofile"},{"location":"apis/event/","text":"event \u2693\ufe0e The event library helps to instruct mwse to call a given function when a specific action is taken in the game. Functions \u2693\ufe0e event.clear \u2693\ufe0e Removes all callbacks registered for a given event. event . clear ( eventId , filter ) Parameters : eventId (string): Optional . filter (userdata, string, number): Optional . event.isRegistered \u2693\ufe0e Returns true for a function previously registered to an event with event.register() . local result = event . isRegistered ( eventId , callback , { filter = ... }) Parameters : eventId (string) callback (function) options (table): Optional . filter (userdata, string, number): Optional . Allows searching for a callback function registered with the specified filter. Returns : result (boolean) event.register \u2693\ufe0e Registers a function to be called when an event is raised. event . register ( eventId , callback , { doOnce = ..., filter = ..., priority = ... }) Parameters : eventId (string) callback (function) options (table): Optional . doOnce (boolean): Default : false . If this option is set to true , the function registered will be executed only once, and automatically unregistered thereafter. filter (userdata, string, number): Optional . This parameter allows selectively executing the callback function only when a specific condition is met. The exact behavior depends on each event. priority (number): Optional . Event callback with higher priority is executed before callback with lower priority. Typically used to make certain mods compatible. event.trigger \u2693\ufe0e Triggers an event. This can be used to trigger custom events with specific data. local resultPayload = event . trigger ( eventId , payload , { filter = ... }) Parameters : eventId (string) payload (table): Optional . options (table): Optional . filter (userdata, string, number): Optional . Assigning a filter will make the event callbacks with filters matching this one to be executed first. All the other unfiltered callbacks are executed after. Returns : resultPayload (table): This is the modified payload after all the callback functions registered on the triggered event are executed. Returning true from a callback function will set both payload.block and payload.claim to true . After an event has been claimed by a certain function (by setting the claim in eventData to true ) no other registered callback functions will be executed on this event trigger. This is useful if you wish to implement blocking system for your event. In addition, this can be used to the same effect as some MWSE's events allow changing some of the eventData values to modify the behavior of the vanilla mechanics. event.unregister \u2693\ufe0e Unregisters a function previously registered for an event with event.register() . event . unregister ( eventId , callback , { filter = ... }) Parameters : eventId (string) callback (function) options (table): Optional . filter (userdata, string, number): Optional . If a callback function was registered with a filter, the same filter needs to be passed to event.unregister to successfully unregister the callback function.","title":"Event"},{"location":"apis/event/#event","text":"The event library helps to instruct mwse to call a given function when a specific action is taken in the game.","title":"event"},{"location":"apis/event/#functions","text":"","title":"Functions"},{"location":"apis/event/#eventclear","text":"Removes all callbacks registered for a given event. event . clear ( eventId , filter ) Parameters : eventId (string): Optional . filter (userdata, string, number): Optional .","title":"event.clear"},{"location":"apis/event/#eventisregistered","text":"Returns true for a function previously registered to an event with event.register() . local result = event . isRegistered ( eventId , callback , { filter = ... }) Parameters : eventId (string) callback (function) options (table): Optional . filter (userdata, string, number): Optional . Allows searching for a callback function registered with the specified filter. Returns : result (boolean)","title":"event.isRegistered"},{"location":"apis/event/#eventregister","text":"Registers a function to be called when an event is raised. event . register ( eventId , callback , { doOnce = ..., filter = ..., priority = ... }) Parameters : eventId (string) callback (function) options (table): Optional . doOnce (boolean): Default : false . If this option is set to true , the function registered will be executed only once, and automatically unregistered thereafter. filter (userdata, string, number): Optional . This parameter allows selectively executing the callback function only when a specific condition is met. The exact behavior depends on each event. priority (number): Optional . Event callback with higher priority is executed before callback with lower priority. Typically used to make certain mods compatible.","title":"event.register"},{"location":"apis/event/#eventtrigger","text":"Triggers an event. This can be used to trigger custom events with specific data. local resultPayload = event . trigger ( eventId , payload , { filter = ... }) Parameters : eventId (string) payload (table): Optional . options (table): Optional . filter (userdata, string, number): Optional . Assigning a filter will make the event callbacks with filters matching this one to be executed first. All the other unfiltered callbacks are executed after. Returns : resultPayload (table): This is the modified payload after all the callback functions registered on the triggered event are executed. Returning true from a callback function will set both payload.block and payload.claim to true . After an event has been claimed by a certain function (by setting the claim in eventData to true ) no other registered callback functions will be executed on this event trigger. This is useful if you wish to implement blocking system for your event. In addition, this can be used to the same effect as some MWSE's events allow changing some of the eventData values to modify the behavior of the vanilla mechanics.","title":"event.trigger"},{"location":"apis/event/#eventunregister","text":"Unregisters a function previously registered for an event with event.register() . event . unregister ( eventId , callback , { filter = ... }) Parameters : eventId (string) callback (function) options (table): Optional . filter (userdata, string, number): Optional . If a callback function was registered with a filter, the same filter needs to be passed to event.unregister to successfully unregister the callback function.","title":"event.unregister"},{"location":"apis/include/","text":"include \u2693\ufe0e Loads the given module. This functions identically to require , but will return nil instead of erroring if the module couldn't be found. If there is another error is found inside the included file, it will still cause an error in the include ing file. The function starts by looking into the package.loaded table to determine whether modname is already loaded. If it is, then include returns the value stored at package.loaded[modname] . Otherwise, it tries to find a loader for the module. Intended use case for this function is for making interoperability between mods. local result = include ( modname ) Parameters : modname (string) Returns : result (table, nil) Example: Example How to check whether a user has an optional module installed. local optionalModule = include ( \"optionalModule.file\" ) if optionalModule then -- do stuff with the optinalModule optionalModule . foo ( \"bar\" ) else mwse . log ( \"[MyMod] To enjoy all of this mod's features, please install optionalModule.\" ) -- do some other stuff end","title":"Include"},{"location":"apis/include/#include","text":"Loads the given module. This functions identically to require , but will return nil instead of erroring if the module couldn't be found. If there is another error is found inside the included file, it will still cause an error in the include ing file. The function starts by looking into the package.loaded table to determine whether modname is already loaded. If it is, then include returns the value stored at package.loaded[modname] . Otherwise, it tries to find a loader for the module. Intended use case for this function is for making interoperability between mods. local result = include ( modname ) Parameters : modname (string) Returns : result (table, nil) Example: Example How to check whether a user has an optional module installed. local optionalModule = include ( \"optionalModule.file\" ) if optionalModule then -- do stuff with the optinalModule optionalModule . foo ( \"bar\" ) else mwse . log ( \"[MyMod] To enjoy all of this mod's features, please install optionalModule.\" ) -- do some other stuff end","title":"include"},{"location":"apis/json/","text":"json \u2693\ufe0e Provides support for interacting with json data through an extended dkjson module. Properties \u2693\ufe0e json.null \u2693\ufe0e You can use this value for setting explicit null values. Returns : result (number) json.version \u2693\ufe0e Current version of dkjson. Returns : result (string) Functions \u2693\ufe0e json.decode \u2693\ufe0e Decode string into a table. local result = json . decode ( s , position , nullValue ) Parameters : s (string) position (number): Default : 1 . nullValue (string, nil): Default : nil . Returns : result (table) json.encode \u2693\ufe0e Create a string representing the object. Object can be a table, a string, a number, a boolean, nil, json.null or any object with a function __tojson in its metatable. A table can only use strings and numbers as keys and its values have to be valid objects as well. It raises an error for any invalid data types or reference cycles. local result = json . encode ( object , state ) Parameters : object (table) state (table?) Returns : result (string) json.loadfile \u2693\ufe0e Loads the contents of a file through json.decode. Files loaded from Data Files\\MWSE\\{fileName}.json. local result = json . loadfile ( fileName ) Parameters : fileName (string) Returns : result (table) json.quotestring \u2693\ufe0e Quote a UTF-8 string and escape critical characters using JSON escape sequences. This function is only necessary when you build your own __tojson functions. local result = json . quotestring ( s ) Parameters : s (string) Returns : result (string) json.savefile \u2693\ufe0e Saves a serializable table to Data Files\\MWSE\\{fileName}.json, using json.encode. json . savefile ( fileName , object , config ) Parameters : fileName (string) object (table) config (table): Optional .","title":"Json"},{"location":"apis/json/#json","text":"Provides support for interacting with json data through an extended dkjson module.","title":"json"},{"location":"apis/json/#properties","text":"","title":"Properties"},{"location":"apis/json/#jsonnull","text":"You can use this value for setting explicit null values. Returns : result (number)","title":"json.null"},{"location":"apis/json/#jsonversion","text":"Current version of dkjson. Returns : result (string)","title":"json.version"},{"location":"apis/json/#functions","text":"","title":"Functions"},{"location":"apis/json/#jsondecode","text":"Decode string into a table. local result = json . decode ( s , position , nullValue ) Parameters : s (string) position (number): Default : 1 . nullValue (string, nil): Default : nil . Returns : result (table)","title":"json.decode"},{"location":"apis/json/#jsonencode","text":"Create a string representing the object. Object can be a table, a string, a number, a boolean, nil, json.null or any object with a function __tojson in its metatable. A table can only use strings and numbers as keys and its values have to be valid objects as well. It raises an error for any invalid data types or reference cycles. local result = json . encode ( object , state ) Parameters : object (table) state (table?) Returns : result (string)","title":"json.encode"},{"location":"apis/json/#jsonloadfile","text":"Loads the contents of a file through json.decode. Files loaded from Data Files\\MWSE\\{fileName}.json. local result = json . loadfile ( fileName ) Parameters : fileName (string) Returns : result (table)","title":"json.loadfile"},{"location":"apis/json/#jsonquotestring","text":"Quote a UTF-8 string and escape critical characters using JSON escape sequences. This function is only necessary when you build your own __tojson functions. local result = json . quotestring ( s ) Parameters : s (string) Returns : result (string)","title":"json.quotestring"},{"location":"apis/json/#jsonsavefile","text":"Saves a serializable table to Data Files\\MWSE\\{fileName}.json, using json.encode. json . savefile ( fileName , object , config ) Parameters : fileName (string) object (table) config (table): Optional .","title":"json.savefile"},{"location":"apis/lfs/","text":"lfs \u2693\ufe0e LuaFileSystem is a Lua library developed to complement the set of functions related to file systems offered by the standard Lua distribution. This library has been further extended by MWSE. Functions \u2693\ufe0e lfs.attributes \u2693\ufe0e Returns a table with the file attributes corresponding to filepath (or nil followed by an error message and a system-dependent error code in case of error). If the second optional argument is given and is a string, then only the value of the named attribute is returned (this use is equivalent to lfs.attributes(filepath)[request_name], but the table is not created and only one attribute is retrieved from the O.S.). if a table is passed as the second argument, it (result_table) is filled with attributes and returned instead of a new table. The attributes are described as follows; attribute mode is a string, all the others are numbers, and the time related attributes use the same time reference of os.time: dev, mode, nlink, access, modification, change, size, permissions. local attributes , error = lfs . attributes ( path , request , resultTable ) Parameters : path (string): The path, relative to the current directory, to get attributes for. request (string): Optional . The specific attribute to look for. If provided, the return value becomes the requested value (or nil) instead of a table. resultTable (table): Optional . If provided, this table will be reused as the result table. If not provided, a new table is created. Returns : attributes (table, string, number, nil): All attributes in a table, the value of a specific attribute if one was requested, or nil on an error. error (string, nil): In the case of an error, a string describing the issue. lfs.chdir \u2693\ufe0e Changes the current working directory to the given path. Note that this is global. Do not use this function without restoring the previous directory at the end of your logic. Failure to do so can cause unrecoverable errors. local success , error = lfs . chdir ( path ) Parameters : path (string): The path to change to. Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue. lfs.currentdir \u2693\ufe0e Changes the current working directory to the given path. local path , error = lfs . currentdir () Returns : path (string, nil): The current working directory, or nil on an error. error (string, nil): In the case of an error, a string describing the issue. lfs.dir \u2693\ufe0e Creates a Lua iterator over the entries of a given directory. This can be used to create a for loop of directories. Be wary that current and parent directory markers may be available in the results. lfs . dir ( path ) Parameters : path (string): The path to iterate over. lfs.directoryexists \u2693\ufe0e Simple check to determine if a directory exists. local success = lfs . directoryexists ( path ) Parameters : path (string): The path to determine existance of. Returns : success (boolean): true if the directory exists. lfs.fileexists \u2693\ufe0e Simple check to determine if a file exists. local success = lfs . fileexists ( path ) Parameters : path (string): The path to determine existance of. Returns : success (boolean): true if the file exists. lfs.link \u2693\ufe0e Creates a link. This is a hard link by default. local success , error = lfs . link ( old , new , symlink ) Parameters : old (string): The object to link to. new (string): The name of the link. symlink (boolean): Optional . If true, the link will be symbolic instead. Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue. lfs.lock \u2693\ufe0e Locks a file or a part of it. This function works on open files; the file handle should be specified as the first argument. local success , error = lfs . lock ( filehandle , mode , start , length ) Parameters : filehandle ( ioFile ): The file handle to lock. mode (string): \"r\" for a read/shared lock, or \"w\" for a write/exclusive lock. start (number): Optional . The starting point of the file to lock. length (number): Optional . The length of the file, relative to start, to lock. Returns : success (boolean, nil): true if the operation was successful, or nil in the case of an error. error (string, nil): In the case of an error, a string describing the issue. In particular, if the lock exists and is not stale it returns the \"File exists\" message. lfs.lock_dir \u2693\ufe0e Creates a lockfile (called lockfile.lfs) in path if it does not exist and returns the lock. If the lock already exists checks if it's stale, using the second parameter (default for the second parameter is INT_MAX, which in practice means the lock will never be stale. The lock object has a method to free it. local success , error = lfs . lock_dir ( path ) Parameters : path (string): The path to lock. Returns : success ( lfsLock , nil): The lock object to manage, or nil in the case of an error. error (string, nil): In the case of an error, a string describing the issue. In particular, if the lock exists and is not stale it returns the \"File exists\" message. lfs.mkdir \u2693\ufe0e Creates a new directory. local success , error = lfs . mkdir ( dirname ) Parameters : dirname (string): The name of the new directory. Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue. lfs.rmdir \u2693\ufe0e Removes an existing directory. Unless using the recursive parameter, only empty directories can be removed. local success , error = lfs . rmdir ( dirname , recursive ) Parameters : dirname (string): The name of the directory to remove. recursive (boolean): Default : false . If true, all contents of the directory will be removed as well. Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue. lfs.setmode \u2693\ufe0e Sets the writing mode for a file. local success , errorOrOldMode = lfs . setmode ( file , mode ) Parameters : file ( ioFile ): The file to set mode for. mode (string): The file's new mode. Can be either \"binary\" or \"text\". Returns : success (boolean, nil): true in case of success, or nil on an error. errorOrOldMode (string): If succesful, this will be the previous file mode used. In the case of an error, a string describing the issue. lfs.touch \u2693\ufe0e Set access and modification times of a file. Both access and modified times are measured in seconds, matching the OS time function. local success , error = lfs . touch ( path , accessTime , modifiedTime ) Parameters : path (string): The path to touch. accessTime (number): Optional . The new access time to set. modifiedTime (number): Optional . The new last modified time to set Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue. lfs.unlock \u2693\ufe0e Unlocks a file or a part of it. This function works on open files; the file handle should be specified as the first argument. local success , error = lfs . unlock ( filehandle , mode , start , length ) Parameters : filehandle ( ioFile ): The file handle to unlock. mode (string): \"r\" for a read/shared lock, or \"w\" for a write/exclusive unlock. start (number): Optional . The starting point of the file to unlock. length (number): Optional . The length of the file, relative to start, to unlock. Returns : success (boolean, nil): true if the operation was successful, or nil in the case of an error. error (string, nil): In the case of an error, a string describing the issue. In particular, if the lock exists and is not stale it returns the \"File exists\" message. lfs.walkdir \u2693\ufe0e An iterator that visits all files in a directory tree. local result = lfs . walkdir ( path ) Parameters : path (string): The root path of the directory tree. Returns : result (iterator)","title":"Lfs"},{"location":"apis/lfs/#lfs","text":"LuaFileSystem is a Lua library developed to complement the set of functions related to file systems offered by the standard Lua distribution. This library has been further extended by MWSE.","title":"lfs"},{"location":"apis/lfs/#functions","text":"","title":"Functions"},{"location":"apis/lfs/#lfsattributes","text":"Returns a table with the file attributes corresponding to filepath (or nil followed by an error message and a system-dependent error code in case of error). If the second optional argument is given and is a string, then only the value of the named attribute is returned (this use is equivalent to lfs.attributes(filepath)[request_name], but the table is not created and only one attribute is retrieved from the O.S.). if a table is passed as the second argument, it (result_table) is filled with attributes and returned instead of a new table. The attributes are described as follows; attribute mode is a string, all the others are numbers, and the time related attributes use the same time reference of os.time: dev, mode, nlink, access, modification, change, size, permissions. local attributes , error = lfs . attributes ( path , request , resultTable ) Parameters : path (string): The path, relative to the current directory, to get attributes for. request (string): Optional . The specific attribute to look for. If provided, the return value becomes the requested value (or nil) instead of a table. resultTable (table): Optional . If provided, this table will be reused as the result table. If not provided, a new table is created. Returns : attributes (table, string, number, nil): All attributes in a table, the value of a specific attribute if one was requested, or nil on an error. error (string, nil): In the case of an error, a string describing the issue.","title":"lfs.attributes"},{"location":"apis/lfs/#lfschdir","text":"Changes the current working directory to the given path. Note that this is global. Do not use this function without restoring the previous directory at the end of your logic. Failure to do so can cause unrecoverable errors. local success , error = lfs . chdir ( path ) Parameters : path (string): The path to change to. Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue.","title":"lfs.chdir"},{"location":"apis/lfs/#lfscurrentdir","text":"Changes the current working directory to the given path. local path , error = lfs . currentdir () Returns : path (string, nil): The current working directory, or nil on an error. error (string, nil): In the case of an error, a string describing the issue.","title":"lfs.currentdir"},{"location":"apis/lfs/#lfsdir","text":"Creates a Lua iterator over the entries of a given directory. This can be used to create a for loop of directories. Be wary that current and parent directory markers may be available in the results. lfs . dir ( path ) Parameters : path (string): The path to iterate over.","title":"lfs.dir"},{"location":"apis/lfs/#lfsdirectoryexists","text":"Simple check to determine if a directory exists. local success = lfs . directoryexists ( path ) Parameters : path (string): The path to determine existance of. Returns : success (boolean): true if the directory exists.","title":"lfs.directoryexists"},{"location":"apis/lfs/#lfsfileexists","text":"Simple check to determine if a file exists. local success = lfs . fileexists ( path ) Parameters : path (string): The path to determine existance of. Returns : success (boolean): true if the file exists.","title":"lfs.fileexists"},{"location":"apis/lfs/#lfslink","text":"Creates a link. This is a hard link by default. local success , error = lfs . link ( old , new , symlink ) Parameters : old (string): The object to link to. new (string): The name of the link. symlink (boolean): Optional . If true, the link will be symbolic instead. Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue.","title":"lfs.link"},{"location":"apis/lfs/#lfslock","text":"Locks a file or a part of it. This function works on open files; the file handle should be specified as the first argument. local success , error = lfs . lock ( filehandle , mode , start , length ) Parameters : filehandle ( ioFile ): The file handle to lock. mode (string): \"r\" for a read/shared lock, or \"w\" for a write/exclusive lock. start (number): Optional . The starting point of the file to lock. length (number): Optional . The length of the file, relative to start, to lock. Returns : success (boolean, nil): true if the operation was successful, or nil in the case of an error. error (string, nil): In the case of an error, a string describing the issue. In particular, if the lock exists and is not stale it returns the \"File exists\" message.","title":"lfs.lock"},{"location":"apis/lfs/#lfslock_dir","text":"Creates a lockfile (called lockfile.lfs) in path if it does not exist and returns the lock. If the lock already exists checks if it's stale, using the second parameter (default for the second parameter is INT_MAX, which in practice means the lock will never be stale. The lock object has a method to free it. local success , error = lfs . lock_dir ( path ) Parameters : path (string): The path to lock. Returns : success ( lfsLock , nil): The lock object to manage, or nil in the case of an error. error (string, nil): In the case of an error, a string describing the issue. In particular, if the lock exists and is not stale it returns the \"File exists\" message.","title":"lfs.lock_dir"},{"location":"apis/lfs/#lfsmkdir","text":"Creates a new directory. local success , error = lfs . mkdir ( dirname ) Parameters : dirname (string): The name of the new directory. Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue.","title":"lfs.mkdir"},{"location":"apis/lfs/#lfsrmdir","text":"Removes an existing directory. Unless using the recursive parameter, only empty directories can be removed. local success , error = lfs . rmdir ( dirname , recursive ) Parameters : dirname (string): The name of the directory to remove. recursive (boolean): Default : false . If true, all contents of the directory will be removed as well. Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue.","title":"lfs.rmdir"},{"location":"apis/lfs/#lfssetmode","text":"Sets the writing mode for a file. local success , errorOrOldMode = lfs . setmode ( file , mode ) Parameters : file ( ioFile ): The file to set mode for. mode (string): The file's new mode. Can be either \"binary\" or \"text\". Returns : success (boolean, nil): true in case of success, or nil on an error. errorOrOldMode (string): If succesful, this will be the previous file mode used. In the case of an error, a string describing the issue.","title":"lfs.setmode"},{"location":"apis/lfs/#lfstouch","text":"Set access and modification times of a file. Both access and modified times are measured in seconds, matching the OS time function. local success , error = lfs . touch ( path , accessTime , modifiedTime ) Parameters : path (string): The path to touch. accessTime (number): Optional . The new access time to set. modifiedTime (number): Optional . The new last modified time to set Returns : success (boolean, nil): true in case of success, or nil on an error. error (string, nil): In the case of an error, a string describing the issue.","title":"lfs.touch"},{"location":"apis/lfs/#lfsunlock","text":"Unlocks a file or a part of it. This function works on open files; the file handle should be specified as the first argument. local success , error = lfs . unlock ( filehandle , mode , start , length ) Parameters : filehandle ( ioFile ): The file handle to unlock. mode (string): \"r\" for a read/shared lock, or \"w\" for a write/exclusive unlock. start (number): Optional . The starting point of the file to unlock. length (number): Optional . The length of the file, relative to start, to unlock. Returns : success (boolean, nil): true if the operation was successful, or nil in the case of an error. error (string, nil): In the case of an error, a string describing the issue. In particular, if the lock exists and is not stale it returns the \"File exists\" message.","title":"lfs.unlock"},{"location":"apis/lfs/#lfswalkdir","text":"An iterator that visits all files in a directory tree. local result = lfs . walkdir ( path ) Parameters : path (string): The root path of the directory tree. Returns : result (iterator)","title":"lfs.walkdir"},{"location":"apis/lpeg/","text":"lpeg \u2693\ufe0e Provides pattern-matching based on Parsing Expression Grammars (PEGs). The documentation provided here is only meant to be a quick reference. Please review the complete documentation (with in-depth discussion and many examples) at: http://www.inf.puc-rio.br/~roberto/lpeg/ There is also a copy in the MWSE repo at: deps/lpeg/lpeg.html Functions \u2693\ufe0e lpeg.B \u2693\ufe0e Returns a pattern that matches only if the input string at the current position is preceded by pattern p. Pattern p must match only strings with some fixed length, and it cannot contain captures. Like the and predicate, this pattern never consumes any input, independently of success or failure. local result = lpeg . B ( p ) Parameters : p (pattern): The input pattern. Returns : result (pattern) lpeg.C \u2693\ufe0e Create a simple capture pattern, which captures the substring of the subject that matches pattern p. The captured value is a string. If p has other captures, their values are returned after this one. local result = lpeg . C ( p ) Parameters : p (pattern): The pattern to capture against. Returns : result (pattern) lpeg.Carg \u2693\ufe0e Create an argument capture. This pattern matches the empty string and produces the value given as the nth extra argument given in the call to lpeg.match. local result = lpeg . Carg ( n ) Parameters : n (number): The argument to produce. Returns : result (pattern) lpeg.Cb \u2693\ufe0e Create a back capture. This pattern matches the empty string and produces the values produced by the most recent group capture named name (where name can be any Lua value). Most recent means the last complete outermost group capture with the given name. A Complete capture means that the entire pattern corresponding to the capture has matched. An Outermost capture means that the capture is not inside another complete capture. In the same way that LPeg does not specify when it evaluates captures, it does not specify whether it reuses values previously produced by the group or re-evaluates them. local result = lpeg . Cb ( name ) Parameters : name (value): The group capture to produce. Returns : result (pattern) lpeg.Cc \u2693\ufe0e Create a constant capture. This pattern matches the empty string and produces all given values as its captured values. local result = lpeg . Cc ( unknown ) Parameters : unnamed (values): Optional . The values to produce. Returns : result (pattern) lpeg.Cf \u2693\ufe0e Create a fold capture. If pattern p produces a list of captures C1 C2 ... Cn, this capture will produce the value function f(...f(f(C1, C2), C3)..., Cn), that is, it will fold (or accumulate, or reduce) the captures from p using function f. This capture assumes that p should produce at least one capture with at least one value (of any type), which becomes the initial value of an accumulator. (If you need a specific initial value, you may prefix a constant capture to p.) For each subsequent capture, LPeg calls f with this accumulator as the first argument and all values produced by the capture as extra arguments; the first result from this call becomes the new value for the accumulator. The final value of the accumulator becomes the captured value. local result = lpeg . Cf ( p , f ) Parameters : p (pattern): The pattern to fold with f. f (function): The function to use to fold p. Returns : result (pattern) lpeg.Cg \u2693\ufe0e Create a group capture. It groups all values returned by pattern p into a single capture. The group may be anonymous (if no name is given) or named with the given name (which can be any non-nil Lua value). An anonymous group serves to join values from several captures into a single capture. A named group has a different behavior. In most situations, a named group returns no values at all. Its values are only relevant for a following back capture or when used inside a table capture. local result = lpeg . Cg ( p , name ) Parameters : p (pattern): The pattern to capture with. name (value): Optional . The name of the group. Returns : result (pattern) lpeg.Cmt \u2693\ufe0e Create a match-time capture. Unlike all other captures, this one is evaluated immediately when a match occurs (even if it is part of a larger pattern that fails later). It forces the immediate evaluation of all its nested captures and then calls function f. The given function gets as arguments the entire subject, the current position (after the match of pattern p), plus any capture values produced by p. The first value returned by f defines how the match happens. If the call returns a number, the match succeeds and the returned number becomes the new current position. (Assuming a subject s and current position i, the returned number must be in the range [i, len(s) + 1].) If the call returns true, the match succeeds without consuming any input. (So, to return true is equivalent to return i.) If the call returns false, nil, or no value, the match fails. Any extra values returned by f become the values produced by the capture. local result = lpeg . Cmt ( p , f ) Parameters : p (pattern): The pattern to capture with. f (function): The function to call to evaluate matches. Returns : result (pattern) lpeg.Cp \u2693\ufe0e Create a position capture. It matches the empty string and captures the position in the subject where the match occurs. The captured value is a number. local result = lpeg . Cp () Returns : result (pattern) lpeg.Cs \u2693\ufe0e Create a substitution capture, which captures the substring of the subject that matches pattern p, with substitutions. For any capture inside p with a value, the substring that matched the capture is replaced by the capture value (which should be a string). The final captured value is the string resulting from all replacements. local result = lpeg . Cs ( p ) Parameters : p (pattern): The pattern to capture with. Returns : result (pattern) lpeg.Ct \u2693\ufe0e Create a table capture. This capture returns a table with all values from all anonymous captures made by pattern p inside this table in successive integer keys, starting at 1. Moreover, for each named capture group created by p, the first value of the group is put into the table with the group name as its key. The captured value is only the table. local result = lpeg . Ct ( p ) Parameters : p (pattern): The pattern to capture with. Returns : result (pattern) lpeg.locale \u2693\ufe0e Return a table with patterns for matching some character classes according to the current locale. The table has fields named alnum, alpha, cntrl, digit, graph, lower, print, punct, space, upper, and xdigit, each one containing a correspondent pattern. Each pattern matches any single character that belongs to its class. If called with an argument table, then it creates those fields inside the given table and returns that table. local result = lpeg . locale ( t ) Parameters : t (table): Optional . The table to update. Returns : result (table) lpeg.match \u2693\ufe0e Attempt to match the given pattern against the subject string. If the match succeeds, return the index in the subject of the first character after the match, or the captured values (if the pattern captured any value). An optional numeric argument init makes the match start at that position in the subject string. As usual in Lua libraries, a negative value counts from the end. Unlike typical pattern-matching functions, match works only in anchored mode; that is, it tries to match the pattern with a prefix of the given subject string (at position init), not with an arbitrary substring of the subject. So, if we want to find a pattern anywhere in a string, we must either write a loop in Lua or write a pattern that matches anywhere. This second approach is easy and quite efficient; see examples in the full documentation for details. local result = lpeg . match ( p , subject , init ) Parameters : p (pattern): The pattern to match. subject (string): The string to match against. init (number): Optional . Start the match at this position in subject. Returns : result (values) Example: Simple Match Create a pattern that matches a word followed by the end of the string, and use it to match strings. local lpeg = require ( \"lpeg\" ) local function onLoaded ( e ) -- matches a word followed by end-of-string local p = lpeg . R ( \"az\" ) ^ 1 * - 1 mwse . log ( p : match ( \"hello\" )) --> 6 mwse . log ( lpeg . match ( p , \"hello\" )) --> 6 mwse . log ( p : match ( \"1 hello\" )) --> nil end event . register ( tes3 . event . loaded , onLoaded ) lpeg.P \u2693\ufe0e Converts the given value into a proper lpeg pattern. If the argument is a pattern, it is returned unmodified. If the argument is a string, it is translated to a pattern that matches the string literally. If the argument is a non-negative number n, the result is a pattern that matches exactly n characters. If the argument is a negative number -n, the result is a pattern that succeeds only if the input string has less than n characters left: lpeg.P(-n) is equivalent to -lpeg.P(n). See the unary minus operation in the full documentation for details. If the argument is a boolean, the result is a pattern that always succeeds or always fails (according to the boolean value), without consuming any input. If the argument is a table, it is interpreted as a grammar. See Grammars in the full documentation for details. If the argument is a function, returns a pattern equivalent to a match-time capture over the empty string. local result = lpeg . P ( value ) Parameters : value (multiple): The value to convert to a pattern. Returns : result (pattern) lpeg.R \u2693\ufe0e Returns a pattern that matches any single character belonging to one of the given ranges. Each range is a string xy of length 2, representing all characters with code between the codes of x and y (both inclusive). As an example, the pattern lpeg.R(\"09\") matches any digit, and lpeg.R(\"az\", \"AZ\") matches any ASCII letter. local result = lpeg . R ( p ) Parameters : p (pattern): The input pattern. Returns : result (pattern) Example: Simple Match Create a pattern using lpeg.R that matches a word followed by the end of the string. local lpeg = require ( \"lpeg\" ) local function onLoaded ( e ) -- matches a word followed by end-of-string local p = lpeg . R ( \"az\" ) ^ 1 * - 1 mwse . log ( p : match ( \"hello\" )) --> 6 mwse . log ( lpeg . match ( p , \"hello\" )) --> 6 mwse . log ( p : match ( \"1 hello\" )) --> nil end event . register ( tes3 . event . loaded , onLoaded ) lpeg.S \u2693\ufe0e Returns a pattern that matches any single character that appears in the given string. As an example, the pattern lpeg.S(\"+-*/\") matches any arithmetic operator. Note that, if s is a character (that is, a string of length 1), then lpeg.P(s) is equivalent to lpeg.S(s) which is equivalent to lpeg.R(s..s). Note also that both lpeg.S(\"\") and lpeg.R() are patterns that always fail. local result = lpeg . S ( s ) Parameters : s (string): The input string. Returns : result (pattern) lpeg.setmaxstack \u2693\ufe0e Set a limit for the size of the backtrack stack used by LPeg to track calls and choices. The default limit is 400. Most well-written patterns need little backtrack levels and therefore you seldom need to change this limit; before changing it you should try to rewrite your pattern to avoid the need for extra space. Nevertheless, a few useful patterns may overflow. Also, with recursive grammars, subjects with deep recursion may also need larger limits. lpeg . setmaxstack ( max ) Parameters : max (number): The new stack size. lpeg.type \u2693\ufe0e If the given value is a pattern, return the string \"pattern\". Otherwise return nil. local result = lpeg . type ( value ) Parameters : value (value): The item to evaulate. Returns : result (string) lpeg.V \u2693\ufe0e Create a non-terminal (a variable) for a grammar. The created non-terminal refers to the rule indexed by v in the enclosing grammar. See Grammars in the full documentation for details. local result = lpeg . V ( v ) Parameters : v (string): The index of the desired rule. Returns : result (pattern) lpeg.version \u2693\ufe0e Return a string with the running version of lpeg. local result = lpeg . version () Returns : result (string)","title":"Lpeg"},{"location":"apis/lpeg/#lpeg","text":"Provides pattern-matching based on Parsing Expression Grammars (PEGs). The documentation provided here is only meant to be a quick reference. Please review the complete documentation (with in-depth discussion and many examples) at: http://www.inf.puc-rio.br/~roberto/lpeg/ There is also a copy in the MWSE repo at: deps/lpeg/lpeg.html","title":"lpeg"},{"location":"apis/lpeg/#functions","text":"","title":"Functions"},{"location":"apis/lpeg/#lpegb","text":"Returns a pattern that matches only if the input string at the current position is preceded by pattern p. Pattern p must match only strings with some fixed length, and it cannot contain captures. Like the and predicate, this pattern never consumes any input, independently of success or failure. local result = lpeg . B ( p ) Parameters : p (pattern): The input pattern. Returns : result (pattern)","title":"lpeg.B"},{"location":"apis/lpeg/#lpegc","text":"Create a simple capture pattern, which captures the substring of the subject that matches pattern p. The captured value is a string. If p has other captures, their values are returned after this one. local result = lpeg . C ( p ) Parameters : p (pattern): The pattern to capture against. Returns : result (pattern)","title":"lpeg.C"},{"location":"apis/lpeg/#lpegcarg","text":"Create an argument capture. This pattern matches the empty string and produces the value given as the nth extra argument given in the call to lpeg.match. local result = lpeg . Carg ( n ) Parameters : n (number): The argument to produce. Returns : result (pattern)","title":"lpeg.Carg"},{"location":"apis/lpeg/#lpegcb","text":"Create a back capture. This pattern matches the empty string and produces the values produced by the most recent group capture named name (where name can be any Lua value). Most recent means the last complete outermost group capture with the given name. A Complete capture means that the entire pattern corresponding to the capture has matched. An Outermost capture means that the capture is not inside another complete capture. In the same way that LPeg does not specify when it evaluates captures, it does not specify whether it reuses values previously produced by the group or re-evaluates them. local result = lpeg . Cb ( name ) Parameters : name (value): The group capture to produce. Returns : result (pattern)","title":"lpeg.Cb"},{"location":"apis/lpeg/#lpegcc","text":"Create a constant capture. This pattern matches the empty string and produces all given values as its captured values. local result = lpeg . Cc ( unknown ) Parameters : unnamed (values): Optional . The values to produce. Returns : result (pattern)","title":"lpeg.Cc"},{"location":"apis/lpeg/#lpegcf","text":"Create a fold capture. If pattern p produces a list of captures C1 C2 ... Cn, this capture will produce the value function f(...f(f(C1, C2), C3)..., Cn), that is, it will fold (or accumulate, or reduce) the captures from p using function f. This capture assumes that p should produce at least one capture with at least one value (of any type), which becomes the initial value of an accumulator. (If you need a specific initial value, you may prefix a constant capture to p.) For each subsequent capture, LPeg calls f with this accumulator as the first argument and all values produced by the capture as extra arguments; the first result from this call becomes the new value for the accumulator. The final value of the accumulator becomes the captured value. local result = lpeg . Cf ( p , f ) Parameters : p (pattern): The pattern to fold with f. f (function): The function to use to fold p. Returns : result (pattern)","title":"lpeg.Cf"},{"location":"apis/lpeg/#lpegcg","text":"Create a group capture. It groups all values returned by pattern p into a single capture. The group may be anonymous (if no name is given) or named with the given name (which can be any non-nil Lua value). An anonymous group serves to join values from several captures into a single capture. A named group has a different behavior. In most situations, a named group returns no values at all. Its values are only relevant for a following back capture or when used inside a table capture. local result = lpeg . Cg ( p , name ) Parameters : p (pattern): The pattern to capture with. name (value): Optional . The name of the group. Returns : result (pattern)","title":"lpeg.Cg"},{"location":"apis/lpeg/#lpegcmt","text":"Create a match-time capture. Unlike all other captures, this one is evaluated immediately when a match occurs (even if it is part of a larger pattern that fails later). It forces the immediate evaluation of all its nested captures and then calls function f. The given function gets as arguments the entire subject, the current position (after the match of pattern p), plus any capture values produced by p. The first value returned by f defines how the match happens. If the call returns a number, the match succeeds and the returned number becomes the new current position. (Assuming a subject s and current position i, the returned number must be in the range [i, len(s) + 1].) If the call returns true, the match succeeds without consuming any input. (So, to return true is equivalent to return i.) If the call returns false, nil, or no value, the match fails. Any extra values returned by f become the values produced by the capture. local result = lpeg . Cmt ( p , f ) Parameters : p (pattern): The pattern to capture with. f (function): The function to call to evaluate matches. Returns : result (pattern)","title":"lpeg.Cmt"},{"location":"apis/lpeg/#lpegcp","text":"Create a position capture. It matches the empty string and captures the position in the subject where the match occurs. The captured value is a number. local result = lpeg . Cp () Returns : result (pattern)","title":"lpeg.Cp"},{"location":"apis/lpeg/#lpegcs","text":"Create a substitution capture, which captures the substring of the subject that matches pattern p, with substitutions. For any capture inside p with a value, the substring that matched the capture is replaced by the capture value (which should be a string). The final captured value is the string resulting from all replacements. local result = lpeg . Cs ( p ) Parameters : p (pattern): The pattern to capture with. Returns : result (pattern)","title":"lpeg.Cs"},{"location":"apis/lpeg/#lpegct","text":"Create a table capture. This capture returns a table with all values from all anonymous captures made by pattern p inside this table in successive integer keys, starting at 1. Moreover, for each named capture group created by p, the first value of the group is put into the table with the group name as its key. The captured value is only the table. local result = lpeg . Ct ( p ) Parameters : p (pattern): The pattern to capture with. Returns : result (pattern)","title":"lpeg.Ct"},{"location":"apis/lpeg/#lpeglocale","text":"Return a table with patterns for matching some character classes according to the current locale. The table has fields named alnum, alpha, cntrl, digit, graph, lower, print, punct, space, upper, and xdigit, each one containing a correspondent pattern. Each pattern matches any single character that belongs to its class. If called with an argument table, then it creates those fields inside the given table and returns that table. local result = lpeg . locale ( t ) Parameters : t (table): Optional . The table to update. Returns : result (table)","title":"lpeg.locale"},{"location":"apis/lpeg/#lpegmatch","text":"Attempt to match the given pattern against the subject string. If the match succeeds, return the index in the subject of the first character after the match, or the captured values (if the pattern captured any value). An optional numeric argument init makes the match start at that position in the subject string. As usual in Lua libraries, a negative value counts from the end. Unlike typical pattern-matching functions, match works only in anchored mode; that is, it tries to match the pattern with a prefix of the given subject string (at position init), not with an arbitrary substring of the subject. So, if we want to find a pattern anywhere in a string, we must either write a loop in Lua or write a pattern that matches anywhere. This second approach is easy and quite efficient; see examples in the full documentation for details. local result = lpeg . match ( p , subject , init ) Parameters : p (pattern): The pattern to match. subject (string): The string to match against. init (number): Optional . Start the match at this position in subject. Returns : result (values) Example: Simple Match Create a pattern that matches a word followed by the end of the string, and use it to match strings. local lpeg = require ( \"lpeg\" ) local function onLoaded ( e ) -- matches a word followed by end-of-string local p = lpeg . R ( \"az\" ) ^ 1 * - 1 mwse . log ( p : match ( \"hello\" )) --> 6 mwse . log ( lpeg . match ( p , \"hello\" )) --> 6 mwse . log ( p : match ( \"1 hello\" )) --> nil end event . register ( tes3 . event . loaded , onLoaded )","title":"lpeg.match"},{"location":"apis/lpeg/#lpegp","text":"Converts the given value into a proper lpeg pattern. If the argument is a pattern, it is returned unmodified. If the argument is a string, it is translated to a pattern that matches the string literally. If the argument is a non-negative number n, the result is a pattern that matches exactly n characters. If the argument is a negative number -n, the result is a pattern that succeeds only if the input string has less than n characters left: lpeg.P(-n) is equivalent to -lpeg.P(n). See the unary minus operation in the full documentation for details. If the argument is a boolean, the result is a pattern that always succeeds or always fails (according to the boolean value), without consuming any input. If the argument is a table, it is interpreted as a grammar. See Grammars in the full documentation for details. If the argument is a function, returns a pattern equivalent to a match-time capture over the empty string. local result = lpeg . P ( value ) Parameters : value (multiple): The value to convert to a pattern. Returns : result (pattern)","title":"lpeg.P"},{"location":"apis/lpeg/#lpegr","text":"Returns a pattern that matches any single character belonging to one of the given ranges. Each range is a string xy of length 2, representing all characters with code between the codes of x and y (both inclusive). As an example, the pattern lpeg.R(\"09\") matches any digit, and lpeg.R(\"az\", \"AZ\") matches any ASCII letter. local result = lpeg . R ( p ) Parameters : p (pattern): The input pattern. Returns : result (pattern) Example: Simple Match Create a pattern using lpeg.R that matches a word followed by the end of the string. local lpeg = require ( \"lpeg\" ) local function onLoaded ( e ) -- matches a word followed by end-of-string local p = lpeg . R ( \"az\" ) ^ 1 * - 1 mwse . log ( p : match ( \"hello\" )) --> 6 mwse . log ( lpeg . match ( p , \"hello\" )) --> 6 mwse . log ( p : match ( \"1 hello\" )) --> nil end event . register ( tes3 . event . loaded , onLoaded )","title":"lpeg.R"},{"location":"apis/lpeg/#lpegs","text":"Returns a pattern that matches any single character that appears in the given string. As an example, the pattern lpeg.S(\"+-*/\") matches any arithmetic operator. Note that, if s is a character (that is, a string of length 1), then lpeg.P(s) is equivalent to lpeg.S(s) which is equivalent to lpeg.R(s..s). Note also that both lpeg.S(\"\") and lpeg.R() are patterns that always fail. local result = lpeg . S ( s ) Parameters : s (string): The input string. Returns : result (pattern)","title":"lpeg.S"},{"location":"apis/lpeg/#lpegsetmaxstack","text":"Set a limit for the size of the backtrack stack used by LPeg to track calls and choices. The default limit is 400. Most well-written patterns need little backtrack levels and therefore you seldom need to change this limit; before changing it you should try to rewrite your pattern to avoid the need for extra space. Nevertheless, a few useful patterns may overflow. Also, with recursive grammars, subjects with deep recursion may also need larger limits. lpeg . setmaxstack ( max ) Parameters : max (number): The new stack size.","title":"lpeg.setmaxstack"},{"location":"apis/lpeg/#lpegtype","text":"If the given value is a pattern, return the string \"pattern\". Otherwise return nil. local result = lpeg . type ( value ) Parameters : value (value): The item to evaulate. Returns : result (string)","title":"lpeg.type"},{"location":"apis/lpeg/#lpegv","text":"Create a non-terminal (a variable) for a grammar. The created non-terminal refers to the rule indexed by v in the enclosing grammar. See Grammars in the full documentation for details. local result = lpeg . V ( v ) Parameters : v (string): The index of the desired rule. Returns : result (pattern)","title":"lpeg.V"},{"location":"apis/lpeg/#lpegversion","text":"Return a string with the running version of lpeg. local result = lpeg . version () Returns : result (string)","title":"lpeg.version"},{"location":"apis/math/","text":"math \u2693\ufe0e This library is an interface to the standard C math library. This library has been further extended by MWSE. The functions implemented by MWSE are listed here. It provides all its functions inside the table math. Properties \u2693\ufe0e math.epsilon \u2693\ufe0e The machine epsilon available for double-precision numbers. This is the difference between 1.0 and the next representable value using lua numbers. Returns : result (number) math.fepsilon \u2693\ufe0e The machine epsilon available for single-precision numbers. This is the difference between 1.0 and the next representable value for many Morrowind structures. Returns : result (number) math.fhuge \u2693\ufe0e The machine maximum available value for single-precision numbers. This is the maximum representable value for any floating-point Morrowind structures. Returns : result (number) math.nfhuge \u2693\ufe0e The machine minimum available value for single-precision numbers. This is the minimum representable value for any floating-point Morrowind structures. Returns : result (number) Functions \u2693\ufe0e math.clamp \u2693\ufe0e Returns a value, limited by upper and lower bounds. local result = math . clamp ( value , min , max ) Parameters : value (number) min (number) max (number) Returns : result (number) math.isclose \u2693\ufe0e This function compares a and b and returns true if they are close together. This can be useful when comparing floating-point numbers with some degree of tolerance. local result = math . isclose ( a , b , absoluteTolerance , relativeTolerance ) Parameters : a (number): First value. b (number): Second value. absoluteTolerance (number): Default : math.epsilon . The absolute difference allowed between the two numbers. A value of 0.01 will only allow the values to differ by 0.01. relativeTolerance (number): Default : 1e-09 . The relative difference allowed between the two numbers. A value of 0.01 will only allow the values to differ by 1%. Returns : result (number) math.lerp \u2693\ufe0e Performs linear interpolation between values v0 and v1. Returns a value that is t percent between them. local result = math . lerp ( v0 , v1 , t ) Parameters : v0 (number): First value. v1 (number): Second value. t (number): The decimal percentage used to calculate a point between v0 and v1. Returns : result (number) math.remap \u2693\ufe0e Returns a value, scaled from expected values [lowIn, highIn] to [lowOut, highOut]. For example, a value of 7 remapped from [0,10] to [0,100] would be 70. local result = math . remap ( value , lowIn , highIn , lowOut , highOut ) Parameters : value (number) lowIn (number) highIn (number) lowOut (number) highOut (number) Returns : result (number) math.round \u2693\ufe0e Rounds a number to a given count of digits. local result = math . round ( value , digits ) Parameters : value (number) digits (number): Default : 0 . Returns : result (number)","title":"Math"},{"location":"apis/math/#math","text":"This library is an interface to the standard C math library. This library has been further extended by MWSE. The functions implemented by MWSE are listed here. It provides all its functions inside the table math.","title":"math"},{"location":"apis/math/#properties","text":"","title":"Properties"},{"location":"apis/math/#mathepsilon","text":"The machine epsilon available for double-precision numbers. This is the difference between 1.0 and the next representable value using lua numbers. Returns : result (number)","title":"math.epsilon"},{"location":"apis/math/#mathfepsilon","text":"The machine epsilon available for single-precision numbers. This is the difference between 1.0 and the next representable value for many Morrowind structures. Returns : result (number)","title":"math.fepsilon"},{"location":"apis/math/#mathfhuge","text":"The machine maximum available value for single-precision numbers. This is the maximum representable value for any floating-point Morrowind structures. Returns : result (number)","title":"math.fhuge"},{"location":"apis/math/#mathnfhuge","text":"The machine minimum available value for single-precision numbers. This is the minimum representable value for any floating-point Morrowind structures. Returns : result (number)","title":"math.nfhuge"},{"location":"apis/math/#functions","text":"","title":"Functions"},{"location":"apis/math/#mathclamp","text":"Returns a value, limited by upper and lower bounds. local result = math . clamp ( value , min , max ) Parameters : value (number) min (number) max (number) Returns : result (number)","title":"math.clamp"},{"location":"apis/math/#mathisclose","text":"This function compares a and b and returns true if they are close together. This can be useful when comparing floating-point numbers with some degree of tolerance. local result = math . isclose ( a , b , absoluteTolerance , relativeTolerance ) Parameters : a (number): First value. b (number): Second value. absoluteTolerance (number): Default : math.epsilon . The absolute difference allowed between the two numbers. A value of 0.01 will only allow the values to differ by 0.01. relativeTolerance (number): Default : 1e-09 . The relative difference allowed between the two numbers. A value of 0.01 will only allow the values to differ by 1%. Returns : result (number)","title":"math.isclose"},{"location":"apis/math/#mathlerp","text":"Performs linear interpolation between values v0 and v1. Returns a value that is t percent between them. local result = math . lerp ( v0 , v1 , t ) Parameters : v0 (number): First value. v1 (number): Second value. t (number): The decimal percentage used to calculate a point between v0 and v1. Returns : result (number)","title":"math.lerp"},{"location":"apis/math/#mathremap","text":"Returns a value, scaled from expected values [lowIn, highIn] to [lowOut, highOut]. For example, a value of 7 remapped from [0,10] to [0,100] would be 70. local result = math . remap ( value , lowIn , highIn , lowOut , highOut ) Parameters : value (number) lowIn (number) highIn (number) lowOut (number) highOut (number) Returns : result (number)","title":"math.remap"},{"location":"apis/math/#mathround","text":"Rounds a number to a given count of digits. local result = math . round ( value , digits ) Parameters : value (number) digits (number): Default : 0 . Returns : result (number)","title":"math.round"},{"location":"apis/mge.macros/","text":"mge.macros \u2693\ufe0e Access to MGE's macro functions. Functions \u2693\ufe0e mge.macros.decreaseFOV \u2693\ufe0e Triggers the MGE \"Decrease FOV\" macro. mge . macros . decreaseFOV () mge.macros.decreaseViewRange \u2693\ufe0e Triggers the MGE \"Decrease View Range\" macro. mge . macros . decreaseViewRange () mge.macros.decreaseZoom \u2693\ufe0e Triggers the MGE \"Decrease Zoom\" macro. mge . macros . decreaseZoom () mge.macros.disableMusic \u2693\ufe0e Triggers the MGE \"Disable Music\" macro. mge . macros . disableMusic () mge.macros.haggleLess1 \u2693\ufe0e Triggers the MGE \"Haggle Less 1\" macro. mge . macros . haggleLess1 () mge.macros.haggleLess10 \u2693\ufe0e Triggers the MGE \"Haggle Less 10\" macro. mge . macros . haggleLess10 () mge.macros.haggleLess100 \u2693\ufe0e Triggers the MGE \"Haggle Less 100\" macro. mge . macros . haggleLess100 () mge.macros.haggleLess1000 \u2693\ufe0e Triggers the MGE \"Haggle Less 1,000\" macro. mge . macros . haggleLess1000 () mge.macros.haggleLess10000 \u2693\ufe0e Triggers the MGE \"Haggle Less 10,000\" macro. mge . macros . haggleLess10000 () mge.macros.haggleMore1 \u2693\ufe0e Triggers the MGE \"Haggle More 1\" macro. mge . macros . haggleMore1 () mge.macros.haggleMore10 \u2693\ufe0e Triggers the MGE \"Haggle More 10\" macro. mge . macros . haggleMore10 () mge.macros.haggleMore100 \u2693\ufe0e Triggers the MGE \"Haggle More 100\" macro. mge . macros . haggleMore100 () mge.macros.haggleMore1000 \u2693\ufe0e Triggers the MGE \"Haggle More 1,000\" macro. mge . macros . haggleMore1000 () mge.macros.haggleMore10000 \u2693\ufe0e Triggers the MGE \"Haggle More 10,000\" macro. mge . macros . haggleMore10000 () mge.macros.increaseFOV \u2693\ufe0e Triggers the MGE \"Increase FOV\" macro. mge . macros . increaseFOV () mge.macros.increaseViewRange \u2693\ufe0e Triggers the MGE \"Increase View Range\" macro. mge . macros . increaseViewRange () mge.macros.increaseZoom \u2693\ufe0e Triggers the MGE \"Increase Zoom\" macro. mge . macros . increaseZoom () mge.macros.moveBack3PCam \u2693\ufe0e Triggers the MGE \"Move Back 3rd Person Camera\" macro. mge . macros . moveBack3PCam () mge.macros.moveDown3PCam \u2693\ufe0e Triggers the MGE \"Move Down 3rd Person Camera\" macro. mge . macros . moveDown3PCam () mge.macros.moveForward3PCam \u2693\ufe0e Triggers the MGE \"Move Forward 3rd Person Camera\" macro. mge . macros . moveForward3PCam () mge.macros.moveLeft3PCam \u2693\ufe0e Triggers the MGE \"Move Left 3rd Person Camera\" macro. mge . macros . moveLeft3PCam () mge.macros.moveRight3PCam \u2693\ufe0e Triggers the MGE \"Move Right 3rd Person Camera\" macro. mge . macros . moveRight3PCam () mge.macros.moveUp3PCam \u2693\ufe0e Triggers the MGE \"Move Up 3rd Person Camera\" macro. mge . macros . moveUp3PCam () mge.macros.nextTrack \u2693\ufe0e Triggers the MGE \"Next Track\" macro. mge . macros . nextTrack () mge.macros.resetEnableZoom \u2693\ufe0e Triggers the MGE \"Reset Enable Zoom\" macro. mge . macros . resetEnableZoom () mge.macros.showLastMessage \u2693\ufe0e Triggers the MGE \"Show Last Message\" macro. mge . macros . showLastMessage () mge.macros.takeScreenshot \u2693\ufe0e Triggers the MGE \"Take Screenshot\" macro. mge . macros . takeScreenshot () mge.macros.toggleBlending \u2693\ufe0e Triggers the MGE \"Toggle Blending\" macro. mge . macros . toggleBlending () mge.macros.toggleCrosshair \u2693\ufe0e Triggers the MGE \"Toggle Crosshair\" macro. mge . macros . toggleCrosshair () mge.macros.toggleDistantLand \u2693\ufe0e Triggers the MGE \"Toggle Distant Land\" macro. mge . macros . toggleDistantLand () mge.macros.toggleFpsCounter \u2693\ufe0e Triggers the MGE \"Toggle FPS Counter\" macro. mge . macros . toggleFpsCounter () mge.macros.toggleGrass \u2693\ufe0e Triggers the MGE \"Toggle Grass\" macro. mge . macros . toggleGrass () mge.macros.toggleLightingMode \u2693\ufe0e Triggers the MGE \"Toggle Lighting Mode\" macro. mge . macros . toggleLightingMode () mge.macros.toggleShaders \u2693\ufe0e Triggers the MGE \"Toggle Shaders\" macro. mge . macros . toggleShaders () mge.macros.toggleShadows \u2693\ufe0e Triggers the MGE \"Toggle Shadows\" macro. mge . macros . toggleShadows () mge.macros.toggleStatusText \u2693\ufe0e Triggers the MGE \"Toggle Status Text\" macro. mge . macros . toggleStatusText () mge.macros.toggleTransparencyAA \u2693\ufe0e Triggers the MGE \"Toggle Transparency AA\" macro. mge . macros . toggleTransparencyAA () mge.macros.toggleZoom \u2693\ufe0e Triggers the MGE \"Toggle Zoom\" macro. mge . macros . toggleZoom ()","title":"Mge.macros"},{"location":"apis/mge.macros/#mgemacros","text":"Access to MGE's macro functions.","title":"mge.macros"},{"location":"apis/mge.macros/#functions","text":"","title":"Functions"},{"location":"apis/mge.macros/#mgemacrosdecreasefov","text":"Triggers the MGE \"Decrease FOV\" macro. mge . macros . decreaseFOV ()","title":"mge.macros.decreaseFOV"},{"location":"apis/mge.macros/#mgemacrosdecreaseviewrange","text":"Triggers the MGE \"Decrease View Range\" macro. mge . macros . decreaseViewRange ()","title":"mge.macros.decreaseViewRange"},{"location":"apis/mge.macros/#mgemacrosdecreasezoom","text":"Triggers the MGE \"Decrease Zoom\" macro. mge . macros . decreaseZoom ()","title":"mge.macros.decreaseZoom"},{"location":"apis/mge.macros/#mgemacrosdisablemusic","text":"Triggers the MGE \"Disable Music\" macro. mge . macros . disableMusic ()","title":"mge.macros.disableMusic"},{"location":"apis/mge.macros/#mgemacroshaggleless1","text":"Triggers the MGE \"Haggle Less 1\" macro. mge . macros . haggleLess1 ()","title":"mge.macros.haggleLess1"},{"location":"apis/mge.macros/#mgemacroshaggleless10","text":"Triggers the MGE \"Haggle Less 10\" macro. mge . macros . haggleLess10 ()","title":"mge.macros.haggleLess10"},{"location":"apis/mge.macros/#mgemacroshaggleless100","text":"Triggers the MGE \"Haggle Less 100\" macro. mge . macros . haggleLess100 ()","title":"mge.macros.haggleLess100"},{"location":"apis/mge.macros/#mgemacroshaggleless1000","text":"Triggers the MGE \"Haggle Less 1,000\" macro. mge . macros . haggleLess1000 ()","title":"mge.macros.haggleLess1000"},{"location":"apis/mge.macros/#mgemacroshaggleless10000","text":"Triggers the MGE \"Haggle Less 10,000\" macro. mge . macros . haggleLess10000 ()","title":"mge.macros.haggleLess10000"},{"location":"apis/mge.macros/#mgemacroshagglemore1","text":"Triggers the MGE \"Haggle More 1\" macro. mge . macros . haggleMore1 ()","title":"mge.macros.haggleMore1"},{"location":"apis/mge.macros/#mgemacroshagglemore10","text":"Triggers the MGE \"Haggle More 10\" macro. mge . macros . haggleMore10 ()","title":"mge.macros.haggleMore10"},{"location":"apis/mge.macros/#mgemacroshagglemore100","text":"Triggers the MGE \"Haggle More 100\" macro. mge . macros . haggleMore100 ()","title":"mge.macros.haggleMore100"},{"location":"apis/mge.macros/#mgemacroshagglemore1000","text":"Triggers the MGE \"Haggle More 1,000\" macro. mge . macros . haggleMore1000 ()","title":"mge.macros.haggleMore1000"},{"location":"apis/mge.macros/#mgemacroshagglemore10000","text":"Triggers the MGE \"Haggle More 10,000\" macro. mge . macros . haggleMore10000 ()","title":"mge.macros.haggleMore10000"},{"location":"apis/mge.macros/#mgemacrosincreasefov","text":"Triggers the MGE \"Increase FOV\" macro. mge . macros . increaseFOV ()","title":"mge.macros.increaseFOV"},{"location":"apis/mge.macros/#mgemacrosincreaseviewrange","text":"Triggers the MGE \"Increase View Range\" macro. mge . macros . increaseViewRange ()","title":"mge.macros.increaseViewRange"},{"location":"apis/mge.macros/#mgemacrosincreasezoom","text":"Triggers the MGE \"Increase Zoom\" macro. mge . macros . increaseZoom ()","title":"mge.macros.increaseZoom"},{"location":"apis/mge.macros/#mgemacrosmoveback3pcam","text":"Triggers the MGE \"Move Back 3rd Person Camera\" macro. mge . macros . moveBack3PCam ()","title":"mge.macros.moveBack3PCam"},{"location":"apis/mge.macros/#mgemacrosmovedown3pcam","text":"Triggers the MGE \"Move Down 3rd Person Camera\" macro. mge . macros . moveDown3PCam ()","title":"mge.macros.moveDown3PCam"},{"location":"apis/mge.macros/#mgemacrosmoveforward3pcam","text":"Triggers the MGE \"Move Forward 3rd Person Camera\" macro. mge . macros . moveForward3PCam ()","title":"mge.macros.moveForward3PCam"},{"location":"apis/mge.macros/#mgemacrosmoveleft3pcam","text":"Triggers the MGE \"Move Left 3rd Person Camera\" macro. mge . macros . moveLeft3PCam ()","title":"mge.macros.moveLeft3PCam"},{"location":"apis/mge.macros/#mgemacrosmoveright3pcam","text":"Triggers the MGE \"Move Right 3rd Person Camera\" macro. mge . macros . moveRight3PCam ()","title":"mge.macros.moveRight3PCam"},{"location":"apis/mge.macros/#mgemacrosmoveup3pcam","text":"Triggers the MGE \"Move Up 3rd Person Camera\" macro. mge . macros . moveUp3PCam ()","title":"mge.macros.moveUp3PCam"},{"location":"apis/mge.macros/#mgemacrosnexttrack","text":"Triggers the MGE \"Next Track\" macro. mge . macros . nextTrack ()","title":"mge.macros.nextTrack"},{"location":"apis/mge.macros/#mgemacrosresetenablezoom","text":"Triggers the MGE \"Reset Enable Zoom\" macro. mge . macros . resetEnableZoom ()","title":"mge.macros.resetEnableZoom"},{"location":"apis/mge.macros/#mgemacrosshowlastmessage","text":"Triggers the MGE \"Show Last Message\" macro. mge . macros . showLastMessage ()","title":"mge.macros.showLastMessage"},{"location":"apis/mge.macros/#mgemacrostakescreenshot","text":"Triggers the MGE \"Take Screenshot\" macro. mge . macros . takeScreenshot ()","title":"mge.macros.takeScreenshot"},{"location":"apis/mge.macros/#mgemacrostoggleblending","text":"Triggers the MGE \"Toggle Blending\" macro. mge . macros . toggleBlending ()","title":"mge.macros.toggleBlending"},{"location":"apis/mge.macros/#mgemacrostogglecrosshair","text":"Triggers the MGE \"Toggle Crosshair\" macro. mge . macros . toggleCrosshair ()","title":"mge.macros.toggleCrosshair"},{"location":"apis/mge.macros/#mgemacrostoggledistantland","text":"Triggers the MGE \"Toggle Distant Land\" macro. mge . macros . toggleDistantLand ()","title":"mge.macros.toggleDistantLand"},{"location":"apis/mge.macros/#mgemacrostogglefpscounter","text":"Triggers the MGE \"Toggle FPS Counter\" macro. mge . macros . toggleFpsCounter ()","title":"mge.macros.toggleFpsCounter"},{"location":"apis/mge.macros/#mgemacrostogglegrass","text":"Triggers the MGE \"Toggle Grass\" macro. mge . macros . toggleGrass ()","title":"mge.macros.toggleGrass"},{"location":"apis/mge.macros/#mgemacrostogglelightingmode","text":"Triggers the MGE \"Toggle Lighting Mode\" macro. mge . macros . toggleLightingMode ()","title":"mge.macros.toggleLightingMode"},{"location":"apis/mge.macros/#mgemacrostoggleshaders","text":"Triggers the MGE \"Toggle Shaders\" macro. mge . macros . toggleShaders ()","title":"mge.macros.toggleShaders"},{"location":"apis/mge.macros/#mgemacrostoggleshadows","text":"Triggers the MGE \"Toggle Shadows\" macro. mge . macros . toggleShadows ()","title":"mge.macros.toggleShadows"},{"location":"apis/mge.macros/#mgemacrostogglestatustext","text":"Triggers the MGE \"Toggle Status Text\" macro. mge . macros . toggleStatusText ()","title":"mge.macros.toggleStatusText"},{"location":"apis/mge.macros/#mgemacrostoggletransparencyaa","text":"Triggers the MGE \"Toggle Transparency AA\" macro. mge . macros . toggleTransparencyAA ()","title":"mge.macros.toggleTransparencyAA"},{"location":"apis/mge.macros/#mgemacrostogglezoom","text":"Triggers the MGE \"Toggle Zoom\" macro. mge . macros . toggleZoom ()","title":"mge.macros.toggleZoom"},{"location":"apis/mge/","text":"mge \u2693\ufe0e The mge library accesses MGE XE functionality, including control over shaders. Many older functions have been deprecated. Properties \u2693\ufe0e mge.camera \u2693\ufe0e Allows control of MGE camera features. Returns : result ( mgeCameraConfig ) mge.distantLandRenderConfig \u2693\ufe0e Allows control of the camera. Returns : result ( mgeDistantLandRenderConfig ) mge.render \u2693\ufe0e Allows control of render features. Returns : result ( mgeRenderFeatures ) mge.shaders \u2693\ufe0e Allows control of shaders. Returns : result ( mgeShadersConfig ) mge.weather \u2693\ufe0e Allows control of MGE weather features. Returns : result ( mgeWeatherConfig ) Functions \u2693\ufe0e mge.enabled \u2693\ufe0e Determines if the MGE XE interface is enabled. local enabled = mge . enabled () Returns : enabled (boolean) mge.getLightingMode \u2693\ufe0e Returns the lighting mode used by MGE XE. These values map to mge.lightingMode.* constants. local mode = mge . getLightingMode () Returns : mode (number): Maps to the mge.lightingMode.* constants. mge.getUIScale \u2693\ufe0e Returns the GUI scaling used by MGE XE. local scale = mge . getUIScale () Returns : scale (number) mge.getVersion \u2693\ufe0e Gets the MGE version. Wrapper for MGEGetVersion. local result = mge . getVersion () Returns : result (number) mge.loadConfig \u2693\ufe0e Reloads the MGE config file. This is primarily an internal function and shouldn't be called casually. mge . loadConfig () mge.reloadDistantLand \u2693\ufe0e Reloads the MGE distant land. This is a blocking call that can take some seconds. mge . reloadDistantLand () mge.saveConfig \u2693\ufe0e Saves the MGE config file. This is primarily an internal function and shouldn't be called casually. mge . saveConfig () mge.setLightingMode \u2693\ufe0e Sets the lighting mode used by MGE XE. The values passed can be used from the mge.lightingMode.* constants. mge . setLightingMode ( mode ) Parameters : mode (number): Maps from the mge.lightingMode.* constants. mge.setUIScale \u2693\ufe0e Sets the GUI scaling used by MGE XE. mge . setUIScale ( scale ) Parameters : scale (number)","title":"Mge"},{"location":"apis/mge/#mge","text":"The mge library accesses MGE XE functionality, including control over shaders. Many older functions have been deprecated.","title":"mge"},{"location":"apis/mge/#properties","text":"","title":"Properties"},{"location":"apis/mge/#mgecamera","text":"Allows control of MGE camera features. Returns : result ( mgeCameraConfig )","title":"mge.camera"},{"location":"apis/mge/#mgedistantlandrenderconfig","text":"Allows control of the camera. Returns : result ( mgeDistantLandRenderConfig )","title":"mge.distantLandRenderConfig"},{"location":"apis/mge/#mgerender","text":"Allows control of render features. Returns : result ( mgeRenderFeatures )","title":"mge.render"},{"location":"apis/mge/#mgeshaders","text":"Allows control of shaders. Returns : result ( mgeShadersConfig )","title":"mge.shaders"},{"location":"apis/mge/#mgeweather","text":"Allows control of MGE weather features. Returns : result ( mgeWeatherConfig )","title":"mge.weather"},{"location":"apis/mge/#functions","text":"","title":"Functions"},{"location":"apis/mge/#mgeenabled","text":"Determines if the MGE XE interface is enabled. local enabled = mge . enabled () Returns : enabled (boolean)","title":"mge.enabled"},{"location":"apis/mge/#mgegetlightingmode","text":"Returns the lighting mode used by MGE XE. These values map to mge.lightingMode.* constants. local mode = mge . getLightingMode () Returns : mode (number): Maps to the mge.lightingMode.* constants.","title":"mge.getLightingMode"},{"location":"apis/mge/#mgegetuiscale","text":"Returns the GUI scaling used by MGE XE. local scale = mge . getUIScale () Returns : scale (number)","title":"mge.getUIScale"},{"location":"apis/mge/#mgegetversion","text":"Gets the MGE version. Wrapper for MGEGetVersion. local result = mge . getVersion () Returns : result (number)","title":"mge.getVersion"},{"location":"apis/mge/#mgeloadconfig","text":"Reloads the MGE config file. This is primarily an internal function and shouldn't be called casually. mge . loadConfig ()","title":"mge.loadConfig"},{"location":"apis/mge/#mgereloaddistantland","text":"Reloads the MGE distant land. This is a blocking call that can take some seconds. mge . reloadDistantLand ()","title":"mge.reloadDistantLand"},{"location":"apis/mge/#mgesaveconfig","text":"Saves the MGE config file. This is primarily an internal function and shouldn't be called casually. mge . saveConfig ()","title":"mge.saveConfig"},{"location":"apis/mge/#mgesetlightingmode","text":"Sets the lighting mode used by MGE XE. The values passed can be used from the mge.lightingMode.* constants. mge . setLightingMode ( mode ) Parameters : mode (number): Maps from the mge.lightingMode.* constants.","title":"mge.setLightingMode"},{"location":"apis/mge/#mgesetuiscale","text":"Sets the GUI scaling used by MGE XE. mge . setUIScale ( scale ) Parameters : scale (number)","title":"mge.setUIScale"},{"location":"apis/mwscript/","text":"mwscript \u2693\ufe0e Warning This API is deprecated. See below for more information about what to use instead. The mwscript library allows vanilla mwscript functions to be called. This is not always ideal, and this library is deprecated. Avoid using it if at all possible. Functions \u2693\ufe0e mwscript.activate \u2693\ufe0e Use tes3reference:activate() or tes3.setAIActivate() instead. Wrapper for the Activate mwscript function. mwscript . activate ({ reference = ... }) Parameters : params (table): Optional . reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. mwscript.addItem \u2693\ufe0e Use tes3.addItem() , tes3inventory:addItem() , or depending on your needs tes3mobileActor:equip() instead. Wrapper for the AddItem mwscript function. local executed = mwscript . addItem ({ reference = ..., item = ..., count = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to be added. count (number): Default : 1 . The number of items to be added. Returns : executed (boolean) mwscript.addSoulGem \u2693\ufe0e use tes3.addItem() with the soul parameter instead. Wrapper for the AddSoulGem mwscript function. local executed = mwscript . addSoulGem ({ reference = ..., creature = ..., soulgem = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. creature ( tes3creature , string): The creature to be stored in the soul gem. soulgem ( tes3misc , string): The soul gem to store the soul in. Returns : executed (boolean) mwscript.addSpell \u2693\ufe0e Use tes3.addSpell() or tes3spellList:add() instead. Wrapper for the AddSpell mwscript function. local executed = mwscript . addSpell ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. spell ( tes3spell , string) Returns : executed (boolean) mwscript.addToLevCreature \u2693\ufe0e Use tes3leveledCreature:insert() instead. Wrapper for the AddToLevCreature mwscript function. local executed = mwscript . addToLevCreature ({ list = ..., creature = ..., level = ... }) Parameters : params (table) list ( tes3leveledCreature , string): Leveled creature list to add a creature to. creature ( tes3actor , string): Creature to add to the list. level (number): Default : 0 . Minimum level for the creature to spawn. Returns : executed (boolean) mwscript.addToLevItem \u2693\ufe0e Use tes3leveledItem:insert() instead. Wrapper for the AddToLevItem mwscript function. local executed = mwscript . addToLevItem ({ list = ..., item = ..., level = ... }) Parameters : params (table) list ( tes3leveledItem , string): Leveled item list to add a creature to. item ( tes3item , string): Item to add to the list. level (number): Default : 0 . Minimum level for the item to spawn. Returns : executed (boolean) mwscript.addTopic \u2693\ufe0e Use tes3.addTopic() instead. Wrapper for the AddTopic mwscript function. local executed = mwscript . addTopic ({ topic = ... }) Parameters : params (table) topic ( tes3dialogue , string) Returns : executed (boolean) mwscript.aiTravel \u2693\ufe0e Use tes3.setAITravel() instead. Wrapper for the AITravel mwscript function. local executed = mwscript . aiTravel ({ reference = ..., x = ..., y = ..., z = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. x (number) y (number) z (number) Returns : executed (boolean) mwscript.disable \u2693\ufe0e Use tes3reference:disable() or tes3.setEnabled() instead. Wrapper for the Disable mwscript function. local executed = mwscript . disable ({ reference = ..., modify = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. modify (boolean): Default : true . Set the object as modified. Returns : executed (boolean) mwscript.drop \u2693\ufe0e Use tes3.dropItem() or tes3inventory:dropItem() instead. Wrapper for the Drop mwscript function. local executed = mwscript . drop ({ reference = ..., item = ..., count = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to be dropped. count (number): Default : 1 . The number of items to drop. Returns : executed (boolean) mwscript.enable \u2693\ufe0e Use tes3.setEnabled() or tes3reference:enable() instead. Wrapper for the Enable mwscript function. local executed = mwscript . enable ({ reference = ..., modify = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. modify (boolean): Default : true . Set the object as modified. Returns : executed (boolean) mwscript.equip \u2693\ufe0e Use tes3mobileActor:equip() or tes3mobileActor.combatSession:changeEquipment() instead. Wrapper for the Equip mwscript function. local executed = mwscript . equip ({ reference = ..., item = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to be equipped. Returns : executed (boolean) mwscript.explodeSpell \u2693\ufe0e Use tes3.cast() instead. Wrapper for the ExplodeSpell mwscript function. local executed = mwscript . explodeSpell ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. spell ( tes3spell , string) Returns : executed (boolean) mwscript.getButtonPressed \u2693\ufe0e Use tes3.messageBox() instead. Wrapper for the GetButtonPressed mwscript function. local buttonIndex = mwscript . getButtonPressed () Returns : buttonIndex (number) mwscript.getDetected \u2693\ufe0e Use tes3mobileActor.isPlayerDetected or depending on what you are doing, detectSneak event may be desirable. Wrapper for the GetDetected mwscript function. local result = mwscript . getDetected ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. target ( tes3reference , tes3mobileActor , string): Actor to check detection for. Returns : result (boolean) mwscript.getDisabled \u2693\ufe0e Use object.disabled on any object inheriting from tes3baseObject . Wrapper for the GetDisabled mwscript function. local result = mwscript . getDisabled ({ reference = ... }) Parameters : params (table): Optional . reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. Returns : result (boolean) mwscript.getDistance \u2693\ufe0e Use tes3reference.position or tes3mobileActor.position to compute the distance or depending on the desired effect, tes3mobileActor.playerDistance . Wrapper for the GetDistance mwscript function. local result = mwscript . getDistance ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. target ( tes3reference , tes3mobileActor , string): Actor to check distance to. Returns : result (boolean) mwscript.getItemCount \u2693\ufe0e Use tes3.getItemCount() instead. Wrapper for the GetItemCount mwscript function. local result = mwscript . getItemCount ({ reference = ..., item = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string) Returns : result (number) mwscript.getPCJumping \u2693\ufe0e Use tes3.mobilePlayer.isJumping instead. Wrapper for the GetPCJumping mwscript function. local result = mwscript . getPCJumping () Returns : result (boolean) mwscript.getPCRunning \u2693\ufe0e Use tes3.mobilePlayer.isRunning instead. Wrapper for the GetPCRunning mwscript function. local result = mwscript . getPCRunning () Returns : result (boolean) mwscript.getPCSneaking \u2693\ufe0e Use tes3.mobilePlayer.isSneaking instead. Wrapper for the GetPCSneaking mwscript function. local result = mwscript . getPCSneaking () Returns : result (boolean) mwscript.getReference \u2693\ufe0e Use tes3globalScript.reference instead. Returns the script target for the currently running Morrowind script, if any. local result = mwscript . getReference () Returns : result ( tes3reference ) mwscript.getScript \u2693\ufe0e Returns the currently running Morrowind script, if any. local result = mwscript . getScript () Returns : result ( tes3script ) mwscript.getSpellEffects \u2693\ufe0e Use tes3.isAffectedBy() or tes3mobileActor:isAffectedByObject() instead. Wrapper for the GetSpellEffects mwscript function. local result = mwscript . getSpellEffects ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. spell ( tes3spell , string) Returns : result (boolean) mwscript.hasItemEquipped \u2693\ufe0e Use tes3actor:hasItemEquipped() or tes3.getEquippedItem() instead. Wrapper for the HasItemEquipped mwscript function. local result = mwscript . hasItemEquipped ({ reference = ..., item = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to check for. Returns : result (boolean) mwscript.placeAtPC \u2693\ufe0e Use tes3.createReference() instead. Wrapper for the PlaceAtPC mwscript function. local lastPlacedReference = mwscript . placeAtPC ({ reference = ..., object = ..., count = ..., distance = ..., direction = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. object ( tes3object , string): The object to place. count (number): Default : 1 . distance (number): Default : 256 . direction (number): Default : 1 . Returns : lastPlacedReference ( tes3reference ) mwscript.playSound \u2693\ufe0e Use tes3.playSound() , tes3sound:play() method, or tes3.playItemPickupSound() instead. Wrapper for the PlaySound mwscript function. local result = mwscript . playSound ({ reference = ..., sound = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. sound ( tes3sound , string) Returns : result (boolean) mwscript.position \u2693\ufe0e Set tes3reference.position or tes3mobileActor.position to desired new position instead, or use tes3.positionCell() . Wrapper for the Position mwscript function. local executed = mwscript . position ({ reference = ..., cell = ..., x = ..., y = ..., z = ..., rotation = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. cell (string) x (number): Default : 0 . y (number): Default : 0 . z (number): Default : 0 . rotation (number): Default : 0 . Returns : executed (boolean) mwscript.positionCell \u2693\ufe0e Use tes3.positionCell() instead. Wrapper for the PositionCell mwscript function. local executed = mwscript . positionCell ({ reference = ..., cell = ..., x = ..., y = ..., z = ..., rotation = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. cell (string) x (number): Default : 0 . y (number): Default : 0 . z (number): Default : 0 . rotation (number): Default : 0 . Returns : executed (boolean) mwscript.removeItem \u2693\ufe0e Use tes3.removeItem() , tes3.removeItemData() or tes3inventory:removeItem() instead. Wrapper for the RemoveItem mwscript function. local executed = mwscript . removeItem ({ reference = ..., item = ..., count = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to be removed. count (number): Default : 1 . The number of items to be removed. Returns : executed (boolean) mwscript.removeSpell \u2693\ufe0e Use tes3.removeSpell() or tes3spellList:remove() instead. Wrapper for the RemoveSpell mwscript function. local executed = mwscript . removeSpell ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. spell ( tes3spell , string) Returns : executed (boolean) mwscript.scriptRunning \u2693\ufe0e Wrapper for the ScriptRunning mwscript function. local result = mwscript . scriptRunning ({ script = ... }) Parameters : params (table) script ( tes3script , string) Returns : result (boolean) mwscript.setDelete \u2693\ufe0e Marks the reference as deleted, and modified. Deleted reference isn't rendered nor is its local mwscript run. local executed = mwscript . setDelete ({ reference = ..., delete = ... }) Parameters : params (table): Optional . reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. delete (boolean): Default : true . Setting this to true deletes the reference and triggers referenceDeactivated event. Setting this to false effectively undeletes/activates the reference and triggers referenceActivated event. Returns : executed (boolean) mwscript.setLevel \u2693\ufe0e Use tes3npc.level instead. Wrapper for the SetLevel mwscript function. local executed = mwscript . setLevel ({ reference = ..., level = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. level (number) Returns : executed (boolean) mwscript.startCombat \u2693\ufe0e Use tes3mobileActor:startCombat() instead. Wrapper for the StartCombat mwscript function. local executed = mwscript . startCombat ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. target ( tes3reference , tes3mobileActor , string): Actor to start combat with. Returns : executed (boolean) mwscript.startScript \u2693\ufe0e Use tes3.runLegacyScript() instead. Wrapper for the StartCombat mwscript function. local executed = mwscript . startScript ({ reference = ..., script = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. script ( tes3script , string) Returns : executed (boolean) mwscript.stopCombat \u2693\ufe0e Use tes3mobileActor:stopCombat() instead. Wrapper for the StopCombat mwscript function. local executed = mwscript . stopCombat ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. target ( tes3reference , tes3mobileActor , string): Actor to stop combat with. Returns : executed (boolean) mwscript.stopScript \u2693\ufe0e Wrapper for the StopScript mwscript function. local executed = mwscript . stopScript ({ reference = ..., script = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. script ( tes3script , string) Returns : executed (boolean) mwscript.stopSound \u2693\ufe0e Use tes3.removeSound() or tes3sound:stop() instead. Wrapper for the StopSound mwscript function. local result = mwscript . stopSound ({ reference = ..., sound = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. sound ( tes3sound , string) Returns : result (boolean) mwscript.wakeUpPC \u2693\ufe0e Use tes3.wakeUp() instead. Wrapper for the WakeUpPC mwscript function. mwscript . wakeUpPC ()","title":"Mwscript"},{"location":"apis/mwscript/#mwscript","text":"Warning This API is deprecated. See below for more information about what to use instead. The mwscript library allows vanilla mwscript functions to be called. This is not always ideal, and this library is deprecated. Avoid using it if at all possible.","title":"mwscript"},{"location":"apis/mwscript/#functions","text":"","title":"Functions"},{"location":"apis/mwscript/#mwscriptactivate","text":"Use tes3reference:activate() or tes3.setAIActivate() instead. Wrapper for the Activate mwscript function. mwscript . activate ({ reference = ... }) Parameters : params (table): Optional . reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference.","title":"mwscript.activate"},{"location":"apis/mwscript/#mwscriptadditem","text":"Use tes3.addItem() , tes3inventory:addItem() , or depending on your needs tes3mobileActor:equip() instead. Wrapper for the AddItem mwscript function. local executed = mwscript . addItem ({ reference = ..., item = ..., count = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to be added. count (number): Default : 1 . The number of items to be added. Returns : executed (boolean)","title":"mwscript.addItem"},{"location":"apis/mwscript/#mwscriptaddsoulgem","text":"use tes3.addItem() with the soul parameter instead. Wrapper for the AddSoulGem mwscript function. local executed = mwscript . addSoulGem ({ reference = ..., creature = ..., soulgem = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. creature ( tes3creature , string): The creature to be stored in the soul gem. soulgem ( tes3misc , string): The soul gem to store the soul in. Returns : executed (boolean)","title":"mwscript.addSoulGem"},{"location":"apis/mwscript/#mwscriptaddspell","text":"Use tes3.addSpell() or tes3spellList:add() instead. Wrapper for the AddSpell mwscript function. local executed = mwscript . addSpell ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. spell ( tes3spell , string) Returns : executed (boolean)","title":"mwscript.addSpell"},{"location":"apis/mwscript/#mwscriptaddtolevcreature","text":"Use tes3leveledCreature:insert() instead. Wrapper for the AddToLevCreature mwscript function. local executed = mwscript . addToLevCreature ({ list = ..., creature = ..., level = ... }) Parameters : params (table) list ( tes3leveledCreature , string): Leveled creature list to add a creature to. creature ( tes3actor , string): Creature to add to the list. level (number): Default : 0 . Minimum level for the creature to spawn. Returns : executed (boolean)","title":"mwscript.addToLevCreature"},{"location":"apis/mwscript/#mwscriptaddtolevitem","text":"Use tes3leveledItem:insert() instead. Wrapper for the AddToLevItem mwscript function. local executed = mwscript . addToLevItem ({ list = ..., item = ..., level = ... }) Parameters : params (table) list ( tes3leveledItem , string): Leveled item list to add a creature to. item ( tes3item , string): Item to add to the list. level (number): Default : 0 . Minimum level for the item to spawn. Returns : executed (boolean)","title":"mwscript.addToLevItem"},{"location":"apis/mwscript/#mwscriptaddtopic","text":"Use tes3.addTopic() instead. Wrapper for the AddTopic mwscript function. local executed = mwscript . addTopic ({ topic = ... }) Parameters : params (table) topic ( tes3dialogue , string) Returns : executed (boolean)","title":"mwscript.addTopic"},{"location":"apis/mwscript/#mwscriptaitravel","text":"Use tes3.setAITravel() instead. Wrapper for the AITravel mwscript function. local executed = mwscript . aiTravel ({ reference = ..., x = ..., y = ..., z = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. x (number) y (number) z (number) Returns : executed (boolean)","title":"mwscript.aiTravel"},{"location":"apis/mwscript/#mwscriptdisable","text":"Use tes3reference:disable() or tes3.setEnabled() instead. Wrapper for the Disable mwscript function. local executed = mwscript . disable ({ reference = ..., modify = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. modify (boolean): Default : true . Set the object as modified. Returns : executed (boolean)","title":"mwscript.disable"},{"location":"apis/mwscript/#mwscriptdrop","text":"Use tes3.dropItem() or tes3inventory:dropItem() instead. Wrapper for the Drop mwscript function. local executed = mwscript . drop ({ reference = ..., item = ..., count = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to be dropped. count (number): Default : 1 . The number of items to drop. Returns : executed (boolean)","title":"mwscript.drop"},{"location":"apis/mwscript/#mwscriptenable","text":"Use tes3.setEnabled() or tes3reference:enable() instead. Wrapper for the Enable mwscript function. local executed = mwscript . enable ({ reference = ..., modify = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. modify (boolean): Default : true . Set the object as modified. Returns : executed (boolean)","title":"mwscript.enable"},{"location":"apis/mwscript/#mwscriptequip","text":"Use tes3mobileActor:equip() or tes3mobileActor.combatSession:changeEquipment() instead. Wrapper for the Equip mwscript function. local executed = mwscript . equip ({ reference = ..., item = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to be equipped. Returns : executed (boolean)","title":"mwscript.equip"},{"location":"apis/mwscript/#mwscriptexplodespell","text":"Use tes3.cast() instead. Wrapper for the ExplodeSpell mwscript function. local executed = mwscript . explodeSpell ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. spell ( tes3spell , string) Returns : executed (boolean)","title":"mwscript.explodeSpell"},{"location":"apis/mwscript/#mwscriptgetbuttonpressed","text":"Use tes3.messageBox() instead. Wrapper for the GetButtonPressed mwscript function. local buttonIndex = mwscript . getButtonPressed () Returns : buttonIndex (number)","title":"mwscript.getButtonPressed"},{"location":"apis/mwscript/#mwscriptgetdetected","text":"Use tes3mobileActor.isPlayerDetected or depending on what you are doing, detectSneak event may be desirable. Wrapper for the GetDetected mwscript function. local result = mwscript . getDetected ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. target ( tes3reference , tes3mobileActor , string): Actor to check detection for. Returns : result (boolean)","title":"mwscript.getDetected"},{"location":"apis/mwscript/#mwscriptgetdisabled","text":"Use object.disabled on any object inheriting from tes3baseObject . Wrapper for the GetDisabled mwscript function. local result = mwscript . getDisabled ({ reference = ... }) Parameters : params (table): Optional . reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. Returns : result (boolean)","title":"mwscript.getDisabled"},{"location":"apis/mwscript/#mwscriptgetdistance","text":"Use tes3reference.position or tes3mobileActor.position to compute the distance or depending on the desired effect, tes3mobileActor.playerDistance . Wrapper for the GetDistance mwscript function. local result = mwscript . getDistance ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. target ( tes3reference , tes3mobileActor , string): Actor to check distance to. Returns : result (boolean)","title":"mwscript.getDistance"},{"location":"apis/mwscript/#mwscriptgetitemcount","text":"Use tes3.getItemCount() instead. Wrapper for the GetItemCount mwscript function. local result = mwscript . getItemCount ({ reference = ..., item = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string) Returns : result (number)","title":"mwscript.getItemCount"},{"location":"apis/mwscript/#mwscriptgetpcjumping","text":"Use tes3.mobilePlayer.isJumping instead. Wrapper for the GetPCJumping mwscript function. local result = mwscript . getPCJumping () Returns : result (boolean)","title":"mwscript.getPCJumping"},{"location":"apis/mwscript/#mwscriptgetpcrunning","text":"Use tes3.mobilePlayer.isRunning instead. Wrapper for the GetPCRunning mwscript function. local result = mwscript . getPCRunning () Returns : result (boolean)","title":"mwscript.getPCRunning"},{"location":"apis/mwscript/#mwscriptgetpcsneaking","text":"Use tes3.mobilePlayer.isSneaking instead. Wrapper for the GetPCSneaking mwscript function. local result = mwscript . getPCSneaking () Returns : result (boolean)","title":"mwscript.getPCSneaking"},{"location":"apis/mwscript/#mwscriptgetreference","text":"Use tes3globalScript.reference instead. Returns the script target for the currently running Morrowind script, if any. local result = mwscript . getReference () Returns : result ( tes3reference )","title":"mwscript.getReference"},{"location":"apis/mwscript/#mwscriptgetscript","text":"Returns the currently running Morrowind script, if any. local result = mwscript . getScript () Returns : result ( tes3script )","title":"mwscript.getScript"},{"location":"apis/mwscript/#mwscriptgetspelleffects","text":"Use tes3.isAffectedBy() or tes3mobileActor:isAffectedByObject() instead. Wrapper for the GetSpellEffects mwscript function. local result = mwscript . getSpellEffects ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. spell ( tes3spell , string) Returns : result (boolean)","title":"mwscript.getSpellEffects"},{"location":"apis/mwscript/#mwscripthasitemequipped","text":"Use tes3actor:hasItemEquipped() or tes3.getEquippedItem() instead. Wrapper for the HasItemEquipped mwscript function. local result = mwscript . hasItemEquipped ({ reference = ..., item = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to check for. Returns : result (boolean)","title":"mwscript.hasItemEquipped"},{"location":"apis/mwscript/#mwscriptplaceatpc","text":"Use tes3.createReference() instead. Wrapper for the PlaceAtPC mwscript function. local lastPlacedReference = mwscript . placeAtPC ({ reference = ..., object = ..., count = ..., distance = ..., direction = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. object ( tes3object , string): The object to place. count (number): Default : 1 . distance (number): Default : 256 . direction (number): Default : 1 . Returns : lastPlacedReference ( tes3reference )","title":"mwscript.placeAtPC"},{"location":"apis/mwscript/#mwscriptplaysound","text":"Use tes3.playSound() , tes3sound:play() method, or tes3.playItemPickupSound() instead. Wrapper for the PlaySound mwscript function. local result = mwscript . playSound ({ reference = ..., sound = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. sound ( tes3sound , string) Returns : result (boolean)","title":"mwscript.playSound"},{"location":"apis/mwscript/#mwscriptposition","text":"Set tes3reference.position or tes3mobileActor.position to desired new position instead, or use tes3.positionCell() . Wrapper for the Position mwscript function. local executed = mwscript . position ({ reference = ..., cell = ..., x = ..., y = ..., z = ..., rotation = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. cell (string) x (number): Default : 0 . y (number): Default : 0 . z (number): Default : 0 . rotation (number): Default : 0 . Returns : executed (boolean)","title":"mwscript.position"},{"location":"apis/mwscript/#mwscriptpositioncell","text":"Use tes3.positionCell() instead. Wrapper for the PositionCell mwscript function. local executed = mwscript . positionCell ({ reference = ..., cell = ..., x = ..., y = ..., z = ..., rotation = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. cell (string) x (number): Default : 0 . y (number): Default : 0 . z (number): Default : 0 . rotation (number): Default : 0 . Returns : executed (boolean)","title":"mwscript.positionCell"},{"location":"apis/mwscript/#mwscriptremoveitem","text":"Use tes3.removeItem() , tes3.removeItemData() or tes3inventory:removeItem() instead. Wrapper for the RemoveItem mwscript function. local executed = mwscript . removeItem ({ reference = ..., item = ..., count = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. item ( tes3item , string): The item to be removed. count (number): Default : 1 . The number of items to be removed. Returns : executed (boolean)","title":"mwscript.removeItem"},{"location":"apis/mwscript/#mwscriptremovespell","text":"Use tes3.removeSpell() or tes3spellList:remove() instead. Wrapper for the RemoveSpell mwscript function. local executed = mwscript . removeSpell ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. spell ( tes3spell , string) Returns : executed (boolean)","title":"mwscript.removeSpell"},{"location":"apis/mwscript/#mwscriptscriptrunning","text":"Wrapper for the ScriptRunning mwscript function. local result = mwscript . scriptRunning ({ script = ... }) Parameters : params (table) script ( tes3script , string) Returns : result (boolean)","title":"mwscript.scriptRunning"},{"location":"apis/mwscript/#mwscriptsetdelete","text":"Marks the reference as deleted, and modified. Deleted reference isn't rendered nor is its local mwscript run. local executed = mwscript . setDelete ({ reference = ..., delete = ... }) Parameters : params (table): Optional . reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. delete (boolean): Default : true . Setting this to true deletes the reference and triggers referenceDeactivated event. Setting this to false effectively undeletes/activates the reference and triggers referenceActivated event. Returns : executed (boolean)","title":"mwscript.setDelete"},{"location":"apis/mwscript/#mwscriptsetlevel","text":"Use tes3npc.level instead. Wrapper for the SetLevel mwscript function. local executed = mwscript . setLevel ({ reference = ..., level = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. level (number) Returns : executed (boolean)","title":"mwscript.setLevel"},{"location":"apis/mwscript/#mwscriptstartcombat","text":"Use tes3mobileActor:startCombat() instead. Wrapper for the StartCombat mwscript function. local executed = mwscript . startCombat ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. target ( tes3reference , tes3mobileActor , string): Actor to start combat with. Returns : executed (boolean)","title":"mwscript.startCombat"},{"location":"apis/mwscript/#mwscriptstartscript","text":"Use tes3.runLegacyScript() instead. Wrapper for the StartCombat mwscript function. local executed = mwscript . startScript ({ reference = ..., script = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. script ( tes3script , string) Returns : executed (boolean)","title":"mwscript.startScript"},{"location":"apis/mwscript/#mwscriptstopcombat","text":"Use tes3mobileActor:stopCombat() instead. Wrapper for the StopCombat mwscript function. local executed = mwscript . stopCombat ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. target ( tes3reference , tes3mobileActor , string): Actor to stop combat with. Returns : executed (boolean)","title":"mwscript.stopCombat"},{"location":"apis/mwscript/#mwscriptstopscript","text":"Wrapper for the StopScript mwscript function. local executed = mwscript . stopScript ({ reference = ..., script = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. script ( tes3script , string) Returns : executed (boolean)","title":"mwscript.stopScript"},{"location":"apis/mwscript/#mwscriptstopsound","text":"Use tes3.removeSound() or tes3sound:stop() instead. Wrapper for the StopSound mwscript function. local result = mwscript . stopSound ({ reference = ..., sound = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The target reference for this command to be executed on. Defaults to the normal script execution reference. sound ( tes3sound , string) Returns : result (boolean)","title":"mwscript.stopSound"},{"location":"apis/mwscript/#mwscriptwakeuppc","text":"Use tes3.wakeUp() instead. Wrapper for the WakeUpPC mwscript function. mwscript . wakeUpPC ()","title":"mwscript.wakeUpPC"},{"location":"apis/mwse/","text":"mwse \u2693\ufe0e The mwse library provides methods for interacting with MWSE itself, rather than direct TES3 objects. Properties \u2693\ufe0e mwse.buildDate \u2693\ufe0e A numerical representation of the date that version of MWSE currently being used was built on. Formatted as YYYYMMDD. Returns : result (number) Example: Check if the user has minimal required MWSE build installed. -- Ensure we have the features we need. if ( mwse . buildDate == nil or mwse . buildDate < 20210817 ) then mwse . log ( \"[Example] Build date of %s does not meet minimum build date of 20210817.\" , mwse . buildDate ) return end mwse.gameTimers \u2693\ufe0e The mwseTimerController responsible for game-type timers. Returns : result ( mwseTimerController ) mwse.realTimers \u2693\ufe0e The mwseTimerController responsible for real-type timers. Returns : result ( mwseTimerController ) mwse.simulateTimers \u2693\ufe0e The mwseTimerController responsible for simulate-type timers. Returns : result ( mwseTimerController ) mwse.version \u2693\ufe0e A numerical representation of the release version of MWSE currently being used. Formatted as AAABBBCCC, where A is the major version, BBB is the minor version, and CCC is the patch version. BBB and CCC are forward-padded. It is usually better to use mwse.buildDate instead. Returns : result (number) Functions \u2693\ufe0e mwse.clearScriptOverride \u2693\ufe0e Configures MWSE to no longer execute a lua function instead when a script would run. This undoes the work of mwse.overrideScript . local result = mwse . clearScriptOverride ( scriptId ) Parameters : scriptId (string) Returns : result (boolean) mwse.getCurrentMorrowindScriptState \u2693\ufe0e This function returns information on the current mwscript execution state. local script , reference = mwse . getCurrentMorrowindScriptState () Returns : script ( tes3script , nil): The currently executing mwscript script, or nil if none is presently being executed. reference ( tes3reference , nil): The currently executing mwscript script's associated reference. This will be nil for global scripts, or nil if no script is presently being executed. mwse.getVersion \u2693\ufe0e Equivalent to mwse.version. local result = mwse . getVersion () Returns : result (number) mwse.getVirtualMemoryUsage \u2693\ufe0e Returns the amount of memory used, in bytes. local result = mwse . getVirtualMemoryUsage () Returns : result (number) mwse.loadConfig \u2693\ufe0e Loads a config table from Data Files\\MWSE\\config\\{fileName}.json. If the default values table is passed, empty keys in the config will be filled in using its values. Additionally, if no file exists, the function will return the default table. local result = mwse . loadConfig ( fileName , defaults ) Parameters : fileName (string): The non-extensioned name of the config file. defaults (table): Optional . A table of default values. Returns : result (table) mwse.loadTranslations \u2693\ufe0e Loads translations from the i18n folder for a given mod. This is locale-aware, using the result from tes3.getLanguage() . See the mod translations guide for more information. local i18n = mwse . loadTranslations ( mod ) Parameters : mod (string): Name of the folder that your main.lua mod can be found in. Returns : i18n (function): The callable translation results. mwse.log \u2693\ufe0e This function writes information to the mwse.log file in the user's installation directory. The message accepts formatting and additional parameters matching string.format's usage. mwse . log ( message , formatValues ) Parameters : message (string) formatValues (variadic): Optional . mwse.longToString \u2693\ufe0e Converts a TES3 object type (e.g. from tes3.objectType) into an uppercase, 4-character string. local result = mwse . longToString ( type ) Parameters : type (number) Returns : result (string) mwse.overrideScript \u2693\ufe0e Configures MWSE to execute a given function instead when a script would run. local result = mwse . overrideScript ( scriptId , callback ) Parameters : scriptId (string) callback (function) Returns : result (boolean) Example: Here is an example of the most common use case for this function. -- In this example, the vanilla \"RaceCheck\" script is overridden -- with our own raceCheck() function that does the same thing. local raceCheckScriptID = \"RaceCheck\" local function raceCheck () -- This is almost always the desired behavior, -- since we are overriding the script. mwscript . stopScript ({ script = raceCheckScriptID }) local pcRaceID = tes3 . player . object . race . id : lower () local PCRace = tes3 . findGlobal ( \"PCRace\" ) if pcRaceID == \"argonian\" then PCRace . value = 1 elseif pcRaceID == \"breton\" then PCRace . value = 2 elseif pcRaceID == \"dark elf\" then PCRace . value = 3 elseif pcRaceID == \"high elf\" then PCRace . value = 4 elseif pcRaceID == \"imperial\" then PCRace . value = 5 elseif pcRaceID == \"khajiit\" then PCRace . value = 6 elseif pcRaceID == \"nord\" then PCRace . value = 7 elseif pcRaceID == \"orc\" then PCRace . value = 8 elseif pcRaceID == \"redguard\" then PCRace . value = 9 elseif pcRaceID == \"wood elf\" then PCRace . value = 10 end end -- Script overrides can be queued when initialited event triggers. event . register ( tes3 . event . initialized , function () mwse . overrideScript ( raceCheckScriptID , raceCheck ) end ) mwse.saveConfig \u2693\ufe0e Saves a config table to Data Files\\MWSE\\config\\{fileName}.json. local result = mwse . saveConfig ( fileName , object , config ) Parameters : fileName (string) object (unknown) config (table): Optional . Returns : result (table) mwse.stringToLong \u2693\ufe0e Converts an uppercase, 4-character string into a TES3 object type. local result = mwse . stringToLong ( tag ) Parameters : tag (string) Returns : result (number)","title":"Mwse"},{"location":"apis/mwse/#mwse","text":"The mwse library provides methods for interacting with MWSE itself, rather than direct TES3 objects.","title":"mwse"},{"location":"apis/mwse/#properties","text":"","title":"Properties"},{"location":"apis/mwse/#mwsebuilddate","text":"A numerical representation of the date that version of MWSE currently being used was built on. Formatted as YYYYMMDD. Returns : result (number) Example: Check if the user has minimal required MWSE build installed. -- Ensure we have the features we need. if ( mwse . buildDate == nil or mwse . buildDate < 20210817 ) then mwse . log ( \"[Example] Build date of %s does not meet minimum build date of 20210817.\" , mwse . buildDate ) return end","title":"mwse.buildDate"},{"location":"apis/mwse/#mwsegametimers","text":"The mwseTimerController responsible for game-type timers. Returns : result ( mwseTimerController )","title":"mwse.gameTimers"},{"location":"apis/mwse/#mwserealtimers","text":"The mwseTimerController responsible for real-type timers. Returns : result ( mwseTimerController )","title":"mwse.realTimers"},{"location":"apis/mwse/#mwsesimulatetimers","text":"The mwseTimerController responsible for simulate-type timers. Returns : result ( mwseTimerController )","title":"mwse.simulateTimers"},{"location":"apis/mwse/#mwseversion","text":"A numerical representation of the release version of MWSE currently being used. Formatted as AAABBBCCC, where A is the major version, BBB is the minor version, and CCC is the patch version. BBB and CCC are forward-padded. It is usually better to use mwse.buildDate instead. Returns : result (number)","title":"mwse.version"},{"location":"apis/mwse/#functions","text":"","title":"Functions"},{"location":"apis/mwse/#mwseclearscriptoverride","text":"Configures MWSE to no longer execute a lua function instead when a script would run. This undoes the work of mwse.overrideScript . local result = mwse . clearScriptOverride ( scriptId ) Parameters : scriptId (string) Returns : result (boolean)","title":"mwse.clearScriptOverride"},{"location":"apis/mwse/#mwsegetcurrentmorrowindscriptstate","text":"This function returns information on the current mwscript execution state. local script , reference = mwse . getCurrentMorrowindScriptState () Returns : script ( tes3script , nil): The currently executing mwscript script, or nil if none is presently being executed. reference ( tes3reference , nil): The currently executing mwscript script's associated reference. This will be nil for global scripts, or nil if no script is presently being executed.","title":"mwse.getCurrentMorrowindScriptState"},{"location":"apis/mwse/#mwsegetversion","text":"Equivalent to mwse.version. local result = mwse . getVersion () Returns : result (number)","title":"mwse.getVersion"},{"location":"apis/mwse/#mwsegetvirtualmemoryusage","text":"Returns the amount of memory used, in bytes. local result = mwse . getVirtualMemoryUsage () Returns : result (number)","title":"mwse.getVirtualMemoryUsage"},{"location":"apis/mwse/#mwseloadconfig","text":"Loads a config table from Data Files\\MWSE\\config\\{fileName}.json. If the default values table is passed, empty keys in the config will be filled in using its values. Additionally, if no file exists, the function will return the default table. local result = mwse . loadConfig ( fileName , defaults ) Parameters : fileName (string): The non-extensioned name of the config file. defaults (table): Optional . A table of default values. Returns : result (table)","title":"mwse.loadConfig"},{"location":"apis/mwse/#mwseloadtranslations","text":"Loads translations from the i18n folder for a given mod. This is locale-aware, using the result from tes3.getLanguage() . See the mod translations guide for more information. local i18n = mwse . loadTranslations ( mod ) Parameters : mod (string): Name of the folder that your main.lua mod can be found in. Returns : i18n (function): The callable translation results.","title":"mwse.loadTranslations"},{"location":"apis/mwse/#mwselog","text":"This function writes information to the mwse.log file in the user's installation directory. The message accepts formatting and additional parameters matching string.format's usage. mwse . log ( message , formatValues ) Parameters : message (string) formatValues (variadic): Optional .","title":"mwse.log"},{"location":"apis/mwse/#mwselongtostring","text":"Converts a TES3 object type (e.g. from tes3.objectType) into an uppercase, 4-character string. local result = mwse . longToString ( type ) Parameters : type (number) Returns : result (string)","title":"mwse.longToString"},{"location":"apis/mwse/#mwseoverridescript","text":"Configures MWSE to execute a given function instead when a script would run. local result = mwse . overrideScript ( scriptId , callback ) Parameters : scriptId (string) callback (function) Returns : result (boolean) Example: Here is an example of the most common use case for this function. -- In this example, the vanilla \"RaceCheck\" script is overridden -- with our own raceCheck() function that does the same thing. local raceCheckScriptID = \"RaceCheck\" local function raceCheck () -- This is almost always the desired behavior, -- since we are overriding the script. mwscript . stopScript ({ script = raceCheckScriptID }) local pcRaceID = tes3 . player . object . race . id : lower () local PCRace = tes3 . findGlobal ( \"PCRace\" ) if pcRaceID == \"argonian\" then PCRace . value = 1 elseif pcRaceID == \"breton\" then PCRace . value = 2 elseif pcRaceID == \"dark elf\" then PCRace . value = 3 elseif pcRaceID == \"high elf\" then PCRace . value = 4 elseif pcRaceID == \"imperial\" then PCRace . value = 5 elseif pcRaceID == \"khajiit\" then PCRace . value = 6 elseif pcRaceID == \"nord\" then PCRace . value = 7 elseif pcRaceID == \"orc\" then PCRace . value = 8 elseif pcRaceID == \"redguard\" then PCRace . value = 9 elseif pcRaceID == \"wood elf\" then PCRace . value = 10 end end -- Script overrides can be queued when initialited event triggers. event . register ( tes3 . event . initialized , function () mwse . overrideScript ( raceCheckScriptID , raceCheck ) end )","title":"mwse.overrideScript"},{"location":"apis/mwse/#mwsesaveconfig","text":"Saves a config table to Data Files\\MWSE\\config\\{fileName}.json. local result = mwse . saveConfig ( fileName , object , config ) Parameters : fileName (string) object (unknown) config (table): Optional . Returns : result (table)","title":"mwse.saveConfig"},{"location":"apis/mwse/#mwsestringtolong","text":"Converts an uppercase, 4-character string into a TES3 object type. local result = mwse . stringToLong ( tag ) Parameters : tag (string) Returns : result (number)","title":"mwse.stringToLong"},{"location":"apis/mwse.stack/","text":"mwse.stack \u2693\ufe0e The stack library provides functions to interact with the mwse mwscript stack, for dealing with custom mwscript extensions. Functions \u2693\ufe0e mwse.stack.clear \u2693\ufe0e Purges all elements from the stack. mwse . stack . clear () mwse.stack.dump \u2693\ufe0e Prints all values on the stack in hex format to the log file. mwse . stack . dump () mwse.stack.empty \u2693\ufe0e Determines if the stack is empty. local result = mwse . stack . empty () Returns : result (boolean) mwse.stack.popFloat \u2693\ufe0e Pops a value of mwscript type \"float\" off of the stack. local unnamed1 = mwse . stack . popFloat () Returns : unnamed (number): Optional . mwse.stack.popLong \u2693\ufe0e Pops a value of mwscript type \"long\" off of the stack. local unnamed1 = mwse . stack . popLong () Returns : unnamed (number): Optional . mwse.stack.popObject \u2693\ufe0e Pops a value of mwscript type \"long\" off of the stack, and tries to reinterpret as a game object. local unnamed1 = mwse . stack . popObject () Returns : unnamed ( tes3baseObject ): Optional . mwse.stack.popShort \u2693\ufe0e Pops a value of mwscript type \"short\" off of the stack. local unnamed1 = mwse . stack . popShort () Returns : unnamed (number): Optional . mwse.stack.popString \u2693\ufe0e Pops a value of mwscript type \"long\" off of the stack, and tries to reinterpret as a string. local unnamed1 = mwse . stack . popString () Returns : unnamed (string): Optional . mwse.stack.pushFloat \u2693\ufe0e Pushes a value of mwscript type \"float\" onto the stack. local result = mwse . stack . pushFloat ( value ) Parameters : value (number) Returns : result (nil) mwse.stack.pushLong \u2693\ufe0e Pushes a value of mwscript type \"long\" onto the stack. local result = mwse . stack . pushLong ( value ) Parameters : value (number) Returns : result (nil) mwse.stack.pushObject \u2693\ufe0e Pushes a value of mwscript type \"long\" onto the stack, which matches the address of a given game object. local result = mwse . stack . pushObject ( value ) Parameters : value ( tes3baseObject ) Returns : result (nil) mwse.stack.pushShort \u2693\ufe0e Pushes a value of mwscript type \"short\" onto the stack. local result = mwse . stack . pushShort ( value ) Parameters : value (number) Returns : result (nil) mwse.stack.pushString \u2693\ufe0e Adds a string to mwse's string storage, and pushes a value of mwscript type \"long\" onto the stack that represents the string. local result = mwse . stack . pushString ( value ) Parameters : value (string) Returns : result (nil) mwse.stack.size \u2693\ufe0e Returns the number of elements currently on the stack. local result = mwse . stack . size () Returns : result (number)","title":"Mwse.stack"},{"location":"apis/mwse.stack/#mwsestack","text":"The stack library provides functions to interact with the mwse mwscript stack, for dealing with custom mwscript extensions.","title":"mwse.stack"},{"location":"apis/mwse.stack/#functions","text":"","title":"Functions"},{"location":"apis/mwse.stack/#mwsestackclear","text":"Purges all elements from the stack. mwse . stack . clear ()","title":"mwse.stack.clear"},{"location":"apis/mwse.stack/#mwsestackdump","text":"Prints all values on the stack in hex format to the log file. mwse . stack . dump ()","title":"mwse.stack.dump"},{"location":"apis/mwse.stack/#mwsestackempty","text":"Determines if the stack is empty. local result = mwse . stack . empty () Returns : result (boolean)","title":"mwse.stack.empty"},{"location":"apis/mwse.stack/#mwsestackpopfloat","text":"Pops a value of mwscript type \"float\" off of the stack. local unnamed1 = mwse . stack . popFloat () Returns : unnamed (number): Optional .","title":"mwse.stack.popFloat"},{"location":"apis/mwse.stack/#mwsestackpoplong","text":"Pops a value of mwscript type \"long\" off of the stack. local unnamed1 = mwse . stack . popLong () Returns : unnamed (number): Optional .","title":"mwse.stack.popLong"},{"location":"apis/mwse.stack/#mwsestackpopobject","text":"Pops a value of mwscript type \"long\" off of the stack, and tries to reinterpret as a game object. local unnamed1 = mwse . stack . popObject () Returns : unnamed ( tes3baseObject ): Optional .","title":"mwse.stack.popObject"},{"location":"apis/mwse.stack/#mwsestackpopshort","text":"Pops a value of mwscript type \"short\" off of the stack. local unnamed1 = mwse . stack . popShort () Returns : unnamed (number): Optional .","title":"mwse.stack.popShort"},{"location":"apis/mwse.stack/#mwsestackpopstring","text":"Pops a value of mwscript type \"long\" off of the stack, and tries to reinterpret as a string. local unnamed1 = mwse . stack . popString () Returns : unnamed (string): Optional .","title":"mwse.stack.popString"},{"location":"apis/mwse.stack/#mwsestackpushfloat","text":"Pushes a value of mwscript type \"float\" onto the stack. local result = mwse . stack . pushFloat ( value ) Parameters : value (number) Returns : result (nil)","title":"mwse.stack.pushFloat"},{"location":"apis/mwse.stack/#mwsestackpushlong","text":"Pushes a value of mwscript type \"long\" onto the stack. local result = mwse . stack . pushLong ( value ) Parameters : value (number) Returns : result (nil)","title":"mwse.stack.pushLong"},{"location":"apis/mwse.stack/#mwsestackpushobject","text":"Pushes a value of mwscript type \"long\" onto the stack, which matches the address of a given game object. local result = mwse . stack . pushObject ( value ) Parameters : value ( tes3baseObject ) Returns : result (nil)","title":"mwse.stack.pushObject"},{"location":"apis/mwse.stack/#mwsestackpushshort","text":"Pushes a value of mwscript type \"short\" onto the stack. local result = mwse . stack . pushShort ( value ) Parameters : value (number) Returns : result (nil)","title":"mwse.stack.pushShort"},{"location":"apis/mwse.stack/#mwsestackpushstring","text":"Adds a string to mwse's string storage, and pushes a value of mwscript type \"long\" onto the stack that represents the string. local result = mwse . stack . pushString ( value ) Parameters : value (string) Returns : result (nil)","title":"mwse.stack.pushString"},{"location":"apis/mwse.stack/#mwsestacksize","text":"Returns the number of elements currently on the stack. local result = mwse . stack . size () Returns : result (number)","title":"mwse.stack.size"},{"location":"apis/mwse.string/","text":"mwse.string \u2693\ufe0e The mwse string library provides functions for interacting with mwscript string storage. Functions \u2693\ufe0e mwse.string.create \u2693\ufe0e Creates a string in storage, and returns the numerical key for it. If the string is already in storage, the previous key will be returned. local result = mwse . string . create ( value ) Parameters : value (string) Returns : result (number) mwse.string.get \u2693\ufe0e Returns the numerical key for a given string in storage, or nil if the string isn't in storage. local unnamed1 = mwse . string . get ( id ) Parameters : id (number): Optional . Returns : unnamed (string)","title":"Mwse.string"},{"location":"apis/mwse.string/#mwsestring","text":"The mwse string library provides functions for interacting with mwscript string storage.","title":"mwse.string"},{"location":"apis/mwse.string/#functions","text":"","title":"Functions"},{"location":"apis/mwse.string/#mwsestringcreate","text":"Creates a string in storage, and returns the numerical key for it. If the string is already in storage, the previous key will be returned. local result = mwse . string . create ( value ) Parameters : value (string) Returns : result (number)","title":"mwse.string.create"},{"location":"apis/mwse.string/#mwsestringget","text":"Returns the numerical key for a given string in storage, or nil if the string isn't in storage. local unnamed1 = mwse . string . get ( id ) Parameters : id (number): Optional . Returns : unnamed (string)","title":"mwse.string.get"},{"location":"apis/os/","text":"os \u2693\ufe0e Provides various OS-specific functions. Functions \u2693\ufe0e os.clock \u2693\ufe0e Return CPU time since Lua started in seconds. local result = os.clock () Returns : result (number) os.createProcess \u2693\ufe0e Passes command to be executed by an operating system. Unlike os.execute , this will not display a console prompt that interrupts the game and cannot run direct shell commands. local executor = os . createProcess ({ command = ..., async = ... }) Parameters : params (table) command (string): The command to run. async (boolean): Default : true . If set to false, Morrowind will halt execution until the program finishes. Returns : executor ( mwseLuaExecutor ): A handle to the executor. This can be used to check if the program has errored, finished, and to get the program's output. os.execute \u2693\ufe0e Passes command to be executed by an operating system shell. To open a program to run in the background and monitor its output, use os.createProcess . local exitCode = os.execute ( command ) Parameters : command (string): The command to run. Returns : exitCode (number): The exit code of the program. os.getClipboardText \u2693\ufe0e Returns the current clipboard text, if any is available. local result = os . getClipboardText () Returns : result (string, nil) os.openURL \u2693\ufe0e Opens the given url in the default browser. This has an advantage over using os.execute(\"show https://my.url\") in that it does not create a command prompt window. os . openURL ( url ) Parameters : url (string): The URL to open. os.setClipboardText \u2693\ufe0e Sets the current clipboard text. If nil is passed, the clipboard will be cleared instead. If either operation fails, the function returns false. local result = os . setClipboardText ( text ) Parameters : text (string, nil): Optional . The text to put in the clipboard. If nil is provided instead, then the clipboard will be cleared. Returns : result (boolean)","title":"Os"},{"location":"apis/os/#os","text":"Provides various OS-specific functions.","title":"os"},{"location":"apis/os/#functions","text":"","title":"Functions"},{"location":"apis/os/#osclock","text":"Return CPU time since Lua started in seconds. local result = os.clock () Returns : result (number)","title":"os.clock"},{"location":"apis/os/#oscreateprocess","text":"Passes command to be executed by an operating system. Unlike os.execute , this will not display a console prompt that interrupts the game and cannot run direct shell commands. local executor = os . createProcess ({ command = ..., async = ... }) Parameters : params (table) command (string): The command to run. async (boolean): Default : true . If set to false, Morrowind will halt execution until the program finishes. Returns : executor ( mwseLuaExecutor ): A handle to the executor. This can be used to check if the program has errored, finished, and to get the program's output.","title":"os.createProcess"},{"location":"apis/os/#osexecute","text":"Passes command to be executed by an operating system shell. To open a program to run in the background and monitor its output, use os.createProcess . local exitCode = os.execute ( command ) Parameters : command (string): The command to run. Returns : exitCode (number): The exit code of the program.","title":"os.execute"},{"location":"apis/os/#osgetclipboardtext","text":"Returns the current clipboard text, if any is available. local result = os . getClipboardText () Returns : result (string, nil)","title":"os.getClipboardText"},{"location":"apis/os/#osopenurl","text":"Opens the given url in the default browser. This has an advantage over using os.execute(\"show https://my.url\") in that it does not create a command prompt window. os . openURL ( url ) Parameters : url (string): The URL to open.","title":"os.openURL"},{"location":"apis/os/#ossetclipboardtext","text":"Sets the current clipboard text. If nil is passed, the clipboard will be cleared instead. If either operation fails, the function returns false. local result = os . setClipboardText ( text ) Parameters : text (string, nil): Optional . The text to put in the clipboard. If nil is provided instead, then the clipboard will be cleared. Returns : result (boolean)","title":"os.setClipboardText"},{"location":"apis/re/","text":"re \u2693\ufe0e Provides a regular expression style syntax for pattern usage with lpeg. The documentation provided here is only meant to be a quick reference. Please review the complete documentation (with in-depth discussion and many examples) at: http://www.inf.puc-rio.br/~roberto/lpeg/re.html There is also a copy in the MWSE repo at: deps/lpeg/re.html Functions \u2693\ufe0e re.compile \u2693\ufe0e Compiles the given string and returns an equivalent lpeg pattern. The given string may define either an expression or a grammar. The optional defs table provides extra Lua values to be used by the pattern. local result = re . compile ( s , defs ) Parameters : s (string): The string to compile. defs (table): Optional . Extra lua values to be used by the pattern. Returns : result (pattern) re.find \u2693\ufe0e Searches the given pattern in the given subject. If it finds a match, returns the index where this occurrence starts and the index where it ends. Otherwise, returns nil. An optional numeric argument init makes the search starts at that position in the subject string. As usual in Lua libraries, a negative value counts from the end. local result = re . find ( subject , pattern , init ) Parameters : subject (string): The string to search. pattern (string): The pattern to search with. init (number): Optional . Start at this position in the subject string. Returns : result (number) Example: Simple Find Use re.find to get the position of the first numeral in a string. local re = require ( \"re\" ) local function onLoaded ( e ) -- find the position of the first numeral in a string mwse . log ( \"%d %d\" , re . find ( \"the number 423 is odd\" , \"[0-9]+\" )) --> 12 14 end event . register ( tes3 . event . loaded , onLoaded ) re.gsub \u2693\ufe0e Does a global substitution, replacing all occurrences of pattern in the given subject by replacement. local result = re . gsub ( subject , pattern , replacement ) Parameters : subject (string): The string to search. pattern (string): The pattern to search with. replacement (string): Replace all matches with this string. Returns : result (string) Example: Simple Substitution Use re.gsub to replace all vowels in a string with '.'. local re = require ( \"re\" ) local function onLoaded ( e ) -- returns a string with all vowels replaced by . mwse . log ( re . gsub ( \"hello World\" , \"[aeiou]\" , \".\" )) --> h.ll. W.rld end event . register ( tes3 . event . loaded , onLoaded ) re.match \u2693\ufe0e Matches the given pattern against the given subject, returning all captures. local result = re . match ( subject , pattern ) Parameters : subject (string): The string to search. pattern (string): The pattern to search with. Returns : result (string) Example: Simple Match Use re.match to find all the words in a string, then find the first numeral. local re = require ( \"re\" ) local function onLoaded ( e ) -- returns all words in a string mwse . log ( \"%s %s %s %s\" , re . match ( \"the number 423 is odd\" , \"({%a+} / .)*\" )) --> the number is odd -- returns the first numeral in a string mwse . log ( re . match ( \"the number 423 is odd\" , \"s <- {%d+} / . s\" )) --> 423 end event . register ( tes3 . event . loaded , onLoaded ) re.updatelocale \u2693\ufe0e Updates the pre-defined character classes to the current locale. re . updatelocale ()","title":"Re"},{"location":"apis/re/#re","text":"Provides a regular expression style syntax for pattern usage with lpeg. The documentation provided here is only meant to be a quick reference. Please review the complete documentation (with in-depth discussion and many examples) at: http://www.inf.puc-rio.br/~roberto/lpeg/re.html There is also a copy in the MWSE repo at: deps/lpeg/re.html","title":"re"},{"location":"apis/re/#functions","text":"","title":"Functions"},{"location":"apis/re/#recompile","text":"Compiles the given string and returns an equivalent lpeg pattern. The given string may define either an expression or a grammar. The optional defs table provides extra Lua values to be used by the pattern. local result = re . compile ( s , defs ) Parameters : s (string): The string to compile. defs (table): Optional . Extra lua values to be used by the pattern. Returns : result (pattern)","title":"re.compile"},{"location":"apis/re/#refind","text":"Searches the given pattern in the given subject. If it finds a match, returns the index where this occurrence starts and the index where it ends. Otherwise, returns nil. An optional numeric argument init makes the search starts at that position in the subject string. As usual in Lua libraries, a negative value counts from the end. local result = re . find ( subject , pattern , init ) Parameters : subject (string): The string to search. pattern (string): The pattern to search with. init (number): Optional . Start at this position in the subject string. Returns : result (number) Example: Simple Find Use re.find to get the position of the first numeral in a string. local re = require ( \"re\" ) local function onLoaded ( e ) -- find the position of the first numeral in a string mwse . log ( \"%d %d\" , re . find ( \"the number 423 is odd\" , \"[0-9]+\" )) --> 12 14 end event . register ( tes3 . event . loaded , onLoaded )","title":"re.find"},{"location":"apis/re/#regsub","text":"Does a global substitution, replacing all occurrences of pattern in the given subject by replacement. local result = re . gsub ( subject , pattern , replacement ) Parameters : subject (string): The string to search. pattern (string): The pattern to search with. replacement (string): Replace all matches with this string. Returns : result (string) Example: Simple Substitution Use re.gsub to replace all vowels in a string with '.'. local re = require ( \"re\" ) local function onLoaded ( e ) -- returns a string with all vowels replaced by . mwse . log ( re . gsub ( \"hello World\" , \"[aeiou]\" , \".\" )) --> h.ll. W.rld end event . register ( tes3 . event . loaded , onLoaded )","title":"re.gsub"},{"location":"apis/re/#rematch","text":"Matches the given pattern against the given subject, returning all captures. local result = re . match ( subject , pattern ) Parameters : subject (string): The string to search. pattern (string): The pattern to search with. Returns : result (string) Example: Simple Match Use re.match to find all the words in a string, then find the first numeral. local re = require ( \"re\" ) local function onLoaded ( e ) -- returns all words in a string mwse . log ( \"%s %s %s %s\" , re . match ( \"the number 423 is odd\" , \"({%a+} / .)*\" )) --> the number is odd -- returns the first numeral in a string mwse . log ( re . match ( \"the number 423 is odd\" , \"s <- {%d+} / . s\" )) --> 423 end event . register ( tes3 . event . loaded , onLoaded )","title":"re.match"},{"location":"apis/re/#reupdatelocale","text":"Updates the pre-defined character classes to the current locale. re . updatelocale ()","title":"re.updatelocale"},{"location":"apis/string/","text":"string \u2693\ufe0e This library provides generic functions for string manipulation, such as finding and extracting substrings, and pattern matching. When indexing a string in Lua, the first character is at position 1 (not at 0, as in C). Indices are allowed to be negative and are interpreted as indexing backwards, from the end of the string. Thus, the last character is at position -1, and so on. Functions \u2693\ufe0e string.endswith \u2693\ufe0e Returns true if a string ends with a given pattern. local result = string . endswith ( s , pattern ) Parameters : s (string) pattern (string) Returns : result (boolean) string.format \u2693\ufe0e This function creates a string, given various values. The first parameter follows the printf format, with the additional option of %q to automatically quote a string. Specifier Output Example %d Signed decimal integer. -392 %i Same as %d . -392 %u Unsigned decimal integer. 7235 %o Unsigned octal. 610 %x Unsigned hexadecimal integer. 7fa %X As %x , but uppercase. 7FA %f Decimal floating point, lowercase. 392.65 %F Decimal floating point, uppercase. 392.65 %e Scientific notation (mantissa/exponent), lowercase. 3.9265e+2 %E Scientific notation (mantissa/exponent), uppercase. 3.9265E+2 %g Use the shortest representation: %e or %f. 392.65 %G Use the shortest representation: %E or %F. 392.65 %a Hexadecimal floating point, lowercase. -0xc.90fep-2 %A Hexadecimal floating point, uppercase. -0XC.90FEP-2 %c Character. a %s String of characters. sample %q Quoted string of characters. \"sample\" %p Pointer address. b8000000 %% The literal % character. % local result = string.format ( format , values ) Parameters : format (string): The format string to use for the output. values (any): Optional . Values to format into the given string. Returns : result (string) string.insert \u2693\ufe0e Returns a string where one string has been inserted into another at a given position. local inserted = string . insert ( s1 , s2 , position ) Parameters : s1 (string): The string to insert into. s2 (string): The string to insert. position (number): The position to insert s2 into s1. Returns : inserted (string): A copy of s1 with s2 inserted into it. string.multifind \u2693\ufe0e Performs the logic of find, using a table of patterns. If any of the available patterns match, the matching pattern is returned followed by the normal results of the find. string . multifind ( s , pattern , index , plain ) Parameters : s (string): The string to perform finds on. pattern (table): An array-style table that contains pattern strings. index (number): Default : 1 . Start index of the find. plain (boolean): Default : false . If true, a normal search instead of a pattern search will be performed. string.split \u2693\ufe0e Returns an array-style table with str split by sep . The sep erator is not part of the results. By default the sep erator is %s , splitting the given str ing by spaces. local split = string . split ( str , sep ) Parameters : str (string): The string to split. sep (string): Default : \"%s\" . The token to split the string by. Returns : split (string[]) string.startswith \u2693\ufe0e Returns true if a string begins with a given pattern. local result = string . startswith ( s , pattern ) Parameters : s (string) pattern (string) Returns : result (boolean) string.trim \u2693\ufe0e Returns a copy of the string, with whitespace removed from the start and end. local trimmed = string . trim ( s ) Parameters : s (string) Returns : trimmed (string)","title":"String"},{"location":"apis/string/#string","text":"This library provides generic functions for string manipulation, such as finding and extracting substrings, and pattern matching. When indexing a string in Lua, the first character is at position 1 (not at 0, as in C). Indices are allowed to be negative and are interpreted as indexing backwards, from the end of the string. Thus, the last character is at position -1, and so on.","title":"string"},{"location":"apis/string/#functions","text":"","title":"Functions"},{"location":"apis/string/#stringendswith","text":"Returns true if a string ends with a given pattern. local result = string . endswith ( s , pattern ) Parameters : s (string) pattern (string) Returns : result (boolean)","title":"string.endswith"},{"location":"apis/string/#stringformat","text":"This function creates a string, given various values. The first parameter follows the printf format, with the additional option of %q to automatically quote a string. Specifier Output Example %d Signed decimal integer. -392 %i Same as %d . -392 %u Unsigned decimal integer. 7235 %o Unsigned octal. 610 %x Unsigned hexadecimal integer. 7fa %X As %x , but uppercase. 7FA %f Decimal floating point, lowercase. 392.65 %F Decimal floating point, uppercase. 392.65 %e Scientific notation (mantissa/exponent), lowercase. 3.9265e+2 %E Scientific notation (mantissa/exponent), uppercase. 3.9265E+2 %g Use the shortest representation: %e or %f. 392.65 %G Use the shortest representation: %E or %F. 392.65 %a Hexadecimal floating point, lowercase. -0xc.90fep-2 %A Hexadecimal floating point, uppercase. -0XC.90FEP-2 %c Character. a %s String of characters. sample %q Quoted string of characters. \"sample\" %p Pointer address. b8000000 %% The literal % character. % local result = string.format ( format , values ) Parameters : format (string): The format string to use for the output. values (any): Optional . Values to format into the given string. Returns : result (string)","title":"string.format"},{"location":"apis/string/#stringinsert","text":"Returns a string where one string has been inserted into another at a given position. local inserted = string . insert ( s1 , s2 , position ) Parameters : s1 (string): The string to insert into. s2 (string): The string to insert. position (number): The position to insert s2 into s1. Returns : inserted (string): A copy of s1 with s2 inserted into it.","title":"string.insert"},{"location":"apis/string/#stringmultifind","text":"Performs the logic of find, using a table of patterns. If any of the available patterns match, the matching pattern is returned followed by the normal results of the find. string . multifind ( s , pattern , index , plain ) Parameters : s (string): The string to perform finds on. pattern (table): An array-style table that contains pattern strings. index (number): Default : 1 . Start index of the find. plain (boolean): Default : false . If true, a normal search instead of a pattern search will be performed.","title":"string.multifind"},{"location":"apis/string/#stringsplit","text":"Returns an array-style table with str split by sep . The sep erator is not part of the results. By default the sep erator is %s , splitting the given str ing by spaces. local split = string . split ( str , sep ) Parameters : str (string): The string to split. sep (string): Default : \"%s\" . The token to split the string by. Returns : split (string[])","title":"string.split"},{"location":"apis/string/#stringstartswith","text":"Returns true if a string begins with a given pattern. local result = string . startswith ( s , pattern ) Parameters : s (string) pattern (string) Returns : result (boolean)","title":"string.startswith"},{"location":"apis/string/#stringtrim","text":"Returns a copy of the string, with whitespace removed from the start and end. local trimmed = string . trim ( s ) Parameters : s (string) Returns : trimmed (string)","title":"string.trim"},{"location":"apis/table/","text":"table \u2693\ufe0e This library provides generic functions for table manipulation. It provides all its functions inside the table table. Functions \u2693\ufe0e table.bininsert \u2693\ufe0e Inserts a given value through BinaryInsert into the table sorted by [, comp]. If 'comp' is given, then it must be a function that receives two table elements, and returns true when the first is less than the second, e.g. comp = function(a, b) return a > b end, will give a sorted table, with the biggest value on position 1. [, comp] behaves as in table.sort(table, value [, comp]) returns the index where 'value' was inserted local result = table . bininsert ( t , value , comp ) Parameters : t (table) value (unknown) comp (unknown): Optional . Returns : result (number) table.binsearch \u2693\ufe0e Performs a binary search for a given value. If the value is found: It returns a table holding all the mathing indices (e.g. { startindice,endindice } ) endindice may be the same as startindice if only one matching indice was found If compval is given: then it must be a function that takes one value and returns a second value2, to be compared with the input value, e.g.: compvalue = function( value ) return value[1] end If reversed is set to true: then the search assumes that the table is sorted in reverse order (largest value at position 1) note when reversed is given compval must be given as well, it can be nil/_ in this case Return value: on success: a table holding matching indices (e.g. { startindice,endindice } ) on failure: nil local result = table . binsearch ( t , value , compval , reversed ) Parameters : t (table) value (unknown) compval (unknown): Optional . reversed (unknown): Optional . Returns : result (table) table.choice \u2693\ufe0e Returns a random element from the given table. local result = table . choice ( t ) Parameters : t (table) Returns : result (unknown) table.clear \u2693\ufe0e This clears all keys and values from a table, but preserves the allocated array/hash sizes. This is useful when a table, which is linked from multiple places, needs to be cleared and/or when recycling a table for use by the same context. This avoids managing backlinks, saves an allocation and the overhead of incremental array/hash part growth. Please note this function is meant for very specific situations. In most cases it's better to replace the (usually single) link with a new table and let the garbage collection do its work. table . clear ( table ) Parameters : table (table): The table to clear. table.copy \u2693\ufe0e Shallowly copies a table's contents to a destination table. If no destination table is provided, a new table will be created. Note that sub tables will not be copied, and will still refer to the same data. local result = table . copy ( from , to ) Parameters : from (table) to (table): Optional . Returns : result (table) table.copymissing \u2693\ufe0e Copies a table's contents from one table to another, including subtitles. If a non-table key is already defined, it will not be overwritten. Metatables are not copied. table . copymissing ( to , from ) Parameters : to (table) from (table) table.deepcopy \u2693\ufe0e Copies a table's contents. All subtables will also be copied, as will any metatable. local result = table . deepcopy ( t ) Parameters : t (table) Returns : result (table) table.empty \u2693\ufe0e Returns true if the table is empty, otherwise, it returns false. local result = table . empty ( t , deepCheck ) Parameters : t (table) deepCheck (boolean): Default : false . If true, subtables will also be checked to see if they are empty. Returns : result (boolean) table.find \u2693\ufe0e Returns the key for a given value, or nil if the table does not contain the value. local result = table . find ( t , value ) Parameters : t (table) value (unknown) Returns : result (unknown) table.get \u2693\ufe0e Gets a value in a table. If the key doesn't exist in the table, a specified default value will be returned instead. local result = table . get ( t , key , defaultValue ) Parameters : t (table) key (any): The key to use to access the table. defaultValue (any): The default value if the key didn't exist in the table. Returns : result (any) table.getset \u2693\ufe0e Gets a value in a table. If the key doesn't exist in the table, a specified default value will be set in the table and returned instead. local result = table . getset ( t , key , defaultValue ) Parameters : t (table) key (any): The key to use to access the table. defaultValue (any): The default value to set and return if the key didn't exist in the table. Returns : result (any) table.invert \u2693\ufe0e Returns a copy of t with the keys and values flipped. local result = table . invert ( t ) Parameters : t (table) Returns : result (table) table.keys \u2693\ufe0e Returns an array-style table of all keys in the given table, t. Optionally, it will sort the returned table. local keys = table . keys ( t , sort ) Parameters : t (table): The table to get keys for. sort (boolean, function, nil): Optional . If true, the returned table will be sorted. If a function is passed, the table will be sorted using the given function. Returns : keys (table): An array of all table keys. table.new \u2693\ufe0e This creates a pre-sized table. This is useful for big tables if the final table size is known and automatic table resizing is too expensive. local newTable = table . new ( narray , nhash ) Parameters : narray (number): A hint for how many elements the table will have as a sequence. nhash (number): A hint for how many other elements the table will have. Returns : newTable (table): The pre-sized table that was created. table.removevalue \u2693\ufe0e Removes a value from a given table. Returns true if the value was successfully removed. local result = table . removevalue ( t , value ) Parameters : t (table) value (unknown) Returns : result (boolean) table.size \u2693\ufe0e Returns the number of elements inside the table. Unlike the length operator (#) this will work with any table. local result = table . size ( t ) Parameters : t (table) Returns : result (number) table.traverse \u2693\ufe0e This function is used to iterate over a graph-like table. You can specify the key of the subtable that contains the child nodes. Each \"node\" is an object with a children table of other \"nodes\", each of which might have their own children. For example, a sceneNode is made up of niNodes, and each niNodes can have a list of niNode children. This is best used for recursive data structures like UI elements and sceneNodes etc. local result = table . traverse ( t , k ) Parameters : t (table): A table to transverse. k (string): Default : children . The subtable key. Returns : result (iterator) Example: Iterate over all scene nodes attached to player. In the example below, function onLoaded() will be called when the game has been successfully loaded. For each scene nodes attached to the player, its type (node.RTTI.name) and name (node.name), will be printed to MWSE.log. local function onLoaded () mwse . log ( \"Player's scene graph:\" ) for node in table . traverse ({ tes3 . player . sceneNode }) do mwse . log ( \"%s : %s\" , node . RTTI . name , node . name ) end end event . register ( tes3 . event . loaded , onLoaded ) table.values \u2693\ufe0e Returns an array-style table of all values in the given table, t. Optionally, it will sort the returned table. local values = table . values ( t , sort ) Parameters : t (table): The table to get values for. sort (boolean, function, nil): Optional . If true, the returned table will be sorted. If a function is passed, the table will be sorted using the given function. Returns : values (table): An array of all table values. table.wrapindex \u2693\ufe0e This function is used for calculating relative access into an array, such that accessing an element one past the array's size will instead return the position of the first element. Providing an index one before the start (note that this is 0 , not -1 ) will instead give the index to the last element in the array. local index = table . wrapindex ( t , index ) Parameters : t (table): The table whose size will determine the new wrapped index. index (number): The initial provided index. If this is before or after the array, it will be cycled around. Returns : index (number)","title":"Table"},{"location":"apis/table/#table","text":"This library provides generic functions for table manipulation. It provides all its functions inside the table table.","title":"table"},{"location":"apis/table/#functions","text":"","title":"Functions"},{"location":"apis/table/#tablebininsert","text":"Inserts a given value through BinaryInsert into the table sorted by [, comp]. If 'comp' is given, then it must be a function that receives two table elements, and returns true when the first is less than the second, e.g. comp = function(a, b) return a > b end, will give a sorted table, with the biggest value on position 1. [, comp] behaves as in table.sort(table, value [, comp]) returns the index where 'value' was inserted local result = table . bininsert ( t , value , comp ) Parameters : t (table) value (unknown) comp (unknown): Optional . Returns : result (number)","title":"table.bininsert"},{"location":"apis/table/#tablebinsearch","text":"Performs a binary search for a given value. If the value is found: It returns a table holding all the mathing indices (e.g. { startindice,endindice } ) endindice may be the same as startindice if only one matching indice was found If compval is given: then it must be a function that takes one value and returns a second value2, to be compared with the input value, e.g.: compvalue = function( value ) return value[1] end If reversed is set to true: then the search assumes that the table is sorted in reverse order (largest value at position 1) note when reversed is given compval must be given as well, it can be nil/_ in this case Return value: on success: a table holding matching indices (e.g. { startindice,endindice } ) on failure: nil local result = table . binsearch ( t , value , compval , reversed ) Parameters : t (table) value (unknown) compval (unknown): Optional . reversed (unknown): Optional . Returns : result (table)","title":"table.binsearch"},{"location":"apis/table/#tablechoice","text":"Returns a random element from the given table. local result = table . choice ( t ) Parameters : t (table) Returns : result (unknown)","title":"table.choice"},{"location":"apis/table/#tableclear","text":"This clears all keys and values from a table, but preserves the allocated array/hash sizes. This is useful when a table, which is linked from multiple places, needs to be cleared and/or when recycling a table for use by the same context. This avoids managing backlinks, saves an allocation and the overhead of incremental array/hash part growth. Please note this function is meant for very specific situations. In most cases it's better to replace the (usually single) link with a new table and let the garbage collection do its work. table . clear ( table ) Parameters : table (table): The table to clear.","title":"table.clear"},{"location":"apis/table/#tablecopy","text":"Shallowly copies a table's contents to a destination table. If no destination table is provided, a new table will be created. Note that sub tables will not be copied, and will still refer to the same data. local result = table . copy ( from , to ) Parameters : from (table) to (table): Optional . Returns : result (table)","title":"table.copy"},{"location":"apis/table/#tablecopymissing","text":"Copies a table's contents from one table to another, including subtitles. If a non-table key is already defined, it will not be overwritten. Metatables are not copied. table . copymissing ( to , from ) Parameters : to (table) from (table)","title":"table.copymissing"},{"location":"apis/table/#tabledeepcopy","text":"Copies a table's contents. All subtables will also be copied, as will any metatable. local result = table . deepcopy ( t ) Parameters : t (table) Returns : result (table)","title":"table.deepcopy"},{"location":"apis/table/#tableempty","text":"Returns true if the table is empty, otherwise, it returns false. local result = table . empty ( t , deepCheck ) Parameters : t (table) deepCheck (boolean): Default : false . If true, subtables will also be checked to see if they are empty. Returns : result (boolean)","title":"table.empty"},{"location":"apis/table/#tablefind","text":"Returns the key for a given value, or nil if the table does not contain the value. local result = table . find ( t , value ) Parameters : t (table) value (unknown) Returns : result (unknown)","title":"table.find"},{"location":"apis/table/#tableget","text":"Gets a value in a table. If the key doesn't exist in the table, a specified default value will be returned instead. local result = table . get ( t , key , defaultValue ) Parameters : t (table) key (any): The key to use to access the table. defaultValue (any): The default value if the key didn't exist in the table. Returns : result (any)","title":"table.get"},{"location":"apis/table/#tablegetset","text":"Gets a value in a table. If the key doesn't exist in the table, a specified default value will be set in the table and returned instead. local result = table . getset ( t , key , defaultValue ) Parameters : t (table) key (any): The key to use to access the table. defaultValue (any): The default value to set and return if the key didn't exist in the table. Returns : result (any)","title":"table.getset"},{"location":"apis/table/#tableinvert","text":"Returns a copy of t with the keys and values flipped. local result = table . invert ( t ) Parameters : t (table) Returns : result (table)","title":"table.invert"},{"location":"apis/table/#tablekeys","text":"Returns an array-style table of all keys in the given table, t. Optionally, it will sort the returned table. local keys = table . keys ( t , sort ) Parameters : t (table): The table to get keys for. sort (boolean, function, nil): Optional . If true, the returned table will be sorted. If a function is passed, the table will be sorted using the given function. Returns : keys (table): An array of all table keys.","title":"table.keys"},{"location":"apis/table/#tablenew","text":"This creates a pre-sized table. This is useful for big tables if the final table size is known and automatic table resizing is too expensive. local newTable = table . new ( narray , nhash ) Parameters : narray (number): A hint for how many elements the table will have as a sequence. nhash (number): A hint for how many other elements the table will have. Returns : newTable (table): The pre-sized table that was created.","title":"table.new"},{"location":"apis/table/#tableremovevalue","text":"Removes a value from a given table. Returns true if the value was successfully removed. local result = table . removevalue ( t , value ) Parameters : t (table) value (unknown) Returns : result (boolean)","title":"table.removevalue"},{"location":"apis/table/#tablesize","text":"Returns the number of elements inside the table. Unlike the length operator (#) this will work with any table. local result = table . size ( t ) Parameters : t (table) Returns : result (number)","title":"table.size"},{"location":"apis/table/#tabletraverse","text":"This function is used to iterate over a graph-like table. You can specify the key of the subtable that contains the child nodes. Each \"node\" is an object with a children table of other \"nodes\", each of which might have their own children. For example, a sceneNode is made up of niNodes, and each niNodes can have a list of niNode children. This is best used for recursive data structures like UI elements and sceneNodes etc. local result = table . traverse ( t , k ) Parameters : t (table): A table to transverse. k (string): Default : children . The subtable key. Returns : result (iterator) Example: Iterate over all scene nodes attached to player. In the example below, function onLoaded() will be called when the game has been successfully loaded. For each scene nodes attached to the player, its type (node.RTTI.name) and name (node.name), will be printed to MWSE.log. local function onLoaded () mwse . log ( \"Player's scene graph:\" ) for node in table . traverse ({ tes3 . player . sceneNode }) do mwse . log ( \"%s : %s\" , node . RTTI . name , node . name ) end end event . register ( tes3 . event . loaded , onLoaded )","title":"table.traverse"},{"location":"apis/table/#tablevalues","text":"Returns an array-style table of all values in the given table, t. Optionally, it will sort the returned table. local values = table . values ( t , sort ) Parameters : t (table): The table to get values for. sort (boolean, function, nil): Optional . If true, the returned table will be sorted. If a function is passed, the table will be sorted using the given function. Returns : values (table): An array of all table values.","title":"table.values"},{"location":"apis/table/#tablewrapindex","text":"This function is used for calculating relative access into an array, such that accessing an element one past the array's size will instead return the position of the first element. Providing an index one before the start (note that this is 0 , not -1 ) will instead give the index to the last element in the array. local index = table . wrapindex ( t , index ) Parameters : t (table): The table whose size will determine the new wrapped index. index (number): The initial provided index. If this is before or after the array, it will be cycled around. Returns : index (number)","title":"table.wrapindex"},{"location":"apis/tes3/","text":"tes3 \u2693\ufe0e The tes3 library provides the majority of the functions for interacting with the game system. Properties \u2693\ufe0e tes3.bsaLoader \u2693\ufe0e One of the core game objects, responsible for loaded BSA files. Returns : result ( tes3bsaLoader ) tes3.dataHandler \u2693\ufe0e One of the core game objects. Returns : result ( tes3dataHandler ) tes3.game \u2693\ufe0e One of the core game objects. Returns : result ( tes3game ) tes3.installDirectory \u2693\ufe0e The currently executed root Morrowind installation path. Returns : result (string) tes3.magicSchoolSkill \u2693\ufe0e This table is used to convert numerical magic school IDs to their respective skill IDs. These constants will return their respective tes3.skill constants. Returns : result (number) Example: Convert magic school from event data to a respective skill The example below gives the player 100 experience for failing to cast a spell. Here we can see how tes3.magicSchoolSkill is used. local function OnSpellFailed ( e ) local skill = tes3 . magicSchoolSkill [ e . expGainSchool ] -- Note: e.expGainSchool is a value in tes3.magicSchool constants table tes3 . mobilePlayer : exerciseSkill ( skill , 100 ) end event . register ( tes3 . event . spellCastedFailure , OnSpellFailed ) tes3.mobilePlayer \u2693\ufe0e The player's mobile actor. Returns : result ( tes3mobilePlayer ) tes3.player \u2693\ufe0e A reference to the player. Returns : result ( tes3reference ) tes3.player1stPerson \u2693\ufe0e A reference used for the player's first person hands. Returns : result ( tes3reference ) tes3.worldController \u2693\ufe0e One of the core game objects. Returns : result ( tes3worldController ) Functions \u2693\ufe0e tes3.addArmorSlot \u2693\ufe0e Registers a new armor slot. Adds a new place for armor pieces with a matching slot number to equip to. local wasAdded = tes3 . addArmorSlot ({ slot = ..., name = ..., weight = ..., scalar = ... }) Parameters : params (table) slot (number): Armor slot number. A number greater than 10 to configure a slot for. name (string) weight (number): Default : 0 . A stand-in for the armor base weight value, typically controlled by a GMST (e.g. iHelmWeight). scalar (number): Default : 0.1 . A multiplier with range 0.0-1.0 that controls how much of an item's armor value applies to a character's overall armor rating. For comparison, standard chest armor uses 0.3, helmets, greaves and pauldrons use 0.1, and gauntlets use 0.05. Returns : wasAdded (boolean) tes3.addClothingSlot \u2693\ufe0e Registers a new clothing slot. Adds a new place for clothing pieces with a matching slot number to equip to. tes3 . addClothingSlot ({ slot = ..., name = ... }) Parameters : params (table) slot (number): Clothing slot number. A number greater than 9 to configure a slot for. name (string) tes3.addItem \u2693\ufe0e Adds an item to a given reference's inventory or mobile's inventory. local addedCount = tes3 . addItem ({ reference = ..., item = ..., itemData = ..., soul = ..., count = ..., playSound = ..., showMessage = ..., limit = ..., reevaluateEquipment = ..., equipProjectiles = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to give items to. item ( tes3item , tes3leveledItem , string): The item to add. If a leveled item is passed, it will be resolved and added. itemData ( tes3itemData ): Optional . The item data for the item. soul ( tes3creature , tes3npc ): Optional . For creating filled soul gems. count (number): Default : 1 . The maximum number of items to add. playSound (boolean): Default : true . If false , the up/down sound for the item won't be played. This only applies if reference is the player. showMessage (boolean): Default : false . If true , a message box notifying the player will be shown. This only applies if reference is the player. limit (boolean): Default : false . If false , items can be placed into containers that shouldn't normally be allowed. This includes organic containers, and containers that are full. reevaluateEquipment (boolean): Default : true . If true , and the item added is armor, clothing, or a weapon, the actor will reevaluate its equipment choices to see if the new item is worth equipping. This does not affect the player. equipProjectiles (boolean): Default : true . If true , and the reference has the same projectile already equipped, the stacks will be merged. This will only work if the GUI is updated. updateGUI (boolean): Default : true . If false , the function won't manually resync the player's GUI state. This can result in some optimizations, though tes3ui.forcePlayerInventoryUpdate() must manually be called after all inventory updates are finished. Returns : addedCount (number) tes3.addItemData \u2693\ufe0e Creates an item data if there is room for a new stack in a given inventory. This can be then used to add custom user data or adjust an item's condition. This will return nil if no item data could be allocated for the item -- for example if the reference doesn't have the item in their inventory or each item of that type already has item data. local createdData = tes3 . addItemData ({ to = ..., item = ..., updateGUI = ... }) Parameters : params (table) to ( tes3reference , tes3mobileActor , string): The reference or mobile whose inventory will be modified. item ( tes3item , string): The item to create item data for. updateGUI (boolean): Default : true . If false, the player or contents menu won't be updated. Returns : createdData ( tes3itemData ) tes3.addJournalEntry \u2693\ufe0e This function creates a new journal entry. It can be called once the world controller is loaded. tes3 . addJournalEntry ({ text = ..., showMessage = ... }) Parameters : params (table) text (string): The text of the new Journal entry. showMessage (boolean): Default : true . If this parameter is true, a \"Your journal has been updated\" message will be displayed. tes3.addMagicEffect \u2693\ufe0e This function creates a new custom magic effect. The effect can be scripted through lua. This function should be used inside magicEffectsResolved event callback. local effect = tes3 . addMagicEffect ({ id = ..., name = ..., baseCost = ..., school = ..., size = ..., sizeCap = ..., speed = ..., description = ..., lighting = ..., icon = ..., particleTexture = ..., castSound = ..., boltSound = ..., hitSound = ..., areaSound = ..., castVFX = ..., boltVFX = ..., hitVFX = ..., areaVFX = ..., allowEnchanting = ..., allowSpellmaking = ..., appliesOnce = ..., canCastSelf = ..., canCastTarget = ..., canCastTouch = ..., casterLinked = ..., hasContinuousVFX = ..., hasNoDuration = ..., hasNoMagnitude = ..., illegalDaedra = ..., isHarmful = ..., nonRecastable = ..., targetsAttributes = ..., targetsSkills = ..., unreflectable = ..., usesNegativeLighting = ..., onTick = ..., onCollision = ... }) Parameters : params (table) id (number): Id of the new effect. Maps to newly claimed tes3.effect constants with tes3.claimSpellEffectId() . If the effect of this id already exists, an error will be thrown. name (string): Default : Unnamed Effect . Name of the effect. baseCost (number): Default : 1 . Base magicka cost for the effect. school (integer): Default : tes3.magicSchool.alteration . The magic school the new effect will be assigned to. Maps to tes3.magicSchool constants. size (number): Default : 1 . Controls how much the visual effect scales with its magnitude. sizeCap (number): Default : 1 . The maximum possible size of the projectile. speed (number): Default : 1 . description (string): Default : No description available. . Description for the effect. lighting (table): Optional . x (number): Default : 1 . Value of red color channel. In range of 0 - 1. y (number): Default : 1 . Value of green color channel. In range of 0 - 1. z (number): Default : 1 . Value of blue color channel. In range of 0 - 1. icon (string): Path to the effect icon. Must be a string no longer than 31 characters long. Use double as path separator. particleTexture (string): Path to the particle texture to use for the effect. Must be a string no longer than 31 characters long. castSound (string): The sound ID which will be played on casting a spell with this effect. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used. boltSound (string): The sound ID which will be played when a spell with this effect is in flight. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used. hitSound (string): The sound ID which will be played when a spell with this effect hits something. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used. areaSound (string): The sound ID which will be played on area of effect impact. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used. castVFX ( tes3physicalObject , string): Optional . The visual played when a spell with this effect is cast. boltVFX ( tes3physicalObject , string): Optional . The visual played when a spell with this effect is in flight. hitVFX ( tes3physicalObject , string): Optional . The visual played when a spell with this effect hits something. areaVFX ( tes3physicalObject , string): Optional . The visual played when a spell with this effect, with area of effect hits something. allowEnchanting (boolean): Default : true . A flag which controls whether this effect can be used in a custom enchantment. allowSpellmaking (boolean): Default : true . A flag which controls whether this effect can be used in a custom spell. appliesOnce (boolean): Default : true . A flag which controls whether this effect applies once or is a ticking effect. canCastSelf (boolean): Default : true . A flag which controls whether this effect can be used with cast on self range. canCastTarget (boolean): Default : true . A flag which controls whether this effect can be used with cast on target range. canCastTouch (boolean): Default : true . A flag which controls whether this effect can be used with cast on touch range. casterLinked (boolean): Default : true . Access to the base flag that determines if this effect must end if caster is dead, or not an NPC/creature. Not allowed in container or door trap spells. Note that this property is hidden in the Construction Set. hasContinuousVFX (boolean): Default : true . A flag which controls whether the effect's visual is continuously played during the whole duration of the effect. hasNoDuration (boolean): Default : true . A flag which controls whether this effect doesn't have duration. hasNoMagnitude (boolean): Default : true . A flag which controls whether this effect doesn't have magnitude. illegalDaedra (boolean): Default : true . A flag which controls whether this effect is illegal to use in public, because it summons Daedra. Note: this mechanic is not implemented in the game. Some mods might rely on this parameter. isHarmful (boolean): Default : true . A flag which controls whether this effect is considered harmful and casting it can be considered as an attack. nonRecastable (boolean): Default : true . A flag which controls whether this effect can be recast while it already is in duration. targetsAttributes (boolean): Default : true . A flag which controls whether this effect targets a certain attribute or attributes. targetsSkills (boolean): Default : true . A flag which controls whether this effect targets a certain skill or skills. unreflectable (boolean): Default : true . A flag which controls whether this effect can be reflected. usesNegativeLighting (boolean): Default : true . A flag which controls whether this effect uses negative lighting. onTick (function): Optional . A function which will be called on each tick of a spell containing this effect. A table tickParams will be passed to the callback function. Note: dt (frame time) scaling is handled automatically. tickParams (table) effectId (number) sourceInstance ( tes3magicSourceInstance ): Access to the magic source of the effect instance. deltaTime (number): The time passed since the last tick of the spell. effectInstance ( tes3magicEffectInstance ): Access to the magic effect instance. effectIndex (number): The index of the effect in the spell. In addition, a function registered as onTick can also call the following methods: trigger( triggerParams ): Allows the effect to run through the normal spell event system. Parameters: triggerParams (table) negateOnExpiry (boolean): Optional. Default: true If this flag is true , the effect will be negated on expiry. isUncapped (boolean): Optional. attribute (number): Optional. Default: tes3.effectAttribute.nonResistable The attribute used in resistance calculations agains this effect. Maps to values in tes3.effectAttribute namespace. type (number): Optional. Default: tes3.effectEventType.boolean . This flag controls how the effect behaves. For example, tes3.effectEventType.modStatistic will make the effect work as calling tes3.modStatistic . Maps to values in tes3.effectEventType namespace. value (number): Optional. Default: 0 . The variable this effect changes. resistanceCheck(resistParams) (function): Optional. The function passed as resistanceCheck will be used on any of the game's spell resistance checks. For example, the only effect in vanilla Morrowind that implements this function is Water Walking. It disallows using a spell with Water Walking when the player is deep underwater, by setting it as expired. So, returning true from this function will set your effect to expired, and depending on your trigger code may stop processing. The function passed here must returns boolean values. Parameters resistParams (table) sourceInstance ( tes3magicSourceInstance ): Access to the magic source of the effect instance. effectInstance ( tes3magicEffectInstance ): Access to the magic effect instance. effectIndex (number): The index of the effect in the spell. triggerBoundWeapon( id ): Performs vanilla weapon summoning logic. It will create a summoned version of the weapon with provided ID. Parameters: id (string): The ID of the weapon object to summon. triggerBoundArmor( params ): Performs vanilla armor summoning logic. It can summon one or two armor objects with provided ID(s). Parameters: params (table) id (string): The ID of the armor object to summon. id2 (string): Optional. The ID of the additional armor object to summon. triggerSummon( id ): Performs vanilla creature summoning logic. It will create a summoned version of a creature with provided ID. Parameters: id (string): The ID of the creature object to summon. onCollision (function): Optional . A function which will be called when a spell containing this spell effect collides with something. Returns : effect ( tes3magicEffect ) Example: Fire Damage effect An implementation of the vanilla Fire Damage effect. Also, three spells are constructed with newly created magic effect, which are added to the player. You can test this in-game. -- Claiming an ID is needed before actually -- creating an effect with that ID tes3 . claimSpellEffectId ( \"customFireDmg\" , 220 ) local function onFireDmgTick ( tickParams ) -- This will print current health for any actor our spell hit tes3 . messageBox ( \"%s, health: %s\" , tickParams . effectInstance . target . object . id , tickParams . effectInstance . target . mobile . health . current ) tickParams : trigger ({ type = tes3 . effectEventType . modStatistic , -- The resistance attribute against Fire Damage should be Resist Fire attribute = tes3 . effectAttribute . resistFire , value = tickParams . effectInstance . target . mobile . health , negateOnExpiry = false , isUncapped = true , }) end event . register ( tes3 . event . magicEffectsResolved , function () tes3 . addMagicEffect ({ -- The ID we claimed before is now available in tes3.effect namespace id = tes3 . effect . customFireDmg , -- This information if just copied from the Construction Set -- name = \"Fire Damage\" , description = ( \"This spell effect produces a manifestation of elemental fire. Upon \" .. \"contact with an object, this manifestation explodes, causing damage.\" ), baseCost = 5 , school = tes3 . magicSchool . destruction , size = 1.25 , sizeCap = 50 , speed = 1 , lighting = { x = 0.99 , y = 0.26 , z = 0.53 }, usesNegativeLighting = false , icon = \"s \\\\ Tx_S_fire_damage.tga\" , particleTexture = \"vfx_firealpha00A.tga\" , castSound = \"destruction cast\" , castVFX = \"VFX_DestructCast\" , boltSound = \"destruction bolt\" , boltVFX = \"VFX_DestructBolt\" , hitSound = \"destruction hit\" , hitVFX = \"VFX_DestructHit\" , areaSound = \"destruction area\" , areaVFX = \"VFX_DestructArea\" , -- -- appliesOnce = false , hasNoDuration = false , hasNoMagnitude = false , illegalDaedra = false , unreflectable = false , casterLinked = false , nonRecastable = false , targetsAttributes = false , targetsSkills = false , onTick = onFireDmgTick , }) end ) event . register ( tes3 . event . loaded , function () local spell1 = tes3 . createObject ({ objectType = tes3 . objectType . spell }) tes3 . setSourceless ( spell1 ) spell1 . name = \"TEST SPELL - self\" spell1 . magickaCost = 1 local effect = spell1 . effects [ 1 ] effect . id = tes3 . effect . customFireDmg effect . rangeType = tes3 . effectRange . self effect . min = 10 effect . max = 10 effect . duration = 10 effect . radius = 0 effect . skill = - 1 effect . attribute = - 1 local spell2 = tes3 . createObject ({ objectType = tes3 . objectType . spell }) tes3 . setSourceless ( spell2 ) spell2 . name = \"TEST SPELL - target\" spell2 . magickaCost = 1 local effect = spell2 . effects [ 1 ] effect . id = tes3 . effect . customFireDmg effect . rangeType = tes3 . effectRange . target effect . min = 3 effect . max = 3 effect . duration = 10 effect . radius = 15 effect . skill = - 1 effect . attribute = - 1 local spell3 = tes3 . createObject ({ objectType = tes3 . objectType . spell }) tes3 . setSourceless ( spell3 ) spell3 . name = \"TEST SPELL - touch\" spell3 . magickaCost = 1 local effect = spell3 . effects [ 1 ] effect . id = tes3 . effect . customFireDmg effect . rangeType = tes3 . effectRange . touch effect . min = 3 effect . max = 3 effect . duration = 10 effect . radius = 0 effect . skill = - 1 effect . attribute = - 1 tes3 . addSpell ({ reference = tes3 . mobilePlayer , spell = spell1 }) tes3 . addSpell ({ reference = tes3 . mobilePlayer , spell = spell2 }) tes3 . addSpell ({ reference = tes3 . mobilePlayer , spell = spell3 }) end ) tes3.addSoulGem \u2693\ufe0e Causes a misc item to be recognized as a soul gem, so that it can be used for soul trapping. local wasAdded = tes3 . addSoulGem ({ item = ... }) Parameters : params (table) item ( tes3misc , string): The item to recognize as a soul gem. Returns : wasAdded (boolean) Example: Make the Dwemer Tube a Soul gem. Also, make sure Fargoth's soul alway ends up in it if the player has one avilable. local function onInitialized () tes3 . addSoulGem ({ item = \"misc_dwrv_artifact60\" }) end event . register ( tes3 . event . initialized , onInitialized ) local function onFilterSoulGemTarget ( e ) if ( e . reference . baseObject . id : lower () == \"fargoth\" ) then return e . soulGem . id == \"misc_dwrv_artifact60\" end end event . register ( tes3 . event . filterSoulGemTarget , onFilterSoulGemTarget ) -- calcSoulValue event allows assigning a new soul value to creatures -- If the event was triggered for an NPC, it allows assigning a value -- thus allowing soul-trapping the actor. local function calcSoulValueCallback ( e ) if ( e . actor . id : lower () == \"fargoth\" ) then e . value = 69 mwse . log ( \"Getting Fargoth's value.\" ) return end end event . register ( tes3 . event . calcSoulValue , calcSoulValueCallback ) tes3.addSpell \u2693\ufe0e Adds a spell to an actor's spell list. If the spell is passive, the effects will be applied. local wasAdded = tes3 . addSpell ({ reference = ..., actor = ..., spell = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to give the spell to. To manipulate an actor without specifying any particular reference, use actor instead. actor ( tes3actor , string): Who to give the spell to. Providing a base actor can be done before a save has been loaded, but may not correctly update effects for instanced versions of that actor in an active save. spell ( tes3spell , string): The spell to add. updateGUI (boolean): Default : true . If true, the GUI will be updated respecting the adding of the spell. This can be useful to disable when batch-adding many spells. The batch should be ended with tes3.updateMagicGUI to reflect the changes. Returns : wasAdded (boolean): True if the spell was successfully added. This can be false if the actor's race or birthsign already contains the spell. tes3.addTopic \u2693\ufe0e Adds a topic to the valid topic list for the player. This doesn't create a dynamic new topic. local wasAdded = tes3 . addTopic ({ topic = ..., updateGUI = ... }) Parameters : params (table) topic ( tes3dialogue , string): The topic to add updateGUI (boolean): Default : true . If true, the GUI will be updated respecting the adding of the topic. Returns : wasAdded (boolean): True if the topic was successfully added. This can be false if the topic already existed in the player's list. tes3.adjustSoundVolume \u2693\ufe0e Changes the volume of a sound that is playing on a given reference. tes3 . adjustSoundVolume ({ sound = ..., reference = ..., mixChannel = ..., volume = ... }) Parameters : params (table) sound ( tes3sound , string): The sound object, or id of the sound to look for. reference ( tes3reference , tes3mobileActor , string): The reference to attach the sound to. mixChannel (integer): Default : tes3.soundMix.effects . The channel to base volume off of. Maps to tes3.soundMix constants. volume (number): Default : 1.0 . A value between 0.0 and 1.0 to scale the volume off of. tes3.advanceTime \u2693\ufe0e Advances the game time. Can be used to simulate player resting. local hoursPassed = tes3 . advanceTime ({ hours = ..., resting = ..., updateEnvironment = ... }) Parameters : params (table) hours (number): How many hours to progress. resting (boolean): Default : false . Should advancing time count as resting? If set to true invokes usual sleeping mechanics: health, fatigue and magicka restoration, and possible rest interruption. The length of the rest will be equal to hours parameter, rounded down to nearest natural number. updateEnvironment (boolean): Default : true . Controls if the weather system is updated for each hour passed. Returns : hoursPassed (number) tes3.applyMagicSource \u2693\ufe0e local instance = tes3 . applyMagicSource ({ reference = ..., source = ..., name = ..., effects = ..., createCopy = ..., fromStack = ..., castChance = ..., target = ..., bypassResistances = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): A reference on which the magic source will be applied. source ( tes3object ): Optional . A magic source to apply. name (string): Optional . While optional for other uses, if applying alchemy as a source, you must specify a name for the magic source. effects (table): Optional . A table of custom effects to apply as a potion. Maximal number of effects is 8. id (boolean): Default : -1 . ID of the effect. skill (number): Default : -1 . If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Skill, a skill should be provided. This also applies to any custom spell effect which operates on a certain skill. This value maps to tes3.skill constants. attribute (number): Default : -1 . If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Attribute, an attribute should be provided. This also applies to any custom spell effect which operates on a certain attribute. This value maps to tes3.attribute constants. rangeType (number): Default : tes3.effectRange.self . The range of the effect. This maps to tes3.effectRange constants. radius (number): Default : 0 . The radius of the effect. duration (number): Default : 0 . Number of seconds the effect is going to be active. min (number): Default : 0 . The minimal magintude of the effect per tick. max (number): Default : 0 . The maximal magnitude of the effect per tick. createCopy (boolean): Default : true . This parameter controls whether the function will return the original magic source or a copy of the magic source. This parameter is only used if source is alchemy. fromStack ( tes3equipmentStack ): Optional . The piece of equipment this magic source is coming from. The fromStack has to be an already equipped item from tes3actor.equipment. This will probably change in the future. castChance (number): Optional . This parameter allows overriding the casting chance of the magic source. target ( tes3reference , tes3mobileActor , string): Optional . The target of the magic. bypassResistances (boolean): Default : false . Is this effect going to bypass magic resistance? Returns : instance ( tes3magicSourceInstance ) tes3.applyTextDefines \u2693\ufe0e Returns a string with all the text defines replaced in the input string. This can be used to replicate the behavior of book and dialogue text. local result = tes3 . applyTextDefines ({ text = ..., actor = ... }) Parameters : params (table) text (string): The input string to do text replacements for. actor ( tes3actor ): The actor to use for replacements like %Name and %Faction . Returns : result (string) tes3.calculateChargeUse \u2693\ufe0e Calculates the actual charge use of an enchantment by a mobile actor, after skills are applied. Invokes the enchantChargeUse event to account for modded charge usage. Takes into account the MCP charge use rebalance patch, if activated. local chargeUse = tes3 . calculateChargeUse ({ mobile = ..., enchantment = ... }) Parameters : params (table) mobile ( tes3mobileActor ): The mobile actor that would be casting the enchantment. enchantment ( tes3enchantment ): The enchantment to check. Returns : chargeUse (number): Actual charge use. Example: How to check the charge use of the player's currently selected enchantment local ench = tes3 . mobilePlayer . currentSpell local charge = tes3 . calculateChargeUse { mobile = tes3 . mobilePlayer , enchantment = ench } tes3 . messageBox { message = string.format ( \"%s uses %d charge\" , ench . id , charge ) } tes3.calculatePrice \u2693\ufe0e Calculates a price, given a merchant and associated trading data. This is useful beyond accessing the object's .value field in that it raises the appropriate events to let other mods modify the values. local price = tes3 . calculatePrice ({ object = ..., basePrice = ..., buying = ..., selling = ..., merchant = ..., bartering = ..., repairing = ..., training = ..., count = ..., itemData = ..., skill = ... }) Parameters : params (table) object ( tes3object ): Optional . The object to calculate the price for. If not provided, basePrice is required. basePrice (number): Optional . The base price to calculate the end price for. This defaults to the object param's value , if provided. This parameter is required if object is not provided. buying (boolean): Default : true . If true , uses the logic for buying a service/item. This is exclusive with selling . selling (boolean): Default : false . If true , uses the logic for selling an item. This is exclusive with buying . merchant ( tes3mobileActor ): The merchant to use for calculating the price. bartering (boolean): Default : false . If true , a calcBarterPrice or calcRepairPrice event will be triggered. repairing (boolean): Default : false . If true , a calcRepairPrice event will be triggered. training (boolean): Default : false . If true , a calcTrainingPrice event will be triggered, passing the given skill ID. count (number): Default : 1 . If bartering , the count passed to the calcBarterPrice event. itemData ( tes3itemData ): Optional . If bartering or repairing , the item data passed to the calcBarterPrice or calcRepairPrice event. skill (number): If training , the skill ID passed to the calcTrainingPrice event. Maps to value in tes3.skill table. Returns : price (number): The calculated price, filtered by events. tes3.canCastSpells \u2693\ufe0e Returns true if the target actor can cast spells, otherwise returns false . local result = tes3 . canCastSpells ({ target = ... }) Parameters : params (table) target ( tes3reference , tes3mobileActor , tes3actor ): The actor to check. Returns : result (boolean) tes3.cancelAnimationLoop \u2693\ufe0e Signals looping animations on the actor to stop looping and play to the end. The animation will continue, playing past the loop point until the end frame. Useful for exiting looping animations cleanly. tes3 . cancelAnimationLoop ({ reference = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference to the actor. tes3.canRest \u2693\ufe0e This function returns true if player can rest. local canRest = tes3 . canRest ({ checkForEnemies = ..., checkForSolidGround = ..., showMessage = ... }) Parameters : params (table) checkForEnemies (boolean): Default : true . Perform a check whether there are enemies nearby before opening rest menu. If there are, false is returned. checkForSolidGround (boolean): Default : true . Perform a check if the player is underwater. If underwater, false is returned. showMessage (boolean): Default : false . If true, a messagebox will be shown if the player can't rest because some condition isn't met. Returns : canRest (boolean) tes3.cast \u2693\ufe0e Casts a spell from a given reference to a target reference. Touch effects will hit the target at any range, while target effects will create a projectile. By default, the spell always casts successfully and does not consume magicka. By default, an actor casting will stop and perform its cast animation, but the 'instant' flag can start the cast instantly and allows more control over the spell for NPCs. If the caster is the player, the target parameter is optional; without a target, the player's touch effects will only hit targets in front of them, and target effects will create a projectile in the direction the player is facing. local success = tes3 . cast ({ reference = ..., target = ..., spell = ..., instant = ..., alwaysSucceeds = ..., bypassResistances = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The caster reference. target ( tes3reference , tes3mobileActor , string): The target reference. Optional only if the caster is the player. spell ( tes3spell , string): The spell the caster uses. instant (boolean): Default : false . If true , the spell is cast instantly. No animation is performed. alwaysSucceeds (boolean): Default : true . If true , the spell cannot fail and does not consume magicka. If false , it is cast using the actor's spell skill, and requires and takes enough magicka to cast. For NPCs, this only applies if instant is true . bypassResistances (boolean): Default : false . If true , the spell will bypass the target's resistances. For NPCs, this only applies if instant is true . Returns : success (boolean): Returns true if the spell was cast successfully. Returns false if instant is false and the player is trying to cast the spell, while being unable to cast spells under normal circumstances. Example: This is an example of how to use tes3.cast instead of mwscript.explodeSpell -- The following code can be tested in-game by pressing Alt + l or Alt + k event . register ( tes3 . event . keyDown , function ( e ) if e . isAltDown then tes3 . messageBox ( \"mwscript.explodeSpell\" ) mwscript . explodeSpell ({ reference = tes3 . game . playerTarget , spell = \"proj_trap_spell\" }) end end , { filter = tes3 . scanCode . l }) event . register ( tes3 . event . keyDown , function ( e ) if e . isAltDown then tes3 . messageBox ( \"tes3.cast\" ) -- This will behave the same as will mwscript.explodeSpell() tes3 . cast ({ target = tes3 . game . playerTarget , reference = tes3 . game . playerTarget , spell = \"proj_trap_spell\" , }) end end , { filter = tes3 . scanCode . k }) tes3.checkMerchantOffersService \u2693\ufe0e Checks if a merchant will offer a service to you, including dialogue checks like disposition and faction membership. A specific service can be checked, or if no service is given, a generic dialogue check is made. If the service is refused, the dialogue reply for the refusal may also be returned (it may be nil, as there may not always be a reply available). local offersService , refusalReply = tes3 . checkMerchantOffersService ( reference , service ) Parameters : reference ( tes3reference , tes3mobileActor , string) service (number): Optional . The specific service to check for availability. Maps to values in the tes3.merchantService table. Returns : offersService (boolean) refusalReply ( tes3dialogueInfo ) tes3.checkMerchantTradesItem \u2693\ufe0e Determines if a merchant trades in a given item. local trades = tes3 . checkMerchantTradesItem ({ item = ..., reference = ... }) Parameters : params (table) item ( tes3item , string) reference ( tes3reference , tes3mobileActor , string) Returns : trades (boolean) tes3.claimSpellEffectId \u2693\ufe0e This function is used to claim a unique spell effect name and id. This is needed before actually creating a new effect by calling tes3.addMagicEffect() . A claimed effect id is then available as: tes3.effect.effectName (just like any other spell effect). For examples of this function in practice see tes3.addMagicEffect() example. tes3 . claimSpellEffectId ( name , id ) Parameters : name (string): The name of the new spell effect. Must be unique. An error will be thrown if it's non-unique. id (number): A unique number representing the new spell effect. An error will be thrown if it's non-unique. tes3.clearMarkLocation \u2693\ufe0e This function deletes the player's mark location. tes3 . clearMarkLocation () tes3.closeAlchemyMenu \u2693\ufe0e This function closes the alchemy menu. tes3 . closeAlchemyMenu () tes3.closeContentsMenu \u2693\ufe0e This function closes the contents menu. local wasClosed = tes3 . closeContentsMenu () Returns : wasClosed (boolean): If true, the menu was previously open, and is now closed. tes3.closeDialogueMenu \u2693\ufe0e This function closes the dialogue menu. local wasClosed = tes3 . closeDialogueMenu ({ force = ... }) Parameters : params (table) force (boolean): Default : true . Normally, the menu can't be closed in certain circumstances, such as when the player is making a dialogue choice. If true, these usual restrictions will be ignored. Returns : wasClosed (boolean): If true, the menu was previously open, and is now closed. tes3.closeRepairServiceMenu \u2693\ufe0e This function closes the repair service menu. tes3 . closeRepairServiceMenu () tes3.closeRestMenu \u2693\ufe0e This function closes the resting menu. tes3 . closeRestMenu () tes3.closeSpellmakingMenu \u2693\ufe0e This function closes the spellmaking menu. tes3 . closeSpellmakingMenu () tes3.createObject \u2693\ufe0e Creates an object and returns it. The created object will be part of the saved game. local createdObject = tes3 . createObject ({ id = ..., objectType = ..., getIfExists = ... }) Parameters : params (table) id (string): Optional . The id of the new object. objectType (number): The type of object to create. Maps to values in the tes3.objectType table. Supported object types are: tes3.objectType.activator tes3.objectType.alchemy tes3.objectType.armor tes3.objectType.book tes3.objectType.clothing tes3.objectType.container tes3.objectType.enchantment tes3.objectType.misc tes3.objectType.sound tes3.objectType.spell tes3.objectType.static tes3.objectType.weapon getIfExists (boolean): Default : true . If true , an existing object of the same objectType and id will be returned instead of creating a new one. Returns : createdObject ( tes3activator , tes3alchemy , tes3armor , tes3book , tes3clothing , tes3container , tes3enchantment , tes3misc , tes3sound , tes3spell , tes3static , tes3weapon ) Example: Creates a tes3misc object The example below create a misc item object that could be used to create a placeable reference later on. local miscItemId = \"create_misc_item_id\" local miscItemName = \"create_misc_item_name\" mwse . log ( \"creating a misc item of id %s\" , miscItemId ) -- local miscItem = tes3misc.create( { -- id = miscItemId, -- name = miscItemName -- } ) local miscItem = tes3 . createObject ({ objectType = tes3 . objectType . miscItem , id = miscItemId , name = miscItemName }) if ( miscItem ~= nil ) then mwse . log ( \"misc item created : id is %s\" , miscItemId ) else mwse . log ( \"failed to create a misc item of id %s\" , miscItemId ) return end tes3 . createReference ( { object = miscItem , position = tes3 . getPlayerEyePosition (), orientation = 0 , cell = tes3 . getPlayerCell () } ) mwse . log ( \"created a reference of a misc item of id %s\" , miscItem . id ) Example: Creates a tes3static object The example below create a static object that could be used to create a placeable reference later on. local staticId = \"create_static_id\" mwse . log ( \"creating a static of id %s\" , staticId ) -- local static = tes3static.create( { -- id = staticId, -- mesh = \"d\\\\door_dwrv_main00.nif\" -- } ) local static = tes3 . createObject ( { objectType = tes3 . objectType . static , id = staticId , mesh = [[d\\door_dwrv_main00.nif]] } ) if ( static ~= nil ) then mwse . log ( \"static created : id is %s\" , staticId ) else mwse . log ( \"failed to create a static of id %s\" , staticId ) return end tes3 . createReference ( { object = static , position = tes3 . getPlayerEyePosition (), orientation = 0 , cell = tes3 . getPlayerCell () } ) mwse . log ( \"created a reference of static of id %s\" , static . id ) tes3.createReference \u2693\ufe0e Similar to mwscript's PlaceAtPC or PlaceAtMe, this creates a new reference in the game world. local newReference = tes3 . createReference ({ object = ..., position = ..., orientation = ..., cell = ..., scale = ... }) Parameters : params (table) object ( tes3physicalObject , string): The object to create a reference of. position ( tes3vector3 , table): The location to create the reference at. orientation ( tes3vector3 , table): The new orientation for the created reference. cell ( tes3cell , string, table): Optional . The cell to create the reference in. This is only needed for interior cells. scale (number): Default : 1 . A scale for the reference. Returns : newReference ( tes3reference ) tes3.createVisualEffect \u2693\ufe0e Creates an arbitrary and automatically tracked visual effect. Most VFX assignments are persistent, and only expire when their lifespan ends, an associated reference is destroyed, or a given spell serial is retired. local vfx = tes3 . createVisualEffect ({ object = ..., serial = ..., repeatCount = ..., lifespan = ..., scale = ..., verticalOffset = ..., position = ..., avObject = ..., magicEffectId = ... }) Parameters : params (table) object ( tes3physicalObject , string): Optional . The physical object to use as the VFX. To use an enchantment-style VFX, supply the magicEffectId parameter instead. serial (number): Optional . An associated tes3magicSourceInstance serial. If a serial is assigned to the VFX, the effect expiring will also remove the VFX. This is not used when creating an enchantment-style VFX. repeatCount (number): Optional . A repeat count for the VFX. If provided, the key timing for the associated effect will be used, multiplied by this value, to determine the total lifespan of the VFX. This is not used when creating an enchantment-style VFX. lifespan (number): Optional . The desired lifespan for the VFX. If not provided, the VFX will never die of old age. scale (number): Default : 1 . The scale used to resize the given VFX. The default value will match the size used by most magical effect logic. This is not used when creating an enchantment-style VFX. verticalOffset (number): Default : 0 . This offset will be used to position it above its anchor reference. This is not used when creating an enchantment-style VFX. position ( tes3vector3 , table): Optional . If provided the VFX will be attached relative to a position, and not follow a reference. avObject ( niAVObject ): Optional . magicEffectId (number): Optional . The magic effect ID to use to create an enchantment-style VFX. This will use most of the same VFX logic, but cannot be applied to a position or specific niAVObject. Returns : vfx ( tes3vfx ): A handle to the VFX that was created. This can be passed to tes3.removeVisualEffect to remove it from the reference. tes3.decrementKillCount \u2693\ufe0e Decreases player's kill count of a certain type of actor by one. tes3 . decrementKillCount ({ actor = ... }) Parameters : params (table) actor ( tes3actor , string): The actor (or their ID). tes3.deleteObject \u2693\ufe0e Deletes a game object from the system. This can be dangerous, use with caution. tes3 . deleteObject ( object ) Parameters : object ( tes3object ): The object to delete. tes3.disableKey \u2693\ufe0e Disables the use of a keyboard key. tes3 . disableKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace. tes3.dropItem \u2693\ufe0e Drops one or more items from a reference's inventory onto the ground at their feet. It will unequip the item if it is equipped. The return value will be nil if no matching item was found. local createdReference = tes3 . dropItem ({ reference = ..., item = ..., itemData = ..., matchNoItemData = ..., count = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference whose inventory will be modified. item ( tes3item , string): The item to drop. itemData ( tes3itemData ): Optional . The item data of the specific item to drop. Without this, the first matching item in the inventory will drop. matchNoItemData (boolean): Default : false . If true, matches an item without item data. This can be used when you want to drop an item that isn't equipped (equipped items always have item data). count (number): Default : 1 . The number of items to drop. updateGUI (boolean): Default : true . If false, the player or contents menu won't be updated. Returns : createdReference ( tes3reference ) tes3.enableKey \u2693\ufe0e Enables the use of a keyboard key. tes3 . enableKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace. tes3.fadeIn \u2693\ufe0e Similar to the vanilla FadeIn mwscript command. tes3 . fadeIn ({ fader = ..., duration = ... }) Parameters : params (table): Optional . fader ( tes3fader ): Optional . Defaults to the transition fader. duration (number): Default : 1.0 . Time, in seconds, for the fade. tes3.fadeOut \u2693\ufe0e Similar to the vanilla FadeOut mwscript command. tes3 . fadeOut ({ fader = ..., duration = ... }) Parameters : params (table): Optional . fader ( tes3fader ): Optional . Defaults to the transition fader. duration (number): Default : 1.0 . Time, in seconds, for the fade. tes3.fadeTo \u2693\ufe0e Similar to the vanilla FadeTo mwscript command. tes3 . fadeTo ({ fader = ..., duration = ..., value = ... }) Parameters : params (table): Optional . fader ( tes3fader ): Optional . Defaults to the transition fader. duration (number): Default : 1.0 . Time, in seconds, for the fade. value (number): Default : 1.0 . tes3.findActorsInProximity \u2693\ufe0e Searches for active mobile actors which are within range distance from the reference or position argument. It only finds mobiles which have active AI, and can include the player. This function is used by the game for area-of-effect hits. It has a small amount of overhead, so try not to use it too much. local mobileList = tes3 . findActorsInProximity ({ reference = ..., position = ..., range = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The position to search from, taken from a reference. Uses the position of the centre of the body if the reference is an actor. position ( tes3vector3 ): Optional . The position to search from. range (number): The distance around the position to search. An actor is included if the centre of their body is in range. Returns : mobileList ( tes3mobileActor []) tes3.findBirthsign \u2693\ufe0e Fetches the core game birthsign object for a given birthsign ID. If the birthsign with a given ID doesn't exist, nil is returned. local birthsign = tes3 . findBirthsign ( id ) Parameters : id (string): ID of the birthsign to search for. Returns : birthsign ( tes3birthsign ) tes3.findClass \u2693\ufe0e Fetches the core game character class object for a given class ID. If the class with a given ID doesn't exist, nil is returned. local class = tes3 . findClass ( id ) Parameters : id (string): ID of the class to search for. Returns : class ( tes3class ) tes3.findClosestExteriorReferenceOfObject \u2693\ufe0e Using the same engine function used by the vanilla intervention spells, locations the first reference of a given object in the exterior world. local reference = tes3 . findClosestExteriorReferenceOfObject ({ object = ..., position = ... }) Parameters : params (table) object ( tes3physicalObject , string): The object to search for. position ( tes3vector3 ): Optional . The position to search from. Must be an exterior position. Defaults to the last exterior position of the player if no position is provided. Returns : reference ( tes3reference ) tes3.findDialogue \u2693\ufe0e Locates a root dialogue topic that can then be filtered down for a specific actor to return a specific dialogue info. Specify either topic , or both type and page for other types of dialogue. For example, tes3.findDialogue({type = tes3.dialogueType.greeting, page = tes3.dialoguePage.greeting.greeting0}) will return the \"Greeting 0\" topic, which is not available using a topic ID. local dialogue = tes3 . findDialogue ({ topic = ..., type = ..., page = ... }) Parameters : params (table) topic (string): Optional . The dialogue topic to look for. type (number): Optional . The type of dialogue to look for. Uses tes3.dialogueType constants. page (number): Optional . The page of dialogue to fetch. Uses tes3.dialoguePage constants. Returns : dialogue ( tes3dialogue ) tes3.findGlobal \u2693\ufe0e Fetches the core game object that represents a global variable. local globalVariable = tes3 . findGlobal ( id ) Parameters : id (string) Returns : globalVariable ( tes3globalVariable ) tes3.findGMST \u2693\ufe0e Fetches the core game object that represents a game setting. While this function accepts a name, it is recommended to use the tes3.GMST constants. local gameSetting = tes3 . findGMST ( id ) Parameters : id (number, string) Returns : gameSetting ( tes3gameSetting ) Example: Document all GMST Default Values This example reads the default values of all GMSTs, and writes them to a markdown file for users to read. -- Converter table for a GMST's type to something more user-friendly. local typeNames = { s = \"string\" , i = \"integer\" , f = \"float\" , } -- Write our markdown header. local f = assert ( io.open ( \"Data Files \\\\ MWSE \\\\ tmp \\\\ GMSTs.md\" , \"w\" )) f : write ( \"# GMSTs \\n\\n \" ) f : write ( \"Index | Type | Identifier | Default Value \\n \" ) f : write ( \"----- | ------- | -------------------------------- | -------------------------------------------- \\n \" ) -- Go through all our GMSTs... for id = 0 , 1520 do -- Write out most of the info. local gmst = tes3 . findGMST ( id ) f : write ( string.format ( \"%-5d | %-7s | %-32s | \" , gmst . index , typeNames [ gmst . type ], gmst . id )) -- Customize how the value is written based on its type. if ( gmst . type == \"s\" ) then -- Remove linebreaks and escape them. local value = gmst . defaultValue value = string.gsub ( value , \" \\r \" , \" \\\\ r\" ) value = string.gsub ( value , \" \\n \" , \" \\\\ n\" ) f : write ( string.format ( \"` \\\" %s \\\" `\" , value )) elseif ( gmst . type == \"f\" ) then f : write ( string.format ( \"`%.4f`\" , gmst . defaultValue )) else f : write ( string.format ( \"`%d`\" , gmst . defaultValue )) end f : write ( \" \\n \" ) end -- Close up our file. f : close () Example: Retrieve value of a GMST This example shows how to read a value of a GMST and how to change it. local oldGMST = tes3 . findGMST ( \"sServiceTrainingTitle\" ). value -- oldGMST is now \"Training\" -- Now let's change the message to something more appropriate. tes3 . findGMST ( \"sServiceTrainingTitle\" ). value = \"Cheat\" tes3.findRegion \u2693\ufe0e Fetches the core game region object for a given region ID. If the region with a given ID doesn't exist, nil is returned. local region = tes3 . findRegion ({ id = ... }) Parameters : params (table) id (string): ID of the region to search for. Returns : region ( tes3region ) tes3.force1stPerson \u2693\ufe0e Forces the player's POV to first person the next simulation frame, and returns true if the POV has been changed. local changedPOV = tes3 . force1stPerson () Returns : changedPOV (boolean) tes3.force3rdPerson \u2693\ufe0e Forces the player's POV to third person the next simulation frame, and returns true if the POV has been changed. local changedPOV = tes3 . force3rdPerson () Returns : changedPOV (boolean) tes3.get3rdPersonCameraOffset \u2693\ufe0e Returns the camera offset from the player's head while in 3rd person view. Tip If used before initialized event, this function returns empty table. local cameraOffset = tes3 . get3rdPersonCameraOffset () Returns : cameraOffset ( tes3vector3 ) tes3.getActiveCells \u2693\ufe0e Returns a table of active cells. If indoors, the table will have only one entry. If outdoors, the 9 surrounding cells will be provided. local cells = tes3 . getActiveCells () Returns : cells ( tes3cell []) tes3.getAnimationGroups \u2693\ufe0e This function fetches a reference's attached animation groups. local animData = tes3 . getAnimationGroups ({ reference = ... }) Parameters : params (table) reference ( tes3reference ): A reference whose animation groups to fetch. Returns : animData (number[]) tes3.getAnimationTiming \u2693\ufe0e This function fetches a reference's attached animation groups' timings. local result = tes3 . getAnimationTiming ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): A reference whose animation groups' timings to fetch. Returns : result (number[]) tes3.getArchiveList \u2693\ufe0e Returns a 1-indexed table of active archives. local archives = tes3 . getArchiveList () Returns : archives ( tes3archive []) tes3.getAttachment \u2693\ufe0e Fetches an attachment with a given type from a reference. Will return nil if no attachment of that type has been found. local result = tes3 . getAttachment ( reference , attachment ) Parameters : reference ( tes3reference ): The reference to get the attachment from. attachment (string): The type of attachment to get. Possible values are: \"bodyPartManager\" : Returns tes3bodyPartManager \"light\" : Returns tes3lightNode \"lock\" : Returns tes3lockNode \"leveledBase\" : Returns tes3reference \"travelDestination\" : Returns tes3travelDestinationNode \"variables\" : Returns tes3itemData \"actor\" : Returns tes3mobileActor \"animation\" : Returns tes3animationData Returns : result (nil, tes3bodyPartManager , tes3itemData , tes3lightNode , tes3lockNode , tes3mobileActor , tes3reference , tes3travelDestinationNode , tes3animationData ) tes3.getAttributeName \u2693\ufe0e Returns the lowercase identifying name of an attribute for a given numerical, 0-based index. E.g. \"strength\", by using GMSTs. Uses tes3.attributeName enumeration as a fallback. local name = tes3 . getAttributeName ( attributeId ) Parameters : attributeId (number): The attribute id to get the name of. Maps to values in tes3.attribute namespace. Returns : name (string) tes3.getCameraPosition \u2693\ufe0e Returns the camera's position. local vector3 = tes3 . getCameraPosition () Returns : vector3 ( tes3vector3 ) tes3.getCameraVector \u2693\ufe0e Returns the camera look vector. local vector3 = tes3 . getCameraVector () Returns : vector3 ( tes3vector3 ) tes3.getCell \u2693\ufe0e Finds a cell, either by an id or an X/Y grid position. local cell = tes3 . getCell ({ id = ..., x = ..., y = ... }) Parameters : params (table) id (string): The cell's ID. If not provided, x and y must be. x (number) y (number) Returns : cell ( tes3cell ) tes3.getCumulativeDaysForMonth \u2693\ufe0e Gets the number of days that have passed leading up to the start of a given month. local days = tes3 . getCumulativeDaysForMonth ( month ) Parameters : month (number): The 0-based month index. Returns : days (number) tes3.getCurrentAIPackageId \u2693\ufe0e Returns an actor's current AI package ID, just as the mwscript function GetCurrentAIPackage would. local packageID = tes3 . getCurrentAIPackageId ( reference ) Parameters : reference ( tes3mobileActor , tes3reference ) Returns : packageID (number) tes3.getCurrentWeather \u2693\ufe0e Gets the currently active weather, from the player's current region. local weather = tes3 . getCurrentWeather () Returns : weather ( tes3weather ) tes3.getCursorPosition \u2693\ufe0e Returns a table with values x and y that contain the current cursor position. local position = tes3 . getCursorPosition () Returns : position ( tes3vector2 ) tes3.getDaysInMonth \u2693\ufe0e Returns the number of days in a given month. This may be altered if a Morrowind Code Patch feature was installed. local dayCount = tes3 . getDaysInMonth ( month ) Parameters : month (number) Returns : dayCount (number) tes3.getDialogueInfo \u2693\ufe0e Locates and returns a Dialogue Info by a given id. This involves file IO and is an expensive call. Results should be cached. local dialogueInfo = tes3 . getDialogueInfo ( dialogue , id ) Parameters : dialogue ( tes3dialogue , string): The dialogue that the info belongs to. id (string): The numerical, unique id for the info object. Returns : dialogueInfo ( tes3dialogueInfo ) tes3.getEffectMagnitude \u2693\ufe0e This function returns the total effective magnitude and total base magnitude of a certain magic effect affecting a reference. It returns a pair of numbers, the first being the effective magnitude after all the actor's resistances are applied (see examples). The second number is the magnitude before any of the actor's resistances are applied. local effectiveMagnitude , magnitude = tes3 . getEffectMagnitude ({ reference = ..., effect = ..., skill = ..., attribute = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): An associated mobile should exist for this function to be able to work. effect (number): Effect ID. Can be any of the predefined spell effects, or one added by tes3.claimSpellEffectId() . Maps to values of tes3.effect constants skill (number): Default : -1 . If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Skill, a skill should be provided. This also applies to any custom spell effect which operates on a certain skill. This value maps to tes3.skill constants. attribute (number): Default : -1 . If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Attribute, an attribute should be provided. This also applies to any custom spell effect which operates on a certain attribute. This value maps to tes3.attribute constants. Returns : effectiveMagnitude (number): The effective magnitude after all the actor's resistances are applied. magnitude (integer): The magnitude before any of the actor's resistances are applied. Example: Get both magnitudes. local effectiveMagnitude , magnitude = tes3 . getEffectMagnitude { reference = tes3 . player , effect = tes3 . effect . fireDamage } tes3 . messageBox ( string.format ( \"fortify speed: %f (%f)\" , effectiveMagnitude , magnitude )) Example: Get magnitude after resistances are applied. You can treat the function as if it returns a single value. local effectiveMagnitude = tes3 . getEffectMagnitude { reference = tes3 . player , effect = tes3 . effect . fortifyAttribute , attribute = tes3 . attribute . speed } tes3 . messageBox ( string.format ( \"fortify speed: %f\" , effectiveMagnitude )) tes3.getEquippedItem \u2693\ufe0e Returns an actor's equipped item stack, provided a given filter local stack = tes3 . getEquippedItem ({ actor = ..., enchanted = ..., objectType = ..., slot = ..., type = ... }) Parameters : params (table) actor ( tes3reference , tes3mobileActor , tes3actor ) enchanted (boolean): Optional . If true, filters only enchanted items. objectType (number): Optional . Maps to tes3.objectType constants. Used to filter equipment by type. slot (number): Optional . Maps to tes3.armorSlot or tes3.clothingSlot . Used to filter equipment by slot. type (number): Optional . Maps to tes3.weaponType . Used to filter equipment by type. Returns : stack ( tes3equipmentStack ) Example: Get Player\u2019s Equipped Light In this example, we print the object ID of the player\u2019s equipped light source. local equippedLightStack = tes3 . getEquippedItem ({ actor = tes3 . player , objectType = tes3 . objectType . light }) if ( equippedLightStack ) then mwse . log ( \"Equipped light: %s\" , equippedLightStack . object . id ) else mwse . log ( \"No light equipped.\" ) end Example: Get Player\u2019s Shield This example shows the player\u2019s shield. local equippedShieldStack = tes3 . getEquippedItem ({ actor = tes3 . player , objectType = tes3 . objectType . armor , slot = tes3 . armorSlot . shield }) if ( equippedShieldStack ) then mwse . log ( \"Equipped shield: %s\" , equippedShieldStack . object . id ) else mwse . log ( \"No shield equipped.\" ) end tes3.getFaction \u2693\ufe0e Fetches the core game faction object for a given faction ID. local faction = tes3 . getFaction ( id ) Parameters : id (string) Returns : faction ( tes3faction ) tes3.getFileExists \u2693\ufe0e Determines if a file exists in the user's Data Files. local exists = tes3 . getFileExists ( path ) Parameters : path (string) Returns : exists (boolean) tes3.getFileSource \u2693\ufe0e Determines if a file exists on the filesystem or inside of a bsa. The returned string will be \"file\" or \"bsa\". local exists , path = tes3 . getFileSource ( path ) Parameters : path (string) Returns : exists (string?): A string representing the file source. This can be either file or bsa . path (string?): If the file exists, this is a path to the file. If the file is from a BSA, it is a path inside the BSA. tes3.getGlobal \u2693\ufe0e Retrieves the value of a global value, or nil if the global could not be found. local value = tes3 . getGlobal ( id ) Parameters : id (string) Returns : value (integer) tes3.getInputBinding \u2693\ufe0e Gets the input configuration for a given keybind. local inputConfig = tes3 . getInputBinding ( keybind ) Parameters : keybind (number): Maps to tes3.keybind constants. Returns : inputConfig ( tes3inputConfig ) tes3.getItemCount \u2693\ufe0e Returns the amount of a certain item that can be found in a reference's inventory. local count = tes3 . getItemCount ({ reference = ..., item = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to get the item count for. Must be a reference that has an inventory. item ( tes3item , string): The item to get the count of. Returns : count (number): The absolute value of the stack count in the reference's inventory. tes3.getItemIsStolen \u2693\ufe0e This function checks item's stolen flag. local isStolen , stolenFrom = tes3 . getItemIsStolen ({ item = ..., from = ... }) Parameters : params (table) item ( tes3item ): The item to check. from ( tes3creature , tes3npc , tes3faction , nil): Optional . Where the item was stolen from. If not provided, the function will return true if the item was stolen from anyone. Returns : isStolen (boolean): If true the item is stolen. stolenFrom ( tes3creature [], tes3npc [], tes3faction []): A list of who and what the item has been stolen from. tes3.getJournalIndex \u2693\ufe0e Gets the index of a given journal, or nil if no valid journal could be found. local index = tes3 . getJournalIndex ({ id = ... }) Parameters : params (table) id ( tes3dialogue , string) Returns : index (number) tes3.getKillCount \u2693\ufe0e Returns how many times the player killed an actor. If no actor is specified, total number of kills player commited will be returned. local count = tes3 . getKillCount ({ actor = ... }) Parameters : params (table): Optional . actor ( tes3actor , string): Optional . The actor (or their ID) for whom to retrieve player's kill count. Returns : count (number) tes3.getKillCounts \u2693\ufe0e Returns a table with complete player kill counts. The table returned is formated so actor IDs are table keys and kill count of that type of actor is value. local killMap = tes3 . getKillCounts () Returns : killMap (table< tes3actor , number>) tes3.getLanguage \u2693\ufe0e Gets the language as an ISO string (e.g. \"eng\"), determined by the language entry in Morrowind.ini and the detected executable. Maps to values in the tes3.language table. local result = tes3 . getLanguage () Returns : result (string) tes3.getLanguageCode \u2693\ufe0e Gets the language code, determined by the language entry in Morrowind.ini and the detected executable. Maps to values in the tes3.languageCode table. local result = tes3 . getLanguageCode () Returns : result (number) tes3.getLastExteriorPosition \u2693\ufe0e Returns the last exterior position of the player. local vector3 = tes3 . getLastExteriorPosition () Returns : vector3 ( tes3vector3 ) tes3.getLocked \u2693\ufe0e Determines if a given reference is a locked door or container. local isLocked = tes3 . getLocked ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) Returns : isLocked (boolean) tes3.getLockLevel \u2693\ufe0e Gets an locked reference's lock level. If no lock data is available, it will return nil. local level = tes3 . getLockLevel ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) Returns : level (number) tes3.getMagicEffect \u2693\ufe0e Fetches the core game Magic Effect object for a given ID. Can return custom magic effects added with tes3.addMagicEffect . local magicEffect = tes3 . getMagicEffect ( id ) Parameters : id (integer): Maps to values in tes3.effect table. Returns : magicEffect ( tes3magicEffect , nil) tes3.getMagicEffectName \u2693\ufe0e Returns the complex name of a magic effect, taking into account attribute or skill values. local complexName = tes3 . getMagicEffectName ({ effect = ..., attribute = ..., skill = ... }) Parameters : params (table) effect (integer): The effect ID to get the name of. Maps to values in tes3.effect table. attribute (integer): Optional . The attribute ID to use, if applicable. Maps to values in tes3.attribute table. skill (integer): Optional . The skill ID to use, if applicable. Maps to values in tes3.skill table. Returns : complexName (string) tes3.getMagicSourceInstanceBySerial \u2693\ufe0e Fetches an instance of the magic source of a given serial number. local magicSourceInstance = tes3 . getMagicSourceInstanceBySerial ({ serialNumber = ... }) Parameters : params (table) serialNumber (number) Returns : magicSourceInstance ( tes3magicSourceInstance ) tes3.getModList \u2693\ufe0e Fetches the list of the active ESM and ESP files. local modList = tes3 . getModList () Returns : modList (string[]) tes3.getObject \u2693\ufe0e Fetches the core game object for a given object ID. local object = tes3 . getObject ( id ) Parameters : id (string) Returns : object ( tes3object ) tes3.getOwner \u2693\ufe0e Returns the object's owner, or nil if the object is unowned. local owner , requirement = tes3 . getOwner ({ reference = ... }) Parameters : params (table) reference ( tes3reference ) Returns : owner ( tes3faction , tes3npc , nil) requirement (number, tes3globalVariable , nil): The faction rank required if the owner is a faction, or the global variable needing to be set if the owner is an NPC. tes3.getPlayerActivationDistance \u2693\ufe0e This function returns the distance that the player can activate objects with. This is a sum of the iMaxActivateDist GMST value and the player's telekinesis strength. local result = tes3 . getPlayerActivationDistance () Returns : result (number) tes3.getPlayerCell \u2693\ufe0e Fetches the cell that the player is currently in. local result = tes3 . getPlayerCell () Returns : result ( tes3cell ) tes3.getPlayerEyePosition \u2693\ufe0e Returns the position of the player's eyes. local position = tes3 . getPlayerEyePosition () Returns : position ( tes3vector3 ) tes3.getPlayerEyeVector \u2693\ufe0e Returns the look direction of the player's eyes. local lookDirection = tes3 . getPlayerEyeVector () Returns : lookDirection ( tes3vector3 ) tes3.getPlayerGold \u2693\ufe0e Gets the gold count carried by the player. local goldCount = tes3 . getPlayerGold () Returns : goldCount (number) tes3.getPlayerTarget \u2693\ufe0e This function is used to see what the player is looking at. Unlike a real raycast, this does not work in all circumstances. As a general rule, it will return the reference if the information box is shown when it is looked at. local result = tes3 . getPlayerTarget () Returns : result ( tes3reference ) tes3.getQuickKey \u2693\ufe0e This function retrieves data for a quick key. local result = tes3 . getQuickKey ({ slot = ... }) Parameters : params (table) slot (number): The key to retrieve data for. This is a value between 1 and 9. Returns : result ( tes3quickKey ) tes3.getReference \u2693\ufe0e Fetches the first reference for a given base object ID. local reference = tes3 . getReference ( id ) Parameters : id (string) Returns : reference ( tes3reference ) tes3.getRegion \u2693\ufe0e Gets the current region the player is in. This checks the player's current cell first, but will fall back to the last exterior cell. local region = tes3 . getRegion ( useDoors ) Parameters : useDoors (boolean): Default : false . Returns : region ( tes3region ) tes3.getScript \u2693\ufe0e Locates and returns a script by a given id. local script = tes3 . getScript ( id ) Parameters : id (string) Returns : script ( tes3script ) tes3.getSimulationTimestamp \u2693\ufe0e Returns a UNIX-style timestamp based on in-world simulation time since the start of the era, in hours. local timestamp = tes3 . getSimulationTimestamp ( highPrecision ) Parameters : highPrecision (boolean): Default : true . If false is passed returns the value of the simulation time variable used by the game engine. Calculates the timestamp from the current year, month and game hour global variables otherwise. Returns : timestamp (number) tes3.getSkill \u2693\ufe0e Fetches the core game object for a given skill ID. local skill = tes3 . getSkill ( id ) Parameters : id (number): Maps to tes3.skill enumeration. Returns : skill ( tes3skill ) tes3.getSkillName \u2693\ufe0e Returns the identifying name of a skill for a given numerical, 0-based index. E.g. \"Enchant\". local name = tes3 . getSkillName ( skillId ) Parameters : skillId (number): Maps to tes3.skill enumeration. Returns : name (string) tes3.getSound \u2693\ufe0e Locates and returns a sound by a given id. local sound = tes3 . getSound ( id ) Parameters : id (string) Returns : sound ( tes3sound ) tes3.getSoundGenerator \u2693\ufe0e Returns a sound generator by a given creature id and type. local soundGenerator = tes3 . getSoundGenerator ( creatureId , soundType ) Parameters : creatureId (string) soundType (number): Maps to tes3.soundGenType constants. Returns : soundGenerator ( tes3soundGenerator ) tes3.getSoundPlaying \u2693\ufe0e Without a reference, this function returns true if the sound is playing unattached or on any reference. With a reference, it returns true if the sound is playing on that specific reference. local soundIsPlaying = tes3 . getSoundPlaying ({ sound = ..., reference = ... }) Parameters : params (table) sound ( tes3sound , string): The sound object, or the ID of the sound to look for. reference ( tes3reference , tes3mobileActor , string): Optional . Returns : soundIsPlaying (boolean) tes3.getSpecializationName \u2693\ufe0e Returns the lowercase identifying name of a specialization type for a given numerical, 0-based index. E.g. \"magic\", by using GMSTs. Uses tes3.specializationName enumeration as a fallback. local name = tes3 . getSpecializationName ( specializationId ) Parameters : specializationId (number): Maps to tes3.specialization enumeration. Returns : name (string) tes3.getSpells \u2693\ufe0e Gets the spells of an actor. This can be filtered by spellType and set to include or exclude actor, racial and birthsign spells. local result = tes3 . getSpells ({ target = ..., spellType = ..., getActorSpells = ..., getRaceSpells = ..., getBirthsignSpells = ... }) Parameters : params (table) target ( tes3reference , tes3mobileActor , tes3actor ): The actor to get the spells of. Must be able to cast spells. spellType (number): Default : -1 . The spell type to filter for. Only spells with this spell type will be returned. A value of -1 will return spells of all types. Maps to values in the tes3.spellType table. getActorSpells (boolean): Default : true . If true , the spells of the actor itself will be included in the result. This includes every spell except racial and birthsign spells. getRaceSpells (boolean): Default : true . If true , the spells of the actor's race will be included in the result. getBirthsignSpells (boolean): Default : true . If true , the spells of the actor's birthsign will be included in the result. Returns : result ( tes3spell []) tes3.getTopMenu \u2693\ufe0e Gets the top-level UI menu. local menu = tes3 . getTopMenu () Returns : menu ( tes3uiElement ) tes3.getTrap \u2693\ufe0e Gets the trap on a given reference. local spell = tes3 . getTrap ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) Returns : spell ( tes3spell ) tes3.getVanityMode \u2693\ufe0e The function returns true if the player is in the vanity mode. Vanity mode is triggered by a period of inactivity from the player or by a tes3.setVanityMode() function. The view is switched to third person (if not already), and the camera is orbiting slowly around the player character. local result = tes3 . getVanityMode () Returns : result (boolean): Is the vanity mode currently active? tes3.getViewportSize \u2693\ufe0e Returns both the viewport width and the viewport height. Note that this is the real resolution of the screen. For a value scaled by MGE's menu scaling, see the same-named function in the tes3ui namespace. To get the scale used, check getViewportScale in the tes3ui namespace. local width , height = tes3 . getViewportSize () Returns : width (number): The width of the viewport. height (number): The height of the viewport. tes3.getWerewolfKillCount \u2693\ufe0e Returns the number of kills player commited as a Werewolf. local werewolfKills = tes3 . getWerewolfKillCount () Returns : werewolfKills (number) tes3.hammerKey \u2693\ufe0e Simulates hammering a key. tes3 . hammerKey ( keyCode ) Parameters : keyCode (number) tes3.hasCodePatchFeature \u2693\ufe0e Attempts to determine if a given Morrowind Code Patch feature is enabled. This may not be possible, in which case nil will be returned. local state = tes3 . hasCodePatchFeature ( id ) Parameters : id (number): The id of the feature. Maps to values in tes3.codePatchFeature constants. Returns : state (boolean, nil) tes3.hasOwnershipAccess \u2693\ufe0e Determines if a reference has access to another object, including its inventory. References have access to their own things, and the player has access to dead NPC's items. local hasAccess = tes3 . hasOwnershipAccess ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Default : tes3.player . The actor to check permissions for. target ( tes3reference , tes3mobileActor , string): The reference to check access of. Returns : hasAccess (boolean) tes3.hasSpell \u2693\ufe0e Determines if the player has access to a given spell. local hasSpell = tes3 . hasSpell ({ reference = ..., actor = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to check the spell list of. To check an actor without specifying any particular reference, use actor instead. actor ( tes3actor , string): Who to check the spell list of. Providing a base actor can be done before a save has been loaded, but may not correctly update effects for instanced versions of that actor in an active save. spell ( tes3spell , string): The spell to check. Returns : hasSpell (boolean): True if the spell exists in the actor's spell list, race spell list, or birthsign spell list. tes3.incrementKillCount \u2693\ufe0e Increases player's kill count of a certain type of actor by one. tes3 . incrementKillCount ({ actor = ... }) Parameters : params (table) actor ( tes3actor , string): The actor (or their ID) for whom to increase player's kill count. tes3.is3rdPerson \u2693\ufe0e Returns true if the game is in 3rd person. local state = tes3 . is3rdPerson () Returns : state (boolean) tes3.isAffectedBy \u2693\ufe0e This function performs a check whether the provided reference is affected by a certain object or magic effect. Note reference.object.spells:contains(spellID) will give the same output as this function for abilities, diseases, and curses, because having them in your spell list also makes them affect you. local isAffectedBy = tes3 . isAffectedBy ({ reference = ..., effect = ..., object = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) effect (number): Optional . A numerical identifier of the magic effect to perform a check for. Maps to tes3.effect constant, including those claimed with tes3.claimSpellEffectId() , and then added with tes3.addMagicEffect() . object ( tes3alchemy , tes3enchantment , tes3spell , tes3magicEffect , string): Optional . An object to perform a check for. Returns : isAffectedBy (boolean) tes3.isCharGenFinished \u2693\ufe0e Returns true if the character generation process has been finished for the current player character. local result = tes3 . isCharGenFinished () Returns : result (boolean) tes3.isKeyEqual \u2693\ufe0e Compares two key objects and returns their equality. Returns true if the objects are equal, false otherwise. local equal = tes3 . isKeyEqual ({ actual = ..., expected = ... }) Parameters : params (table) actual (table): The key object that is being compared. keyCode (number): Default : false . Value of the actual key scan code, such as the letter p . Maps to tes3.scanCode.* . isShiftDown (boolean): Default : false . Value of whether the shift key is pressed. isControlDown (boolean): Default : false . Value of whether the control key is pressed. isAltDown (boolean): Default : false . Value of whether the alt key is pressed. isSuperDown (boolean): Default : false . Value of whether the super (Windows key) key is pressed. expected (table): The key object that is being compared against. keyCode (number): Default : false . Value of the expected key scan code, such as the letter p . Maps to tes3.scanCode.* . isShiftDown (boolean): Default : false . Value of whether the shift key is expected to be pressed. isControlDown (boolean): Default : false . Value of whether the control key is expected to be pressed. isAltDown (boolean): Default : false . Value of whether the alt key is expected to be pressed. isSuperDown (boolean): Default : false . Value of whether the super (Windows key) key is pressed. Returns : equal (boolean) tes3.isLuaModActive \u2693\ufe0e Determines if the player has a given lua mod active. The key passed to this function is the path to where its main.lua file is, relative to the MWSE\\mods folder. Slashes are automatically replaced with periods, and the key is case-insensitive. local isActive = tes3 . isLuaModActive ( key ) Parameters : key (string): The key to check. Returns : isActive (boolean): True if the mod is active, otherwise false. Example: Determine if a Specific Lua Mod is Active In this example, we determine if Chameleon is active. The mod provides no interop files to try to include , and is a simple main.lua file. This makes it hard to otherwise detect. if ( tes3 . isLuaModActive ( \"Danae.Chameleon\" )) then -- Perform some compatibility actions here. end tes3.isModActive \u2693\ufe0e Determines if the player has a given ESP or ESM file active. local result = tes3 . isModActive ( filename ) Parameters : filename (string): The filename of the mod to find, including the extension. Returns : result (boolean) tes3.iterate \u2693\ufe0e This function returns a function that iterates over a tes3iterator object. This is useful for for loops. Note that tes3iterator objects support iteration with pairs() function. local function = tes3 . iterate ( iterator ) Parameters : iterator ( tes3iterator ) Returns : function (function) tes3.iterateObjects \u2693\ufe0e Iteration function used for looping over game options. local object = tes3 . iterateObjects ( filter ) Parameters : filter (number, number[], nil): Maps to tes3.objectType constants. Returns : object ( tes3object ) tes3.loadAnimation \u2693\ufe0e Loads an animation and uses it to override existing animations on an actor. Animation groups present in the file will replace the actor's animation groups. The actor's model must be already loaded into memory to have its animations modified. The overridden animations only persist until the actor is unloaded. Calling this more than once will remove the previous animation override before loading the new animation. Therefore, if applying animations to the player, you should call this before every playAnimation so that different animation mods can co-exist. For NPCs under your mod's control, you only need to do it when the player enters the cell containing the NPC. Calling this without a file argument will reset the reference's animations to default. tes3 . loadAnimation ({ reference = ..., file = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference to the actor that is having its animations modified. file (string): Optional . The specified animation base file that will be loaded. e.g. For an animation composed of files anim.nif, xanim.nif and xanim.kf, you should pass file=\"anim.nif\". The animation target skeleton must match the skeleton of the actor to work. i.e. 3rd person anims for NPCs and tes3.player, 1st person anims for firstPersonReference. tes3.loadGame \u2693\ufe0e Loads a game. tes3 . loadGame ( filename ) Parameters : filename (string): The full filename of the save that we want to load, including extension. tes3.loadMesh \u2693\ufe0e Loads a mesh file and provides a scene graph object. local model = tes3 . loadMesh ( path , useCache ) Parameters : path (string): Path, relative to Data Files/Meshes. useCache (boolean): Default : true . If false, a new object will be created even if it had been previously loaded. Returns : model ( niNode ) tes3.loadSourceTexture \u2693\ufe0e Loads a source texture file and provides the niSourceTexture object. local texture = tes3 . loadSourceTexture ( path , useCache ) Parameters : path (string): Path, relative to Data Files/Textures. useCache (boolean): Default : true . If false, a new object will be created even if it had been previously loaded. Returns : texture ( niSourceTexture ) tes3.lock \u2693\ufe0e Locks an object, and optionally sets a locked reference's lock level. Returns true if the object can be and wasn't already locked. local locked = tes3 . lock ({ reference = ..., level = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) level (number): Optional . Returns : locked (boolean) tes3.loopTArray \u2693\ufe0e This function returns a function that iterates over a tes3tarray object. This is useful for for loops. local iterationFunction = tes3 . loopTArray ( tarray ) Parameters : tarray (tes3tarray) Returns : iterationFunction (function) tes3.makeSafeObjectHandle \u2693\ufe0e Returns a safe handle for the object. To get the object use :getObject() . To check if it still exists use :valid() . local safeObjectHandle = tes3 . makeSafeObjectHandle ( object ) Parameters : object ( tes3object ): An object to make a safe handle for. Returns : safeObjectHandle ( mwseSafeObjectHandle ) tes3.menuMode \u2693\ufe0e Returns true if the player is currently in menu mode. local inMenuMode = tes3 . menuMode () Returns : inMenuMode (boolean) tes3.messageBox \u2693\ufe0e Displays a message box. This may be a simple toast-style message, or a box with choice buttons. local element = tes3 . messageBox ({ message = ..., buttons = ..., callback = ..., showInDialog = ..., duration = ... }, formatAdditions ) Parameters : messageOrParams (string, table) message (string) buttons (string[]): Optional . An array of strings to use for buttons. callback (function): The callback function will be executed after a button was pressed. The callback function will be passed a table with button field corresponding to 0-based index of the button from passed buttons array. showInDialog (boolean): Default : true . Specifying showInDialog = false forces the toast-style message, which is not shown in the dialog menu. duration (number): Optional . Overrides how long the toast-style message remains visible. formatAdditions (variadic): Optional . Only used if messageOrParams is a string. Returns : element ( tes3uiElement , nil): The UI menu created for the notification, if any. Example: A message box with a callback function This demonstrates how to determine which button was pressed inside callback function. -- This variable is used to store a function that will be -- registered as a callback when a button is pressed inside -- our messageBox. The function's body is declared later. local onButtonPressed -- This function is registered to execute when U key is pressed. local function onKeyPressed () tes3 . messageBox ({ message = \"Do you want a muffin?\" , buttons = { \"Yes\" , \"No\" }, showInDialog = false , callback = onButtonPressed , }) end event . register ( tes3 . event . keyDown , onKeyPressed , { filter = tes3 . scanCode . u }) -- Here we define the body of our function. onButtonPressed = function ( e ) -- This corresponds to the first button -- of our message, which is \"Yes\" if e . button == 0 then tes3 . addItem ({ reference = tes3 . player , item = \"ingred_bread_01_UNI3\" , }) else -- Do nothing end end tes3.modStatistic \u2693\ufe0e Modifies a statistic on a given actor. This should be used instead of manually setting values on the game structures, to ensure that events and GUI elements are properly handled. Either skill, attribute, or name must be provided. tes3 . modStatistic ({ reference = ..., name = ..., attribute = ..., skill = ..., base = ..., current = ..., value = ..., limit = ..., limitToBase = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string) name (string): Optional . A generic name of an attribute to set. attribute (number): Optional . The attribute to set. skill (number): Optional . The skill to set. base (number): Optional . If set, the base value will be modified. current (number): Optional . If set, the current value will be modified. value (number): Optional . If set, both the base and current value will be modified. limit (boolean): Default : false . If set, the attribute won't rise above 100 or fall below 0. limitToBase (boolean): Default : false . If set, the attribute's current value won't rise above its base value. Useful for health, magicka, and fatigue. Example: Decrease Health of an Actor In this simple example, the current health of an actor, the player, is decreased by 10. To simulate actual combat damage, you should use tes3mobileActor.applyDamage. tes3 . modStatistic ({ reference = tes3 . mobilePlayer , name = \"health\" , current = - 10 }) Example: Restore Magicka without Overflowing Magicka is restored without exceeding the magicka pool using the limitToBase flag. tes3 . modStatistic ({ reference = tes3 . mobilePlayer , name = \"magicka\" , current = 20 , limitToBase = true }) tes3.newGame \u2693\ufe0e Starts a new game. tes3 . newGame () tes3.onMainMenu \u2693\ufe0e Returns true if the player is on the main menu, and hasn't loaded a game yet. local onMainMenu = tes3 . onMainMenu () Returns : onMainMenu (boolean) tes3.persuade \u2693\ufe0e Attempts a persuasion attempt on an actor, potentially adjusting their disposition. Returns true if the attempt was a success. local success = tes3 . persuade ({ actor = ..., index = ..., modifier = ... }) Parameters : params (table) actor ( tes3mobileActor , tes3reference , string): The actor to try to persuade. index (number): Optional . If an index is provided, 0-indexed with the following results: admire, intimidate, taunt, bribe (10), bribe (100), bribe (1000). modifier (number): Optional . If no index is provided, this is the direct modifier to try. The higher the modifer the higher the chance of a successful persuation, and higher disposition change. Returns : success (boolean) tes3.playAnimation \u2693\ufe0e Plays a given animation group. Optional flags can be used to define how the group starts. When 'group' is specified, the actor AI is paused while playing the animation, as if in an idle state. When one or more of 'lower', 'upper', or 'shield' are specified without 'group', the actor AI retains control, and the animations are layered. e.g. tes3.playAnimation{reference = ..., upper = tes3.animationGroup.idle3, loopCount = 0} will play the idle3 animation once (without looping) on the upper body, while the player or NPC is still able to walk around. Using 'upper' defers combat actions until the animation is done. Using 'shield' still allows combat actions. As a special case, tes3.playAnimation{reference = ..., group = 0} returns control to the AI, as the AI knows that is the actor's neutral idle state. tes3 . playAnimation ({ reference = ..., group = ..., lower = ..., upper = ..., shield = ..., startFlag = ..., loopCount = ..., mesh = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference that will play the animation. group (number): Optional . The animation group id to start playing -- a value from 0 to 149. Applies the animation to the whole body. Maps to tes3.animationGroup constants. lower (number): Optional . Sets the animation group id for the lower body. This is used to combine different animations for each body section. Maps to tes3.animationGroup constants. upper (number): Optional . Sets the animation group id for the upper body. This is used to combine different animations for each body section. Maps to tes3.animationGroup constants. shield (number): Optional . Sets the animation group id for the shield arm. This is used to combine different animations for each body section. Maps to tes3.animationGroup constants. startFlag (number): Default : tes3.animationStartFlag.immediate . A flag for starting the group with, using tes3.animationStartFlag constants. loopCount (number): Default : -1 . If provided, the animation will repeat its loop section a given number of times. To make an animation play through once, set loopCount = 0. Defaults to infinite looping. mesh (string): Optional . Deprecated. Please use tes3.loadAnimation (check its documentation) before calling playAnimation . You can also use loadAnimation to reset loaded animations to default. tes3.playItemPickupSound \u2693\ufe0e Plays the sound responsible for picking up or putting down an item. local executed = tes3 . playItemPickupSound ({ reference = ..., item = ..., pickup = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The reference to attach the sound to. item ( tes3item ) pickup (boolean): Default : true . If false, the place down item will be used. Returns : executed (boolean) tes3.playSound \u2693\ufe0e Plays a sound on a given reference. Provides control over volume (including volume channel), pitch, and loop control. Note : MP3 sound files can only be played if they are inside \\Vo\\ folder. The files must conform to the MPEG Layer-3, 64 Kbps 44100 kHz, 16-bit mono specification. local executed = tes3 . playSound ({ sound = ..., reference = ..., loop = ..., mixChannel = ..., volume = ..., pitch = ..., soundPath = ... }) Parameters : params (table) sound ( tes3sound , string): The sound object, or id of the sound to look for. reference ( tes3reference , tes3mobileActor , string): Optional . The reference to attach the sound to. loop (boolean): Default : false . If true, the sound will loop. mixChannel (number): Default : tes3.soundMix.effects . The channel to base volume off of. Maps to tes3.soundMix constants. volume (number): Default : 1.0 . A value between 0.0 and 1.0 to scale the volume off of. pitch (number): Default : 1.0 . The pitch-shift multiplier. For 22kHz audio (most typical) it can have the range [0.005, 4.5]; for 44kHz audio it can have the range [0.0025, 2.25]. soundPath (string): Optional . The path to a custom soundfile (useful for playing sounds that are not registered in the Construction Set). Starts in Data Files\\Sound. Returns : executed (boolean) tes3.playVoiceover \u2693\ufe0e Causes a target actor to play a voiceover. local played = tes3 . playVoiceover ({ actor = ..., voiceover = ... }) Parameters : params (table) actor ( tes3mobileActor , tes3reference , string): The actor to play a voiceover. voiceover (number): Maps to tes3.voiceover constants. Returns : played (boolean) tes3.positionCell \u2693\ufe0e Positions a reference to another place. local executed = tes3 . positionCell ({ reference = ..., cell = ..., position = ..., orientation = ..., forceCellChange = ..., suppressFader = ..., teleportCompanions = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Default : tes3.mobilePlayer . The reference to reposition. cell ( tes3cell ): Optional . The cell to move the reference to. If not provided, the reference will be moved to a cell in the exterior worldspace at the position provided. position ( tes3vector3 , table): The position to move the reference to. orientation ( tes3vector3 , table): Optional . The new orientation of the reference. forceCellChange (boolean): Default : false . When true, forces the game to update a reference that has moved within a single cell, as if it was moved into a new cell. suppressFader (boolean): Default : false . When moving the player, can be used to prevent the fade in and out visual effect. teleportCompanions (boolean): Default : true . If used on the player, determines if companions should also be teleported. Returns : executed (boolean) tes3.pushKey \u2693\ufe0e Simulates pushing a keyboard key. tes3 . pushKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace. tes3.random \u2693\ufe0e Returns a value from Morrowind's random number generator. This is not preferrable to lua's math.random function, but may be necessary for reproducing Morrowind's generation. tes3 . random ( seed ) Parameters : seed (number): Optional . If provided, it the number generator is seeded with this value. Pointers to objects may be used, such as a reference's sceneNode, to create a consistent if less than random seed. tes3.rayTest \u2693\ufe0e Performs a ray test and returns various information related to the result(s). If findAll is set, the result will be a table of results, otherwise only the first result is returned. Tip Keep maximum size of objects reasonable, as well as triangle counts Whenever possible set a maxDistance in your rayTest calls Keep a cached table of ignored objects that you pass to rayTest Whenever possible call ray test on only a subset of the game's scene graph. It can be worldPickRoot for interactable objects, worldLandscapeRoot , or worldObjectRoot for other static, non-interactable objects. You could even pass a smaller subset of the scene graph with a different NiNode you aquired yourself. If your mod's logic only needs specific things you can narrow it down for big performance improvement. local result = tes3 . rayTest ({ position = ..., direction = ..., findAll = ..., maxDistance = ..., sort = ..., useModelBounds = ..., useModelCoordinates = ..., useBackTriangles = ..., observeAppCullFlag = ..., root = ..., returnColor = ..., returnNormal = ..., returnSmoothNormal = ..., returnTexture = ..., ignore = ... }) Parameters : params (table) position ( tes3vector3 , table): Position of the ray origin. direction ( tes3vector3 , table): Direction of the ray. Does not have to be unit length. findAll (boolean): Default : false . If true, the ray test won't stop after the first result. maxDistance (number): Default : 0 . The maximum distance that the test will run. sort (boolean): Default : true . If true, the results will be sorted by distance from the origin position. useModelBounds (boolean): Default : false . If true, model bounds will be tested for intersection. Otherwise triangles will be used. useModelCoordinates (boolean): Default : false . If true, model coordinates will be used instead of world coordinates. useBackTriangles (boolean): Default : false . Include intersections with back-facing triangles. observeAppCullFlag (boolean): Default : true . Ignore intersections with culled (hidden) models. root ( niNode ): Default : tes3.game.worldRoot . Node pointer to node scene. To reduce the computational work, consider passing only a smaller subset of the worldRoot to improve performance. The typical nodes you can pass here are: tes3.game.worldLandscapeRoot , worldObjectRoot , and worldPickRoot . returnColor (boolean): Default : false . Calculate and return the vertex color at intersections. returnNormal (boolean): Default : false . Calculate and return the vertex normal at intersections. returnSmoothNormal (boolean): Default : false . Use normal interpolation for calculating vertex normals. returnTexture (boolean): Default : false . Calculate and return the texture coordinate at intersections. ignore (table<integer, niNode | tes3reference >): Optional . An array of references and/or scene graph nodes to cull from the result(s). Returns : result ( niPickRecord , niPickRecord [], nil) Example: Get Activation Target This example performs a ray test to match the normal activation target test. Unlike tes3.getPlayerTarget() this will return objects not normally available for activation. local hitResult = tes3 . rayTest ({ position = tes3 . getPlayerEyePosition (), direction = tes3 . getPlayerEyeVector () }) local hitReference = hitResult and hitResult . reference if ( hitReference == nil ) then return end tes3 . messageBox ( \"The player is looking at a '%s'\" , hitReference . object . name or hitReference . object . id ) Example: Get Camera Target This example performs a ray test to see what the camera is currently looking at. local hitResult = tes3 . rayTest ({ position = tes3 . getCameraPosition (), direction = tes3 . getCameraVector () }) local hitReference = hitResult and hitResult . reference if ( hitReference == nil ) then return end tes3 . messageBox ( \"The camera is looking at a '%s'\" , hitReference . object . name or hitReference . object . id ) Example: Multiple Results This example performs a ray test and displays all results in the entire ray test, rather than ending at the first object hit. local results = tes3 . rayTest { tes3 . getCameraPosition (), direction = tes3 . getCameraVector (), findAll = true } if results then for i , hit in pairs ( results ) do mwse . log ( \"Ray hit #%d: %s\" , i , hit . reference or \"<non-reference>\" ); end end Example: Save rayTest result for use at a later point If you plan to use the results of rayTest, you should make sure it still exists. For example, an object which was in a list of results of rayTest can get unloaded when the player changes cells and become invalid, so it shouldn't be accessed. local result = tes3 . rayTest { -- the result can get invalidated position = tes3 . getPlayerEyePosition (), direction = tes3 . getPlayerEyeVector (), ignore = { tes3 . player } } local refHandle if result then refHandle = tes3 . makeSafeObjectHandle ( result . reference ) end local function myFunction () -- Before using the reference, we need to check that it's still valid. -- References get unloaded on cell changes etc. if refHandle : valid () then -- Now we can safely do something with our stored reference. local reference = refHandle : getObject () end end tes3.releaseKey \u2693\ufe0e Simulates releasing a keyboard key. tes3 . releaseKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace. tes3.removeEffects \u2693\ufe0e Removes magic effects from a given reference. Requires that either the effect or castType parameter be provided. tes3 . removeEffects ({ reference = ..., effect = ..., castType = ..., chance = ..., removeSpell = ... }) Parameters : params (table) reference ( tes3reference ): Target reference to remove effects from. effect (integer): Optional . Maps to tes3.effect constants. castType (integer): Optional . Maps to tes3.spellType constants. chance (number): Default : 100 . The chance for the effect to be removed. removeSpell (boolean): Optional . If removing by cast type, determines if the spell should be removed from the target's spell list. Defaults to true if castType is not tes3.spellType.spell. This causes diseases and curses to be removed when dispelled. Example: Simulating a Dispel In this example there is a 50 % chance that any Water Breathing magic effects will be removed from the player when he/she is underwater. local function example ( e ) -- We only care about the player if ( e . mobile . objectType ~= tes3 . objectType . mobilePlayer ) then return end local cell = tes3 . mobilePlayer . cell if ( cell . isInterior and not cell . hasWater ) then return end local waterLevel = cell . waterLevel local headPosition = tes3 . mobilePlayer . position . z + tes3 . mobilePlayer . height local underwater = headPosition < waterLevel if underwater then -- There is a 50 % chance that any Water Breathing effect will be removed from the player tes3 . removeEffects ({ reference = tes3 . player , chance = 50 , effect = tes3 . effect . waterBreathing , }) end end event . register ( tes3 . event . initialized , function () event . register ( tes3 . event . calcMoveSpeed , example ) end ) tes3.removeItem \u2693\ufe0e Removes an item from a given reference's inventory. local removedCount = tes3 . removeItem ({ reference = ..., item = ..., itemData = ..., deleteItemData = ..., count = ..., playSound = ..., reevaluateEquipment = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to remove items from. item ( tes3item , string): The item to remove. itemData ( tes3itemData ): Optional . The item data for the exact item to remove. deleteItemData ( tes3itemData ): Optional . Whether to delete the item data after remove succeeds. Automatically set if itemData is used. Does not need to be specified for normal usage. count (number): Default : 1 . The maximum number of items to remove. playSound (boolean): Default : true . If false, the up/down sound for the item won't be played. reevaluateEquipment (boolean): Default : true . If true, and the item removed is armor, clothing, or a weapon, the actor will reevaluate its equipment choices to see if it needs to equip a new item. This does not affect the player. updateGUI (boolean): Default : true . If false, the function won't manually resync the player's GUI state. This can result in some optimizations, though tes3ui.forcePlayerInventoryUpdate() must manually be called after all inventory updates are finished. Returns : removedCount (number) tes3.removeItemData \u2693\ufe0e Removes and deletes item data from a given reference, or from their inventory. If no itemData is provided, it will be removed from the reference itself. local wasRemoved = tes3 . removeItemData ({ from = ..., item = ..., itemData = ..., force = ..., ignoreOwnership = ..., updateGUI = ... }) Parameters : params (table) from ( tes3reference , tes3mobileActor , string): The reference or mobile whose inventory will be modified. item ( tes3item , string): The item to remove item data for. itemData ( tes3itemData ): Optional . The exact item data to remove. If no itemData is provided, the itemData from the reference itself will be removed. force (boolean): Default : false . If true, no checks are made to see if the item data should be deleted. It will always be purged. ignoreOwnership (boolean): Default : true . If force is false, a check will be made to see if the item data is empty and can be deleted. By default this ignores any ownership data. Setting this to false will override that behavior. updateGUI (boolean): Default : true . If false, the player or contents menu won't be updated. Returns : wasRemoved (boolean) tes3.removeSound \u2693\ufe0e Stops a sound playing. Without a reference, it will match unattached sounds. With a reference, it will only match a sound playing on that specific reference. tes3 . removeSound ({ sound = ..., reference = ... }) Parameters : params (table) sound ( tes3sound , string): The sound object, or id of the sound to look for. reference ( tes3reference , tes3mobileActor , string): Optional . The reference the sound is attached to. tes3.removeSpell \u2693\ufe0e Removes a spell from an actor's spell list. If the spell is passive, any active effects from that spell are retired. local wasRemoved = tes3 . removeSpell ({ reference = ..., actor = ..., spell = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to remove the spell from. To manipulate an actor without specifying any particular reference, use actor instead. actor ( tes3actor , string): Who to remove the spell from. Providing a base actor can be done before a save has been loaded, but may not correctly update effects for instanced versions of that actor in an active save. spell ( tes3spell , string): The spell to remove. updateGUI (boolean): Default : true . If true, the GUI will be updated respecting the removal of the spell. This can be useful to disable when batch-removing many spells. The batch should be ended with tes3.updateMagicGUI to reflect the changes. Returns : wasRemoved (boolean): True if the spell was successfully removed. This can be false if the spell comes from a race or birthsign. tes3.removeVisualEffect \u2693\ufe0e Removes one or more visual effects created either through magical effects or tes3.createVisualEffect() . local removedCount = tes3 . removeVisualEffect ({ vfx = ..., avObject = ..., serial = ..., reference = ... }) Parameters : params (table) vfx ( tes3vfx ): Optional . If provided, the specific VFX handle will be deleted. avObject ( niAVObject ): Optional . If provided, any VFXs associated with the given niAVObject will be deleted. serial (number): Optional . The magic source instance serial number to remove effects for. This must be paired with a reference as well. reference ( tes3reference , string): Optional . The reference to remove all visual effects from. A serial may also be provided. Returns : removedCount (number): The amount of VFX removed by this function call. tes3.runLegacyScript \u2693\ufe0e This function will compile and run a mwscript chunk of code. This is not ideal to use, but can be used for features not yet exposed to lua. local executed = tes3 . runLegacyScript ({ script = ..., source = ..., command = ..., variables = ..., reference = ..., dialogue = ..., info = ... }) Parameters : params (table) script ( tes3script ): Default : tes3.worldController.scriptGlobals . The base script to base the execution from. source (number): The compilation source to use. Defaults to tes3.scriptSource.default command (string): The script text to compile and run. variables (tes3scriptVariables): Optional . If a reference is provided, the reference's variables will be used. reference ( tes3reference , tes3mobileActor , string): The reference to target for execution. dialogue ( tes3dialogue , string): Optional . If compiling for dialogue context, the dialogue associated with the script. info ( tes3dialogueInfo ): Optional . The info associated with the dialogue. Returns : executed (boolean) tes3.saveGame \u2693\ufe0e Saves the game. local saved = tes3 . saveGame ({ file = ..., name = ... }) Parameters : params (table) file (string): Default : \"quiksave\" . The filename of the save that will be created, without extension. name (string): Default : \"Quicksave\" . The display name of the save. Returns : saved (boolean) tes3.say \u2693\ufe0e Plays a sound file, with an optional alteration and subtitle. Note : MP3 voice files must conform to the MPEG Layer-3, 64 Kbps 44100 kHz, 16-bit mono specification. tes3 . say ({ reference = ..., soundPath = ..., pitch = ..., volume = ..., forceSubtitle = ..., subtitle = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to make say something. soundPath (string): A path to a valid sound file. pitch (number): Default : 1 . A pitch shift to adjust the sound with. volume (number): Default : 1 . The volume to play the sound at, relative to the voice mix channel. forceSubtitle (boolean): Default : false . If true a subtitle will be shown, even if subtitles are disabled. subtitle (string): Optional . The subtitle to show if subtitles are enabled, or if forceSubtitle is set. tes3.set3rdPersonCameraOffset \u2693\ufe0e Changes the 3rd person camera offset from the player's head. Important This function can be used once tes3worldController and tes3mobilePlayer have finished initializing. tes3 . set3rdPersonCameraOffset ({ offset = ... }) Parameters : params (table) offset ( tes3vector3 ): The offset vector. tes3.setAIActivate \u2693\ufe0e Configures a mobile actor to activate an object. tes3 . setAIActivate ({ reference = ..., target = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ): This actor will activate the provided target reference. target ( tes3reference ): The reference to activate. reset (boolean): Default : true . tes3.setAIEscort \u2693\ufe0e Configures a mobile actor to escort another actor to a destination. Escorting actor will protect and wait for the escortee to catch up. Its advisible to make the target actor follow the escorting actor with tes3.setAIFollow() , because the escorting actor will otherwise wait the escortee forever. tes3 . setAIEscort ({ reference = ..., target = ..., destination = ..., duration = ..., cell = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ): The escorting actor. target ( tes3reference , tes3mobileActor ): The actor being escorted. destination ( tes3vector3 , table) duration (number): Default : 0 . How long the escorter will do the escorting, in hours. cell ( tes3cell , string): Optional . reset (boolean): Default : true . tes3.setAIFollow \u2693\ufe0e Configures a mobile actor to follow another actor to a destination. tes3 . setAIFollow ({ reference = ..., target = ..., destination = ..., duration = ..., cell = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ): This is the actor that will follow another one. target ( tes3reference , tes3mobileActor ): The actor to follow. destination ( tes3vector3 , table): Optional . duration (number): Default : 0 . How long the follower will follow, in hours. cell ( tes3cell , string): Optional . reset (boolean): Default : true . tes3.setAITravel \u2693\ufe0e Configures a mobile actor to travel to a destination. tes3 . setAITravel ({ reference = ..., destination = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ) destination ( tes3vector3 , table) reset (boolean): Default : true . tes3.setAIWander \u2693\ufe0e Configures a mobile actor to wander around a cell. tes3 . setAIWander ({ reference = ..., idles = ..., range = ..., duration = ..., time = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ): This actor will wander around. idles (number[]): An array with 8 values that corresponds to the chance of playing each idle animation. For more info see tes3aiPackageWander.idles . range (number): Default : 0 . duration (number): Default : 0 . How long the actor will be wandering around, in hours. time (number): Default : 0 . reset (boolean): Default : true . tes3.setAnimationTiming \u2693\ufe0e This function sets a reference's animation groups' timings to a specified value. tes3 . setAnimationTiming ({ reference = ..., timing = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): A reference whose animation groups' timings to set. timing (number, table): If one parameter is provided, all animation data timings will be set to the timing provided. If a table with 3 timings is provided, animation data timings will be set accordingly. tes3.setDestination \u2693\ufe0e Sets or changes the destination of a door to a new location. tes3 . setDestination ({ reference = ..., position = ..., orientation = ..., cell = ... }) Parameters : params (table) reference ( tes3reference ): The door reference that will be updated. position ( tes3vector3 , table): The new coordinates of the transition. orientation ( tes3vector3 , table): The new rotation to use after transition. cell ( tes3cell , string): Optional . The cell to transition to, if transitioning to an interior. tes3.setEnabled \u2693\ufe0e Enables or disables a reference. local success = tes3 . setEnabled ({ reference = ..., toggle = ..., enabled = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to enable/disable. toggle (boolean): Default : false . If true, the enabled state will be toggled. enabled (boolean): Default : true . If not toggling, setting enabled to true will enable the reference or to false will disable the reference. Returns : success (boolean) tes3.setGlobal \u2693\ufe0e Sets the value of a global value. If the global could not be found, the function returns false. local value = tes3 . setGlobal ( id , value ) Parameters : id (string) value (number) Returns : value (boolean) tes3.setItemIsStolen \u2693\ufe0e This function changes an item's stolen flag. Morrowind handles stealing by marking the base item (not the inventory stack) with NPCs that you have stolen that item from. The NPC will recognize an item as stolen if they are marked as stolen on the base item. tes3 . setItemIsStolen ({ item = ..., from = ..., stolen = ... }) Parameters : params (table) item ( tes3item ): The item whose stolen flag to modify. from ( tes3creature , tes3npc , tes3faction , nil): Who or what to set/clear the stolen state for. If not provided, the stolen state can be cleared (but not set) for all objects. stolen (boolean): Default : true . If this parameter is set to true, the item will be flagged as stolen. Otherwise, the item's stolen flag will be removed. tes3.setJournalIndex \u2693\ufe0e Sets the index of a given journal in a way similar to the mwscript function SetJournalIndex. local wasSet = tes3 . setJournalIndex ({ id = ..., index = ..., speaker = ..., showMessage = ... }) Parameters : params (table) id ( tes3dialogue , string) index (number) speaker ( tes3mobileActor , tes3reference , string) showMessage (boolean): Default : false . If set, a message may be shown to the player. Returns : wasSet (boolean) tes3.setKillCount \u2693\ufe0e Sets player's kill count of a certain type of actor. tes3 . setKillCount ({ actor = ..., count = ... }) Parameters : params (table) actor ( tes3actor , string): The actor (or their ID) for whom to set player's kill count. count (number): Number of kills that will be set. tes3.setLockLevel \u2693\ufe0e Sets a locked reference's lock level. This does not lock the object. local set = tes3 . setLockLevel ({ reference = ..., level = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) level (number) Returns : set (boolean) tes3.setMarkLocation \u2693\ufe0e This function sets the player's mark location to the one specified. tes3 . setMarkLocation ({ position = ..., rotation = ..., cell = ... }) Parameters : params (table) position ( tes3vector3 , number[]): Coordinates of the mark's position. rotation (number): Default : tes3.player.orientation.z . This argument controls which direction the player's mark location will be facing. cell ( tes3cell ): Optional . A cell in which the mark should be placed. This argument is unnecessary when setting the Mark's location to an exterior cell. tes3.setOwner \u2693\ufe0e This function sets the owner of a reference. tes3 . setOwner ({ reference = ..., remove = ..., owner = ..., requiredGlobal = ..., requiredRank = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): A reference whose owner to set. remove (boolean): Default : false . If this parameter is set to true, reference's owner field will be removed. owner ( tes3npc , tes3faction , string): Assigns this NPC or a faction as the owner of the reference. requiredGlobal ( tes3globalVariable ): Optional . If owner is set to NPC, requiredGlobal variable can be set. requiredRank (number): Default : 0 . If owner is set to faction, requitedRank variable controls minimal rank in faction the player has to have to be able to freely take the reference. tes3.setPlayerControlState \u2693\ufe0e Enables or disables player's controls state. local changedControlState = tes3 . setPlayerControlState ({ enabled = ..., attack = ..., jumping = ..., magic = ..., vanity = ..., viewSwitch = ... }) Parameters : params (table): Optional . enabled (boolean): Default : false . Setting this to false will disable any kind of control. attack (boolean): Default : false . If this is false, it will block player from attacking. jumping (boolean): Default : false . If this is false, it will block player from jumping. magic (boolean): Default : false . If this is false, it will block player from using magic. vanity (boolean): Default : false . If this is false, it will block player from going to vanity mode. viewSwitch (boolean): Default : false . If this is false, it will block player changing view mod from 1st to 3rd person camera and vice versa. Returns : changedControlState (boolean) tes3.setSourceless \u2693\ufe0e Sets an object (of any kind) to be sourceless, which are objects the game does not store in savegames. This can be useful for mod-created temporary objects which are not necessary to save. tes3 . setSourceless ( object , sourceless ) Parameters : object ( tes3baseObject ): The object whose sourceless flag to modify. sourceless (boolean): Default : true . Allows flagging an object as sourceless or undoing that action. tes3.setStatistic \u2693\ufe0e Sets a statistic on a given actor. This should be used instead of manually setting values on the game structures, to ensure that events and GUI elements are properly handled. Either skill, attribute, or name must be provided. tes3 . setStatistic ({ attribute = ..., base = ..., current = ..., limit = ..., name = ..., reference = ..., skill = ..., value = ... }) Parameters : params (table) attribute (number): Optional . The attribute to set. base (number): Optional . If set, the base value will be set. current (number): Optional . If set, the current value will be set. limit (boolean): Default : false . If set, the attribute won't rise above 100 or fall below 0. name (string): Optional . A generic name of an attribute to set. reference ( tes3mobileActor , tes3reference , string) skill (number): Optional . The skill to set. value (number): Optional . If set, both the base and current value will be set. tes3.setTrap \u2693\ufe0e Sets the trap on a given reference. local trapped = tes3 . setTrap ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) spell ( tes3spell , string) Returns : trapped (boolean) tes3.setVanityMode \u2693\ufe0e Toggles the camera into vanity mode. In vanity mode the camera is in third person and it is orbiting slowly around the player character. Returns true if changed to vanity mode. Note that unlike the vanity mode caused by not doing anything for a while, this vanity mode must be toggled to go off. local changedVanityMode = tes3 . setVanityMode ({ enabled = ..., checkVanityDisabled = ..., toggle = ... }) Parameters : params (table): Optional . enabled (boolean): Default : true . This flag sets the vanity mode as enabled or disabled. checkVanityDisabled (boolean): Default : true . This will prevent changing vanity mode according to vanityDisabled flag on tes3.mobilePlayer. toggle (boolean): Default : false . When this flag is set to true. The vanity mode will be toggled. If the player was in vanity mode, this will make the player leave vanity mode. Conversly, if the player wasn't in the vanity mode, this will turn on the vanity mode. Returns : changedVanityMode (boolean) tes3.setWerewolfKillCount \u2693\ufe0e Sets player's kill count as a werewolf. tes3 . setWerewolfKillCount ({ count = ... }) Parameters : params (table) count (number): Number of kills. tes3.showAlchemyMenu \u2693\ufe0e This function opens the alchemy menu. tes3 . showAlchemyMenu () tes3.showContentsMenu \u2693\ufe0e This function opens the contents menu. This menu is used for containers, companion inventories, and pickpocket attempts. local wasShown = tes3 . showContentsMenu ({ reference = ..., pickpocket = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference to open the contents of. pickpocket (boolean): Default : false . If true, the contents menu will open in the context of an attempted pickpocketing. Returns : wasShown (boolean): If true, the contents menu was successfully shown. tes3.showDialogueMenu \u2693\ufe0e This function opens the dialogue menu. This behaves similar to the ForceGreeting mwscript command. local wasShown = tes3 . showDialogueMenu ({ reference = ..., checkAllowWerewolfForceGreeting = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference to open dialogue with. checkAllowWerewolfForceGreeting (boolean): Default : true . If true, the AllowWerewolfForceGreeting variable must exist on the reference's script to allow opening a dialogue while the player is a werewolf. This can be set to false to override the vanilla behavior. Returns : wasShown (boolean): If true, the dialogue window was successfully shown. tes3.showRepairServiceMenu \u2693\ufe0e This function opens the repair service menu. tes3 . showRepairServiceMenu ({ serviceActor = ... }) Parameters : params (table): Optional . serviceActor ( tes3mobileActor , tes3reference , string): Default : tes3mobilePlayer . The actor to use for calculating the service price. tes3.showRestMenu \u2693\ufe0e This function opens the resting menu and returns true on success. If the player can't rest currently, it returns false. Various parameters can be used to allow resting in situations not normally possible. local success = tes3 . showRestMenu ({ checkForEnemies = ..., checkForSolidGround = ..., checkSleepingIllegal = ..., checkIsWerewolf = ..., showMessage = ..., resting = ..., waiting = ... }) Parameters : params (table): Optional . checkForEnemies (boolean): Default : true . Perform a check whether there are enemies nearby before opening rest menu. If there are, false is returned. checkForSolidGround (boolean): Default : true . Perform a check if the player is underwater. If underwater, false is returned. checkSleepingIllegal (boolean): Default : true . Perform a check if the sleeping in the current cell is illegal. If illegal, then the player will be prompted to wait instead of rest. checkIsWerewolf (boolean): Default : true . Perform a check if the player is Werewolf. If they are, then the player will be prompted to wait instead of rest. showMessage (boolean): Default : true . Should a messagebox be shown if the player can't open resting menu because some condition isn't met. resting (boolean): Default : true . Should this be a rest? waiting (boolean): Default : false . Or, is this a wait? Returns : success (boolean) tes3.showSpellmakingMenu \u2693\ufe0e This function opens the spellmaking menu and returns true on success. local success = tes3 . showSpellmakingMenu ({ serviceActor = ..., useDialogActor = ... }) Parameters : params (table) serviceActor ( tes3mobileActor , tes3reference , string): Optional . The actor to use for calculating the service price. If none is provided, an open dialog menu's service actor will be used instead. useDialogActor (boolean): Default : true . If set to false, the dialog menu service actor will be ignored. If false, a serviceActor must be provided. Returns : success (boolean) tes3.skipAnimationFrame \u2693\ufe0e Skips a given reference's animation for a single frame. tes3 . skipAnimationFrame ({ reference = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference whose animation frame will be skipped. tes3.streamMusic \u2693\ufe0e This function interrupts the current music to play the specified music track. local executed = tes3 . streamMusic ({ path = ..., situation = ..., crossfade = ... }) Parameters : params (table) path (string): Path to the music file, relative to Data Files/music/. situation (number): Default : tes3.musicSituation.uninterruptible . Determines what kind of gameplay situation the music should stay active for. Explore music plays during non-combat, and ends when combat starts. Combat music starts during combat, and ends when combat ends. Uninterruptible music always plays, ending only when the track does. This value maps to tes3.musicSituation constants. crossfade (number): Default : 1.0 . The duration in seconds of the crossfade from the old to the new track. The default is 1.0. Returns : executed (boolean) tes3.tapKey \u2693\ufe0e Simulates tapping a keyboard key. tes3 . tapKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace. tes3.testLineOfSight \u2693\ufe0e Checks if there is a clear line of sight between two references, or two points in space, in the same method that the game uses for actor vision. You should pass two references, or two positions and heights. Only certain object types count as blocking for the purposes of the test: Statics, activators, containers, doors, and lights with non-zero weight. The collision root node is used for testing, if present in the model. local hasLineOfSight = tes3 . testLineOfSight ({ reference1 = ..., reference2 = ..., position1 = ..., height1 = ..., position2 = ..., height2 = ... }) Parameters : params (table) reference1 ( tes3reference ): Position of the starting point of the LoS check. For actors, this point is set to position of this reference's head. For other objects the starting point is at the top of its bounding box. reference2 ( tes3reference ): Position of the ending point of the LoS check. For actors, this point is set to position of this reference's head. For other objects the ending point is at the top of its bounding box. position1 ( tes3vector3 , table): Position of the starting point of the LoS check. Modified by height1. height1 ( tes3vector3 , table): Optional . Moves the starting point upwards (+Z direction) by this amount. Normally used to simulate head height from a position that is on the ground. Defaults to 0. position2 ( tes3vector3 , table): Position of the ending point of the LoS check. Modified by height2. height2 ( tes3vector3 , table): Optional . Moves the starting point upwards (+Z direction) by this amount. Normally used to simulate head height from a position that is on the ground. Defaults to 0. Returns : hasLineOfSight (boolean) tes3.togglePOV \u2693\ufe0e Forces a toggle of the player's POV the next simulation frame, and returns if the player was previously in 3rd person. Multiple calls in the same frame will not stack. local was3rdPerson = tes3 . togglePOV () Returns : was3rdPerson (boolean) tes3.transferItem \u2693\ufe0e Moves one or more items from one reference to another. Returns the actual amount of items successfully transferred. local transferredCount = tes3 . transferItem ({ from = ..., to = ..., item = ..., itemData = ..., count = ..., playSound = ..., limitCapacity = ..., reevaluateEquipment = ..., equipProjectiles = ..., updateGUI = ... }) Parameters : params (table) from ( tes3reference , tes3mobileActor , string): Who to take items from. to ( tes3reference , tes3mobileActor , string): Who to give items to. item ( tes3item , string): The item to transfer. itemData ( tes3itemData ): Optional . The specific item data to transfer if, for example, you want to transfer a specific player item. count (number): Default : 1 . The maximum number of items to transfer. playSound (boolean): Default : true . If false, the up/down sound for the item won't be played. limitCapacity (boolean): Default : true . If false, items can be placed into containers that shouldn't normally be allowed. This includes organic containers, and containers that are full. reevaluateEquipment (boolean): Default : true . If true, and the item transferred is armor, clothing, or a weapon, the actors will reevaluate their equipment choices to see if the new item is worth equipping. This does not affect the player. equipProjectiles (boolean): Default : true . If true, and the reference has the same projectile already equipped, the stacks will be merged. This will only work if the GUI is updated. updateGUI (boolean): Default : true . If false, the function won't manually resync the player's GUI state. This can result in some optimizations, though tes3ui.forcePlayerInventoryUpdate() must manually be called after all inventory updates are finished. Returns : transferredCount (number) tes3.triggerCrime \u2693\ufe0e Emulates the player committing a crime. Returns true if the crime was witnessed by an actor. local result = tes3 . triggerCrime ({ type = ..., victim = ..., value = ..., forceDetection = ... }) Parameters : params (table) type (number): Default : tes3.crimeType.theft . The type of crime to be committed. Maps to values in the tes3.crimeType table. victim ( tes3mobileNPC , tes3actor , tes3faction ): Default : tes3.mobilePlayer . The victim of the crime. This can be an individual actor or a entire faction. Has no effect on crimes with a type of tes3.crimeType.trespass or tes3.crimeType.werewolf . value (number): Default : 0 . Only valid if type is tes3.crimeType.theft . The value of the stolen objects. forceDetection (boolean): Default : false . If true , bypasses regular detection logic and forces all nearby actors to detect the crime. Returns : result (boolean) tes3.undoTransform \u2693\ufe0e Changes a reference back from werewolf form to human. This function works only on a reference infected with Lycanthropy, be it the player or any other reference. Returns true if successful. local success = tes3 . undoTransform ({ reference = ... }) Parameters : params (table) reference ( tes3reference ): A reference to change back to human. Returns : success (boolean) tes3.unhammerKey \u2693\ufe0e Stops simulating hammering a keyboard key. tes3 . unhammerKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace. tes3.unlock \u2693\ufe0e Unlocks an object. Returns true if the object can be and wasn't already unlocked. local unlocked = tes3 . unlock ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) Returns : unlocked (boolean) tes3.updateInventoryGUI \u2693\ufe0e Forces the GUI to update inventory-relevant elements for a given reference. This can be used after many calls to inventory-manipulating functions while passing updateGUI as false to resync inventory tiles, container weights, and companion data. tes3 . updateInventoryGUI ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to update GUI elements for. tes3.updateJournal \u2693\ufe0e Updates the journal index in a way similar to the mwscript function Journal. local wasSet = tes3 . updateJournal ({ id = ..., index = ..., showMessage = ... }) Parameters : params (table) id ( tes3dialogue , string) index (number) showMessage (boolean): Default : false . If set, a message may be shown to the player. Returns : wasSet (boolean) tes3.updateMagicGUI \u2693\ufe0e Forces the GUI to update magic-relevant elements for a given reference. This can be used after many calls to magic- or magic item-manipulating functions while passing updateGUI as false to resync inventory tiles, container weights, and companion data. tes3 . updateMagicGUI ({ reference = ..., updateSpells = ..., updateEnchantments = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to update GUI elements for. updateSpells (boolean): Default : true . Determines if the spell and power lists are refreshed. updateEnchantments (boolean): Default : true . Determines if the enchanted items list is refreshed. tes3.wakeUp \u2693\ufe0e This function wakes player up and returns true if successful. Note this function returns false if WorldController or MobilePlayer aren't initialized, and if the player is not sleeping or waiting local wokeUp = tes3 . wakeUp () Returns : wokeUp (boolean)","title":"Tes3"},{"location":"apis/tes3/#tes3","text":"The tes3 library provides the majority of the functions for interacting with the game system.","title":"tes3"},{"location":"apis/tes3/#properties","text":"","title":"Properties"},{"location":"apis/tes3/#tes3bsaloader","text":"One of the core game objects, responsible for loaded BSA files. Returns : result ( tes3bsaLoader )","title":"tes3.bsaLoader"},{"location":"apis/tes3/#tes3datahandler","text":"One of the core game objects. Returns : result ( tes3dataHandler )","title":"tes3.dataHandler"},{"location":"apis/tes3/#tes3game","text":"One of the core game objects. Returns : result ( tes3game )","title":"tes3.game"},{"location":"apis/tes3/#tes3installdirectory","text":"The currently executed root Morrowind installation path. Returns : result (string)","title":"tes3.installDirectory"},{"location":"apis/tes3/#tes3magicschoolskill","text":"This table is used to convert numerical magic school IDs to their respective skill IDs. These constants will return their respective tes3.skill constants. Returns : result (number) Example: Convert magic school from event data to a respective skill The example below gives the player 100 experience for failing to cast a spell. Here we can see how tes3.magicSchoolSkill is used. local function OnSpellFailed ( e ) local skill = tes3 . magicSchoolSkill [ e . expGainSchool ] -- Note: e.expGainSchool is a value in tes3.magicSchool constants table tes3 . mobilePlayer : exerciseSkill ( skill , 100 ) end event . register ( tes3 . event . spellCastedFailure , OnSpellFailed )","title":"tes3.magicSchoolSkill"},{"location":"apis/tes3/#tes3mobileplayer","text":"The player's mobile actor. Returns : result ( tes3mobilePlayer )","title":"tes3.mobilePlayer"},{"location":"apis/tes3/#tes3player","text":"A reference to the player. Returns : result ( tes3reference )","title":"tes3.player"},{"location":"apis/tes3/#tes3player1stperson","text":"A reference used for the player's first person hands. Returns : result ( tes3reference )","title":"tes3.player1stPerson"},{"location":"apis/tes3/#tes3worldcontroller","text":"One of the core game objects. Returns : result ( tes3worldController )","title":"tes3.worldController"},{"location":"apis/tes3/#functions","text":"","title":"Functions"},{"location":"apis/tes3/#tes3addarmorslot","text":"Registers a new armor slot. Adds a new place for armor pieces with a matching slot number to equip to. local wasAdded = tes3 . addArmorSlot ({ slot = ..., name = ..., weight = ..., scalar = ... }) Parameters : params (table) slot (number): Armor slot number. A number greater than 10 to configure a slot for. name (string) weight (number): Default : 0 . A stand-in for the armor base weight value, typically controlled by a GMST (e.g. iHelmWeight). scalar (number): Default : 0.1 . A multiplier with range 0.0-1.0 that controls how much of an item's armor value applies to a character's overall armor rating. For comparison, standard chest armor uses 0.3, helmets, greaves and pauldrons use 0.1, and gauntlets use 0.05. Returns : wasAdded (boolean)","title":"tes3.addArmorSlot"},{"location":"apis/tes3/#tes3addclothingslot","text":"Registers a new clothing slot. Adds a new place for clothing pieces with a matching slot number to equip to. tes3 . addClothingSlot ({ slot = ..., name = ... }) Parameters : params (table) slot (number): Clothing slot number. A number greater than 9 to configure a slot for. name (string)","title":"tes3.addClothingSlot"},{"location":"apis/tes3/#tes3additem","text":"Adds an item to a given reference's inventory or mobile's inventory. local addedCount = tes3 . addItem ({ reference = ..., item = ..., itemData = ..., soul = ..., count = ..., playSound = ..., showMessage = ..., limit = ..., reevaluateEquipment = ..., equipProjectiles = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to give items to. item ( tes3item , tes3leveledItem , string): The item to add. If a leveled item is passed, it will be resolved and added. itemData ( tes3itemData ): Optional . The item data for the item. soul ( tes3creature , tes3npc ): Optional . For creating filled soul gems. count (number): Default : 1 . The maximum number of items to add. playSound (boolean): Default : true . If false , the up/down sound for the item won't be played. This only applies if reference is the player. showMessage (boolean): Default : false . If true , a message box notifying the player will be shown. This only applies if reference is the player. limit (boolean): Default : false . If false , items can be placed into containers that shouldn't normally be allowed. This includes organic containers, and containers that are full. reevaluateEquipment (boolean): Default : true . If true , and the item added is armor, clothing, or a weapon, the actor will reevaluate its equipment choices to see if the new item is worth equipping. This does not affect the player. equipProjectiles (boolean): Default : true . If true , and the reference has the same projectile already equipped, the stacks will be merged. This will only work if the GUI is updated. updateGUI (boolean): Default : true . If false , the function won't manually resync the player's GUI state. This can result in some optimizations, though tes3ui.forcePlayerInventoryUpdate() must manually be called after all inventory updates are finished. Returns : addedCount (number)","title":"tes3.addItem"},{"location":"apis/tes3/#tes3additemdata","text":"Creates an item data if there is room for a new stack in a given inventory. This can be then used to add custom user data or adjust an item's condition. This will return nil if no item data could be allocated for the item -- for example if the reference doesn't have the item in their inventory or each item of that type already has item data. local createdData = tes3 . addItemData ({ to = ..., item = ..., updateGUI = ... }) Parameters : params (table) to ( tes3reference , tes3mobileActor , string): The reference or mobile whose inventory will be modified. item ( tes3item , string): The item to create item data for. updateGUI (boolean): Default : true . If false, the player or contents menu won't be updated. Returns : createdData ( tes3itemData )","title":"tes3.addItemData"},{"location":"apis/tes3/#tes3addjournalentry","text":"This function creates a new journal entry. It can be called once the world controller is loaded. tes3 . addJournalEntry ({ text = ..., showMessage = ... }) Parameters : params (table) text (string): The text of the new Journal entry. showMessage (boolean): Default : true . If this parameter is true, a \"Your journal has been updated\" message will be displayed.","title":"tes3.addJournalEntry"},{"location":"apis/tes3/#tes3addmagiceffect","text":"This function creates a new custom magic effect. The effect can be scripted through lua. This function should be used inside magicEffectsResolved event callback. local effect = tes3 . addMagicEffect ({ id = ..., name = ..., baseCost = ..., school = ..., size = ..., sizeCap = ..., speed = ..., description = ..., lighting = ..., icon = ..., particleTexture = ..., castSound = ..., boltSound = ..., hitSound = ..., areaSound = ..., castVFX = ..., boltVFX = ..., hitVFX = ..., areaVFX = ..., allowEnchanting = ..., allowSpellmaking = ..., appliesOnce = ..., canCastSelf = ..., canCastTarget = ..., canCastTouch = ..., casterLinked = ..., hasContinuousVFX = ..., hasNoDuration = ..., hasNoMagnitude = ..., illegalDaedra = ..., isHarmful = ..., nonRecastable = ..., targetsAttributes = ..., targetsSkills = ..., unreflectable = ..., usesNegativeLighting = ..., onTick = ..., onCollision = ... }) Parameters : params (table) id (number): Id of the new effect. Maps to newly claimed tes3.effect constants with tes3.claimSpellEffectId() . If the effect of this id already exists, an error will be thrown. name (string): Default : Unnamed Effect . Name of the effect. baseCost (number): Default : 1 . Base magicka cost for the effect. school (integer): Default : tes3.magicSchool.alteration . The magic school the new effect will be assigned to. Maps to tes3.magicSchool constants. size (number): Default : 1 . Controls how much the visual effect scales with its magnitude. sizeCap (number): Default : 1 . The maximum possible size of the projectile. speed (number): Default : 1 . description (string): Default : No description available. . Description for the effect. lighting (table): Optional . x (number): Default : 1 . Value of red color channel. In range of 0 - 1. y (number): Default : 1 . Value of green color channel. In range of 0 - 1. z (number): Default : 1 . Value of blue color channel. In range of 0 - 1. icon (string): Path to the effect icon. Must be a string no longer than 31 characters long. Use double as path separator. particleTexture (string): Path to the particle texture to use for the effect. Must be a string no longer than 31 characters long. castSound (string): The sound ID which will be played on casting a spell with this effect. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used. boltSound (string): The sound ID which will be played when a spell with this effect is in flight. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used. hitSound (string): The sound ID which will be played when a spell with this effect hits something. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used. areaSound (string): The sound ID which will be played on area of effect impact. Must be a string no longer than 31 characters long. If not specified, the default sound for the spell school will be used. castVFX ( tes3physicalObject , string): Optional . The visual played when a spell with this effect is cast. boltVFX ( tes3physicalObject , string): Optional . The visual played when a spell with this effect is in flight. hitVFX ( tes3physicalObject , string): Optional . The visual played when a spell with this effect hits something. areaVFX ( tes3physicalObject , string): Optional . The visual played when a spell with this effect, with area of effect hits something. allowEnchanting (boolean): Default : true . A flag which controls whether this effect can be used in a custom enchantment. allowSpellmaking (boolean): Default : true . A flag which controls whether this effect can be used in a custom spell. appliesOnce (boolean): Default : true . A flag which controls whether this effect applies once or is a ticking effect. canCastSelf (boolean): Default : true . A flag which controls whether this effect can be used with cast on self range. canCastTarget (boolean): Default : true . A flag which controls whether this effect can be used with cast on target range. canCastTouch (boolean): Default : true . A flag which controls whether this effect can be used with cast on touch range. casterLinked (boolean): Default : true . Access to the base flag that determines if this effect must end if caster is dead, or not an NPC/creature. Not allowed in container or door trap spells. Note that this property is hidden in the Construction Set. hasContinuousVFX (boolean): Default : true . A flag which controls whether the effect's visual is continuously played during the whole duration of the effect. hasNoDuration (boolean): Default : true . A flag which controls whether this effect doesn't have duration. hasNoMagnitude (boolean): Default : true . A flag which controls whether this effect doesn't have magnitude. illegalDaedra (boolean): Default : true . A flag which controls whether this effect is illegal to use in public, because it summons Daedra. Note: this mechanic is not implemented in the game. Some mods might rely on this parameter. isHarmful (boolean): Default : true . A flag which controls whether this effect is considered harmful and casting it can be considered as an attack. nonRecastable (boolean): Default : true . A flag which controls whether this effect can be recast while it already is in duration. targetsAttributes (boolean): Default : true . A flag which controls whether this effect targets a certain attribute or attributes. targetsSkills (boolean): Default : true . A flag which controls whether this effect targets a certain skill or skills. unreflectable (boolean): Default : true . A flag which controls whether this effect can be reflected. usesNegativeLighting (boolean): Default : true . A flag which controls whether this effect uses negative lighting. onTick (function): Optional . A function which will be called on each tick of a spell containing this effect. A table tickParams will be passed to the callback function. Note: dt (frame time) scaling is handled automatically. tickParams (table) effectId (number) sourceInstance ( tes3magicSourceInstance ): Access to the magic source of the effect instance. deltaTime (number): The time passed since the last tick of the spell. effectInstance ( tes3magicEffectInstance ): Access to the magic effect instance. effectIndex (number): The index of the effect in the spell. In addition, a function registered as onTick can also call the following methods: trigger( triggerParams ): Allows the effect to run through the normal spell event system. Parameters: triggerParams (table) negateOnExpiry (boolean): Optional. Default: true If this flag is true , the effect will be negated on expiry. isUncapped (boolean): Optional. attribute (number): Optional. Default: tes3.effectAttribute.nonResistable The attribute used in resistance calculations agains this effect. Maps to values in tes3.effectAttribute namespace. type (number): Optional. Default: tes3.effectEventType.boolean . This flag controls how the effect behaves. For example, tes3.effectEventType.modStatistic will make the effect work as calling tes3.modStatistic . Maps to values in tes3.effectEventType namespace. value (number): Optional. Default: 0 . The variable this effect changes. resistanceCheck(resistParams) (function): Optional. The function passed as resistanceCheck will be used on any of the game's spell resistance checks. For example, the only effect in vanilla Morrowind that implements this function is Water Walking. It disallows using a spell with Water Walking when the player is deep underwater, by setting it as expired. So, returning true from this function will set your effect to expired, and depending on your trigger code may stop processing. The function passed here must returns boolean values. Parameters resistParams (table) sourceInstance ( tes3magicSourceInstance ): Access to the magic source of the effect instance. effectInstance ( tes3magicEffectInstance ): Access to the magic effect instance. effectIndex (number): The index of the effect in the spell. triggerBoundWeapon( id ): Performs vanilla weapon summoning logic. It will create a summoned version of the weapon with provided ID. Parameters: id (string): The ID of the weapon object to summon. triggerBoundArmor( params ): Performs vanilla armor summoning logic. It can summon one or two armor objects with provided ID(s). Parameters: params (table) id (string): The ID of the armor object to summon. id2 (string): Optional. The ID of the additional armor object to summon. triggerSummon( id ): Performs vanilla creature summoning logic. It will create a summoned version of a creature with provided ID. Parameters: id (string): The ID of the creature object to summon. onCollision (function): Optional . A function which will be called when a spell containing this spell effect collides with something. Returns : effect ( tes3magicEffect ) Example: Fire Damage effect An implementation of the vanilla Fire Damage effect. Also, three spells are constructed with newly created magic effect, which are added to the player. You can test this in-game. -- Claiming an ID is needed before actually -- creating an effect with that ID tes3 . claimSpellEffectId ( \"customFireDmg\" , 220 ) local function onFireDmgTick ( tickParams ) -- This will print current health for any actor our spell hit tes3 . messageBox ( \"%s, health: %s\" , tickParams . effectInstance . target . object . id , tickParams . effectInstance . target . mobile . health . current ) tickParams : trigger ({ type = tes3 . effectEventType . modStatistic , -- The resistance attribute against Fire Damage should be Resist Fire attribute = tes3 . effectAttribute . resistFire , value = tickParams . effectInstance . target . mobile . health , negateOnExpiry = false , isUncapped = true , }) end event . register ( tes3 . event . magicEffectsResolved , function () tes3 . addMagicEffect ({ -- The ID we claimed before is now available in tes3.effect namespace id = tes3 . effect . customFireDmg , -- This information if just copied from the Construction Set -- name = \"Fire Damage\" , description = ( \"This spell effect produces a manifestation of elemental fire. Upon \" .. \"contact with an object, this manifestation explodes, causing damage.\" ), baseCost = 5 , school = tes3 . magicSchool . destruction , size = 1.25 , sizeCap = 50 , speed = 1 , lighting = { x = 0.99 , y = 0.26 , z = 0.53 }, usesNegativeLighting = false , icon = \"s \\\\ Tx_S_fire_damage.tga\" , particleTexture = \"vfx_firealpha00A.tga\" , castSound = \"destruction cast\" , castVFX = \"VFX_DestructCast\" , boltSound = \"destruction bolt\" , boltVFX = \"VFX_DestructBolt\" , hitSound = \"destruction hit\" , hitVFX = \"VFX_DestructHit\" , areaSound = \"destruction area\" , areaVFX = \"VFX_DestructArea\" , -- -- appliesOnce = false , hasNoDuration = false , hasNoMagnitude = false , illegalDaedra = false , unreflectable = false , casterLinked = false , nonRecastable = false , targetsAttributes = false , targetsSkills = false , onTick = onFireDmgTick , }) end ) event . register ( tes3 . event . loaded , function () local spell1 = tes3 . createObject ({ objectType = tes3 . objectType . spell }) tes3 . setSourceless ( spell1 ) spell1 . name = \"TEST SPELL - self\" spell1 . magickaCost = 1 local effect = spell1 . effects [ 1 ] effect . id = tes3 . effect . customFireDmg effect . rangeType = tes3 . effectRange . self effect . min = 10 effect . max = 10 effect . duration = 10 effect . radius = 0 effect . skill = - 1 effect . attribute = - 1 local spell2 = tes3 . createObject ({ objectType = tes3 . objectType . spell }) tes3 . setSourceless ( spell2 ) spell2 . name = \"TEST SPELL - target\" spell2 . magickaCost = 1 local effect = spell2 . effects [ 1 ] effect . id = tes3 . effect . customFireDmg effect . rangeType = tes3 . effectRange . target effect . min = 3 effect . max = 3 effect . duration = 10 effect . radius = 15 effect . skill = - 1 effect . attribute = - 1 local spell3 = tes3 . createObject ({ objectType = tes3 . objectType . spell }) tes3 . setSourceless ( spell3 ) spell3 . name = \"TEST SPELL - touch\" spell3 . magickaCost = 1 local effect = spell3 . effects [ 1 ] effect . id = tes3 . effect . customFireDmg effect . rangeType = tes3 . effectRange . touch effect . min = 3 effect . max = 3 effect . duration = 10 effect . radius = 0 effect . skill = - 1 effect . attribute = - 1 tes3 . addSpell ({ reference = tes3 . mobilePlayer , spell = spell1 }) tes3 . addSpell ({ reference = tes3 . mobilePlayer , spell = spell2 }) tes3 . addSpell ({ reference = tes3 . mobilePlayer , spell = spell3 }) end )","title":"tes3.addMagicEffect"},{"location":"apis/tes3/#tes3addsoulgem","text":"Causes a misc item to be recognized as a soul gem, so that it can be used for soul trapping. local wasAdded = tes3 . addSoulGem ({ item = ... }) Parameters : params (table) item ( tes3misc , string): The item to recognize as a soul gem. Returns : wasAdded (boolean) Example: Make the Dwemer Tube a Soul gem. Also, make sure Fargoth's soul alway ends up in it if the player has one avilable. local function onInitialized () tes3 . addSoulGem ({ item = \"misc_dwrv_artifact60\" }) end event . register ( tes3 . event . initialized , onInitialized ) local function onFilterSoulGemTarget ( e ) if ( e . reference . baseObject . id : lower () == \"fargoth\" ) then return e . soulGem . id == \"misc_dwrv_artifact60\" end end event . register ( tes3 . event . filterSoulGemTarget , onFilterSoulGemTarget ) -- calcSoulValue event allows assigning a new soul value to creatures -- If the event was triggered for an NPC, it allows assigning a value -- thus allowing soul-trapping the actor. local function calcSoulValueCallback ( e ) if ( e . actor . id : lower () == \"fargoth\" ) then e . value = 69 mwse . log ( \"Getting Fargoth's value.\" ) return end end event . register ( tes3 . event . calcSoulValue , calcSoulValueCallback )","title":"tes3.addSoulGem"},{"location":"apis/tes3/#tes3addspell","text":"Adds a spell to an actor's spell list. If the spell is passive, the effects will be applied. local wasAdded = tes3 . addSpell ({ reference = ..., actor = ..., spell = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to give the spell to. To manipulate an actor without specifying any particular reference, use actor instead. actor ( tes3actor , string): Who to give the spell to. Providing a base actor can be done before a save has been loaded, but may not correctly update effects for instanced versions of that actor in an active save. spell ( tes3spell , string): The spell to add. updateGUI (boolean): Default : true . If true, the GUI will be updated respecting the adding of the spell. This can be useful to disable when batch-adding many spells. The batch should be ended with tes3.updateMagicGUI to reflect the changes. Returns : wasAdded (boolean): True if the spell was successfully added. This can be false if the actor's race or birthsign already contains the spell.","title":"tes3.addSpell"},{"location":"apis/tes3/#tes3addtopic","text":"Adds a topic to the valid topic list for the player. This doesn't create a dynamic new topic. local wasAdded = tes3 . addTopic ({ topic = ..., updateGUI = ... }) Parameters : params (table) topic ( tes3dialogue , string): The topic to add updateGUI (boolean): Default : true . If true, the GUI will be updated respecting the adding of the topic. Returns : wasAdded (boolean): True if the topic was successfully added. This can be false if the topic already existed in the player's list.","title":"tes3.addTopic"},{"location":"apis/tes3/#tes3adjustsoundvolume","text":"Changes the volume of a sound that is playing on a given reference. tes3 . adjustSoundVolume ({ sound = ..., reference = ..., mixChannel = ..., volume = ... }) Parameters : params (table) sound ( tes3sound , string): The sound object, or id of the sound to look for. reference ( tes3reference , tes3mobileActor , string): The reference to attach the sound to. mixChannel (integer): Default : tes3.soundMix.effects . The channel to base volume off of. Maps to tes3.soundMix constants. volume (number): Default : 1.0 . A value between 0.0 and 1.0 to scale the volume off of.","title":"tes3.adjustSoundVolume"},{"location":"apis/tes3/#tes3advancetime","text":"Advances the game time. Can be used to simulate player resting. local hoursPassed = tes3 . advanceTime ({ hours = ..., resting = ..., updateEnvironment = ... }) Parameters : params (table) hours (number): How many hours to progress. resting (boolean): Default : false . Should advancing time count as resting? If set to true invokes usual sleeping mechanics: health, fatigue and magicka restoration, and possible rest interruption. The length of the rest will be equal to hours parameter, rounded down to nearest natural number. updateEnvironment (boolean): Default : true . Controls if the weather system is updated for each hour passed. Returns : hoursPassed (number)","title":"tes3.advanceTime"},{"location":"apis/tes3/#tes3applymagicsource","text":"local instance = tes3 . applyMagicSource ({ reference = ..., source = ..., name = ..., effects = ..., createCopy = ..., fromStack = ..., castChance = ..., target = ..., bypassResistances = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): A reference on which the magic source will be applied. source ( tes3object ): Optional . A magic source to apply. name (string): Optional . While optional for other uses, if applying alchemy as a source, you must specify a name for the magic source. effects (table): Optional . A table of custom effects to apply as a potion. Maximal number of effects is 8. id (boolean): Default : -1 . ID of the effect. skill (number): Default : -1 . If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Skill, a skill should be provided. This also applies to any custom spell effect which operates on a certain skill. This value maps to tes3.skill constants. attribute (number): Default : -1 . If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Attribute, an attribute should be provided. This also applies to any custom spell effect which operates on a certain attribute. This value maps to tes3.attribute constants. rangeType (number): Default : tes3.effectRange.self . The range of the effect. This maps to tes3.effectRange constants. radius (number): Default : 0 . The radius of the effect. duration (number): Default : 0 . Number of seconds the effect is going to be active. min (number): Default : 0 . The minimal magintude of the effect per tick. max (number): Default : 0 . The maximal magnitude of the effect per tick. createCopy (boolean): Default : true . This parameter controls whether the function will return the original magic source or a copy of the magic source. This parameter is only used if source is alchemy. fromStack ( tes3equipmentStack ): Optional . The piece of equipment this magic source is coming from. The fromStack has to be an already equipped item from tes3actor.equipment. This will probably change in the future. castChance (number): Optional . This parameter allows overriding the casting chance of the magic source. target ( tes3reference , tes3mobileActor , string): Optional . The target of the magic. bypassResistances (boolean): Default : false . Is this effect going to bypass magic resistance? Returns : instance ( tes3magicSourceInstance )","title":"tes3.applyMagicSource"},{"location":"apis/tes3/#tes3applytextdefines","text":"Returns a string with all the text defines replaced in the input string. This can be used to replicate the behavior of book and dialogue text. local result = tes3 . applyTextDefines ({ text = ..., actor = ... }) Parameters : params (table) text (string): The input string to do text replacements for. actor ( tes3actor ): The actor to use for replacements like %Name and %Faction . Returns : result (string)","title":"tes3.applyTextDefines"},{"location":"apis/tes3/#tes3calculatechargeuse","text":"Calculates the actual charge use of an enchantment by a mobile actor, after skills are applied. Invokes the enchantChargeUse event to account for modded charge usage. Takes into account the MCP charge use rebalance patch, if activated. local chargeUse = tes3 . calculateChargeUse ({ mobile = ..., enchantment = ... }) Parameters : params (table) mobile ( tes3mobileActor ): The mobile actor that would be casting the enchantment. enchantment ( tes3enchantment ): The enchantment to check. Returns : chargeUse (number): Actual charge use. Example: How to check the charge use of the player's currently selected enchantment local ench = tes3 . mobilePlayer . currentSpell local charge = tes3 . calculateChargeUse { mobile = tes3 . mobilePlayer , enchantment = ench } tes3 . messageBox { message = string.format ( \"%s uses %d charge\" , ench . id , charge ) }","title":"tes3.calculateChargeUse"},{"location":"apis/tes3/#tes3calculateprice","text":"Calculates a price, given a merchant and associated trading data. This is useful beyond accessing the object's .value field in that it raises the appropriate events to let other mods modify the values. local price = tes3 . calculatePrice ({ object = ..., basePrice = ..., buying = ..., selling = ..., merchant = ..., bartering = ..., repairing = ..., training = ..., count = ..., itemData = ..., skill = ... }) Parameters : params (table) object ( tes3object ): Optional . The object to calculate the price for. If not provided, basePrice is required. basePrice (number): Optional . The base price to calculate the end price for. This defaults to the object param's value , if provided. This parameter is required if object is not provided. buying (boolean): Default : true . If true , uses the logic for buying a service/item. This is exclusive with selling . selling (boolean): Default : false . If true , uses the logic for selling an item. This is exclusive with buying . merchant ( tes3mobileActor ): The merchant to use for calculating the price. bartering (boolean): Default : false . If true , a calcBarterPrice or calcRepairPrice event will be triggered. repairing (boolean): Default : false . If true , a calcRepairPrice event will be triggered. training (boolean): Default : false . If true , a calcTrainingPrice event will be triggered, passing the given skill ID. count (number): Default : 1 . If bartering , the count passed to the calcBarterPrice event. itemData ( tes3itemData ): Optional . If bartering or repairing , the item data passed to the calcBarterPrice or calcRepairPrice event. skill (number): If training , the skill ID passed to the calcTrainingPrice event. Maps to value in tes3.skill table. Returns : price (number): The calculated price, filtered by events.","title":"tes3.calculatePrice"},{"location":"apis/tes3/#tes3cancastspells","text":"Returns true if the target actor can cast spells, otherwise returns false . local result = tes3 . canCastSpells ({ target = ... }) Parameters : params (table) target ( tes3reference , tes3mobileActor , tes3actor ): The actor to check. Returns : result (boolean)","title":"tes3.canCastSpells"},{"location":"apis/tes3/#tes3cancelanimationloop","text":"Signals looping animations on the actor to stop looping and play to the end. The animation will continue, playing past the loop point until the end frame. Useful for exiting looping animations cleanly. tes3 . cancelAnimationLoop ({ reference = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference to the actor.","title":"tes3.cancelAnimationLoop"},{"location":"apis/tes3/#tes3canrest","text":"This function returns true if player can rest. local canRest = tes3 . canRest ({ checkForEnemies = ..., checkForSolidGround = ..., showMessage = ... }) Parameters : params (table) checkForEnemies (boolean): Default : true . Perform a check whether there are enemies nearby before opening rest menu. If there are, false is returned. checkForSolidGround (boolean): Default : true . Perform a check if the player is underwater. If underwater, false is returned. showMessage (boolean): Default : false . If true, a messagebox will be shown if the player can't rest because some condition isn't met. Returns : canRest (boolean)","title":"tes3.canRest"},{"location":"apis/tes3/#tes3cast","text":"Casts a spell from a given reference to a target reference. Touch effects will hit the target at any range, while target effects will create a projectile. By default, the spell always casts successfully and does not consume magicka. By default, an actor casting will stop and perform its cast animation, but the 'instant' flag can start the cast instantly and allows more control over the spell for NPCs. If the caster is the player, the target parameter is optional; without a target, the player's touch effects will only hit targets in front of them, and target effects will create a projectile in the direction the player is facing. local success = tes3 . cast ({ reference = ..., target = ..., spell = ..., instant = ..., alwaysSucceeds = ..., bypassResistances = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The caster reference. target ( tes3reference , tes3mobileActor , string): The target reference. Optional only if the caster is the player. spell ( tes3spell , string): The spell the caster uses. instant (boolean): Default : false . If true , the spell is cast instantly. No animation is performed. alwaysSucceeds (boolean): Default : true . If true , the spell cannot fail and does not consume magicka. If false , it is cast using the actor's spell skill, and requires and takes enough magicka to cast. For NPCs, this only applies if instant is true . bypassResistances (boolean): Default : false . If true , the spell will bypass the target's resistances. For NPCs, this only applies if instant is true . Returns : success (boolean): Returns true if the spell was cast successfully. Returns false if instant is false and the player is trying to cast the spell, while being unable to cast spells under normal circumstances. Example: This is an example of how to use tes3.cast instead of mwscript.explodeSpell -- The following code can be tested in-game by pressing Alt + l or Alt + k event . register ( tes3 . event . keyDown , function ( e ) if e . isAltDown then tes3 . messageBox ( \"mwscript.explodeSpell\" ) mwscript . explodeSpell ({ reference = tes3 . game . playerTarget , spell = \"proj_trap_spell\" }) end end , { filter = tes3 . scanCode . l }) event . register ( tes3 . event . keyDown , function ( e ) if e . isAltDown then tes3 . messageBox ( \"tes3.cast\" ) -- This will behave the same as will mwscript.explodeSpell() tes3 . cast ({ target = tes3 . game . playerTarget , reference = tes3 . game . playerTarget , spell = \"proj_trap_spell\" , }) end end , { filter = tes3 . scanCode . k })","title":"tes3.cast"},{"location":"apis/tes3/#tes3checkmerchantoffersservice","text":"Checks if a merchant will offer a service to you, including dialogue checks like disposition and faction membership. A specific service can be checked, or if no service is given, a generic dialogue check is made. If the service is refused, the dialogue reply for the refusal may also be returned (it may be nil, as there may not always be a reply available). local offersService , refusalReply = tes3 . checkMerchantOffersService ( reference , service ) Parameters : reference ( tes3reference , tes3mobileActor , string) service (number): Optional . The specific service to check for availability. Maps to values in the tes3.merchantService table. Returns : offersService (boolean) refusalReply ( tes3dialogueInfo )","title":"tes3.checkMerchantOffersService"},{"location":"apis/tes3/#tes3checkmerchanttradesitem","text":"Determines if a merchant trades in a given item. local trades = tes3 . checkMerchantTradesItem ({ item = ..., reference = ... }) Parameters : params (table) item ( tes3item , string) reference ( tes3reference , tes3mobileActor , string) Returns : trades (boolean)","title":"tes3.checkMerchantTradesItem"},{"location":"apis/tes3/#tes3claimspelleffectid","text":"This function is used to claim a unique spell effect name and id. This is needed before actually creating a new effect by calling tes3.addMagicEffect() . A claimed effect id is then available as: tes3.effect.effectName (just like any other spell effect). For examples of this function in practice see tes3.addMagicEffect() example. tes3 . claimSpellEffectId ( name , id ) Parameters : name (string): The name of the new spell effect. Must be unique. An error will be thrown if it's non-unique. id (number): A unique number representing the new spell effect. An error will be thrown if it's non-unique.","title":"tes3.claimSpellEffectId"},{"location":"apis/tes3/#tes3clearmarklocation","text":"This function deletes the player's mark location. tes3 . clearMarkLocation ()","title":"tes3.clearMarkLocation"},{"location":"apis/tes3/#tes3closealchemymenu","text":"This function closes the alchemy menu. tes3 . closeAlchemyMenu ()","title":"tes3.closeAlchemyMenu"},{"location":"apis/tes3/#tes3closecontentsmenu","text":"This function closes the contents menu. local wasClosed = tes3 . closeContentsMenu () Returns : wasClosed (boolean): If true, the menu was previously open, and is now closed.","title":"tes3.closeContentsMenu"},{"location":"apis/tes3/#tes3closedialoguemenu","text":"This function closes the dialogue menu. local wasClosed = tes3 . closeDialogueMenu ({ force = ... }) Parameters : params (table) force (boolean): Default : true . Normally, the menu can't be closed in certain circumstances, such as when the player is making a dialogue choice. If true, these usual restrictions will be ignored. Returns : wasClosed (boolean): If true, the menu was previously open, and is now closed.","title":"tes3.closeDialogueMenu"},{"location":"apis/tes3/#tes3closerepairservicemenu","text":"This function closes the repair service menu. tes3 . closeRepairServiceMenu ()","title":"tes3.closeRepairServiceMenu"},{"location":"apis/tes3/#tes3closerestmenu","text":"This function closes the resting menu. tes3 . closeRestMenu ()","title":"tes3.closeRestMenu"},{"location":"apis/tes3/#tes3closespellmakingmenu","text":"This function closes the spellmaking menu. tes3 . closeSpellmakingMenu ()","title":"tes3.closeSpellmakingMenu"},{"location":"apis/tes3/#tes3createobject","text":"Creates an object and returns it. The created object will be part of the saved game. local createdObject = tes3 . createObject ({ id = ..., objectType = ..., getIfExists = ... }) Parameters : params (table) id (string): Optional . The id of the new object. objectType (number): The type of object to create. Maps to values in the tes3.objectType table. Supported object types are: tes3.objectType.activator tes3.objectType.alchemy tes3.objectType.armor tes3.objectType.book tes3.objectType.clothing tes3.objectType.container tes3.objectType.enchantment tes3.objectType.misc tes3.objectType.sound tes3.objectType.spell tes3.objectType.static tes3.objectType.weapon getIfExists (boolean): Default : true . If true , an existing object of the same objectType and id will be returned instead of creating a new one. Returns : createdObject ( tes3activator , tes3alchemy , tes3armor , tes3book , tes3clothing , tes3container , tes3enchantment , tes3misc , tes3sound , tes3spell , tes3static , tes3weapon ) Example: Creates a tes3misc object The example below create a misc item object that could be used to create a placeable reference later on. local miscItemId = \"create_misc_item_id\" local miscItemName = \"create_misc_item_name\" mwse . log ( \"creating a misc item of id %s\" , miscItemId ) -- local miscItem = tes3misc.create( { -- id = miscItemId, -- name = miscItemName -- } ) local miscItem = tes3 . createObject ({ objectType = tes3 . objectType . miscItem , id = miscItemId , name = miscItemName }) if ( miscItem ~= nil ) then mwse . log ( \"misc item created : id is %s\" , miscItemId ) else mwse . log ( \"failed to create a misc item of id %s\" , miscItemId ) return end tes3 . createReference ( { object = miscItem , position = tes3 . getPlayerEyePosition (), orientation = 0 , cell = tes3 . getPlayerCell () } ) mwse . log ( \"created a reference of a misc item of id %s\" , miscItem . id ) Example: Creates a tes3static object The example below create a static object that could be used to create a placeable reference later on. local staticId = \"create_static_id\" mwse . log ( \"creating a static of id %s\" , staticId ) -- local static = tes3static.create( { -- id = staticId, -- mesh = \"d\\\\door_dwrv_main00.nif\" -- } ) local static = tes3 . createObject ( { objectType = tes3 . objectType . static , id = staticId , mesh = [[d\\door_dwrv_main00.nif]] } ) if ( static ~= nil ) then mwse . log ( \"static created : id is %s\" , staticId ) else mwse . log ( \"failed to create a static of id %s\" , staticId ) return end tes3 . createReference ( { object = static , position = tes3 . getPlayerEyePosition (), orientation = 0 , cell = tes3 . getPlayerCell () } ) mwse . log ( \"created a reference of static of id %s\" , static . id )","title":"tes3.createObject"},{"location":"apis/tes3/#tes3createreference","text":"Similar to mwscript's PlaceAtPC or PlaceAtMe, this creates a new reference in the game world. local newReference = tes3 . createReference ({ object = ..., position = ..., orientation = ..., cell = ..., scale = ... }) Parameters : params (table) object ( tes3physicalObject , string): The object to create a reference of. position ( tes3vector3 , table): The location to create the reference at. orientation ( tes3vector3 , table): The new orientation for the created reference. cell ( tes3cell , string, table): Optional . The cell to create the reference in. This is only needed for interior cells. scale (number): Default : 1 . A scale for the reference. Returns : newReference ( tes3reference )","title":"tes3.createReference"},{"location":"apis/tes3/#tes3createvisualeffect","text":"Creates an arbitrary and automatically tracked visual effect. Most VFX assignments are persistent, and only expire when their lifespan ends, an associated reference is destroyed, or a given spell serial is retired. local vfx = tes3 . createVisualEffect ({ object = ..., serial = ..., repeatCount = ..., lifespan = ..., scale = ..., verticalOffset = ..., position = ..., avObject = ..., magicEffectId = ... }) Parameters : params (table) object ( tes3physicalObject , string): Optional . The physical object to use as the VFX. To use an enchantment-style VFX, supply the magicEffectId parameter instead. serial (number): Optional . An associated tes3magicSourceInstance serial. If a serial is assigned to the VFX, the effect expiring will also remove the VFX. This is not used when creating an enchantment-style VFX. repeatCount (number): Optional . A repeat count for the VFX. If provided, the key timing for the associated effect will be used, multiplied by this value, to determine the total lifespan of the VFX. This is not used when creating an enchantment-style VFX. lifespan (number): Optional . The desired lifespan for the VFX. If not provided, the VFX will never die of old age. scale (number): Default : 1 . The scale used to resize the given VFX. The default value will match the size used by most magical effect logic. This is not used when creating an enchantment-style VFX. verticalOffset (number): Default : 0 . This offset will be used to position it above its anchor reference. This is not used when creating an enchantment-style VFX. position ( tes3vector3 , table): Optional . If provided the VFX will be attached relative to a position, and not follow a reference. avObject ( niAVObject ): Optional . magicEffectId (number): Optional . The magic effect ID to use to create an enchantment-style VFX. This will use most of the same VFX logic, but cannot be applied to a position or specific niAVObject. Returns : vfx ( tes3vfx ): A handle to the VFX that was created. This can be passed to tes3.removeVisualEffect to remove it from the reference.","title":"tes3.createVisualEffect"},{"location":"apis/tes3/#tes3decrementkillcount","text":"Decreases player's kill count of a certain type of actor by one. tes3 . decrementKillCount ({ actor = ... }) Parameters : params (table) actor ( tes3actor , string): The actor (or their ID).","title":"tes3.decrementKillCount"},{"location":"apis/tes3/#tes3deleteobject","text":"Deletes a game object from the system. This can be dangerous, use with caution. tes3 . deleteObject ( object ) Parameters : object ( tes3object ): The object to delete.","title":"tes3.deleteObject"},{"location":"apis/tes3/#tes3disablekey","text":"Disables the use of a keyboard key. tes3 . disableKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace.","title":"tes3.disableKey"},{"location":"apis/tes3/#tes3dropitem","text":"Drops one or more items from a reference's inventory onto the ground at their feet. It will unequip the item if it is equipped. The return value will be nil if no matching item was found. local createdReference = tes3 . dropItem ({ reference = ..., item = ..., itemData = ..., matchNoItemData = ..., count = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference whose inventory will be modified. item ( tes3item , string): The item to drop. itemData ( tes3itemData ): Optional . The item data of the specific item to drop. Without this, the first matching item in the inventory will drop. matchNoItemData (boolean): Default : false . If true, matches an item without item data. This can be used when you want to drop an item that isn't equipped (equipped items always have item data). count (number): Default : 1 . The number of items to drop. updateGUI (boolean): Default : true . If false, the player or contents menu won't be updated. Returns : createdReference ( tes3reference )","title":"tes3.dropItem"},{"location":"apis/tes3/#tes3enablekey","text":"Enables the use of a keyboard key. tes3 . enableKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace.","title":"tes3.enableKey"},{"location":"apis/tes3/#tes3fadein","text":"Similar to the vanilla FadeIn mwscript command. tes3 . fadeIn ({ fader = ..., duration = ... }) Parameters : params (table): Optional . fader ( tes3fader ): Optional . Defaults to the transition fader. duration (number): Default : 1.0 . Time, in seconds, for the fade.","title":"tes3.fadeIn"},{"location":"apis/tes3/#tes3fadeout","text":"Similar to the vanilla FadeOut mwscript command. tes3 . fadeOut ({ fader = ..., duration = ... }) Parameters : params (table): Optional . fader ( tes3fader ): Optional . Defaults to the transition fader. duration (number): Default : 1.0 . Time, in seconds, for the fade.","title":"tes3.fadeOut"},{"location":"apis/tes3/#tes3fadeto","text":"Similar to the vanilla FadeTo mwscript command. tes3 . fadeTo ({ fader = ..., duration = ..., value = ... }) Parameters : params (table): Optional . fader ( tes3fader ): Optional . Defaults to the transition fader. duration (number): Default : 1.0 . Time, in seconds, for the fade. value (number): Default : 1.0 .","title":"tes3.fadeTo"},{"location":"apis/tes3/#tes3findactorsinproximity","text":"Searches for active mobile actors which are within range distance from the reference or position argument. It only finds mobiles which have active AI, and can include the player. This function is used by the game for area-of-effect hits. It has a small amount of overhead, so try not to use it too much. local mobileList = tes3 . findActorsInProximity ({ reference = ..., position = ..., range = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The position to search from, taken from a reference. Uses the position of the centre of the body if the reference is an actor. position ( tes3vector3 ): Optional . The position to search from. range (number): The distance around the position to search. An actor is included if the centre of their body is in range. Returns : mobileList ( tes3mobileActor [])","title":"tes3.findActorsInProximity"},{"location":"apis/tes3/#tes3findbirthsign","text":"Fetches the core game birthsign object for a given birthsign ID. If the birthsign with a given ID doesn't exist, nil is returned. local birthsign = tes3 . findBirthsign ( id ) Parameters : id (string): ID of the birthsign to search for. Returns : birthsign ( tes3birthsign )","title":"tes3.findBirthsign"},{"location":"apis/tes3/#tes3findclass","text":"Fetches the core game character class object for a given class ID. If the class with a given ID doesn't exist, nil is returned. local class = tes3 . findClass ( id ) Parameters : id (string): ID of the class to search for. Returns : class ( tes3class )","title":"tes3.findClass"},{"location":"apis/tes3/#tes3findclosestexteriorreferenceofobject","text":"Using the same engine function used by the vanilla intervention spells, locations the first reference of a given object in the exterior world. local reference = tes3 . findClosestExteriorReferenceOfObject ({ object = ..., position = ... }) Parameters : params (table) object ( tes3physicalObject , string): The object to search for. position ( tes3vector3 ): Optional . The position to search from. Must be an exterior position. Defaults to the last exterior position of the player if no position is provided. Returns : reference ( tes3reference )","title":"tes3.findClosestExteriorReferenceOfObject"},{"location":"apis/tes3/#tes3finddialogue","text":"Locates a root dialogue topic that can then be filtered down for a specific actor to return a specific dialogue info. Specify either topic , or both type and page for other types of dialogue. For example, tes3.findDialogue({type = tes3.dialogueType.greeting, page = tes3.dialoguePage.greeting.greeting0}) will return the \"Greeting 0\" topic, which is not available using a topic ID. local dialogue = tes3 . findDialogue ({ topic = ..., type = ..., page = ... }) Parameters : params (table) topic (string): Optional . The dialogue topic to look for. type (number): Optional . The type of dialogue to look for. Uses tes3.dialogueType constants. page (number): Optional . The page of dialogue to fetch. Uses tes3.dialoguePage constants. Returns : dialogue ( tes3dialogue )","title":"tes3.findDialogue"},{"location":"apis/tes3/#tes3findglobal","text":"Fetches the core game object that represents a global variable. local globalVariable = tes3 . findGlobal ( id ) Parameters : id (string) Returns : globalVariable ( tes3globalVariable )","title":"tes3.findGlobal"},{"location":"apis/tes3/#tes3findgmst","text":"Fetches the core game object that represents a game setting. While this function accepts a name, it is recommended to use the tes3.GMST constants. local gameSetting = tes3 . findGMST ( id ) Parameters : id (number, string) Returns : gameSetting ( tes3gameSetting ) Example: Document all GMST Default Values This example reads the default values of all GMSTs, and writes them to a markdown file for users to read. -- Converter table for a GMST's type to something more user-friendly. local typeNames = { s = \"string\" , i = \"integer\" , f = \"float\" , } -- Write our markdown header. local f = assert ( io.open ( \"Data Files \\\\ MWSE \\\\ tmp \\\\ GMSTs.md\" , \"w\" )) f : write ( \"# GMSTs \\n\\n \" ) f : write ( \"Index | Type | Identifier | Default Value \\n \" ) f : write ( \"----- | ------- | -------------------------------- | -------------------------------------------- \\n \" ) -- Go through all our GMSTs... for id = 0 , 1520 do -- Write out most of the info. local gmst = tes3 . findGMST ( id ) f : write ( string.format ( \"%-5d | %-7s | %-32s | \" , gmst . index , typeNames [ gmst . type ], gmst . id )) -- Customize how the value is written based on its type. if ( gmst . type == \"s\" ) then -- Remove linebreaks and escape them. local value = gmst . defaultValue value = string.gsub ( value , \" \\r \" , \" \\\\ r\" ) value = string.gsub ( value , \" \\n \" , \" \\\\ n\" ) f : write ( string.format ( \"` \\\" %s \\\" `\" , value )) elseif ( gmst . type == \"f\" ) then f : write ( string.format ( \"`%.4f`\" , gmst . defaultValue )) else f : write ( string.format ( \"`%d`\" , gmst . defaultValue )) end f : write ( \" \\n \" ) end -- Close up our file. f : close () Example: Retrieve value of a GMST This example shows how to read a value of a GMST and how to change it. local oldGMST = tes3 . findGMST ( \"sServiceTrainingTitle\" ). value -- oldGMST is now \"Training\" -- Now let's change the message to something more appropriate. tes3 . findGMST ( \"sServiceTrainingTitle\" ). value = \"Cheat\"","title":"tes3.findGMST"},{"location":"apis/tes3/#tes3findregion","text":"Fetches the core game region object for a given region ID. If the region with a given ID doesn't exist, nil is returned. local region = tes3 . findRegion ({ id = ... }) Parameters : params (table) id (string): ID of the region to search for. Returns : region ( tes3region )","title":"tes3.findRegion"},{"location":"apis/tes3/#tes3force1stperson","text":"Forces the player's POV to first person the next simulation frame, and returns true if the POV has been changed. local changedPOV = tes3 . force1stPerson () Returns : changedPOV (boolean)","title":"tes3.force1stPerson"},{"location":"apis/tes3/#tes3force3rdperson","text":"Forces the player's POV to third person the next simulation frame, and returns true if the POV has been changed. local changedPOV = tes3 . force3rdPerson () Returns : changedPOV (boolean)","title":"tes3.force3rdPerson"},{"location":"apis/tes3/#tes3get3rdpersoncameraoffset","text":"Returns the camera offset from the player's head while in 3rd person view. Tip If used before initialized event, this function returns empty table. local cameraOffset = tes3 . get3rdPersonCameraOffset () Returns : cameraOffset ( tes3vector3 )","title":"tes3.get3rdPersonCameraOffset"},{"location":"apis/tes3/#tes3getactivecells","text":"Returns a table of active cells. If indoors, the table will have only one entry. If outdoors, the 9 surrounding cells will be provided. local cells = tes3 . getActiveCells () Returns : cells ( tes3cell [])","title":"tes3.getActiveCells"},{"location":"apis/tes3/#tes3getanimationgroups","text":"This function fetches a reference's attached animation groups. local animData = tes3 . getAnimationGroups ({ reference = ... }) Parameters : params (table) reference ( tes3reference ): A reference whose animation groups to fetch. Returns : animData (number[])","title":"tes3.getAnimationGroups"},{"location":"apis/tes3/#tes3getanimationtiming","text":"This function fetches a reference's attached animation groups' timings. local result = tes3 . getAnimationTiming ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): A reference whose animation groups' timings to fetch. Returns : result (number[])","title":"tes3.getAnimationTiming"},{"location":"apis/tes3/#tes3getarchivelist","text":"Returns a 1-indexed table of active archives. local archives = tes3 . getArchiveList () Returns : archives ( tes3archive [])","title":"tes3.getArchiveList"},{"location":"apis/tes3/#tes3getattachment","text":"Fetches an attachment with a given type from a reference. Will return nil if no attachment of that type has been found. local result = tes3 . getAttachment ( reference , attachment ) Parameters : reference ( tes3reference ): The reference to get the attachment from. attachment (string): The type of attachment to get. Possible values are: \"bodyPartManager\" : Returns tes3bodyPartManager \"light\" : Returns tes3lightNode \"lock\" : Returns tes3lockNode \"leveledBase\" : Returns tes3reference \"travelDestination\" : Returns tes3travelDestinationNode \"variables\" : Returns tes3itemData \"actor\" : Returns tes3mobileActor \"animation\" : Returns tes3animationData Returns : result (nil, tes3bodyPartManager , tes3itemData , tes3lightNode , tes3lockNode , tes3mobileActor , tes3reference , tes3travelDestinationNode , tes3animationData )","title":"tes3.getAttachment"},{"location":"apis/tes3/#tes3getattributename","text":"Returns the lowercase identifying name of an attribute for a given numerical, 0-based index. E.g. \"strength\", by using GMSTs. Uses tes3.attributeName enumeration as a fallback. local name = tes3 . getAttributeName ( attributeId ) Parameters : attributeId (number): The attribute id to get the name of. Maps to values in tes3.attribute namespace. Returns : name (string)","title":"tes3.getAttributeName"},{"location":"apis/tes3/#tes3getcameraposition","text":"Returns the camera's position. local vector3 = tes3 . getCameraPosition () Returns : vector3 ( tes3vector3 )","title":"tes3.getCameraPosition"},{"location":"apis/tes3/#tes3getcameravector","text":"Returns the camera look vector. local vector3 = tes3 . getCameraVector () Returns : vector3 ( tes3vector3 )","title":"tes3.getCameraVector"},{"location":"apis/tes3/#tes3getcell","text":"Finds a cell, either by an id or an X/Y grid position. local cell = tes3 . getCell ({ id = ..., x = ..., y = ... }) Parameters : params (table) id (string): The cell's ID. If not provided, x and y must be. x (number) y (number) Returns : cell ( tes3cell )","title":"tes3.getCell"},{"location":"apis/tes3/#tes3getcumulativedaysformonth","text":"Gets the number of days that have passed leading up to the start of a given month. local days = tes3 . getCumulativeDaysForMonth ( month ) Parameters : month (number): The 0-based month index. Returns : days (number)","title":"tes3.getCumulativeDaysForMonth"},{"location":"apis/tes3/#tes3getcurrentaipackageid","text":"Returns an actor's current AI package ID, just as the mwscript function GetCurrentAIPackage would. local packageID = tes3 . getCurrentAIPackageId ( reference ) Parameters : reference ( tes3mobileActor , tes3reference ) Returns : packageID (number)","title":"tes3.getCurrentAIPackageId"},{"location":"apis/tes3/#tes3getcurrentweather","text":"Gets the currently active weather, from the player's current region. local weather = tes3 . getCurrentWeather () Returns : weather ( tes3weather )","title":"tes3.getCurrentWeather"},{"location":"apis/tes3/#tes3getcursorposition","text":"Returns a table with values x and y that contain the current cursor position. local position = tes3 . getCursorPosition () Returns : position ( tes3vector2 )","title":"tes3.getCursorPosition"},{"location":"apis/tes3/#tes3getdaysinmonth","text":"Returns the number of days in a given month. This may be altered if a Morrowind Code Patch feature was installed. local dayCount = tes3 . getDaysInMonth ( month ) Parameters : month (number) Returns : dayCount (number)","title":"tes3.getDaysInMonth"},{"location":"apis/tes3/#tes3getdialogueinfo","text":"Locates and returns a Dialogue Info by a given id. This involves file IO and is an expensive call. Results should be cached. local dialogueInfo = tes3 . getDialogueInfo ( dialogue , id ) Parameters : dialogue ( tes3dialogue , string): The dialogue that the info belongs to. id (string): The numerical, unique id for the info object. Returns : dialogueInfo ( tes3dialogueInfo )","title":"tes3.getDialogueInfo"},{"location":"apis/tes3/#tes3geteffectmagnitude","text":"This function returns the total effective magnitude and total base magnitude of a certain magic effect affecting a reference. It returns a pair of numbers, the first being the effective magnitude after all the actor's resistances are applied (see examples). The second number is the magnitude before any of the actor's resistances are applied. local effectiveMagnitude , magnitude = tes3 . getEffectMagnitude ({ reference = ..., effect = ..., skill = ..., attribute = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): An associated mobile should exist for this function to be able to work. effect (number): Effect ID. Can be any of the predefined spell effects, or one added by tes3.claimSpellEffectId() . Maps to values of tes3.effect constants skill (number): Default : -1 . If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Skill, a skill should be provided. This also applies to any custom spell effect which operates on a certain skill. This value maps to tes3.skill constants. attribute (number): Default : -1 . If effect parameter specified is: Absorb, Damage, Drain, Fortify or Restore Attribute, an attribute should be provided. This also applies to any custom spell effect which operates on a certain attribute. This value maps to tes3.attribute constants. Returns : effectiveMagnitude (number): The effective magnitude after all the actor's resistances are applied. magnitude (integer): The magnitude before any of the actor's resistances are applied. Example: Get both magnitudes. local effectiveMagnitude , magnitude = tes3 . getEffectMagnitude { reference = tes3 . player , effect = tes3 . effect . fireDamage } tes3 . messageBox ( string.format ( \"fortify speed: %f (%f)\" , effectiveMagnitude , magnitude )) Example: Get magnitude after resistances are applied. You can treat the function as if it returns a single value. local effectiveMagnitude = tes3 . getEffectMagnitude { reference = tes3 . player , effect = tes3 . effect . fortifyAttribute , attribute = tes3 . attribute . speed } tes3 . messageBox ( string.format ( \"fortify speed: %f\" , effectiveMagnitude ))","title":"tes3.getEffectMagnitude"},{"location":"apis/tes3/#tes3getequippeditem","text":"Returns an actor's equipped item stack, provided a given filter local stack = tes3 . getEquippedItem ({ actor = ..., enchanted = ..., objectType = ..., slot = ..., type = ... }) Parameters : params (table) actor ( tes3reference , tes3mobileActor , tes3actor ) enchanted (boolean): Optional . If true, filters only enchanted items. objectType (number): Optional . Maps to tes3.objectType constants. Used to filter equipment by type. slot (number): Optional . Maps to tes3.armorSlot or tes3.clothingSlot . Used to filter equipment by slot. type (number): Optional . Maps to tes3.weaponType . Used to filter equipment by type. Returns : stack ( tes3equipmentStack ) Example: Get Player\u2019s Equipped Light In this example, we print the object ID of the player\u2019s equipped light source. local equippedLightStack = tes3 . getEquippedItem ({ actor = tes3 . player , objectType = tes3 . objectType . light }) if ( equippedLightStack ) then mwse . log ( \"Equipped light: %s\" , equippedLightStack . object . id ) else mwse . log ( \"No light equipped.\" ) end Example: Get Player\u2019s Shield This example shows the player\u2019s shield. local equippedShieldStack = tes3 . getEquippedItem ({ actor = tes3 . player , objectType = tes3 . objectType . armor , slot = tes3 . armorSlot . shield }) if ( equippedShieldStack ) then mwse . log ( \"Equipped shield: %s\" , equippedShieldStack . object . id ) else mwse . log ( \"No shield equipped.\" ) end","title":"tes3.getEquippedItem"},{"location":"apis/tes3/#tes3getfaction","text":"Fetches the core game faction object for a given faction ID. local faction = tes3 . getFaction ( id ) Parameters : id (string) Returns : faction ( tes3faction )","title":"tes3.getFaction"},{"location":"apis/tes3/#tes3getfileexists","text":"Determines if a file exists in the user's Data Files. local exists = tes3 . getFileExists ( path ) Parameters : path (string) Returns : exists (boolean)","title":"tes3.getFileExists"},{"location":"apis/tes3/#tes3getfilesource","text":"Determines if a file exists on the filesystem or inside of a bsa. The returned string will be \"file\" or \"bsa\". local exists , path = tes3 . getFileSource ( path ) Parameters : path (string) Returns : exists (string?): A string representing the file source. This can be either file or bsa . path (string?): If the file exists, this is a path to the file. If the file is from a BSA, it is a path inside the BSA.","title":"tes3.getFileSource"},{"location":"apis/tes3/#tes3getglobal","text":"Retrieves the value of a global value, or nil if the global could not be found. local value = tes3 . getGlobal ( id ) Parameters : id (string) Returns : value (integer)","title":"tes3.getGlobal"},{"location":"apis/tes3/#tes3getinputbinding","text":"Gets the input configuration for a given keybind. local inputConfig = tes3 . getInputBinding ( keybind ) Parameters : keybind (number): Maps to tes3.keybind constants. Returns : inputConfig ( tes3inputConfig )","title":"tes3.getInputBinding"},{"location":"apis/tes3/#tes3getitemcount","text":"Returns the amount of a certain item that can be found in a reference's inventory. local count = tes3 . getItemCount ({ reference = ..., item = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to get the item count for. Must be a reference that has an inventory. item ( tes3item , string): The item to get the count of. Returns : count (number): The absolute value of the stack count in the reference's inventory.","title":"tes3.getItemCount"},{"location":"apis/tes3/#tes3getitemisstolen","text":"This function checks item's stolen flag. local isStolen , stolenFrom = tes3 . getItemIsStolen ({ item = ..., from = ... }) Parameters : params (table) item ( tes3item ): The item to check. from ( tes3creature , tes3npc , tes3faction , nil): Optional . Where the item was stolen from. If not provided, the function will return true if the item was stolen from anyone. Returns : isStolen (boolean): If true the item is stolen. stolenFrom ( tes3creature [], tes3npc [], tes3faction []): A list of who and what the item has been stolen from.","title":"tes3.getItemIsStolen"},{"location":"apis/tes3/#tes3getjournalindex","text":"Gets the index of a given journal, or nil if no valid journal could be found. local index = tes3 . getJournalIndex ({ id = ... }) Parameters : params (table) id ( tes3dialogue , string) Returns : index (number)","title":"tes3.getJournalIndex"},{"location":"apis/tes3/#tes3getkillcount","text":"Returns how many times the player killed an actor. If no actor is specified, total number of kills player commited will be returned. local count = tes3 . getKillCount ({ actor = ... }) Parameters : params (table): Optional . actor ( tes3actor , string): Optional . The actor (or their ID) for whom to retrieve player's kill count. Returns : count (number)","title":"tes3.getKillCount"},{"location":"apis/tes3/#tes3getkillcounts","text":"Returns a table with complete player kill counts. The table returned is formated so actor IDs are table keys and kill count of that type of actor is value. local killMap = tes3 . getKillCounts () Returns : killMap (table< tes3actor , number>)","title":"tes3.getKillCounts"},{"location":"apis/tes3/#tes3getlanguage","text":"Gets the language as an ISO string (e.g. \"eng\"), determined by the language entry in Morrowind.ini and the detected executable. Maps to values in the tes3.language table. local result = tes3 . getLanguage () Returns : result (string)","title":"tes3.getLanguage"},{"location":"apis/tes3/#tes3getlanguagecode","text":"Gets the language code, determined by the language entry in Morrowind.ini and the detected executable. Maps to values in the tes3.languageCode table. local result = tes3 . getLanguageCode () Returns : result (number)","title":"tes3.getLanguageCode"},{"location":"apis/tes3/#tes3getlastexteriorposition","text":"Returns the last exterior position of the player. local vector3 = tes3 . getLastExteriorPosition () Returns : vector3 ( tes3vector3 )","title":"tes3.getLastExteriorPosition"},{"location":"apis/tes3/#tes3getlocked","text":"Determines if a given reference is a locked door or container. local isLocked = tes3 . getLocked ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) Returns : isLocked (boolean)","title":"tes3.getLocked"},{"location":"apis/tes3/#tes3getlocklevel","text":"Gets an locked reference's lock level. If no lock data is available, it will return nil. local level = tes3 . getLockLevel ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) Returns : level (number)","title":"tes3.getLockLevel"},{"location":"apis/tes3/#tes3getmagiceffect","text":"Fetches the core game Magic Effect object for a given ID. Can return custom magic effects added with tes3.addMagicEffect . local magicEffect = tes3 . getMagicEffect ( id ) Parameters : id (integer): Maps to values in tes3.effect table. Returns : magicEffect ( tes3magicEffect , nil)","title":"tes3.getMagicEffect"},{"location":"apis/tes3/#tes3getmagiceffectname","text":"Returns the complex name of a magic effect, taking into account attribute or skill values. local complexName = tes3 . getMagicEffectName ({ effect = ..., attribute = ..., skill = ... }) Parameters : params (table) effect (integer): The effect ID to get the name of. Maps to values in tes3.effect table. attribute (integer): Optional . The attribute ID to use, if applicable. Maps to values in tes3.attribute table. skill (integer): Optional . The skill ID to use, if applicable. Maps to values in tes3.skill table. Returns : complexName (string)","title":"tes3.getMagicEffectName"},{"location":"apis/tes3/#tes3getmagicsourceinstancebyserial","text":"Fetches an instance of the magic source of a given serial number. local magicSourceInstance = tes3 . getMagicSourceInstanceBySerial ({ serialNumber = ... }) Parameters : params (table) serialNumber (number) Returns : magicSourceInstance ( tes3magicSourceInstance )","title":"tes3.getMagicSourceInstanceBySerial"},{"location":"apis/tes3/#tes3getmodlist","text":"Fetches the list of the active ESM and ESP files. local modList = tes3 . getModList () Returns : modList (string[])","title":"tes3.getModList"},{"location":"apis/tes3/#tes3getobject","text":"Fetches the core game object for a given object ID. local object = tes3 . getObject ( id ) Parameters : id (string) Returns : object ( tes3object )","title":"tes3.getObject"},{"location":"apis/tes3/#tes3getowner","text":"Returns the object's owner, or nil if the object is unowned. local owner , requirement = tes3 . getOwner ({ reference = ... }) Parameters : params (table) reference ( tes3reference ) Returns : owner ( tes3faction , tes3npc , nil) requirement (number, tes3globalVariable , nil): The faction rank required if the owner is a faction, or the global variable needing to be set if the owner is an NPC.","title":"tes3.getOwner"},{"location":"apis/tes3/#tes3getplayeractivationdistance","text":"This function returns the distance that the player can activate objects with. This is a sum of the iMaxActivateDist GMST value and the player's telekinesis strength. local result = tes3 . getPlayerActivationDistance () Returns : result (number)","title":"tes3.getPlayerActivationDistance"},{"location":"apis/tes3/#tes3getplayercell","text":"Fetches the cell that the player is currently in. local result = tes3 . getPlayerCell () Returns : result ( tes3cell )","title":"tes3.getPlayerCell"},{"location":"apis/tes3/#tes3getplayereyeposition","text":"Returns the position of the player's eyes. local position = tes3 . getPlayerEyePosition () Returns : position ( tes3vector3 )","title":"tes3.getPlayerEyePosition"},{"location":"apis/tes3/#tes3getplayereyevector","text":"Returns the look direction of the player's eyes. local lookDirection = tes3 . getPlayerEyeVector () Returns : lookDirection ( tes3vector3 )","title":"tes3.getPlayerEyeVector"},{"location":"apis/tes3/#tes3getplayergold","text":"Gets the gold count carried by the player. local goldCount = tes3 . getPlayerGold () Returns : goldCount (number)","title":"tes3.getPlayerGold"},{"location":"apis/tes3/#tes3getplayertarget","text":"This function is used to see what the player is looking at. Unlike a real raycast, this does not work in all circumstances. As a general rule, it will return the reference if the information box is shown when it is looked at. local result = tes3 . getPlayerTarget () Returns : result ( tes3reference )","title":"tes3.getPlayerTarget"},{"location":"apis/tes3/#tes3getquickkey","text":"This function retrieves data for a quick key. local result = tes3 . getQuickKey ({ slot = ... }) Parameters : params (table) slot (number): The key to retrieve data for. This is a value between 1 and 9. Returns : result ( tes3quickKey )","title":"tes3.getQuickKey"},{"location":"apis/tes3/#tes3getreference","text":"Fetches the first reference for a given base object ID. local reference = tes3 . getReference ( id ) Parameters : id (string) Returns : reference ( tes3reference )","title":"tes3.getReference"},{"location":"apis/tes3/#tes3getregion","text":"Gets the current region the player is in. This checks the player's current cell first, but will fall back to the last exterior cell. local region = tes3 . getRegion ( useDoors ) Parameters : useDoors (boolean): Default : false . Returns : region ( tes3region )","title":"tes3.getRegion"},{"location":"apis/tes3/#tes3getscript","text":"Locates and returns a script by a given id. local script = tes3 . getScript ( id ) Parameters : id (string) Returns : script ( tes3script )","title":"tes3.getScript"},{"location":"apis/tes3/#tes3getsimulationtimestamp","text":"Returns a UNIX-style timestamp based on in-world simulation time since the start of the era, in hours. local timestamp = tes3 . getSimulationTimestamp ( highPrecision ) Parameters : highPrecision (boolean): Default : true . If false is passed returns the value of the simulation time variable used by the game engine. Calculates the timestamp from the current year, month and game hour global variables otherwise. Returns : timestamp (number)","title":"tes3.getSimulationTimestamp"},{"location":"apis/tes3/#tes3getskill","text":"Fetches the core game object for a given skill ID. local skill = tes3 . getSkill ( id ) Parameters : id (number): Maps to tes3.skill enumeration. Returns : skill ( tes3skill )","title":"tes3.getSkill"},{"location":"apis/tes3/#tes3getskillname","text":"Returns the identifying name of a skill for a given numerical, 0-based index. E.g. \"Enchant\". local name = tes3 . getSkillName ( skillId ) Parameters : skillId (number): Maps to tes3.skill enumeration. Returns : name (string)","title":"tes3.getSkillName"},{"location":"apis/tes3/#tes3getsound","text":"Locates and returns a sound by a given id. local sound = tes3 . getSound ( id ) Parameters : id (string) Returns : sound ( tes3sound )","title":"tes3.getSound"},{"location":"apis/tes3/#tes3getsoundgenerator","text":"Returns a sound generator by a given creature id and type. local soundGenerator = tes3 . getSoundGenerator ( creatureId , soundType ) Parameters : creatureId (string) soundType (number): Maps to tes3.soundGenType constants. Returns : soundGenerator ( tes3soundGenerator )","title":"tes3.getSoundGenerator"},{"location":"apis/tes3/#tes3getsoundplaying","text":"Without a reference, this function returns true if the sound is playing unattached or on any reference. With a reference, it returns true if the sound is playing on that specific reference. local soundIsPlaying = tes3 . getSoundPlaying ({ sound = ..., reference = ... }) Parameters : params (table) sound ( tes3sound , string): The sound object, or the ID of the sound to look for. reference ( tes3reference , tes3mobileActor , string): Optional . Returns : soundIsPlaying (boolean)","title":"tes3.getSoundPlaying"},{"location":"apis/tes3/#tes3getspecializationname","text":"Returns the lowercase identifying name of a specialization type for a given numerical, 0-based index. E.g. \"magic\", by using GMSTs. Uses tes3.specializationName enumeration as a fallback. local name = tes3 . getSpecializationName ( specializationId ) Parameters : specializationId (number): Maps to tes3.specialization enumeration. Returns : name (string)","title":"tes3.getSpecializationName"},{"location":"apis/tes3/#tes3getspells","text":"Gets the spells of an actor. This can be filtered by spellType and set to include or exclude actor, racial and birthsign spells. local result = tes3 . getSpells ({ target = ..., spellType = ..., getActorSpells = ..., getRaceSpells = ..., getBirthsignSpells = ... }) Parameters : params (table) target ( tes3reference , tes3mobileActor , tes3actor ): The actor to get the spells of. Must be able to cast spells. spellType (number): Default : -1 . The spell type to filter for. Only spells with this spell type will be returned. A value of -1 will return spells of all types. Maps to values in the tes3.spellType table. getActorSpells (boolean): Default : true . If true , the spells of the actor itself will be included in the result. This includes every spell except racial and birthsign spells. getRaceSpells (boolean): Default : true . If true , the spells of the actor's race will be included in the result. getBirthsignSpells (boolean): Default : true . If true , the spells of the actor's birthsign will be included in the result. Returns : result ( tes3spell [])","title":"tes3.getSpells"},{"location":"apis/tes3/#tes3gettopmenu","text":"Gets the top-level UI menu. local menu = tes3 . getTopMenu () Returns : menu ( tes3uiElement )","title":"tes3.getTopMenu"},{"location":"apis/tes3/#tes3gettrap","text":"Gets the trap on a given reference. local spell = tes3 . getTrap ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) Returns : spell ( tes3spell )","title":"tes3.getTrap"},{"location":"apis/tes3/#tes3getvanitymode","text":"The function returns true if the player is in the vanity mode. Vanity mode is triggered by a period of inactivity from the player or by a tes3.setVanityMode() function. The view is switched to third person (if not already), and the camera is orbiting slowly around the player character. local result = tes3 . getVanityMode () Returns : result (boolean): Is the vanity mode currently active?","title":"tes3.getVanityMode"},{"location":"apis/tes3/#tes3getviewportsize","text":"Returns both the viewport width and the viewport height. Note that this is the real resolution of the screen. For a value scaled by MGE's menu scaling, see the same-named function in the tes3ui namespace. To get the scale used, check getViewportScale in the tes3ui namespace. local width , height = tes3 . getViewportSize () Returns : width (number): The width of the viewport. height (number): The height of the viewport.","title":"tes3.getViewportSize"},{"location":"apis/tes3/#tes3getwerewolfkillcount","text":"Returns the number of kills player commited as a Werewolf. local werewolfKills = tes3 . getWerewolfKillCount () Returns : werewolfKills (number)","title":"tes3.getWerewolfKillCount"},{"location":"apis/tes3/#tes3hammerkey","text":"Simulates hammering a key. tes3 . hammerKey ( keyCode ) Parameters : keyCode (number)","title":"tes3.hammerKey"},{"location":"apis/tes3/#tes3hascodepatchfeature","text":"Attempts to determine if a given Morrowind Code Patch feature is enabled. This may not be possible, in which case nil will be returned. local state = tes3 . hasCodePatchFeature ( id ) Parameters : id (number): The id of the feature. Maps to values in tes3.codePatchFeature constants. Returns : state (boolean, nil)","title":"tes3.hasCodePatchFeature"},{"location":"apis/tes3/#tes3hasownershipaccess","text":"Determines if a reference has access to another object, including its inventory. References have access to their own things, and the player has access to dead NPC's items. local hasAccess = tes3 . hasOwnershipAccess ({ reference = ..., target = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Default : tes3.player . The actor to check permissions for. target ( tes3reference , tes3mobileActor , string): The reference to check access of. Returns : hasAccess (boolean)","title":"tes3.hasOwnershipAccess"},{"location":"apis/tes3/#tes3hasspell","text":"Determines if the player has access to a given spell. local hasSpell = tes3 . hasSpell ({ reference = ..., actor = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to check the spell list of. To check an actor without specifying any particular reference, use actor instead. actor ( tes3actor , string): Who to check the spell list of. Providing a base actor can be done before a save has been loaded, but may not correctly update effects for instanced versions of that actor in an active save. spell ( tes3spell , string): The spell to check. Returns : hasSpell (boolean): True if the spell exists in the actor's spell list, race spell list, or birthsign spell list.","title":"tes3.hasSpell"},{"location":"apis/tes3/#tes3incrementkillcount","text":"Increases player's kill count of a certain type of actor by one. tes3 . incrementKillCount ({ actor = ... }) Parameters : params (table) actor ( tes3actor , string): The actor (or their ID) for whom to increase player's kill count.","title":"tes3.incrementKillCount"},{"location":"apis/tes3/#tes3is3rdperson","text":"Returns true if the game is in 3rd person. local state = tes3 . is3rdPerson () Returns : state (boolean)","title":"tes3.is3rdPerson"},{"location":"apis/tes3/#tes3isaffectedby","text":"This function performs a check whether the provided reference is affected by a certain object or magic effect. Note reference.object.spells:contains(spellID) will give the same output as this function for abilities, diseases, and curses, because having them in your spell list also makes them affect you. local isAffectedBy = tes3 . isAffectedBy ({ reference = ..., effect = ..., object = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) effect (number): Optional . A numerical identifier of the magic effect to perform a check for. Maps to tes3.effect constant, including those claimed with tes3.claimSpellEffectId() , and then added with tes3.addMagicEffect() . object ( tes3alchemy , tes3enchantment , tes3spell , tes3magicEffect , string): Optional . An object to perform a check for. Returns : isAffectedBy (boolean)","title":"tes3.isAffectedBy"},{"location":"apis/tes3/#tes3ischargenfinished","text":"Returns true if the character generation process has been finished for the current player character. local result = tes3 . isCharGenFinished () Returns : result (boolean)","title":"tes3.isCharGenFinished"},{"location":"apis/tes3/#tes3iskeyequal","text":"Compares two key objects and returns their equality. Returns true if the objects are equal, false otherwise. local equal = tes3 . isKeyEqual ({ actual = ..., expected = ... }) Parameters : params (table) actual (table): The key object that is being compared. keyCode (number): Default : false . Value of the actual key scan code, such as the letter p . Maps to tes3.scanCode.* . isShiftDown (boolean): Default : false . Value of whether the shift key is pressed. isControlDown (boolean): Default : false . Value of whether the control key is pressed. isAltDown (boolean): Default : false . Value of whether the alt key is pressed. isSuperDown (boolean): Default : false . Value of whether the super (Windows key) key is pressed. expected (table): The key object that is being compared against. keyCode (number): Default : false . Value of the expected key scan code, such as the letter p . Maps to tes3.scanCode.* . isShiftDown (boolean): Default : false . Value of whether the shift key is expected to be pressed. isControlDown (boolean): Default : false . Value of whether the control key is expected to be pressed. isAltDown (boolean): Default : false . Value of whether the alt key is expected to be pressed. isSuperDown (boolean): Default : false . Value of whether the super (Windows key) key is pressed. Returns : equal (boolean)","title":"tes3.isKeyEqual"},{"location":"apis/tes3/#tes3isluamodactive","text":"Determines if the player has a given lua mod active. The key passed to this function is the path to where its main.lua file is, relative to the MWSE\\mods folder. Slashes are automatically replaced with periods, and the key is case-insensitive. local isActive = tes3 . isLuaModActive ( key ) Parameters : key (string): The key to check. Returns : isActive (boolean): True if the mod is active, otherwise false. Example: Determine if a Specific Lua Mod is Active In this example, we determine if Chameleon is active. The mod provides no interop files to try to include , and is a simple main.lua file. This makes it hard to otherwise detect. if ( tes3 . isLuaModActive ( \"Danae.Chameleon\" )) then -- Perform some compatibility actions here. end","title":"tes3.isLuaModActive"},{"location":"apis/tes3/#tes3ismodactive","text":"Determines if the player has a given ESP or ESM file active. local result = tes3 . isModActive ( filename ) Parameters : filename (string): The filename of the mod to find, including the extension. Returns : result (boolean)","title":"tes3.isModActive"},{"location":"apis/tes3/#tes3iterate","text":"This function returns a function that iterates over a tes3iterator object. This is useful for for loops. Note that tes3iterator objects support iteration with pairs() function. local function = tes3 . iterate ( iterator ) Parameters : iterator ( tes3iterator ) Returns : function (function)","title":"tes3.iterate"},{"location":"apis/tes3/#tes3iterateobjects","text":"Iteration function used for looping over game options. local object = tes3 . iterateObjects ( filter ) Parameters : filter (number, number[], nil): Maps to tes3.objectType constants. Returns : object ( tes3object )","title":"tes3.iterateObjects"},{"location":"apis/tes3/#tes3loadanimation","text":"Loads an animation and uses it to override existing animations on an actor. Animation groups present in the file will replace the actor's animation groups. The actor's model must be already loaded into memory to have its animations modified. The overridden animations only persist until the actor is unloaded. Calling this more than once will remove the previous animation override before loading the new animation. Therefore, if applying animations to the player, you should call this before every playAnimation so that different animation mods can co-exist. For NPCs under your mod's control, you only need to do it when the player enters the cell containing the NPC. Calling this without a file argument will reset the reference's animations to default. tes3 . loadAnimation ({ reference = ..., file = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference to the actor that is having its animations modified. file (string): Optional . The specified animation base file that will be loaded. e.g. For an animation composed of files anim.nif, xanim.nif and xanim.kf, you should pass file=\"anim.nif\". The animation target skeleton must match the skeleton of the actor to work. i.e. 3rd person anims for NPCs and tes3.player, 1st person anims for firstPersonReference.","title":"tes3.loadAnimation"},{"location":"apis/tes3/#tes3loadgame","text":"Loads a game. tes3 . loadGame ( filename ) Parameters : filename (string): The full filename of the save that we want to load, including extension.","title":"tes3.loadGame"},{"location":"apis/tes3/#tes3loadmesh","text":"Loads a mesh file and provides a scene graph object. local model = tes3 . loadMesh ( path , useCache ) Parameters : path (string): Path, relative to Data Files/Meshes. useCache (boolean): Default : true . If false, a new object will be created even if it had been previously loaded. Returns : model ( niNode )","title":"tes3.loadMesh"},{"location":"apis/tes3/#tes3loadsourcetexture","text":"Loads a source texture file and provides the niSourceTexture object. local texture = tes3 . loadSourceTexture ( path , useCache ) Parameters : path (string): Path, relative to Data Files/Textures. useCache (boolean): Default : true . If false, a new object will be created even if it had been previously loaded. Returns : texture ( niSourceTexture )","title":"tes3.loadSourceTexture"},{"location":"apis/tes3/#tes3lock","text":"Locks an object, and optionally sets a locked reference's lock level. Returns true if the object can be and wasn't already locked. local locked = tes3 . lock ({ reference = ..., level = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) level (number): Optional . Returns : locked (boolean)","title":"tes3.lock"},{"location":"apis/tes3/#tes3looptarray","text":"This function returns a function that iterates over a tes3tarray object. This is useful for for loops. local iterationFunction = tes3 . loopTArray ( tarray ) Parameters : tarray (tes3tarray) Returns : iterationFunction (function)","title":"tes3.loopTArray"},{"location":"apis/tes3/#tes3makesafeobjecthandle","text":"Returns a safe handle for the object. To get the object use :getObject() . To check if it still exists use :valid() . local safeObjectHandle = tes3 . makeSafeObjectHandle ( object ) Parameters : object ( tes3object ): An object to make a safe handle for. Returns : safeObjectHandle ( mwseSafeObjectHandle )","title":"tes3.makeSafeObjectHandle"},{"location":"apis/tes3/#tes3menumode","text":"Returns true if the player is currently in menu mode. local inMenuMode = tes3 . menuMode () Returns : inMenuMode (boolean)","title":"tes3.menuMode"},{"location":"apis/tes3/#tes3messagebox","text":"Displays a message box. This may be a simple toast-style message, or a box with choice buttons. local element = tes3 . messageBox ({ message = ..., buttons = ..., callback = ..., showInDialog = ..., duration = ... }, formatAdditions ) Parameters : messageOrParams (string, table) message (string) buttons (string[]): Optional . An array of strings to use for buttons. callback (function): The callback function will be executed after a button was pressed. The callback function will be passed a table with button field corresponding to 0-based index of the button from passed buttons array. showInDialog (boolean): Default : true . Specifying showInDialog = false forces the toast-style message, which is not shown in the dialog menu. duration (number): Optional . Overrides how long the toast-style message remains visible. formatAdditions (variadic): Optional . Only used if messageOrParams is a string. Returns : element ( tes3uiElement , nil): The UI menu created for the notification, if any. Example: A message box with a callback function This demonstrates how to determine which button was pressed inside callback function. -- This variable is used to store a function that will be -- registered as a callback when a button is pressed inside -- our messageBox. The function's body is declared later. local onButtonPressed -- This function is registered to execute when U key is pressed. local function onKeyPressed () tes3 . messageBox ({ message = \"Do you want a muffin?\" , buttons = { \"Yes\" , \"No\" }, showInDialog = false , callback = onButtonPressed , }) end event . register ( tes3 . event . keyDown , onKeyPressed , { filter = tes3 . scanCode . u }) -- Here we define the body of our function. onButtonPressed = function ( e ) -- This corresponds to the first button -- of our message, which is \"Yes\" if e . button == 0 then tes3 . addItem ({ reference = tes3 . player , item = \"ingred_bread_01_UNI3\" , }) else -- Do nothing end end","title":"tes3.messageBox"},{"location":"apis/tes3/#tes3modstatistic","text":"Modifies a statistic on a given actor. This should be used instead of manually setting values on the game structures, to ensure that events and GUI elements are properly handled. Either skill, attribute, or name must be provided. tes3 . modStatistic ({ reference = ..., name = ..., attribute = ..., skill = ..., base = ..., current = ..., value = ..., limit = ..., limitToBase = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string) name (string): Optional . A generic name of an attribute to set. attribute (number): Optional . The attribute to set. skill (number): Optional . The skill to set. base (number): Optional . If set, the base value will be modified. current (number): Optional . If set, the current value will be modified. value (number): Optional . If set, both the base and current value will be modified. limit (boolean): Default : false . If set, the attribute won't rise above 100 or fall below 0. limitToBase (boolean): Default : false . If set, the attribute's current value won't rise above its base value. Useful for health, magicka, and fatigue. Example: Decrease Health of an Actor In this simple example, the current health of an actor, the player, is decreased by 10. To simulate actual combat damage, you should use tes3mobileActor.applyDamage. tes3 . modStatistic ({ reference = tes3 . mobilePlayer , name = \"health\" , current = - 10 }) Example: Restore Magicka without Overflowing Magicka is restored without exceeding the magicka pool using the limitToBase flag. tes3 . modStatistic ({ reference = tes3 . mobilePlayer , name = \"magicka\" , current = 20 , limitToBase = true })","title":"tes3.modStatistic"},{"location":"apis/tes3/#tes3newgame","text":"Starts a new game. tes3 . newGame ()","title":"tes3.newGame"},{"location":"apis/tes3/#tes3onmainmenu","text":"Returns true if the player is on the main menu, and hasn't loaded a game yet. local onMainMenu = tes3 . onMainMenu () Returns : onMainMenu (boolean)","title":"tes3.onMainMenu"},{"location":"apis/tes3/#tes3persuade","text":"Attempts a persuasion attempt on an actor, potentially adjusting their disposition. Returns true if the attempt was a success. local success = tes3 . persuade ({ actor = ..., index = ..., modifier = ... }) Parameters : params (table) actor ( tes3mobileActor , tes3reference , string): The actor to try to persuade. index (number): Optional . If an index is provided, 0-indexed with the following results: admire, intimidate, taunt, bribe (10), bribe (100), bribe (1000). modifier (number): Optional . If no index is provided, this is the direct modifier to try. The higher the modifer the higher the chance of a successful persuation, and higher disposition change. Returns : success (boolean)","title":"tes3.persuade"},{"location":"apis/tes3/#tes3playanimation","text":"Plays a given animation group. Optional flags can be used to define how the group starts. When 'group' is specified, the actor AI is paused while playing the animation, as if in an idle state. When one or more of 'lower', 'upper', or 'shield' are specified without 'group', the actor AI retains control, and the animations are layered. e.g. tes3.playAnimation{reference = ..., upper = tes3.animationGroup.idle3, loopCount = 0} will play the idle3 animation once (without looping) on the upper body, while the player or NPC is still able to walk around. Using 'upper' defers combat actions until the animation is done. Using 'shield' still allows combat actions. As a special case, tes3.playAnimation{reference = ..., group = 0} returns control to the AI, as the AI knows that is the actor's neutral idle state. tes3 . playAnimation ({ reference = ..., group = ..., lower = ..., upper = ..., shield = ..., startFlag = ..., loopCount = ..., mesh = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference that will play the animation. group (number): Optional . The animation group id to start playing -- a value from 0 to 149. Applies the animation to the whole body. Maps to tes3.animationGroup constants. lower (number): Optional . Sets the animation group id for the lower body. This is used to combine different animations for each body section. Maps to tes3.animationGroup constants. upper (number): Optional . Sets the animation group id for the upper body. This is used to combine different animations for each body section. Maps to tes3.animationGroup constants. shield (number): Optional . Sets the animation group id for the shield arm. This is used to combine different animations for each body section. Maps to tes3.animationGroup constants. startFlag (number): Default : tes3.animationStartFlag.immediate . A flag for starting the group with, using tes3.animationStartFlag constants. loopCount (number): Default : -1 . If provided, the animation will repeat its loop section a given number of times. To make an animation play through once, set loopCount = 0. Defaults to infinite looping. mesh (string): Optional . Deprecated. Please use tes3.loadAnimation (check its documentation) before calling playAnimation . You can also use loadAnimation to reset loaded animations to default.","title":"tes3.playAnimation"},{"location":"apis/tes3/#tes3playitempickupsound","text":"Plays the sound responsible for picking up or putting down an item. local executed = tes3 . playItemPickupSound ({ reference = ..., item = ..., pickup = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Optional . The reference to attach the sound to. item ( tes3item ) pickup (boolean): Default : true . If false, the place down item will be used. Returns : executed (boolean)","title":"tes3.playItemPickupSound"},{"location":"apis/tes3/#tes3playsound","text":"Plays a sound on a given reference. Provides control over volume (including volume channel), pitch, and loop control. Note : MP3 sound files can only be played if they are inside \\Vo\\ folder. The files must conform to the MPEG Layer-3, 64 Kbps 44100 kHz, 16-bit mono specification. local executed = tes3 . playSound ({ sound = ..., reference = ..., loop = ..., mixChannel = ..., volume = ..., pitch = ..., soundPath = ... }) Parameters : params (table) sound ( tes3sound , string): The sound object, or id of the sound to look for. reference ( tes3reference , tes3mobileActor , string): Optional . The reference to attach the sound to. loop (boolean): Default : false . If true, the sound will loop. mixChannel (number): Default : tes3.soundMix.effects . The channel to base volume off of. Maps to tes3.soundMix constants. volume (number): Default : 1.0 . A value between 0.0 and 1.0 to scale the volume off of. pitch (number): Default : 1.0 . The pitch-shift multiplier. For 22kHz audio (most typical) it can have the range [0.005, 4.5]; for 44kHz audio it can have the range [0.0025, 2.25]. soundPath (string): Optional . The path to a custom soundfile (useful for playing sounds that are not registered in the Construction Set). Starts in Data Files\\Sound. Returns : executed (boolean)","title":"tes3.playSound"},{"location":"apis/tes3/#tes3playvoiceover","text":"Causes a target actor to play a voiceover. local played = tes3 . playVoiceover ({ actor = ..., voiceover = ... }) Parameters : params (table) actor ( tes3mobileActor , tes3reference , string): The actor to play a voiceover. voiceover (number): Maps to tes3.voiceover constants. Returns : played (boolean)","title":"tes3.playVoiceover"},{"location":"apis/tes3/#tes3positioncell","text":"Positions a reference to another place. local executed = tes3 . positionCell ({ reference = ..., cell = ..., position = ..., orientation = ..., forceCellChange = ..., suppressFader = ..., teleportCompanions = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Default : tes3.mobilePlayer . The reference to reposition. cell ( tes3cell ): Optional . The cell to move the reference to. If not provided, the reference will be moved to a cell in the exterior worldspace at the position provided. position ( tes3vector3 , table): The position to move the reference to. orientation ( tes3vector3 , table): Optional . The new orientation of the reference. forceCellChange (boolean): Default : false . When true, forces the game to update a reference that has moved within a single cell, as if it was moved into a new cell. suppressFader (boolean): Default : false . When moving the player, can be used to prevent the fade in and out visual effect. teleportCompanions (boolean): Default : true . If used on the player, determines if companions should also be teleported. Returns : executed (boolean)","title":"tes3.positionCell"},{"location":"apis/tes3/#tes3pushkey","text":"Simulates pushing a keyboard key. tes3 . pushKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace.","title":"tes3.pushKey"},{"location":"apis/tes3/#tes3random","text":"Returns a value from Morrowind's random number generator. This is not preferrable to lua's math.random function, but may be necessary for reproducing Morrowind's generation. tes3 . random ( seed ) Parameters : seed (number): Optional . If provided, it the number generator is seeded with this value. Pointers to objects may be used, such as a reference's sceneNode, to create a consistent if less than random seed.","title":"tes3.random"},{"location":"apis/tes3/#tes3raytest","text":"Performs a ray test and returns various information related to the result(s). If findAll is set, the result will be a table of results, otherwise only the first result is returned. Tip Keep maximum size of objects reasonable, as well as triangle counts Whenever possible set a maxDistance in your rayTest calls Keep a cached table of ignored objects that you pass to rayTest Whenever possible call ray test on only a subset of the game's scene graph. It can be worldPickRoot for interactable objects, worldLandscapeRoot , or worldObjectRoot for other static, non-interactable objects. You could even pass a smaller subset of the scene graph with a different NiNode you aquired yourself. If your mod's logic only needs specific things you can narrow it down for big performance improvement. local result = tes3 . rayTest ({ position = ..., direction = ..., findAll = ..., maxDistance = ..., sort = ..., useModelBounds = ..., useModelCoordinates = ..., useBackTriangles = ..., observeAppCullFlag = ..., root = ..., returnColor = ..., returnNormal = ..., returnSmoothNormal = ..., returnTexture = ..., ignore = ... }) Parameters : params (table) position ( tes3vector3 , table): Position of the ray origin. direction ( tes3vector3 , table): Direction of the ray. Does not have to be unit length. findAll (boolean): Default : false . If true, the ray test won't stop after the first result. maxDistance (number): Default : 0 . The maximum distance that the test will run. sort (boolean): Default : true . If true, the results will be sorted by distance from the origin position. useModelBounds (boolean): Default : false . If true, model bounds will be tested for intersection. Otherwise triangles will be used. useModelCoordinates (boolean): Default : false . If true, model coordinates will be used instead of world coordinates. useBackTriangles (boolean): Default : false . Include intersections with back-facing triangles. observeAppCullFlag (boolean): Default : true . Ignore intersections with culled (hidden) models. root ( niNode ): Default : tes3.game.worldRoot . Node pointer to node scene. To reduce the computational work, consider passing only a smaller subset of the worldRoot to improve performance. The typical nodes you can pass here are: tes3.game.worldLandscapeRoot , worldObjectRoot , and worldPickRoot . returnColor (boolean): Default : false . Calculate and return the vertex color at intersections. returnNormal (boolean): Default : false . Calculate and return the vertex normal at intersections. returnSmoothNormal (boolean): Default : false . Use normal interpolation for calculating vertex normals. returnTexture (boolean): Default : false . Calculate and return the texture coordinate at intersections. ignore (table<integer, niNode | tes3reference >): Optional . An array of references and/or scene graph nodes to cull from the result(s). Returns : result ( niPickRecord , niPickRecord [], nil) Example: Get Activation Target This example performs a ray test to match the normal activation target test. Unlike tes3.getPlayerTarget() this will return objects not normally available for activation. local hitResult = tes3 . rayTest ({ position = tes3 . getPlayerEyePosition (), direction = tes3 . getPlayerEyeVector () }) local hitReference = hitResult and hitResult . reference if ( hitReference == nil ) then return end tes3 . messageBox ( \"The player is looking at a '%s'\" , hitReference . object . name or hitReference . object . id ) Example: Get Camera Target This example performs a ray test to see what the camera is currently looking at. local hitResult = tes3 . rayTest ({ position = tes3 . getCameraPosition (), direction = tes3 . getCameraVector () }) local hitReference = hitResult and hitResult . reference if ( hitReference == nil ) then return end tes3 . messageBox ( \"The camera is looking at a '%s'\" , hitReference . object . name or hitReference . object . id ) Example: Multiple Results This example performs a ray test and displays all results in the entire ray test, rather than ending at the first object hit. local results = tes3 . rayTest { tes3 . getCameraPosition (), direction = tes3 . getCameraVector (), findAll = true } if results then for i , hit in pairs ( results ) do mwse . log ( \"Ray hit #%d: %s\" , i , hit . reference or \"<non-reference>\" ); end end Example: Save rayTest result for use at a later point If you plan to use the results of rayTest, you should make sure it still exists. For example, an object which was in a list of results of rayTest can get unloaded when the player changes cells and become invalid, so it shouldn't be accessed. local result = tes3 . rayTest { -- the result can get invalidated position = tes3 . getPlayerEyePosition (), direction = tes3 . getPlayerEyeVector (), ignore = { tes3 . player } } local refHandle if result then refHandle = tes3 . makeSafeObjectHandle ( result . reference ) end local function myFunction () -- Before using the reference, we need to check that it's still valid. -- References get unloaded on cell changes etc. if refHandle : valid () then -- Now we can safely do something with our stored reference. local reference = refHandle : getObject () end end","title":"tes3.rayTest"},{"location":"apis/tes3/#tes3releasekey","text":"Simulates releasing a keyboard key. tes3 . releaseKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace.","title":"tes3.releaseKey"},{"location":"apis/tes3/#tes3removeeffects","text":"Removes magic effects from a given reference. Requires that either the effect or castType parameter be provided. tes3 . removeEffects ({ reference = ..., effect = ..., castType = ..., chance = ..., removeSpell = ... }) Parameters : params (table) reference ( tes3reference ): Target reference to remove effects from. effect (integer): Optional . Maps to tes3.effect constants. castType (integer): Optional . Maps to tes3.spellType constants. chance (number): Default : 100 . The chance for the effect to be removed. removeSpell (boolean): Optional . If removing by cast type, determines if the spell should be removed from the target's spell list. Defaults to true if castType is not tes3.spellType.spell. This causes diseases and curses to be removed when dispelled. Example: Simulating a Dispel In this example there is a 50 % chance that any Water Breathing magic effects will be removed from the player when he/she is underwater. local function example ( e ) -- We only care about the player if ( e . mobile . objectType ~= tes3 . objectType . mobilePlayer ) then return end local cell = tes3 . mobilePlayer . cell if ( cell . isInterior and not cell . hasWater ) then return end local waterLevel = cell . waterLevel local headPosition = tes3 . mobilePlayer . position . z + tes3 . mobilePlayer . height local underwater = headPosition < waterLevel if underwater then -- There is a 50 % chance that any Water Breathing effect will be removed from the player tes3 . removeEffects ({ reference = tes3 . player , chance = 50 , effect = tes3 . effect . waterBreathing , }) end end event . register ( tes3 . event . initialized , function () event . register ( tes3 . event . calcMoveSpeed , example ) end )","title":"tes3.removeEffects"},{"location":"apis/tes3/#tes3removeitem","text":"Removes an item from a given reference's inventory. local removedCount = tes3 . removeItem ({ reference = ..., item = ..., itemData = ..., deleteItemData = ..., count = ..., playSound = ..., reevaluateEquipment = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to remove items from. item ( tes3item , string): The item to remove. itemData ( tes3itemData ): Optional . The item data for the exact item to remove. deleteItemData ( tes3itemData ): Optional . Whether to delete the item data after remove succeeds. Automatically set if itemData is used. Does not need to be specified for normal usage. count (number): Default : 1 . The maximum number of items to remove. playSound (boolean): Default : true . If false, the up/down sound for the item won't be played. reevaluateEquipment (boolean): Default : true . If true, and the item removed is armor, clothing, or a weapon, the actor will reevaluate its equipment choices to see if it needs to equip a new item. This does not affect the player. updateGUI (boolean): Default : true . If false, the function won't manually resync the player's GUI state. This can result in some optimizations, though tes3ui.forcePlayerInventoryUpdate() must manually be called after all inventory updates are finished. Returns : removedCount (number)","title":"tes3.removeItem"},{"location":"apis/tes3/#tes3removeitemdata","text":"Removes and deletes item data from a given reference, or from their inventory. If no itemData is provided, it will be removed from the reference itself. local wasRemoved = tes3 . removeItemData ({ from = ..., item = ..., itemData = ..., force = ..., ignoreOwnership = ..., updateGUI = ... }) Parameters : params (table) from ( tes3reference , tes3mobileActor , string): The reference or mobile whose inventory will be modified. item ( tes3item , string): The item to remove item data for. itemData ( tes3itemData ): Optional . The exact item data to remove. If no itemData is provided, the itemData from the reference itself will be removed. force (boolean): Default : false . If true, no checks are made to see if the item data should be deleted. It will always be purged. ignoreOwnership (boolean): Default : true . If force is false, a check will be made to see if the item data is empty and can be deleted. By default this ignores any ownership data. Setting this to false will override that behavior. updateGUI (boolean): Default : true . If false, the player or contents menu won't be updated. Returns : wasRemoved (boolean)","title":"tes3.removeItemData"},{"location":"apis/tes3/#tes3removesound","text":"Stops a sound playing. Without a reference, it will match unattached sounds. With a reference, it will only match a sound playing on that specific reference. tes3 . removeSound ({ sound = ..., reference = ... }) Parameters : params (table) sound ( tes3sound , string): The sound object, or id of the sound to look for. reference ( tes3reference , tes3mobileActor , string): Optional . The reference the sound is attached to.","title":"tes3.removeSound"},{"location":"apis/tes3/#tes3removespell","text":"Removes a spell from an actor's spell list. If the spell is passive, any active effects from that spell are retired. local wasRemoved = tes3 . removeSpell ({ reference = ..., actor = ..., spell = ..., updateGUI = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): Who to remove the spell from. To manipulate an actor without specifying any particular reference, use actor instead. actor ( tes3actor , string): Who to remove the spell from. Providing a base actor can be done before a save has been loaded, but may not correctly update effects for instanced versions of that actor in an active save. spell ( tes3spell , string): The spell to remove. updateGUI (boolean): Default : true . If true, the GUI will be updated respecting the removal of the spell. This can be useful to disable when batch-removing many spells. The batch should be ended with tes3.updateMagicGUI to reflect the changes. Returns : wasRemoved (boolean): True if the spell was successfully removed. This can be false if the spell comes from a race or birthsign.","title":"tes3.removeSpell"},{"location":"apis/tes3/#tes3removevisualeffect","text":"Removes one or more visual effects created either through magical effects or tes3.createVisualEffect() . local removedCount = tes3 . removeVisualEffect ({ vfx = ..., avObject = ..., serial = ..., reference = ... }) Parameters : params (table) vfx ( tes3vfx ): Optional . If provided, the specific VFX handle will be deleted. avObject ( niAVObject ): Optional . If provided, any VFXs associated with the given niAVObject will be deleted. serial (number): Optional . The magic source instance serial number to remove effects for. This must be paired with a reference as well. reference ( tes3reference , string): Optional . The reference to remove all visual effects from. A serial may also be provided. Returns : removedCount (number): The amount of VFX removed by this function call.","title":"tes3.removeVisualEffect"},{"location":"apis/tes3/#tes3runlegacyscript","text":"This function will compile and run a mwscript chunk of code. This is not ideal to use, but can be used for features not yet exposed to lua. local executed = tes3 . runLegacyScript ({ script = ..., source = ..., command = ..., variables = ..., reference = ..., dialogue = ..., info = ... }) Parameters : params (table) script ( tes3script ): Default : tes3.worldController.scriptGlobals . The base script to base the execution from. source (number): The compilation source to use. Defaults to tes3.scriptSource.default command (string): The script text to compile and run. variables (tes3scriptVariables): Optional . If a reference is provided, the reference's variables will be used. reference ( tes3reference , tes3mobileActor , string): The reference to target for execution. dialogue ( tes3dialogue , string): Optional . If compiling for dialogue context, the dialogue associated with the script. info ( tes3dialogueInfo ): Optional . The info associated with the dialogue. Returns : executed (boolean)","title":"tes3.runLegacyScript"},{"location":"apis/tes3/#tes3savegame","text":"Saves the game. local saved = tes3 . saveGame ({ file = ..., name = ... }) Parameters : params (table) file (string): Default : \"quiksave\" . The filename of the save that will be created, without extension. name (string): Default : \"Quicksave\" . The display name of the save. Returns : saved (boolean)","title":"tes3.saveGame"},{"location":"apis/tes3/#tes3say","text":"Plays a sound file, with an optional alteration and subtitle. Note : MP3 voice files must conform to the MPEG Layer-3, 64 Kbps 44100 kHz, 16-bit mono specification. tes3 . say ({ reference = ..., soundPath = ..., pitch = ..., volume = ..., forceSubtitle = ..., subtitle = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to make say something. soundPath (string): A path to a valid sound file. pitch (number): Default : 1 . A pitch shift to adjust the sound with. volume (number): Default : 1 . The volume to play the sound at, relative to the voice mix channel. forceSubtitle (boolean): Default : false . If true a subtitle will be shown, even if subtitles are disabled. subtitle (string): Optional . The subtitle to show if subtitles are enabled, or if forceSubtitle is set.","title":"tes3.say"},{"location":"apis/tes3/#tes3set3rdpersoncameraoffset","text":"Changes the 3rd person camera offset from the player's head. Important This function can be used once tes3worldController and tes3mobilePlayer have finished initializing. tes3 . set3rdPersonCameraOffset ({ offset = ... }) Parameters : params (table) offset ( tes3vector3 ): The offset vector.","title":"tes3.set3rdPersonCameraOffset"},{"location":"apis/tes3/#tes3setaiactivate","text":"Configures a mobile actor to activate an object. tes3 . setAIActivate ({ reference = ..., target = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ): This actor will activate the provided target reference. target ( tes3reference ): The reference to activate. reset (boolean): Default : true .","title":"tes3.setAIActivate"},{"location":"apis/tes3/#tes3setaiescort","text":"Configures a mobile actor to escort another actor to a destination. Escorting actor will protect and wait for the escortee to catch up. Its advisible to make the target actor follow the escorting actor with tes3.setAIFollow() , because the escorting actor will otherwise wait the escortee forever. tes3 . setAIEscort ({ reference = ..., target = ..., destination = ..., duration = ..., cell = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ): The escorting actor. target ( tes3reference , tes3mobileActor ): The actor being escorted. destination ( tes3vector3 , table) duration (number): Default : 0 . How long the escorter will do the escorting, in hours. cell ( tes3cell , string): Optional . reset (boolean): Default : true .","title":"tes3.setAIEscort"},{"location":"apis/tes3/#tes3setaifollow","text":"Configures a mobile actor to follow another actor to a destination. tes3 . setAIFollow ({ reference = ..., target = ..., destination = ..., duration = ..., cell = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ): This is the actor that will follow another one. target ( tes3reference , tes3mobileActor ): The actor to follow. destination ( tes3vector3 , table): Optional . duration (number): Default : 0 . How long the follower will follow, in hours. cell ( tes3cell , string): Optional . reset (boolean): Default : true .","title":"tes3.setAIFollow"},{"location":"apis/tes3/#tes3setaitravel","text":"Configures a mobile actor to travel to a destination. tes3 . setAITravel ({ reference = ..., destination = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ) destination ( tes3vector3 , table) reset (boolean): Default : true .","title":"tes3.setAITravel"},{"location":"apis/tes3/#tes3setaiwander","text":"Configures a mobile actor to wander around a cell. tes3 . setAIWander ({ reference = ..., idles = ..., range = ..., duration = ..., time = ..., reset = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference ): This actor will wander around. idles (number[]): An array with 8 values that corresponds to the chance of playing each idle animation. For more info see tes3aiPackageWander.idles . range (number): Default : 0 . duration (number): Default : 0 . How long the actor will be wandering around, in hours. time (number): Default : 0 . reset (boolean): Default : true .","title":"tes3.setAIWander"},{"location":"apis/tes3/#tes3setanimationtiming","text":"This function sets a reference's animation groups' timings to a specified value. tes3 . setAnimationTiming ({ reference = ..., timing = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): A reference whose animation groups' timings to set. timing (number, table): If one parameter is provided, all animation data timings will be set to the timing provided. If a table with 3 timings is provided, animation data timings will be set accordingly.","title":"tes3.setAnimationTiming"},{"location":"apis/tes3/#tes3setdestination","text":"Sets or changes the destination of a door to a new location. tes3 . setDestination ({ reference = ..., position = ..., orientation = ..., cell = ... }) Parameters : params (table) reference ( tes3reference ): The door reference that will be updated. position ( tes3vector3 , table): The new coordinates of the transition. orientation ( tes3vector3 , table): The new rotation to use after transition. cell ( tes3cell , string): Optional . The cell to transition to, if transitioning to an interior.","title":"tes3.setDestination"},{"location":"apis/tes3/#tes3setenabled","text":"Enables or disables a reference. local success = tes3 . setEnabled ({ reference = ..., toggle = ..., enabled = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to enable/disable. toggle (boolean): Default : false . If true, the enabled state will be toggled. enabled (boolean): Default : true . If not toggling, setting enabled to true will enable the reference or to false will disable the reference. Returns : success (boolean)","title":"tes3.setEnabled"},{"location":"apis/tes3/#tes3setglobal","text":"Sets the value of a global value. If the global could not be found, the function returns false. local value = tes3 . setGlobal ( id , value ) Parameters : id (string) value (number) Returns : value (boolean)","title":"tes3.setGlobal"},{"location":"apis/tes3/#tes3setitemisstolen","text":"This function changes an item's stolen flag. Morrowind handles stealing by marking the base item (not the inventory stack) with NPCs that you have stolen that item from. The NPC will recognize an item as stolen if they are marked as stolen on the base item. tes3 . setItemIsStolen ({ item = ..., from = ..., stolen = ... }) Parameters : params (table) item ( tes3item ): The item whose stolen flag to modify. from ( tes3creature , tes3npc , tes3faction , nil): Who or what to set/clear the stolen state for. If not provided, the stolen state can be cleared (but not set) for all objects. stolen (boolean): Default : true . If this parameter is set to true, the item will be flagged as stolen. Otherwise, the item's stolen flag will be removed.","title":"tes3.setItemIsStolen"},{"location":"apis/tes3/#tes3setjournalindex","text":"Sets the index of a given journal in a way similar to the mwscript function SetJournalIndex. local wasSet = tes3 . setJournalIndex ({ id = ..., index = ..., speaker = ..., showMessage = ... }) Parameters : params (table) id ( tes3dialogue , string) index (number) speaker ( tes3mobileActor , tes3reference , string) showMessage (boolean): Default : false . If set, a message may be shown to the player. Returns : wasSet (boolean)","title":"tes3.setJournalIndex"},{"location":"apis/tes3/#tes3setkillcount","text":"Sets player's kill count of a certain type of actor. tes3 . setKillCount ({ actor = ..., count = ... }) Parameters : params (table) actor ( tes3actor , string): The actor (or their ID) for whom to set player's kill count. count (number): Number of kills that will be set.","title":"tes3.setKillCount"},{"location":"apis/tes3/#tes3setlocklevel","text":"Sets a locked reference's lock level. This does not lock the object. local set = tes3 . setLockLevel ({ reference = ..., level = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) level (number) Returns : set (boolean)","title":"tes3.setLockLevel"},{"location":"apis/tes3/#tes3setmarklocation","text":"This function sets the player's mark location to the one specified. tes3 . setMarkLocation ({ position = ..., rotation = ..., cell = ... }) Parameters : params (table) position ( tes3vector3 , number[]): Coordinates of the mark's position. rotation (number): Default : tes3.player.orientation.z . This argument controls which direction the player's mark location will be facing. cell ( tes3cell ): Optional . A cell in which the mark should be placed. This argument is unnecessary when setting the Mark's location to an exterior cell.","title":"tes3.setMarkLocation"},{"location":"apis/tes3/#tes3setowner","text":"This function sets the owner of a reference. tes3 . setOwner ({ reference = ..., remove = ..., owner = ..., requiredGlobal = ..., requiredRank = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): A reference whose owner to set. remove (boolean): Default : false . If this parameter is set to true, reference's owner field will be removed. owner ( tes3npc , tes3faction , string): Assigns this NPC or a faction as the owner of the reference. requiredGlobal ( tes3globalVariable ): Optional . If owner is set to NPC, requiredGlobal variable can be set. requiredRank (number): Default : 0 . If owner is set to faction, requitedRank variable controls minimal rank in faction the player has to have to be able to freely take the reference.","title":"tes3.setOwner"},{"location":"apis/tes3/#tes3setplayercontrolstate","text":"Enables or disables player's controls state. local changedControlState = tes3 . setPlayerControlState ({ enabled = ..., attack = ..., jumping = ..., magic = ..., vanity = ..., viewSwitch = ... }) Parameters : params (table): Optional . enabled (boolean): Default : false . Setting this to false will disable any kind of control. attack (boolean): Default : false . If this is false, it will block player from attacking. jumping (boolean): Default : false . If this is false, it will block player from jumping. magic (boolean): Default : false . If this is false, it will block player from using magic. vanity (boolean): Default : false . If this is false, it will block player from going to vanity mode. viewSwitch (boolean): Default : false . If this is false, it will block player changing view mod from 1st to 3rd person camera and vice versa. Returns : changedControlState (boolean)","title":"tes3.setPlayerControlState"},{"location":"apis/tes3/#tes3setsourceless","text":"Sets an object (of any kind) to be sourceless, which are objects the game does not store in savegames. This can be useful for mod-created temporary objects which are not necessary to save. tes3 . setSourceless ( object , sourceless ) Parameters : object ( tes3baseObject ): The object whose sourceless flag to modify. sourceless (boolean): Default : true . Allows flagging an object as sourceless or undoing that action.","title":"tes3.setSourceless"},{"location":"apis/tes3/#tes3setstatistic","text":"Sets a statistic on a given actor. This should be used instead of manually setting values on the game structures, to ensure that events and GUI elements are properly handled. Either skill, attribute, or name must be provided. tes3 . setStatistic ({ attribute = ..., base = ..., current = ..., limit = ..., name = ..., reference = ..., skill = ..., value = ... }) Parameters : params (table) attribute (number): Optional . The attribute to set. base (number): Optional . If set, the base value will be set. current (number): Optional . If set, the current value will be set. limit (boolean): Default : false . If set, the attribute won't rise above 100 or fall below 0. name (string): Optional . A generic name of an attribute to set. reference ( tes3mobileActor , tes3reference , string) skill (number): Optional . The skill to set. value (number): Optional . If set, both the base and current value will be set.","title":"tes3.setStatistic"},{"location":"apis/tes3/#tes3settrap","text":"Sets the trap on a given reference. local trapped = tes3 . setTrap ({ reference = ..., spell = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) spell ( tes3spell , string) Returns : trapped (boolean)","title":"tes3.setTrap"},{"location":"apis/tes3/#tes3setvanitymode","text":"Toggles the camera into vanity mode. In vanity mode the camera is in third person and it is orbiting slowly around the player character. Returns true if changed to vanity mode. Note that unlike the vanity mode caused by not doing anything for a while, this vanity mode must be toggled to go off. local changedVanityMode = tes3 . setVanityMode ({ enabled = ..., checkVanityDisabled = ..., toggle = ... }) Parameters : params (table): Optional . enabled (boolean): Default : true . This flag sets the vanity mode as enabled or disabled. checkVanityDisabled (boolean): Default : true . This will prevent changing vanity mode according to vanityDisabled flag on tes3.mobilePlayer. toggle (boolean): Default : false . When this flag is set to true. The vanity mode will be toggled. If the player was in vanity mode, this will make the player leave vanity mode. Conversly, if the player wasn't in the vanity mode, this will turn on the vanity mode. Returns : changedVanityMode (boolean)","title":"tes3.setVanityMode"},{"location":"apis/tes3/#tes3setwerewolfkillcount","text":"Sets player's kill count as a werewolf. tes3 . setWerewolfKillCount ({ count = ... }) Parameters : params (table) count (number): Number of kills.","title":"tes3.setWerewolfKillCount"},{"location":"apis/tes3/#tes3showalchemymenu","text":"This function opens the alchemy menu. tes3 . showAlchemyMenu ()","title":"tes3.showAlchemyMenu"},{"location":"apis/tes3/#tes3showcontentsmenu","text":"This function opens the contents menu. This menu is used for containers, companion inventories, and pickpocket attempts. local wasShown = tes3 . showContentsMenu ({ reference = ..., pickpocket = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference to open the contents of. pickpocket (boolean): Default : false . If true, the contents menu will open in the context of an attempted pickpocketing. Returns : wasShown (boolean): If true, the contents menu was successfully shown.","title":"tes3.showContentsMenu"},{"location":"apis/tes3/#tes3showdialoguemenu","text":"This function opens the dialogue menu. This behaves similar to the ForceGreeting mwscript command. local wasShown = tes3 . showDialogueMenu ({ reference = ..., checkAllowWerewolfForceGreeting = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference to open dialogue with. checkAllowWerewolfForceGreeting (boolean): Default : true . If true, the AllowWerewolfForceGreeting variable must exist on the reference's script to allow opening a dialogue while the player is a werewolf. This can be set to false to override the vanilla behavior. Returns : wasShown (boolean): If true, the dialogue window was successfully shown.","title":"tes3.showDialogueMenu"},{"location":"apis/tes3/#tes3showrepairservicemenu","text":"This function opens the repair service menu. tes3 . showRepairServiceMenu ({ serviceActor = ... }) Parameters : params (table): Optional . serviceActor ( tes3mobileActor , tes3reference , string): Default : tes3mobilePlayer . The actor to use for calculating the service price.","title":"tes3.showRepairServiceMenu"},{"location":"apis/tes3/#tes3showrestmenu","text":"This function opens the resting menu and returns true on success. If the player can't rest currently, it returns false. Various parameters can be used to allow resting in situations not normally possible. local success = tes3 . showRestMenu ({ checkForEnemies = ..., checkForSolidGround = ..., checkSleepingIllegal = ..., checkIsWerewolf = ..., showMessage = ..., resting = ..., waiting = ... }) Parameters : params (table): Optional . checkForEnemies (boolean): Default : true . Perform a check whether there are enemies nearby before opening rest menu. If there are, false is returned. checkForSolidGround (boolean): Default : true . Perform a check if the player is underwater. If underwater, false is returned. checkSleepingIllegal (boolean): Default : true . Perform a check if the sleeping in the current cell is illegal. If illegal, then the player will be prompted to wait instead of rest. checkIsWerewolf (boolean): Default : true . Perform a check if the player is Werewolf. If they are, then the player will be prompted to wait instead of rest. showMessage (boolean): Default : true . Should a messagebox be shown if the player can't open resting menu because some condition isn't met. resting (boolean): Default : true . Should this be a rest? waiting (boolean): Default : false . Or, is this a wait? Returns : success (boolean)","title":"tes3.showRestMenu"},{"location":"apis/tes3/#tes3showspellmakingmenu","text":"This function opens the spellmaking menu and returns true on success. local success = tes3 . showSpellmakingMenu ({ serviceActor = ..., useDialogActor = ... }) Parameters : params (table) serviceActor ( tes3mobileActor , tes3reference , string): Optional . The actor to use for calculating the service price. If none is provided, an open dialog menu's service actor will be used instead. useDialogActor (boolean): Default : true . If set to false, the dialog menu service actor will be ignored. If false, a serviceActor must be provided. Returns : success (boolean)","title":"tes3.showSpellmakingMenu"},{"location":"apis/tes3/#tes3skipanimationframe","text":"Skips a given reference's animation for a single frame. tes3 . skipAnimationFrame ({ reference = ... }) Parameters : params (table) reference ( tes3mobileActor , tes3reference , string): The reference whose animation frame will be skipped.","title":"tes3.skipAnimationFrame"},{"location":"apis/tes3/#tes3streammusic","text":"This function interrupts the current music to play the specified music track. local executed = tes3 . streamMusic ({ path = ..., situation = ..., crossfade = ... }) Parameters : params (table) path (string): Path to the music file, relative to Data Files/music/. situation (number): Default : tes3.musicSituation.uninterruptible . Determines what kind of gameplay situation the music should stay active for. Explore music plays during non-combat, and ends when combat starts. Combat music starts during combat, and ends when combat ends. Uninterruptible music always plays, ending only when the track does. This value maps to tes3.musicSituation constants. crossfade (number): Default : 1.0 . The duration in seconds of the crossfade from the old to the new track. The default is 1.0. Returns : executed (boolean)","title":"tes3.streamMusic"},{"location":"apis/tes3/#tes3tapkey","text":"Simulates tapping a keyboard key. tes3 . tapKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace.","title":"tes3.tapKey"},{"location":"apis/tes3/#tes3testlineofsight","text":"Checks if there is a clear line of sight between two references, or two points in space, in the same method that the game uses for actor vision. You should pass two references, or two positions and heights. Only certain object types count as blocking for the purposes of the test: Statics, activators, containers, doors, and lights with non-zero weight. The collision root node is used for testing, if present in the model. local hasLineOfSight = tes3 . testLineOfSight ({ reference1 = ..., reference2 = ..., position1 = ..., height1 = ..., position2 = ..., height2 = ... }) Parameters : params (table) reference1 ( tes3reference ): Position of the starting point of the LoS check. For actors, this point is set to position of this reference's head. For other objects the starting point is at the top of its bounding box. reference2 ( tes3reference ): Position of the ending point of the LoS check. For actors, this point is set to position of this reference's head. For other objects the ending point is at the top of its bounding box. position1 ( tes3vector3 , table): Position of the starting point of the LoS check. Modified by height1. height1 ( tes3vector3 , table): Optional . Moves the starting point upwards (+Z direction) by this amount. Normally used to simulate head height from a position that is on the ground. Defaults to 0. position2 ( tes3vector3 , table): Position of the ending point of the LoS check. Modified by height2. height2 ( tes3vector3 , table): Optional . Moves the starting point upwards (+Z direction) by this amount. Normally used to simulate head height from a position that is on the ground. Defaults to 0. Returns : hasLineOfSight (boolean)","title":"tes3.testLineOfSight"},{"location":"apis/tes3/#tes3togglepov","text":"Forces a toggle of the player's POV the next simulation frame, and returns if the player was previously in 3rd person. Multiple calls in the same frame will not stack. local was3rdPerson = tes3 . togglePOV () Returns : was3rdPerson (boolean)","title":"tes3.togglePOV"},{"location":"apis/tes3/#tes3transferitem","text":"Moves one or more items from one reference to another. Returns the actual amount of items successfully transferred. local transferredCount = tes3 . transferItem ({ from = ..., to = ..., item = ..., itemData = ..., count = ..., playSound = ..., limitCapacity = ..., reevaluateEquipment = ..., equipProjectiles = ..., updateGUI = ... }) Parameters : params (table) from ( tes3reference , tes3mobileActor , string): Who to take items from. to ( tes3reference , tes3mobileActor , string): Who to give items to. item ( tes3item , string): The item to transfer. itemData ( tes3itemData ): Optional . The specific item data to transfer if, for example, you want to transfer a specific player item. count (number): Default : 1 . The maximum number of items to transfer. playSound (boolean): Default : true . If false, the up/down sound for the item won't be played. limitCapacity (boolean): Default : true . If false, items can be placed into containers that shouldn't normally be allowed. This includes organic containers, and containers that are full. reevaluateEquipment (boolean): Default : true . If true, and the item transferred is armor, clothing, or a weapon, the actors will reevaluate their equipment choices to see if the new item is worth equipping. This does not affect the player. equipProjectiles (boolean): Default : true . If true, and the reference has the same projectile already equipped, the stacks will be merged. This will only work if the GUI is updated. updateGUI (boolean): Default : true . If false, the function won't manually resync the player's GUI state. This can result in some optimizations, though tes3ui.forcePlayerInventoryUpdate() must manually be called after all inventory updates are finished. Returns : transferredCount (number)","title":"tes3.transferItem"},{"location":"apis/tes3/#tes3triggercrime","text":"Emulates the player committing a crime. Returns true if the crime was witnessed by an actor. local result = tes3 . triggerCrime ({ type = ..., victim = ..., value = ..., forceDetection = ... }) Parameters : params (table) type (number): Default : tes3.crimeType.theft . The type of crime to be committed. Maps to values in the tes3.crimeType table. victim ( tes3mobileNPC , tes3actor , tes3faction ): Default : tes3.mobilePlayer . The victim of the crime. This can be an individual actor or a entire faction. Has no effect on crimes with a type of tes3.crimeType.trespass or tes3.crimeType.werewolf . value (number): Default : 0 . Only valid if type is tes3.crimeType.theft . The value of the stolen objects. forceDetection (boolean): Default : false . If true , bypasses regular detection logic and forces all nearby actors to detect the crime. Returns : result (boolean)","title":"tes3.triggerCrime"},{"location":"apis/tes3/#tes3undotransform","text":"Changes a reference back from werewolf form to human. This function works only on a reference infected with Lycanthropy, be it the player or any other reference. Returns true if successful. local success = tes3 . undoTransform ({ reference = ... }) Parameters : params (table) reference ( tes3reference ): A reference to change back to human. Returns : success (boolean)","title":"tes3.undoTransform"},{"location":"apis/tes3/#tes3unhammerkey","text":"Stops simulating hammering a keyboard key. tes3 . unhammerKey ( keyCode ) Parameters : keyCode (number): Maps to values in tes3.scanCode namespace.","title":"tes3.unhammerKey"},{"location":"apis/tes3/#tes3unlock","text":"Unlocks an object. Returns true if the object can be and wasn't already unlocked. local unlocked = tes3 . unlock ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string) Returns : unlocked (boolean)","title":"tes3.unlock"},{"location":"apis/tes3/#tes3updateinventorygui","text":"Forces the GUI to update inventory-relevant elements for a given reference. This can be used after many calls to inventory-manipulating functions while passing updateGUI as false to resync inventory tiles, container weights, and companion data. tes3 . updateInventoryGUI ({ reference = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to update GUI elements for.","title":"tes3.updateInventoryGUI"},{"location":"apis/tes3/#tes3updatejournal","text":"Updates the journal index in a way similar to the mwscript function Journal. local wasSet = tes3 . updateJournal ({ id = ..., index = ..., showMessage = ... }) Parameters : params (table) id ( tes3dialogue , string) index (number) showMessage (boolean): Default : false . If set, a message may be shown to the player. Returns : wasSet (boolean)","title":"tes3.updateJournal"},{"location":"apis/tes3/#tes3updatemagicgui","text":"Forces the GUI to update magic-relevant elements for a given reference. This can be used after many calls to magic- or magic item-manipulating functions while passing updateGUI as false to resync inventory tiles, container weights, and companion data. tes3 . updateMagicGUI ({ reference = ..., updateSpells = ..., updateEnchantments = ... }) Parameters : params (table) reference ( tes3reference , tes3mobileActor , string): The reference to update GUI elements for. updateSpells (boolean): Default : true . Determines if the spell and power lists are refreshed. updateEnchantments (boolean): Default : true . Determines if the enchanted items list is refreshed.","title":"tes3.updateMagicGUI"},{"location":"apis/tes3/#tes3wakeup","text":"This function wakes player up and returns true if successful. Note this function returns false if WorldController or MobilePlayer aren't initialized, and if the player is not sleeping or waiting local wokeUp = tes3 . wakeUp () Returns : wokeUp (boolean)","title":"tes3.wakeUp"},{"location":"apis/tes3ui/","text":"tes3ui \u2693\ufe0e The tes3ui library provides access to manipulating the game's GUI. Functions \u2693\ufe0e tes3ui.acquireTextInput \u2693\ufe0e Sends all text input to the specified element. Calling this function with a nil argument will release text input and allow keybinds to work. Suppresses most keybinds while active, except the Journal open/close keybind (it's up to the individual menu implementation). Only one element can have control of input, and there is no automatic restoration of control if one element takes control from another. Be careful of conflicts with other users of this function. tes3ui . acquireTextInput ( element ) Parameters : element ( tes3uiElement ): Optional . tes3ui.captureMouseDrag \u2693\ufe0e When used in a mouse event, causes the element to capture further mouse events even when the cursor goes outside the element. Setting mouse capture should always be accompanied by releasing it on a complementary event. This is commonly used for dragging, so that it can continue even if the mouse moves slightly outside the element. The capture is always removed when the element is destroyed. The capture may also be removed when the mouse is released, but this is not reliable, as the engine forgets what to do if there is input from any other controller while the mouse is held down. tes3ui . captureMouseDrag ( capture ) Parameters : capture (boolean): Turns on mouse capture for the element currently processing a mouse event if true, sending all further mouse events to that element. Turns off capture if false. Example: Basic Usage Using the UI event system, cause a given element to capture the mouse drag. element : register ( \"mouseDown\" , function ( e ) -- Capture must be inside a mouse event. tes3ui . captureMouseDrag ( true ) end ) element : register ( \"mouseRelease\" , function ( e ) -- Release may be anywhere. tes3ui . captureMouseDrag ( false ) end ) tes3ui.choice \u2693\ufe0e Creates a simple dialogue choice, as per the Choice mwscript function. tes3ui . choice ( text , index ) Parameters : text (string): The text to display for the choice. index (number): The choice index associated with the given text. tes3ui.closeBookMenu \u2693\ufe0e This function closes the book menu. tes3ui . closeBookMenu () tes3ui.closeJournal \u2693\ufe0e Closes the journal menu. local result = tes3ui . closeJournal () Returns : result (boolean) tes3ui.closeScrollMenu \u2693\ufe0e This function closes the scroll menu. tes3ui . closeScrollMenu () tes3ui.createHelpLayerMenu \u2693\ufe0e Creates a help layer menu. Help layer menus include notifications and tooltips that are always above the rest of the interface. The game realizes this using a separate menu root and set of functions. Note, to create tooltips with the correct behaviour, use tes3ui.createTooltipMenu. Unlike standard menus, help layer menus are always created with a fixed frame. local result = tes3ui . createHelpLayerMenu ({ id = ... }) Parameters : params (table) id (string, number): The menu\u2019s ID. The menu can be later accessed by tes3ui.findHelpLayerMenu(id). Returns : result ( tes3uiElement ) tes3ui.createMenu \u2693\ufe0e Creates a top-level menu. local result = tes3ui . createMenu ({ id = ..., dragFrame = ..., fixedFrame = ..., modal = ..., loadable = ... }) Parameters : params (table) id (string, number): The menu\u2019s ID. The menu can be later accessed by tes3ui.findMenu(id). dragFrame (boolean): Default : false . Constructs a draggable and resizeable frame and background for the menu. It is similar to the stats, inventory, magic and map menus in the standard UI. Its title bar text can be set with the .text property. After construction, position and minimum dimensions should be set. fixedFrame (boolean): Default : false . Constructs a fixed (non-draggable) frame and background for the menu. The layout system should automatically centre and size it to fit whatever is added to the menu. This type of menu is modal by default, preventing interaction with other menus while the menu is active. modal (boolean): Default : true . Only applies to fixedFrame menus. Modal menus prevent interaction with other menus while the menu is active. This behavior can be disabled with this flag. loadable (boolean): Default : true . If set to false, calls to loadMenuPosition will fail. Returns : result ( tes3uiElement ) tes3ui.createResponseText \u2693\ufe0e Creates a respond text. This function is used for the mwscript Choice function. tes3ui . createResponseText ({ text = ..., type = ..., index = ... }) Parameters : params (table) text (string): The text to display. type (integer): Default : 2 . The type for the response. Defaults to choice responses. If set to 1 , a title will be made. Value of 0 corresponds to the main text, and value of 2 corresponds to red clickable choice text. index (integer): Optional . The answer index for the response. Only used for choice responses. tes3ui.createTooltipMenu \u2693\ufe0e Creates a tooltip menu, which can be an empty menu, an item tooltip, or a spell tooltip. This should be called from within a tooltip event callback. These automatically follow the mouse cursor, and are also destroyed automatically when the mouse leaves the originating element. Creating an item tooltip will invoke the uiObjectTooltip event. local result = tes3ui . createTooltipMenu ({ item = ..., itemData = ..., spell = ... }) Parameters : params (table): Optional . item ( tes3item , string): Optional . The item to create a tooltip for. If not specified, the tooltip will be empty. itemData ( tes3itemData ): Optional . The item data for the item. spell ( tes3spell ): Optional . The spell to create a tooltip for. Returns : result ( tes3uiElement ) Example: Add an item tooltip to a new element This demonstrates adding an item tooltip to a button using the help event. local button = menu : createButton { text = \"- Item -\" } local item = tes3 . getObject ( \"iron_shield\" ) button : register ( \"help\" , function ( e ) local tooltip = tes3ui . createTooltipMenu { item = item } tooltip : createLabel { text = \"Additional custom text\" } end ) tes3ui.enterMenuMode \u2693\ufe0e Requests menu mode be activated on a menu with a given id. local result = tes3ui . enterMenuMode ( id ) Parameters : id (string, number) Returns : result (boolean) tes3ui.findHelpLayerMenu \u2693\ufe0e Locates a help layer menu through its id. Help layer menus include notifications and tooltips that are always above the rest of the interface. The game realizes this using a separate menu root and set of functions. local result = tes3ui . findHelpLayerMenu ( id ) Parameters : id (string, number) Returns : result ( tes3uiElement ) tes3ui.findMenu \u2693\ufe0e Locates a top-level menu through its id. local result = tes3ui . findMenu ( id ) Parameters : id (string, number): The ID of the menu to locate. Returns : result ( tes3uiElement ) tes3ui.forcePlayerInventoryUpdate \u2693\ufe0e Forces the game to update the inventory tile GUI elements. Unlike tes3ui.updateInventoryTiles, this will force-resync the player's inventory to the GUI, rather than updating what is already in the GUI system. tes3ui . forcePlayerInventoryUpdate () tes3ui.getConsoleReference \u2693\ufe0e Gets the reference currently selected by the console, or nil if nothing is selected. local result = tes3ui . getConsoleReference () Returns : result ( tes3reference , nil) tes3ui.getInventorySelectType \u2693\ufe0e Determines what sort of search is being done when performing an inventory selection, e.g. \"alembic\" or \"ingredient\" or \"soulGemFilled\". local result = tes3ui . getInventorySelectType () Returns : result (string) tes3ui.getMenuOnTop \u2693\ufe0e Returns the top-most, active menu. local result = tes3ui . getMenuOnTop () Returns : result ( tes3uiElement ) tes3ui.getPalette \u2693\ufe0e Gets a standard palette color. Returns an array containing the RGB color values, in the range [0.0, 1.0]. local palette = tes3ui . getPalette ( name ) Parameters : name (string): The name of the palette color. Maps to values in tes3.palette enumeration. Returns : palette (number[]): An array containing the RGB color values, in the range [0.0, 1.0]. tes3ui.getServiceActor \u2693\ufe0e Returns the mobile actor currently providing services, or the actor the player is talking to. local result = tes3ui . getServiceActor () Returns : result ( tes3mobileActor ) tes3ui.getViewportScale \u2693\ufe0e Returns the UI scale, set in MGE. local scale = tes3ui . getViewportScale () Returns : scale (number): The UI scale value set from MGE. tes3ui.getViewportSize \u2693\ufe0e Returns both the viewport width and the viewport height. Note that this value is not necessarily the real resolution of the screen. For that value, see the same-named function in the tes3 namespace. To get the scale used, check getViewportScale . local width , height = tes3ui . getViewportSize () Returns : width (number): The scaled width of the viewport. height (number): The scaled height of the viewport. tes3ui.leaveMenuMode \u2693\ufe0e Requests menu mode be deactivated on a menu with a given id. local result = tes3ui . leaveMenuMode () Returns : result (boolean) tes3ui.log \u2693\ufe0e Logs a message to the console. The message accepts formatting and additional parameters matching string.format's usage. tes3ui . log ( message , formatValues ) Parameters : message (string) formatValues (variadic): Optional . Example: Print the type of each of the player's skills to the console local function printNames ( e ) local skillTypeNames = { [ 0 ] = \"Major\" , [ 1 ] = \"Minor\" , [ 2 ] = \"Miscellaneous\" } for _ , skillId in pairs ( tes3 . skill ) do local skillStat = tes3 . mobilePlayer : getSkillStatistic ( skillId ) local name = tes3 . getSkillName ( skillId ) local typeName = skillTypeNames [ skillStat . type ] tes3ui . log ( \"%s, type: %s skill\" , name , typeName ) end tes3 . messageBox ( \"Done! Open the console to see the result.\" ) end event . register ( tes3 . event . keyDown , printNames , { filter = tes3 . scanCode . u }) tes3ui.logToConsole \u2693\ufe0e Logs a message to the console. Consider using tes3ui.log instead of this function if you do not need to make use of the isCommand parameter. tes3ui . logToConsole ( text , isCommand ) Parameters : text (string) isCommand (boolean): Default : false . Passing true will make the text in the console selectable by using up arrow key. If it is a valid command, then pressing enter will call it. Example: This example describes how this function behaves with isCommand = true. local function example () -- This will make \"player->ModStrength 10\" appear in the console coloured brown. -- It can't be selected by using up arrow key. tes3ui . logToConsole ( \"player->ModStrength 10\" , false ) -- This will make \"player->ModWillpower 10\" appear in the console coloured blue. -- It CAN be selected by using up arrow key, and when the enter is pressed, -- it will call that function. tes3ui . logToConsole ( \"player->ModWillpower 10\" , true ) tes3 . messageBox ( \"Done! Open the console to see the result.\" ) end event . register ( tes3 . event . keyDown , example , { filter = tes3 . scanCode . u }) tes3ui.lookupID \u2693\ufe0e local executed = tes3ui . lookupID ( id ) Parameters : id ( tes3uiProperty , integer) Returns : executed (string) tes3ui.menuMode \u2693\ufe0e Checks if the game is in menu mode. local result = tes3ui . menuMode () Returns : result (boolean) tes3ui.moveMenuToFront \u2693\ufe0e Brings a menu forward to be the top-most menu, firing any associated front-related events. The desired element must be a top-level menu. tes3ui . moveMenuToFront ( menu ) Parameters : menu (string, number, tes3uiElement ): The menu to bring to the front. tes3ui.refreshTooltip \u2693\ufe0e Causes the tooltip to be redisplayed. This will not use a configured delay. This will not function if the help menu does not currently exist, or if it is not currently visible. tes3ui . refreshTooltip () tes3ui.registerID \u2693\ufe0e Registers a UI element name, returning a UI_ID. Once a property is registered, this function always returns the same UI_ID. These UI_IDs are used by the API to locate elements that may not exist (a weak reference), instead of by element name. The registry namespace is shared between Property and UI_ID. It is advisable to use a namespace prefix to avoid collisions with other mods. local result = tes3ui . registerID ( s ) Parameters : s (string) Returns : result (number) tes3ui.registerProperty \u2693\ufe0e Registers a property name, returning a Property. Once a property is registered, this function always returns the same Property. The registry namespace is shared between Property and UI_ID. It is advisable to use a namespace prefix to avoid collisions with other mods. local result = tes3ui . registerProperty ( s ) Parameters : s (string) Returns : result (number) tes3ui.setConsoleReference \u2693\ufe0e Sets the reference currently selected by the console, or deselects if passed nil . tes3ui . setConsoleReference ( reference ) Parameters : reference ( tes3reference , nil) tes3ui.showBookMenu \u2693\ufe0e Displays the book menu with arbitrary text. Paging is automatically handled. It needs to follow book text conventions as in the Construction Set. In essence, it uses HTML syntax. Important: every book needs to end with a <BR> statement to be displayed properly. See bookGetText for an example of properly formatted book text. tes3ui . showBookMenu ( text ) Parameters : text (string) tes3ui.showDialogueMessage \u2693\ufe0e This function creates a dialogue message. The message can have three styles. The style 2 makes a selectable text. That way by calling this function multiple time you can create a selection of responses. tes3ui . showDialogueMessage ({ text = ..., style = ..., answerIndex = ... }) Parameters : params (table) text (string): Default : ``. The text of the shown message. style (number): Default : 0 . This argument controls the text color of the message. Value 0 makes the message text the same color as the text in the dialogue window. Value 1 makes the text white, and also print a newline after the message. Value 2 turns the message into a selectable text inside the dialogue window. Value 3 looks the same as 1 but there isn't a newline after each message. Value 4 is the same as value 1 . All the other values work as 0 . answerIndex (number): Default : 0 . This number can be used later to identify which response was selected. tes3ui.showInventorySelectMenu \u2693\ufe0e This function opens the inventory select menu which lets the player select items from an inventory. These items can be selected from any actor's inventory and can be filtered with the filter callback. The selected item can be retrieved in the function assigned to callback . tes3ui . showInventorySelectMenu ({ reference = ..., title = ..., leaveMenuMode = ..., noResultsText = ..., noResultsCallback = ..., filter = ..., callback = ... }) Parameters : params (table) reference ( tes3reference ): Default : tes3player . The reference of a tes3actor whose inventory will be used. title (string): The text used for the title of the inventory select menu. leaveMenuMode (boolean): Optional . Determines if menu mode should be exited after closing the inventory select menu. By default, it will be in the state it was in before this function was called. noResultsText (string): Optional . The text used for the message that gets shown to the player if no items have been found in the inventory. The default text is equivalent to the sInventorySelectNoItems GMST value, unless \"ingredients\" or \"soulgemFilled\" has been assigned to filter , in which case the default text is equivalent to either the sInventorySelectNoIngredients or sInventorySelectNoSoul GMST value respectively. noResultsCallback (function): Optional . A function which is called when no items have been found in the inventory, right before the message containing noResultsText is shown. filter (function, string): Optional . This determines which items should be shown in the inventory select menu. Accepts either a string or a function. If assigning a string, the available values are present in tes3.inventorySelectFilter namespace. The available filters are: alembic : Only tes3apparatus items of type tes3.apparatusType.alembic will be shown. calcinator : Only tes3apparatus items of type tes3.apparatusType.calcinator will be shown. enchanted : Only non-enchanted items will be shown. That's because that filter is usually used in the enchanting menu to select items viable for enchanting. ingredients : Only tes3ingredient items will be shown. mortar : Only tes3apparatus items of type tes3.apparatusType.mortarAndPestle will be shown. quickUse : Only items that can be assigned as quick keys will be shown. retort : Only tes3apparatus items of type tes3.apparatusType.retort will be shown. soulgemFilled : Only filled soulgems will be shown. If assigning a function it will be called when determining if an item should be added to the inventory select menu. A table filterParams will be passed to this function. Returning true from this function will add the item to the inventory select menu, whereas returning false will prevent it from being added. filterParams (table) item ( tes3item ): The item that is being filtered. itemData ( tes3itemData ): The item data of the item that is being filtered. Can be nil . callback (function): Optional . A function which will be called once the inventory select menu has been closed, including when no item has been selected. A table callbackParams will be passed to this function. callbackParams (table) item ( tes3item ): The item that has been selected. Can be nil . itemData ( tes3itemData ): The item data of the item that has been selected. Can be nil . count (number): The number of items that have been selected. Only valid if item is not nil . inventory ( tes3inventory ): The inventory containing the items. actor ( tes3actor ): The actor containing the inventory. Example: Bribe an NPC with items from your inventory This code allows the player to give an item to the actor the player is currently looking at. -- This is a working example. You are encouraged to create a new file -- main.lua, paste this code and see the results in-game! -- Use `u` key to bribe an actor you are looking at with items from your inventory. local function bribe () local actorReference = tes3 . getPlayerTarget () -- This function returns nil value if the player isn't aiming at a reference, -- so we skip that case if not actorReference then return end tes3ui . showInventorySelectMenu ({ reference = tes3 . player , -- .. is Lua operator of concatenation. It joins 2 strings together. title = \"Bribe \" .. actorReference . object . name , callback = function ( e ) if e . item then -- If e.item exist, that means that the player picked an -- item in the menu. It up to us to do something with it. tes3 . transferItem ({ from = tes3 . player , to = actorReference , item = e . item , itemData = e . itemData , count = e . count , }) -- Here we calculate the total gold value of the transfered item(s), since that -- can be a stack of items. e.count holds the amount of the items selected. local itemWorth = e . item . value * e . count -- At last! Now the actual persuasion part. We use `modifier` argument. -- The higher the value we pass there the higher the disposition change. tes3 . persuade ({ actor = actorReference , modifier = math . log10 ( itemWorth ) }) end end , -- At first it's counter intuitive that this filter selects all the non-enchanted items -- This illusion disappears soon as we relize that the game uses this filter in the -- enchanting menu to select items viable for enchanting. filter = tes3 . inventorySelectFilter . enchanted }) end -- We registered our bribe function on keyDown event, and filtered it for `u` key, -- so our bribe function is only called once `u` key is pressed event . register ( tes3 . event . keyDown , bribe , { filter = tes3 . scanCode . u }) Example: Filter functions A few possible filtering functions. -- This example has a few implementations of filter functions that -- can be passed to `filter` argument of tes3.showInventorySelectMenu(). -- This function will filter only weapon items. local function weaponFilter ( e ) if e . item . objectType == tes3 . objectType . weapon then -- The filter function needs to return `true` -- for a certain item to appear in the menu. return true else return false end end -- This is a dictinary of items that can be damaged (have a condition) local damageableItems = { [ tes3 . objectType . weapon ] = true , [ tes3 . objectType . armor ] = true , } -- This function will filter only items that aren't at full condition. local function damagedItemsFilter ( e ) -- The first check is whether the item is in our -- dictionary of items with condition if damageableItems [ e . item . objectType ] and -- Only damaged items have this field. If it does -- not exist the item is in perfect condition. e . itemData and ( e . itemData . condition < e . item . maxCondition ) then return true else return false end end local myFilterValue = 256 -- This function will filter only items that have a value less than `myFilterValue` local function valueFilter ( e ) if ( e . item . value < myFilterValue ) then return true else return false end end tes3ui.showJournal \u2693\ufe0e Opens the journal menu. This can return false if the player hasn't gone through character generation, or if the journal was already open. local wasShown = tes3ui . showJournal () Returns : wasShown (boolean) tes3ui.showNotifyMenu \u2693\ufe0e Creates a new notify menu with a formatted string. A notify menu is a toast-style display that shows at the bottom of the screen. It will expire after an amount of time, determined by the length of the message and the fMessageTimePerChar GMST. local menu = tes3ui . showNotifyMenu ( string , formatValues ) Parameters : string (string): The message to display. If it supports formatting, additional arguments are used. formatValues (variadic): Optional values to feed to formatting found in the first parameter. Returns : menu ( tes3uiElement ): The notify menu created. tes3ui.showScrollMenu \u2693\ufe0e Displays the scroll menu with arbitrary text. It needs to follow book text conventions as in the Construction Set. In essence, it uses HTML syntax. Important: every book needs to end with a <BR> statement to be displayed properly. See bookGetText for an example of properly formatted scroll text. tes3ui . showScrollMenu ( text ) Parameters : text (string) tes3ui.stealHelpMenu \u2693\ufe0e tes3ui . stealHelpMenu () tes3ui.suppressTooltip \u2693\ufe0e Controls hiding of world object tooltips. tes3ui . suppressTooltip ( suppress ) Parameters : suppress (boolean): Turns on suppression if true, immediately hiding any active tooltip and further world object tooltips. Turns off suppression if false. tes3ui.updateBarterMenuTiles \u2693\ufe0e Forces the game to update the barter menu's tile GUI elements. tes3ui . updateBarterMenuTiles () tes3ui.updateContentsMenuTiles \u2693\ufe0e Forces the game to update the contents menu's tile GUI elements. tes3ui . updateContentsMenuTiles () tes3ui.updateDialogDisposition \u2693\ufe0e Forces the game to update the dialog disposition GUI element. tes3ui . updateDialogDisposition () tes3ui.updateEnchantingMenu \u2693\ufe0e Forces the game to update the enchanting menu GUI. tes3ui . updateEnchantingMenu () tes3ui.updateInventoryCharacterImage \u2693\ufe0e Tells the game to update the character image in the player's inventory. It will update immediately if the inventory is open, or the next time the inventory is opened otherwise. tes3ui . updateInventoryCharacterImage () tes3ui.updateInventorySelectTiles \u2693\ufe0e Forces the game to update the inventory selection GUI elements. tes3ui . updateInventorySelectTiles () tes3ui.updateInventoryTiles \u2693\ufe0e Forces the game to update the inventory tile GUI elements. tes3ui . updateInventoryTiles () tes3ui.updateSpellmakingMenu \u2693\ufe0e Forces the game to update the spellmaking menu GUI. tes3ui . updateSpellmakingMenu ()","title":"Tes3ui"},{"location":"apis/tes3ui/#tes3ui","text":"The tes3ui library provides access to manipulating the game's GUI.","title":"tes3ui"},{"location":"apis/tes3ui/#functions","text":"","title":"Functions"},{"location":"apis/tes3ui/#tes3uiacquiretextinput","text":"Sends all text input to the specified element. Calling this function with a nil argument will release text input and allow keybinds to work. Suppresses most keybinds while active, except the Journal open/close keybind (it's up to the individual menu implementation). Only one element can have control of input, and there is no automatic restoration of control if one element takes control from another. Be careful of conflicts with other users of this function. tes3ui . acquireTextInput ( element ) Parameters : element ( tes3uiElement ): Optional .","title":"tes3ui.acquireTextInput"},{"location":"apis/tes3ui/#tes3uicapturemousedrag","text":"When used in a mouse event, causes the element to capture further mouse events even when the cursor goes outside the element. Setting mouse capture should always be accompanied by releasing it on a complementary event. This is commonly used for dragging, so that it can continue even if the mouse moves slightly outside the element. The capture is always removed when the element is destroyed. The capture may also be removed when the mouse is released, but this is not reliable, as the engine forgets what to do if there is input from any other controller while the mouse is held down. tes3ui . captureMouseDrag ( capture ) Parameters : capture (boolean): Turns on mouse capture for the element currently processing a mouse event if true, sending all further mouse events to that element. Turns off capture if false. Example: Basic Usage Using the UI event system, cause a given element to capture the mouse drag. element : register ( \"mouseDown\" , function ( e ) -- Capture must be inside a mouse event. tes3ui . captureMouseDrag ( true ) end ) element : register ( \"mouseRelease\" , function ( e ) -- Release may be anywhere. tes3ui . captureMouseDrag ( false ) end )","title":"tes3ui.captureMouseDrag"},{"location":"apis/tes3ui/#tes3uichoice","text":"Creates a simple dialogue choice, as per the Choice mwscript function. tes3ui . choice ( text , index ) Parameters : text (string): The text to display for the choice. index (number): The choice index associated with the given text.","title":"tes3ui.choice"},{"location":"apis/tes3ui/#tes3uiclosebookmenu","text":"This function closes the book menu. tes3ui . closeBookMenu ()","title":"tes3ui.closeBookMenu"},{"location":"apis/tes3ui/#tes3uiclosejournal","text":"Closes the journal menu. local result = tes3ui . closeJournal () Returns : result (boolean)","title":"tes3ui.closeJournal"},{"location":"apis/tes3ui/#tes3uiclosescrollmenu","text":"This function closes the scroll menu. tes3ui . closeScrollMenu ()","title":"tes3ui.closeScrollMenu"},{"location":"apis/tes3ui/#tes3uicreatehelplayermenu","text":"Creates a help layer menu. Help layer menus include notifications and tooltips that are always above the rest of the interface. The game realizes this using a separate menu root and set of functions. Note, to create tooltips with the correct behaviour, use tes3ui.createTooltipMenu. Unlike standard menus, help layer menus are always created with a fixed frame. local result = tes3ui . createHelpLayerMenu ({ id = ... }) Parameters : params (table) id (string, number): The menu\u2019s ID. The menu can be later accessed by tes3ui.findHelpLayerMenu(id). Returns : result ( tes3uiElement )","title":"tes3ui.createHelpLayerMenu"},{"location":"apis/tes3ui/#tes3uicreatemenu","text":"Creates a top-level menu. local result = tes3ui . createMenu ({ id = ..., dragFrame = ..., fixedFrame = ..., modal = ..., loadable = ... }) Parameters : params (table) id (string, number): The menu\u2019s ID. The menu can be later accessed by tes3ui.findMenu(id). dragFrame (boolean): Default : false . Constructs a draggable and resizeable frame and background for the menu. It is similar to the stats, inventory, magic and map menus in the standard UI. Its title bar text can be set with the .text property. After construction, position and minimum dimensions should be set. fixedFrame (boolean): Default : false . Constructs a fixed (non-draggable) frame and background for the menu. The layout system should automatically centre and size it to fit whatever is added to the menu. This type of menu is modal by default, preventing interaction with other menus while the menu is active. modal (boolean): Default : true . Only applies to fixedFrame menus. Modal menus prevent interaction with other menus while the menu is active. This behavior can be disabled with this flag. loadable (boolean): Default : true . If set to false, calls to loadMenuPosition will fail. Returns : result ( tes3uiElement )","title":"tes3ui.createMenu"},{"location":"apis/tes3ui/#tes3uicreateresponsetext","text":"Creates a respond text. This function is used for the mwscript Choice function. tes3ui . createResponseText ({ text = ..., type = ..., index = ... }) Parameters : params (table) text (string): The text to display. type (integer): Default : 2 . The type for the response. Defaults to choice responses. If set to 1 , a title will be made. Value of 0 corresponds to the main text, and value of 2 corresponds to red clickable choice text. index (integer): Optional . The answer index for the response. Only used for choice responses.","title":"tes3ui.createResponseText"},{"location":"apis/tes3ui/#tes3uicreatetooltipmenu","text":"Creates a tooltip menu, which can be an empty menu, an item tooltip, or a spell tooltip. This should be called from within a tooltip event callback. These automatically follow the mouse cursor, and are also destroyed automatically when the mouse leaves the originating element. Creating an item tooltip will invoke the uiObjectTooltip event. local result = tes3ui . createTooltipMenu ({ item = ..., itemData = ..., spell = ... }) Parameters : params (table): Optional . item ( tes3item , string): Optional . The item to create a tooltip for. If not specified, the tooltip will be empty. itemData ( tes3itemData ): Optional . The item data for the item. spell ( tes3spell ): Optional . The spell to create a tooltip for. Returns : result ( tes3uiElement ) Example: Add an item tooltip to a new element This demonstrates adding an item tooltip to a button using the help event. local button = menu : createButton { text = \"- Item -\" } local item = tes3 . getObject ( \"iron_shield\" ) button : register ( \"help\" , function ( e ) local tooltip = tes3ui . createTooltipMenu { item = item } tooltip : createLabel { text = \"Additional custom text\" } end )","title":"tes3ui.createTooltipMenu"},{"location":"apis/tes3ui/#tes3uientermenumode","text":"Requests menu mode be activated on a menu with a given id. local result = tes3ui . enterMenuMode ( id ) Parameters : id (string, number) Returns : result (boolean)","title":"tes3ui.enterMenuMode"},{"location":"apis/tes3ui/#tes3uifindhelplayermenu","text":"Locates a help layer menu through its id. Help layer menus include notifications and tooltips that are always above the rest of the interface. The game realizes this using a separate menu root and set of functions. local result = tes3ui . findHelpLayerMenu ( id ) Parameters : id (string, number) Returns : result ( tes3uiElement )","title":"tes3ui.findHelpLayerMenu"},{"location":"apis/tes3ui/#tes3uifindmenu","text":"Locates a top-level menu through its id. local result = tes3ui . findMenu ( id ) Parameters : id (string, number): The ID of the menu to locate. Returns : result ( tes3uiElement )","title":"tes3ui.findMenu"},{"location":"apis/tes3ui/#tes3uiforceplayerinventoryupdate","text":"Forces the game to update the inventory tile GUI elements. Unlike tes3ui.updateInventoryTiles, this will force-resync the player's inventory to the GUI, rather than updating what is already in the GUI system. tes3ui . forcePlayerInventoryUpdate ()","title":"tes3ui.forcePlayerInventoryUpdate"},{"location":"apis/tes3ui/#tes3uigetconsolereference","text":"Gets the reference currently selected by the console, or nil if nothing is selected. local result = tes3ui . getConsoleReference () Returns : result ( tes3reference , nil)","title":"tes3ui.getConsoleReference"},{"location":"apis/tes3ui/#tes3uigetinventoryselecttype","text":"Determines what sort of search is being done when performing an inventory selection, e.g. \"alembic\" or \"ingredient\" or \"soulGemFilled\". local result = tes3ui . getInventorySelectType () Returns : result (string)","title":"tes3ui.getInventorySelectType"},{"location":"apis/tes3ui/#tes3uigetmenuontop","text":"Returns the top-most, active menu. local result = tes3ui . getMenuOnTop () Returns : result ( tes3uiElement )","title":"tes3ui.getMenuOnTop"},{"location":"apis/tes3ui/#tes3uigetpalette","text":"Gets a standard palette color. Returns an array containing the RGB color values, in the range [0.0, 1.0]. local palette = tes3ui . getPalette ( name ) Parameters : name (string): The name of the palette color. Maps to values in tes3.palette enumeration. Returns : palette (number[]): An array containing the RGB color values, in the range [0.0, 1.0].","title":"tes3ui.getPalette"},{"location":"apis/tes3ui/#tes3uigetserviceactor","text":"Returns the mobile actor currently providing services, or the actor the player is talking to. local result = tes3ui . getServiceActor () Returns : result ( tes3mobileActor )","title":"tes3ui.getServiceActor"},{"location":"apis/tes3ui/#tes3uigetviewportscale","text":"Returns the UI scale, set in MGE. local scale = tes3ui . getViewportScale () Returns : scale (number): The UI scale value set from MGE.","title":"tes3ui.getViewportScale"},{"location":"apis/tes3ui/#tes3uigetviewportsize","text":"Returns both the viewport width and the viewport height. Note that this value is not necessarily the real resolution of the screen. For that value, see the same-named function in the tes3 namespace. To get the scale used, check getViewportScale . local width , height = tes3ui . getViewportSize () Returns : width (number): The scaled width of the viewport. height (number): The scaled height of the viewport.","title":"tes3ui.getViewportSize"},{"location":"apis/tes3ui/#tes3uileavemenumode","text":"Requests menu mode be deactivated on a menu with a given id. local result = tes3ui . leaveMenuMode () Returns : result (boolean)","title":"tes3ui.leaveMenuMode"},{"location":"apis/tes3ui/#tes3uilog","text":"Logs a message to the console. The message accepts formatting and additional parameters matching string.format's usage. tes3ui . log ( message , formatValues ) Parameters : message (string) formatValues (variadic): Optional . Example: Print the type of each of the player's skills to the console local function printNames ( e ) local skillTypeNames = { [ 0 ] = \"Major\" , [ 1 ] = \"Minor\" , [ 2 ] = \"Miscellaneous\" } for _ , skillId in pairs ( tes3 . skill ) do local skillStat = tes3 . mobilePlayer : getSkillStatistic ( skillId ) local name = tes3 . getSkillName ( skillId ) local typeName = skillTypeNames [ skillStat . type ] tes3ui . log ( \"%s, type: %s skill\" , name , typeName ) end tes3 . messageBox ( \"Done! Open the console to see the result.\" ) end event . register ( tes3 . event . keyDown , printNames , { filter = tes3 . scanCode . u })","title":"tes3ui.log"},{"location":"apis/tes3ui/#tes3uilogtoconsole","text":"Logs a message to the console. Consider using tes3ui.log instead of this function if you do not need to make use of the isCommand parameter. tes3ui . logToConsole ( text , isCommand ) Parameters : text (string) isCommand (boolean): Default : false . Passing true will make the text in the console selectable by using up arrow key. If it is a valid command, then pressing enter will call it. Example: This example describes how this function behaves with isCommand = true. local function example () -- This will make \"player->ModStrength 10\" appear in the console coloured brown. -- It can't be selected by using up arrow key. tes3ui . logToConsole ( \"player->ModStrength 10\" , false ) -- This will make \"player->ModWillpower 10\" appear in the console coloured blue. -- It CAN be selected by using up arrow key, and when the enter is pressed, -- it will call that function. tes3ui . logToConsole ( \"player->ModWillpower 10\" , true ) tes3 . messageBox ( \"Done! Open the console to see the result.\" ) end event . register ( tes3 . event . keyDown , example , { filter = tes3 . scanCode . u })","title":"tes3ui.logToConsole"},{"location":"apis/tes3ui/#tes3uilookupid","text":"local executed = tes3ui . lookupID ( id ) Parameters : id ( tes3uiProperty , integer) Returns : executed (string)","title":"tes3ui.lookupID"},{"location":"apis/tes3ui/#tes3uimenumode","text":"Checks if the game is in menu mode. local result = tes3ui . menuMode () Returns : result (boolean)","title":"tes3ui.menuMode"},{"location":"apis/tes3ui/#tes3uimovemenutofront","text":"Brings a menu forward to be the top-most menu, firing any associated front-related events. The desired element must be a top-level menu. tes3ui . moveMenuToFront ( menu ) Parameters : menu (string, number, tes3uiElement ): The menu to bring to the front.","title":"tes3ui.moveMenuToFront"},{"location":"apis/tes3ui/#tes3uirefreshtooltip","text":"Causes the tooltip to be redisplayed. This will not use a configured delay. This will not function if the help menu does not currently exist, or if it is not currently visible. tes3ui . refreshTooltip ()","title":"tes3ui.refreshTooltip"},{"location":"apis/tes3ui/#tes3uiregisterid","text":"Registers a UI element name, returning a UI_ID. Once a property is registered, this function always returns the same UI_ID. These UI_IDs are used by the API to locate elements that may not exist (a weak reference), instead of by element name. The registry namespace is shared between Property and UI_ID. It is advisable to use a namespace prefix to avoid collisions with other mods. local result = tes3ui . registerID ( s ) Parameters : s (string) Returns : result (number)","title":"tes3ui.registerID"},{"location":"apis/tes3ui/#tes3uiregisterproperty","text":"Registers a property name, returning a Property. Once a property is registered, this function always returns the same Property. The registry namespace is shared between Property and UI_ID. It is advisable to use a namespace prefix to avoid collisions with other mods. local result = tes3ui . registerProperty ( s ) Parameters : s (string) Returns : result (number)","title":"tes3ui.registerProperty"},{"location":"apis/tes3ui/#tes3uisetconsolereference","text":"Sets the reference currently selected by the console, or deselects if passed nil . tes3ui . setConsoleReference ( reference ) Parameters : reference ( tes3reference , nil)","title":"tes3ui.setConsoleReference"},{"location":"apis/tes3ui/#tes3uishowbookmenu","text":"Displays the book menu with arbitrary text. Paging is automatically handled. It needs to follow book text conventions as in the Construction Set. In essence, it uses HTML syntax. Important: every book needs to end with a <BR> statement to be displayed properly. See bookGetText for an example of properly formatted book text. tes3ui . showBookMenu ( text ) Parameters : text (string)","title":"tes3ui.showBookMenu"},{"location":"apis/tes3ui/#tes3uishowdialoguemessage","text":"This function creates a dialogue message. The message can have three styles. The style 2 makes a selectable text. That way by calling this function multiple time you can create a selection of responses. tes3ui . showDialogueMessage ({ text = ..., style = ..., answerIndex = ... }) Parameters : params (table) text (string): Default : ``. The text of the shown message. style (number): Default : 0 . This argument controls the text color of the message. Value 0 makes the message text the same color as the text in the dialogue window. Value 1 makes the text white, and also print a newline after the message. Value 2 turns the message into a selectable text inside the dialogue window. Value 3 looks the same as 1 but there isn't a newline after each message. Value 4 is the same as value 1 . All the other values work as 0 . answerIndex (number): Default : 0 . This number can be used later to identify which response was selected.","title":"tes3ui.showDialogueMessage"},{"location":"apis/tes3ui/#tes3uishowinventoryselectmenu","text":"This function opens the inventory select menu which lets the player select items from an inventory. These items can be selected from any actor's inventory and can be filtered with the filter callback. The selected item can be retrieved in the function assigned to callback . tes3ui . showInventorySelectMenu ({ reference = ..., title = ..., leaveMenuMode = ..., noResultsText = ..., noResultsCallback = ..., filter = ..., callback = ... }) Parameters : params (table) reference ( tes3reference ): Default : tes3player . The reference of a tes3actor whose inventory will be used. title (string): The text used for the title of the inventory select menu. leaveMenuMode (boolean): Optional . Determines if menu mode should be exited after closing the inventory select menu. By default, it will be in the state it was in before this function was called. noResultsText (string): Optional . The text used for the message that gets shown to the player if no items have been found in the inventory. The default text is equivalent to the sInventorySelectNoItems GMST value, unless \"ingredients\" or \"soulgemFilled\" has been assigned to filter , in which case the default text is equivalent to either the sInventorySelectNoIngredients or sInventorySelectNoSoul GMST value respectively. noResultsCallback (function): Optional . A function which is called when no items have been found in the inventory, right before the message containing noResultsText is shown. filter (function, string): Optional . This determines which items should be shown in the inventory select menu. Accepts either a string or a function. If assigning a string, the available values are present in tes3.inventorySelectFilter namespace. The available filters are: alembic : Only tes3apparatus items of type tes3.apparatusType.alembic will be shown. calcinator : Only tes3apparatus items of type tes3.apparatusType.calcinator will be shown. enchanted : Only non-enchanted items will be shown. That's because that filter is usually used in the enchanting menu to select items viable for enchanting. ingredients : Only tes3ingredient items will be shown. mortar : Only tes3apparatus items of type tes3.apparatusType.mortarAndPestle will be shown. quickUse : Only items that can be assigned as quick keys will be shown. retort : Only tes3apparatus items of type tes3.apparatusType.retort will be shown. soulgemFilled : Only filled soulgems will be shown. If assigning a function it will be called when determining if an item should be added to the inventory select menu. A table filterParams will be passed to this function. Returning true from this function will add the item to the inventory select menu, whereas returning false will prevent it from being added. filterParams (table) item ( tes3item ): The item that is being filtered. itemData ( tes3itemData ): The item data of the item that is being filtered. Can be nil . callback (function): Optional . A function which will be called once the inventory select menu has been closed, including when no item has been selected. A table callbackParams will be passed to this function. callbackParams (table) item ( tes3item ): The item that has been selected. Can be nil . itemData ( tes3itemData ): The item data of the item that has been selected. Can be nil . count (number): The number of items that have been selected. Only valid if item is not nil . inventory ( tes3inventory ): The inventory containing the items. actor ( tes3actor ): The actor containing the inventory. Example: Bribe an NPC with items from your inventory This code allows the player to give an item to the actor the player is currently looking at. -- This is a working example. You are encouraged to create a new file -- main.lua, paste this code and see the results in-game! -- Use `u` key to bribe an actor you are looking at with items from your inventory. local function bribe () local actorReference = tes3 . getPlayerTarget () -- This function returns nil value if the player isn't aiming at a reference, -- so we skip that case if not actorReference then return end tes3ui . showInventorySelectMenu ({ reference = tes3 . player , -- .. is Lua operator of concatenation. It joins 2 strings together. title = \"Bribe \" .. actorReference . object . name , callback = function ( e ) if e . item then -- If e.item exist, that means that the player picked an -- item in the menu. It up to us to do something with it. tes3 . transferItem ({ from = tes3 . player , to = actorReference , item = e . item , itemData = e . itemData , count = e . count , }) -- Here we calculate the total gold value of the transfered item(s), since that -- can be a stack of items. e.count holds the amount of the items selected. local itemWorth = e . item . value * e . count -- At last! Now the actual persuasion part. We use `modifier` argument. -- The higher the value we pass there the higher the disposition change. tes3 . persuade ({ actor = actorReference , modifier = math . log10 ( itemWorth ) }) end end , -- At first it's counter intuitive that this filter selects all the non-enchanted items -- This illusion disappears soon as we relize that the game uses this filter in the -- enchanting menu to select items viable for enchanting. filter = tes3 . inventorySelectFilter . enchanted }) end -- We registered our bribe function on keyDown event, and filtered it for `u` key, -- so our bribe function is only called once `u` key is pressed event . register ( tes3 . event . keyDown , bribe , { filter = tes3 . scanCode . u }) Example: Filter functions A few possible filtering functions. -- This example has a few implementations of filter functions that -- can be passed to `filter` argument of tes3.showInventorySelectMenu(). -- This function will filter only weapon items. local function weaponFilter ( e ) if e . item . objectType == tes3 . objectType . weapon then -- The filter function needs to return `true` -- for a certain item to appear in the menu. return true else return false end end -- This is a dictinary of items that can be damaged (have a condition) local damageableItems = { [ tes3 . objectType . weapon ] = true , [ tes3 . objectType . armor ] = true , } -- This function will filter only items that aren't at full condition. local function damagedItemsFilter ( e ) -- The first check is whether the item is in our -- dictionary of items with condition if damageableItems [ e . item . objectType ] and -- Only damaged items have this field. If it does -- not exist the item is in perfect condition. e . itemData and ( e . itemData . condition < e . item . maxCondition ) then return true else return false end end local myFilterValue = 256 -- This function will filter only items that have a value less than `myFilterValue` local function valueFilter ( e ) if ( e . item . value < myFilterValue ) then return true else return false end end","title":"tes3ui.showInventorySelectMenu"},{"location":"apis/tes3ui/#tes3uishowjournal","text":"Opens the journal menu. This can return false if the player hasn't gone through character generation, or if the journal was already open. local wasShown = tes3ui . showJournal () Returns : wasShown (boolean)","title":"tes3ui.showJournal"},{"location":"apis/tes3ui/#tes3uishownotifymenu","text":"Creates a new notify menu with a formatted string. A notify menu is a toast-style display that shows at the bottom of the screen. It will expire after an amount of time, determined by the length of the message and the fMessageTimePerChar GMST. local menu = tes3ui . showNotifyMenu ( string , formatValues ) Parameters : string (string): The message to display. If it supports formatting, additional arguments are used. formatValues (variadic): Optional values to feed to formatting found in the first parameter. Returns : menu ( tes3uiElement ): The notify menu created.","title":"tes3ui.showNotifyMenu"},{"location":"apis/tes3ui/#tes3uishowscrollmenu","text":"Displays the scroll menu with arbitrary text. It needs to follow book text conventions as in the Construction Set. In essence, it uses HTML syntax. Important: every book needs to end with a <BR> statement to be displayed properly. See bookGetText for an example of properly formatted scroll text. tes3ui . showScrollMenu ( text ) Parameters : text (string)","title":"tes3ui.showScrollMenu"},{"location":"apis/tes3ui/#tes3uistealhelpmenu","text":"tes3ui . stealHelpMenu ()","title":"tes3ui.stealHelpMenu"},{"location":"apis/tes3ui/#tes3uisuppresstooltip","text":"Controls hiding of world object tooltips. tes3ui . suppressTooltip ( suppress ) Parameters : suppress (boolean): Turns on suppression if true, immediately hiding any active tooltip and further world object tooltips. Turns off suppression if false.","title":"tes3ui.suppressTooltip"},{"location":"apis/tes3ui/#tes3uiupdatebartermenutiles","text":"Forces the game to update the barter menu's tile GUI elements. tes3ui . updateBarterMenuTiles ()","title":"tes3ui.updateBarterMenuTiles"},{"location":"apis/tes3ui/#tes3uiupdatecontentsmenutiles","text":"Forces the game to update the contents menu's tile GUI elements. tes3ui . updateContentsMenuTiles ()","title":"tes3ui.updateContentsMenuTiles"},{"location":"apis/tes3ui/#tes3uiupdatedialogdisposition","text":"Forces the game to update the dialog disposition GUI element. tes3ui . updateDialogDisposition ()","title":"tes3ui.updateDialogDisposition"},{"location":"apis/tes3ui/#tes3uiupdateenchantingmenu","text":"Forces the game to update the enchanting menu GUI. tes3ui . updateEnchantingMenu ()","title":"tes3ui.updateEnchantingMenu"},{"location":"apis/tes3ui/#tes3uiupdateinventorycharacterimage","text":"Tells the game to update the character image in the player's inventory. It will update immediately if the inventory is open, or the next time the inventory is opened otherwise. tes3ui . updateInventoryCharacterImage ()","title":"tes3ui.updateInventoryCharacterImage"},{"location":"apis/tes3ui/#tes3uiupdateinventoryselecttiles","text":"Forces the game to update the inventory selection GUI elements. tes3ui . updateInventorySelectTiles ()","title":"tes3ui.updateInventorySelectTiles"},{"location":"apis/tes3ui/#tes3uiupdateinventorytiles","text":"Forces the game to update the inventory tile GUI elements. tes3ui . updateInventoryTiles ()","title":"tes3ui.updateInventoryTiles"},{"location":"apis/tes3ui/#tes3uiupdatespellmakingmenu","text":"Forces the game to update the spellmaking menu GUI. tes3ui . updateSpellmakingMenu ()","title":"tes3ui.updateSpellmakingMenu"},{"location":"apis/timer.frame/","text":"timer.frame \u2693\ufe0e Convenience access to frame timer functions. This is the same as passing type = timer.real to any of the functions from timer API. Functions \u2693\ufe0e timer.frame.delayOneFrame \u2693\ufe0e Creates a timer that will finish the next frame. local timer = timer . frame . delayOneFrame ( callback ) Parameters : callback (function): The callback function that will execute when the timer expires. Returns : timer ( mwseTimer )","title":"Timer.frame"},{"location":"apis/timer.frame/#timerframe","text":"Convenience access to frame timer functions. This is the same as passing type = timer.real to any of the functions from timer API.","title":"timer.frame"},{"location":"apis/timer.frame/#functions","text":"","title":"Functions"},{"location":"apis/timer.frame/#timerframedelayoneframe","text":"Creates a timer that will finish the next frame. local timer = timer . frame . delayOneFrame ( callback ) Parameters : callback (function): The callback function that will execute when the timer expires. Returns : timer ( mwseTimer )","title":"timer.frame.delayOneFrame"},{"location":"apis/timer/","text":"timer \u2693\ufe0e The timer library provides helper functions for creating delayed executors. Properties \u2693\ufe0e timer.active \u2693\ufe0e Constant to represent a timer that is actively running. timer.expired \u2693\ufe0e Constant to represent a timer that has completed. timer.game \u2693\ufe0e Constant to represent timers that run based on in-world time. Their clock is measured in game-scale hours. timer.paused \u2693\ufe0e Constant to represent a timer that is paused. timer.real \u2693\ufe0e Constant to represent timers that run in real-time. Their time is measured in seconds. timer.simulate \u2693\ufe0e Constant to represent timers that run when the game isn't paused - the game's menus are closed. It matches the simulate event's timing. If the game is simulating, simulate events and simulate timers progress. Duration is measured in seconds. Functions \u2693\ufe0e timer.delayOneFrame \u2693\ufe0e Creates a timer that will finish the next frame. It defaults to the next simulation frame. local timer = timer . delayOneFrame ( callback , type ) Parameters : callback (function): The callback function that will execute when the timer expires. type (integer): Default : timer.simulate . Type of the timer. This value can be timer.simulate , timer.game or timer.real . Returns : timer ( mwseTimer ) timer.register \u2693\ufe0e Registers a named timer with a callback to persist between game sessions. Bear in mind that nothing in MWSE is sandboxed, so all the registered timers are in the global namespace. Consider prefixing your timer with mod name or something else to avoid name collisions. For instance, iceCreamMod:myTimer . timer . register ( name , fn ) Parameters : name (string): Name of the registered timer. fn (function): A callback function for the timer. Example: Persistent timers tutorial with .data usage The timer registered in the example is registered and persistent. That renders starting the timer on every loaded event unnecessary. Its state is saved, and it continues where it stopped after loading a save. ---@class timerCallbackData ---@field timer mwseTimer Access to our timer ---@param e timerCallbackData local function showMessage ( e ) local timer = e . timer local data = timer . data local currentTimestamp = tes3 . getSimulationTimestamp () -- We are sure that the timer.data ~= nil since we -- created that table in timer.start function. -- So, lets disable the warnings for a bit. ---@diagnostic disable:need-check-nil tes3 . messageBox ( data . message : format ( data . startTimestamp , data . lastIterationTimestamp , currentTimestamp )) ---@diagnostic enable:need-check-nil -- Save this to the data table on the timer data . lastIterationTimestamp = currentTimestamp end timer . register ( \"testExample:OneDayTimer\" , showMessage ) timer . start ({ type = timer . game , persist = true , iterations = - 1 , duration = 24 , -- Notice that the callback isn't a function, but -- a string passed to the timer.register function callback = \"testExample:OneDayTimer\" , data = { startTimestamp = tes3 . getSimulationTimestamp (), lastIterationTimestamp = tes3 . getSimulationTimestamp (), message = [[One day later... timer's starting timestamp %s the timestamp of last iteration %s current timestamp %s ]] } }) timer.start \u2693\ufe0e Creates a timer. local timer = timer . start ({ type = ..., duration = ..., callback = ..., iterations = ..., persist = ..., data = ... }) Parameters : params (table) type (integer): Default : timer.simulate . Type of the timer. This value can be timer.simulate , timer.game or timer.real . duration (number): Duration of the timer. The method of time passing depends on the timer type. callback (function, string): The callback function that will execute when the timer expires. If starting a registered timer, this needs to be the name string passed to timer.register . iterations (integer): Default : 1 . The number of iterations to run. Use -1 for infinite looping. persist (boolean): Default : true . Registering a timer with persist flag set to true will serialize the callback string in the save to persist between sessions. Only a registered timer will persist between sessions. See timer.register() . data (table, nil): Default : nil . Data to be attached to the timer. If this is a persistent timer, the data must be json-serializable, matching the same limitations as data stored on references. Returns : timer ( mwseTimer ) Example: Show a Countdown Message In this example, whenever the player activates an item they will be shown a 10 second countdown. Because it is a simulation timer, it will not tick down while the menu is open, nor is it sensitive to the game timescale/clock. local timeLeft = 0 ; local function onTimerExpired () timeLeft = timeLeft - 1 tes3 . messageBox ( \"%d seconds left\" , timeLeft ) end local function onActivate ( eventData ) if ( eventData . activator == tes3 . player ) then timeLeft = 10 timer . start { duration = 1 , iterations = 10 , type = timer . simulate , callback = onTimerExpired } end end event . register ( tes3 . event . activate , onActivate )","title":"Timer"},{"location":"apis/timer/#timer","text":"The timer library provides helper functions for creating delayed executors.","title":"timer"},{"location":"apis/timer/#properties","text":"","title":"Properties"},{"location":"apis/timer/#timeractive","text":"Constant to represent a timer that is actively running.","title":"timer.active"},{"location":"apis/timer/#timerexpired","text":"Constant to represent a timer that has completed.","title":"timer.expired"},{"location":"apis/timer/#timergame","text":"Constant to represent timers that run based on in-world time. Their clock is measured in game-scale hours.","title":"timer.game"},{"location":"apis/timer/#timerpaused","text":"Constant to represent a timer that is paused.","title":"timer.paused"},{"location":"apis/timer/#timerreal","text":"Constant to represent timers that run in real-time. Their time is measured in seconds.","title":"timer.real"},{"location":"apis/timer/#timersimulate","text":"Constant to represent timers that run when the game isn't paused - the game's menus are closed. It matches the simulate event's timing. If the game is simulating, simulate events and simulate timers progress. Duration is measured in seconds.","title":"timer.simulate"},{"location":"apis/timer/#functions","text":"","title":"Functions"},{"location":"apis/timer/#timerdelayoneframe","text":"Creates a timer that will finish the next frame. It defaults to the next simulation frame. local timer = timer . delayOneFrame ( callback , type ) Parameters : callback (function): The callback function that will execute when the timer expires. type (integer): Default : timer.simulate . Type of the timer. This value can be timer.simulate , timer.game or timer.real . Returns : timer ( mwseTimer )","title":"timer.delayOneFrame"},{"location":"apis/timer/#timerregister","text":"Registers a named timer with a callback to persist between game sessions. Bear in mind that nothing in MWSE is sandboxed, so all the registered timers are in the global namespace. Consider prefixing your timer with mod name or something else to avoid name collisions. For instance, iceCreamMod:myTimer . timer . register ( name , fn ) Parameters : name (string): Name of the registered timer. fn (function): A callback function for the timer. Example: Persistent timers tutorial with .data usage The timer registered in the example is registered and persistent. That renders starting the timer on every loaded event unnecessary. Its state is saved, and it continues where it stopped after loading a save. ---@class timerCallbackData ---@field timer mwseTimer Access to our timer ---@param e timerCallbackData local function showMessage ( e ) local timer = e . timer local data = timer . data local currentTimestamp = tes3 . getSimulationTimestamp () -- We are sure that the timer.data ~= nil since we -- created that table in timer.start function. -- So, lets disable the warnings for a bit. ---@diagnostic disable:need-check-nil tes3 . messageBox ( data . message : format ( data . startTimestamp , data . lastIterationTimestamp , currentTimestamp )) ---@diagnostic enable:need-check-nil -- Save this to the data table on the timer data . lastIterationTimestamp = currentTimestamp end timer . register ( \"testExample:OneDayTimer\" , showMessage ) timer . start ({ type = timer . game , persist = true , iterations = - 1 , duration = 24 , -- Notice that the callback isn't a function, but -- a string passed to the timer.register function callback = \"testExample:OneDayTimer\" , data = { startTimestamp = tes3 . getSimulationTimestamp (), lastIterationTimestamp = tes3 . getSimulationTimestamp (), message = [[One day later... timer's starting timestamp %s the timestamp of last iteration %s current timestamp %s ]] } })","title":"timer.register"},{"location":"apis/timer/#timerstart","text":"Creates a timer. local timer = timer . start ({ type = ..., duration = ..., callback = ..., iterations = ..., persist = ..., data = ... }) Parameters : params (table) type (integer): Default : timer.simulate . Type of the timer. This value can be timer.simulate , timer.game or timer.real . duration (number): Duration of the timer. The method of time passing depends on the timer type. callback (function, string): The callback function that will execute when the timer expires. If starting a registered timer, this needs to be the name string passed to timer.register . iterations (integer): Default : 1 . The number of iterations to run. Use -1 for infinite looping. persist (boolean): Default : true . Registering a timer with persist flag set to true will serialize the callback string in the save to persist between sessions. Only a registered timer will persist between sessions. See timer.register() . data (table, nil): Default : nil . Data to be attached to the timer. If this is a persistent timer, the data must be json-serializable, matching the same limitations as data stored on references. Returns : timer ( mwseTimer ) Example: Show a Countdown Message In this example, whenever the player activates an item they will be shown a 10 second countdown. Because it is a simulation timer, it will not tick down while the menu is open, nor is it sensitive to the game timescale/clock. local timeLeft = 0 ; local function onTimerExpired () timeLeft = timeLeft - 1 tes3 . messageBox ( \"%d seconds left\" , timeLeft ) end local function onActivate ( eventData ) if ( eventData . activator == tes3 . player ) then timeLeft = 10 timer . start { duration = 1 , iterations = 10 , type = timer . simulate , callback = onTimerExpired } end end event . register ( tes3 . event . activate , onActivate )","title":"timer.start"},{"location":"events/absorbedMagic/","text":"absorbedMagic \u2693\ufe0e This event is triggered after magic absorption absorbs and cancels a magic effect, and just before magic absorption gives magicka to the target. It can control the amount of magicka restored. This event occurs once per effect restored, so a multi-effect spell may trigger this multiple times. The default amount restored is equal to the casting cost of the entire spell, which is the vanilla behaviour. --- @param e absorbedMagicEventData local function absorbedMagicCallback ( e ) end event . register ( tes3 . event . absorbedMagic , absorbedMagicCallback ) Tip This event can be filtered based on the target event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e absorb (number): The amount of magicka to restore to the actor. mobile ( tes3mobileActor ): Read-only . The mobile actor that absorbed the spell. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The actor that absorbed the spell.","title":"absorbedMagic"},{"location":"events/absorbedMagic/#absorbedmagic","text":"This event is triggered after magic absorption absorbs and cancels a magic effect, and just before magic absorption gives magicka to the target. It can control the amount of magicka restored. This event occurs once per effect restored, so a multi-effect spell may trigger this multiple times. The default amount restored is equal to the casting cost of the entire spell, which is the vanilla behaviour. --- @param e absorbedMagicEventData local function absorbedMagicCallback ( e ) end event . register ( tes3 . event . absorbedMagic , absorbedMagicCallback ) Tip This event can be filtered based on the target event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"absorbedMagic"},{"location":"events/absorbedMagic/#event-data","text":"absorb (number): The amount of magicka to restore to the actor. mobile ( tes3mobileActor ): Read-only . The mobile actor that absorbed the spell. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The actor that absorbed the spell.","title":"Event Data"},{"location":"events/activate/","text":"activate \u2693\ufe0e This event is invoked whenever something is activated, typically by the player. Activation is usually done with the associated activate/use key, but may also be forced by scripts. Non-player actors may also activate objects, such as when opening doors, or via MWSE functions like tes3.activate() . Some examples of when the activate event fires includes: When a door is used. When an item is picked up. When someone attempts to open a container. --- @param e activateEventData local function activateCallback ( e ) end event . register ( tes3 . event . activate , activateCallback ) Tip This event can be filtered based on the target event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e activator ( tes3reference ): Read-only . The actor attempting to trigger the event. target ( tes3reference ): Read-only . The reference that is being activated. Examples \u2693\ufe0e Example: Prevent the player from activating NPCs local function myOnActivateCallback ( e ) -- We only care if the PC is activating something. if ( e . activator ~= tes3 . player ) then return end -- If the player targets an NPC, block the activation. if ( e . target . object . objectType == tes3 . objectType . npc ) then return false end end event . register ( tes3 . event . activate , myOnActivateCallback ) Example: Show a message for what the player is activating -- Show the id when the player activates an object. local function myOnActivateCallback ( e ) if ( e . activator == tes3 . player ) then tes3 . messageBox ({ message = \"Activated \" .. e . target . object . id }) end end event . register ( tes3 . event . activate , myOnActivateCallback )","title":"Activate"},{"location":"events/activate/#activate","text":"This event is invoked whenever something is activated, typically by the player. Activation is usually done with the associated activate/use key, but may also be forced by scripts. Non-player actors may also activate objects, such as when opening doors, or via MWSE functions like tes3.activate() . Some examples of when the activate event fires includes: When a door is used. When an item is picked up. When someone attempts to open a container. --- @param e activateEventData local function activateCallback ( e ) end event . register ( tes3 . event . activate , activateCallback ) Tip This event can be filtered based on the target event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"activate"},{"location":"events/activate/#event-data","text":"activator ( tes3reference ): Read-only . The actor attempting to trigger the event. target ( tes3reference ): Read-only . The reference that is being activated.","title":"Event Data"},{"location":"events/activate/#examples","text":"Example: Prevent the player from activating NPCs local function myOnActivateCallback ( e ) -- We only care if the PC is activating something. if ( e . activator ~= tes3 . player ) then return end -- If the player targets an NPC, block the activation. if ( e . target . object . objectType == tes3 . objectType . npc ) then return false end end event . register ( tes3 . event . activate , myOnActivateCallback ) Example: Show a message for what the player is activating -- Show the id when the player activates an object. local function myOnActivateCallback ( e ) if ( e . activator == tes3 . player ) then tes3 . messageBox ({ message = \"Activated \" .. e . target . object . id }) end end event . register ( tes3 . event . activate , myOnActivateCallback )","title":"Examples"},{"location":"events/activationTargetChanged/","text":"activationTargetChanged \u2693\ufe0e This event is raised when the potential activation target for the player changes. --- @param e activationTargetChangedEventData local function activationTargetChangedCallback ( e ) end event . register ( tes3 . event . activationTargetChanged , activationTargetChangedCallback ) Tip This event can be filtered based on the current event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e current ( tes3reference ): Read-only . The activation target for the player, should they press the activation key. This can be nil when the player is not looking at an activateable object. previous ( tes3reference ): Read-only . The previous activation target. If the player picked up or activated the previous target, this value may become nil, as the reference no longer exists after being taken.","title":"activationTargetChanged"},{"location":"events/activationTargetChanged/#activationtargetchanged","text":"This event is raised when the potential activation target for the player changes. --- @param e activationTargetChangedEventData local function activationTargetChangedCallback ( e ) end event . register ( tes3 . event . activationTargetChanged , activationTargetChangedCallback ) Tip This event can be filtered based on the current event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"activationTargetChanged"},{"location":"events/activationTargetChanged/#event-data","text":"current ( tes3reference ): Read-only . The activation target for the player, should they press the activation key. This can be nil when the player is not looking at an activateable object. previous ( tes3reference ): Read-only . The previous activation target. If the player picked up or activated the previous target, this value may become nil, as the reference no longer exists after being taken.","title":"Event Data"},{"location":"events/activeMagicEffectIconsUpdated/","text":"activeMagicEffectIconsUpdated \u2693\ufe0e This event is called when the active magic effect icons in the magic menu and the HUD have been updated. Each update fully destroys the previously created active magic effect icons and recreates them. --- @param e activeMagicEffectIconsUpdatedEventData local function activeMagicEffectIconsUpdatedCallback ( e ) end event . register ( tes3 . event . activeMagicEffectIconsUpdated , activeMagicEffectIconsUpdatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"activeMagicEffectIconsUpdated"},{"location":"events/activeMagicEffectIconsUpdated/#activemagiceffecticonsupdated","text":"This event is called when the active magic effect icons in the magic menu and the HUD have been updated. Each update fully destroys the previously created active magic effect icons and recreates them. --- @param e activeMagicEffectIconsUpdatedEventData local function activeMagicEffectIconsUpdatedCallback ( e ) end event . register ( tes3 . event . activeMagicEffectIconsUpdated , activeMagicEffectIconsUpdatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"activeMagicEffectIconsUpdated"},{"location":"events/addSound/","text":"addSound \u2693\ufe0e This event is triggered when a sound is played by the game or when tes3.playSound() is called. --- @param e addSoundEventData local function addSoundCallback ( e ) end event . register ( tes3 . event . addSound , addSoundCallback ) Tip This event can be filtered based on the sound event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e flags (number): Read-only . A flag whether the sound is looping or not. 0 means the sound doesn't loop, 1 means the sound loops. isVoiceover (boolean): A flag whether the sound is a voiced line, which are usually found in the Sound\\Vo data folder. pitch (number): The pitch-shift multiplier. For 22kHz audio (most typical) it can have the range [0.005, 4.5]; for 44kHz audio it can have the range [0.0025, 2.25]. reference ( tes3reference ): The reference which is emiting the sound. sound ( tes3sound ): The sound going to be played. volume (number): The volume of the sound. In range [1, 250].","title":"addSound"},{"location":"events/addSound/#addsound","text":"This event is triggered when a sound is played by the game or when tes3.playSound() is called. --- @param e addSoundEventData local function addSoundCallback ( e ) end event . register ( tes3 . event . addSound , addSoundCallback ) Tip This event can be filtered based on the sound event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"addSound"},{"location":"events/addSound/#event-data","text":"flags (number): Read-only . A flag whether the sound is looping or not. 0 means the sound doesn't loop, 1 means the sound loops. isVoiceover (boolean): A flag whether the sound is a voiced line, which are usually found in the Sound\\Vo data folder. pitch (number): The pitch-shift multiplier. For 22kHz audio (most typical) it can have the range [0.005, 4.5]; for 44kHz audio it can have the range [0.0025, 2.25]. reference ( tes3reference ): The reference which is emiting the sound. sound ( tes3sound ): The sound going to be played. volume (number): The volume of the sound. In range [1, 250].","title":"Event Data"},{"location":"events/addTempSound/","text":"addTempSound \u2693\ufe0e This event is triggered when the game is about to play a sound from a sound generator. --- @param e addTempSoundEventData local function addTempSoundCallback ( e ) end event . register ( tes3 . event . addTempSound , addTempSoundCallback ) Tip This event can be filtered based on the sound event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e flags (number): Read-only . A flag whether the sound is looping or not. 0 means the sound doesn't loop, 1 means the sound loops. isVoiceover (boolean): A flag whether the sound is a voiced line, which are usually found in the Sound\\Vo data folder. path (string): The path to the sound to play, relative to Data Files\\Sounds pitch (number): The pitch-shift multiplier. For 22kHz audio (most typical) it can have the range [0.005, 4.5]; for 44kHz audio it can have the range [0.0025, 2.25]. reference ( tes3reference ): The reference which is emiting the sound. sound ( tes3sound ): The sound object about to be played. volume (number): The volume of the sound. In range [1, 250].","title":"addTempSound"},{"location":"events/addTempSound/#addtempsound","text":"This event is triggered when the game is about to play a sound from a sound generator. --- @param e addTempSoundEventData local function addTempSoundCallback ( e ) end event . register ( tes3 . event . addTempSound , addTempSoundCallback ) Tip This event can be filtered based on the sound event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"addTempSound"},{"location":"events/addTempSound/#event-data","text":"flags (number): Read-only . A flag whether the sound is looping or not. 0 means the sound doesn't loop, 1 means the sound loops. isVoiceover (boolean): A flag whether the sound is a voiced line, which are usually found in the Sound\\Vo data folder. path (string): The path to the sound to play, relative to Data Files\\Sounds pitch (number): The pitch-shift multiplier. For 22kHz audio (most typical) it can have the range [0.005, 4.5]; for 44kHz audio it can have the range [0.0025, 2.25]. reference ( tes3reference ): The reference which is emiting the sound. sound ( tes3sound ): The sound object about to be played. volume (number): The volume of the sound. In range [1, 250].","title":"Event Data"},{"location":"events/attack/","text":"attack \u2693\ufe0e This event is invoked whenever an actor commits to an attack with their fists or a weapon, or a creature makes any attack. It occurs at the release time of the attack, such as the downstroke of a melee weapon or when an arrow is shot. For the player, it is when the attack button is released. A target is not required to be present for this event. For the actual moment the attack hits, use the attackHit event. This event has specific combat mechanics occuring at this point. This is the time when the target has a chance to use its block skill, when on-strike enchantments may be applied, and when elemental shields do reflected damage. There is still a small period of time while the attack animation completes before the hit, so it is still possible for a target to move out of range (normally only seen with short weapons). Lockpicks and probes do not invoke this event. --- @param e attackEventData local function attackCallback ( e ) end event . register ( tes3 . event . attack , attackCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor making the attack. reference ( tes3reference ): Read-only . A shortcut to the reference that is attacking. targetMobile ( tes3mobileActor ): Read-only . The mobile actor being attacked. May be nil, e.g. if nothing was targeted. targetReference ( tes3reference ): Read-only . A shortcut to the reference being attacked. May be nil, e.g. if nothing was targeted. Examples \u2693\ufe0e Example: Show a Message when the Player Attacks local function myOnAttackCallback ( e ) -- Someone other than the player is attacking. if ( e . reference ~= tes3 . player ) then return end -- We hit someone! if ( e . targetReference ~= nil ) then tes3 . messageBox ( \"You hit %s!\" , e . targetReference . object . name or e . targetReference . object . id ) end end event . register ( tes3 . event . attack , myOnAttackCallback )","title":"Attack"},{"location":"events/attack/#attack","text":"This event is invoked whenever an actor commits to an attack with their fists or a weapon, or a creature makes any attack. It occurs at the release time of the attack, such as the downstroke of a melee weapon or when an arrow is shot. For the player, it is when the attack button is released. A target is not required to be present for this event. For the actual moment the attack hits, use the attackHit event. This event has specific combat mechanics occuring at this point. This is the time when the target has a chance to use its block skill, when on-strike enchantments may be applied, and when elemental shields do reflected damage. There is still a small period of time while the attack animation completes before the hit, so it is still possible for a target to move out of range (normally only seen with short weapons). Lockpicks and probes do not invoke this event. --- @param e attackEventData local function attackCallback ( e ) end event . register ( tes3 . event . attack , attackCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"attack"},{"location":"events/attack/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor making the attack. reference ( tes3reference ): Read-only . A shortcut to the reference that is attacking. targetMobile ( tes3mobileActor ): Read-only . The mobile actor being attacked. May be nil, e.g. if nothing was targeted. targetReference ( tes3reference ): Read-only . A shortcut to the reference being attacked. May be nil, e.g. if nothing was targeted.","title":"Event Data"},{"location":"events/attack/#examples","text":"Example: Show a Message when the Player Attacks local function myOnAttackCallback ( e ) -- Someone other than the player is attacking. if ( e . reference ~= tes3 . player ) then return end -- We hit someone! if ( e . targetReference ~= nil ) then tes3 . messageBox ( \"You hit %s!\" , e . targetReference . object . name or e . targetReference . object . id ) end end event . register ( tes3 . event . attack , myOnAttackCallback )","title":"Examples"},{"location":"events/attackHit/","text":"attackHit \u2693\ufe0e This event is invoked whenever an actor makes an attack with their fists or a weapon, or a creature makes any attack. It occurs at the moment a melee attack would hit, at the end of a melee weapon strike. For projectile attacks, it is when an arrow is about to detach from its bow. A target is not required to be present for this event. Lockpicks and probes do not invoke this event. --- @param e attackHitEventData local function attackHitCallback ( e ) end event . register ( tes3 . event . attackHit , attackHitCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor making the attack. reference ( tes3reference ): Read-only . A shortcut to the reference that is attacking. targetMobile ( tes3mobileActor ): Read-only . The mobile actor being attacked. May be nil, e.g. if nothing was targeted. targetReference ( tes3reference ): Read-only . A shortcut to the reference being attacked. May be nil, e.g. if nothing was targeted. Examples \u2693\ufe0e Example: Convert Hits to Misses local function onAttackHitCallback ( e ) -- Set damage to zero to convert the physical hit to a miss. tes3 . messageBox ( \"Somehow it missed!\" ) e . mobile . actionData . physicalDamage = 0 end event . register ( tes3 . event . attackHit , onAttackHitCallback )","title":"attackHit"},{"location":"events/attackHit/#attackhit","text":"This event is invoked whenever an actor makes an attack with their fists or a weapon, or a creature makes any attack. It occurs at the moment a melee attack would hit, at the end of a melee weapon strike. For projectile attacks, it is when an arrow is about to detach from its bow. A target is not required to be present for this event. Lockpicks and probes do not invoke this event. --- @param e attackHitEventData local function attackHitCallback ( e ) end event . register ( tes3 . event . attackHit , attackHitCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"attackHit"},{"location":"events/attackHit/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor making the attack. reference ( tes3reference ): Read-only . A shortcut to the reference that is attacking. targetMobile ( tes3mobileActor ): Read-only . The mobile actor being attacked. May be nil, e.g. if nothing was targeted. targetReference ( tes3reference ): Read-only . A shortcut to the reference being attacked. May be nil, e.g. if nothing was targeted.","title":"Event Data"},{"location":"events/attackHit/#examples","text":"Example: Convert Hits to Misses local function onAttackHitCallback ( e ) -- Set damage to zero to convert the physical hit to a miss. tes3 . messageBox ( \"Somehow it missed!\" ) e . mobile . actionData . physicalDamage = 0 end event . register ( tes3 . event . attackHit , onAttackHitCallback )","title":"Examples"},{"location":"events/attackStart/","text":"attackStart \u2693\ufe0e This event is invoked whenever an actor starts an attack with their fists or a weapon, or a creature makes any attack. More precisely, it is when the actor raises a melee weapon or draws an arrow. There is not necessarily a target in range, or any target at all for the player. Lockpicks and probes do not invoke this event. --- @param e attackStartEventData local function attackStartCallback ( e ) end event . register ( tes3 . event . attackStart , attackStartCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e attackSpeed (number): The speed multiplier of the attack animation, normally equal to the weapon speed (1.0 for no equipped weapon). May be changed to change the current attack's speed. See also tes3actorAnimationController to change animation speed during the attack. attackType (number): A number from the tes3.physicalAttackType enumeration identifying the physical attack type. Can be tes3.physicalAttackType.slash , .chop , .thrust , .projectile , .creature1 , .creature2 , or .creature3 . May be changed to change the attack's type if the original attack was slash, chop, or thrust. mobile ( tes3mobileActor ): Read-only . The mobile actor making the attack. reference ( tes3reference ): Read-only . A shortcut to the reference that is attacking.","title":"attackStart"},{"location":"events/attackStart/#attackstart","text":"This event is invoked whenever an actor starts an attack with their fists or a weapon, or a creature makes any attack. More precisely, it is when the actor raises a melee weapon or draws an arrow. There is not necessarily a target in range, or any target at all for the player. Lockpicks and probes do not invoke this event. --- @param e attackStartEventData local function attackStartCallback ( e ) end event . register ( tes3 . event . attackStart , attackStartCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"attackStart"},{"location":"events/attackStart/#event-data","text":"attackSpeed (number): The speed multiplier of the attack animation, normally equal to the weapon speed (1.0 for no equipped weapon). May be changed to change the current attack's speed. See also tes3actorAnimationController to change animation speed during the attack. attackType (number): A number from the tes3.physicalAttackType enumeration identifying the physical attack type. Can be tes3.physicalAttackType.slash , .chop , .thrust , .projectile , .creature1 , .creature2 , or .creature3 . May be changed to change the attack's type if the original attack was slash, chop, or thrust. mobile ( tes3mobileActor ): Read-only . The mobile actor making the attack. reference ( tes3reference ): Read-only . A shortcut to the reference that is attacking.","title":"Event Data"},{"location":"events/barterOffer/","text":"barterOffer \u2693\ufe0e This event is called when a potentially successful barter offer is made by the player. Potentially successful means both parties have the required funds to make the trade. --- @param e barterOfferEventData local function barterOfferCallback ( e ) end event . register ( tes3 . event . barterOffer , barterOfferCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e buying ( tes3inventoryTile []): Read-only . The objects being bought. These items will be transfered to player's inventory on a successful bartering event. mobile ( tes3mobileActor ): Read-only . The mobile actor of the merchant the player is interacting with. offer (number): Read-only . Offered gold amount. selling ( tes3inventoryTile []): Read-only . The objects being sold. These items will be transfered to bartender's inventory on a successful bartering event. success (boolean): Whether the trade was accepted or not. value (number): Read-only . Total value in gold of items being traded. Negative means the player owes coin, positive means the player gets coin.","title":"barterOffer"},{"location":"events/barterOffer/#barteroffer","text":"This event is called when a potentially successful barter offer is made by the player. Potentially successful means both parties have the required funds to make the trade. --- @param e barterOfferEventData local function barterOfferCallback ( e ) end event . register ( tes3 . event . barterOffer , barterOfferCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"barterOffer"},{"location":"events/barterOffer/#event-data","text":"buying ( tes3inventoryTile []): Read-only . The objects being bought. These items will be transfered to player's inventory on a successful bartering event. mobile ( tes3mobileActor ): Read-only . The mobile actor of the merchant the player is interacting with. offer (number): Read-only . Offered gold amount. selling ( tes3inventoryTile []): Read-only . The objects being sold. These items will be transfered to bartender's inventory on a successful bartering event. success (boolean): Whether the trade was accepted or not. value (number): Read-only . Total value in gold of items being traded. Negative means the player owes coin, positive means the player gets coin.","title":"Event Data"},{"location":"events/bodyPartAssigned/","text":"bodyPartAssigned \u2693\ufe0e Allows reading and overwriting body part assignments. --- @param e bodyPartAssignedEventData local function bodyPartAssignedCallback ( e ) end event . register ( tes3 . event . bodyPartAssigned , bodyPartAssignedCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e bodyPart ( tes3bodyPart ): The body part object assigned. index (number): Read-only . The body slot index of the newly assigned body part. Maps to values in tes3.activeBodyPart constants. isFirstPerson (boolean): Read-only . A flag that controls whether the newly assigned body part is used while the camera is in the first person. manager ( tes3bodyPartManager ): Read-only . The access to the body part manager that is associated with the reference that had a body part assigned. object ( tes3physicalObject ): Read-only . Access to the physical object for the assigned body part. reference ( tes3reference ): Read-only . The reference for the actor whose body part was assigned. Examples \u2693\ufe0e Example: Bald is beautiful This example shows how to disable hair body parts from appearing on NPCs or the Player. ---@param e bodyPartAssignedEventData local function baldIsBeautiful ( e ) if ( e . index == tes3 . activeBodyPart . hair ) then -- Returning false from this event will -- block the assignment of the body part. return false end end event . register ( tes3 . event . bodyPartAssigned , baldIsBeautiful )","title":"bodyPartAssigned"},{"location":"events/bodyPartAssigned/#bodypartassigned","text":"Allows reading and overwriting body part assignments. --- @param e bodyPartAssignedEventData local function bodyPartAssignedCallback ( e ) end event . register ( tes3 . event . bodyPartAssigned , bodyPartAssignedCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"bodyPartAssigned"},{"location":"events/bodyPartAssigned/#event-data","text":"bodyPart ( tes3bodyPart ): The body part object assigned. index (number): Read-only . The body slot index of the newly assigned body part. Maps to values in tes3.activeBodyPart constants. isFirstPerson (boolean): Read-only . A flag that controls whether the newly assigned body part is used while the camera is in the first person. manager ( tes3bodyPartManager ): Read-only . The access to the body part manager that is associated with the reference that had a body part assigned. object ( tes3physicalObject ): Read-only . Access to the physical object for the assigned body part. reference ( tes3reference ): Read-only . The reference for the actor whose body part was assigned.","title":"Event Data"},{"location":"events/bodyPartAssigned/#examples","text":"Example: Bald is beautiful This example shows how to disable hair body parts from appearing on NPCs or the Player. ---@param e bodyPartAssignedEventData local function baldIsBeautiful ( e ) if ( e . index == tes3 . activeBodyPart . hair ) then -- Returning false from this event will -- block the assignment of the body part. return false end end event . register ( tes3 . event . bodyPartAssigned , baldIsBeautiful )","title":"Examples"},{"location":"events/bodyPartsUpdated/","text":"bodyPartsUpdated \u2693\ufe0e This event is triggered when an actor's body parts have finished updating. This typically triggers when an actor is first rendered, or when their equipment changes. --- @param e bodyPartsUpdatedEventData local function bodyPartsUpdatedCallback ( e ) end event . register ( tes3 . event . bodyPartsUpdated , bodyPartsUpdatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor whose body parts were updated. reference ( tes3reference ): Read-only . The reference for the actor whose body parts were updated.","title":"bodyPartsUpdated"},{"location":"events/bodyPartsUpdated/#bodypartsupdated","text":"This event is triggered when an actor's body parts have finished updating. This typically triggers when an actor is first rendered, or when their equipment changes. --- @param e bodyPartsUpdatedEventData local function bodyPartsUpdatedCallback ( e ) end event . register ( tes3 . event . bodyPartsUpdated , bodyPartsUpdatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"bodyPartsUpdated"},{"location":"events/bodyPartsUpdated/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor whose body parts were updated. reference ( tes3reference ): Read-only . The reference for the actor whose body parts were updated.","title":"Event Data"},{"location":"events/bookGetText/","text":"bookGetText \u2693\ufe0e This event is raised when a book's text is about to be displayed. By providing your own text, you can overwrite what is going to be displayed. --- @param e bookGetTextEventData local function bookGetTextCallback ( e ) end event . register ( tes3 . event . bookGetText , bookGetTextCallback ) Tip This event can be filtered based on the book event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e book ( tes3book ): Read-only . The book whose text is being retrieved. loadOriginalText (method): Loads the original text for the book from the game files, bypassing this event. text (string): If set, the book's text will be overwritten with this value. It needs to follow book text conventions as in the Construction Set. In essence, it uses HTML syntax. Important: every book needs to end with a <BR> statement to be displayed properly. For more details, please read the page on book conventions . Examples \u2693\ufe0e Example: Change the text of a book This will make every book read Sweetroll. local newText = [[<div align=\"left\"><font color=\"002200\" size=\"3\" face=\"Magic Cards\"><br> Sweetroll <br> ]] local function example ( e ) e . text = newText end event . register ( tes3 . event . bookGetText , example )","title":"bookGetText"},{"location":"events/bookGetText/#bookgettext","text":"This event is raised when a book's text is about to be displayed. By providing your own text, you can overwrite what is going to be displayed. --- @param e bookGetTextEventData local function bookGetTextCallback ( e ) end event . register ( tes3 . event . bookGetText , bookGetTextCallback ) Tip This event can be filtered based on the book event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"bookGetText"},{"location":"events/bookGetText/#event-data","text":"book ( tes3book ): Read-only . The book whose text is being retrieved. loadOriginalText (method): Loads the original text for the book from the game files, bypassing this event. text (string): If set, the book's text will be overwritten with this value. It needs to follow book text conventions as in the Construction Set. In essence, it uses HTML syntax. Important: every book needs to end with a <BR> statement to be displayed properly. For more details, please read the page on book conventions .","title":"Event Data"},{"location":"events/bookGetText/#examples","text":"Example: Change the text of a book This will make every book read Sweetroll. local newText = [[<div align=\"left\"><font color=\"002200\" size=\"3\" face=\"Magic Cards\"><br> Sweetroll <br> ]] local function example ( e ) e . text = newText end event . register ( tes3 . event . bookGetText , example )","title":"Examples"},{"location":"events/buttonPressed/","text":"buttonPressed \u2693\ufe0e The buttonPressed event is unique in that it is invoked only when using tes3.messageBox to present buttons to the player. --- @param e buttonPressedEventData local function buttonPressedCallback ( e ) end event . register ( tes3 . event . buttonPressed , buttonPressedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e button (number): Read-only . The button index, 0-based, that was pressed.","title":"buttonPressed"},{"location":"events/buttonPressed/#buttonpressed","text":"The buttonPressed event is unique in that it is invoked only when using tes3.messageBox to present buttons to the player. --- @param e buttonPressedEventData local function buttonPressedCallback ( e ) end event . register ( tes3 . event . buttonPressed , buttonPressedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"buttonPressed"},{"location":"events/buttonPressed/#event-data","text":"button (number): Read-only . The button index, 0-based, that was pressed.","title":"Event Data"},{"location":"events/calcArmorPieceHit/","text":"calcArmorPieceHit \u2693\ufe0e This event is raised just after determining which armor piece, if any, was hit with an attack. The slots can be modified, to draw focus onto specific armor slots. The following table is used by default to determine what armor piece is hit: Roll (1-100) Slot Fallback 1-29 Cuirass None 30-34 Shield Cuirass 35-39 Shield Left Pauldron 40-49 Left Pauldron None 50-59 Right Pauldron None 60-69 Greaves None 70-79 Helmet None 80-89 Boots None 90-94 Right Gauntlet Right Bracer 95-100 Left Gauntlet Left Bracer --- @param e calcArmorPieceHitEventData local function calcArmorPieceHitCallback ( e ) end event . register ( tes3 . event . calcArmorPieceHit , calcArmorPieceHitCallback ) Tip This event can be filtered based on the reference.baseObject event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e attacker ( tes3reference ): Read-only . A shortcut to the attacker mobile's reference. attackerMobile ( tes3mobileActor ): Read-only . The mobile who is doing the hitting. fallback (number): A secondary slot to check for equipment on, if no armor is found using the primary slot. mobile ( tes3mobileActor ): Read-only . The mobile who is being hit. projectile ( tes3mobileProjectile , nil): Read-only . The projectile used that is hitting the given reference. This is nil for all melee combat. reference ( tes3reference ): Read-only . A shortcut to the mobile's reference. slot (number): The primary slot that is targeted.","title":"calcArmorPieceHit"},{"location":"events/calcArmorPieceHit/#calcarmorpiecehit","text":"This event is raised just after determining which armor piece, if any, was hit with an attack. The slots can be modified, to draw focus onto specific armor slots. The following table is used by default to determine what armor piece is hit: Roll (1-100) Slot Fallback 1-29 Cuirass None 30-34 Shield Cuirass 35-39 Shield Left Pauldron 40-49 Left Pauldron None 50-59 Right Pauldron None 60-69 Greaves None 70-79 Helmet None 80-89 Boots None 90-94 Right Gauntlet Right Bracer 95-100 Left Gauntlet Left Bracer --- @param e calcArmorPieceHitEventData local function calcArmorPieceHitCallback ( e ) end event . register ( tes3 . event . calcArmorPieceHit , calcArmorPieceHitCallback ) Tip This event can be filtered based on the reference.baseObject event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcArmorPieceHit"},{"location":"events/calcArmorPieceHit/#event-data","text":"attacker ( tes3reference ): Read-only . A shortcut to the attacker mobile's reference. attackerMobile ( tes3mobileActor ): Read-only . The mobile who is doing the hitting. fallback (number): A secondary slot to check for equipment on, if no armor is found using the primary slot. mobile ( tes3mobileActor ): Read-only . The mobile who is being hit. projectile ( tes3mobileProjectile , nil): Read-only . The projectile used that is hitting the given reference. This is nil for all melee combat. reference ( tes3reference ): Read-only . A shortcut to the mobile's reference. slot (number): The primary slot that is targeted.","title":"Event Data"},{"location":"events/calcArmorRating/","text":"calcArmorRating \u2693\ufe0e This event is fired before an actor's armor rating has been calculated, and can be used to override the armor that the actor is given. --- @param e calcArmorRatingEventData local function calcArmorRatingCallback ( e ) end event . register ( tes3 . event . calcArmorRating , calcArmorRatingCallback ) Tip This event can be filtered based on the armor event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e armor ( tes3armor ): Read-only . The armor piece whose AR is being calculated. armorRating (number): If set, the given armor rating will be used instead of the one calculated. mobile ( tes3mobileActor ): Read-only . The mobile whose AR is being calculated. May not always be available. npc ( tes3npc ): Read-only . The NPC object whose AR is being calculated. May not always be available. reference ( tes3reference ): Read-only . A shortcut to the mobile's reference. May not always be available.","title":"calcArmorRating"},{"location":"events/calcArmorRating/#calcarmorrating","text":"This event is fired before an actor's armor rating has been calculated, and can be used to override the armor that the actor is given. --- @param e calcArmorRatingEventData local function calcArmorRatingCallback ( e ) end event . register ( tes3 . event . calcArmorRating , calcArmorRatingCallback ) Tip This event can be filtered based on the armor event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcArmorRating"},{"location":"events/calcArmorRating/#event-data","text":"armor ( tes3armor ): Read-only . The armor piece whose AR is being calculated. armorRating (number): If set, the given armor rating will be used instead of the one calculated. mobile ( tes3mobileActor ): Read-only . The mobile whose AR is being calculated. May not always be available. npc ( tes3npc ): Read-only . The NPC object whose AR is being calculated. May not always be available. reference ( tes3reference ): Read-only . A shortcut to the mobile's reference. May not always be available.","title":"Event Data"},{"location":"events/calcBarterPrice/","text":"calcBarterPrice \u2693\ufe0e This event is raised when an item price is being determined when bartering. --- @param e calcBarterPriceEventData local function calcBarterPriceCallback ( e ) end event . register ( tes3 . event . calcBarterPrice , calcBarterPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e basePrice (number): Read-only . The base price of the item, before any event modifications. buying (boolean): Read-only . If true, the player is buying, otherwise the player is selling. count (number): Read-only . The number of items being bartered. item ( tes3item ): Read-only . The item, if any, that is being bartered. itemData ( tes3itemData ): Read-only . The item data for the bartered item. mobile ( tes3mobileActor ): Read-only . The mobile actor for who is selling or buying. May not always be available. price (number): The price of the item. This can be modified, but ensure that the buy/sell price is matched or there will be odd behavior. reference ( tes3reference ): Read-only . A shortcut to the mobile's reference. May not always be available.","title":"calcBarterPrice"},{"location":"events/calcBarterPrice/#calcbarterprice","text":"This event is raised when an item price is being determined when bartering. --- @param e calcBarterPriceEventData local function calcBarterPriceCallback ( e ) end event . register ( tes3 . event . calcBarterPrice , calcBarterPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcBarterPrice"},{"location":"events/calcBarterPrice/#event-data","text":"basePrice (number): Read-only . The base price of the item, before any event modifications. buying (boolean): Read-only . If true, the player is buying, otherwise the player is selling. count (number): Read-only . The number of items being bartered. item ( tes3item ): Read-only . The item, if any, that is being bartered. itemData ( tes3itemData ): Read-only . The item data for the bartered item. mobile ( tes3mobileActor ): Read-only . The mobile actor for who is selling or buying. May not always be available. price (number): The price of the item. This can be modified, but ensure that the buy/sell price is matched or there will be odd behavior. reference ( tes3reference ): Read-only . A shortcut to the mobile's reference. May not always be available.","title":"Event Data"},{"location":"events/calcBlockChance/","text":"calcBlockChance \u2693\ufe0e This event is raised when determining the block chance for an actor. This does not affect ranged or magic attacks and ignores attacks outside of the normal blocking angles, like being attacked from behind. Blocking is disabled in some situations, like being paralyzed or attacking. --- @param e calcBlockChanceEventData local function calcBlockChanceCallback ( e ) end event . register ( tes3 . event . calcBlockChance , calcBlockChanceCallback ) Tip This event can be filtered based on the attacker.baseObject event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e attacker ( tes3reference ): Read-only . A shortcut to the attacker mobile's reference. attackerMobile ( tes3mobileActor ): Read-only . The mobile that is attacking. blockChance (number): The block chance for the actor. This can be adjusted. target ( tes3reference ): Read-only . A shortcut to the target mobile's reference. targetMobile ( tes3mobileActor ): Read-only . The mobile that is being attacked.","title":"calcBlockChance"},{"location":"events/calcBlockChance/#calcblockchance","text":"This event is raised when determining the block chance for an actor. This does not affect ranged or magic attacks and ignores attacks outside of the normal blocking angles, like being attacked from behind. Blocking is disabled in some situations, like being paralyzed or attacking. --- @param e calcBlockChanceEventData local function calcBlockChanceCallback ( e ) end event . register ( tes3 . event . calcBlockChance , calcBlockChanceCallback ) Tip This event can be filtered based on the attacker.baseObject event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcBlockChance"},{"location":"events/calcBlockChance/#event-data","text":"attacker ( tes3reference ): Read-only . A shortcut to the attacker mobile's reference. attackerMobile ( tes3mobileActor ): Read-only . The mobile that is attacking. blockChance (number): The block chance for the actor. This can be adjusted. target ( tes3reference ): Read-only . A shortcut to the target mobile's reference. targetMobile ( tes3mobileActor ): Read-only . The mobile that is being attacked.","title":"Event Data"},{"location":"events/calcEnchantmentPrice/","text":"calcEnchantmentPrice \u2693\ufe0e This event is raised when an enchantment price is being determined. --- @param e calcEnchantmentPriceEventData local function calcEnchantmentPriceCallback ( e ) end event . register ( tes3 . event . calcEnchantmentPrice , calcEnchantmentPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e basePrice (number): Read-only . The base price of the enchantment, before any disposition or event modifications. castType (number): Read-only . The enchantment cast type. Maps to tes3.enchantmentType.* . effects (table[]): Read-only . An array of the effects being enchanted onto the item. This includes the effect object, magnitudeLow / magnitudeHigh values, the area , duration , and range . The attribute and skill values are available as appropriate. item ( tes3item ): Read-only . The item, if any, that is being enchanted. itemData ( tes3itemData ): Read-only . The item data for the enchanted item. mobile ( tes3mobileActor ): Read-only . The mobile actor for who is offering the enchantment service. May not always be available. price (number): The price of the enchantment. This can be modified. reference ( tes3reference ): Read-only . A shortcut to the mobile's reference. May not always be available. soul ( tes3actor ): Read-only . The soul contained in the soul gem. soulGem ( tes3misc ): Read-only . The soul gem being used to make the enchantment. soulGemData ( tes3itemData ): Read-only . The soul gem's associated item data.","title":"calcEnchantmentPrice"},{"location":"events/calcEnchantmentPrice/#calcenchantmentprice","text":"This event is raised when an enchantment price is being determined. --- @param e calcEnchantmentPriceEventData local function calcEnchantmentPriceCallback ( e ) end event . register ( tes3 . event . calcEnchantmentPrice , calcEnchantmentPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcEnchantmentPrice"},{"location":"events/calcEnchantmentPrice/#event-data","text":"basePrice (number): Read-only . The base price of the enchantment, before any disposition or event modifications. castType (number): Read-only . The enchantment cast type. Maps to tes3.enchantmentType.* . effects (table[]): Read-only . An array of the effects being enchanted onto the item. This includes the effect object, magnitudeLow / magnitudeHigh values, the area , duration , and range . The attribute and skill values are available as appropriate. item ( tes3item ): Read-only . The item, if any, that is being enchanted. itemData ( tes3itemData ): Read-only . The item data for the enchanted item. mobile ( tes3mobileActor ): Read-only . The mobile actor for who is offering the enchantment service. May not always be available. price (number): The price of the enchantment. This can be modified. reference ( tes3reference ): Read-only . A shortcut to the mobile's reference. May not always be available. soul ( tes3actor ): Read-only . The soul contained in the soul gem. soulGem ( tes3misc ): Read-only . The soul gem being used to make the enchantment. soulGemData ( tes3itemData ): Read-only . The soul gem's associated item data.","title":"Event Data"},{"location":"events/calcFlySpeed/","text":"calcFlySpeed \u2693\ufe0e One of the movement events, calcFlySpeed is used when calculating movement speeds when levitating or otherwise flying. The movement event flow is described below: Flying: calcFlySpeed -> calcMoveSpeed --- @param e calcFlySpeedEventData local function calcFlySpeedCallback ( e ) end event . register ( tes3 . event . calcFlySpeed , calcFlySpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 5 for this event.","title":"calcFlySpeed"},{"location":"events/calcFlySpeed/#calcflyspeed","text":"One of the movement events, calcFlySpeed is used when calculating movement speeds when levitating or otherwise flying. The movement event flow is described below: Flying: calcFlySpeed -> calcMoveSpeed --- @param e calcFlySpeedEventData local function calcFlySpeedCallback ( e ) end event . register ( tes3 . event . calcFlySpeed , calcFlySpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcFlySpeed"},{"location":"events/calcFlySpeed/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 5 for this event.","title":"Event Data"},{"location":"events/calcHitChance/","text":"calcHitChance \u2693\ufe0e This event is raised when determining the hit chance for an actor. --- @param e calcHitChanceEventData local function calcHitChanceCallback ( e ) end event . register ( tes3 . event . calcHitChance , calcHitChanceCallback ) Tip This event can be filtered based on the attacker.baseObject event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e attacker ( tes3reference ): Read-only . A shortcut to the mobile's reference. attackerMobile ( tes3mobileActor ): Read-only . The mobile who is making the attack. hitChance (number): The hit chance for the actor. This may be adjusted. projectile ( tes3mobileProjectile , nil): Read-only . The projectile, if applicable, that hit the target. target ( tes3reference ): Read-only . A shortcut to the target mobile's reference. May not always be available. targetMobile ( tes3mobileActor ): Read-only . The mobile who is being attacked. May not always be available.","title":"calcHitChance"},{"location":"events/calcHitChance/#calchitchance","text":"This event is raised when determining the hit chance for an actor. --- @param e calcHitChanceEventData local function calcHitChanceCallback ( e ) end event . register ( tes3 . event . calcHitChance , calcHitChanceCallback ) Tip This event can be filtered based on the attacker.baseObject event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcHitChance"},{"location":"events/calcHitChance/#event-data","text":"attacker ( tes3reference ): Read-only . A shortcut to the mobile's reference. attackerMobile ( tes3mobileActor ): Read-only . The mobile who is making the attack. hitChance (number): The hit chance for the actor. This may be adjusted. projectile ( tes3mobileProjectile , nil): Read-only . The projectile, if applicable, that hit the target. target ( tes3reference ): Read-only . A shortcut to the target mobile's reference. May not always be available. targetMobile ( tes3mobileActor ): Read-only . The mobile who is being attacked. May not always be available.","title":"Event Data"},{"location":"events/calcMoveSpeed/","text":"calcMoveSpeed \u2693\ufe0e This event is called when an actor\u2019s movement speed is calculated. The event allows modification of this value, to dehardcode actor movement speeds. Invoked after all other movement speed events are finished. The movement event flow is described below: Walking: calcWalkSpeed -> calcMoveSpeed Running: calcWalkSpeed -> calcRunSpeed -> calcMoveSpeed Swimming: calcWalkSpeed -> calcSwimSpeed -> calcMoveSpeed Swimming (while running): calcWalkSpeed -> calcSwimSpeed -> calcSwimRunSpeed -> calcMoveSpeed Flying: calcFlySpeed -> calcMoveSpeed --- @param e calcMoveSpeedEventData local function calcMoveSpeedCallback ( e ) end event . register ( tes3 . event . calcMoveSpeed , calcMoveSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 0 for this event. Examples \u2693\ufe0e Example: 20% Faster Player Movement local function onCalcMoveSpeed ( e ) if ( e . reference == tes3 . player ) then e . speed = e . speed * 1.2 end end event . register ( tes3 . event . calcMoveSpeed , onCalcMoveSpeed )","title":"calcMoveSpeed"},{"location":"events/calcMoveSpeed/#calcmovespeed","text":"This event is called when an actor\u2019s movement speed is calculated. The event allows modification of this value, to dehardcode actor movement speeds. Invoked after all other movement speed events are finished. The movement event flow is described below: Walking: calcWalkSpeed -> calcMoveSpeed Running: calcWalkSpeed -> calcRunSpeed -> calcMoveSpeed Swimming: calcWalkSpeed -> calcSwimSpeed -> calcMoveSpeed Swimming (while running): calcWalkSpeed -> calcSwimSpeed -> calcSwimRunSpeed -> calcMoveSpeed Flying: calcFlySpeed -> calcMoveSpeed --- @param e calcMoveSpeedEventData local function calcMoveSpeedCallback ( e ) end event . register ( tes3 . event . calcMoveSpeed , calcMoveSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcMoveSpeed"},{"location":"events/calcMoveSpeed/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 0 for this event.","title":"Event Data"},{"location":"events/calcMoveSpeed/#examples","text":"Example: 20% Faster Player Movement local function onCalcMoveSpeed ( e ) if ( e . reference == tes3 . player ) then e . speed = e . speed * 1.2 end end event . register ( tes3 . event . calcMoveSpeed , onCalcMoveSpeed )","title":"Examples"},{"location":"events/calcRepairPrice/","text":"calcRepairPrice \u2693\ufe0e This event is called when determining the price of repairing an item. It can be used to override the repair cost. --- @param e calcRepairPriceEventData local function calcRepairPriceCallback ( e ) end event . register ( tes3 . event . calcRepairPrice , calcRepairPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e basePrice (number): Read-only . The price before adjustment. item ( tes3item ): Read-only . The item to be repaired. itemData ( tes3item ): Read-only . Variable node. The data associated with item. This may be nil. mobile ( tes3mobileActor ): Read-only . The mobile actor of the merchant the player is interacting with. price (number): The adjusted price of repairing item. reference ( tes3reference ): Read-only . mobile\u2019s related reference.","title":"calcRepairPrice"},{"location":"events/calcRepairPrice/#calcrepairprice","text":"This event is called when determining the price of repairing an item. It can be used to override the repair cost. --- @param e calcRepairPriceEventData local function calcRepairPriceCallback ( e ) end event . register ( tes3 . event . calcRepairPrice , calcRepairPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcRepairPrice"},{"location":"events/calcRepairPrice/#event-data","text":"basePrice (number): Read-only . The price before adjustment. item ( tes3item ): Read-only . The item to be repaired. itemData ( tes3item ): Read-only . Variable node. The data associated with item. This may be nil. mobile ( tes3mobileActor ): Read-only . The mobile actor of the merchant the player is interacting with. price (number): The adjusted price of repairing item. reference ( tes3reference ): Read-only . mobile\u2019s related reference.","title":"Event Data"},{"location":"events/calcRestInterrupt/","text":"calcRestInterrupt \u2693\ufe0e This event is called when the player is about to start resting. The hour and count of creatures can be modified, or disabled. Blocking this event blocks any interrupting spawn. --- @param e calcRestInterruptEventData local function calcRestInterruptCallback ( e ) end event . register ( tes3 . event . calcRestInterrupt , calcRestInterruptCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e count (number): The number of creatures interrupting rest. Set to 0 to prevent a spawn. hour (number): The hour of rest remaining that the rest will be interrupted on. resting (boolean): Read-only . If true, the player is attempting to rest, as opposed to wait. waiting (boolean): Read-only . If true, the player is attempting to wait, as opposed to rest.","title":"calcRestInterrupt"},{"location":"events/calcRestInterrupt/#calcrestinterrupt","text":"This event is called when the player is about to start resting. The hour and count of creatures can be modified, or disabled. Blocking this event blocks any interrupting spawn. --- @param e calcRestInterruptEventData local function calcRestInterruptCallback ( e ) end event . register ( tes3 . event . calcRestInterrupt , calcRestInterruptCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcRestInterrupt"},{"location":"events/calcRestInterrupt/#event-data","text":"count (number): The number of creatures interrupting rest. Set to 0 to prevent a spawn. hour (number): The hour of rest remaining that the rest will be interrupted on. resting (boolean): Read-only . If true, the player is attempting to rest, as opposed to wait. waiting (boolean): Read-only . If true, the player is attempting to wait, as opposed to rest.","title":"Event Data"},{"location":"events/calcRunSpeed/","text":"calcRunSpeed \u2693\ufe0e One of the movement events, calcRunSpeed is used when calculating when the player is running, but not swimming or flying. The movement event flow is described below: Running: calcWalkSpeed -> calcRunSpeed -> calcMoveSpeed --- @param e calcRunSpeedEventData local function calcRunSpeedCallback ( e ) end event . register ( tes3 . event . calcRunSpeed , calcRunSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 2 for this event.","title":"calcRunSpeed"},{"location":"events/calcRunSpeed/#calcrunspeed","text":"One of the movement events, calcRunSpeed is used when calculating when the player is running, but not swimming or flying. The movement event flow is described below: Running: calcWalkSpeed -> calcRunSpeed -> calcMoveSpeed --- @param e calcRunSpeedEventData local function calcRunSpeedCallback ( e ) end event . register ( tes3 . event . calcRunSpeed , calcRunSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcRunSpeed"},{"location":"events/calcRunSpeed/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 2 for this event.","title":"Event Data"},{"location":"events/calcSoulValue/","text":"calcSoulValue \u2693\ufe0e This event is raised when determining the value of a soul, unmodified by GMSTs. The value can be modified, or used to provide a soul value to NPCs who would normally not be allowed one. --- @param e calcSoulValueEventData local function calcSoulValueCallback ( e ) end event . register ( tes3 . event . calcSoulValue , calcSoulValueCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e actor ( tes3creature , tes3npc ): Read-only . The actor whose soul is being evaluated. value (number, nil): The value of the actor's soul. This may be nil for NPCs. Examples \u2693\ufe0e Example: This example shows how to assign a value to an NPC's soul. local function onInitialized () tes3 . addSoulGem ({ item = \"misc_dwrv_artifact60\" }) end event . register ( tes3 . event . initialized , onInitialized ) local function onFilterSoulGemTarget ( e ) if ( e . reference . baseObject . id : lower () == \"fargoth\" ) then return e . soulGem . id == \"misc_dwrv_artifact60\" end end event . register ( tes3 . event . filterSoulGemTarget , onFilterSoulGemTarget ) -- calcSoulValue event allows assigning a new soul value to creatures -- If the event was triggered for an NPC, it allows assigning a value -- thus allowing soul-trapping the actor. local function calcSoulValueCallback ( e ) if ( e . actor . id : lower () == \"fargoth\" ) then e . value = 69 mwse . log ( \"Getting Fargoth's value.\" ) return end end event . register ( tes3 . event . calcSoulValue , calcSoulValueCallback )","title":"calcSoulValue"},{"location":"events/calcSoulValue/#calcsoulvalue","text":"This event is raised when determining the value of a soul, unmodified by GMSTs. The value can be modified, or used to provide a soul value to NPCs who would normally not be allowed one. --- @param e calcSoulValueEventData local function calcSoulValueCallback ( e ) end event . register ( tes3 . event . calcSoulValue , calcSoulValueCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcSoulValue"},{"location":"events/calcSoulValue/#event-data","text":"actor ( tes3creature , tes3npc ): Read-only . The actor whose soul is being evaluated. value (number, nil): The value of the actor's soul. This may be nil for NPCs.","title":"Event Data"},{"location":"events/calcSoulValue/#examples","text":"Example: This example shows how to assign a value to an NPC's soul. local function onInitialized () tes3 . addSoulGem ({ item = \"misc_dwrv_artifact60\" }) end event . register ( tes3 . event . initialized , onInitialized ) local function onFilterSoulGemTarget ( e ) if ( e . reference . baseObject . id : lower () == \"fargoth\" ) then return e . soulGem . id == \"misc_dwrv_artifact60\" end end event . register ( tes3 . event . filterSoulGemTarget , onFilterSoulGemTarget ) -- calcSoulValue event allows assigning a new soul value to creatures -- If the event was triggered for an NPC, it allows assigning a value -- thus allowing soul-trapping the actor. local function calcSoulValueCallback ( e ) if ( e . actor . id : lower () == \"fargoth\" ) then e . value = 69 mwse . log ( \"Getting Fargoth's value.\" ) return end end event . register ( tes3 . event . calcSoulValue , calcSoulValueCallback )","title":"Examples"},{"location":"events/calcSpellPrice/","text":"calcSpellPrice \u2693\ufe0e This event is called when determining the cost of purchasing a spell. The price can be modified. --- @param e calcSpellPriceEventData local function calcSpellPriceCallback ( e ) end event . register ( tes3 . event . calcSpellPrice , calcSpellPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e basePrice (number): Read-only . The price before adjustment. mobile ( tes3mobileActor ): Read-only . The mobile actor of the merchant the player is interacting with. price (number): The adjusted price of spell. reference ( tes3reference ): Read-only . mobile\u2019s related reference. spell ( tes3spell ): Read-only . The spell currently being purchased.","title":"calcSpellPrice"},{"location":"events/calcSpellPrice/#calcspellprice","text":"This event is called when determining the cost of purchasing a spell. The price can be modified. --- @param e calcSpellPriceEventData local function calcSpellPriceCallback ( e ) end event . register ( tes3 . event . calcSpellPrice , calcSpellPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcSpellPrice"},{"location":"events/calcSpellPrice/#event-data","text":"basePrice (number): Read-only . The price before adjustment. mobile ( tes3mobileActor ): Read-only . The mobile actor of the merchant the player is interacting with. price (number): The adjusted price of spell. reference ( tes3reference ): Read-only . mobile\u2019s related reference. spell ( tes3spell ): Read-only . The spell currently being purchased.","title":"Event Data"},{"location":"events/calcSpellmakingPrice/","text":"calcSpellmakingPrice \u2693\ufe0e This event is called when determining the cost of making a spell. The price can be modified. --- @param e calcSpellmakingPriceEventData local function calcSpellmakingPriceCallback ( e ) end event . register ( tes3 . event . calcSpellmakingPrice , calcSpellmakingPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor of the spellmaking service npc the player is interacting with. price (number): The price of the spell. reference ( tes3reference ): Read-only . Mobile's related reference.","title":"calcSpellmakingPrice"},{"location":"events/calcSpellmakingPrice/#calcspellmakingprice","text":"This event is called when determining the cost of making a spell. The price can be modified. --- @param e calcSpellmakingPriceEventData local function calcSpellmakingPriceCallback ( e ) end event . register ( tes3 . event . calcSpellmakingPrice , calcSpellmakingPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcSpellmakingPrice"},{"location":"events/calcSpellmakingPrice/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor of the spellmaking service npc the player is interacting with. price (number): The price of the spell. reference ( tes3reference ): Read-only . Mobile's related reference.","title":"Event Data"},{"location":"events/calcSpellmakingSpellPointCost/","text":"calcSpellmakingSpellPointCost \u2693\ufe0e This event is called when determining the spell point cost of making a spell. The spell point cost can be modified. --- @param e calcSpellmakingSpellPointCostEventData local function calcSpellmakingSpellPointCostCallback ( e ) end event . register ( tes3 . event . calcSpellmakingSpellPointCost , calcSpellmakingSpellPointCostCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor of the spellmaking service npc the player is interacting with. reference ( tes3reference ): Read-only . Mobile's related reference. spellPointCost (number): The spell point cost of the spell.","title":"calcSpellmakingSpellPointCost"},{"location":"events/calcSpellmakingSpellPointCost/#calcspellmakingspellpointcost","text":"This event is called when determining the spell point cost of making a spell. The spell point cost can be modified. --- @param e calcSpellmakingSpellPointCostEventData local function calcSpellmakingSpellPointCostCallback ( e ) end event . register ( tes3 . event . calcSpellmakingSpellPointCost , calcSpellmakingSpellPointCostCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcSpellmakingSpellPointCost"},{"location":"events/calcSpellmakingSpellPointCost/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor of the spellmaking service npc the player is interacting with. reference ( tes3reference ): Read-only . Mobile's related reference. spellPointCost (number): The spell point cost of the spell.","title":"Event Data"},{"location":"events/calcSunDamageScalar/","text":"calcSunDamageScalar \u2693\ufe0e calcSunDamageScalar is used when calculating the amount of damage to apply for the Sun Damage magic effect. --- @param e calcSunDamageScalarEventData local function calcSunDamageScalarCallback ( e ) end event . register ( tes3 . event . calcSunDamageScalar , calcSunDamageScalarCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e damage (number): The previously calculated sun damage.","title":"calcSunDamageScalar"},{"location":"events/calcSunDamageScalar/#calcsundamagescalar","text":"calcSunDamageScalar is used when calculating the amount of damage to apply for the Sun Damage magic effect. --- @param e calcSunDamageScalarEventData local function calcSunDamageScalarCallback ( e ) end event . register ( tes3 . event . calcSunDamageScalar , calcSunDamageScalarCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcSunDamageScalar"},{"location":"events/calcSunDamageScalar/#event-data","text":"damage (number): The previously calculated sun damage.","title":"Event Data"},{"location":"events/calcSwimRunSpeed/","text":"calcSwimRunSpeed \u2693\ufe0e One of the movement events, calcSwimRunSpeed is used when calculating the movement speed while in water when running. The movement event flow is described below: Swimming (while running): calcWalkSpeed -> calcSwimSpeed -> calcSwimRunSpeed -> calcMoveSpeed --- @param e calcSwimRunSpeedEventData local function calcSwimRunSpeedCallback ( e ) end event . register ( tes3 . event . calcSwimRunSpeed , calcSwimRunSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 4 for this event.","title":"calcSwimRunSpeed"},{"location":"events/calcSwimRunSpeed/#calcswimrunspeed","text":"One of the movement events, calcSwimRunSpeed is used when calculating the movement speed while in water when running. The movement event flow is described below: Swimming (while running): calcWalkSpeed -> calcSwimSpeed -> calcSwimRunSpeed -> calcMoveSpeed --- @param e calcSwimRunSpeedEventData local function calcSwimRunSpeedCallback ( e ) end event . register ( tes3 . event . calcSwimRunSpeed , calcSwimRunSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcSwimRunSpeed"},{"location":"events/calcSwimRunSpeed/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 4 for this event.","title":"Event Data"},{"location":"events/calcSwimSpeed/","text":"calcSwimSpeed \u2693\ufe0e One of the movement events, calcSwimSpeed is used when calculating the movement speed while in water when running. The movement event flow is described below: Swimming: calcWalkSpeed -> calcSwimSpeed -> calcMoveSpeed Swimming (while running): calcWalkSpeed -> calcSwimSpeed -> calcSwimRunSpeed -> calcMoveSpeed --- @param e calcSwimSpeedEventData local function calcSwimSpeedCallback ( e ) end event . register ( tes3 . event . calcSwimSpeed , calcSwimSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 3 for this event.","title":"calcSwimSpeed"},{"location":"events/calcSwimSpeed/#calcswimspeed","text":"One of the movement events, calcSwimSpeed is used when calculating the movement speed while in water when running. The movement event flow is described below: Swimming: calcWalkSpeed -> calcSwimSpeed -> calcMoveSpeed Swimming (while running): calcWalkSpeed -> calcSwimSpeed -> calcSwimRunSpeed -> calcMoveSpeed --- @param e calcSwimSpeedEventData local function calcSwimSpeedCallback ( e ) end event . register ( tes3 . event . calcSwimSpeed , calcSwimSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcSwimSpeed"},{"location":"events/calcSwimSpeed/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 3 for this event.","title":"Event Data"},{"location":"events/calcTrainingPrice/","text":"calcTrainingPrice \u2693\ufe0e This event is called when determining the cost of training, and can be used to modify the given price. --- @param e calcTrainingPriceEventData local function calcTrainingPriceCallback ( e ) end event . register ( tes3 . event . calcTrainingPrice , calcTrainingPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e basePrice (number): Read-only . The price before adjustment. mobile ( tes3mobileActor ): Read-only . The mobile actor of the trainer the player is interacting with. price (number): The adjusted price of the training. reference ( tes3reference ): Read-only . mobile\u2019s related reference. skill ( tes3statisticSkill ): Read-only . The ID of the skill to be trained. skillId (number): Read-only . The ID of the skill to be trained.","title":"calcTrainingPrice"},{"location":"events/calcTrainingPrice/#calctrainingprice","text":"This event is called when determining the cost of training, and can be used to modify the given price. --- @param e calcTrainingPriceEventData local function calcTrainingPriceCallback ( e ) end event . register ( tes3 . event . calcTrainingPrice , calcTrainingPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcTrainingPrice"},{"location":"events/calcTrainingPrice/#event-data","text":"basePrice (number): Read-only . The price before adjustment. mobile ( tes3mobileActor ): Read-only . The mobile actor of the trainer the player is interacting with. price (number): The adjusted price of the training. reference ( tes3reference ): Read-only . mobile\u2019s related reference. skill ( tes3statisticSkill ): Read-only . The ID of the skill to be trained. skillId (number): Read-only . The ID of the skill to be trained.","title":"Event Data"},{"location":"events/calcTravelPrice/","text":"calcTravelPrice \u2693\ufe0e This event is called when determining the price of traveling, and can be used to modify the given price. --- @param e calcTravelPriceEventData local function calcTravelPriceCallback ( e ) end event . register ( tes3 . event . calcTravelPrice , calcTravelPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e basePrice (number): Read-only . The price before adjustment. companions ( tes3mobileActor [], nil): Read-only . Companions that will travel with the player, or nil if no companions are present. destination ( tes3reference ): Read-only . The travel marker that marks the destination. mobile ( tes3mobileActor ): Read-only . The mobile actor of the merchant the player is interacting with. price (number): The adjusted price of travelling. reference ( tes3reference ): Read-only . The mobile\u2019s related reference.","title":"calcTravelPrice"},{"location":"events/calcTravelPrice/#calctravelprice","text":"This event is called when determining the price of traveling, and can be used to modify the given price. --- @param e calcTravelPriceEventData local function calcTravelPriceCallback ( e ) end event . register ( tes3 . event . calcTravelPrice , calcTravelPriceCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcTravelPrice"},{"location":"events/calcTravelPrice/#event-data","text":"basePrice (number): Read-only . The price before adjustment. companions ( tes3mobileActor [], nil): Read-only . Companions that will travel with the player, or nil if no companions are present. destination ( tes3reference ): Read-only . The travel marker that marks the destination. mobile ( tes3mobileActor ): Read-only . The mobile actor of the merchant the player is interacting with. price (number): The adjusted price of travelling. reference ( tes3reference ): Read-only . The mobile\u2019s related reference.","title":"Event Data"},{"location":"events/calcWalkSpeed/","text":"calcWalkSpeed \u2693\ufe0e One of the movement events, calcWalkSpeed is used when calculating the base walk speed. Nearly every other movement speed event starts with this, with the exception of calcFlySpeed . The movement event flow is described below: Walking: calcWalkSpeed -> calcMoveSpeed Running: calcWalkSpeed -> calcRunSpeed -> calcMoveSpeed Swimming: calcWalkSpeed -> calcSwimSpeed -> calcMoveSpeed Swimming (while running): calcWalkSpeed -> calcSwimSpeed -> calcSwimRunSpeed -> calcMoveSpeed --- @param e calcWalkSpeedEventData local function calcWalkSpeedCallback ( e ) end event . register ( tes3 . event . calcWalkSpeed , calcWalkSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 1 for this event.","title":"calcWalkSpeed"},{"location":"events/calcWalkSpeed/#calcwalkspeed","text":"One of the movement events, calcWalkSpeed is used when calculating the base walk speed. Nearly every other movement speed event starts with this, with the exception of calcFlySpeed . The movement event flow is described below: Walking: calcWalkSpeed -> calcMoveSpeed Running: calcWalkSpeed -> calcRunSpeed -> calcMoveSpeed Swimming: calcWalkSpeed -> calcSwimSpeed -> calcMoveSpeed Swimming (while running): calcWalkSpeed -> calcSwimSpeed -> calcSwimRunSpeed -> calcMoveSpeed --- @param e calcWalkSpeedEventData local function calcWalkSpeedCallback ( e ) end event . register ( tes3 . event . calcWalkSpeed , calcWalkSpeedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"calcWalkSpeed"},{"location":"events/calcWalkSpeed/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor whose speed is being calculated. reference ( tes3reference ): Read-only . mobile\u2019s related reference. speed (number): The previous speed calculated, starting with the base engine values. type (number): Read-only . The type of movement that was calculated. This is always 1 for this event.","title":"Event Data"},{"location":"events/cellActivated/","text":"cellActivated \u2693\ufe0e This event is triggered when a cell is activated. --- @param e cellActivatedEventData local function cellActivatedCallback ( e ) end event . register ( tes3 . event . cellActivated , cellActivatedCallback ) Tip This event can be filtered based on the cell event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e cell ( tes3cell ): Read-only . The cell which was activated.","title":"cellActivated"},{"location":"events/cellActivated/#cellactivated","text":"This event is triggered when a cell is activated. --- @param e cellActivatedEventData local function cellActivatedCallback ( e ) end event . register ( tes3 . event . cellActivated , cellActivatedCallback ) Tip This event can be filtered based on the cell event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"cellActivated"},{"location":"events/cellActivated/#event-data","text":"cell ( tes3cell ): Read-only . The cell which was activated.","title":"Event Data"},{"location":"events/cellChanged/","text":"cellChanged \u2693\ufe0e The cellChanged event is triggered when the player changes cells. This might occur from going through a door, using intervention or recall spells, or from scripted repositioning. --- @param e cellChangedEventData local function cellChangedCallback ( e ) end event . register ( tes3 . event . cellChanged , cellChangedCallback ) Tip This event can be filtered based on the cell event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e cell ( tes3cell ): Read-only . The new cell that the player has entered. previousCell ( tes3cell ): Read-only . The previous cell that the player came from. This will be nil when loading a game.","title":"cellChanged"},{"location":"events/cellChanged/#cellchanged","text":"The cellChanged event is triggered when the player changes cells. This might occur from going through a door, using intervention or recall spells, or from scripted repositioning. --- @param e cellChangedEventData local function cellChangedCallback ( e ) end event . register ( tes3 . event . cellChanged , cellChangedCallback ) Tip This event can be filtered based on the cell event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"cellChanged"},{"location":"events/cellChanged/#event-data","text":"cell ( tes3cell ): Read-only . The new cell that the player has entered. previousCell ( tes3cell ): Read-only . The previous cell that the player came from. This will be nil when loading a game.","title":"Event Data"},{"location":"events/cellDeactivated/","text":"cellDeactivated \u2693\ufe0e This event is triggered when a cell is deactivated. --- @param e cellDeactivatedEventData local function cellDeactivatedCallback ( e ) end event . register ( tes3 . event . cellDeactivated , cellDeactivatedCallback ) Tip This event can be filtered based on the cell event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e cell ( tes3cell ): Read-only . The cell which was deactivated.","title":"cellDeactivated"},{"location":"events/cellDeactivated/#celldeactivated","text":"This event is triggered when a cell is deactivated. --- @param e cellDeactivatedEventData local function cellDeactivatedCallback ( e ) end event . register ( tes3 . event . cellDeactivated , cellDeactivatedCallback ) Tip This event can be filtered based on the cell event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"cellDeactivated"},{"location":"events/cellDeactivated/#event-data","text":"cell ( tes3cell ): Read-only . The cell which was deactivated.","title":"Event Data"},{"location":"events/charGenFinished/","text":"charGenFinished \u2693\ufe0e This event is triggered when the character generation process at the start of the game has been finished. In an unmodded version of Morrowind, this event would trigger after leaving the 'Census and Excise Office' in 'Seyda Neen'. --- @param e charGenFinishedEventData local function charGenFinishedCallback ( e ) end event . register ( tes3 . event . charGenFinished , charGenFinishedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"charGenFinished"},{"location":"events/charGenFinished/#chargenfinished","text":"This event is triggered when the character generation process at the start of the game has been finished. In an unmodded version of Morrowind, this event would trigger after leaving the 'Census and Excise Office' in 'Seyda Neen'. --- @param e charGenFinishedEventData local function charGenFinishedCallback ( e ) end event . register ( tes3 . event . charGenFinished , charGenFinishedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"charGenFinished"},{"location":"events/collideWater/","text":"collideWater \u2693\ufe0e This event is triggered when a mobile object collides with water and all the frames during the collision. --- @param e collideWaterEventData local function collideWaterCallback ( e ) end event . register ( tes3 . event . collideWater , collideWaterCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e inWater (boolean): Read-only . mobile ( tes3mobileObject ): Read-only . Mobile object which collided. reference ( tes3mobileObject ): Read-only . mobile 's reference.","title":"collideWater"},{"location":"events/collideWater/#collidewater","text":"This event is triggered when a mobile object collides with water and all the frames during the collision. --- @param e collideWaterEventData local function collideWaterCallback ( e ) end event . register ( tes3 . event . collideWater , collideWaterCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"collideWater"},{"location":"events/collideWater/#event-data","text":"inWater (boolean): Read-only . mobile ( tes3mobileObject ): Read-only . Mobile object which collided. reference ( tes3mobileObject ): Read-only . mobile 's reference.","title":"Event Data"},{"location":"events/collision/","text":"collision \u2693\ufe0e This event is triggered on a collision and all the frames during the collision. --- @param e collisionEventData local function collisionCallback ( e ) end event . register ( tes3 . event . collision , collisionCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileObject ): Read-only . Mobile object which collided with its target reference. reference ( tes3reference ): Read-only . Mobile object's associated reference. target ( tes3reference ): Read-only . Reference which mobile object has collided with. Examples \u2693\ufe0e Example: Shows a message when the player bumps into the door. local function onCollision ( e ) local target = e . target if not target then return end if target . object . objectType == tes3 . objectType . door then tes3 . messageBox ( \"Ouch! \\n Maybe I should open it first?\" ) end end event . register ( tes3 . event . collision , onCollision , { filter = tes3 . player })","title":"Collision"},{"location":"events/collision/#collision","text":"This event is triggered on a collision and all the frames during the collision. --- @param e collisionEventData local function collisionCallback ( e ) end event . register ( tes3 . event . collision , collisionCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"collision"},{"location":"events/collision/#event-data","text":"mobile ( tes3mobileObject ): Read-only . Mobile object which collided with its target reference. reference ( tes3reference ): Read-only . Mobile object's associated reference. target ( tes3reference ): Read-only . Reference which mobile object has collided with.","title":"Event Data"},{"location":"events/collision/#examples","text":"Example: Shows a message when the player bumps into the door. local function onCollision ( e ) local target = e . target if not target then return end if target . object . objectType == tes3 . objectType . door then tes3 . messageBox ( \"Ouch! \\n Maybe I should open it first?\" ) end end event . register ( tes3 . event . collision , onCollision , { filter = tes3 . player })","title":"Examples"},{"location":"events/combatStart/","text":"combatStart \u2693\ufe0e The combatStart event occurs when combat is about to begin between two actors. This event allows scripts to prevent combat from starting. --- @param e combatStartEventData local function combatStartCallback ( e ) end event . register ( tes3 . event . combatStart , combatStartCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e actor ( tes3mobileActor ): Read-only . The mobile actor who is entering combat. target ( tes3mobileActor ): Read-only . The mobile actor who combat is being triggered against.","title":"combatStart"},{"location":"events/combatStart/#combatstart","text":"The combatStart event occurs when combat is about to begin between two actors. This event allows scripts to prevent combat from starting. --- @param e combatStartEventData local function combatStartCallback ( e ) end event . register ( tes3 . event . combatStart , combatStartCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"combatStart"},{"location":"events/combatStart/#event-data","text":"actor ( tes3mobileActor ): Read-only . The mobile actor who is entering combat. target ( tes3mobileActor ): Read-only . The mobile actor who combat is being triggered against.","title":"Event Data"},{"location":"events/combatStarted/","text":"combatStarted \u2693\ufe0e The combatStarted event occurs after combat has began between two actors. This event is preceded by the combatStart event. --- @param e combatStartedEventData local function combatStartedCallback ( e ) end event . register ( tes3 . event . combatStarted , combatStartedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e actor ( tes3mobileActor ): Read-only . The mobile actor who has entered combat. target ( tes3mobileActor ): Read-only . The mobile actor who combat has been triggered against.","title":"combatStarted"},{"location":"events/combatStarted/#combatstarted","text":"The combatStarted event occurs after combat has began between two actors. This event is preceded by the combatStart event. --- @param e combatStartedEventData local function combatStartedCallback ( e ) end event . register ( tes3 . event . combatStarted , combatStartedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"combatStarted"},{"location":"events/combatStarted/#event-data","text":"actor ( tes3mobileActor ): Read-only . The mobile actor who has entered combat. target ( tes3mobileActor ): Read-only . The mobile actor who combat has been triggered against.","title":"Event Data"},{"location":"events/combatStop/","text":"combatStop \u2693\ufe0e The combatStop event occurs when an actor is about to leave combat. This event allows scripts to prevent combat from stopping. --- @param e combatStopEventData local function combatStopCallback ( e ) end event . register ( tes3 . event . combatStop , combatStopCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e actor ( tes3mobileActor ): Read-only . The mobile actor who is exiting combat.","title":"combatStop"},{"location":"events/combatStop/#combatstop","text":"The combatStop event occurs when an actor is about to leave combat. This event allows scripts to prevent combat from stopping. --- @param e combatStopEventData local function combatStopCallback ( e ) end event . register ( tes3 . event . combatStop , combatStopCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"combatStop"},{"location":"events/combatStop/#event-data","text":"actor ( tes3mobileActor ): Read-only . The mobile actor who is exiting combat.","title":"Event Data"},{"location":"events/combatStopped/","text":"combatStopped \u2693\ufe0e The combatStopped event occurs after an actor has left combat. This event is preceded by the combatStop event. --- @param e combatStoppedEventData local function combatStoppedCallback ( e ) end event . register ( tes3 . event . combatStopped , combatStoppedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e actor ( tes3mobileActor ): Read-only . The mobile actor who has left combat.","title":"combatStopped"},{"location":"events/combatStopped/#combatstopped","text":"The combatStopped event occurs after an actor has left combat. This event is preceded by the combatStop event. --- @param e combatStoppedEventData local function combatStoppedCallback ( e ) end event . register ( tes3 . event . combatStopped , combatStoppedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"combatStopped"},{"location":"events/combatStopped/#event-data","text":"actor ( tes3mobileActor ): Read-only . The mobile actor who has left combat.","title":"Event Data"},{"location":"events/consoleReferenceChanged/","text":"consoleReferenceChanged \u2693\ufe0e This event is invoked when the player selects a new reference with the console, or unselects a reference. --- @param e consoleReferenceChangedEventData local function consoleReferenceChangedCallback ( e ) end event . register ( tes3 . event . consoleReferenceChanged , consoleReferenceChangedCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e reference ( tes3reference , nil): Read-only . The newly selected reference, or nil if nothing is now selected.","title":"consoleReferenceChanged"},{"location":"events/consoleReferenceChanged/#consolereferencechanged","text":"This event is invoked when the player selects a new reference with the console, or unselects a reference. --- @param e consoleReferenceChangedEventData local function consoleReferenceChangedCallback ( e ) end event . register ( tes3 . event . consoleReferenceChanged , consoleReferenceChangedCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"consoleReferenceChanged"},{"location":"events/consoleReferenceChanged/#event-data","text":"reference ( tes3reference , nil): Read-only . The newly selected reference, or nil if nothing is now selected.","title":"Event Data"},{"location":"events/containerClosed/","text":"containerClosed \u2693\ufe0e This event is raised when a container is closed. --- @param e containerClosedEventData local function containerClosedCallback ( e ) end event . register ( tes3 . event . containerClosed , containerClosedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e reference ( tes3reference ): Read-only . The reference of the container that was closed.","title":"containerClosed"},{"location":"events/containerClosed/#containerclosed","text":"This event is raised when a container is closed. --- @param e containerClosedEventData local function containerClosedCallback ( e ) end event . register ( tes3 . event . containerClosed , containerClosedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"containerClosed"},{"location":"events/containerClosed/#event-data","text":"reference ( tes3reference ): Read-only . The reference of the container that was closed.","title":"Event Data"},{"location":"events/convertReferenceToItem/","text":"convertReferenceToItem \u2693\ufe0e This event is raised when an in-world tes3reference for an item is about to be converted to fit into a tes3itemStack . Note that reference.itemData.owner is always nil, as the game clears it earlier when evaluating theft mechanics. --- @param e convertReferenceToItemEventData local function convertReferenceToItemCallback ( e ) end event . register ( tes3 . event . convertReferenceToItem , convertReferenceToItemCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e reference ( tes3reference ): Read-only . The reference about to be converted.","title":"convertReferenceToItem"},{"location":"events/convertReferenceToItem/#convertreferencetoitem","text":"This event is raised when an in-world tes3reference for an item is about to be converted to fit into a tes3itemStack . Note that reference.itemData.owner is always nil, as the game clears it earlier when evaluating theft mechanics. --- @param e convertReferenceToItemEventData local function convertReferenceToItemCallback ( e ) end event . register ( tes3 . event . convertReferenceToItem , convertReferenceToItemCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"convertReferenceToItem"},{"location":"events/convertReferenceToItem/#event-data","text":"reference ( tes3reference ): Read-only . The reference about to be converted.","title":"Event Data"},{"location":"events/crimeWitnessed/","text":"crimeWitnessed \u2693\ufe0e This event fires when a crime is witnessed by an actor. --- @param e crimeWitnessedEventData local function crimeWitnessedCallback ( e ) end event . register ( tes3 . event . crimeWitnessed , crimeWitnessedCallback ) Tip This event can be filtered based on the type event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e position ( tes3vector3 ): Read-only . The position that the crime ocurred at. realTimestamp (number): Read-only . The timestamp that the crime ocurred at. type (string): Read-only . The type of crime that was committed. The type can be \"attack\", \"killing\", \"stealing\", \"pickpocket\", \"theft\", \"trespass\", and \"werewolf\". Crime \"theft\" is raised when picking up owned items. Crime \"trespass\" is raised when lockpicking, probing or sleeping in owned beds. value (number): Read-only . The bounty value of the crime. victim ( tes3actor , tes3faction ): Read-only . The victim of the crime, as a general actor base object or faction. victimFaction ( tes3faction ): Read-only . The faction that the crime was against, assuming the victim is, or is in, one. victimMobile ( tes3mobileActor ): Read-only . The mobile of the victim, if applicable, giving access to the unique victim. witness ( tes3reference ): Read-only . The reference that witnessed the crime. witnessMobile ( tes3mobileActor ): Read-only . The mobile actor of the reference that witnessed the crime.","title":"crimeWitnessed"},{"location":"events/crimeWitnessed/#crimewitnessed","text":"This event fires when a crime is witnessed by an actor. --- @param e crimeWitnessedEventData local function crimeWitnessedCallback ( e ) end event . register ( tes3 . event . crimeWitnessed , crimeWitnessedCallback ) Tip This event can be filtered based on the type event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"crimeWitnessed"},{"location":"events/crimeWitnessed/#event-data","text":"position ( tes3vector3 ): Read-only . The position that the crime ocurred at. realTimestamp (number): Read-only . The timestamp that the crime ocurred at. type (string): Read-only . The type of crime that was committed. The type can be \"attack\", \"killing\", \"stealing\", \"pickpocket\", \"theft\", \"trespass\", and \"werewolf\". Crime \"theft\" is raised when picking up owned items. Crime \"trespass\" is raised when lockpicking, probing or sleeping in owned beds. value (number): Read-only . The bounty value of the crime. victim ( tes3actor , tes3faction ): Read-only . The victim of the crime, as a general actor base object or faction. victimFaction ( tes3faction ): Read-only . The faction that the crime was against, assuming the victim is, or is in, one. victimMobile ( tes3mobileActor ): Read-only . The mobile of the victim, if applicable, giving access to the unique victim. witness ( tes3reference ): Read-only . The reference that witnessed the crime. witnessMobile ( tes3mobileActor ): Read-only . The mobile actor of the reference that witnessed the crime.","title":"Event Data"},{"location":"events/damage/","text":"damage \u2693\ufe0e The damage event triggers before an actor is damaged. The damage value can be modified, or the damage can be prevented completely by blocking the event. --- @param e damageEventData local function damageCallback ( e ) end event . register ( tes3 . event . damage , damageCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e activeMagicEffect ( tes3magicEffect ): Read-only . Magic effect which will cause the damage. Can be nil . attacker ( tes3mobileActor ): Read-only . The mobile actor dealing the damage. Can be nil . attackerReference ( tes3reference ): Read-only . The attacker mobile's associated reference. Can be nil . damage (number): The amount of damage done. magicEffectInstance ( tes3magicEffectInstance ): Read-only . An instance of the magic effect in the spell that will cause the damage. Can be nil . magicSourceInstance ( tes3magicSourceInstance ): Read-only . A tes3magicSourceInstance object of a spell that will cause the damage. Can be nil . mobile ( tes3mobileActor ): Read-only . The mobile actor that is taking damage. projectile ( tes3mobileProjectile ): Read-only . Projectile that will deal the damage. Can be nil . reference ( tes3reference ): Read-only . The mobile\u2019s associated reference. source (string): Read-only . The origin of damage. These damage sources are present as tes3.damageSource constants. See the example. Damage with tes3.damageSource.shield source comes from magic shields. Other sources are self-explanatory. Examples \u2693\ufe0e Example: Change fall damage -- Change fall damage if player is a Bosmer local function onDamage ( e ) -- We only care if the player took some damage if e . reference ~= tes3 . player then return end -- Check if the damage was caused by a fall if e . source ~= tes3 . damageSource . fall then return end -- Check weather the player is a Bosmer if e . reference . object . race . id : lower () == \"bosmer\" then -- This is the same as tes3.player.object.race.id:lower() == \"bosmer\" -- Taunt the player tes3 . messageBox ( \"Ha ha ha, you broke your leg Bosmer\" ) -- Double the damage. He is Fargoth's cousin after all e . damage = e . damage * 2 end end event . register ( tes3 . event . damage , onDamage )","title":"Damage"},{"location":"events/damage/#damage","text":"The damage event triggers before an actor is damaged. The damage value can be modified, or the damage can be prevented completely by blocking the event. --- @param e damageEventData local function damageCallback ( e ) end event . register ( tes3 . event . damage , damageCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"damage"},{"location":"events/damage/#event-data","text":"activeMagicEffect ( tes3magicEffect ): Read-only . Magic effect which will cause the damage. Can be nil . attacker ( tes3mobileActor ): Read-only . The mobile actor dealing the damage. Can be nil . attackerReference ( tes3reference ): Read-only . The attacker mobile's associated reference. Can be nil . damage (number): The amount of damage done. magicEffectInstance ( tes3magicEffectInstance ): Read-only . An instance of the magic effect in the spell that will cause the damage. Can be nil . magicSourceInstance ( tes3magicSourceInstance ): Read-only . A tes3magicSourceInstance object of a spell that will cause the damage. Can be nil . mobile ( tes3mobileActor ): Read-only . The mobile actor that is taking damage. projectile ( tes3mobileProjectile ): Read-only . Projectile that will deal the damage. Can be nil . reference ( tes3reference ): Read-only . The mobile\u2019s associated reference. source (string): Read-only . The origin of damage. These damage sources are present as tes3.damageSource constants. See the example. Damage with tes3.damageSource.shield source comes from magic shields. Other sources are self-explanatory.","title":"Event Data"},{"location":"events/damage/#examples","text":"Example: Change fall damage -- Change fall damage if player is a Bosmer local function onDamage ( e ) -- We only care if the player took some damage if e . reference ~= tes3 . player then return end -- Check if the damage was caused by a fall if e . source ~= tes3 . damageSource . fall then return end -- Check weather the player is a Bosmer if e . reference . object . race . id : lower () == \"bosmer\" then -- This is the same as tes3.player.object.race.id:lower() == \"bosmer\" -- Taunt the player tes3 . messageBox ( \"Ha ha ha, you broke your leg Bosmer\" ) -- Double the damage. He is Fargoth's cousin after all e . damage = e . damage * 2 end end event . register ( tes3 . event . damage , onDamage )","title":"Examples"},{"location":"events/damageHandToHand/","text":"damageHandToHand \u2693\ufe0e The damageHandToHand event triggers before an actor takes fatigue damage from hand-to-hand combat. It does not trigger on health damage, but the damage event will. The fatigueDamage value can be modified, or can be prevented completely by blocking the event. The player as attacker will gain hand-to-hand experience only if fatigueDamage is greater than zero. --- @param e damageHandToHandEventData local function damageHandToHandCallback ( e ) end event . register ( tes3 . event . damageHandToHand , damageHandToHandCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e attacker ( tes3mobileActor ): Read-only . The mobile actor dealing the damage. Can be nil. attackerReference ( tes3reference ): Read-only . The attacker mobile's associated reference. Can be nil. fatigueDamage (number): The amount of fatigue damage done. mobile ( tes3mobileActor ): Read-only . The mobile actor that is taking fatigue damage. reference ( tes3reference ): Read-only . The mobile\u2019s associated reference.","title":"damageHandToHand"},{"location":"events/damageHandToHand/#damagehandtohand","text":"The damageHandToHand event triggers before an actor takes fatigue damage from hand-to-hand combat. It does not trigger on health damage, but the damage event will. The fatigueDamage value can be modified, or can be prevented completely by blocking the event. The player as attacker will gain hand-to-hand experience only if fatigueDamage is greater than zero. --- @param e damageHandToHandEventData local function damageHandToHandCallback ( e ) end event . register ( tes3 . event . damageHandToHand , damageHandToHandCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"damageHandToHand"},{"location":"events/damageHandToHand/#event-data","text":"attacker ( tes3mobileActor ): Read-only . The mobile actor dealing the damage. Can be nil. attackerReference ( tes3reference ): Read-only . The attacker mobile's associated reference. Can be nil. fatigueDamage (number): The amount of fatigue damage done. mobile ( tes3mobileActor ): Read-only . The mobile actor that is taking fatigue damage. reference ( tes3reference ): Read-only . The mobile\u2019s associated reference.","title":"Event Data"},{"location":"events/damaged/","text":"damaged \u2693\ufe0e The damaged event triggers after an actor has been damaged. --- @param e damagedEventData local function damagedCallback ( e ) end event . register ( tes3 . event . damaged , damagedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e activeMagicEffect ( tes3magicEffect ): Read-only . Magic effect which caused damage. Can be nil . attacker ( tes3mobileActor ): Read-only . The mobile actor dealing the damage. Can be nil . attackerReference ( tes3reference ): Read-only . The attacker mobile's associated reference. Can be nil . damage (number): Read-only . The amount of damage done. killingBlow (boolean): Read-only . If true, the damage killed the target. magicEffectInstance ( tes3magicEffectInstance ): Read-only . An instance of the magic effect in the spell that caused damage. Can be nil . magicSourceInstance ( tes3magicSourceInstance ): Read-only . A tes3magicSourceInstance object of a spell that caused damage. Can be nil . mobile ( tes3mobileActor ): Read-only . The mobile actor that took damage. projectile ( tes3mobileProjectile ): Read-only . Projectile that dealt the damage. Can be nil . reference ( tes3reference ): Read-only . The mobile\u2019s associated reference. source (string): Read-only . The origin of damage. These damage sources are present as tes3.damageSource constants. See the example. Damage with tes3.damageSource.shield source comes from magic shields. Other sources are self-explanatory. Examples \u2693\ufe0e Example: Notify the player that their arrow/bolt killed their opponent -- Print a message if player's arrow killed its target local function onDamaged ( e ) -- We only care if the player did the damage if e . attackerReference ~= tes3 . player then return end -- Check if the damage was caused by a projectile, but not by a spell, so it must be an arrow or a bolt if e . projectile ~= nil and e . magicSourceInstance == nil then -- Did the damage kill the target? if e . killingBlow == true then tes3 . messageBox ( \"Your arrow felled its target!\" ) end end end event . register ( tes3 . event . damaged , onDamaged ) Example: Detect that the player died from drowning local function onDamaged ( e ) -- We only care if the player recieved the damage if e . reference ~= tes3 . player then return end -- Does the damage come from drowining? if e . source ~= tes3 . damageSource . suffocation then return end -- Is the player in Mudan Grotto? if tes3 . mobilePlayer . cell . id : lower () == \"mudan grotto\" then -- Did the damage kill the player? if e . killingBlow == true then tes3 . messageBox ( \"You died diving for treasure!\" ) end end end event . register ( tes3 . event . damaged , onDamaged )","title":"Damaged"},{"location":"events/damaged/#damaged","text":"The damaged event triggers after an actor has been damaged. --- @param e damagedEventData local function damagedCallback ( e ) end event . register ( tes3 . event . damaged , damagedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"damaged"},{"location":"events/damaged/#event-data","text":"activeMagicEffect ( tes3magicEffect ): Read-only . Magic effect which caused damage. Can be nil . attacker ( tes3mobileActor ): Read-only . The mobile actor dealing the damage. Can be nil . attackerReference ( tes3reference ): Read-only . The attacker mobile's associated reference. Can be nil . damage (number): Read-only . The amount of damage done. killingBlow (boolean): Read-only . If true, the damage killed the target. magicEffectInstance ( tes3magicEffectInstance ): Read-only . An instance of the magic effect in the spell that caused damage. Can be nil . magicSourceInstance ( tes3magicSourceInstance ): Read-only . A tes3magicSourceInstance object of a spell that caused damage. Can be nil . mobile ( tes3mobileActor ): Read-only . The mobile actor that took damage. projectile ( tes3mobileProjectile ): Read-only . Projectile that dealt the damage. Can be nil . reference ( tes3reference ): Read-only . The mobile\u2019s associated reference. source (string): Read-only . The origin of damage. These damage sources are present as tes3.damageSource constants. See the example. Damage with tes3.damageSource.shield source comes from magic shields. Other sources are self-explanatory.","title":"Event Data"},{"location":"events/damaged/#examples","text":"Example: Notify the player that their arrow/bolt killed their opponent -- Print a message if player's arrow killed its target local function onDamaged ( e ) -- We only care if the player did the damage if e . attackerReference ~= tes3 . player then return end -- Check if the damage was caused by a projectile, but not by a spell, so it must be an arrow or a bolt if e . projectile ~= nil and e . magicSourceInstance == nil then -- Did the damage kill the target? if e . killingBlow == true then tes3 . messageBox ( \"Your arrow felled its target!\" ) end end end event . register ( tes3 . event . damaged , onDamaged ) Example: Detect that the player died from drowning local function onDamaged ( e ) -- We only care if the player recieved the damage if e . reference ~= tes3 . player then return end -- Does the damage come from drowining? if e . source ~= tes3 . damageSource . suffocation then return end -- Is the player in Mudan Grotto? if tes3 . mobilePlayer . cell . id : lower () == \"mudan grotto\" then -- Did the damage kill the player? if e . killingBlow == true then tes3 . messageBox ( \"You died diving for treasure!\" ) end end end event . register ( tes3 . event . damaged , onDamaged )","title":"Examples"},{"location":"events/damagedHandToHand/","text":"damagedHandToHand \u2693\ufe0e The damagedHandToHand event triggers after an actor takes fatigue damage from hand-to-hand combat. It does not trigger on health damage, but the damaged event will. --- @param e damagedHandToHandEventData local function damagedHandToHandCallback ( e ) end event . register ( tes3 . event . damagedHandToHand , damagedHandToHandCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e attacker ( tes3mobileActor ): Read-only . The mobile actor dealing the damage. Can be nil. attackerReference ( tes3reference ): Read-only . The attacker mobile's associated reference. Can be nil. fatigueDamage (number): Read-only . The amount of fatigue damage done. mobile ( tes3mobileActor ): Read-only . The mobile actor that took fatigue damage. reference ( tes3reference ): Read-only . The mobile\u2019s associated reference.","title":"damagedHandToHand"},{"location":"events/damagedHandToHand/#damagedhandtohand","text":"The damagedHandToHand event triggers after an actor takes fatigue damage from hand-to-hand combat. It does not trigger on health damage, but the damaged event will. --- @param e damagedHandToHandEventData local function damagedHandToHandCallback ( e ) end event . register ( tes3 . event . damagedHandToHand , damagedHandToHandCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"damagedHandToHand"},{"location":"events/damagedHandToHand/#event-data","text":"attacker ( tes3mobileActor ): Read-only . The mobile actor dealing the damage. Can be nil. attackerReference ( tes3reference ): Read-only . The attacker mobile's associated reference. Can be nil. fatigueDamage (number): Read-only . The amount of fatigue damage done. mobile ( tes3mobileActor ): Read-only . The mobile actor that took fatigue damage. reference ( tes3reference ): Read-only . The mobile\u2019s associated reference.","title":"Event Data"},{"location":"events/death/","text":"death \u2693\ufe0e This event triggers when an actor dies. --- @param e deathEventData local function deathCallback ( e ) end event . register ( tes3 . event . death , deathCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor that has died. reference ( tes3reference ): Read-only . mobile\u2019s associated reference.","title":"Death"},{"location":"events/death/#death","text":"This event triggers when an actor dies. --- @param e deathEventData local function deathCallback ( e ) end event . register ( tes3 . event . death , deathCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"death"},{"location":"events/death/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor that has died. reference ( tes3reference ): Read-only . mobile\u2019s associated reference.","title":"Event Data"},{"location":"events/detectSneak/","text":"detectSneak \u2693\ufe0e This event is invoked whenever an actor is checking if they can detect another actor sneaking. --- @param e detectSneakEventData local function detectSneakCallback ( e ) end event . register ( tes3 . event . detectSneak , detectSneakCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e detector ( tes3mobileActor ): Read-only . The mobile actor that is doing the detecting. isDetected (boolean): The previous detection calculated, starting with the base engine result. target ( tes3mobileActor ): Read-only . The mobile actor that is possibly being detected.","title":"detectSneak"},{"location":"events/detectSneak/#detectsneak","text":"This event is invoked whenever an actor is checking if they can detect another actor sneaking. --- @param e detectSneakEventData local function detectSneakCallback ( e ) end event . register ( tes3 . event . detectSneak , detectSneakCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"detectSneak"},{"location":"events/detectSneak/#event-data","text":"detector ( tes3mobileActor ): Read-only . The mobile actor that is doing the detecting. isDetected (boolean): The previous detection calculated, starting with the base engine result. target ( tes3mobileActor ): Read-only . The mobile actor that is possibly being detected.","title":"Event Data"},{"location":"events/determineAction/","text":"determineAction \u2693\ufe0e This event fires when an actor determines an action in a combat session. --- @param e determineActionEventData local function determineActionCallback ( e ) end event . register ( tes3 . event . determineAction , determineActionCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e session ( tes3combatSession ): Read-only . The combat session the action is being determined for.","title":"determineAction"},{"location":"events/determineAction/#determineaction","text":"This event fires when an actor determines an action in a combat session. --- @param e determineActionEventData local function determineActionCallback ( e ) end event . register ( tes3 . event . determineAction , determineActionCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"determineAction"},{"location":"events/determineAction/#event-data","text":"session ( tes3combatSession ): Read-only . The combat session the action is being determined for.","title":"Event Data"},{"location":"events/determinedAction/","text":"determinedAction \u2693\ufe0e This event fires when an actor has determined an action in a combat session. --- @param e determinedActionEventData local function determinedActionCallback ( e ) end event . register ( tes3 . event . determinedAction , determinedActionCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e session ( tes3combatSession ): Read-only . The combat session the action has been determined for.","title":"determinedAction"},{"location":"events/determinedAction/#determinedaction","text":"This event fires when an actor has determined an action in a combat session. --- @param e determinedActionEventData local function determinedActionCallback ( e ) end event . register ( tes3 . event . determinedAction , determinedActionCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"determinedAction"},{"location":"events/determinedAction/#event-data","text":"session ( tes3combatSession ): Read-only . The combat session the action has been determined for.","title":"Event Data"},{"location":"events/dialogueEnvironmentCreated/","text":"dialogueEnvironmentCreated \u2693\ufe0e This event is fired when a dialogue with lua scripting is about to be executed. It allows third party code to inject themselves into the dialogue environment, so new functionality can be added more easily for dialogue scripters. --- @param e dialogueEnvironmentCreatedEventData local function dialogueEnvironmentCreatedCallback ( e ) end event . register ( tes3 . event . dialogueEnvironmentCreated , dialogueEnvironmentCreatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e environment (table): Read-only . The lua environment for the dialogue scripting. Any data added to it will be available as global variables to dialogue scripts.","title":"dialogueEnvironmentCreated"},{"location":"events/dialogueEnvironmentCreated/#dialogueenvironmentcreated","text":"This event is fired when a dialogue with lua scripting is about to be executed. It allows third party code to inject themselves into the dialogue environment, so new functionality can be added more easily for dialogue scripters. --- @param e dialogueEnvironmentCreatedEventData local function dialogueEnvironmentCreatedCallback ( e ) end event . register ( tes3 . event . dialogueEnvironmentCreated , dialogueEnvironmentCreatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"dialogueEnvironmentCreated"},{"location":"events/dialogueEnvironmentCreated/#event-data","text":"environment (table): Read-only . The lua environment for the dialogue scripting. Any data added to it will be available as global variables to dialogue scripts.","title":"Event Data"},{"location":"events/disposition/","text":"disposition \u2693\ufe0e This event is triggered after an NPC's disposition is calculated. This is done frequently. The disposition value can be changed to alter the resulting value. The disposition should be consistent between calls. --- @param e dispositionEventData local function dispositionCallback ( e ) end event . register ( tes3 . event . disposition , dispositionCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e clamped (boolean): Read-only . If true, the disposition value will end up clamped between 0 and 100. disposition (number): The precalculated disposition. This can be set to override the value. mobile ( tes3mobileActor ): Read-only . Convenient access to the reference 's mobile. reference ( tes3reference ): Read-only . The reference whose disposition is being calculated. Examples \u2693\ufe0e Example: Reimplementation of the vanilla disposition calculation. --- @param e dispositionEventData local function onDispositionCalculation ( e ) -- Get some context. local reference = e . reference local npc = reference . object local player = tes3 . player local playerMobile = tes3 . mobilePlayer -- Get our starting disposition. local disposition = npc . baseDisposition -- Same-race gives a bonus. if ( npc . race == player . object . race ) then local fDispRaceMod = tes3 . findGMST ( tes3 . gmst . fDispRaceMod ). value disposition = disposition + fDispRaceMod end -- Adjust disposition by personality. local fDispPersonalityBase = tes3 . findGMST ( tes3 . gmst . fDispPersonalityBase ). value local fDispPersonalityMult = tes3 . findGMST ( tes3 . gmst . fDispPersonalityMult ). value disposition = disposition + ( playerMobile . personality . current - fDispPersonalityBase ) * fDispPersonalityMult -- If they have a faction, adjust it accordingly. local faction = npc . faction if ( faction ) then -- Figure out the reaction to use. local reaction = 0 local pairedFaction = nil --- @type tes3faction? if ( not faction . playerJoined or faction . playerExpelled ) then local lowestReaction , lowestFaction = faction : getLowestJoinedReaction () if ( lowestReaction ) then reaction , pairedFaction = lowestReaction , lowestFaction end else local selfReaction = faction : getReactionWithFaction ( faction ) if ( selfReaction ) then reaction = selfReaction end end -- Get the player rank from the faction if we found one. local playerRank = 0 if ( pairedFaction ) then playerRank = faction . playerRank end -- Finally calculate our faction modifier. local fDispFactionRankBase = tes3 . findGMST ( tes3 . gmst . fDispFactionRankBase ). value local fDispFactionRankMult = tes3 . findGMST ( tes3 . gmst . fDispFactionRankMult ). value local fDispFactionMod = tes3 . findGMST ( tes3 . gmst . fDispFactionMod ). value disposition = disposition + fDispFactionMod * reaction * ( fDispFactionRankBase + playerRank * fDispFactionRankMult ) end -- Apply crime penalty. local fDispCrimeMod = tes3 . findGMST ( tes3 . gmst . fDispCrimeMod ). value disposition = disposition - playerMobile . bounty * fDispCrimeMod -- Apply disease penalty. if ( playerMobile . isDiseased ) then local fDispDiseaseMod = tes3 . findGMST ( tes3 . gmst . fDispDiseaseMod ). value disposition = disposition + fDispDiseaseMod end -- Apply weapon drawn penalty. if ( playerMobile . weaponDrawn ) then local fDispWeaponDrawn = tes3 . findGMST ( tes3 . gmst . fDispWeaponDrawn ). value disposition = disposition + fDispWeaponDrawn end -- Pass the new disposition to the event. assert ( disposition == e . disposition , string.format ( \"Calculated disposition of %d didn't match vanilla value of %d.\" , disposition , e . disposition )) e . disposition = disposition end event . register ( tes3 . event . disposition , onDispositionCalculation )","title":"Disposition"},{"location":"events/disposition/#disposition","text":"This event is triggered after an NPC's disposition is calculated. This is done frequently. The disposition value can be changed to alter the resulting value. The disposition should be consistent between calls. --- @param e dispositionEventData local function dispositionCallback ( e ) end event . register ( tes3 . event . disposition , dispositionCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"disposition"},{"location":"events/disposition/#event-data","text":"clamped (boolean): Read-only . If true, the disposition value will end up clamped between 0 and 100. disposition (number): The precalculated disposition. This can be set to override the value. mobile ( tes3mobileActor ): Read-only . Convenient access to the reference 's mobile. reference ( tes3reference ): Read-only . The reference whose disposition is being calculated.","title":"Event Data"},{"location":"events/disposition/#examples","text":"Example: Reimplementation of the vanilla disposition calculation. --- @param e dispositionEventData local function onDispositionCalculation ( e ) -- Get some context. local reference = e . reference local npc = reference . object local player = tes3 . player local playerMobile = tes3 . mobilePlayer -- Get our starting disposition. local disposition = npc . baseDisposition -- Same-race gives a bonus. if ( npc . race == player . object . race ) then local fDispRaceMod = tes3 . findGMST ( tes3 . gmst . fDispRaceMod ). value disposition = disposition + fDispRaceMod end -- Adjust disposition by personality. local fDispPersonalityBase = tes3 . findGMST ( tes3 . gmst . fDispPersonalityBase ). value local fDispPersonalityMult = tes3 . findGMST ( tes3 . gmst . fDispPersonalityMult ). value disposition = disposition + ( playerMobile . personality . current - fDispPersonalityBase ) * fDispPersonalityMult -- If they have a faction, adjust it accordingly. local faction = npc . faction if ( faction ) then -- Figure out the reaction to use. local reaction = 0 local pairedFaction = nil --- @type tes3faction? if ( not faction . playerJoined or faction . playerExpelled ) then local lowestReaction , lowestFaction = faction : getLowestJoinedReaction () if ( lowestReaction ) then reaction , pairedFaction = lowestReaction , lowestFaction end else local selfReaction = faction : getReactionWithFaction ( faction ) if ( selfReaction ) then reaction = selfReaction end end -- Get the player rank from the faction if we found one. local playerRank = 0 if ( pairedFaction ) then playerRank = faction . playerRank end -- Finally calculate our faction modifier. local fDispFactionRankBase = tes3 . findGMST ( tes3 . gmst . fDispFactionRankBase ). value local fDispFactionRankMult = tes3 . findGMST ( tes3 . gmst . fDispFactionRankMult ). value local fDispFactionMod = tes3 . findGMST ( tes3 . gmst . fDispFactionMod ). value disposition = disposition + fDispFactionMod * reaction * ( fDispFactionRankBase + playerRank * fDispFactionRankMult ) end -- Apply crime penalty. local fDispCrimeMod = tes3 . findGMST ( tes3 . gmst . fDispCrimeMod ). value disposition = disposition - playerMobile . bounty * fDispCrimeMod -- Apply disease penalty. if ( playerMobile . isDiseased ) then local fDispDiseaseMod = tes3 . findGMST ( tes3 . gmst . fDispDiseaseMod ). value disposition = disposition + fDispDiseaseMod end -- Apply weapon drawn penalty. if ( playerMobile . weaponDrawn ) then local fDispWeaponDrawn = tes3 . findGMST ( tes3 . gmst . fDispWeaponDrawn ). value disposition = disposition + fDispWeaponDrawn end -- Pass the new disposition to the event. assert ( disposition == e . disposition , string.format ( \"Calculated disposition of %d didn't match vanilla value of %d.\" , disposition , e . disposition )) e . disposition = disposition end event . register ( tes3 . event . disposition , onDispositionCalculation )","title":"Examples"},{"location":"events/enchantChargeUse/","text":"enchantChargeUse \u2693\ufe0e This event is triggered just before an on-strike or on-use enchantment is used by any actor, and also by the UI system to label enchant charges. It allows modification of the charge required to use an enchantment. --- @param e enchantChargeUseEventData local function enchantChargeUseCallback ( e ) end event . register ( tes3 . event . enchantChargeUse , enchantChargeUseCallback ) Tip This event can be filtered based on the caster event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e caster ( tes3reference ): Read-only . The caster of the enchantment. charge (number): The charge required to cast the enchantment. May be modified. isCast (boolean): True if the calculation is for a on-strike or on-use action, false if for UI enchant charge display. The type of action is found at e.source.castType . source ( tes3enchantment ): Read-only . The enchantment being used or examined by the UI.","title":"enchantChargeUse"},{"location":"events/enchantChargeUse/#enchantchargeuse","text":"This event is triggered just before an on-strike or on-use enchantment is used by any actor, and also by the UI system to label enchant charges. It allows modification of the charge required to use an enchantment. --- @param e enchantChargeUseEventData local function enchantChargeUseCallback ( e ) end event . register ( tes3 . event . enchantChargeUse , enchantChargeUseCallback ) Tip This event can be filtered based on the caster event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"enchantChargeUse"},{"location":"events/enchantChargeUse/#event-data","text":"caster ( tes3reference ): Read-only . The caster of the enchantment. charge (number): The charge required to cast the enchantment. May be modified. isCast (boolean): True if the calculation is for a on-strike or on-use action, false if for UI enchant charge display. The type of action is found at e.source.castType . source ( tes3enchantment ): Read-only . The enchantment being used or examined by the UI.","title":"Event Data"},{"location":"events/enchantedItemCreateFailed/","text":"enchantedItemCreateFailed \u2693\ufe0e This event is fired when an enchanted item could not be created. --- @param e enchantedItemCreateFailedEventData local function enchantedItemCreateFailedCallback ( e ) end event . register ( tes3 . event . enchantedItemCreateFailed , enchantedItemCreateFailedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e baseObject ( tes3item ): Read-only . The item originally enchanted. enchanter ( tes3mobileActor ): The mobile actor responsible for failing to create the enchantment. enchanterReference ( tes3reference ): The reference responsible for failing to create the enchantment. soul ( tes3actor ): The actor used to enchant the item. soulGem ( tes3misc ): The soul gem used for the failed creation of the item.","title":"enchantedItemCreateFailed"},{"location":"events/enchantedItemCreateFailed/#enchanteditemcreatefailed","text":"This event is fired when an enchanted item could not be created. --- @param e enchantedItemCreateFailedEventData local function enchantedItemCreateFailedCallback ( e ) end event . register ( tes3 . event . enchantedItemCreateFailed , enchantedItemCreateFailedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"enchantedItemCreateFailed"},{"location":"events/enchantedItemCreateFailed/#event-data","text":"baseObject ( tes3item ): Read-only . The item originally enchanted. enchanter ( tes3mobileActor ): The mobile actor responsible for failing to create the enchantment. enchanterReference ( tes3reference ): The reference responsible for failing to create the enchantment. soul ( tes3actor ): The actor used to enchant the item. soulGem ( tes3misc ): The soul gem used for the failed creation of the item.","title":"Event Data"},{"location":"events/enchantedItemCreated/","text":"enchantedItemCreated \u2693\ufe0e This event is fired when an enchanted item has been created by the player. --- @param e enchantedItemCreatedEventData local function enchantedItemCreatedCallback ( e ) end event . register ( tes3 . event . enchantedItemCreated , enchantedItemCreatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e baseObject ( tes3item ): Read-only . The item originally enchanted. enchanter ( tes3mobileActor ): The mobile actor responsible for creating the enchantment. enchanterReference ( tes3reference ): The reference responsible for creating the enchantment. object ( tes3item ): Read-only . The newly created and enchanted item. soul ( tes3actor ): The actor used to enchant the item. soulGem ( tes3misc ): The soul gem used for the creation of the item.","title":"enchantedItemCreated"},{"location":"events/enchantedItemCreated/#enchanteditemcreated","text":"This event is fired when an enchanted item has been created by the player. --- @param e enchantedItemCreatedEventData local function enchantedItemCreatedCallback ( e ) end event . register ( tes3 . event . enchantedItemCreated , enchantedItemCreatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"enchantedItemCreated"},{"location":"events/enchantedItemCreated/#event-data","text":"baseObject ( tes3item ): Read-only . The item originally enchanted. enchanter ( tes3mobileActor ): The mobile actor responsible for creating the enchantment. enchanterReference ( tes3reference ): The reference responsible for creating the enchantment. object ( tes3item ): Read-only . The newly created and enchanted item. soul ( tes3actor ): The actor used to enchant the item. soulGem ( tes3misc ): The soul gem used for the creation of the item.","title":"Event Data"},{"location":"events/enterFrame/","text":"enterFrame \u2693\ufe0e The enterFrame event occurs at the start of every frame, including when the game is paused or in menu mode. --- @param e enterFrameEventData local function enterFrameCallback ( e ) end event . register ( tes3 . event . enterFrame , enterFrameCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e delta (number): Read-only . The number of seconds since the last frame. menuMode (boolean): Read-only . If the game is paused- in the inventory or a menu, etc. timestamp (number): Read-only . The number of hours since the beginning of the 3rd Era (similar to the Unix Epoch).","title":"enterFrame"},{"location":"events/enterFrame/#enterframe","text":"The enterFrame event occurs at the start of every frame, including when the game is paused or in menu mode. --- @param e enterFrameEventData local function enterFrameCallback ( e ) end event . register ( tes3 . event . enterFrame , enterFrameCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"enterFrame"},{"location":"events/enterFrame/#event-data","text":"delta (number): Read-only . The number of seconds since the last frame. menuMode (boolean): Read-only . If the game is paused- in the inventory or a menu, etc. timestamp (number): Read-only . The number of hours since the beginning of the 3rd Era (similar to the Unix Epoch).","title":"Event Data"},{"location":"events/equip/","text":"equip \u2693\ufe0e The equip event fires when an actor is about to equip an item, i.e. just before the item is equipped. This event allows scripts to block equipping. See equipped _ for the post-equip event. The item must not be removed from the inventory during this event, as the item and item data is still being referenced by the initiator of the equip action. If you want to consume the item, block the equip and remove it at a later time. Removing the item during this event can cause inventory desync bugs. --- @param e equipEventData local function equipCallback ( e ) end event . register ( tes3 . event . equip , equipCallback ) Tip This event can be filtered based on the item event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e item ( tes3baseObject ): Read-only . The object being equipped. itemData ( tes3itemData ): Read-only . The item data of item. reference ( tes3reference ): Read-only . The reference to the mobile actor that is equipping the item.","title":"Equip"},{"location":"events/equip/#equip","text":"The equip event fires when an actor is about to equip an item, i.e. just before the item is equipped. This event allows scripts to block equipping. See equipped _ for the post-equip event. The item must not be removed from the inventory during this event, as the item and item data is still being referenced by the initiator of the equip action. If you want to consume the item, block the equip and remove it at a later time. Removing the item during this event can cause inventory desync bugs. --- @param e equipEventData local function equipCallback ( e ) end event . register ( tes3 . event . equip , equipCallback ) Tip This event can be filtered based on the item event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"equip"},{"location":"events/equip/#event-data","text":"item ( tes3baseObject ): Read-only . The object being equipped. itemData ( tes3itemData ): Read-only . The item data of item. reference ( tes3reference ): Read-only . The reference to the mobile actor that is equipping the item.","title":"Event Data"},{"location":"events/equipmentReevaluated/","text":"equipmentReevaluated \u2693\ufe0e The equipmentReevaluated event fires after an actor has gone through its items and determined if anything in its inventory is better than what it currently has equipped. This event can be used to force equip new, custom equipment slots if needed. --- @param e equipmentReevaluatedEventData local function equipmentReevaluatedCallback ( e ) end event . register ( tes3 . event . equipmentReevaluated , equipmentReevaluatedCallback ) Tip This event can be filtered based on the item event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e actor ( tes3actor ): Read-only . The actor that has reevaluated their equipment. mobile ( tes3mobileActor ): Read-only . The mobile actor that has reevaluated their equipment. reference ( tes3reference ): Read-only . The reference that has reevaluated their equipment.","title":"equipmentReevaluated"},{"location":"events/equipmentReevaluated/#equipmentreevaluated","text":"The equipmentReevaluated event fires after an actor has gone through its items and determined if anything in its inventory is better than what it currently has equipped. This event can be used to force equip new, custom equipment slots if needed. --- @param e equipmentReevaluatedEventData local function equipmentReevaluatedCallback ( e ) end event . register ( tes3 . event . equipmentReevaluated , equipmentReevaluatedCallback ) Tip This event can be filtered based on the item event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"equipmentReevaluated"},{"location":"events/equipmentReevaluated/#event-data","text":"actor ( tes3actor ): Read-only . The actor that has reevaluated their equipment. mobile ( tes3mobileActor ): Read-only . The mobile actor that has reevaluated their equipment. reference ( tes3reference ): Read-only . The reference that has reevaluated their equipment.","title":"Event Data"},{"location":"events/equipped/","text":"equipped \u2693\ufe0e The equipped event fires after an actor has successfully equipped an item. This event is preceded by the equip event. --- @param e equippedEventData local function equippedCallback ( e ) end event . register ( tes3 . event . equipped , equippedCallback ) Tip This event can be filtered based on the item event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e actor ( tes3actor ): Read-only . The actor that has equipped the item. item ( tes3baseObject ): Read-only . The object that has been equipped. itemData ( tes3itemData ): Read-only . The item data of item. mobile ( tes3mobileActor ): Read-only . The mobile actor that has equipped the item. reference ( tes3reference ): Read-only . The reference to the mobile actor that has equipped the item.","title":"Equipped"},{"location":"events/equipped/#equipped","text":"The equipped event fires after an actor has successfully equipped an item. This event is preceded by the equip event. --- @param e equippedEventData local function equippedCallback ( e ) end event . register ( tes3 . event . equipped , equippedCallback ) Tip This event can be filtered based on the item event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"equipped"},{"location":"events/equipped/#event-data","text":"actor ( tes3actor ): Read-only . The actor that has equipped the item. item ( tes3baseObject ): Read-only . The object that has been equipped. itemData ( tes3itemData ): Read-only . The item data of item. mobile ( tes3mobileActor ): Read-only . The mobile actor that has equipped the item. reference ( tes3reference ): Read-only . The reference to the mobile actor that has equipped the item.","title":"Event Data"},{"location":"events/exerciseSkill/","text":"exerciseSkill \u2693\ufe0e This event is invoked whenever the player gains experience in a skill. The event can be blocked to prevent progress. Additionally, both the skill gaining experience and the progress gained can be changed. --- @param e exerciseSkillEventData local function exerciseSkillCallback ( e ) end event . register ( tes3 . event . exerciseSkill , exerciseSkillCallback ) Tip This event can be filtered based on the skill event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e progress (number): The amount of experience that skill is gaining. Note that experience is not on a scale of 1 to 100. This value is modifiable. skill (integer): The ID of the skill that is gaining experience. The IDs used are available in Lua by their indentifier in the tes3.skill namespace. This can be changed to provide experience to a different skill.","title":"exerciseSkill"},{"location":"events/exerciseSkill/#exerciseskill","text":"This event is invoked whenever the player gains experience in a skill. The event can be blocked to prevent progress. Additionally, both the skill gaining experience and the progress gained can be changed. --- @param e exerciseSkillEventData local function exerciseSkillCallback ( e ) end event . register ( tes3 . event . exerciseSkill , exerciseSkillCallback ) Tip This event can be filtered based on the skill event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"exerciseSkill"},{"location":"events/exerciseSkill/#event-data","text":"progress (number): The amount of experience that skill is gaining. Note that experience is not on a scale of 1 to 100. This value is modifiable. skill (integer): The ID of the skill that is gaining experience. The IDs used are available in Lua by their indentifier in the tes3.skill namespace. This can be changed to provide experience to a different skill.","title":"Event Data"},{"location":"events/fadersCreated/","text":"fadersCreated \u2693\ufe0e This event fires once the game starts creating faders. This event is used to create a new fader using tes3fader.new() . --- @param e fadersCreatedEventData local function fadersCreatedCallback ( e ) end event . register ( tes3 . event . fadersCreated , fadersCreatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Examples \u2693\ufe0e Example: Creating a fader -- This is a working example. You are encouraged to create a new file -- main.lua, paste this code and see the results in-game! -- Use `u` key to activate the fader. -- Use `l` and `k` keys to increase or decrease the fader's opacity. -- This variable is used to store our fader. local fader = nil local function createFader () fader = tes3fader . new () fader : setColor ({ -- This changes the color of our fader to green. -- The RGB values are in range [0.0, 1.0]. color = { 0.0 , 1.0 , 0.0 }, }) -- The fader needs to be updated every frame to be rendered correctly. -- You may notice that for this event we have registered a function with -- no name. That is an anonymous function. It works exactly the same as -- any other function. We have a need to register this function inside -- our createFader() function, since our `fader` variable is `nil` at start -- (look up). We can't call fader:update() if fader is `nil`. event . register ( tes3 . event . enterFrame , function () fader : update () end ) end -- The fader needs to be created during `fadersCreated` event, -- so our createFader() function is registered for that event. event . register ( tes3 . event . fadersCreated , createFader ) local opacity = 0.1 local function activateFader () -- The fader needs to be activated first to be visible. fader : activate () -- Now we change its visibility. fader : fadeTo ({ value = opacity , duration = 3 , }) tes3 . messageBox ( \"Welcome to the Fallout mode!\" ) end -- We registered our activateFader() function on keyDown event, filtered for `u` key. -- That makes our activateFader() function called only when `u` is pressed. event . register ( tes3 . event . keyDown , activateFader , { filter = tes3 . scanCode . u }) local function increaseOpacity () -- The fader's opacity is in [0.0, 1.0] range. -- Make sure we don't exceed it. if opacity <= 0.9 then opacity = opacity + 0.1 else return end -- This method sets the current opacity of our fader -- to the value of `opacity` variable fader : updateMaterialProperty ( opacity ) -- The \"\\n\" sign means insert a new line here. -- The \"%.1f\" code means insert the opacity's value in this text. -- The \".1\" part means show 1 decimal after the decimal point. tes3 . messageBox ( \"Fader opacity increased. \\n Current opacity: %.1f\" , opacity ) end event . register ( tes3 . event . keyDown , increaseOpacity , { filter = tes3 . scanCode . l }) local function decreaseOpacity () if opacity >= 0.1 then opacity = opacity - 0.1 else return end fader : updateMaterialProperty ( opacity ) tes3 . messageBox ( \"Fader opacity decreased. \\n Current opacity: %.1f\" , opacity ) end event . register ( tes3 . event . keyDown , decreaseOpacity , { filter = tes3 . scanCode . k })","title":"fadersCreated"},{"location":"events/fadersCreated/#faderscreated","text":"This event fires once the game starts creating faders. This event is used to create a new fader using tes3fader.new() . --- @param e fadersCreatedEventData local function fadersCreatedCallback ( e ) end event . register ( tes3 . event . fadersCreated , fadersCreatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"fadersCreated"},{"location":"events/fadersCreated/#examples","text":"Example: Creating a fader -- This is a working example. You are encouraged to create a new file -- main.lua, paste this code and see the results in-game! -- Use `u` key to activate the fader. -- Use `l` and `k` keys to increase or decrease the fader's opacity. -- This variable is used to store our fader. local fader = nil local function createFader () fader = tes3fader . new () fader : setColor ({ -- This changes the color of our fader to green. -- The RGB values are in range [0.0, 1.0]. color = { 0.0 , 1.0 , 0.0 }, }) -- The fader needs to be updated every frame to be rendered correctly. -- You may notice that for this event we have registered a function with -- no name. That is an anonymous function. It works exactly the same as -- any other function. We have a need to register this function inside -- our createFader() function, since our `fader` variable is `nil` at start -- (look up). We can't call fader:update() if fader is `nil`. event . register ( tes3 . event . enterFrame , function () fader : update () end ) end -- The fader needs to be created during `fadersCreated` event, -- so our createFader() function is registered for that event. event . register ( tes3 . event . fadersCreated , createFader ) local opacity = 0.1 local function activateFader () -- The fader needs to be activated first to be visible. fader : activate () -- Now we change its visibility. fader : fadeTo ({ value = opacity , duration = 3 , }) tes3 . messageBox ( \"Welcome to the Fallout mode!\" ) end -- We registered our activateFader() function on keyDown event, filtered for `u` key. -- That makes our activateFader() function called only when `u` is pressed. event . register ( tes3 . event . keyDown , activateFader , { filter = tes3 . scanCode . u }) local function increaseOpacity () -- The fader's opacity is in [0.0, 1.0] range. -- Make sure we don't exceed it. if opacity <= 0.9 then opacity = opacity + 0.1 else return end -- This method sets the current opacity of our fader -- to the value of `opacity` variable fader : updateMaterialProperty ( opacity ) -- The \"\\n\" sign means insert a new line here. -- The \"%.1f\" code means insert the opacity's value in this text. -- The \".1\" part means show 1 decimal after the decimal point. tes3 . messageBox ( \"Fader opacity increased. \\n Current opacity: %.1f\" , opacity ) end event . register ( tes3 . event . keyDown , increaseOpacity , { filter = tes3 . scanCode . l }) local function decreaseOpacity () if opacity >= 0.1 then opacity = opacity - 0.1 else return end fader : updateMaterialProperty ( opacity ) tes3 . messageBox ( \"Fader opacity decreased. \\n Current opacity: %.1f\" , opacity ) end event . register ( tes3 . event . keyDown , decreaseOpacity , { filter = tes3 . scanCode . k })","title":"Examples"},{"location":"events/filterBarterMenu/","text":"filterBarterMenu \u2693\ufe0e This event fires when an item in the barter menu is filtered. --- @param e filterBarterMenuEventData local function filterBarterMenuCallback ( e ) end event . register ( tes3 . event . filterBarterMenu , filterBarterMenuCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e item ( tes3item ): Read-only . The item being filtered. itemData ( tes3itemData ): Read-only . The item data for the item being filtered. tile ( tes3inventoryTile ): Read-only . The inventory tile being filtered.","title":"filterBarterMenu"},{"location":"events/filterBarterMenu/#filterbartermenu","text":"This event fires when an item in the barter menu is filtered. --- @param e filterBarterMenuEventData local function filterBarterMenuCallback ( e ) end event . register ( tes3 . event . filterBarterMenu , filterBarterMenuCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"filterBarterMenu"},{"location":"events/filterBarterMenu/#event-data","text":"item ( tes3item ): Read-only . The item being filtered. itemData ( tes3itemData ): Read-only . The item data for the item being filtered. tile ( tes3inventoryTile ): Read-only . The inventory tile being filtered.","title":"Event Data"},{"location":"events/filterContentsMenu/","text":"filterContentsMenu \u2693\ufe0e This event fires when an item in the contents menu is filtered. --- @param e filterContentsMenuEventData local function filterContentsMenuCallback ( e ) end event . register ( tes3 . event . filterContentsMenu , filterContentsMenuCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e item ( tes3item ): Read-only . The item being filtered. itemData ( tes3itemData ): Read-only . The item data for the item being filtered. tile ( tes3inventoryTile ): Read-only . The inventory tile being filtered.","title":"filterContentsMenu"},{"location":"events/filterContentsMenu/#filtercontentsmenu","text":"This event fires when an item in the contents menu is filtered. --- @param e filterContentsMenuEventData local function filterContentsMenuCallback ( e ) end event . register ( tes3 . event . filterContentsMenu , filterContentsMenuCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"filterContentsMenu"},{"location":"events/filterContentsMenu/#event-data","text":"item ( tes3item ): Read-only . The item being filtered. itemData ( tes3itemData ): Read-only . The item data for the item being filtered. tile ( tes3inventoryTile ): Read-only . The inventory tile being filtered.","title":"Event Data"},{"location":"events/filterInventory/","text":"filterInventory \u2693\ufe0e This event fires when an item in the inventory is filtered. --- @param e filterInventoryEventData local function filterInventoryCallback ( e ) end event . register ( tes3 . event . filterInventory , filterInventoryCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e item ( tes3item ): Read-only . The item being filtered. itemData ( tes3itemData ): Read-only . The item data for the item being filtered. tile ( tes3inventoryTile ): Read-only . The inventory tile being filtered.","title":"filterInventory"},{"location":"events/filterInventory/#filterinventory","text":"This event fires when an item in the inventory is filtered. --- @param e filterInventoryEventData local function filterInventoryCallback ( e ) end event . register ( tes3 . event . filterInventory , filterInventoryCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"filterInventory"},{"location":"events/filterInventory/#event-data","text":"item ( tes3item ): Read-only . The item being filtered. itemData ( tes3itemData ): Read-only . The item data for the item being filtered. tile ( tes3inventoryTile ): Read-only . The inventory tile being filtered.","title":"Event Data"},{"location":"events/filterInventorySelect/","text":"filterInventorySelect \u2693\ufe0e This event fires when an inventory filter has been selected for an item. --- @param e filterInventorySelectEventData local function filterInventorySelectCallback ( e ) end event . register ( tes3 . event . filterInventorySelect , filterInventorySelectCallback ) Tip This event can be filtered based on the type event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e filter (boolean): Set this value to true to make the item appear in the inventory. If this is set to false the item won't appear in the inventory. item ( tes3item ): Read-only . The item being filtered. itemData ( tes3itemData ): Read-only . The item data for the item being filtered. type (string): Read-only . The inventory filter type.","title":"filterInventorySelect"},{"location":"events/filterInventorySelect/#filterinventoryselect","text":"This event fires when an inventory filter has been selected for an item. --- @param e filterInventorySelectEventData local function filterInventorySelectCallback ( e ) end event . register ( tes3 . event . filterInventorySelect , filterInventorySelectCallback ) Tip This event can be filtered based on the type event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"filterInventorySelect"},{"location":"events/filterInventorySelect/#event-data","text":"filter (boolean): Set this value to true to make the item appear in the inventory. If this is set to false the item won't appear in the inventory. item ( tes3item ): Read-only . The item being filtered. itemData ( tes3itemData ): Read-only . The item data for the item being filtered. type (string): Read-only . The inventory filter type.","title":"Event Data"},{"location":"events/filterSoulGemTarget/","text":"filterSoulGemTarget \u2693\ufe0e This event fires when a soul gem target is filtered --- @param e filterSoulGemTargetEventData local function filterSoulGemTargetCallback ( e ) end event . register ( tes3 . event . filterSoulGemTarget , filterSoulGemTargetCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e filter (boolean): Setting this to false or nil will prevent the mobile 's soul to end up in the soulGem . Setting this to true will make the opposite. mobile ( tes3mobileActor ): Read-only . The mobile actor whose soul is to be soultrapped. reference ( tes3reference ): Read-only . The reference. soulGem ( tes3misc ): Read-only . The soul gem object. Examples \u2693\ufe0e Example: A more elaborate example. local function onInitialized () tes3 . addSoulGem ({ item = \"misc_dwrv_artifact60\" }) end event . register ( tes3 . event . initialized , onInitialized ) local function onFilterSoulGemTarget ( e ) if ( e . reference . baseObject . id : lower () == \"fargoth\" ) then return e . soulGem . id == \"misc_dwrv_artifact60\" end end event . register ( tes3 . event . filterSoulGemTarget , onFilterSoulGemTarget ) -- calcSoulValue event allows assigning a new soul value to creatures -- If the event was triggered for an NPC, it allows assigning a value -- thus allowing soul-trapping the actor. local function calcSoulValueCallback ( e ) if ( e . actor . id : lower () == \"fargoth\" ) then e . value = 69 mwse . log ( \"Getting Fargoth's value.\" ) return end end event . register ( tes3 . event . calcSoulValue , calcSoulValueCallback ) Example: Example local function onInitialized () -- This will turn the Dwemer Tube in a soul gem tes3 . addSoulGem ({ item = \"misc_dwrv_artifact60\" }) end event . register ( tes3 . event . initialized , onInitialized ) local function onFilterSoulGemTarget ( e ) -- Make it so Vivec can only be trapped by a special container. if ( e . reference . baseObject . id : lower () == \"vivec\" ) then e . filter = ( e . soulGem . id == \"misc_dwrv_artifact60\" ) end end event . register ( tes3 . event . filterSoulGemTarget , onFilterSoulGemTarget )","title":"filterSoulGemTarget"},{"location":"events/filterSoulGemTarget/#filtersoulgemtarget","text":"This event fires when a soul gem target is filtered --- @param e filterSoulGemTargetEventData local function filterSoulGemTargetCallback ( e ) end event . register ( tes3 . event . filterSoulGemTarget , filterSoulGemTargetCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"filterSoulGemTarget"},{"location":"events/filterSoulGemTarget/#event-data","text":"filter (boolean): Setting this to false or nil will prevent the mobile 's soul to end up in the soulGem . Setting this to true will make the opposite. mobile ( tes3mobileActor ): Read-only . The mobile actor whose soul is to be soultrapped. reference ( tes3reference ): Read-only . The reference. soulGem ( tes3misc ): Read-only . The soul gem object.","title":"Event Data"},{"location":"events/filterSoulGemTarget/#examples","text":"Example: A more elaborate example. local function onInitialized () tes3 . addSoulGem ({ item = \"misc_dwrv_artifact60\" }) end event . register ( tes3 . event . initialized , onInitialized ) local function onFilterSoulGemTarget ( e ) if ( e . reference . baseObject . id : lower () == \"fargoth\" ) then return e . soulGem . id == \"misc_dwrv_artifact60\" end end event . register ( tes3 . event . filterSoulGemTarget , onFilterSoulGemTarget ) -- calcSoulValue event allows assigning a new soul value to creatures -- If the event was triggered for an NPC, it allows assigning a value -- thus allowing soul-trapping the actor. local function calcSoulValueCallback ( e ) if ( e . actor . id : lower () == \"fargoth\" ) then e . value = 69 mwse . log ( \"Getting Fargoth's value.\" ) return end end event . register ( tes3 . event . calcSoulValue , calcSoulValueCallback ) Example: Example local function onInitialized () -- This will turn the Dwemer Tube in a soul gem tes3 . addSoulGem ({ item = \"misc_dwrv_artifact60\" }) end event . register ( tes3 . event . initialized , onInitialized ) local function onFilterSoulGemTarget ( e ) -- Make it so Vivec can only be trapped by a special container. if ( e . reference . baseObject . id : lower () == \"vivec\" ) then e . filter = ( e . soulGem . id == \"misc_dwrv_artifact60\" ) end end event . register ( tes3 . event . filterSoulGemTarget , onFilterSoulGemTarget )","title":"Examples"},{"location":"events/infoFilter/","text":"infoFilter \u2693\ufe0e This event fires when a dialogue info object is filtered. --- @param e infoFilterEventData local function infoFilterCallback ( e ) end event . register ( tes3 . event . infoFilter , infoFilterCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e actor ( tes3object ): Read-only . The actor. dialogue ( tes3dialogue ): Read-only . The dialogue object. info ( tes3dialogueInfo ): Read-only . The dialogue info object. passes (boolean): Read-only . Indicates if the filter passes. reference ( tes3reference ): Read-only . The reference. source (number): Read-only . The source.","title":"infoFilter"},{"location":"events/infoFilter/#infofilter","text":"This event fires when a dialogue info object is filtered. --- @param e infoFilterEventData local function infoFilterCallback ( e ) end event . register ( tes3 . event . infoFilter , infoFilterCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"infoFilter"},{"location":"events/infoFilter/#event-data","text":"actor ( tes3object ): Read-only . The actor. dialogue ( tes3dialogue ): Read-only . The dialogue object. info ( tes3dialogueInfo ): Read-only . The dialogue info object. passes (boolean): Read-only . Indicates if the filter passes. reference ( tes3reference ): Read-only . The reference. source (number): Read-only . The source.","title":"Event Data"},{"location":"events/infoGetText/","text":"infoGetText \u2693\ufe0e This event fires when a dialogue info object text is retrieved. That can be when starting a conversation with an NPC, a service was refused to the player, NPC's responses to player persuading them and if the subtitles are enabled, getting the text for the subtitle will also trigger infoGetText event. --- @param e infoGetTextEventData local function infoGetTextCallback ( e ) end event . register ( tes3 . event . infoGetText , infoGetTextCallback ) Tip This event can be filtered based on the info event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e info ( tes3dialogueInfo ): Read-only . The dialogue info object. loadOriginalText (method): Loads the original text for the info from the game files, bypassing this event. text (string): The text to return. This can be modified. Does not contain the original text. If not set, the original text will be used instead. Examples \u2693\ufe0e Example: Append custom text to a greeting line. -- This will make Ra'virr give the player 2 Moon Sugar when the conversation is initiated local function onInfoGetText ( e ) if e . info . actor . id ~= \"ra'virr\" then return end if e . info . type == tes3 . dialogueType . greeting then -- e.text is empty by default. e . text = e : loadOriginalText () .. \" \\n\\n Sweet sugar! Have some.\" tes3 . addItem ({ reference = tes3 . player , item = \"ingred_moon_sugar_01\" , count = 2 , }) end end event . register ( tes3 . event . infoGetText , onInfoGetText )","title":"infoGetText"},{"location":"events/infoGetText/#infogettext","text":"This event fires when a dialogue info object text is retrieved. That can be when starting a conversation with an NPC, a service was refused to the player, NPC's responses to player persuading them and if the subtitles are enabled, getting the text for the subtitle will also trigger infoGetText event. --- @param e infoGetTextEventData local function infoGetTextCallback ( e ) end event . register ( tes3 . event . infoGetText , infoGetTextCallback ) Tip This event can be filtered based on the info event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"infoGetText"},{"location":"events/infoGetText/#event-data","text":"info ( tes3dialogueInfo ): Read-only . The dialogue info object. loadOriginalText (method): Loads the original text for the info from the game files, bypassing this event. text (string): The text to return. This can be modified. Does not contain the original text. If not set, the original text will be used instead.","title":"Event Data"},{"location":"events/infoGetText/#examples","text":"Example: Append custom text to a greeting line. -- This will make Ra'virr give the player 2 Moon Sugar when the conversation is initiated local function onInfoGetText ( e ) if e . info . actor . id ~= \"ra'virr\" then return end if e . info . type == tes3 . dialogueType . greeting then -- e.text is empty by default. e . text = e : loadOriginalText () .. \" \\n\\n Sweet sugar! Have some.\" tes3 . addItem ({ reference = tes3 . player , item = \"ingred_moon_sugar_01\" , count = 2 , }) end end event . register ( tes3 . event . infoGetText , onInfoGetText )","title":"Examples"},{"location":"events/infoLinkResolve/","text":"infoLinkResolve \u2693\ufe0e This event fires when a dialogue hyperlink is being resolved to a topic, during UI layout (not on link activation). --- @param e infoLinkResolveEventData local function infoLinkResolveCallback ( e ) end event . register ( tes3 . event . infoLinkResolve , infoLinkResolveCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e topic (string): The topic that activates when this hyperlink is clicked. Initially set to the link text. Set this value to change the target topic.","title":"infoLinkResolve"},{"location":"events/infoLinkResolve/#infolinkresolve","text":"This event fires when a dialogue hyperlink is being resolved to a topic, during UI layout (not on link activation). --- @param e infoLinkResolveEventData local function infoLinkResolveCallback ( e ) end event . register ( tes3 . event . infoLinkResolve , infoLinkResolveCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"infoLinkResolve"},{"location":"events/infoLinkResolve/#event-data","text":"topic (string): The topic that activates when this hyperlink is clicked. Initially set to the link text. Set this value to change the target topic.","title":"Event Data"},{"location":"events/infoResponse/","text":"infoResponse \u2693\ufe0e This event fires when a dialogue response is triggered. --- @param e infoResponseEventData local function infoResponseCallback ( e ) end event . register ( tes3 . event . infoResponse , infoResponseCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e command (string): Read-only . The command. dialogue ( tes3dialogue ): Read-only . The dialogue object. info ( tes3dialogueInfo ): Read-only . The dialogue info object. reference ( tes3reference ): Read-only . The reference. variables (tes3scriptVariables): Read-only . The script variables.","title":"infoResponse"},{"location":"events/infoResponse/#inforesponse","text":"This event fires when a dialogue response is triggered. --- @param e infoResponseEventData local function infoResponseCallback ( e ) end event . register ( tes3 . event . infoResponse , infoResponseCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"infoResponse"},{"location":"events/infoResponse/#event-data","text":"command (string): Read-only . The command. dialogue ( tes3dialogue ): Read-only . The dialogue object. info ( tes3dialogueInfo ): Read-only . The dialogue info object. reference ( tes3reference ): Read-only . The reference. variables (tes3scriptVariables): Read-only . The script variables.","title":"Event Data"},{"location":"events/initialized/","text":"initialized \u2693\ufe0e The initialized event fires when game code has finished initializing, and all .esm and .esp files have been loaded. --- @param e initializedEventData local function initializedCallback ( e ) end event . register ( tes3 . event . initialized , initializedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"Initialized"},{"location":"events/initialized/#initialized","text":"The initialized event fires when game code has finished initializing, and all .esm and .esp files have been loaded. --- @param e initializedEventData local function initializedCallback ( e ) end event . register ( tes3 . event . initialized , initializedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"initialized"},{"location":"events/isGuard/","text":"isGuard \u2693\ufe0e The isGuard event triggers whenever the game engine checks if an NPC object is a guard. The guard status can be modified. This alone will not make an NPC behave like a guard, though. --- @param e isGuardEventData local function isGuardCallback ( e ) end event . register ( tes3 . event . isGuard , isGuardCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e isGuard (boolean): The previously calculated guard status. npc ( tes3npc ): Read-only . The NPC that the guard status is being checked for.","title":"isGuard"},{"location":"events/isGuard/#isguard","text":"The isGuard event triggers whenever the game engine checks if an NPC object is a guard. The guard status can be modified. This alone will not make an NPC behave like a guard, though. --- @param e isGuardEventData local function isGuardCallback ( e ) end event . register ( tes3 . event . isGuard , isGuardCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"isGuard"},{"location":"events/isGuard/#event-data","text":"isGuard (boolean): The previously calculated guard status. npc ( tes3npc ): Read-only . The NPC that the guard status is being checked for.","title":"Event Data"},{"location":"events/itemDropped/","text":"itemDropped \u2693\ufe0e This event fires when an item is dropped. --- @param e itemDroppedEventData local function itemDroppedCallback ( e ) end event . register ( tes3 . event . itemDropped , itemDroppedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e reference ( tes3reference ): Read-only . The reference.","title":"itemDropped"},{"location":"events/itemDropped/#itemdropped","text":"This event fires when an item is dropped. --- @param e itemDroppedEventData local function itemDroppedCallback ( e ) end event . register ( tes3 . event . itemDropped , itemDroppedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"itemDropped"},{"location":"events/itemDropped/#event-data","text":"reference ( tes3reference ): Read-only . The reference.","title":"Event Data"},{"location":"events/itemTileUpdated/","text":"itemTileUpdated \u2693\ufe0e This event is fired whenever an inventory item tile is updated, as well as when the tile is created. This can be used to easily manipulate or extend the appearance of inventory tiles. --- @param e itemTileUpdatedEventData local function itemTileUpdatedCallback ( e ) end event . register ( tes3 . event . itemTileUpdated , itemTileUpdatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e element ( tes3uiElement ): Read-only . The UI element that the tile is displayed on. item ( tes3item ): Read-only . The tile's item. itemData ( tes3itemData ): Read-only . The tile's item data, if any. menu ( tes3uiElement ): Read-only . The root menu of the tile. This will typically be the MenuInventory, MenuContents, or MenuBarter menus. tile ( tes3inventoryTile ): Read-only . The tile data itself. This typically contains references to all the other event fields, among other tile-specific information.","title":"itemTileUpdated"},{"location":"events/itemTileUpdated/#itemtileupdated","text":"This event is fired whenever an inventory item tile is updated, as well as when the tile is created. This can be used to easily manipulate or extend the appearance of inventory tiles. --- @param e itemTileUpdatedEventData local function itemTileUpdatedCallback ( e ) end event . register ( tes3 . event . itemTileUpdated , itemTileUpdatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"itemTileUpdated"},{"location":"events/itemTileUpdated/#event-data","text":"element ( tes3uiElement ): Read-only . The UI element that the tile is displayed on. item ( tes3item ): Read-only . The tile's item. itemData ( tes3itemData ): Read-only . The tile's item data, if any. menu ( tes3uiElement ): Read-only . The root menu of the tile. This will typically be the MenuInventory, MenuContents, or MenuBarter menus. tile ( tes3inventoryTile ): Read-only . The tile data itself. This typically contains references to all the other event fields, among other tile-specific information.","title":"Event Data"},{"location":"events/journal/","text":"journal \u2693\ufe0e The journal event is invoked when a journal state progresses. --- @param e journalEventData local function journalCallback ( e ) end event . register ( tes3 . event . journal , journalCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e index (number): Read-only . The new index of the journal state. info ( tes3dialogueInfo ): Read-only . The info for the newly set journal index. new (boolean): Read-only . If true, the journal is newly added to the player. This effectively means that index has increased past 0. previousIndex (number): Read-only . The previous index of the journal state. previousInfo ( tes3dialogueInfo , nil): Read-only . The info for the previously set journal index. If the journal entry is new ly added, this will be nil . topic ( tes3dialogue ): Read-only . The topic that dictates the journal entry.","title":"Journal"},{"location":"events/journal/#journal","text":"The journal event is invoked when a journal state progresses. --- @param e journalEventData local function journalCallback ( e ) end event . register ( tes3 . event . journal , journalCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"journal"},{"location":"events/journal/#event-data","text":"index (number): Read-only . The new index of the journal state. info ( tes3dialogueInfo ): Read-only . The info for the newly set journal index. new (boolean): Read-only . If true, the journal is newly added to the player. This effectively means that index has increased past 0. previousIndex (number): Read-only . The previous index of the journal state. previousInfo ( tes3dialogueInfo , nil): Read-only . The info for the previously set journal index. If the journal entry is new ly added, this will be nil . topic ( tes3dialogue ): Read-only . The topic that dictates the journal entry.","title":"Event Data"},{"location":"events/jump/","text":"jump \u2693\ufe0e This event is called when an actor tries to jump. The velocity and applyFatigueCost can be modified. --- @param e jumpEventData local function jumpCallback ( e ) end event . register ( tes3 . event . jump , jumpCallback ) Tip This event can be filtered based on the reference event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e applyFatigueCost (boolean): If false , this jump will not reduce fatigue. isDefaultJump (boolean): Read-only . If true , the jump has been initiated from the ground and without custom velocity or fatigue cost. This does not change if other event callbacks change any of these parameters. mobile ( tes3mobileActor ): Read-only . The mobile actor that is trying to jump. reference ( tes3reference ): Read-only . Mobile's related reference. velocity ( tes3vector3 ): The velocity of the jump. Examples \u2693\ufe0e Example: Disable jumping while encumbered Disables jumping for the player if their current encumbrance is over 50%. local function onJump ( e ) -- Check if the actor that is trying to jump is the player. if e . mobile == tes3 . mobilePlayer then -- Define the threshold at which we no longer want to be able to jump. -- This is set to 50% of the player's maximum encumbrance. local encumbranceThreshold = e . mobile . encumbrance . base * 0.5 -- Check if the current encumbrance is higher than our defined threshold and prevent jumping. if e . mobile . encumbrance . current > encumbranceThreshold then -- Show a message to the player to inform them that jumping is not possible. tes3 . messageBox ( \"You are unable to jump.\" ) -- Block the vanilla jump logic and prevent other jump events from being triggered. return false end end end event . register ( tes3 . event . jump , onJump ) Example: Double jump height Double the height of every jump. local function onJump ( e ) -- Multiply the velocity on the Z-Axis (Up/Down) by 2. e . velocity . z = e . velocity . z * 2 end event . register ( tes3 . event . jump , onJump ) Example: Force player jump height Forces the jump height of the player to a fixed value, not taking into account attributes, skills, fatigue, encumbrance and other factors. local function onJump ( e ) -- Check if the actor that is trying to jump is the player. if e . mobile == tes3 . mobilePlayer then -- Define the fixed height of the jump. local jumpHeight = 300 -- Multiply the normalized direction vector of the jump by the fixed jump height. -- This will make jumps initiated during movement behave like they normally do. e . velocity = e . velocity : normalized () * jumpHeight end end event . register ( tes3 . event . jump , onJump )","title":"Jump"},{"location":"events/jump/#jump","text":"This event is called when an actor tries to jump. The velocity and applyFatigueCost can be modified. --- @param e jumpEventData local function jumpCallback ( e ) end event . register ( tes3 . event . jump , jumpCallback ) Tip This event can be filtered based on the reference event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"jump"},{"location":"events/jump/#event-data","text":"applyFatigueCost (boolean): If false , this jump will not reduce fatigue. isDefaultJump (boolean): Read-only . If true , the jump has been initiated from the ground and without custom velocity or fatigue cost. This does not change if other event callbacks change any of these parameters. mobile ( tes3mobileActor ): Read-only . The mobile actor that is trying to jump. reference ( tes3reference ): Read-only . Mobile's related reference. velocity ( tes3vector3 ): The velocity of the jump.","title":"Event Data"},{"location":"events/jump/#examples","text":"Example: Disable jumping while encumbered Disables jumping for the player if their current encumbrance is over 50%. local function onJump ( e ) -- Check if the actor that is trying to jump is the player. if e . mobile == tes3 . mobilePlayer then -- Define the threshold at which we no longer want to be able to jump. -- This is set to 50% of the player's maximum encumbrance. local encumbranceThreshold = e . mobile . encumbrance . base * 0.5 -- Check if the current encumbrance is higher than our defined threshold and prevent jumping. if e . mobile . encumbrance . current > encumbranceThreshold then -- Show a message to the player to inform them that jumping is not possible. tes3 . messageBox ( \"You are unable to jump.\" ) -- Block the vanilla jump logic and prevent other jump events from being triggered. return false end end end event . register ( tes3 . event . jump , onJump ) Example: Double jump height Double the height of every jump. local function onJump ( e ) -- Multiply the velocity on the Z-Axis (Up/Down) by 2. e . velocity . z = e . velocity . z * 2 end event . register ( tes3 . event . jump , onJump ) Example: Force player jump height Forces the jump height of the player to a fixed value, not taking into account attributes, skills, fatigue, encumbrance and other factors. local function onJump ( e ) -- Check if the actor that is trying to jump is the player. if e . mobile == tes3 . mobilePlayer then -- Define the fixed height of the jump. local jumpHeight = 300 -- Multiply the normalized direction vector of the jump by the fixed jump height. -- This will make jumps initiated during movement behave like they normally do. e . velocity = e . velocity : normalized () * jumpHeight end end event . register ( tes3 . event . jump , onJump )","title":"Examples"},{"location":"events/key/","text":"key \u2693\ufe0e The key event fires when a key up or key down input is detected. It is preferred that the keyDown and keyUp events are used instead. --- @param e keyEventData local function keyCallback ( e ) end event . register ( tes3 . event . key , keyCallback ) Tip This event can be filtered based on the keyCode event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e isAltDown (number): Read-only . True if either alt key is held. isControlDown (number): Read-only . True if either control key is held. isShiftDown (number): Read-only . True if either shift key is held. isSuperDown (number): Read-only . True if super (Windows key) is held. keyCode (number): Read-only . The scan code of the key that raised the event. pressed (boolean): Read-only . True if this is a key down event, false for a key up event. Examples \u2693\ufe0e Example: Show a Message when Ctrl-Z is Pressed Displays a simple message when Z is pressed while control is held. local function myOnKeyCallback ( e ) if ( e . pressed and e . isControlDown ) then tes3 . messageBox ({ message = \"You pressed Ctrl-Z, but you can't undo all your mistakes.\" }) end end -- Filter by the scan code to get Z key presses only. event . register ( tes3 . event . key , myOnKeyCallback , { filter = tes3 . scanCode . z } )","title":"Key"},{"location":"events/key/#key","text":"The key event fires when a key up or key down input is detected. It is preferred that the keyDown and keyUp events are used instead. --- @param e keyEventData local function keyCallback ( e ) end event . register ( tes3 . event . key , keyCallback ) Tip This event can be filtered based on the keyCode event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"key"},{"location":"events/key/#event-data","text":"isAltDown (number): Read-only . True if either alt key is held. isControlDown (number): Read-only . True if either control key is held. isShiftDown (number): Read-only . True if either shift key is held. isSuperDown (number): Read-only . True if super (Windows key) is held. keyCode (number): Read-only . The scan code of the key that raised the event. pressed (boolean): Read-only . True if this is a key down event, false for a key up event.","title":"Event Data"},{"location":"events/key/#examples","text":"Example: Show a Message when Ctrl-Z is Pressed Displays a simple message when Z is pressed while control is held. local function myOnKeyCallback ( e ) if ( e . pressed and e . isControlDown ) then tes3 . messageBox ({ message = \"You pressed Ctrl-Z, but you can't undo all your mistakes.\" }) end end -- Filter by the scan code to get Z key presses only. event . register ( tes3 . event . key , myOnKeyCallback , { filter = tes3 . scanCode . z } )","title":"Examples"},{"location":"events/keyDown/","text":"keyDown \u2693\ufe0e The key event fires when a key is pressed. --- @param e keyDownEventData local function keyDownCallback ( e ) end event . register ( tes3 . event . keyDown , keyDownCallback ) Tip This event can be filtered based on the keyCode event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e isAltDown (number): Read-only . True if either alt key is held. isControlDown (number): Read-only . True if either control key is held. isShiftDown (number): Read-only . True if either shift key is held. isSuperDown (number): Read-only . True if super (Windows key) is held. keyCode (number): Read-only . The scan code of the key that raised the event. Examples \u2693\ufe0e Example: Show a Message when Ctrl-Z is Pressed Displays a simple message when Z is pressed while control is held. local function myOnKeyCallback ( e ) if ( e . isControlDown ) then tes3 . messageBox ({ message = \"You pressed Ctrl-Z, but you can't undo all your mistakes.\" }) end end -- Filter by the scan code to get Z key presses only. event . register ( tes3 . event . keyDown , myOnKeyCallback , { filter = tes3 . scanCode . z } )","title":"keyDown"},{"location":"events/keyDown/#keydown","text":"The key event fires when a key is pressed. --- @param e keyDownEventData local function keyDownCallback ( e ) end event . register ( tes3 . event . keyDown , keyDownCallback ) Tip This event can be filtered based on the keyCode event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"keyDown"},{"location":"events/keyDown/#event-data","text":"isAltDown (number): Read-only . True if either alt key is held. isControlDown (number): Read-only . True if either control key is held. isShiftDown (number): Read-only . True if either shift key is held. isSuperDown (number): Read-only . True if super (Windows key) is held. keyCode (number): Read-only . The scan code of the key that raised the event.","title":"Event Data"},{"location":"events/keyDown/#examples","text":"Example: Show a Message when Ctrl-Z is Pressed Displays a simple message when Z is pressed while control is held. local function myOnKeyCallback ( e ) if ( e . isControlDown ) then tes3 . messageBox ({ message = \"You pressed Ctrl-Z, but you can't undo all your mistakes.\" }) end end -- Filter by the scan code to get Z key presses only. event . register ( tes3 . event . keyDown , myOnKeyCallback , { filter = tes3 . scanCode . z } )","title":"Examples"},{"location":"events/keyUp/","text":"keyUp \u2693\ufe0e The key event fires when a key is released. --- @param e keyUpEventData local function keyUpCallback ( e ) end event . register ( tes3 . event . keyUp , keyUpCallback ) Tip This event can be filtered based on the keyCode event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e isAltDown (number): Read-only . True if either alt key is held. isControlDown (number): Read-only . True if either control key is held. isShiftDown (number): Read-only . True if either shift key is held. isSuperDown (number): Read-only . True if super (Windows key) is held. keyCode (number): Read-only . The scan code of the key that raised the event.","title":"keyUp"},{"location":"events/keyUp/#keyup","text":"The key event fires when a key is released. --- @param e keyUpEventData local function keyUpCallback ( e ) end event . register ( tes3 . event . keyUp , keyUpCallback ) Tip This event can be filtered based on the keyCode event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"keyUp"},{"location":"events/keyUp/#event-data","text":"isAltDown (number): Read-only . True if either alt key is held. isControlDown (number): Read-only . True if either control key is held. isShiftDown (number): Read-only . True if either shift key is held. isSuperDown (number): Read-only . True if super (Windows key) is held. keyCode (number): Read-only . The scan code of the key that raised the event.","title":"Event Data"},{"location":"events/keybindTested/","text":"keybindTested \u2693\ufe0e This event fires whenever a keybind is tested by the game. A keybind test is often used to see if a button is pressed, but it can also be done to see if an input was toggled or released. Blocking this event is equivalent to setting the result event data to false. --- @param e keybindTestedEventData local function keybindTestedCallback ( e ) end event . register ( tes3 . event . keybindTested , keybindTestedCallback ) Tip This event can be filtered based on the keybind event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e keybind (number): Read-only . The keybind that was tested. This maps to the tes3.keybind.* constants. result (boolean): The read state of the keybind. If true, the key was pressed/released/toggled as determined by the transition event data. transition (number): Read-only . The transition for the keybind that was tested. This is typically tes3.keyTransition.down but not guaranteed to be. Always be sure to check what transition is being used. Examples \u2693\ufe0e Example: Block Journal Keybind Prevents the journal keybind from ever being registered as pressed. --- @param e keybindTestedEventData local function noJournalMenu ( e ) -- We only care about checks to see if the key was pressed. if ( e . transition ~= tes3 . keyTransition . down ) then return end -- If the result was false, we also don't care. if ( not e . result ) then return end -- Set the result to false to make the game think the key wasn't pressed. -- We could also block this event by using `return false`. tes3 . messageBox ( \"You aren't allowed to open your journal.\" ) e . result = false end event . register ( tes3 . event . keybindTested , noJournalMenu , { filter = tes3 . keybind . journal })","title":"keybindTested"},{"location":"events/keybindTested/#keybindtested","text":"This event fires whenever a keybind is tested by the game. A keybind test is often used to see if a button is pressed, but it can also be done to see if an input was toggled or released. Blocking this event is equivalent to setting the result event data to false. --- @param e keybindTestedEventData local function keybindTestedCallback ( e ) end event . register ( tes3 . event . keybindTested , keybindTestedCallback ) Tip This event can be filtered based on the keybind event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"keybindTested"},{"location":"events/keybindTested/#event-data","text":"keybind (number): Read-only . The keybind that was tested. This maps to the tes3.keybind.* constants. result (boolean): The read state of the keybind. If true, the key was pressed/released/toggled as determined by the transition event data. transition (number): Read-only . The transition for the keybind that was tested. This is typically tes3.keyTransition.down but not guaranteed to be. Always be sure to check what transition is being used.","title":"Event Data"},{"location":"events/keybindTested/#examples","text":"Example: Block Journal Keybind Prevents the journal keybind from ever being registered as pressed. --- @param e keybindTestedEventData local function noJournalMenu ( e ) -- We only care about checks to see if the key was pressed. if ( e . transition ~= tes3 . keyTransition . down ) then return end -- If the result was false, we also don't care. if ( not e . result ) then return end -- Set the result to false to make the game think the key wasn't pressed. -- We could also block this event by using `return false`. tes3 . messageBox ( \"You aren't allowed to open your journal.\" ) e . result = false end event . register ( tes3 . event . keybindTested , noJournalMenu , { filter = tes3 . keybind . journal })","title":"Examples"},{"location":"events/keyframesLoad/","text":"keyframesLoad \u2693\ufe0e This event is triggered before a keyframes file is loaded. The path can be changed to instead load a different keyframes file. --- @param e keyframesLoadEventData local function keyframesLoadCallback ( e ) end event . register ( tes3 . event . keyframesLoad , keyframesLoadCallback ) Tip This event can be filtered based on the path event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e path (string): The path to the keyframes file, relative to Data Files\\Meshes. sequenceName (string): The name of the associated NiSequence object.","title":"keyframesLoad"},{"location":"events/keyframesLoad/#keyframesload","text":"This event is triggered before a keyframes file is loaded. The path can be changed to instead load a different keyframes file. --- @param e keyframesLoadEventData local function keyframesLoadCallback ( e ) end event . register ( tes3 . event . keyframesLoad , keyframesLoadCallback ) Tip This event can be filtered based on the path event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"keyframesLoad"},{"location":"events/keyframesLoad/#event-data","text":"path (string): The path to the keyframes file, relative to Data Files\\Meshes. sequenceName (string): The name of the associated NiSequence object.","title":"Event Data"},{"location":"events/levelUp/","text":"levelUp \u2693\ufe0e This even is called whenever the player successfully finishes leveling up. --- @param e levelUpEventData local function levelUpCallback ( e ) end event . register ( tes3 . event . levelUp , levelUpCallback ) Tip This event can be filtered based on the level event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e level (number): Read-only . The new level obtained.","title":"levelUp"},{"location":"events/levelUp/#levelup","text":"This even is called whenever the player successfully finishes leveling up. --- @param e levelUpEventData local function levelUpCallback ( e ) end event . register ( tes3 . event . levelUp , levelUpCallback ) Tip This event can be filtered based on the level event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"levelUp"},{"location":"events/levelUp/#event-data","text":"level (number): Read-only . The new level obtained.","title":"Event Data"},{"location":"events/leveledCreaturePicked/","text":"leveledCreaturePicked \u2693\ufe0e This event is called after any leveled creature list is resolved. The event may be filtered by its list, and its pick can be overwritten. While this event allows for customization, the leveled list may be altered directly as well. --- @param e leveledCreaturePickedEventData local function leveledCreaturePickedCallback ( e ) end event . register ( tes3 . event . leveledCreaturePicked , leveledCreaturePickedCallback ) Tip This event can be filtered based on the list event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e cell ( tes3cell , nil): The cell associated with the pick, if any. This may be the spawner 's cell, the temporarily created empty cell, or the cell the player's sleep was interrupted in. list ( tes3leveledCreature ): Read-only . The list responsible for creating a pick. pick ( tes3creature , nil): The result of the pick by vanilla mechanism. This can be modified to change the result to something else. source (string): The context that the creature is being spawned in. Valid values include: \"reference\" for when spawned from a placed leveled spawn; \"emptyCell\" for when the player is exploring empty, undefined exterior cells; \"sleepInterrupt\" for when a random creature is chosen to attack the player when resting; and \"script\" for otherwise scripted picking. spawner ( tes3reference , nil): If spawned from a placed leveled creature reference, this is a handle to the creating reference.","title":"leveledCreaturePicked"},{"location":"events/leveledCreaturePicked/#leveledcreaturepicked","text":"This event is called after any leveled creature list is resolved. The event may be filtered by its list, and its pick can be overwritten. While this event allows for customization, the leveled list may be altered directly as well. --- @param e leveledCreaturePickedEventData local function leveledCreaturePickedCallback ( e ) end event . register ( tes3 . event . leveledCreaturePicked , leveledCreaturePickedCallback ) Tip This event can be filtered based on the list event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"leveledCreaturePicked"},{"location":"events/leveledCreaturePicked/#event-data","text":"cell ( tes3cell , nil): The cell associated with the pick, if any. This may be the spawner 's cell, the temporarily created empty cell, or the cell the player's sleep was interrupted in. list ( tes3leveledCreature ): Read-only . The list responsible for creating a pick. pick ( tes3creature , nil): The result of the pick by vanilla mechanism. This can be modified to change the result to something else. source (string): The context that the creature is being spawned in. Valid values include: \"reference\" for when spawned from a placed leveled spawn; \"emptyCell\" for when the player is exploring empty, undefined exterior cells; \"sleepInterrupt\" for when a random creature is chosen to attack the player when resting; and \"script\" for otherwise scripted picking. spawner ( tes3reference , nil): If spawned from a placed leveled creature reference, this is a handle to the creating reference.","title":"Event Data"},{"location":"events/leveledItemPicked/","text":"leveledItemPicked \u2693\ufe0e This event is called after any leveled item list is resolved. --- @param e leveledItemPickedEventData local function leveledItemPickedCallback ( e ) end event . register ( tes3 . event . leveledItemPicked , leveledItemPickedCallback ) Tip This event can be filtered based on the list event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e list ( tes3leveledItem ): Read-only . The list responsible for creating a pick. pick ( tes3item ): The result of the pick by vanilla mechanism. spawner ( tes3reference , nil): The reference for the inventory that the item is being picked in. In many cases this may be nil .","title":"leveledItemPicked"},{"location":"events/leveledItemPicked/#leveleditempicked","text":"This event is called after any leveled item list is resolved. --- @param e leveledItemPickedEventData local function leveledItemPickedCallback ( e ) end event . register ( tes3 . event . leveledItemPicked , leveledItemPickedCallback ) Tip This event can be filtered based on the list event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"leveledItemPicked"},{"location":"events/leveledItemPicked/#event-data","text":"list ( tes3leveledItem ): Read-only . The list responsible for creating a pick. pick ( tes3item ): The result of the pick by vanilla mechanism. spawner ( tes3reference , nil): The reference for the inventory that the item is being picked in. In many cases this may be nil .","title":"Event Data"},{"location":"events/load/","text":"load \u2693\ufe0e The load event fires when the game is about to load. This event allows scripts to block loading. --- @param e loadEventData local function loadCallback ( e ) end event . register ( tes3 . event . load , loadCallback ) Tip This event can be filtered based on the filename event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e filename (string): The filename of the save we want to load, not including file extension. Can be modified to redirect to another save. newGame (boolean): Read-only . If true, a new game is being started. quickload (boolean): Read-only . If true, the load came from the quickload system.","title":"Load"},{"location":"events/load/#load","text":"The load event fires when the game is about to load. This event allows scripts to block loading. --- @param e loadEventData local function loadCallback ( e ) end event . register ( tes3 . event . load , loadCallback ) Tip This event can be filtered based on the filename event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"load"},{"location":"events/load/#event-data","text":"filename (string): The filename of the save we want to load, not including file extension. Can be modified to redirect to another save. newGame (boolean): Read-only . If true, a new game is being started. quickload (boolean): Read-only . If true, the load came from the quickload system.","title":"Event Data"},{"location":"events/loaded/","text":"loaded \u2693\ufe0e The loaded event fires after the game has been successfully loaded. This event is preceded by the load event. --- @param e loadedEventData local function loadedCallback ( e ) end event . register ( tes3 . event . loaded , loadedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e filename (string): Read-only . The filename of the save that was loaded, not including file extension. newGame (boolean): Read-only . If true, a new game was started. quickload (boolean): Read-only . If true, the load came from the quickload system.","title":"Loaded"},{"location":"events/loaded/#loaded","text":"The loaded event fires after the game has been successfully loaded. This event is preceded by the load event. --- @param e loadedEventData local function loadedCallback ( e ) end event . register ( tes3 . event . loaded , loadedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"loaded"},{"location":"events/loaded/#event-data","text":"filename (string): Read-only . The filename of the save that was loaded, not including file extension. newGame (boolean): Read-only . If true, a new game was started. quickload (boolean): Read-only . If true, the load came from the quickload system.","title":"Event Data"},{"location":"events/lockPick/","text":"lockPick \u2693\ufe0e This event fires when a lock is being picked. --- @param e lockPickEventData local function lockPickCallback ( e ) end event . register ( tes3 . event . lockPick , lockPickCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e chance (number): Read-only . The chance the lockpick will be successful. lockData ( tes3lockNode ): Read-only . The lock data of the reference. lockPresent (boolean): Read-only . Indicates if a lock is present on the reference. picker ( tes3mobileNPC ): Read-only . The Mobile NPC doing the disarming. reference ( tes3reference ): Read-only . The reference that triggered the event (container, door, etc.). tool ( tes3item ): Read-only . The item the picker is using to pick the lock. toolItemData ( tes3itemData ): Read-only . The item data for the tool.","title":"lockPick"},{"location":"events/lockPick/#lockpick","text":"This event fires when a lock is being picked. --- @param e lockPickEventData local function lockPickCallback ( e ) end event . register ( tes3 . event . lockPick , lockPickCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"lockPick"},{"location":"events/lockPick/#event-data","text":"chance (number): Read-only . The chance the lockpick will be successful. lockData ( tes3lockNode ): Read-only . The lock data of the reference. lockPresent (boolean): Read-only . Indicates if a lock is present on the reference. picker ( tes3mobileNPC ): Read-only . The Mobile NPC doing the disarming. reference ( tes3reference ): Read-only . The reference that triggered the event (container, door, etc.). tool ( tes3item ): Read-only . The item the picker is using to pick the lock. toolItemData ( tes3itemData ): Read-only . The item data for the tool.","title":"Event Data"},{"location":"events/magicCasted/","text":"magicCasted \u2693\ufe0e This event is triggered when any spell or enchant is cast successfully, or when any alchemy item is used. This includes spells cast via scripts. For spells, this occurs at the end of the casting animation. For spells and enchants, it is just after the magic projectile has been constructed. --- @param e magicCastedEventData local function magicCastedCallback ( e ) end event . register ( tes3 . event . magicCasted , magicCastedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e caster ( tes3reference ): Read-only . The caster of the spell. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches the caster. Touch spells can also have target parameter. On target spells don't have target parameter during this event, since it can't have a target until it hits it. Which isn't known when the spell is casted.","title":"magicCasted"},{"location":"events/magicCasted/#magiccasted","text":"This event is triggered when any spell or enchant is cast successfully, or when any alchemy item is used. This includes spells cast via scripts. For spells, this occurs at the end of the casting animation. For spells and enchants, it is just after the magic projectile has been constructed. --- @param e magicCastedEventData local function magicCastedCallback ( e ) end event . register ( tes3 . event . magicCasted , magicCastedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"magicCasted"},{"location":"events/magicCasted/#event-data","text":"caster ( tes3reference ): Read-only . The caster of the spell. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches the caster. Touch spells can also have target parameter. On target spells don't have target parameter during this event, since it can't have a target until it hits it. Which isn't known when the spell is casted.","title":"Event Data"},{"location":"events/magicEffectRemoved/","text":"magicEffectRemoved \u2693\ufe0e This event triggers when a magic effect has been removed from an actor. This includes magic effects that have been resisted or are part of abilities like racial passives and diseases. --- @param e magicEffectRemovedEventData local function magicEffectRemovedCallback ( e ) end event . register ( tes3 . event . magicEffectRemoved , magicEffectRemovedCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e caster ( tes3reference ): Read-only . The caster of the magic source that contained the magic effect. Can be nil . effect ( tes3effect ): Read-only . The specific effect that triggered the event. This is equal to e.source.effects[e.effectIndex] . Can be nil . effectIndex (number): Read-only . The index of the effect in the magic source's effects list. effectInstance ( tes3magicEffectInstance ): Read-only . The effect instance of the effect. mobile ( tes3mobileActor ): Read-only . The mobile actor the magic effect is removed from. reference ( tes3reference ): Read-only . The reference of the mobile actor the magic effect is removed from. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source that contains the effect. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source that contains the effect. target ( tes3reference ): Read-only . The target of the magic source that contained the magic effect. Can be nil . Examples \u2693\ufe0e Example: Show removed effect Show the name of the magic effect and spell/enchantment/alchemy that has been removed from the player. local function onMagicEffectRemoved ( e ) -- Make sure we are only showing messages for effects that are applied to the player. if e . mobile == tes3 . mobilePlayer then -- Get the name of the magic effect that has been removed. local effectName = tes3 . getMagicEffect ( e . effect . id ). name -- Get the name of the spell/enchantment/alchemy this magic effect belongs to. local sourceName = e . source . name -- Show a message containing the effect and spell/enchantment/alchemy names to the player. tes3 . messageBox ( \"Effect '%s' from '%s' has been removed.\" , effectName , sourceName ) end end event . register ( tes3 . event . magicEffectRemoved , onMagicEffectRemoved )","title":"magicEffectRemoved"},{"location":"events/magicEffectRemoved/#magiceffectremoved","text":"This event triggers when a magic effect has been removed from an actor. This includes magic effects that have been resisted or are part of abilities like racial passives and diseases. --- @param e magicEffectRemovedEventData local function magicEffectRemovedCallback ( e ) end event . register ( tes3 . event . magicEffectRemoved , magicEffectRemovedCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"magicEffectRemoved"},{"location":"events/magicEffectRemoved/#event-data","text":"caster ( tes3reference ): Read-only . The caster of the magic source that contained the magic effect. Can be nil . effect ( tes3effect ): Read-only . The specific effect that triggered the event. This is equal to e.source.effects[e.effectIndex] . Can be nil . effectIndex (number): Read-only . The index of the effect in the magic source's effects list. effectInstance ( tes3magicEffectInstance ): Read-only . The effect instance of the effect. mobile ( tes3mobileActor ): Read-only . The mobile actor the magic effect is removed from. reference ( tes3reference ): Read-only . The reference of the mobile actor the magic effect is removed from. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source that contains the effect. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source that contains the effect. target ( tes3reference ): Read-only . The target of the magic source that contained the magic effect. Can be nil .","title":"Event Data"},{"location":"events/magicEffectRemoved/#examples","text":"Example: Show removed effect Show the name of the magic effect and spell/enchantment/alchemy that has been removed from the player. local function onMagicEffectRemoved ( e ) -- Make sure we are only showing messages for effects that are applied to the player. if e . mobile == tes3 . mobilePlayer then -- Get the name of the magic effect that has been removed. local effectName = tes3 . getMagicEffect ( e . effect . id ). name -- Get the name of the spell/enchantment/alchemy this magic effect belongs to. local sourceName = e . source . name -- Show a message containing the effect and spell/enchantment/alchemy names to the player. tes3 . messageBox ( \"Effect '%s' from '%s' has been removed.\" , effectName , sourceName ) end end event . register ( tes3 . event . magicEffectRemoved , onMagicEffectRemoved )","title":"Examples"},{"location":"events/magicEffectsResolved/","text":"magicEffectsResolved \u2693\ufe0e This event triggers after all magic effect links have been resolved. This event is used to add new magic effects by using the tes3.addMagicEffect() function. For examples of this event in practice see the tes3.addMagicEffect() example. --- @param e magicEffectsResolvedEventData local function magicEffectsResolvedCallback ( e ) end event . register ( tes3 . event . magicEffectsResolved , magicEffectsResolvedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"magicEffectsResolved"},{"location":"events/magicEffectsResolved/#magiceffectsresolved","text":"This event triggers after all magic effect links have been resolved. This event is used to add new magic effects by using the tes3.addMagicEffect() function. For examples of this event in practice see the tes3.addMagicEffect() example. --- @param e magicEffectsResolvedEventData local function magicEffectsResolvedCallback ( e ) end event . register ( tes3 . event . magicEffectsResolved , magicEffectsResolvedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"magicEffectsResolved"},{"location":"events/menuEnter/","text":"menuEnter \u2693\ufe0e The menuEnter event fires when the player enters menu mode. --- @param e menuEnterEventData local function menuEnterCallback ( e ) end event . register ( tes3 . event . menuEnter , menuEnterCallback ) Tip This event can be filtered based on the menu.name event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e menu ( tes3uiElement ): Read-only . The new top-level menu. menuMode (boolean): Read-only . Always true for this event. This parameter is only useful when registering the same callback for menuEnter and menuExit events.","title":"menuEnter"},{"location":"events/menuEnter/#menuenter","text":"The menuEnter event fires when the player enters menu mode. --- @param e menuEnterEventData local function menuEnterCallback ( e ) end event . register ( tes3 . event . menuEnter , menuEnterCallback ) Tip This event can be filtered based on the menu.name event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"menuEnter"},{"location":"events/menuEnter/#event-data","text":"menu ( tes3uiElement ): Read-only . The new top-level menu. menuMode (boolean): Read-only . Always true for this event. This parameter is only useful when registering the same callback for menuEnter and menuExit events.","title":"Event Data"},{"location":"events/menuExit/","text":"menuExit \u2693\ufe0e The menuExit event fires when the player leaves menu mode. --- @param e menuExitEventData local function menuExitCallback ( e ) end event . register ( tes3 . event . menuExit , menuExitCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e menuMode (boolean): Read-only . Always true for this event. This parameter is only useful when registering the same callback for menuEnter and menuExit events.","title":"menuExit"},{"location":"events/menuExit/#menuexit","text":"The menuExit event fires when the player leaves menu mode. --- @param e menuExitEventData local function menuExitCallback ( e ) end event . register ( tes3 . event . menuExit , menuExitCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"menuExit"},{"location":"events/menuExit/#event-data","text":"menuMode (boolean): Read-only . Always true for this event. This parameter is only useful when registering the same callback for menuEnter and menuExit events.","title":"Event Data"},{"location":"events/meshLoad/","text":"meshLoad \u2693\ufe0e This event is triggered before a mesh is loaded. The path can be changed to instead load a different mesh. --- @param e meshLoadEventData local function meshLoadCallback ( e ) end event . register ( tes3 . event . meshLoad , meshLoadCallback ) Tip This event can be filtered based on the path event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e path (string): The path to the mesh, relative to Data Files\\Meshes","title":"meshLoad"},{"location":"events/meshLoad/#meshload","text":"This event is triggered before a mesh is loaded. The path can be changed to instead load a different mesh. --- @param e meshLoadEventData local function meshLoadCallback ( e ) end event . register ( tes3 . event . meshLoad , meshLoadCallback ) Tip This event can be filtered based on the path event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"meshLoad"},{"location":"events/meshLoad/#event-data","text":"path (string): The path to the mesh, relative to Data Files\\Meshes","title":"Event Data"},{"location":"events/meshLoaded/","text":"meshLoaded \u2693\ufe0e This event is triggered when a mesh is loaded. --- @param e meshLoadedEventData local function meshLoadedCallback ( e ) end event . register ( tes3 . event . meshLoaded , meshLoadedCallback ) Tip This event can be filtered based on the path event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e node ( niAVObject ): The niAVObject-derived object of the loaded mesh. path (string): The path to the mesh, relative to Data Files\\Meshes","title":"meshLoaded"},{"location":"events/meshLoaded/#meshloaded","text":"This event is triggered when a mesh is loaded. --- @param e meshLoadedEventData local function meshLoadedCallback ( e ) end event . register ( tes3 . event . meshLoaded , meshLoadedCallback ) Tip This event can be filtered based on the path event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"meshLoaded"},{"location":"events/meshLoaded/#event-data","text":"node ( niAVObject ): The niAVObject-derived object of the loaded mesh. path (string): The path to the mesh, relative to Data Files\\Meshes","title":"Event Data"},{"location":"events/mobileActivated/","text":"mobileActivated \u2693\ufe0e This event is called when a mobile object is activated. This includes NPCs, creatures and projectiles, but not the player. This may be the first time that a given reference has an associated mobile object attached to it. Typically this happens when a projectile gets fired, a creature gets summoned or when the player transitions from one cell to another, causing actors in newly loaded cells to get activated. --- @param e mobileActivatedEventData local function mobileActivatedCallback ( e ) end event . register ( tes3 . event . mobileActivated , mobileActivatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileObject ): Read-only . The activated mobile object. reference ( tes3reference ): Read-only . The reference that the mobile object has been activated for.","title":"mobileActivated"},{"location":"events/mobileActivated/#mobileactivated","text":"This event is called when a mobile object is activated. This includes NPCs, creatures and projectiles, but not the player. This may be the first time that a given reference has an associated mobile object attached to it. Typically this happens when a projectile gets fired, a creature gets summoned or when the player transitions from one cell to another, causing actors in newly loaded cells to get activated. --- @param e mobileActivatedEventData local function mobileActivatedCallback ( e ) end event . register ( tes3 . event . mobileActivated , mobileActivatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"mobileActivated"},{"location":"events/mobileActivated/#event-data","text":"mobile ( tes3mobileObject ): Read-only . The activated mobile object. reference ( tes3reference ): Read-only . The reference that the mobile object has been activated for.","title":"Event Data"},{"location":"events/mobileDeactivated/","text":"mobileDeactivated \u2693\ufe0e This event is called when a mobile object is deactivated. This includes NPCs, creatures and projectiles, but not the player. Typically this happens when an actor dies, a creature gets unsummoned, a projectile collides with something or expires or when the player transitions from one cell to another, causing actors in previously visited cells to get deactivated. --- @param e mobileDeactivatedEventData local function mobileDeactivatedCallback ( e ) end event . register ( tes3 . event . mobileDeactivated , mobileDeactivatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileObject ): Read-only . The deactivated mobile object. reference ( tes3reference ): Read-only . The reference that the mobile object has been deactivated for.","title":"mobileDeactivated"},{"location":"events/mobileDeactivated/#mobiledeactivated","text":"This event is called when a mobile object is deactivated. This includes NPCs, creatures and projectiles, but not the player. Typically this happens when an actor dies, a creature gets unsummoned, a projectile collides with something or expires or when the player transitions from one cell to another, causing actors in previously visited cells to get deactivated. --- @param e mobileDeactivatedEventData local function mobileDeactivatedCallback ( e ) end event . register ( tes3 . event . mobileDeactivated , mobileDeactivatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"mobileDeactivated"},{"location":"events/mobileDeactivated/#event-data","text":"mobile ( tes3mobileObject ): Read-only . The deactivated mobile object. reference ( tes3reference ): Read-only . The reference that the mobile object has been deactivated for.","title":"Event Data"},{"location":"events/modConfigReady/","text":"modConfigReady \u2693\ufe0e This event fires once MWSE's internal mod configuration menu code has initialized. This event is used in mods to register settings configuration menu using MCM API. --- @param e modConfigReadyEventData local function modConfigReadyCallback ( e ) end event . register ( tes3 . event . modConfigReady , modConfigReadyCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Examples \u2693\ufe0e Example: Basic MCM. local config = require ( \"MyMod.config\" ) local function onModConfigReady () local template = mwse . mcm . createTemplate ({ name = \"My Mod\" }) template : saveOnClose ( \"My Mod\" , config ) local settings = template : createSideBarPage ({ label = \"Settings\" }) settings . sidebar : createInfo ({ -- This text will be on the right-hand side block text = \"My Mod v. 1.0 \\n\\n Created by me. \\n\\n Hover over a feature for more info.\" }) settings : createOnOffButton ({ label = \"Feature\" , -- The text in the description will replace the text -- in sidebar on the right-hand side, when this button -- is hovered over. description = \"This feature does...\" , variable = mwse . mcm . createTableVariable ({ id = \"feature\" , table = config , }) }) end event . register ( tes3 . event . modConfigReady , onModConfigReady )","title":"modConfigReady"},{"location":"events/modConfigReady/#modconfigready","text":"This event fires once MWSE's internal mod configuration menu code has initialized. This event is used in mods to register settings configuration menu using MCM API. --- @param e modConfigReadyEventData local function modConfigReadyCallback ( e ) end event . register ( tes3 . event . modConfigReady , modConfigReadyCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"modConfigReady"},{"location":"events/modConfigReady/#examples","text":"Example: Basic MCM. local config = require ( \"MyMod.config\" ) local function onModConfigReady () local template = mwse . mcm . createTemplate ({ name = \"My Mod\" }) template : saveOnClose ( \"My Mod\" , config ) local settings = template : createSideBarPage ({ label = \"Settings\" }) settings . sidebar : createInfo ({ -- This text will be on the right-hand side block text = \"My Mod v. 1.0 \\n\\n Created by me. \\n\\n Hover over a feature for more info.\" }) settings : createOnOffButton ({ label = \"Feature\" , -- The text in the description will replace the text -- in sidebar on the right-hand side, when this button -- is hovered over. description = \"This feature does...\" , variable = mwse . mcm . createTableVariable ({ id = \"feature\" , table = config , }) }) end event . register ( tes3 . event . modConfigReady , onModConfigReady )","title":"Examples"},{"location":"events/mouseAxis/","text":"mouseAxis \u2693\ufe0e The mouseAxis event fires when the mouse is moved, providing deltaX and deltaY values. --- @param e mouseAxisEventData local function mouseAxisCallback ( e ) end event . register ( tes3 . event . mouseAxis , mouseAxisCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e deltaX (number): Read-only . The difference in horizontal mouse position from the previous frame. deltaY (number): Read-only . The difference in vertical mouse position from the previous frame. isAltDown (number): Read-only . True if alt is held. isControlDown (number): Read-only . True if control is held. isSuperDown (number): Read-only . True if super (Windows key) is held.","title":"mouseAxis"},{"location":"events/mouseAxis/#mouseaxis","text":"The mouseAxis event fires when the mouse is moved, providing deltaX and deltaY values. --- @param e mouseAxisEventData local function mouseAxisCallback ( e ) end event . register ( tes3 . event . mouseAxis , mouseAxisCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"mouseAxis"},{"location":"events/mouseAxis/#event-data","text":"deltaX (number): Read-only . The difference in horizontal mouse position from the previous frame. deltaY (number): Read-only . The difference in vertical mouse position from the previous frame. isAltDown (number): Read-only . True if alt is held. isControlDown (number): Read-only . True if control is held. isSuperDown (number): Read-only . True if super (Windows key) is held.","title":"Event Data"},{"location":"events/mouseButtonDown/","text":"mouseButtonDown \u2693\ufe0e This event fires when a button on the mouse is pressed. --- @param e mouseButtonDownEventData local function mouseButtonDownCallback ( e ) end event . register ( tes3 . event . mouseButtonDown , mouseButtonDownCallback ) Tip This event can be filtered based on the button event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e button (number): Read-only . The button index that was pressed. isAltDown (number): Read-only . True if alt is held. isControlDown (number): Read-only . True if control is held. isSuperDown (number): Read-only . True if super (Windows key) is held.","title":"mouseButtonDown"},{"location":"events/mouseButtonDown/#mousebuttondown","text":"This event fires when a button on the mouse is pressed. --- @param e mouseButtonDownEventData local function mouseButtonDownCallback ( e ) end event . register ( tes3 . event . mouseButtonDown , mouseButtonDownCallback ) Tip This event can be filtered based on the button event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"mouseButtonDown"},{"location":"events/mouseButtonDown/#event-data","text":"button (number): Read-only . The button index that was pressed. isAltDown (number): Read-only . True if alt is held. isControlDown (number): Read-only . True if control is held. isSuperDown (number): Read-only . True if super (Windows key) is held.","title":"Event Data"},{"location":"events/mouseButtonUp/","text":"mouseButtonUp \u2693\ufe0e This event fires when a button on the mouse is released. --- @param e mouseButtonUpEventData local function mouseButtonUpCallback ( e ) end event . register ( tes3 . event . mouseButtonUp , mouseButtonUpCallback ) Tip This event can be filtered based on the button event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e button (number): Read-only . The button index that was released. isAltDown (number): Read-only . True if alt is held. isControlDown (number): Read-only . True if control is held. isSuperDown (number): Read-only . True if super (Windows key) is held.","title":"mouseButtonUp"},{"location":"events/mouseButtonUp/#mousebuttonup","text":"This event fires when a button on the mouse is released. --- @param e mouseButtonUpEventData local function mouseButtonUpCallback ( e ) end event . register ( tes3 . event . mouseButtonUp , mouseButtonUpCallback ) Tip This event can be filtered based on the button event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"mouseButtonUp"},{"location":"events/mouseButtonUp/#event-data","text":"button (number): Read-only . The button index that was released. isAltDown (number): Read-only . True if alt is held. isControlDown (number): Read-only . True if control is held. isSuperDown (number): Read-only . True if super (Windows key) is held.","title":"Event Data"},{"location":"events/mouseWheel/","text":"mouseWheel \u2693\ufe0e The mouseWheel event fires when the mouse wheel is used, providing a delta value. --- @param e mouseWheelEventData local function mouseWheelCallback ( e ) end event . register ( tes3 . event . mouseWheel , mouseWheelCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e delta (number): Read-only . The direction and strength of the mouse wheel movement. This value is hardware dependent. isAltDown (number): Read-only . True if alt is held. isControlDown (number): Read-only . True if control is held. isSuperDown (number): Read-only . True if super (Windows key) is held.","title":"mouseWheel"},{"location":"events/mouseWheel/#mousewheel","text":"The mouseWheel event fires when the mouse wheel is used, providing a delta value. --- @param e mouseWheelEventData local function mouseWheelCallback ( e ) end event . register ( tes3 . event . mouseWheel , mouseWheelCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"mouseWheel"},{"location":"events/mouseWheel/#event-data","text":"delta (number): Read-only . The direction and strength of the mouse wheel movement. This value is hardware dependent. isAltDown (number): Read-only . True if alt is held. isControlDown (number): Read-only . True if control is held. isSuperDown (number): Read-only . True if super (Windows key) is held.","title":"Event Data"},{"location":"events/musicSelectTrack/","text":"musicSelectTrack \u2693\ufe0e The musicSelectTrack event occurs when new music is needed after a playing music track ends, or the combat situation changes. It allows you to select your own music for the current conditions by setting eventData.music. However, it does not control transitions to combat music, which in the future will be available in another event. --- @param e musicSelectTrackEventData local function musicSelectTrackCallback ( e ) end event . register ( tes3 . event . musicSelectTrack , musicSelectTrackCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e music (string): Optional . If set to the path of a given track (relative to Data Files/music), it will play the given path instead of a random one. situation (number): Read-only . Maps to tes3.musicSituation , indicating combat or non-combat music.","title":"musicSelectTrack"},{"location":"events/musicSelectTrack/#musicselecttrack","text":"The musicSelectTrack event occurs when new music is needed after a playing music track ends, or the combat situation changes. It allows you to select your own music for the current conditions by setting eventData.music. However, it does not control transitions to combat music, which in the future will be available in another event. --- @param e musicSelectTrackEventData local function musicSelectTrackCallback ( e ) end event . register ( tes3 . event . musicSelectTrack , musicSelectTrackCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"musicSelectTrack"},{"location":"events/musicSelectTrack/#event-data","text":"music (string): Optional . If set to the path of a given track (relative to Data Files/music), it will play the given path instead of a random one. situation (number): Read-only . Maps to tes3.musicSituation , indicating combat or non-combat music.","title":"Event Data"},{"location":"events/objectInvalidated/","text":"objectInvalidated \u2693\ufe0e This event is raised when reference is invalidated. This includes being removed from memory. This event can be used to safely remove references from tables. --- @param e objectInvalidatedEventData local function objectInvalidatedCallback ( e ) end event . register ( tes3 . event . objectInvalidated , objectInvalidatedCallback ) Tip This event can be filtered based on the object event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e object ( tes3baseObject ): Read-only . The object being invalidated. Can be a tes3reference.","title":"objectInvalidated"},{"location":"events/objectInvalidated/#objectinvalidated","text":"This event is raised when reference is invalidated. This includes being removed from memory. This event can be used to safely remove references from tables. --- @param e objectInvalidatedEventData local function objectInvalidatedCallback ( e ) end event . register ( tes3 . event . objectInvalidated , objectInvalidatedCallback ) Tip This event can be filtered based on the object event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"objectInvalidated"},{"location":"events/objectInvalidated/#event-data","text":"object ( tes3baseObject ): Read-only . The object being invalidated. Can be a tes3reference.","title":"Event Data"},{"location":"events/playGroup/","text":"playGroup \u2693\ufe0e This event is triggered when an animation is about to be played. --- @param e playGroupEventData local function playGroupCallback ( e ) end event . register ( tes3 . event . playGroup , playGroupCallback ) Tip This event can be filtered based on the reference event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e animationData ( tes3animationData ): Read-only . The related animation data. flags (number): Maps to values in tes3.animationStartFlag namespace. group (number): The animation group about to be played. Maps to values in tes3.animationGroup namespace. index (number): Read-only . The index of the body section the animation will be played on. Maps to values in tes3.animationBodySection namespace. loopCount (number): The number of times the animation is going to be played. Infinite looping is marked by -1 , while 0 means the animation will be played only once (no looping). reference ( tes3reference ): Read-only . The actor that is about to play the animation.","title":"playGroup"},{"location":"events/playGroup/#playgroup","text":"This event is triggered when an animation is about to be played. --- @param e playGroupEventData local function playGroupCallback ( e ) end event . register ( tes3 . event . playGroup , playGroupCallback ) Tip This event can be filtered based on the reference event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"playGroup"},{"location":"events/playGroup/#event-data","text":"animationData ( tes3animationData ): Read-only . The related animation data. flags (number): Maps to values in tes3.animationStartFlag namespace. group (number): The animation group about to be played. Maps to values in tes3.animationGroup namespace. index (number): Read-only . The index of the body section the animation will be played on. Maps to values in tes3.animationBodySection namespace. loopCount (number): The number of times the animation is going to be played. Infinite looping is marked by -1 , while 0 means the animation will be played only once (no looping). reference ( tes3reference ): Read-only . The actor that is about to play the animation.","title":"Event Data"},{"location":"events/playItemSound/","text":"playItemSound \u2693\ufe0e This event is triggered when the game is about to play a sound from an item. Can be blocked to play custom sound instead. --- @param e playItemSoundEventData local function playItemSoundCallback ( e ) end event . register ( tes3 . event . playItemSound , playItemSoundCallback ) Tip This event can be filtered based on the item event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e item ( tes3baseObject ): Read-only . The item for which the sound is about to be played. reference ( tes3reference ): Read-only . The actor reference that picked or dropped the item that's now about to play the sound. state (number): Read-only . Maps to values in tes3.itemSoundState namespace.","title":"playItemSound"},{"location":"events/playItemSound/#playitemsound","text":"This event is triggered when the game is about to play a sound from an item. Can be blocked to play custom sound instead. --- @param e playItemSoundEventData local function playItemSoundCallback ( e ) end event . register ( tes3 . event . playItemSound , playItemSoundCallback ) Tip This event can be filtered based on the item event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"playItemSound"},{"location":"events/playItemSound/#event-data","text":"item ( tes3baseObject ): Read-only . The item for which the sound is about to be played. reference ( tes3reference ): Read-only . The actor reference that picked or dropped the item that's now about to play the sound. state (number): Read-only . Maps to values in tes3.itemSoundState namespace.","title":"Event Data"},{"location":"events/postInfoResponse/","text":"postInfoResponse \u2693\ufe0e This event fires immediately after a dialogue response is processed. --- @param e postInfoResponseEventData local function postInfoResponseCallback ( e ) end event . register ( tes3 . event . postInfoResponse , postInfoResponseCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e command (string): Read-only . The command. dialogue ( tes3dialogue ): Read-only . The dialogue object. info ( tes3dialogueInfo ): Read-only . The dialogue info object. reference ( tes3reference ): Read-only . The reference. variables (tes3scriptVariables): Read-only . The script variables.","title":"postInfoResponse"},{"location":"events/postInfoResponse/#postinforesponse","text":"This event fires immediately after a dialogue response is processed. --- @param e postInfoResponseEventData local function postInfoResponseCallback ( e ) end event . register ( tes3 . event . postInfoResponse , postInfoResponseCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"postInfoResponse"},{"location":"events/postInfoResponse/#event-data","text":"command (string): Read-only . The command. dialogue ( tes3dialogue ): Read-only . The dialogue object. info ( tes3dialogueInfo ): Read-only . The dialogue info object. reference ( tes3reference ): Read-only . The reference. variables (tes3scriptVariables): Read-only . The script variables.","title":"Event Data"},{"location":"events/potionBrewFailed/","text":"potionBrewFailed \u2693\ufe0e The potionBrewFailed event is raised when the player fails a potion brew attempt. --- @param e potionBrewFailedEventData local function potionBrewFailedCallback ( e ) end event . register ( tes3 . event . potionBrewFailed , potionBrewFailedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e alembic ( tes3apparatus ): Read-only . The alembic apparatus used to create the potion. calcinator ( tes3apparatus ): Read-only . The calcinator apparatus used to create the potion. ingredients ( tes3ingredient []): Read-only . Ingredients which were used to create the potion. mortar ( tes3apparatus ): Read-only . The mortar apparatus used to create the potion. retort ( tes3apparatus ): Read-only . The retort apparatus used to create the potion.","title":"potionBrewFailed"},{"location":"events/potionBrewFailed/#potionbrewfailed","text":"The potionBrewFailed event is raised when the player fails a potion brew attempt. --- @param e potionBrewFailedEventData local function potionBrewFailedCallback ( e ) end event . register ( tes3 . event . potionBrewFailed , potionBrewFailedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"potionBrewFailed"},{"location":"events/potionBrewFailed/#event-data","text":"alembic ( tes3apparatus ): Read-only . The alembic apparatus used to create the potion. calcinator ( tes3apparatus ): Read-only . The calcinator apparatus used to create the potion. ingredients ( tes3ingredient []): Read-only . Ingredients which were used to create the potion. mortar ( tes3apparatus ): Read-only . The mortar apparatus used to create the potion. retort ( tes3apparatus ): Read-only . The retort apparatus used to create the potion.","title":"Event Data"},{"location":"events/potionBrewSkillCheck/","text":"potionBrewSkillCheck \u2693\ufe0e This event is triggered when the player attempts to brew a potion. It controls both the strength of the potion's effects, and if the brew is successful. These both use the player's stats, so the game combines them into one function. Because the potion effects are not determined yet, the potion data is not available. When using this event, use the example as a template for your own code. --- @param e potionBrewSkillCheckEventData local function potionBrewSkillCheckCallback ( e ) end event . register ( tes3 . event . potionBrewSkillCheck , potionBrewSkillCheckCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e alembic ( tes3apparatus ): Read-only . The alembic apparatus used to create the potion. calcinator ( tes3apparatus ): Read-only . The calcinator apparatus used to create the potion. ingredients ( tes3ingredient []): Read-only . Ingredients which were used to create the potion. mortar ( tes3apparatus ): Read-only . The mortar apparatus used to create the potion. potionStrength (number): Can be modified. The strength multiplier used to scale the potion effects. For each different effect, it can modify magnitude, duration, or both. This is initially equal to -1 if the potion failed to brew. retort ( tes3apparatus ): Read-only . The retort apparatus used to create the potion. success (boolean): Can be modified. Whether the brewing is successful. Examples \u2693\ufe0e Example: Vanilla potion skill check function local function brewSkillCheck ( e ) local player = tes3 . mobilePlayer local x = player . alchemy . current + 0.1 * player . intelligence . current + 0.1 * player . luck . current local roll = math.floor ( 100 * math.random ()) if ( roll <= x ) then local fPotionStrengthMult = tes3 . findGMST ( tes3 . gmst . fPotionStrengthMult ). value e . potionStrength = fPotionStrengthMult * e . mortar . quality * x e . success = true else e . potionStrength = - 1 e . success = false end end event . register ( tes3 . event . potionBrewSkillCheck , brewSkillCheck )","title":"potionBrewSkillCheck"},{"location":"events/potionBrewSkillCheck/#potionbrewskillcheck","text":"This event is triggered when the player attempts to brew a potion. It controls both the strength of the potion's effects, and if the brew is successful. These both use the player's stats, so the game combines them into one function. Because the potion effects are not determined yet, the potion data is not available. When using this event, use the example as a template for your own code. --- @param e potionBrewSkillCheckEventData local function potionBrewSkillCheckCallback ( e ) end event . register ( tes3 . event . potionBrewSkillCheck , potionBrewSkillCheckCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"potionBrewSkillCheck"},{"location":"events/potionBrewSkillCheck/#event-data","text":"alembic ( tes3apparatus ): Read-only . The alembic apparatus used to create the potion. calcinator ( tes3apparatus ): Read-only . The calcinator apparatus used to create the potion. ingredients ( tes3ingredient []): Read-only . Ingredients which were used to create the potion. mortar ( tes3apparatus ): Read-only . The mortar apparatus used to create the potion. potionStrength (number): Can be modified. The strength multiplier used to scale the potion effects. For each different effect, it can modify magnitude, duration, or both. This is initially equal to -1 if the potion failed to brew. retort ( tes3apparatus ): Read-only . The retort apparatus used to create the potion. success (boolean): Can be modified. Whether the brewing is successful.","title":"Event Data"},{"location":"events/potionBrewSkillCheck/#examples","text":"Example: Vanilla potion skill check function local function brewSkillCheck ( e ) local player = tes3 . mobilePlayer local x = player . alchemy . current + 0.1 * player . intelligence . current + 0.1 * player . luck . current local roll = math.floor ( 100 * math.random ()) if ( roll <= x ) then local fPotionStrengthMult = tes3 . findGMST ( tes3 . gmst . fPotionStrengthMult ). value e . potionStrength = fPotionStrengthMult * e . mortar . quality * x e . success = true else e . potionStrength = - 1 e . success = false end end event . register ( tes3 . event . potionBrewSkillCheck , brewSkillCheck )","title":"Examples"},{"location":"events/potionBrewed/","text":"potionBrewed \u2693\ufe0e The potionBrewed event is raised when the player brews a new potion. --- @param e potionBrewedEventData local function potionBrewedCallback ( e ) end event . register ( tes3 . event . potionBrewed , potionBrewedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e alembic ( tes3apparatus ): Read-only . The alembic apparatus used to create the potion. calcinator ( tes3apparatus ): Read-only . The calcinator apparatus used to create the potion. ingredients ( tes3ingredient []): Read-only . Ingredients which were used to create the potion. mortar ( tes3apparatus ): Read-only . The mortar apparatus used to create the potion. object ( tes3alchemy ): Read-only . The potion created by the player. retort ( tes3apparatus ): Read-only . The retort apparatus used to create the potion. Examples \u2693\ufe0e Example: Replace a brewed potion with a modified version event . register ( tes3 . event . potionBrewed , function ( e ) local p = { [ \"name\" ] = \"[*]\" .. e . object . name , [ \"mesh\" ] = e . object . mesh , [ \"icon\" ] = e . object . icon , [ \"weight\" ] = e . object . weight * 2 , [ \"value\" ] = e . object . value * 50 , [ \"effects\" ] = {}, } for i = 1 , 8 do p . effects [ i ] = e . object . effects [ i ] end local newPotion = tes3alchemy . create ( p ) tes3 . removeItem { reference = tes3 . player , item = e . object , playSound = false } tes3 . addItem { reference = tes3 . player , item = newPotion , playSound = false } end )","title":"potionBrewed"},{"location":"events/potionBrewed/#potionbrewed","text":"The potionBrewed event is raised when the player brews a new potion. --- @param e potionBrewedEventData local function potionBrewedCallback ( e ) end event . register ( tes3 . event . potionBrewed , potionBrewedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"potionBrewed"},{"location":"events/potionBrewed/#event-data","text":"alembic ( tes3apparatus ): Read-only . The alembic apparatus used to create the potion. calcinator ( tes3apparatus ): Read-only . The calcinator apparatus used to create the potion. ingredients ( tes3ingredient []): Read-only . Ingredients which were used to create the potion. mortar ( tes3apparatus ): Read-only . The mortar apparatus used to create the potion. object ( tes3alchemy ): Read-only . The potion created by the player. retort ( tes3apparatus ): Read-only . The retort apparatus used to create the potion.","title":"Event Data"},{"location":"events/potionBrewed/#examples","text":"Example: Replace a brewed potion with a modified version event . register ( tes3 . event . potionBrewed , function ( e ) local p = { [ \"name\" ] = \"[*]\" .. e . object . name , [ \"mesh\" ] = e . object . mesh , [ \"icon\" ] = e . object . icon , [ \"weight\" ] = e . object . weight * 2 , [ \"value\" ] = e . object . value * 50 , [ \"effects\" ] = {}, } for i = 1 , 8 do p . effects [ i ] = e . object . effects [ i ] end local newPotion = tes3alchemy . create ( p ) tes3 . removeItem { reference = tes3 . player , item = e . object , playSound = false } tes3 . addItem { reference = tes3 . player , item = newPotion , playSound = false } end )","title":"Examples"},{"location":"events/powerRecharged/","text":"powerRecharged \u2693\ufe0e This event triggers when a power is recharged, and may be used again. In Morrowind, powers are a type of spells which may be cast once per day and don't cost any magicka. --- @param e powerRechargedEventData local function powerRechargedCallback ( e ) end event . register ( tes3 . event . powerRecharged , powerRechargedCallback ) Tip This event can be filtered based on the power event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The actor whose power recharged. power ( tes3spell ): Read-only . A power which recharged. reference ( tes3reference ): Read-only . Mobile\u2019s associated reference.","title":"powerRecharged"},{"location":"events/powerRecharged/#powerrecharged","text":"This event triggers when a power is recharged, and may be used again. In Morrowind, powers are a type of spells which may be cast once per day and don't cost any magicka. --- @param e powerRechargedEventData local function powerRechargedCallback ( e ) end event . register ( tes3 . event . powerRecharged , powerRechargedCallback ) Tip This event can be filtered based on the power event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"powerRecharged"},{"location":"events/powerRecharged/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The actor whose power recharged. power ( tes3spell ): Read-only . A power which recharged. reference ( tes3reference ): Read-only . Mobile\u2019s associated reference.","title":"Event Data"},{"location":"events/preLevelUp/","text":"preLevelUp \u2693\ufe0e This event is triggered just before the player levels up. --- @param e preLevelUpEventData local function preLevelUpCallback ( e ) end event . register ( tes3 . event . preLevelUp , preLevelUpCallback ) Tip This event can be filtered based on the level event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e level (number): Read-only . The new level about to be obtained.","title":"preLevelUp"},{"location":"events/preLevelUp/#prelevelup","text":"This event is triggered just before the player levels up. --- @param e preLevelUpEventData local function preLevelUpCallback ( e ) end event . register ( tes3 . event . preLevelUp , preLevelUpCallback ) Tip This event can be filtered based on the level event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"preLevelUp"},{"location":"events/preLevelUp/#event-data","text":"level (number): Read-only . The new level about to be obtained.","title":"Event Data"},{"location":"events/preventRest/","text":"preventRest \u2693\ufe0e This event can be used to prevent the player from resting by returning false. --- @param e preventRestEventData local function preventRestCallback ( e ) end event . register ( tes3 . event . preventRest , preventRestCallback ) Tip This event can be filtered based on the mobile event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e mobile ( tes3mobileActor ): Read-only . The mobile actor that is preventing the player from resting. reference ( tes3reference ): Read-only . Mobile's associated reference.","title":"preventRest"},{"location":"events/preventRest/#preventrest","text":"This event can be used to prevent the player from resting by returning false. --- @param e preventRestEventData local function preventRestCallback ( e ) end event . register ( tes3 . event . preventRest , preventRestCallback ) Tip This event can be filtered based on the mobile event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"preventRest"},{"location":"events/preventRest/#event-data","text":"mobile ( tes3mobileActor ): Read-only . The mobile actor that is preventing the player from resting. reference ( tes3reference ): Read-only . Mobile's associated reference.","title":"Event Data"},{"location":"events/projectileExpire/","text":"projectileExpire \u2693\ufe0e The projectileExpire event fires just prior to a fired projectile expiring. --- @param e projectileExpireEventData local function projectileExpireCallback ( e ) end event . register ( tes3 . event . projectileExpire , projectileExpireCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e firingReference ( tes3reference ): Read-only . Reference to the actor that fired the projectile. firingWeapon ( tes3weapon ): Read-only . The weapon that fired the projectile. mobile ( tes3mobileProjectile ): Read-only . The mobile projectile that is expiring.","title":"projectileExpire"},{"location":"events/projectileExpire/#projectileexpire","text":"The projectileExpire event fires just prior to a fired projectile expiring. --- @param e projectileExpireEventData local function projectileExpireCallback ( e ) end event . register ( tes3 . event . projectileExpire , projectileExpireCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"projectileExpire"},{"location":"events/projectileExpire/#event-data","text":"firingReference ( tes3reference ): Read-only . Reference to the actor that fired the projectile. firingWeapon ( tes3weapon ): Read-only . The weapon that fired the projectile. mobile ( tes3mobileProjectile ): Read-only . The mobile projectile that is expiring.","title":"Event Data"},{"location":"events/projectileHitActor/","text":"projectileHitActor \u2693\ufe0e The projectileHitActor event fires when a projectile collides with an actor. --- @param e projectileHitActorEventData local function projectileHitActorCallback ( e ) end event . register ( tes3 . event . projectileHitActor , projectileHitActorCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e firingReference ( tes3reference ): Read-only . Reference to the actor that fired the projectile. firingWeapon ( tes3weapon ): Read-only . The weapon that fired the projectile. mobile ( tes3mobileProjectile ): Read-only . The mobile projectile that is expiring. target ( tes3reference ): Read-only . Reference to the actor that was hit.","title":"projectileHitActor"},{"location":"events/projectileHitActor/#projectilehitactor","text":"The projectileHitActor event fires when a projectile collides with an actor. --- @param e projectileHitActorEventData local function projectileHitActorCallback ( e ) end event . register ( tes3 . event . projectileHitActor , projectileHitActorCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"projectileHitActor"},{"location":"events/projectileHitActor/#event-data","text":"firingReference ( tes3reference ): Read-only . Reference to the actor that fired the projectile. firingWeapon ( tes3weapon ): Read-only . The weapon that fired the projectile. mobile ( tes3mobileProjectile ): Read-only . The mobile projectile that is expiring. target ( tes3reference ): Read-only . Reference to the actor that was hit.","title":"Event Data"},{"location":"events/projectileHitObject/","text":"projectileHitObject \u2693\ufe0e The projectileHitObject event fires when a projectile collides with an object. --- @param e projectileHitObjectEventData local function projectileHitObjectCallback ( e ) end event . register ( tes3 . event . projectileHitObject , projectileHitObjectCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e collisionPoint ( tes3vector3 ): Read-only . The collision point of the mobile projectile. firingReference ( tes3reference ): Read-only . Reference to the actor that fired the projectile. firingWeapon ( tes3weapon ): Read-only . The weapon that fired the projectile. mobile ( tes3mobileProjectile ): Read-only . The mobile projectile that is expiring. target ( tes3reference ): Read-only . Reference to the object that was hit.","title":"projectileHitObject"},{"location":"events/projectileHitObject/#projectilehitobject","text":"The projectileHitObject event fires when a projectile collides with an object. --- @param e projectileHitObjectEventData local function projectileHitObjectCallback ( e ) end event . register ( tes3 . event . projectileHitObject , projectileHitObjectCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"projectileHitObject"},{"location":"events/projectileHitObject/#event-data","text":"collisionPoint ( tes3vector3 ): Read-only . The collision point of the mobile projectile. firingReference ( tes3reference ): Read-only . Reference to the actor that fired the projectile. firingWeapon ( tes3weapon ): Read-only . The weapon that fired the projectile. mobile ( tes3mobileProjectile ): Read-only . The mobile projectile that is expiring. target ( tes3reference ): Read-only . Reference to the object that was hit.","title":"Event Data"},{"location":"events/projectileHitTerrain/","text":"projectileHitTerrain \u2693\ufe0e The projectileHitTerrain event fires when a projectile collides with terrain. --- @param e projectileHitTerrainEventData local function projectileHitTerrainCallback ( e ) end event . register ( tes3 . event . projectileHitTerrain , projectileHitTerrainCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e collisionPoint ( tes3vector3 ): Read-only . The collision point of the mobile projectile. firingReference ( tes3reference ): Read-only . Reference to the actor that fired the projectile. firingWeapon ( tes3weapon ): Read-only . The weapon that fired the projectile. mobile ( tes3mobileProjectile ): Read-only . The mobile projectile that is expiring. position ( tes3vector3 ): Read-only . The position of the mobile projectile. velocity ( tes3vector3 ): Read-only . The velocity of the mobile projectile.","title":"projectileHitTerrain"},{"location":"events/projectileHitTerrain/#projectilehitterrain","text":"The projectileHitTerrain event fires when a projectile collides with terrain. --- @param e projectileHitTerrainEventData local function projectileHitTerrainCallback ( e ) end event . register ( tes3 . event . projectileHitTerrain , projectileHitTerrainCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"projectileHitTerrain"},{"location":"events/projectileHitTerrain/#event-data","text":"collisionPoint ( tes3vector3 ): Read-only . The collision point of the mobile projectile. firingReference ( tes3reference ): Read-only . Reference to the actor that fired the projectile. firingWeapon ( tes3weapon ): Read-only . The weapon that fired the projectile. mobile ( tes3mobileProjectile ): Read-only . The mobile projectile that is expiring. position ( tes3vector3 ): Read-only . The position of the mobile projectile. velocity ( tes3vector3 ): Read-only . The velocity of the mobile projectile.","title":"Event Data"},{"location":"events/referenceActivated/","text":"referenceActivated \u2693\ufe0e This event is triggered when a reference is activated. --- @param e referenceActivatedEventData local function referenceActivatedCallback ( e ) end event . register ( tes3 . event . referenceActivated , referenceActivatedCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e reference ( tes3reference ): Read-only . The reference which was activated.","title":"referenceActivated"},{"location":"events/referenceActivated/#referenceactivated","text":"This event is triggered when a reference is activated. --- @param e referenceActivatedEventData local function referenceActivatedCallback ( e ) end event . register ( tes3 . event . referenceActivated , referenceActivatedCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"referenceActivated"},{"location":"events/referenceActivated/#event-data","text":"reference ( tes3reference ): Read-only . The reference which was activated.","title":"Event Data"},{"location":"events/referenceDeactivated/","text":"referenceDeactivated \u2693\ufe0e This event is triggered when a reference is deactivated. --- @param e referenceDeactivatedEventData local function referenceDeactivatedCallback ( e ) end event . register ( tes3 . event . referenceDeactivated , referenceDeactivatedCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e reference ( tes3reference ): Read-only . The reference which was deactivated.","title":"referenceDeactivated"},{"location":"events/referenceDeactivated/#referencedeactivated","text":"This event is triggered when a reference is deactivated. --- @param e referenceDeactivatedEventData local function referenceDeactivatedCallback ( e ) end event . register ( tes3 . event . referenceDeactivated , referenceDeactivatedCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"referenceDeactivated"},{"location":"events/referenceDeactivated/#event-data","text":"reference ( tes3reference ): Read-only . The reference which was deactivated.","title":"Event Data"},{"location":"events/referenceSceneNodeCreated/","text":"referenceSceneNodeCreated \u2693\ufe0e This event fires when a SceneNode is created for a reference. --- @param e referenceSceneNodeCreatedEventData local function referenceSceneNodeCreatedCallback ( e ) end event . register ( tes3 . event . referenceSceneNodeCreated , referenceSceneNodeCreatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e reference ( tes3reference ): Read-only . Reference that the SceneNode was created for.","title":"referenceSceneNodeCreated"},{"location":"events/referenceSceneNodeCreated/#referencescenenodecreated","text":"This event fires when a SceneNode is created for a reference. --- @param e referenceSceneNodeCreatedEventData local function referenceSceneNodeCreatedCallback ( e ) end event . register ( tes3 . event . referenceSceneNodeCreated , referenceSceneNodeCreatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"referenceSceneNodeCreated"},{"location":"events/referenceSceneNodeCreated/#event-data","text":"reference ( tes3reference ): Read-only . Reference that the SceneNode was created for.","title":"Event Data"},{"location":"events/restInterrupt/","text":"restInterrupt \u2693\ufe0e This event is invoked when a rest is about to be interrupted. The ambushing spawn can be overridden by changing the creature parameter. --- @param e restInterruptEventData local function restInterruptCallback ( e ) end event . register ( tes3 . event . restInterrupt , restInterruptCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e creature ( tes3creature , tes3npc , tes3leveledCreature ): The creature that is interrupting rest. Can be set to a creature, NPC, or leveled creature. resting (boolean): Read-only . If true, the player is attempting to rest, as opposed to wait. waiting (boolean): Read-only . If true, the player is attempting to wait, as opposed to rest.","title":"restInterrupt"},{"location":"events/restInterrupt/#restinterrupt","text":"This event is invoked when a rest is about to be interrupted. The ambushing spawn can be overridden by changing the creature parameter. --- @param e restInterruptEventData local function restInterruptCallback ( e ) end event . register ( tes3 . event . restInterrupt , restInterruptCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"restInterrupt"},{"location":"events/restInterrupt/#event-data","text":"creature ( tes3creature , tes3npc , tes3leveledCreature ): The creature that is interrupting rest. Can be set to a creature, NPC, or leveled creature. resting (boolean): Read-only . If true, the player is attempting to rest, as opposed to wait. waiting (boolean): Read-only . If true, the player is attempting to wait, as opposed to rest.","title":"Event Data"},{"location":"events/save/","text":"save \u2693\ufe0e The save event fires when the game is about to save. This event allows scripts to block saving. --- @param e saveEventData local function saveCallback ( e ) end event . register ( tes3 . event . save , saveCallback ) Tip This event can be filtered based on the filename event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e filename (string): The filename of the save, not including file extension. name (string): The user facing name of the save, shown in the load/save game menu.","title":"Save"},{"location":"events/save/#save","text":"The save event fires when the game is about to save. This event allows scripts to block saving. --- @param e saveEventData local function saveCallback ( e ) end event . register ( tes3 . event . save , saveCallback ) Tip This event can be filtered based on the filename event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"save"},{"location":"events/save/#event-data","text":"filename (string): The filename of the save, not including file extension. name (string): The user facing name of the save, shown in the load/save game menu.","title":"Event Data"},{"location":"events/saved/","text":"saved \u2693\ufe0e The saved event fires after the game has successfully been saved. This event is preceded by the save event. --- @param e savedEventData local function savedCallback ( e ) end event . register ( tes3 . event . saved , savedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e filename (string): The filename of the save, not including file extension. name (string): The user facing name of the save, shown in the load/save game menu.","title":"Saved"},{"location":"events/saved/#saved","text":"The saved event fires after the game has successfully been saved. This event is preceded by the save event. --- @param e savedEventData local function savedCallback ( e ) end event . register ( tes3 . event . saved , savedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"saved"},{"location":"events/saved/#event-data","text":"filename (string): The filename of the save, not including file extension. name (string): The user facing name of the save, shown in the load/save game menu.","title":"Event Data"},{"location":"events/simulate/","text":"simulate \u2693\ufe0e The simulate event occurs at the start of every frame, excluding when the game is paused or in menu mode. --- @param e simulateEventData local function simulateCallback ( e ) end event . register ( tes3 . event . simulate , simulateCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e delta (number): Read-only . The number of seconds since the last frame. menuMode (boolean): Read-only . Always false, maintained only for consistency with the enterFrame event. timestamp (number): Read-only . The number of hours since the beginning of the 3rd Era (similar to the Unix Epoch).","title":"Simulate"},{"location":"events/simulate/#simulate","text":"The simulate event occurs at the start of every frame, excluding when the game is paused or in menu mode. --- @param e simulateEventData local function simulateCallback ( e ) end event . register ( tes3 . event . simulate , simulateCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"simulate"},{"location":"events/simulate/#event-data","text":"delta (number): Read-only . The number of seconds since the last frame. menuMode (boolean): Read-only . Always false, maintained only for consistency with the enterFrame event. timestamp (number): Read-only . The number of hours since the beginning of the 3rd Era (similar to the Unix Epoch).","title":"Event Data"},{"location":"events/skillRaised/","text":"skillRaised \u2693\ufe0e This event is invoked whenever the player naturally gains a new level a skill. This is typically through exercise, training, or reading books. --- @param e skillRaisedEventData local function skillRaisedCallback ( e ) end event . register ( tes3 . event . skillRaised , skillRaisedCallback ) Tip This event can be filtered based on the skill event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e level (number): Read-only . The new level of the skill. skill (integer): Read-only . The skill that gained a new level experience. Maps to values from tes3.skill table. source (string): Read-only . The source of the skill raise. Maps to values in tes3.skillRaiseSource enumeration.","title":"skillRaised"},{"location":"events/skillRaised/#skillraised","text":"This event is invoked whenever the player naturally gains a new level a skill. This is typically through exercise, training, or reading books. --- @param e skillRaisedEventData local function skillRaisedCallback ( e ) end event . register ( tes3 . event . skillRaised , skillRaisedCallback ) Tip This event can be filtered based on the skill event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"skillRaised"},{"location":"events/skillRaised/#event-data","text":"level (number): Read-only . The new level of the skill. skill (integer): Read-only . The skill that gained a new level experience. Maps to values from tes3.skill table. source (string): Read-only . The source of the skill raise. Maps to values in tes3.skillRaiseSource enumeration.","title":"Event Data"},{"location":"events/soundObjectPlay/","text":"soundObjectPlay \u2693\ufe0e This event triggers before certain object sounds are about to be played. For example, item pickup sounds. --- @param e soundObjectPlayEventData local function soundObjectPlayCallback ( e ) end event . register ( tes3 . event . soundObjectPlay , soundObjectPlayCallback ) Tip This event can be filtered based on the sound event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e flags (number): A flag whether the sound is looping or not. 0 means the sound doesn't loop, 1 means the sound loops. isNot3D (boolean): pitch (number): The pitch-shift multiplier. For 22kHz audio (most typical) it can have the range [0.005, 4.5]; for 44kHz audio it can have the range [0.0025, 2.25]. sound ( tes3sound ): The sound about to be played. volume (number): The volume of the sound. In range [1, 250].","title":"soundObjectPlay"},{"location":"events/soundObjectPlay/#soundobjectplay","text":"This event triggers before certain object sounds are about to be played. For example, item pickup sounds. --- @param e soundObjectPlayEventData local function soundObjectPlayCallback ( e ) end event . register ( tes3 . event . soundObjectPlay , soundObjectPlayCallback ) Tip This event can be filtered based on the sound event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"soundObjectPlay"},{"location":"events/soundObjectPlay/#event-data","text":"flags (number): A flag whether the sound is looping or not. 0 means the sound doesn't loop, 1 means the sound loops. isNot3D (boolean): pitch (number): The pitch-shift multiplier. For 22kHz audio (most typical) it can have the range [0.005, 4.5]; for 44kHz audio it can have the range [0.0025, 2.25]. sound ( tes3sound ): The sound about to be played. volume (number): The volume of the sound. In range [1, 250].","title":"Event Data"},{"location":"events/spellCast/","text":"spellCast \u2693\ufe0e This event is triggered just before a spell cast is resolved, at the end of the casting animation. It can control the success chance of the spell cast. --- @param e spellCastEventData local function spellCastCallback ( e ) end event . register ( tes3 . event . spellCast , spellCastCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e castChance (number): The percentage chance of the caster successfully casting the spell. May be modified. Setting it to 0 will cause the cast to fail. caster ( tes3reference ): Read-only . The caster of the spell. source ( tes3spell ): Read-only . The magic source. weakestSchool (number): Read-only . Of all the magic effects in the spell, there is a magic school which the caster has the lowest skill at casting. This school determines which skill will gain experience on a successful cast.","title":"spellCast"},{"location":"events/spellCast/#spellcast","text":"This event is triggered just before a spell cast is resolved, at the end of the casting animation. It can control the success chance of the spell cast. --- @param e spellCastEventData local function spellCastCallback ( e ) end event . register ( tes3 . event . spellCast , spellCastCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"spellCast"},{"location":"events/spellCast/#event-data","text":"castChance (number): The percentage chance of the caster successfully casting the spell. May be modified. Setting it to 0 will cause the cast to fail. caster ( tes3reference ): Read-only . The caster of the spell. source ( tes3spell ): Read-only . The magic source. weakestSchool (number): Read-only . Of all the magic effects in the spell, there is a magic school which the caster has the lowest skill at casting. This school determines which skill will gain experience on a successful cast.","title":"Event Data"},{"location":"events/spellCasted/","text":"spellCasted \u2693\ufe0e This event is triggered when any spell is cast successfully; this includes spells cast via scripts. This occurs at the end of the casting animation, just after the magic projectile has been constructed. --- @param e spellCastedEventData local function spellCastedCallback ( e ) end event . register ( tes3 . event . spellCasted , spellCastedCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e caster ( tes3reference ): Read-only . The caster of the spell. expGainSchool (number): Of all the magic effects in the spell, there is a magic school which the caster has the lowest skill at casting. This school determines which skill will gain experience on a successful cast. This school can be altered, or set to nil to remove experience gain, possibly in favour of your own experience calculation. source ( tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches the caster. Touch spells can also have target parameter. On target spells don't have target parameter during this event, since it can't have a target until it hits it. Which isn't known when the spell is casted.","title":"spellCasted"},{"location":"events/spellCasted/#spellcasted","text":"This event is triggered when any spell is cast successfully; this includes spells cast via scripts. This occurs at the end of the casting animation, just after the magic projectile has been constructed. --- @param e spellCastedEventData local function spellCastedCallback ( e ) end event . register ( tes3 . event . spellCasted , spellCastedCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"spellCasted"},{"location":"events/spellCasted/#event-data","text":"caster ( tes3reference ): Read-only . The caster of the spell. expGainSchool (number): Of all the magic effects in the spell, there is a magic school which the caster has the lowest skill at casting. This school determines which skill will gain experience on a successful cast. This school can be altered, or set to nil to remove experience gain, possibly in favour of your own experience calculation. source ( tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches the caster. Touch spells can also have target parameter. On target spells don't have target parameter during this event, since it can't have a target until it hits it. Which isn't known when the spell is casted.","title":"Event Data"},{"location":"events/spellCastedFailure/","text":"spellCastedFailure \u2693\ufe0e This event is triggered when any spell fails to cast due to failing the cast chance check. It does not trigger when there is insufficient magicka. --- @param e spellCastedFailureEventData local function spellCastedFailureCallback ( e ) end event . register ( tes3 . event . spellCastedFailure , spellCastedFailureCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e caster ( tes3reference ): Read-only . The caster of the spell. expGainSchool (number): Of all the magic effects in the spell, there is a magic school which the caster has the lowest skill at casting. This school determines which skill will gain experience on a successful cast. This school can be altered, or set to nil to remove experience gain, possibly in favour of your own experience calculation. source ( tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches caster.","title":"spellCastedFailure"},{"location":"events/spellCastedFailure/#spellcastedfailure","text":"This event is triggered when any spell fails to cast due to failing the cast chance check. It does not trigger when there is insufficient magicka. --- @param e spellCastedFailureEventData local function spellCastedFailureCallback ( e ) end event . register ( tes3 . event . spellCastedFailure , spellCastedFailureCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"spellCastedFailure"},{"location":"events/spellCastedFailure/#event-data","text":"caster ( tes3reference ): Read-only . The caster of the spell. expGainSchool (number): Of all the magic effects in the spell, there is a magic school which the caster has the lowest skill at casting. This school determines which skill will gain experience on a successful cast. This school can be altered, or set to nil to remove experience gain, possibly in favour of your own experience calculation. source ( tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches caster.","title":"Event Data"},{"location":"events/spellCreated/","text":"spellCreated \u2693\ufe0e This event is triggered when a new spell is created using spellmaking services or by a script using tes3spell.create() . --- @param e spellCreatedEventData local function spellCreatedCallback ( e ) end event . register ( tes3 . event . spellCreated , spellCreatedCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e source (string): Was the origin of the spell spellmaker or a script? Maps to values in tes3.spellSource namespace. spell ( tes3spell ): A spell which was created.","title":"spellCreated"},{"location":"events/spellCreated/#spellcreated","text":"This event is triggered when a new spell is created using spellmaking services or by a script using tes3spell.create() . --- @param e spellCreatedEventData local function spellCreatedCallback ( e ) end event . register ( tes3 . event . spellCreated , spellCreatedCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"spellCreated"},{"location":"events/spellCreated/#event-data","text":"source (string): Was the origin of the spell spellmaker or a script? Maps to values in tes3.spellSource namespace. spell ( tes3spell ): A spell which was created.","title":"Event Data"},{"location":"events/spellMagickaUse/","text":"spellMagickaUse \u2693\ufe0e This event is triggered just before a spell or power is used by any actor. It allows modification of the magicka required to cast the spell. Magicka cost change is not reflected in the UI system, because the UI does not expect spell costs to change. --- @param e spellMagickaUseEventData local function spellMagickaUseCallback ( e ) end event . register ( tes3 . event . spellMagickaUse , spellMagickaUseCallback ) Tip This event can be filtered based on the caster event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e caster ( tes3reference ): Read-only . The caster of the spell. cost (integer): The magicka cost required to cast the spell. May be modified. instance ( tes3magicSourceInstance ): The magic source instance. spell ( tes3spell ): Read-only . The spell being cast.","title":"spellMagickaUse"},{"location":"events/spellMagickaUse/#spellmagickause","text":"This event is triggered just before a spell or power is used by any actor. It allows modification of the magicka required to cast the spell. Magicka cost change is not reflected in the UI system, because the UI does not expect spell costs to change. --- @param e spellMagickaUseEventData local function spellMagickaUseCallback ( e ) end event . register ( tes3 . event . spellMagickaUse , spellMagickaUseCallback ) Tip This event can be filtered based on the caster event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"spellMagickaUse"},{"location":"events/spellMagickaUse/#event-data","text":"caster ( tes3reference ): Read-only . The caster of the spell. cost (integer): The magicka cost required to cast the spell. May be modified. instance ( tes3magicSourceInstance ): The magic source instance. spell ( tes3spell ): Read-only . The spell being cast.","title":"Event Data"},{"location":"events/spellResist/","text":"spellResist \u2693\ufe0e This event is used when calculating an actor's magic effect resistance, and allows Lua scripts to override the behavior of magic effect resistance by changing the resistedPercent value. This can be used to enable willpower-based resistance checks, provide specific resistances to specific spells, spells that heal instead of harm, and a variety of new mechanics. --- @param e spellResistEventData local function spellResistCallback ( e ) end event . register ( tes3 . event . spellResist , spellResistCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e caster ( tes3reference ): Read-only . The caster of the spell. effect ( tes3effect ): Read-only . The specific effect that triggered the event. This is equal as doing e.source.effects[effectIndex] . This field may not always be available. effectIndex (number): Read-only . The index of the effect in source's effects list. effectInstance ( tes3magicEffectInstance ): Read-only . The unique instance of the magic effect. resistAttribute (number): Read-only . The attribute resisted. This is an index into a tes3mobileActor.effectAttributes . Note that the index here is 0-based, while Lua is 1-based. resistedPercent (number): The percent of the spell that has been resisted. This can be modified, but a value outside the range of 0 to 100 does not have consistent effects. For fire damage, for example, a value over 100 causes the spell to heal the target instead of harming them. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. spellCastChance (number): Read-only . The cast chance of the magic source. This is only available if the source is a spell or an enchantment. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches caster.","title":"spellResist"},{"location":"events/spellResist/#spellresist","text":"This event is used when calculating an actor's magic effect resistance, and allows Lua scripts to override the behavior of magic effect resistance by changing the resistedPercent value. This can be used to enable willpower-based resistance checks, provide specific resistances to specific spells, spells that heal instead of harm, and a variety of new mechanics. --- @param e spellResistEventData local function spellResistCallback ( e ) end event . register ( tes3 . event . spellResist , spellResistCallback ) Tip This event can be filtered based on the source event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"spellResist"},{"location":"events/spellResist/#event-data","text":"caster ( tes3reference ): Read-only . The caster of the spell. effect ( tes3effect ): Read-only . The specific effect that triggered the event. This is equal as doing e.source.effects[effectIndex] . This field may not always be available. effectIndex (number): Read-only . The index of the effect in source's effects list. effectInstance ( tes3magicEffectInstance ): Read-only . The unique instance of the magic effect. resistAttribute (number): Read-only . The attribute resisted. This is an index into a tes3mobileActor.effectAttributes . Note that the index here is 0-based, while Lua is 1-based. resistedPercent (number): The percent of the spell that has been resisted. This can be modified, but a value outside the range of 0 to 100 does not have consistent effects. For fire damage, for example, a value over 100 causes the spell to heal the target instead of harming them. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. spellCastChance (number): Read-only . The cast chance of the magic source. This is only available if the source is a spell or an enchantment. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches caster.","title":"Event Data"},{"location":"events/spellResisted/","text":"spellResisted \u2693\ufe0e This event triggers when a magic effect has been resisted by an actor, including magic effects from sources like spells, enchantments and potions. This event can trigger multiple times per source, once for each resisted effect. --- @param e spellResistedEventData local function spellResistedCallback ( e ) end event . register ( tes3 . event . spellResisted , spellResistedCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e caster ( tes3reference ): Read-only . The caster of the magic source that contained the magic effect. Can be nil . effect ( tes3effect ): Read-only . The specific effect that triggered the event. This is equal to e.source.effects[e.effectIndex] . effectIndex (number): Read-only . The index of the effect in the magic source's effects list. mobile ( tes3mobileActor ): Read-only . The mobile actor that resisted the magic effect. reference ( tes3reference ): Read-only . The reference of the mobile actor that resisted the magic effect. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source that contains the effect. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source that contains the effect. target ( tes3reference ): Read-only . The target of the magic source that contained the magic effect. Can be nil . Examples \u2693\ufe0e Example: Learn resisted spells Makes actors learn the spell they resisted. local function onSpellResisted ( e ) -- We only want this to apply to spells. This event can also trigger for other sources like potions/enchantments. if e . source . objectType == tes3 . objectType . spell then -- Add the resisted spell to the actor that resisted it. tes3 . addSpell { reference = e . reference , spell = e . source } -- If it is the player that learned the spell, show a message with the name of the spell. if e . reference == tes3 . player then tes3 . messageBox ( \"You learned the '%s' spell.\" , e . source . name ) end end end event . register ( tes3 . register . spellResisted , onSpellResisted )","title":"spellResisted"},{"location":"events/spellResisted/#spellresisted","text":"This event triggers when a magic effect has been resisted by an actor, including magic effects from sources like spells, enchantments and potions. This event can trigger multiple times per source, once for each resisted effect. --- @param e spellResistedEventData local function spellResistedCallback ( e ) end event . register ( tes3 . event . spellResisted , spellResistedCallback ) Tip This event can be filtered based on the reference event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"spellResisted"},{"location":"events/spellResisted/#event-data","text":"caster ( tes3reference ): Read-only . The caster of the magic source that contained the magic effect. Can be nil . effect ( tes3effect ): Read-only . The specific effect that triggered the event. This is equal to e.source.effects[e.effectIndex] . effectIndex (number): Read-only . The index of the effect in the magic source's effects list. mobile ( tes3mobileActor ): Read-only . The mobile actor that resisted the magic effect. reference ( tes3reference ): Read-only . The reference of the mobile actor that resisted the magic effect. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source that contains the effect. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source that contains the effect. target ( tes3reference ): Read-only . The target of the magic source that contained the magic effect. Can be nil .","title":"Event Data"},{"location":"events/spellResisted/#examples","text":"Example: Learn resisted spells Makes actors learn the spell they resisted. local function onSpellResisted ( e ) -- We only want this to apply to spells. This event can also trigger for other sources like potions/enchantments. if e . source . objectType == tes3 . objectType . spell then -- Add the resisted spell to the actor that resisted it. tes3 . addSpell { reference = e . reference , spell = e . source } -- If it is the player that learned the spell, show a message with the name of the spell. if e . reference == tes3 . player then tes3 . messageBox ( \"You learned the '%s' spell.\" , e . source . name ) end end end event . register ( tes3 . register . spellResisted , onSpellResisted )","title":"Examples"},{"location":"events/spellTick/","text":"spellTick \u2693\ufe0e The spellTick event happens every frame that an effect is active on a target. This can be used to aid in scripted spells, cancel active spells, or otherwise monitor spell activity on actors. --- @param e spellTickEventData local function spellTickCallback ( e ) end event . register ( tes3 . event . spellTick , spellTickCallback ) Tip This event can be filtered based on the source event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e caster ( tes3reference ): Read-only . The caster of the spell. deltaTime (number): Read-only . The number of seconds since the last spell tick. effect ( tes3magicEffect ): Read-only . The individual effect structure on source. effectId (number): Read-only . The magic effect ID that is being ticked. Maps to values in tes3.effect namespace. effectIndex (number): Read-only . The index of the effect in source\u2019s effects list. effectInstance ( tes3magicEffectInstance ): Read-only . The unique instance of the magic effect. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches caster.","title":"spellTick"},{"location":"events/spellTick/#spelltick","text":"The spellTick event happens every frame that an effect is active on a target. This can be used to aid in scripted spells, cancel active spells, or otherwise monitor spell activity on actors. --- @param e spellTickEventData local function spellTickCallback ( e ) end event . register ( tes3 . event . spellTick , spellTickCallback ) Tip This event can be filtered based on the source event data. Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"spellTick"},{"location":"events/spellTick/#event-data","text":"caster ( tes3reference ): Read-only . The caster of the spell. deltaTime (number): Read-only . The number of seconds since the last spell tick. effect ( tes3magicEffect ): Read-only . The individual effect structure on source. effectId (number): Read-only . The magic effect ID that is being ticked. Maps to values in tes3.effect namespace. effectIndex (number): Read-only . The index of the effect in source\u2019s effects list. effectInstance ( tes3magicEffectInstance ): Read-only . The unique instance of the magic effect. source ( tes3alchemy , tes3enchantment , tes3spell ): Read-only . The magic source. sourceInstance ( tes3magicSourceInstance ): Read-only . The unique instance of the magic source. target ( tes3reference ): Read-only . The target of the spell. For self-targeted spells, this matches caster.","title":"Event Data"},{"location":"events/topicAdded/","text":"topicAdded \u2693\ufe0e This event is raised when the player gains access to a new dialogue topic. --- @param e topicAddedEventData local function topicAddedCallback ( e ) end event . register ( tes3 . event . topicAdded , topicAddedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e topic ( tes3dialogue ): Read-only . The topic that was newly added to the player's list of topics.","title":"topicAdded"},{"location":"events/topicAdded/#topicadded","text":"This event is raised when the player gains access to a new dialogue topic. --- @param e topicAddedEventData local function topicAddedCallback ( e ) end event . register ( tes3 . event . topicAdded , topicAddedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"topicAdded"},{"location":"events/topicAdded/#event-data","text":"topic ( tes3dialogue ): Read-only . The topic that was newly added to the player's list of topics.","title":"Event Data"},{"location":"events/trapDisarm/","text":"trapDisarm \u2693\ufe0e This event fires when a trap is being disarmed. --- @param e trapDisarmEventData local function trapDisarmCallback ( e ) end event . register ( tes3 . event . trapDisarm , trapDisarmCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e chance (number): Read-only . The chance the trap disarm will be successful. disarmer ( tes3mobileNPC ): Read-only . The Mobile NPC doing the disarming. lockData ( tes3lockNode ): Read-only . The lock data of the reference. reference ( tes3reference ): Read-only . The reference that triggered the event (container, door, etc.). tool ( tes3item ): Read-only . The item the disarmer is using to disarm the trap. toolItemData ( tes3itemData ): Read-only . The item data for the tool. trapPresent (boolean): Read-only . Indicates if a trap is present on the reference.","title":"trapDisarm"},{"location":"events/trapDisarm/#trapdisarm","text":"This event fires when a trap is being disarmed. --- @param e trapDisarmEventData local function trapDisarmCallback ( e ) end event . register ( tes3 . event . trapDisarm , trapDisarmCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"trapDisarm"},{"location":"events/trapDisarm/#event-data","text":"chance (number): Read-only . The chance the trap disarm will be successful. disarmer ( tes3mobileNPC ): Read-only . The Mobile NPC doing the disarming. lockData ( tes3lockNode ): Read-only . The lock data of the reference. reference ( tes3reference ): Read-only . The reference that triggered the event (container, door, etc.). tool ( tes3item ): Read-only . The item the disarmer is using to disarm the trap. toolItemData ( tes3itemData ): Read-only . The item data for the tool. trapPresent (boolean): Read-only . Indicates if a trap is present on the reference.","title":"Event Data"},{"location":"events/uiActivated/","text":"uiActivated \u2693\ufe0e This event is invoked after a UI menu has been built or made visible, at the point that all menu elements contain updated data. Supported Menus : MenuAlchemy , MenuAttributes , MenuAttributesList (Enchanting/spellmaking effect attribute), MenuAudio (Options, audio), MenuBarter , MenuBirthSign , MenuBook , MenuChooseClass , MenuClassChoice , MenuClassMessage , MenuConsole , MenuContents (Container/NPC inventory), MenuCreateClass , MenuCtrls (Options, controls), MenuDialog , MenuEnchantment , MenuInput , MenuInputSave , MenuInventory (Player inventory), MenuInventorySelect (Item selector), MenuJournal , MenuLevelUp , MenuLoad , MenuLoading , MenuMagic (Spell/enchanted item selector), MenuMagicSelect , MenuMap , MenuMapNoteEdit , MenuMessage , MenuMulti (Status bars, current weapon/magic, active effects and minimap), MenuName , MenuNotify1 , MenuNotify2 , MenuNotify3 , MenuOptions (Main menu), MenuPersuasion , MenuPrefs (Options, prefs), MenuQuantity , MenuQuick (Quick keys), MenuRaceSex , MenuRepair , MenuRestWait , MenuSave , MenuScroll , MenuServiceRepair , MenuServiceSpells , MenuServiceTraining , MenuServiceTravel , MenuSetValues (Enchanting/spellmaking effect values), MenuSkills , MenuSkillsList (Enchanting/spellmaking effect skill), MenuSpecialization , MenuSpellmaking , MenuStat (Player attributes, skills, factions etc.), MenuStatReview , MenuSwimFillBar , MenuTimePass , MenuTopic , MenuVideo (Options, video) --- @param e uiActivatedEventData local function uiActivatedCallback ( e ) end event . register ( tes3 . event . uiActivated , uiActivatedCallback ) Tip This event can be filtered based on the element.name event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e element ( tes3uiElement ): Read-only . The menu element that was created. The event is filtered on element.name. newlyCreated (boolean): Read-only . true if the menu was created for the first time or destroyed and re-created; false if it was made visible after being hidden. This can be used when adding custom elements to a menu, as elements previously added will still exist if the menu was hidden. If the menu was re-created, the elements will need to be added again.","title":"uiActivated"},{"location":"events/uiActivated/#uiactivated","text":"This event is invoked after a UI menu has been built or made visible, at the point that all menu elements contain updated data. Supported Menus : MenuAlchemy , MenuAttributes , MenuAttributesList (Enchanting/spellmaking effect attribute), MenuAudio (Options, audio), MenuBarter , MenuBirthSign , MenuBook , MenuChooseClass , MenuClassChoice , MenuClassMessage , MenuConsole , MenuContents (Container/NPC inventory), MenuCreateClass , MenuCtrls (Options, controls), MenuDialog , MenuEnchantment , MenuInput , MenuInputSave , MenuInventory (Player inventory), MenuInventorySelect (Item selector), MenuJournal , MenuLevelUp , MenuLoad , MenuLoading , MenuMagic (Spell/enchanted item selector), MenuMagicSelect , MenuMap , MenuMapNoteEdit , MenuMessage , MenuMulti (Status bars, current weapon/magic, active effects and minimap), MenuName , MenuNotify1 , MenuNotify2 , MenuNotify3 , MenuOptions (Main menu), MenuPersuasion , MenuPrefs (Options, prefs), MenuQuantity , MenuQuick (Quick keys), MenuRaceSex , MenuRepair , MenuRestWait , MenuSave , MenuScroll , MenuServiceRepair , MenuServiceSpells , MenuServiceTraining , MenuServiceTravel , MenuSetValues (Enchanting/spellmaking effect values), MenuSkills , MenuSkillsList (Enchanting/spellmaking effect skill), MenuSpecialization , MenuSpellmaking , MenuStat (Player attributes, skills, factions etc.), MenuStatReview , MenuSwimFillBar , MenuTimePass , MenuTopic , MenuVideo (Options, video) --- @param e uiActivatedEventData local function uiActivatedCallback ( e ) end event . register ( tes3 . event . uiActivated , uiActivatedCallback ) Tip This event can be filtered based on the element.name event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"uiActivated"},{"location":"events/uiActivated/#event-data","text":"element ( tes3uiElement ): Read-only . The menu element that was created. The event is filtered on element.name. newlyCreated (boolean): Read-only . true if the menu was created for the first time or destroyed and re-created; false if it was made visible after being hidden. This can be used when adding custom elements to a menu, as elements previously added will still exist if the menu was hidden. If the menu was re-created, the elements will need to be added again.","title":"Event Data"},{"location":"events/uiEvent/","text":"uiEvent \u2693\ufe0e uiEvent is triggered through various UI events. This includes scrolling through panes, clicking buttons, selecting icons, or a host of other UI-related activities. --- @param e uiEventEventData local function uiEventCallback ( e ) end event . register ( tes3 . event . uiEvent , uiEventCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e block ( tes3uiElement ): Read-only . The UI element that is firing this event. parent ( tes3uiElement ): Read-only . The calling element's parent. property (number): Read-only . The property identifier that is being triggered. var1 (number): Read-only . One of two undefined variables related to the event. var2 (number): Read-only . One of two undefined variables related to the event.","title":"uiEvent"},{"location":"events/uiEvent/#uievent","text":"uiEvent is triggered through various UI events. This includes scrolling through panes, clicking buttons, selecting icons, or a host of other UI-related activities. --- @param e uiEventEventData local function uiEventCallback ( e ) end event . register ( tes3 . event . uiEvent , uiEventCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"uiEvent"},{"location":"events/uiEvent/#event-data","text":"block ( tes3uiElement ): Read-only . The UI element that is firing this event. parent ( tes3uiElement ): Read-only . The calling element's parent. property (number): Read-only . The property identifier that is being triggered. var1 (number): Read-only . One of two undefined variables related to the event. var2 (number): Read-only . One of two undefined variables related to the event.","title":"Event Data"},{"location":"events/uiObjectTooltip/","text":"uiObjectTooltip \u2693\ufe0e The uiObjectTooltip event triggers when a new tooltip is displayed for all in-world objects and items, and inventory tiles in all dialogues. The tooltip will be already be built. Tooltips for inventory tiles are built on mouseover, while tooltips for in-world objects are rebuilt every frame. --- @param e uiObjectTooltipEventData local function uiObjectTooltipCallback ( e ) end event . register ( tes3 . event . uiObjectTooltip , uiObjectTooltipCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e count (number): Read-only . The number of items in the stack. itemData ( tes3itemData ): Read-only . The item data of object, if any. object ( tes3physicalObject ): Read-only . The object being examined. reference ( tes3reference ): Read-only . The reference being examined. Only valid for in-world objects. For inventory tiles it will always be nil. tooltip ( tes3uiElement ): Read-only . The newly created tooltip element. Due to timeouts and target changes, it may be destroyed at any time.","title":"uiObjectTooltip"},{"location":"events/uiObjectTooltip/#uiobjecttooltip","text":"The uiObjectTooltip event triggers when a new tooltip is displayed for all in-world objects and items, and inventory tiles in all dialogues. The tooltip will be already be built. Tooltips for inventory tiles are built on mouseover, while tooltips for in-world objects are rebuilt every frame. --- @param e uiObjectTooltipEventData local function uiObjectTooltipCallback ( e ) end event . register ( tes3 . event . uiObjectTooltip , uiObjectTooltipCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"uiObjectTooltip"},{"location":"events/uiObjectTooltip/#event-data","text":"count (number): Read-only . The number of items in the stack. itemData ( tes3itemData ): Read-only . The item data of object, if any. object ( tes3physicalObject ): Read-only . The object being examined. reference ( tes3reference ): Read-only . The reference being examined. Only valid for in-world objects. For inventory tiles it will always be nil. tooltip ( tes3uiElement ): Read-only . The newly created tooltip element. Due to timeouts and target changes, it may be destroyed at any time.","title":"Event Data"},{"location":"events/uiPreEvent/","text":"uiPreEvent \u2693\ufe0e uiPreEvent is triggered through various UI events. This includes scrolling through panes, clicking buttons, selecting icons, or a host of other UI-related activities. This event fires before uiEvent, and has the additional advantage of being able to be blocked. --- @param e uiPreEventEventData local function uiPreEventCallback ( e ) end event . register ( tes3 . event . uiPreEvent , uiPreEventCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e block ( tes3uiElement ): Read-only . The UI element that is firing this event. parent ( tes3uiElement ): Read-only . The calling element's parent. property (number): Read-only . The property identifier that is being triggered. source ( tes3uiElement ): Read-only . The UI element that is firing this event. var1 (number): Read-only . One of two undefined variables related to the event. var2 (number): Read-only . One of two undefined variables related to the event.","title":"uiPreEvent"},{"location":"events/uiPreEvent/#uipreevent","text":"uiPreEvent is triggered through various UI events. This includes scrolling through panes, clicking buttons, selecting icons, or a host of other UI-related activities. This event fires before uiEvent, and has the additional advantage of being able to be blocked. --- @param e uiPreEventEventData local function uiPreEventCallback ( e ) end event . register ( tes3 . event . uiPreEvent , uiPreEventCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"uiPreEvent"},{"location":"events/uiPreEvent/#event-data","text":"block ( tes3uiElement ): Read-only . The UI element that is firing this event. parent ( tes3uiElement ): Read-only . The calling element's parent. property (number): Read-only . The property identifier that is being triggered. source ( tes3uiElement ): Read-only . The UI element that is firing this event. var1 (number): Read-only . One of two undefined variables related to the event. var2 (number): Read-only . One of two undefined variables related to the event.","title":"Event Data"},{"location":"events/uiRefreshed/","text":"uiRefreshed \u2693\ufe0e This event is invoked after a UI menu has been created or recreated. This can be useful for when important game subcomponents are destroyed and remade, without the entire UI being activated. Supported Elements : MenuStat_scroll_pane --- @param e uiRefreshedEventData local function uiRefreshedCallback ( e ) end event . register ( tes3 . event . uiRefreshed , uiRefreshedCallback ) Tip This event can be filtered based on the element.name event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e element ( tes3uiElement ): Read-only . The menu element that was recreated or refreshed. The event is filtered on element.name newlyCreated (boolean): Read-only . true if the menu was created for the first time or destroyed and re-created; false if it was made visible after being hidden. This can be used when adding custom elements to a menu, as elements previously added will still exist if the menu was hidden. If the menu was re-created, the elements will need to be added again.","title":"uiRefreshed"},{"location":"events/uiRefreshed/#uirefreshed","text":"This event is invoked after a UI menu has been created or recreated. This can be useful for when important game subcomponents are destroyed and remade, without the entire UI being activated. Supported Elements : MenuStat_scroll_pane --- @param e uiRefreshedEventData local function uiRefreshedCallback ( e ) end event . register ( tes3 . event . uiRefreshed , uiRefreshedCallback ) Tip This event can be filtered based on the element.name event data. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"uiRefreshed"},{"location":"events/uiRefreshed/#event-data","text":"element ( tes3uiElement ): Read-only . The menu element that was recreated or refreshed. The event is filtered on element.name newlyCreated (boolean): Read-only . true if the menu was created for the first time or destroyed and re-created; false if it was made visible after being hidden. This can be used when adding custom elements to a menu, as elements previously added will still exist if the menu was hidden. If the menu was re-created, the elements will need to be added again.","title":"Event Data"},{"location":"events/uiShowRestMenu/","text":"uiShowRestMenu \u2693\ufe0e The uiShowRestMenu event is raised when the rest menu is about to be displayed. It allows the callback to change if sleeping is allowed, or to prevent the UI from showing at all. --- @param e uiShowRestMenuEventData local function uiShowRestMenuCallback ( e ) end event . register ( tes3 . event . uiShowRestMenu , uiShowRestMenuCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e allowRest (boolean): true if the player is allowed to sleep (determined primarily from the cell flags), or false if they must wait instead. This value can be modified. scripted (boolean): Read-only . This value is true when the menu is shown from using the ShowRestMenu or equivalent function.","title":"uiShowRestMenu"},{"location":"events/uiShowRestMenu/#uishowrestmenu","text":"The uiShowRestMenu event is raised when the rest menu is about to be displayed. It allows the callback to change if sleeping is allowed, or to prevent the UI from showing at all. --- @param e uiShowRestMenuEventData local function uiShowRestMenuCallback ( e ) end event . register ( tes3 . event . uiShowRestMenu , uiShowRestMenuCallback ) Tip This event supports blocking by setting e.block to true or returning false . Blocking the event prevents vanilla behavior from happening. For example, blocking an equip event prevents the item from being equipped. Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"uiShowRestMenu"},{"location":"events/uiShowRestMenu/#event-data","text":"allowRest (boolean): true if the player is allowed to sleep (determined primarily from the cell flags), or false if they must wait instead. This value can be modified. scripted (boolean): Read-only . This value is true when the menu is shown from using the ShowRestMenu or equivalent function.","title":"Event Data"},{"location":"events/uiSpellTooltip/","text":"uiSpellTooltip \u2693\ufe0e The uiSpellTooltip event triggers when a new tooltip is displayed for a spell. The tooltip will be already be built. --- @param e uiSpellTooltipEventData local function uiSpellTooltipCallback ( e ) end event . register ( tes3 . event . uiSpellTooltip , uiSpellTooltipCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e spell ( tes3spell ): Read-only . The spell being examined. tooltip ( tes3uiElement ): Read-only . The newly created tooltip element. Due to timeouts and target changes, it may be destroyed at any time.","title":"uiSpellTooltip"},{"location":"events/uiSpellTooltip/#uispelltooltip","text":"The uiSpellTooltip event triggers when a new tooltip is displayed for a spell. The tooltip will be already be built. --- @param e uiSpellTooltipEventData local function uiSpellTooltipCallback ( e ) end event . register ( tes3 . event . uiSpellTooltip , uiSpellTooltipCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"uiSpellTooltip"},{"location":"events/uiSpellTooltip/#event-data","text":"spell ( tes3spell ): Read-only . The spell being examined. tooltip ( tes3uiElement ): Read-only . The newly created tooltip element. Due to timeouts and target changes, it may be destroyed at any time.","title":"Event Data"},{"location":"events/unequipped/","text":"unequipped \u2693\ufe0e The unequipped event fires after an actor has successfully unequipped an item. --- @param e unequippedEventData local function unequippedCallback ( e ) end event . register ( tes3 . event . unequipped , unequippedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e actor ( tes3actor ): Read-only . The actor that has unequipped the item. item ( tes3baseObject ): Read-only . The object that has been unequipped. itemData ( tes3itemData ): Read-only . The item data of item. mobile ( tes3mobileActor ): Read-only . The mobile actor that has unequipped the item. reference ( tes3reference ): Read-only . actor\u2019s associated reference.","title":"Unequipped"},{"location":"events/unequipped/#unequipped","text":"The unequipped event fires after an actor has successfully unequipped an item. --- @param e unequippedEventData local function unequippedCallback ( e ) end event . register ( tes3 . event . unequipped , unequippedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"unequipped"},{"location":"events/unequipped/#event-data","text":"actor ( tes3actor ): Read-only . The actor that has unequipped the item. item ( tes3baseObject ): Read-only . The object that has been unequipped. itemData ( tes3itemData ): Read-only . The item data of item. mobile ( tes3mobileActor ): Read-only . The mobile actor that has unequipped the item. reference ( tes3reference ): Read-only . actor\u2019s associated reference.","title":"Event Data"},{"location":"events/vfxCreated/","text":"vfxCreated \u2693\ufe0e The vfxCreated event fires when a managed visual effect is created by the game engine or through tes3.createVisualEffect . --- @param e vfxCreatedEventData local function vfxCreatedCallback ( e ) end event . register ( tes3 . event . vfxCreated , vfxCreatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e context (string): Read-only . Context for what type of VFX this was created at. For example, if the VFX was created at a position the value will be tes3.vfxContext.position , while an effect created onto the caster's hands will be created with the context of a tes3.vfxContext.niNode . This maps to the values in tes3.vfxContext . vfx ( tes3vfx ): Read-only . The created visual effect.","title":"vfxCreated"},{"location":"events/vfxCreated/#vfxcreated","text":"The vfxCreated event fires when a managed visual effect is created by the game engine or through tes3.createVisualEffect . --- @param e vfxCreatedEventData local function vfxCreatedCallback ( e ) end event . register ( tes3 . event . vfxCreated , vfxCreatedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"vfxCreated"},{"location":"events/vfxCreated/#event-data","text":"context (string): Read-only . Context for what type of VFX this was created at. For example, if the VFX was created at a position the value will be tes3.vfxContext.position , while an effect created onto the caster's hands will be created with the context of a tes3.vfxContext.niNode . This maps to the values in tes3.vfxContext . vfx ( tes3vfx ): Read-only . The created visual effect.","title":"Event Data"},{"location":"events/weaponReadied/","text":"weaponReadied \u2693\ufe0e This event is called when a weapon is readied, and pairs with the weaponUnreadied event. It can be used to reliably tell if a specific weapon is readied for attack. This does not necessarily mean that the animation state has changed for the first time. --- @param e weaponReadiedEventData local function weaponReadiedCallback ( e ) end event . register ( tes3 . event . weaponReadied , weaponReadiedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e reference ( tes3reference ): Read-only . The reference associated with the change in readied weapon. weaponStack ( tes3equipmentStack ): Read-only . The stack that contains the newly readied weapon and its associated data.","title":"weaponReadied"},{"location":"events/weaponReadied/#weaponreadied","text":"This event is called when a weapon is readied, and pairs with the weaponUnreadied event. It can be used to reliably tell if a specific weapon is readied for attack. This does not necessarily mean that the animation state has changed for the first time. --- @param e weaponReadiedEventData local function weaponReadiedCallback ( e ) end event . register ( tes3 . event . weaponReadied , weaponReadiedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"weaponReadied"},{"location":"events/weaponReadied/#event-data","text":"reference ( tes3reference ): Read-only . The reference associated with the change in readied weapon. weaponStack ( tes3equipmentStack ): Read-only . The stack that contains the newly readied weapon and its associated data.","title":"Event Data"},{"location":"events/weaponUnreadied/","text":"weaponUnreadied \u2693\ufe0e This event is called when a weapon is no longer readied, and pairs with the weaponReadied event. It can be used to reliably tell if a specific weapon is readied for attack. This does not necessarily mean that the animation state has changed for the first time. If an actor equips a weapon while having their hands up to attack with, the event will fire for the new weapon. --- @param e weaponUnreadiedEventData local function weaponUnreadiedCallback ( e ) end event . register ( tes3 . event . weaponUnreadied , weaponUnreadiedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e reference ( tes3reference ): Read-only . The reference associated with the change in readied weapon.","title":"weaponUnreadied"},{"location":"events/weaponUnreadied/#weaponunreadied","text":"This event is called when a weapon is no longer readied, and pairs with the weaponReadied event. It can be used to reliably tell if a specific weapon is readied for attack. This does not necessarily mean that the animation state has changed for the first time. If an actor equips a weapon while having their hands up to attack with, the event will fire for the new weapon. --- @param e weaponUnreadiedEventData local function weaponUnreadiedCallback ( e ) end event . register ( tes3 . event . weaponUnreadied , weaponUnreadiedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"weaponUnreadied"},{"location":"events/weaponUnreadied/#event-data","text":"reference ( tes3reference ): Read-only . The reference associated with the change in readied weapon.","title":"Event Data"},{"location":"events/weatherChangedImmediate/","text":"weatherChangedImmediate \u2693\ufe0e The weatherChangedImmediate event occurs when the currently simulated weather is changed without transition. This can occur when going from an interior to an exterior in a new region, or while resting. This can interrupt weather transitions, which means the weatherTransitionFinished event will not be triggered. --- @param e weatherChangedImmediateEventData local function weatherChangedImmediateCallback ( e ) end event . register ( tes3 . event . weatherChangedImmediate , weatherChangedImmediateCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e to ( tes3weather ): The weather object that is the new current weather. Can be modified to change behavior.","title":"weatherChangedImmediate"},{"location":"events/weatherChangedImmediate/#weatherchangedimmediate","text":"The weatherChangedImmediate event occurs when the currently simulated weather is changed without transition. This can occur when going from an interior to an exterior in a new region, or while resting. This can interrupt weather transitions, which means the weatherTransitionFinished event will not be triggered. --- @param e weatherChangedImmediateEventData local function weatherChangedImmediateCallback ( e ) end event . register ( tes3 . event . weatherChangedImmediate , weatherChangedImmediateCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"weatherChangedImmediate"},{"location":"events/weatherChangedImmediate/#event-data","text":"to ( tes3weather ): The weather object that is the new current weather. Can be modified to change behavior.","title":"Event Data"},{"location":"events/weatherCycled/","text":"weatherCycled \u2693\ufe0e The weatherCycled event occurs when region weathers are randomized. This occurs at an interval set by the ini option \u201cHours Between Weather Changes\u201d. Regions may select the same weather as before, and there will be no transition in this case. --- @param e weatherCycledEventData local function weatherCycledCallback ( e ) end event . register ( tes3 . event . weatherCycled , weatherCycledCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"weatherCycled"},{"location":"events/weatherCycled/#weathercycled","text":"The weatherCycled event occurs when region weathers are randomized. This occurs at an interval set by the ini option \u201cHours Between Weather Changes\u201d. Regions may select the same weather as before, and there will be no transition in this case. --- @param e weatherCycledEventData local function weatherCycledCallback ( e ) end event . register ( tes3 . event . weatherCycled , weatherCycledCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"weatherCycled"},{"location":"events/weatherTransitionFinished/","text":"weatherTransitionFinished \u2693\ufe0e The weatherTransitionFinished event occurs when the currently simulated weather finished transitioning to a new weather. Weather will continue transitioning in interiors, and may finish while in an interior. The transition may be interrupted at any time by the weatherChangedImmediate event, and this finish event will not be triggered. --- @param e weatherTransitionFinishedEventData local function weatherTransitionFinishedCallback ( e ) end event . register ( tes3 . event . weatherTransitionFinished , weatherTransitionFinishedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e to ( tes3weather ): The weather object that will be transitioned to.","title":"weatherTransitionFinished"},{"location":"events/weatherTransitionFinished/#weathertransitionfinished","text":"The weatherTransitionFinished event occurs when the currently simulated weather finished transitioning to a new weather. Weather will continue transitioning in interiors, and may finish while in an interior. The transition may be interrupted at any time by the weatherChangedImmediate event, and this finish event will not be triggered. --- @param e weatherTransitionFinishedEventData local function weatherTransitionFinishedCallback ( e ) end event . register ( tes3 . event . weatherTransitionFinished , weatherTransitionFinishedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"weatherTransitionFinished"},{"location":"events/weatherTransitionFinished/#event-data","text":"to ( tes3weather ): The weather object that will be transitioned to.","title":"Event Data"},{"location":"events/weatherTransitionStarted/","text":"weatherTransitionStarted \u2693\ufe0e The weatherTransitionStarted event occurs when the currently simulated weather has started to gradually transition to a new weather. This can occur when moving between regions, or when the weather cycles. Weather will not start transitioning in interiors, but will continue transitioning, and may finish while in an interior. The transition may be interrupted at any time by the weatherChangedImmediate event, and the weatherTransitionFinished event will not occur. --- @param e weatherTransitionStartedEventData local function weatherTransitionStartedCallback ( e ) end event . register ( tes3 . event . weatherTransitionStarted , weatherTransitionStartedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called. Event Data \u2693\ufe0e from ( tes3weather ): Read-only . The weather object that is the current weather. to ( tes3weather ): The weather object that will be transitioned to.","title":"weatherTransitionStarted"},{"location":"events/weatherTransitionStarted/#weathertransitionstarted","text":"The weatherTransitionStarted event occurs when the currently simulated weather has started to gradually transition to a new weather. This can occur when moving between regions, or when the weather cycles. Weather will not start transitioning in interiors, but will continue transitioning, and may finish while in an interior. The transition may be interrupted at any time by the weatherChangedImmediate event, and the weatherTransitionFinished event will not occur. --- @param e weatherTransitionStartedEventData local function weatherTransitionStartedCallback ( e ) end event . register ( tes3 . event . weatherTransitionStarted , weatherTransitionStartedCallback ) Tip An event can be claimed by setting e.claim to true , or by returning false from the callback. Claiming the event prevents any lower priority callbacks from being called.","title":"weatherTransitionStarted"},{"location":"events/weatherTransitionStarted/#event-data","text":"from ( tes3weather ): Read-only . The weather object that is the current weather. to ( tes3weather ): The weather object that will be transitioned to.","title":"Event Data"},{"location":"guides/creating-a-mod/","text":"Creating a Mod \u2693\ufe0e This guide will demonstrate the most basic steps of creating a mod for The Elder Scrolls III: Morrowind using MWSE 2.1 Lua. To facilitate this, this guide will explain how to create a mod that displays a unique messagebox every time the player draws a two-handed weapon. Development Workflow \u2693\ufe0e A Development Workflow is the environment and processes used to facilitate software development. This guide assumes that you have setup a development environment. If you have not set up a development environment, or do not know how to, please refer to the Development Workflow guide to set one up. Introduction to the Lua Scripting Language \u2693\ufe0e If you have basic knowledge of the Lua scripting language, you may skip this section. If you are not familiar with the Lua scripting language, please take a moment to read the Introduction to Lua guide. Introduction to Event Based Programming \u2693\ufe0e If you have basic knowledge of event based programming, you may skip this section. If you are not familiar with event based programming, please take a moment to read the Introduction to Event Based Programming guide. Creating the Mod File Structure \u2693\ufe0e Now that you have setup a development workflow, you are ready to create a mod. Next, the folder structure for MWSE must be created: In the Morrowind \"Data Files\" directory, create a folder named \"MWSE\". This is the folder that contains any MWSE code. In \"MWSE\", create a folder named \"mods\". This is the folder that contains any MWSE mod code. Other options include \"lib\" for user-made frameworks and libraries. In \"mods\", create a folder named \"MWSE-Guide-Demo\". This is the folder that contains the MWSE code for our mod. This folder can include spaces in the folder name. In a normal Morrowind install, you may see other folders here. These represent other mod's code files. The newly created folder structure should look like this: Morrowind\\Data Files\\MWSE\\mods\\MWSE-Guide-Demo Now that the folder structure is complete, you must create a code file to run your code in. In \"MWSE-Guide-Demo\", create a file named main.lua . This file will contain the Lua code for the mod. The main file of your mod must be named main.lua . This file should configure and initialize any other code files in your mod. The name main.lua is required by MWSE. Registering an Event \u2693\ufe0e The Morrowind game engine, through MWSE, provides a variety of events that can be used to trigger code. An event is a trigger that will notify any registered functions of it's occurrence. For example, consider the loaded event. This event is triggered whenever the player loads a save game. If you register a function to be called when this event occurs, your function will be called when the player loads a save game. By cleverly using Morrowind's events, powerful functionality can be created. In our file, main.lua , we will register an event to trigger our code. It is convention to register your mod's events inside of another event, the initialized event. The initialized event represents the point when the game and it's mods have been loaded. You can imagine this as the point which the title screen is first shown. So, first, we will create the initialized event. 1 2 3 4 5 6 7 8 9 -- The function to call on the initialized event. local function initialized () -- 1. -- Print a \"Ready!\" statement to the MWSE.log file. print ( \"[MWSE Guide Demo: INFO] MWSE Guide Demo Initialized\" ) --2. end -- Register our initialized function to the initialized event. event . register ( tes3 . event . initialized , initialized ) --3. Declare a function to call whenever the initialized event is triggered. It is convention to print a statement stating your mod is initialized at the end of your initialized event function. This is used for debugging. Register our initialized function to the initialized event. Now, we want to register an event for what we are actually interested in. In this guide, we are creating a mod that displays a unique messagebox every time the player draws a two-handed weapon. There is an event for that! It is called the weaponReadied event. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 -- The function to call on the showMessageboxOnWeaponReadied event. local function showMessageboxOnWeaponReadied ( e ) -- 1. tes3 . messageBox ( \"I just drew some weapon.\" ) -- 2. end -- The function to call on the initialized event. local function initialized () -- Register our function to the weaponReadied event. event . register ( tes3 . event . weaponReadied , showMessageboxOnWeaponReadied ) --3. -- Print a \"Ready!\" statement to the MWSE.log file. print ( \"[MWSE Guide Demo: INFO] MWSE Guide Demo Initialized\" ) end -- Register our initialized function to the initialized event. event . register ( tes3 . event . initialized , initialized ) Declare a function to call whenever the weaponReadied event is triggered. Add a simple messagebox command. Register our showMessageboxOnWeaponReadied function to the weaponReadied event. At this point, the mod can be tested to confirm the events are set up correctly. To do this, follow the workflow described at the beginning of this guide. When you draw your weapon in-game, you should see a messagebox popup! The details of which events are available and what event data is exposed to them can be found on the events page. Validating the Event & Showing a Messagebox \u2693\ufe0e Now that the required events have been set up, the showMessageboxOnWeaponReadied function should be updated to restrict the types of actions that our code applies to. For the purposes of this guide, the function will only apply to two-handed weapons, and only to the player. The updated function is as follows: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 -- The function to call on the showMessageboxOnWeaponReadied event. local function showMessageboxOnWeaponReadied ( e ) -- Exit the function is the actor is not the player. if ( e . reference ~= tes3 . player ) then --1. return end -- Locally store the weapon reference being readied in the event. local weaponStack = e . weaponStack --2. -- Check that the reference exists and the reference object is a two-handed weapon. if ( weaponStack and weaponStack . object . isTwoHanded ) then --3. -- Print our statement. tes3 . messageBox ( \"I just drew \" .. weaponStack . object . name .. \", destroyer of worlds!\" ) --4. end end We must check that the event was triggered by the player. Without this step, the code would be executed for all actors, including NPCs and creatures! e.reference is an property of the weaponedReadied event. tes3.player is an easy way to access the player reference. Store a copy of the weaponStack reference in a local variable to prevent typing e.weaponStack more than once. The first part of this if condition checks that the reference exists. This should be done to prevent null reference exceptions. The second part of this if condition performs our validation: it ensures that the weapon being readied is a two-handed weapon. Show a messagebox with some custom object information. .name is available on any object. The mod should be tested again. When drawing a two-handed weapon, you should now see a custom messagebox! Conclusion \u2693\ufe0e This guide provided a simple introduction to modding The Elder Scrolls III: Morrowind using MWSE 2.1 Lua. This guide: explained the required folder structure to create a MWSE-Lua mod. explained the basics of event registration and callbacks. explained how to implement some basic logic in an event callback. At this point, you can continue reading the MWSE-Lua documentation. Documentation is constantly being improved upon, so ask a question in the Morrowind Modding Discord if you need help. Here is the final code in main.lua for the demo mod: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 -- The function to call on the showMessageboxOnWeaponReadied event. local function showMessageboxOnWeaponReadied ( e ) -- Exit the function is the actor is not the player. if ( e . reference ~= tes3 . player ) then return end -- Locally store the weapon reference being readied in the event. local weaponStack = e . weaponStack -- Check that the reference exists and the reference object is a two-handed weapon. if ( weaponStack and weaponStack . object . isTwoHanded ) then -- Print our statement. tes3 . messageBox ( \"I just drew \" .. weaponStack . object . name .. \", destroyer of worlds!\" ) end end -- The function to call on the initialized event. local function initialized () -- Register our function to the onReadied event. event . register ( tes3 . event . weaponReadied , showMessageboxOnWeaponReadied ) -- Print a \"Ready!\" statement to the MWSE.log file. print ( \"[MWSE Guide Demo: INFO] MWSE Guide Demo Initialized\" ) end -- Register our initialized function to the initialized event. event . register ( tes3 . event . initialized , initialized )","title":"Creating a Mod"},{"location":"guides/creating-a-mod/#creating-a-mod","text":"This guide will demonstrate the most basic steps of creating a mod for The Elder Scrolls III: Morrowind using MWSE 2.1 Lua. To facilitate this, this guide will explain how to create a mod that displays a unique messagebox every time the player draws a two-handed weapon.","title":"Creating a Mod"},{"location":"guides/creating-a-mod/#development-workflow","text":"A Development Workflow is the environment and processes used to facilitate software development. This guide assumes that you have setup a development environment. If you have not set up a development environment, or do not know how to, please refer to the Development Workflow guide to set one up.","title":"Development Workflow"},{"location":"guides/creating-a-mod/#introduction-to-the-lua-scripting-language","text":"If you have basic knowledge of the Lua scripting language, you may skip this section. If you are not familiar with the Lua scripting language, please take a moment to read the Introduction to Lua guide.","title":"Introduction to the Lua Scripting Language"},{"location":"guides/creating-a-mod/#introduction-to-event-based-programming","text":"If you have basic knowledge of event based programming, you may skip this section. If you are not familiar with event based programming, please take a moment to read the Introduction to Event Based Programming guide.","title":"Introduction to Event Based Programming"},{"location":"guides/creating-a-mod/#creating-the-mod-file-structure","text":"Now that you have setup a development workflow, you are ready to create a mod. Next, the folder structure for MWSE must be created: In the Morrowind \"Data Files\" directory, create a folder named \"MWSE\". This is the folder that contains any MWSE code. In \"MWSE\", create a folder named \"mods\". This is the folder that contains any MWSE mod code. Other options include \"lib\" for user-made frameworks and libraries. In \"mods\", create a folder named \"MWSE-Guide-Demo\". This is the folder that contains the MWSE code for our mod. This folder can include spaces in the folder name. In a normal Morrowind install, you may see other folders here. These represent other mod's code files. The newly created folder structure should look like this: Morrowind\\Data Files\\MWSE\\mods\\MWSE-Guide-Demo Now that the folder structure is complete, you must create a code file to run your code in. In \"MWSE-Guide-Demo\", create a file named main.lua . This file will contain the Lua code for the mod. The main file of your mod must be named main.lua . This file should configure and initialize any other code files in your mod. The name main.lua is required by MWSE.","title":"Creating the Mod File Structure"},{"location":"guides/creating-a-mod/#registering-an-event","text":"The Morrowind game engine, through MWSE, provides a variety of events that can be used to trigger code. An event is a trigger that will notify any registered functions of it's occurrence. For example, consider the loaded event. This event is triggered whenever the player loads a save game. If you register a function to be called when this event occurs, your function will be called when the player loads a save game. By cleverly using Morrowind's events, powerful functionality can be created. In our file, main.lua , we will register an event to trigger our code. It is convention to register your mod's events inside of another event, the initialized event. The initialized event represents the point when the game and it's mods have been loaded. You can imagine this as the point which the title screen is first shown. So, first, we will create the initialized event. 1 2 3 4 5 6 7 8 9 -- The function to call on the initialized event. local function initialized () -- 1. -- Print a \"Ready!\" statement to the MWSE.log file. print ( \"[MWSE Guide Demo: INFO] MWSE Guide Demo Initialized\" ) --2. end -- Register our initialized function to the initialized event. event . register ( tes3 . event . initialized , initialized ) --3. Declare a function to call whenever the initialized event is triggered. It is convention to print a statement stating your mod is initialized at the end of your initialized event function. This is used for debugging. Register our initialized function to the initialized event. Now, we want to register an event for what we are actually interested in. In this guide, we are creating a mod that displays a unique messagebox every time the player draws a two-handed weapon. There is an event for that! It is called the weaponReadied event. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 -- The function to call on the showMessageboxOnWeaponReadied event. local function showMessageboxOnWeaponReadied ( e ) -- 1. tes3 . messageBox ( \"I just drew some weapon.\" ) -- 2. end -- The function to call on the initialized event. local function initialized () -- Register our function to the weaponReadied event. event . register ( tes3 . event . weaponReadied , showMessageboxOnWeaponReadied ) --3. -- Print a \"Ready!\" statement to the MWSE.log file. print ( \"[MWSE Guide Demo: INFO] MWSE Guide Demo Initialized\" ) end -- Register our initialized function to the initialized event. event . register ( tes3 . event . initialized , initialized ) Declare a function to call whenever the weaponReadied event is triggered. Add a simple messagebox command. Register our showMessageboxOnWeaponReadied function to the weaponReadied event. At this point, the mod can be tested to confirm the events are set up correctly. To do this, follow the workflow described at the beginning of this guide. When you draw your weapon in-game, you should see a messagebox popup! The details of which events are available and what event data is exposed to them can be found on the events page.","title":"Registering an Event"},{"location":"guides/creating-a-mod/#validating-the-event-showing-a-messagebox","text":"Now that the required events have been set up, the showMessageboxOnWeaponReadied function should be updated to restrict the types of actions that our code applies to. For the purposes of this guide, the function will only apply to two-handed weapons, and only to the player. The updated function is as follows: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 -- The function to call on the showMessageboxOnWeaponReadied event. local function showMessageboxOnWeaponReadied ( e ) -- Exit the function is the actor is not the player. if ( e . reference ~= tes3 . player ) then --1. return end -- Locally store the weapon reference being readied in the event. local weaponStack = e . weaponStack --2. -- Check that the reference exists and the reference object is a two-handed weapon. if ( weaponStack and weaponStack . object . isTwoHanded ) then --3. -- Print our statement. tes3 . messageBox ( \"I just drew \" .. weaponStack . object . name .. \", destroyer of worlds!\" ) --4. end end We must check that the event was triggered by the player. Without this step, the code would be executed for all actors, including NPCs and creatures! e.reference is an property of the weaponedReadied event. tes3.player is an easy way to access the player reference. Store a copy of the weaponStack reference in a local variable to prevent typing e.weaponStack more than once. The first part of this if condition checks that the reference exists. This should be done to prevent null reference exceptions. The second part of this if condition performs our validation: it ensures that the weapon being readied is a two-handed weapon. Show a messagebox with some custom object information. .name is available on any object. The mod should be tested again. When drawing a two-handed weapon, you should now see a custom messagebox!","title":"Validating the Event &amp; Showing a Messagebox"},{"location":"guides/creating-a-mod/#conclusion","text":"This guide provided a simple introduction to modding The Elder Scrolls III: Morrowind using MWSE 2.1 Lua. This guide: explained the required folder structure to create a MWSE-Lua mod. explained the basics of event registration and callbacks. explained how to implement some basic logic in an event callback. At this point, you can continue reading the MWSE-Lua documentation. Documentation is constantly being improved upon, so ask a question in the Morrowind Modding Discord if you need help. Here is the final code in main.lua for the demo mod: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 -- The function to call on the showMessageboxOnWeaponReadied event. local function showMessageboxOnWeaponReadied ( e ) -- Exit the function is the actor is not the player. if ( e . reference ~= tes3 . player ) then return end -- Locally store the weapon reference being readied in the event. local weaponStack = e . weaponStack -- Check that the reference exists and the reference object is a two-handed weapon. if ( weaponStack and weaponStack . object . isTwoHanded ) then -- Print our statement. tes3 . messageBox ( \"I just drew \" .. weaponStack . object . name .. \", destroyer of worlds!\" ) end end -- The function to call on the initialized event. local function initialized () -- Register our function to the onReadied event. event . register ( tes3 . event . weaponReadied , showMessageboxOnWeaponReadied ) -- Print a \"Ready!\" statement to the MWSE.log file. print ( \"[MWSE Guide Demo: INFO] MWSE Guide Demo Initialized\" ) end -- Register our initialized function to the initialized event. event . register ( tes3 . event . initialized , initialized )","title":"Conclusion"},{"location":"guides/development-workflows/","text":"Development Workflows \u2693\ufe0e This guide will demonstrate how to set up your workflow for modding The Elder Scrolls III: Morrowind using MWSE-Lua. A development workflow is the environment and processes used to facilitate software development. There are many ways that you can develop MWSE-Lua mods. This guide will show you how to to use Visual Studio Code to get syntax highlighting, autocompletion, and doc integration. It will also show you how to use a simple install, Wrye Mash, or Mod Organizer 2 to work on your mods. Summary Want to simply get to work? Open the Data Files\\MWSE folder in Visual Studio Code . Install the recommended plugins MWSE suggests in that workspace. You're good to go. Requirements \u2693\ufe0e All workflows require an installation of Visual Studio Code . After it is installed, we will also need some Lua-focused extensions. You will also need to make sure that MWSE is up to date. Install MWSE and run MWSE-Update. The simplest way to install these extensions is to open the Data Files\\MWSE folder in Visual Studio Code using File > Open Folder . A prompt should show up to install a few extensions. Other editors can be used if desired, but little support will be offered. All MWSE-Lua content is in simple text files, and any text editor can be used. However, MWSE has only generated meta files for autocompletion with the suggested Visual Studio Code extension in mind. Workflows \u2693\ufe0e Simple \u2693\ufe0e The simplest workflow is already complete for you. There's nothing extra to download, simple open Note This workflow has some drawbacks. If you develop your mods directly in your Morrowind-Dev install, you have to be aware of other mod installations to prevent conflicts during testing. Wrye Mash \u2693\ufe0e A advanced development environment uses Wrye Mash to manage your mod. To setup this environment, do the following: Create a clean Morrowind install, Morrowind-Dev. Install MWSE and all its requirements. Be sure to run MWSE-Update.exe to get the latest version. Install Wrye Mash . Configure Wrye Mash to use your Morrowind-Dev install as the Morrowind directory. Configure Wrye Mash to use your development folder as the mod directory. This can be any location on your computer where you want to store your development files. Open the Data Files\\MWSE folder in Visual Studio Code . To use this environment to develop mods while maintaining a clean install, you can do the following: Make changes as needed to your code. Open Wrye Mash. If you created or deleted files as part of your code changes, use Wrye Mash's Refresh Data tool to reload the install files for your mod. Install your updated mod using Wrye Mash. Start Morrowind and complete testing as needed. Close Morrowind. Uninstall your updated mod using Wrye Mash. This workflow ensures that you maintain a clean Morrowind-Dev install, do not have mod conflicts during testing, and are always testing with the most up-to-date files. Other Recommendations \u2693\ufe0e Lua Formatting Configuration \u2693\ufe0e One of the recommended plugins ( vscode-lua-format ) allows the formatting of lua code. Some bits of this may want to be customized. To do so, create a Data Files\\MWSE\\.lua-format file. Information on the style options can be found here . Below are some preferred formatting config files for developers. NullCascade's Styling column_limit: 120 indent_width: 1 use_tab: true tab_width: 4 continuation_indent_width: 0 spaces_before_call: 1 keep_simple_control_block_one_line: false keep_simple_function_one_line: false align_args: true break_after_functioncall_lp: false break_before_functioncall_rp: false spaces_inside_functioncall_parens: false spaces_inside_functiondef_parens: false align_parameter: true chop_down_parameter: false break_after_functiondef_lp: false break_before_functiondef_rp: false align_table_field: true break_after_table_lb: true break_before_table_rb: true chop_down_table: true chop_down_kv_table: true table_sep: \",\" column_table_limit: 120 extra_sep_at_table_end: true spaces_inside_table_braces: true break_after_operator: true double_quote_to_single_quote: false single_quote_to_double_quote: false spaces_around_equals_in_field: true line_breaks_after_function_body: 1 line_separator: input","title":"Development Workflows"},{"location":"guides/development-workflows/#development-workflows","text":"This guide will demonstrate how to set up your workflow for modding The Elder Scrolls III: Morrowind using MWSE-Lua. A development workflow is the environment and processes used to facilitate software development. There are many ways that you can develop MWSE-Lua mods. This guide will show you how to to use Visual Studio Code to get syntax highlighting, autocompletion, and doc integration. It will also show you how to use a simple install, Wrye Mash, or Mod Organizer 2 to work on your mods. Summary Want to simply get to work? Open the Data Files\\MWSE folder in Visual Studio Code . Install the recommended plugins MWSE suggests in that workspace. You're good to go.","title":"Development Workflows"},{"location":"guides/development-workflows/#requirements","text":"All workflows require an installation of Visual Studio Code . After it is installed, we will also need some Lua-focused extensions. You will also need to make sure that MWSE is up to date. Install MWSE and run MWSE-Update. The simplest way to install these extensions is to open the Data Files\\MWSE folder in Visual Studio Code using File > Open Folder . A prompt should show up to install a few extensions. Other editors can be used if desired, but little support will be offered. All MWSE-Lua content is in simple text files, and any text editor can be used. However, MWSE has only generated meta files for autocompletion with the suggested Visual Studio Code extension in mind.","title":"Requirements"},{"location":"guides/development-workflows/#workflows","text":"","title":"Workflows"},{"location":"guides/development-workflows/#simple","text":"The simplest workflow is already complete for you. There's nothing extra to download, simple open Note This workflow has some drawbacks. If you develop your mods directly in your Morrowind-Dev install, you have to be aware of other mod installations to prevent conflicts during testing.","title":"Simple"},{"location":"guides/development-workflows/#wrye-mash","text":"A advanced development environment uses Wrye Mash to manage your mod. To setup this environment, do the following: Create a clean Morrowind install, Morrowind-Dev. Install MWSE and all its requirements. Be sure to run MWSE-Update.exe to get the latest version. Install Wrye Mash . Configure Wrye Mash to use your Morrowind-Dev install as the Morrowind directory. Configure Wrye Mash to use your development folder as the mod directory. This can be any location on your computer where you want to store your development files. Open the Data Files\\MWSE folder in Visual Studio Code . To use this environment to develop mods while maintaining a clean install, you can do the following: Make changes as needed to your code. Open Wrye Mash. If you created or deleted files as part of your code changes, use Wrye Mash's Refresh Data tool to reload the install files for your mod. Install your updated mod using Wrye Mash. Start Morrowind and complete testing as needed. Close Morrowind. Uninstall your updated mod using Wrye Mash. This workflow ensures that you maintain a clean Morrowind-Dev install, do not have mod conflicts during testing, and are always testing with the most up-to-date files.","title":"Wrye Mash"},{"location":"guides/development-workflows/#other-recommendations","text":"","title":"Other Recommendations"},{"location":"guides/development-workflows/#lua-formatting-configuration","text":"One of the recommended plugins ( vscode-lua-format ) allows the formatting of lua code. Some bits of this may want to be customized. To do so, create a Data Files\\MWSE\\.lua-format file. Information on the style options can be found here . Below are some preferred formatting config files for developers. NullCascade's Styling column_limit: 120 indent_width: 1 use_tab: true tab_width: 4 continuation_indent_width: 0 spaces_before_call: 1 keep_simple_control_block_one_line: false keep_simple_function_one_line: false align_args: true break_after_functioncall_lp: false break_before_functioncall_rp: false spaces_inside_functioncall_parens: false spaces_inside_functiondef_parens: false align_parameter: true chop_down_parameter: false break_after_functiondef_lp: false break_before_functiondef_rp: false align_table_field: true break_after_table_lb: true break_before_table_rb: true chop_down_table: true chop_down_kv_table: true table_sep: \",\" column_table_limit: 120 extra_sep_at_table_end: true spaces_inside_table_braces: true break_after_operator: true double_quote_to_single_quote: false single_quote_to_double_quote: false spaces_around_equals_in_field: true line_breaks_after_function_body: 1 line_separator: input","title":"Lua Formatting Configuration"},{"location":"guides/introduction-to-event-based-programming/","text":"Introduction to Event Based Programming \u2693\ufe0e Event Based Programming, also known as Event Driven Programming or Event Driven Architecture, is an architectural design where code is executed in response to the triggering of an event, also known as a notification, in a software system. A practical example of this is this website. If you click a button on this website, something happens. In other words, your action, clicking on a button, triggers an event. More generally, an action starts a chain of events that results in some other action occurring. This architectural design is the means through which mods can be made for Morrowind using the MWSE-Lua API. Event Based Programming In Context \u2693\ufe0e MWSE provides a variety of events that can be used to execute code. The details of which events are available and what event data is exposed to them can be found on the events page. For example, consider the loaded event. This event occurs after a save game has been loaded. When you register a function for this event, your function will be executed when the event occurs. MWSE will automatically handle triggering the event. All you have to do is register your code to be executed. Here is an example of how to register a function for the loaded event: 1 2 3 4 5 6 7 -- The function to call on the loaded event. local function loadedHandler () -- Execute our code. end -- Register our loadedHandler function to the loaded event. event . register ( tes3 . event . loaded , loadedHandler ) By registering functions to be executed on certain events, powerful functions that extend, override, or alter game logic can be created. Event Filtering \u2693\ufe0e Whenever you register your function for an event, it is executed every time the event occurs. This is not always what you want. For example, you may want to register a function for the keyDown event, but only have your code trigger when a certain key is pressed. You can use event filters for this. 1 2 -- Filter by the scan code to get Z key presses only. event . register ( tes3 . event . key , myOnKeyCallback , { filter = tes3 . scanCode . z } ) Different filters can be applied to different events. Please refer to the documentation for the event that you want to filter for more information. Priority \u2693\ufe0e The order in which functions registered for the same event are executed can be controlled by providing 'priority' argument. 1 event . register ( tes3 . event . activate , onActivateObject , { priority = - 111 }); Functions registered with higher priority will run first. Priority defaults to 0 if the argument is not provided. Conclusion \u2693\ufe0e This guide introduced Event Based Programming and explained some aspects of it in relation to MWSE. This guide also explained how to use event filtering when registering events in MWSE. For more in-depth documentation on Event Based Programming, please refer to this Event Based Programming article, or other external sources.","title":"Introduction to Event Based Programming"},{"location":"guides/introduction-to-event-based-programming/#introduction-to-event-based-programming","text":"Event Based Programming, also known as Event Driven Programming or Event Driven Architecture, is an architectural design where code is executed in response to the triggering of an event, also known as a notification, in a software system. A practical example of this is this website. If you click a button on this website, something happens. In other words, your action, clicking on a button, triggers an event. More generally, an action starts a chain of events that results in some other action occurring. This architectural design is the means through which mods can be made for Morrowind using the MWSE-Lua API.","title":"Introduction to Event Based Programming"},{"location":"guides/introduction-to-event-based-programming/#event-based-programming-in-context","text":"MWSE provides a variety of events that can be used to execute code. The details of which events are available and what event data is exposed to them can be found on the events page. For example, consider the loaded event. This event occurs after a save game has been loaded. When you register a function for this event, your function will be executed when the event occurs. MWSE will automatically handle triggering the event. All you have to do is register your code to be executed. Here is an example of how to register a function for the loaded event: 1 2 3 4 5 6 7 -- The function to call on the loaded event. local function loadedHandler () -- Execute our code. end -- Register our loadedHandler function to the loaded event. event . register ( tes3 . event . loaded , loadedHandler ) By registering functions to be executed on certain events, powerful functions that extend, override, or alter game logic can be created.","title":"Event Based Programming In Context"},{"location":"guides/introduction-to-event-based-programming/#event-filtering","text":"Whenever you register your function for an event, it is executed every time the event occurs. This is not always what you want. For example, you may want to register a function for the keyDown event, but only have your code trigger when a certain key is pressed. You can use event filters for this. 1 2 -- Filter by the scan code to get Z key presses only. event . register ( tes3 . event . key , myOnKeyCallback , { filter = tes3 . scanCode . z } ) Different filters can be applied to different events. Please refer to the documentation for the event that you want to filter for more information.","title":"Event Filtering"},{"location":"guides/introduction-to-event-based-programming/#priority","text":"The order in which functions registered for the same event are executed can be controlled by providing 'priority' argument. 1 event . register ( tes3 . event . activate , onActivateObject , { priority = - 111 }); Functions registered with higher priority will run first. Priority defaults to 0 if the argument is not provided.","title":"Priority"},{"location":"guides/introduction-to-event-based-programming/#conclusion","text":"This guide introduced Event Based Programming and explained some aspects of it in relation to MWSE. This guide also explained how to use event filtering when registering events in MWSE. For more in-depth documentation on Event Based Programming, please refer to this Event Based Programming article, or other external sources.","title":"Conclusion"},{"location":"guides/introduction-to-lua/","text":"Introduction to Lua \u2693\ufe0e This guide will introduce the Lua scripting language, which is used when developing mods for The Elder Scrolls III: Morrowind using MWSE 2.1 Lua. MWSE uses LuaJIT 2.1.0-beta3, which contains functionality from up to version 5.3 of the Lua scripting language. Lua In Context \u2693\ufe0e The following information is based on information from the Lua 5.1 Reference Manual . Lua is an extension programming language. It can be executed by other, traditional languages, such as C, C++, and C#. In the context of MWSE, this means that the MWSE executable can load Lua code and execute it. This ability allows modders to use Lua to create powerful mods for Morrowind, accomplishing things that were previously impossible. One important detail of Lua is that, unlike other languages, it does not have a Main method. This means that it has no mechanism through which to execute itself. In other words, it can only be executed if embedded in another program, called a host client . In the context of MWSE, MWSE is the host client. However, MWSE does require a files named main.lua to execute your code. The MWSE executable will load any file named main.lua and execute the code within. In practice, this means that the main.lua file performs the same role as a traditional main method in C or C++: it provides an entry point into your code. Specifically, it is used to register and initialize your mod. Unlike traditional main methods in C or C++, there are no required functions for main.lua . The file can consist of anything or nothing. However, registering an event is usually required to develop a mod. Conclusion \u2693\ufe0e This article introduced the Lua scripting language and explained it in the context of MWSE. For in-depth documentation of the Lua scripting language, please refer to the Lua 5.1 Reference Manual .","title":"Introduction to Lua"},{"location":"guides/introduction-to-lua/#introduction-to-lua","text":"This guide will introduce the Lua scripting language, which is used when developing mods for The Elder Scrolls III: Morrowind using MWSE 2.1 Lua. MWSE uses LuaJIT 2.1.0-beta3, which contains functionality from up to version 5.3 of the Lua scripting language.","title":"Introduction to Lua"},{"location":"guides/introduction-to-lua/#lua-in-context","text":"The following information is based on information from the Lua 5.1 Reference Manual . Lua is an extension programming language. It can be executed by other, traditional languages, such as C, C++, and C#. In the context of MWSE, this means that the MWSE executable can load Lua code and execute it. This ability allows modders to use Lua to create powerful mods for Morrowind, accomplishing things that were previously impossible. One important detail of Lua is that, unlike other languages, it does not have a Main method. This means that it has no mechanism through which to execute itself. In other words, it can only be executed if embedded in another program, called a host client . In the context of MWSE, MWSE is the host client. However, MWSE does require a files named main.lua to execute your code. The MWSE executable will load any file named main.lua and execute the code within. In practice, this means that the main.lua file performs the same role as a traditional main method in C or C++: it provides an entry point into your code. Specifically, it is used to register and initialize your mod. Unlike traditional main methods in C or C++, there are no required functions for main.lua . The file can consist of anything or nothing. However, registering an event is usually required to develop a mod.","title":"Lua In Context"},{"location":"guides/introduction-to-lua/#conclusion","text":"This article introduced the Lua scripting language and explained it in the context of MWSE. For in-depth documentation of the Lua scripting language, please refer to the Lua 5.1 Reference Manual .","title":"Conclusion"},{"location":"guides/introduction/","text":"Introduction \u2693\ufe0e Welcome to the MWSE-Lua interface. Starting in MWSE 2.1, modders are able to create powerful, event-driven modifications to The Elder Scrolls III: Morrowind using the Lua scripting language. Unlike traditional mwscript, Lua scripting is responsive. Instead of checking every frame to see if an object is being activated, a mod might register to see if their reference was activated. This introduction covers the surface of the different components important to scripting with MWSE-Lua. Lua files do not reside in esms/esps, but rather live in the Data Files\\MWSE directory. Lua Scripting Language \u2693\ufe0e This guide is not meant to be a comprehensive introduction to the Lua language. Its syntax is simple. The following code block demonstrates what the language looks like: -- Define a simple function that takes a single parameter. local function myFunctionName ( firstFunctionParameter ) -- Print to the MWSE log, with the value that was passed. mwse . log ( \"Called my function with parameter = %s\" , firstFunctionParameter ) end -- Print \"foo\" to the MWSE log, prefixed with the function above. myFunctionName ( \"foo\" ) For a broader introduction to the Lua scripting language, refer to the Introduction to Lua guide. Morrowind Object Types \u2693\ufe0e MWSE provides many bindings to more directly manipulate the object types that the Morrowind engine uses. In this example, we find the skooma object, and rename it No-No Juice . -- Tell MWSE that we want to find the skooma object. local skooma = tes3 . getObject ( \"potion_skooma_01\" ) -- Set the skooma object's name. skooma . name = \"No-No Juice\" A complete list of exposed TES3 types and their associated properties/functions can be seen on the respective tes3 types _ page. Events \u2693\ufe0e Events are the primary way in which script modules interact with the game. There are many event hooks, covering everything from player level up to object collisions to world activations. Using an event typically looks like this: -- Define our callback, which will get called when the event happens. local function myKeyEvent ( eventData ) if ( eventData . pressed ) then mwse . log ( \"Key #%d was pressed.\" , eventData . keyCode ) else mwse . log ( \"Key #%d was released.\" , eventData . keyCode ) end end -- Tell MWSE that we want our callback to be invoked when a key is pressed. event . register ( tes3 . event . key , myKeyEvent ) We can also pass filters to events. For the key event, the filter is the key that was pressed/released. -- If we use this instead of the above registration, we filter to key 22 (U). event . register ( tes3 . event . key , myKeyEvent , { filter = tes3 . scanCode . u }) For a broader introduction to event based programming, refer to the Introduction to Event Based Programming guide. The details of which events are available and what event data is exposed to them can be found on the events page. Support Libraries \u2693\ufe0e On top of all this are support libraries to help make modding easier. An example library is timer , which helps to manage time-based operations. -- Define the function we want to call when our timer completes. local function myTimerCallback () tes3 . messageBox ({ message = \"My timer completed!\" }) end -- Start a timer that finishes after 5 seconds. -- When it does finish it will call the above function. timer . start ( 5 , myTimerCallback ) An Unsandboxed World \u2693\ufe0e MWSE does not do any sandboxing for mods. This enables clever innovations, like Sky Diversity , without the need for externally running programs. This also means that MWSE mods can bring in any lua modules they wish to package. Additionally, they can bring in native code -- allowing powerful extensions that Oblivion and Skyrim have had for years. Mod Initialization Scripts \u2693\ufe0e So how do you access all this, and start getting your fingers into the event systems? Unlike vanilla mwscript, Lua scripts are not explicitly restricted to an actively running game. They are also not restricted to esp files -- many MWSE-Lua mods do not require an esp (though may choose to see if an esp is active for an easier user experience). By placing a file with the name main.lua inside the lua folder or any of its subdirectories, that file will get executed when the game is being initialized (e.g. before any esm/esp files are accessed). For example, with the file Data Files\\MWSE\\mods\\demo\\main.lua in place, it will get executed. With the following contents, it will ensure that when a save game is loaded, we get the save game filename printed to our log. local function myLoadedGameCallback ( e ) mwse . log ( \"Loaded game: %s\" , e . filename ) end event . register ( tes3 . event . loaded , myLoadedGameCallback ) Script Overrides and OpenMW Semi-Compatibility \u2693\ufe0e Another feature of MWSE-Lua is the ability to override the normal execution of mwscript. This means that if we have a script in an esp file called myScript we can do the following code to override its behavior: local function myOverrideFunction ( params ) tes3 . messageBox ( string.format ( \"I'm running script '%s' on reference '%s' from Lua, not mwscript!\" , params . script . id , params . reference . id )) end -- Use the above function instead of mwscript logic. mwse . overrideScript ( \"myScript\" , myOverrideFunction ) OpenMW will not be adding compatibility with MWSE mods, legacy or Lua-based. But script overrides exposes a way for modders to write mods that have extended MWSE functionality without causing issues in OpenMW. Basic functionality can be kept to mwscript, while the script can be overriden to enable advanced functionality using Lua. Getting Started \u2693\ufe0e Not sure where to start? Take a look at setting up a Development Workflow , Then, try the Creating a Mod guide, which covers the creation of a new mod from start to finish using MWSE-Lua.","title":"Introduction"},{"location":"guides/introduction/#introduction","text":"Welcome to the MWSE-Lua interface. Starting in MWSE 2.1, modders are able to create powerful, event-driven modifications to The Elder Scrolls III: Morrowind using the Lua scripting language. Unlike traditional mwscript, Lua scripting is responsive. Instead of checking every frame to see if an object is being activated, a mod might register to see if their reference was activated. This introduction covers the surface of the different components important to scripting with MWSE-Lua. Lua files do not reside in esms/esps, but rather live in the Data Files\\MWSE directory.","title":"Introduction"},{"location":"guides/introduction/#lua-scripting-language","text":"This guide is not meant to be a comprehensive introduction to the Lua language. Its syntax is simple. The following code block demonstrates what the language looks like: -- Define a simple function that takes a single parameter. local function myFunctionName ( firstFunctionParameter ) -- Print to the MWSE log, with the value that was passed. mwse . log ( \"Called my function with parameter = %s\" , firstFunctionParameter ) end -- Print \"foo\" to the MWSE log, prefixed with the function above. myFunctionName ( \"foo\" ) For a broader introduction to the Lua scripting language, refer to the Introduction to Lua guide.","title":"Lua Scripting Language"},{"location":"guides/introduction/#morrowind-object-types","text":"MWSE provides many bindings to more directly manipulate the object types that the Morrowind engine uses. In this example, we find the skooma object, and rename it No-No Juice . -- Tell MWSE that we want to find the skooma object. local skooma = tes3 . getObject ( \"potion_skooma_01\" ) -- Set the skooma object's name. skooma . name = \"No-No Juice\" A complete list of exposed TES3 types and their associated properties/functions can be seen on the respective tes3 types _ page.","title":"Morrowind Object Types"},{"location":"guides/introduction/#events","text":"Events are the primary way in which script modules interact with the game. There are many event hooks, covering everything from player level up to object collisions to world activations. Using an event typically looks like this: -- Define our callback, which will get called when the event happens. local function myKeyEvent ( eventData ) if ( eventData . pressed ) then mwse . log ( \"Key #%d was pressed.\" , eventData . keyCode ) else mwse . log ( \"Key #%d was released.\" , eventData . keyCode ) end end -- Tell MWSE that we want our callback to be invoked when a key is pressed. event . register ( tes3 . event . key , myKeyEvent ) We can also pass filters to events. For the key event, the filter is the key that was pressed/released. -- If we use this instead of the above registration, we filter to key 22 (U). event . register ( tes3 . event . key , myKeyEvent , { filter = tes3 . scanCode . u }) For a broader introduction to event based programming, refer to the Introduction to Event Based Programming guide. The details of which events are available and what event data is exposed to them can be found on the events page.","title":"Events"},{"location":"guides/introduction/#support-libraries","text":"On top of all this are support libraries to help make modding easier. An example library is timer , which helps to manage time-based operations. -- Define the function we want to call when our timer completes. local function myTimerCallback () tes3 . messageBox ({ message = \"My timer completed!\" }) end -- Start a timer that finishes after 5 seconds. -- When it does finish it will call the above function. timer . start ( 5 , myTimerCallback )","title":"Support Libraries"},{"location":"guides/introduction/#an-unsandboxed-world","text":"MWSE does not do any sandboxing for mods. This enables clever innovations, like Sky Diversity , without the need for externally running programs. This also means that MWSE mods can bring in any lua modules they wish to package. Additionally, they can bring in native code -- allowing powerful extensions that Oblivion and Skyrim have had for years.","title":"An Unsandboxed World"},{"location":"guides/introduction/#mod-initialization-scripts","text":"So how do you access all this, and start getting your fingers into the event systems? Unlike vanilla mwscript, Lua scripts are not explicitly restricted to an actively running game. They are also not restricted to esp files -- many MWSE-Lua mods do not require an esp (though may choose to see if an esp is active for an easier user experience). By placing a file with the name main.lua inside the lua folder or any of its subdirectories, that file will get executed when the game is being initialized (e.g. before any esm/esp files are accessed). For example, with the file Data Files\\MWSE\\mods\\demo\\main.lua in place, it will get executed. With the following contents, it will ensure that when a save game is loaded, we get the save game filename printed to our log. local function myLoadedGameCallback ( e ) mwse . log ( \"Loaded game: %s\" , e . filename ) end event . register ( tes3 . event . loaded , myLoadedGameCallback )","title":"Mod Initialization Scripts"},{"location":"guides/introduction/#script-overrides-and-openmw-semi-compatibility","text":"Another feature of MWSE-Lua is the ability to override the normal execution of mwscript. This means that if we have a script in an esp file called myScript we can do the following code to override its behavior: local function myOverrideFunction ( params ) tes3 . messageBox ( string.format ( \"I'm running script '%s' on reference '%s' from Lua, not mwscript!\" , params . script . id , params . reference . id )) end -- Use the above function instead of mwscript logic. mwse . overrideScript ( \"myScript\" , myOverrideFunction ) OpenMW will not be adding compatibility with MWSE mods, legacy or Lua-based. But script overrides exposes a way for modders to write mods that have extended MWSE functionality without causing issues in OpenMW. Basic functionality can be kept to mwscript, while the script can be overriden to enable advanced functionality using Lua.","title":"Script Overrides and OpenMW Semi-Compatibility"},{"location":"guides/introduction/#getting-started","text":"Not sure where to start? Take a look at setting up a Development Workflow , Then, try the Creating a Mod guide, which covers the creation of a new mod from start to finish using MWSE-Lua.","title":"Getting Started"},{"location":"guides/logging/","text":"Logging \u2693\ufe0e The MWSE Logger library allows you to register a logger for your mod. It provides the following features: Mod-specific log levels Change log level via MCM Log messages can be color coded according to log level (via MWSE MCM) Optional setting to print messages to a separate log file Log Levels \u2693\ufe0e Log levels are ordered as follows: TRACE , DEBUG , INFO , WARN , and ERROR . Only logs at or below the current log level will be printed to the log file. For example, if log level is set to INFO , then INFO , WARN and ERROR messages will be logged, but TRACE and DEBUG messages will not. Log Colors \u2693\ufe0e In the MWSE MCM, there is an option to enable log colors. This will display logs in different colors according to their log level when tailing the log in the console. However, it is recommended that non-modders keep this turned off, as it makes the log file harder to read in a regular text editor. Log Level Colors: \u2693\ufe0e TRACE : Bright White DEBUG : Green INFO : White WARN : Yellow ERROR : Red Registering and using your Logger \u2693\ufe0e local logger = require ( \"logging.logger\" ) local log = logger . new { name = \"Test Mod\" , logLevel = \"TRACE\" , } log : trace ( \"This is a trace message\" ) log : debug ( \"This is a debug message\" ) log : info ( \"This is an info message\" ) log : warn ( \"This is a warn message\" ) log : error ( \"This is an error message\" ) log : setLogLevel ( \"INFO\" ) Using your logger in different source files \u2693\ufe0e In your main.lua, place the logger creation before other source files are included or required. This is to ensure the logger is created and accessible to these other source files. In the other source files: local log = logger . getLogger ( \"Test Mod\" ) log : info ( \"This is an info message\" ) Creating an MCM to control Log Level \u2693\ufe0e In your MCM config, create a dropdown with the following options: settings : createDropdown { label = \"Logging Level\" , description = \"Set the log level.\" , options = { { label = \"TRACE\" , value = \"TRACE\" }, { label = \"DEBUG\" , value = \"DEBUG\" }, { label = \"INFO\" , value = \"INFO\" }, { label = \"WARN\" , value = \"WARN\" }, { label = \"ERROR\" , value = \"ERROR\" }, { label = \"NONE\" , value = \"NONE\" }, }, variable = mwse . mcm . createTableVariable { id = \"logLevel\" , table = mcmConfig }, callback = function ( self ) log : setLogLevel ( self . variable . value ) end }","title":"Logging"},{"location":"guides/logging/#logging","text":"The MWSE Logger library allows you to register a logger for your mod. It provides the following features: Mod-specific log levels Change log level via MCM Log messages can be color coded according to log level (via MWSE MCM) Optional setting to print messages to a separate log file","title":"Logging"},{"location":"guides/logging/#log-levels","text":"Log levels are ordered as follows: TRACE , DEBUG , INFO , WARN , and ERROR . Only logs at or below the current log level will be printed to the log file. For example, if log level is set to INFO , then INFO , WARN and ERROR messages will be logged, but TRACE and DEBUG messages will not.","title":"Log Levels"},{"location":"guides/logging/#log-colors","text":"In the MWSE MCM, there is an option to enable log colors. This will display logs in different colors according to their log level when tailing the log in the console. However, it is recommended that non-modders keep this turned off, as it makes the log file harder to read in a regular text editor.","title":"Log Colors"},{"location":"guides/logging/#log-level-colors","text":"TRACE : Bright White DEBUG : Green INFO : White WARN : Yellow ERROR : Red","title":"Log Level Colors:"},{"location":"guides/logging/#registering-and-using-your-logger","text":"local logger = require ( \"logging.logger\" ) local log = logger . new { name = \"Test Mod\" , logLevel = \"TRACE\" , } log : trace ( \"This is a trace message\" ) log : debug ( \"This is a debug message\" ) log : info ( \"This is an info message\" ) log : warn ( \"This is a warn message\" ) log : error ( \"This is an error message\" ) log : setLogLevel ( \"INFO\" )","title":"Registering and using your Logger"},{"location":"guides/logging/#using-your-logger-in-different-source-files","text":"In your main.lua, place the logger creation before other source files are included or required. This is to ensure the logger is created and accessible to these other source files. In the other source files: local log = logger . getLogger ( \"Test Mod\" ) log : info ( \"This is an info message\" )","title":"Using your logger in different source files"},{"location":"guides/logging/#creating-an-mcm-to-control-log-level","text":"In your MCM config, create a dropdown with the following options: settings : createDropdown { label = \"Logging Level\" , description = \"Set the log level.\" , options = { { label = \"TRACE\" , value = \"TRACE\" }, { label = \"DEBUG\" , value = \"DEBUG\" }, { label = \"INFO\" , value = \"INFO\" }, { label = \"WARN\" , value = \"WARN\" }, { label = \"ERROR\" , value = \"ERROR\" }, { label = \"NONE\" , value = \"NONE\" }, }, variable = mwse . mcm . createTableVariable { id = \"logLevel\" , table = mcmConfig }, callback = function ( self ) log : setLogLevel ( self . variable . value ) end }","title":"Creating an MCM to control Log Level"},{"location":"guides/lua-in-dialogues/","text":"Lua in Dialogues \u2693\ufe0e It is possible to use lua inside the mwscript results pane in the dialogue menu of the Construction Set. Additional functions are available to extend the usefulness of this feature, including tes3ui.choice and tes3.applyTextDefines . Note The execution order of the Results pane is not mixed. All lua commands will be executed before the mwscript is parsed and executed. Tip The keyboard shortcut Control+A does not work in the Construction Set. Right-clicking still allows selecting all text for quick replacement. Environment \u2693\ufe0e All commands from the same results text share the same lua environment. This allows persistent values between lines. To do this however, the local keyword cannot be used. This does not pollute the normal global namespace. Example: Multi Line Values ; lua playerName = tes3 . player . object . name ; lua tes3 . messageBox ( \"Hello %s\" , playerName ) Additionally, some information has been provided in the environment. These values are reference , dialogue , and info for the specifics of what result is being executed, and on who. Example: Print Results Context ; lua tes3 . messageBox ( \"Reference: %s; Dialogue/INFO: %s/%s;\" , reference , dialogue , info . id ) The environment can also be extended through the dialogueEnvironmentCreated event. This allows libraries to extend what functionality is available to dialogue scripters more easily. Example: Extending the Dialogue Environment In your library's main.lua file, create the event hook: local function onDialogueEnvironmentCreated ( e ) -- Cache the environment variables outside the function for easier access. -- Dialogue scripters shouldn't have to constantly pass these to the functions anyway. local env = e . environment local reference = env . reference local dialogue = env . dialogue local info = env . info -- Define the \"global\" function. function env . DisplayDialogueContext () tes3 . messageBox ( \"Reference: %s; Dialogue/INFO: %s/%s;\" , reference , dialogue , info . id ) end end event . register ( tes3 . event . dialogueEnvironmentCreated , onDialogueEnvironmentCreated ) Then, any dialogue scripts can make use of the new function: ; lua DisplayDialogueContext () Usage \u2693\ufe0e Basics \u2693\ufe0e To write lines with lua, prefix them with a mwscript comment starting with ;lua . This allows the lua commands to be backwards-compatible for users that do not have MWSE, including users of OpenMW. Example: Goodbye with a Message ; The next line will execute lua. ;lua tes3.messageBox(\"This will run as lua!\") ; The next line will just be normal mwscript. goodbye Note All lua logic is contained to a single line. This a limitation of the approach to keep things as compatible as possible. Executing a Lua File \u2693\ufe0e It may be useful to move the majority of your script logic to an actual .lua file, and use dofile . Example: Execute Lua File from Dialogue ; lua dofile ( \"myMod.onSomeDialogueResult\" ) The environment variables are not inherited with dofile . To pass the data, it is best to make a call from a module. Example: Passing Results Context to a Lua Module Define your module with a function to be called: local myDialogueModule = {} --- A function designed to be called from a dialogue result. --- @param reference tes3reference The reference the dialogue is running on. --- @param dialogue tes3dialogue The parent dialogue for our info. --- @param info tes3dialogueInfo The specific INFO object that is being executed. function myDialogueModule . myFunction ( reference , dialogue , info ) tes3 . messageBox ( \"Reference: %s; Dialogue/INFO: %s/%s;\" , reference , dialogue , info . id ) end return myDialogueModule Call your module from the dialogue result: ; lua myDialogueModule = require ( \"myMod.myDialogueModule\" ) ; lua myDialogueModule . myFunction ( reference , dialogue , info ) Preventing Default Scripts \u2693\ufe0e For better compatibility with OpenMW, it can be useful to prevent any vanilla result behavior from happening. This can be done by setting the environment variable noMorrowindScript . Example: Preventing Morrowind Script ; lua noMorrowindScript = true This will not prevent other associated events, but will prevent the mwscript from the result box from being executed. This can be done conditionally as well. Example: Sometimes Preventing Morrowind Script ; lua myDialogueModule = require ( \"myMod.myDialogueModule\" ) ; lua myDialogueModule . myFunction ( reference , dialogue , info ) ; lua if ( myDialogueModule . wasSuccessful ()) then noMorrowindScript = true end","title":"Lua in Dialogues"},{"location":"guides/lua-in-dialogues/#lua-in-dialogues","text":"It is possible to use lua inside the mwscript results pane in the dialogue menu of the Construction Set. Additional functions are available to extend the usefulness of this feature, including tes3ui.choice and tes3.applyTextDefines . Note The execution order of the Results pane is not mixed. All lua commands will be executed before the mwscript is parsed and executed. Tip The keyboard shortcut Control+A does not work in the Construction Set. Right-clicking still allows selecting all text for quick replacement.","title":"Lua in Dialogues"},{"location":"guides/lua-in-dialogues/#environment","text":"All commands from the same results text share the same lua environment. This allows persistent values between lines. To do this however, the local keyword cannot be used. This does not pollute the normal global namespace. Example: Multi Line Values ; lua playerName = tes3 . player . object . name ; lua tes3 . messageBox ( \"Hello %s\" , playerName ) Additionally, some information has been provided in the environment. These values are reference , dialogue , and info for the specifics of what result is being executed, and on who. Example: Print Results Context ; lua tes3 . messageBox ( \"Reference: %s; Dialogue/INFO: %s/%s;\" , reference , dialogue , info . id ) The environment can also be extended through the dialogueEnvironmentCreated event. This allows libraries to extend what functionality is available to dialogue scripters more easily. Example: Extending the Dialogue Environment In your library's main.lua file, create the event hook: local function onDialogueEnvironmentCreated ( e ) -- Cache the environment variables outside the function for easier access. -- Dialogue scripters shouldn't have to constantly pass these to the functions anyway. local env = e . environment local reference = env . reference local dialogue = env . dialogue local info = env . info -- Define the \"global\" function. function env . DisplayDialogueContext () tes3 . messageBox ( \"Reference: %s; Dialogue/INFO: %s/%s;\" , reference , dialogue , info . id ) end end event . register ( tes3 . event . dialogueEnvironmentCreated , onDialogueEnvironmentCreated ) Then, any dialogue scripts can make use of the new function: ; lua DisplayDialogueContext ()","title":"Environment"},{"location":"guides/lua-in-dialogues/#usage","text":"","title":"Usage"},{"location":"guides/lua-in-dialogues/#basics","text":"To write lines with lua, prefix them with a mwscript comment starting with ;lua . This allows the lua commands to be backwards-compatible for users that do not have MWSE, including users of OpenMW. Example: Goodbye with a Message ; The next line will execute lua. ;lua tes3.messageBox(\"This will run as lua!\") ; The next line will just be normal mwscript. goodbye Note All lua logic is contained to a single line. This a limitation of the approach to keep things as compatible as possible.","title":"Basics"},{"location":"guides/lua-in-dialogues/#executing-a-lua-file","text":"It may be useful to move the majority of your script logic to an actual .lua file, and use dofile . Example: Execute Lua File from Dialogue ; lua dofile ( \"myMod.onSomeDialogueResult\" ) The environment variables are not inherited with dofile . To pass the data, it is best to make a call from a module. Example: Passing Results Context to a Lua Module Define your module with a function to be called: local myDialogueModule = {} --- A function designed to be called from a dialogue result. --- @param reference tes3reference The reference the dialogue is running on. --- @param dialogue tes3dialogue The parent dialogue for our info. --- @param info tes3dialogueInfo The specific INFO object that is being executed. function myDialogueModule . myFunction ( reference , dialogue , info ) tes3 . messageBox ( \"Reference: %s; Dialogue/INFO: %s/%s;\" , reference , dialogue , info . id ) end return myDialogueModule Call your module from the dialogue result: ; lua myDialogueModule = require ( \"myMod.myDialogueModule\" ) ; lua myDialogueModule . myFunction ( reference , dialogue , info )","title":"Executing a Lua File"},{"location":"guides/lua-in-dialogues/#preventing-default-scripts","text":"For better compatibility with OpenMW, it can be useful to prevent any vanilla result behavior from happening. This can be done by setting the environment variable noMorrowindScript . Example: Preventing Morrowind Script ; lua noMorrowindScript = true This will not prevent other associated events, but will prevent the mwscript from the result box from being executed. This can be done conditionally as well. Example: Sometimes Preventing Morrowind Script ; lua myDialogueModule = require ( \"myMod.myDialogueModule\" ) ; lua myDialogueModule . myFunction ( reference , dialogue , info ) ; lua if ( myDialogueModule . wasSuccessful ()) then noMorrowindScript = true end","title":"Preventing Default Scripts"},{"location":"guides/mod-config/","text":"Mod Configuration Menu \u2693\ufe0e Mods can create new GUIs. One GUI that that MWSE ships with is the Mod Configuration Menu. By registering into this system, mods can create settings pages for their mods in a place where users can easily find and manipulate them. Out of Date Information The information here is out of date, and does not use the new EasyMCM system. These docs will be updated in the future to cover EasyMCM features. Creating a Config Package \u2693\ufe0e The mod config system operates through a single package that is registered. Below is the simplest code required to get a mod's name into the mod config list: 1 2 3 4 5 6 7 8 9 10 11 12 13 -- Define our mod config package. For now, there's nothing interesting. local modConfigPackage = {} -- The callback to create the mod config GUI when our mod was clicked. function modConfigPackage . onCreate ( container ) container : createLabel ({ text = \"Hello world!\" }) end -- When the mod config menu is ready to start accepting registrations, register this mod. local function registerModConfig () mwse . registerModConfig ( \"My Awesome Mod\" , modConfigPackage ) end event . register ( tes3 . event . modConfigReady , registerModConfig ) After loading up the game, you should see \"My Awesome Mod\" in the mod config menu, with a single \"Hello world!\" in its configuration pane. Handling Close State \u2693\ufe0e It may be desirable to put off saving config options until after the close button has been clicked, or until after the user switched to a new mod. The optional modConfigPackage.onClose callback is called in both cases. 1 2 3 4 -- The callback to do any cleanup needed when our menu is about to be destroyed. function modConfigPackage . onClose ( container ) tes3 . messageBox ( \"Goodbye!\" ) end Hiding from the Config Menu \u2693\ufe0e It may become desirable to hide a mod from the config menu. For example, you may not wish it to be displayed until after the player is in-game if settings are stored in the save game file instead of another file. This can be done by setting the modConfigPackage.hidden field to true . In the below example, we'll hide the mod from the config menu until the game has loaded. 1 2 3 4 5 6 local modConfigPackage = { hidden = true } local function enableModConfigOnLoaded () modConfigPackage . hidden = false end event . register ( tes3 . event . loaded , enableModConfigOnLoaded )","title":"Mod Configuration Menu"},{"location":"guides/mod-config/#mod-configuration-menu","text":"Mods can create new GUIs. One GUI that that MWSE ships with is the Mod Configuration Menu. By registering into this system, mods can create settings pages for their mods in a place where users can easily find and manipulate them. Out of Date Information The information here is out of date, and does not use the new EasyMCM system. These docs will be updated in the future to cover EasyMCM features.","title":"Mod Configuration Menu"},{"location":"guides/mod-config/#creating-a-config-package","text":"The mod config system operates through a single package that is registered. Below is the simplest code required to get a mod's name into the mod config list: 1 2 3 4 5 6 7 8 9 10 11 12 13 -- Define our mod config package. For now, there's nothing interesting. local modConfigPackage = {} -- The callback to create the mod config GUI when our mod was clicked. function modConfigPackage . onCreate ( container ) container : createLabel ({ text = \"Hello world!\" }) end -- When the mod config menu is ready to start accepting registrations, register this mod. local function registerModConfig () mwse . registerModConfig ( \"My Awesome Mod\" , modConfigPackage ) end event . register ( tes3 . event . modConfigReady , registerModConfig ) After loading up the game, you should see \"My Awesome Mod\" in the mod config menu, with a single \"Hello world!\" in its configuration pane.","title":"Creating a Config Package"},{"location":"guides/mod-config/#handling-close-state","text":"It may be desirable to put off saving config options until after the close button has been clicked, or until after the user switched to a new mod. The optional modConfigPackage.onClose callback is called in both cases. 1 2 3 4 -- The callback to do any cleanup needed when our menu is about to be destroyed. function modConfigPackage . onClose ( container ) tes3 . messageBox ( \"Goodbye!\" ) end","title":"Handling Close State"},{"location":"guides/mod-config/#hiding-from-the-config-menu","text":"It may become desirable to hide a mod from the config menu. For example, you may not wish it to be displayed until after the player is in-game if settings are stored in the save game file instead of another file. This can be done by setting the modConfigPackage.hidden field to true . In the below example, we'll hide the mod from the config menu until the game has loaded. 1 2 3 4 5 6 local modConfigPackage = { hidden = true } local function enableModConfigOnLoaded () modConfigPackage . hidden = false end event . register ( tes3 . event . loaded , enableModConfigOnLoaded )","title":"Hiding from the Config Menu"},{"location":"guides/mod-translations/","text":"Mod Translations \u2693\ufe0e MWSE provides means to translate mods using an i18n library . With this, users can write their mods with native support for other languages, or they can write their mods in such a way that other modders can provide translation files. Hello World, Translated \u2693\ufe0e To begin, let's look at some source code that we want to enable translations for. It is a simple mod that displays a message when the player hits the Z key. The Hello World Mod\\main.lua 1 2 3 4 local function onPressZ ( e ) tes3 . messageBox ( \"Hello world!\" ) end event . register ( tes3 . event . keyDown , onPressZ , { filter = tes3 . scanCode . z }) Here we just want to allow translators to provide a different string instead of \"Hello world!\" . To do this, we need to make an i18n folder in our project to define our language files in. For example: The Hello World Mod i18n deu.lua eng.lua fra.lua pol.lua rus.lua main.lua The Hello World Mod\\i18n\\deu.lua 1 2 3 return { [ \"Hello world!\" ] = \"Hallo Welt!\" , } The Hello World Mod\\i18n\\eng.lua 1 2 3 return { [ \"Hello world!\" ] = \"Hello world!\" , } The Hello World Mod\\i18n\\fra.lua 1 2 3 return { [ \"Hello world!\" ] = \"Bonjour le monde!\" , } The Hello World Mod\\i18n\\pol.lua 1 2 3 return { [ \"Hello world!\" ] = \"Witaj \u015bwiecie!\" , } The Hello World Mod\\i18n\\rus.lua 1 2 3 return { [ \"Hello world!\" ] = \"\u041f\u0440\u0438\u0432\u0435\u0442, \u043c\u0438\u0440!\" , } The Hello World Mod\\main.lua 1 2 3 4 5 6 local i18n = mwse . loadTranslations ( \"The Hello World Mod\" ) local function onPressZ ( e ) tes3 . messageBox ( i18n ( \"Hello world!\" )) end event . register ( tes3 . event . keyDown , onPressZ , { filter = tes3 . scanCode . z }) This code looks pretty simple, but what is really happening here? mwse.loadTranslations(\"The Hello World Mod\") loads content from The Hello World Mod\\i18n\\eng.lua as well as an optional additional file, based on the player's game language. This can be deu.lua , fra.lua , or rus.lua . When the i18n translation result is called, it returns the translation for the player's current language with the key \"Hello world!\" . Translation Files \u2693\ufe0e The translation files available in the i18n folder follow a simple format, but it warrants description here. Each is a simple lua file that returns a table. The keys in that table can be passed to the i18n value returned from mwse.loadTranslations to get a translation for the player's language. A translation value is typically a string, but it can also have support for different translations based on values fed. File Encoding MWSE automatically handles encoding of language files. All language files should be written using UTF-8. Dots in Translation Keys When using dots to break apart translation keys, be careful of not to use a category as a value. For example, the following will create an error: return { [ \"mcm.component.console\" ] = \"Enable console component?\" , [ \"mcm.component.console.description\" ] = \"It's really cool, so you should.\" , } Instead, use something like: return { [ \"mcm.component.console.label\" ] = \"Enable console component?\" , [ \"mcm.component.console.description\" ] = \"It's really cool, so you should.\" , } Pluralization \u2693\ufe0e i18n supports the unicode.org plural rules , to make translations more intelligent and context-sensitive. We will discuss feeding values for this shortly. Consider this example, handling how to display the number of iron daggers the player has: Pluralization i18n\\eng.lua : 1 2 3 4 5 6 7 return { itemCountNotification = { zero = \"You have no %{item}s.\" , one = \"You have 1 %{item}.\" , other = \"You have %{count} %{item}s.\" , }, } main.lua : 1 2 3 4 5 6 7 local i18n = mwse . loadTranslations ( \"Iron Dagger Counter\" ) local function onPressZ ( e ) local dagger = tes3 . getObject ( \"iron dagger\" ) local daggerCount = tes3 . getItemCount ({ reference = tes3 . player , item = dagger }) tes3 . messageBox ( i18n ( \"itemCountNotification\" , { count = daggerCount , item = dagger . name })) end event . register ( tes3 . event . keyDown , onPressZ , { filter = tes3 . scanCode . z }) Here, the correct language will be chosen depending on the context of daggerCount . If the player has no iron daggers, \"You have no Iron Daggers.\" will be displayed. If the player has exactly 1 iron dagger, \"You have 1 Iron Dagger.\" . Finally, in any other case, the other key is used. A few other pluralization fields are available: few and many . few is used when value % 100 is between 3 and 10. many is used when value % 100 is between 11 and 99. Interpolation \u2693\ufe0e Values can be passed to translation strings in a few different ways: Named Style i18n\\eng.lua : 1 2 3 4 5 6 7 return { itemCountNotification = { zero = \"You have no %{item}s.\" , one = \"You have 1 %{item}.\" , other = \"You have %{count} %{item}s.\" , }, } main.lua : 1 tes3 . messageBox ( i18n ( \"itemCountNotification\" , { count = daggerCount , item = dagger . name })) string.format Style i18n\\eng.lua : 1 2 3 4 5 6 7 return { itemCountNotification = { zero = \"You have no %ss.\" , one = \"You have 1 %s.\" , other = \"You have %d %ss.\" , }, } main.lua : 1 2 3 4 5 if ( daggerCount > 1 ) then tes3 . messageBox ( i18n ( \"itemCountNotification\" , { daggerCount , dagger . name })) else tes3 . messageBox ( i18n ( \"itemCountNotification\" , { dagger . name })) end Named with string.format Style i18n\\eng.lua : 1 2 3 4 5 6 7 return { itemCountNotification = { zero = \"You have no %<item>ss.\" , one = \"You have 1 %<item>d.\" , other = \"You have %<count>d %<item>ss.\" , }, } main.lua : 1 tes3 . messageBox ( i18n ( \"itemCountNotification\" , { count = daggerCount , item = dagger . name }))","title":"Mod Translations"},{"location":"guides/mod-translations/#mod-translations","text":"MWSE provides means to translate mods using an i18n library . With this, users can write their mods with native support for other languages, or they can write their mods in such a way that other modders can provide translation files.","title":"Mod Translations"},{"location":"guides/mod-translations/#hello-world-translated","text":"To begin, let's look at some source code that we want to enable translations for. It is a simple mod that displays a message when the player hits the Z key. The Hello World Mod\\main.lua 1 2 3 4 local function onPressZ ( e ) tes3 . messageBox ( \"Hello world!\" ) end event . register ( tes3 . event . keyDown , onPressZ , { filter = tes3 . scanCode . z }) Here we just want to allow translators to provide a different string instead of \"Hello world!\" . To do this, we need to make an i18n folder in our project to define our language files in. For example: The Hello World Mod i18n deu.lua eng.lua fra.lua pol.lua rus.lua main.lua The Hello World Mod\\i18n\\deu.lua 1 2 3 return { [ \"Hello world!\" ] = \"Hallo Welt!\" , } The Hello World Mod\\i18n\\eng.lua 1 2 3 return { [ \"Hello world!\" ] = \"Hello world!\" , } The Hello World Mod\\i18n\\fra.lua 1 2 3 return { [ \"Hello world!\" ] = \"Bonjour le monde!\" , } The Hello World Mod\\i18n\\pol.lua 1 2 3 return { [ \"Hello world!\" ] = \"Witaj \u015bwiecie!\" , } The Hello World Mod\\i18n\\rus.lua 1 2 3 return { [ \"Hello world!\" ] = \"\u041f\u0440\u0438\u0432\u0435\u0442, \u043c\u0438\u0440!\" , } The Hello World Mod\\main.lua 1 2 3 4 5 6 local i18n = mwse . loadTranslations ( \"The Hello World Mod\" ) local function onPressZ ( e ) tes3 . messageBox ( i18n ( \"Hello world!\" )) end event . register ( tes3 . event . keyDown , onPressZ , { filter = tes3 . scanCode . z }) This code looks pretty simple, but what is really happening here? mwse.loadTranslations(\"The Hello World Mod\") loads content from The Hello World Mod\\i18n\\eng.lua as well as an optional additional file, based on the player's game language. This can be deu.lua , fra.lua , or rus.lua . When the i18n translation result is called, it returns the translation for the player's current language with the key \"Hello world!\" .","title":"Hello World, Translated"},{"location":"guides/mod-translations/#translation-files","text":"The translation files available in the i18n folder follow a simple format, but it warrants description here. Each is a simple lua file that returns a table. The keys in that table can be passed to the i18n value returned from mwse.loadTranslations to get a translation for the player's language. A translation value is typically a string, but it can also have support for different translations based on values fed. File Encoding MWSE automatically handles encoding of language files. All language files should be written using UTF-8. Dots in Translation Keys When using dots to break apart translation keys, be careful of not to use a category as a value. For example, the following will create an error: return { [ \"mcm.component.console\" ] = \"Enable console component?\" , [ \"mcm.component.console.description\" ] = \"It's really cool, so you should.\" , } Instead, use something like: return { [ \"mcm.component.console.label\" ] = \"Enable console component?\" , [ \"mcm.component.console.description\" ] = \"It's really cool, so you should.\" , }","title":"Translation Files"},{"location":"guides/mod-translations/#pluralization","text":"i18n supports the unicode.org plural rules , to make translations more intelligent and context-sensitive. We will discuss feeding values for this shortly. Consider this example, handling how to display the number of iron daggers the player has: Pluralization i18n\\eng.lua : 1 2 3 4 5 6 7 return { itemCountNotification = { zero = \"You have no %{item}s.\" , one = \"You have 1 %{item}.\" , other = \"You have %{count} %{item}s.\" , }, } main.lua : 1 2 3 4 5 6 7 local i18n = mwse . loadTranslations ( \"Iron Dagger Counter\" ) local function onPressZ ( e ) local dagger = tes3 . getObject ( \"iron dagger\" ) local daggerCount = tes3 . getItemCount ({ reference = tes3 . player , item = dagger }) tes3 . messageBox ( i18n ( \"itemCountNotification\" , { count = daggerCount , item = dagger . name })) end event . register ( tes3 . event . keyDown , onPressZ , { filter = tes3 . scanCode . z }) Here, the correct language will be chosen depending on the context of daggerCount . If the player has no iron daggers, \"You have no Iron Daggers.\" will be displayed. If the player has exactly 1 iron dagger, \"You have 1 Iron Dagger.\" . Finally, in any other case, the other key is used. A few other pluralization fields are available: few and many . few is used when value % 100 is between 3 and 10. many is used when value % 100 is between 11 and 99.","title":"Pluralization"},{"location":"guides/mod-translations/#interpolation","text":"Values can be passed to translation strings in a few different ways: Named Style i18n\\eng.lua : 1 2 3 4 5 6 7 return { itemCountNotification = { zero = \"You have no %{item}s.\" , one = \"You have 1 %{item}.\" , other = \"You have %{count} %{item}s.\" , }, } main.lua : 1 tes3 . messageBox ( i18n ( \"itemCountNotification\" , { count = daggerCount , item = dagger . name })) string.format Style i18n\\eng.lua : 1 2 3 4 5 6 7 return { itemCountNotification = { zero = \"You have no %ss.\" , one = \"You have 1 %s.\" , other = \"You have %d %ss.\" , }, } main.lua : 1 2 3 4 5 if ( daggerCount > 1 ) then tes3 . messageBox ( i18n ( \"itemCountNotification\" , { daggerCount , dagger . name })) else tes3 . messageBox ( i18n ( \"itemCountNotification\" , { dagger . name })) end Named with string.format Style i18n\\eng.lua : 1 2 3 4 5 6 7 return { itemCountNotification = { zero = \"You have no %<item>ss.\" , one = \"You have 1 %<item>d.\" , other = \"You have %<count>d %<item>ss.\" , }, } main.lua : 1 tes3 . messageBox ( i18n ( \"itemCountNotification\" , { count = daggerCount , item = dagger . name }))","title":"Interpolation"},{"location":"guides/tes3ui-events/","text":"TES3 UI Events Guide \u2693\ufe0e These example functions allows you to access magic effect tooltips, as seen on the bottom right of the HUD and on the magic menu. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 local function magicEffectTooltip () local helpMenu = tes3ui . findHelpLayerMenu ( \"HelpMenu\" ) if ( helpMenu ) then local t = string.format ( \"<< %s >>\" , e . source . contentPath ) helpMenu : createLabel { text = t } helpMenu : updateLayout () end end local function editMagicEffectTooltips () multi = tes3ui . findMenu ( \"MenuMulti\" ) iconBar = multi : findChild ( \"MenuMulti_magic_icons_1\" ) for _ , x in pairs ( iconBar . children ) do x : registerAfter ( tes3 . uiEvent . help , magicEffectTooltip ) end multi = tes3ui . findMenu ( \"MenuMagic\" ) iconBar = multi : findChild ( \"MagicMenu_t_icon_row_1\" ) for _ , x in pairs ( iconBar . children ) do x : registerAfter ( tes3 . uiEvent . help , magicEffectTooltip ) end end","title":"TES3 UI Events Guide"},{"location":"guides/tes3ui-events/#tes3-ui-events-guide","text":"These example functions allows you to access magic effect tooltips, as seen on the bottom right of the HUD and on the magic menu. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 local function magicEffectTooltip () local helpMenu = tes3ui . findHelpLayerMenu ( \"HelpMenu\" ) if ( helpMenu ) then local t = string.format ( \"<< %s >>\" , e . source . contentPath ) helpMenu : createLabel { text = t } helpMenu : updateLayout () end end local function editMagicEffectTooltips () multi = tes3ui . findMenu ( \"MenuMulti\" ) iconBar = multi : findChild ( \"MenuMulti_magic_icons_1\" ) for _ , x in pairs ( iconBar . children ) do x : registerAfter ( tes3 . uiEvent . help , magicEffectTooltip ) end multi = tes3ui . findMenu ( \"MenuMagic\" ) iconBar = multi : findChild ( \"MagicMenu_t_icon_row_1\" ) for _ , x in pairs ( iconBar . children ) do x : registerAfter ( tes3 . uiEvent . help , magicEffectTooltip ) end end","title":"TES3 UI Events Guide"},{"location":"guides/tes3ui/","text":"TES3 UI Example \u2693\ufe0e This example allows you to rename the object you are targetting. When the '/' key is pressed, a custom input window is opened. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 --[[ Mod: TES3UI TextInput Author: Hrnchamd ]] -- local this = {} function this . init () this . id_menu = tes3ui . registerID ( \"example:MenuTextInput\" ) this . id_input = tes3ui . registerID ( \"example:MenuTextInput_Text\" ) this . id_ok = tes3ui . registerID ( \"example:MenuTextInput_Ok\" ) this . id_cancel = tes3ui . registerID ( \"example:MenuTextInput_Cancel\" ) end -- Create window and layout. Called by onCommand. function this . createWindow () -- Return if window is already open if ( tes3ui . findMenu ( this . id_menu ) ~= nil ) then return end -- Create window and frame local menu = tes3ui . createMenu { id = this . id_menu , fixedFrame = true } -- To avoid low contrast, text input windows should not use menu transparency settings menu . alpha = 1.0 -- Create layout local input_label = menu : createLabel { text = \"Rename your item\" } input_label . borderBottom = 5 local input_block = menu : createBlock {} input_block . width = 300 input_block . autoHeight = true input_block . childAlignX = 0.5 -- centre content alignment local border = input_block : createThinBorder {} border . width = 300 border . height = 30 border . childAlignX = 0.5 border . childAlignY = 0.5 local input = border : createTextInput { id = this . id_input } input . text = this . item . name -- initial text input . borderLeft = 5 input . borderRight = 5 input . widget . lengthLimit = 31 -- TextInput custom properties input . widget . eraseOnFirstKey = true local button_block = menu : createBlock {} button_block . widthProportional = 1.0 -- width is 100% parent width button_block . autoHeight = true button_block . childAlignX = 1.0 -- right content alignment local button_cancel = button_block : createButton { id = this . id_cancel , text = tes3 . findGMST ( \"sCancel\" ). value } local button_ok = button_block : createButton { id = this . id_ok , text = tes3 . findGMST ( \"sOK\" ). value } -- Events button_cancel : register ( tes3 . uiEvent . mouseClick , this . onCancel ) menu : register ( tes3 . uiEvent . keyEnter , this . onOK ) -- only works when text input is not captured input : register ( tes3 . uiEvent . keyEnter , this . onOK ) button_ok : register ( tes3 . uiEvent . mouseClick , this . onOK ) -- Final setup menu : updateLayout () tes3ui . enterMenuMode ( this . id_menu ) tes3ui . acquireTextInput ( input ) -- automatically reset when menu is closed end -- OK button callback. function this . onOK ( e ) local menu = tes3ui . findMenu ( this . id_menu ) if ( menu ) then -- Copy text *before* the menu is destroyed local name = menu : findChild ( this . id_input ). text tes3ui . leaveMenuMode () menu : destroy () tes3 . messageBox { message = this . item . name .. \" renamed to \" .. name } this . item . name = name end end -- Cancel button callback. function this . onCancel ( e ) local menu = tes3ui . findMenu ( this . id_menu ) if ( menu ) then tes3ui . leaveMenuMode () menu : destroy () end end -- Keydown callback. function this . onCommand ( e ) local t = tes3 . getPlayerTarget () if ( t ) then t = t . object . baseObject or t . object -- Select actor base object if ( t . name ) then this . item = t this . createWindow () end end end event . register ( tes3 . event . initialized , this . init ) event . register ( tes3 . event . keyDown , this . onCommand , { filter = tes3 . scanCode [ \"/\" ] }) -- \"/\" key","title":"TES3 UI Example"},{"location":"guides/tes3ui/#tes3-ui-example","text":"This example allows you to rename the object you are targetting. When the '/' key is pressed, a custom input window is opened. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 --[[ Mod: TES3UI TextInput Author: Hrnchamd ]] -- local this = {} function this . init () this . id_menu = tes3ui . registerID ( \"example:MenuTextInput\" ) this . id_input = tes3ui . registerID ( \"example:MenuTextInput_Text\" ) this . id_ok = tes3ui . registerID ( \"example:MenuTextInput_Ok\" ) this . id_cancel = tes3ui . registerID ( \"example:MenuTextInput_Cancel\" ) end -- Create window and layout. Called by onCommand. function this . createWindow () -- Return if window is already open if ( tes3ui . findMenu ( this . id_menu ) ~= nil ) then return end -- Create window and frame local menu = tes3ui . createMenu { id = this . id_menu , fixedFrame = true } -- To avoid low contrast, text input windows should not use menu transparency settings menu . alpha = 1.0 -- Create layout local input_label = menu : createLabel { text = \"Rename your item\" } input_label . borderBottom = 5 local input_block = menu : createBlock {} input_block . width = 300 input_block . autoHeight = true input_block . childAlignX = 0.5 -- centre content alignment local border = input_block : createThinBorder {} border . width = 300 border . height = 30 border . childAlignX = 0.5 border . childAlignY = 0.5 local input = border : createTextInput { id = this . id_input } input . text = this . item . name -- initial text input . borderLeft = 5 input . borderRight = 5 input . widget . lengthLimit = 31 -- TextInput custom properties input . widget . eraseOnFirstKey = true local button_block = menu : createBlock {} button_block . widthProportional = 1.0 -- width is 100% parent width button_block . autoHeight = true button_block . childAlignX = 1.0 -- right content alignment local button_cancel = button_block : createButton { id = this . id_cancel , text = tes3 . findGMST ( \"sCancel\" ). value } local button_ok = button_block : createButton { id = this . id_ok , text = tes3 . findGMST ( \"sOK\" ). value } -- Events button_cancel : register ( tes3 . uiEvent . mouseClick , this . onCancel ) menu : register ( tes3 . uiEvent . keyEnter , this . onOK ) -- only works when text input is not captured input : register ( tes3 . uiEvent . keyEnter , this . onOK ) button_ok : register ( tes3 . uiEvent . mouseClick , this . onOK ) -- Final setup menu : updateLayout () tes3ui . enterMenuMode ( this . id_menu ) tes3ui . acquireTextInput ( input ) -- automatically reset when menu is closed end -- OK button callback. function this . onOK ( e ) local menu = tes3ui . findMenu ( this . id_menu ) if ( menu ) then -- Copy text *before* the menu is destroyed local name = menu : findChild ( this . id_input ). text tes3ui . leaveMenuMode () menu : destroy () tes3 . messageBox { message = this . item . name .. \" renamed to \" .. name } this . item . name = name end end -- Cancel button callback. function this . onCancel ( e ) local menu = tes3ui . findMenu ( this . id_menu ) if ( menu ) then tes3ui . leaveMenuMode () menu : destroy () end end -- Keydown callback. function this . onCommand ( e ) local t = tes3 . getPlayerTarget () if ( t ) then t = t . object . baseObject or t . object -- Select actor base object if ( t . name ) then this . item = t this . createWindow () end end end event . register ( tes3 . event . initialized , this . init ) event . register ( tes3 . event . keyDown , this . onCommand , { filter = tes3 . scanCode [ \"/\" ] }) -- \"/\" key","title":"TES3 UI Example"},{"location":"guides/timers/","text":"Timers \u2693\ufe0e Timers are a way to keep track with the passage of time. They are volatile, meaning that they do not persist between saved games. Creating a Basic Timer \u2693\ufe0e To create a timer, pass a table of options to timer.start() . 1 2 3 4 5 6 7 -- The function we want to run when the timer completes. local function onTimerComplete () tes3 . messageBox ( \"30 seconds have passed!\" ) end -- Create our timer to fire the above function after 30 seconds. timer . start ({ duration = 30 , callback = onTimerComplete }) In the above example, we create a message box after 30 seconds. Repeating a Timer \u2693\ufe0e Timers can repeat, based on an iterations parameter. This can be used to define a timer that will trigger multiple times. 1 2 3 4 5 6 7 -- The function we want to run when the timer completes. local function onTimerComplete () tes3 . messageBox ( \"A minute has passed!\" ) end -- Create our timer to fire the above function every minute for 5 minutes. timer . start ({ duration = 60 , callback = onTimerComplete , iterations = 5 }) Additionally, a value of -1 will create a timer that will repeat forever. Controlling Timer State \u2693\ufe0e A timer's state (read through the .state property), can be timer.active , timer.paused , or timer.expired . An active timer is running normally. A paused timer doesn't run, but can be resumed to pick back up where it left off. An expired timer has finished running (and has no more iterations). A timer can be told to pause, resume, reset, or cancel. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 -- Create a timer. local myTimer = timer . start ({ duration = 60 , callback = onTimerComplete }) -- Pause the timer. It can be resumed again using myTimer:resume() myTimer : pause () -- Resume the timer. It's now active again. myTimer : resume () -- Reset the timer. It will take 60 seconds from right now to finish. myTimer : reset () -- Cancel the timer. We will no longer care about it. myTimer : cancel () Creating Different Types of Timers \u2693\ufe0e Three different types of timers are available, though an advanced user can create their own types of timers and manage their clock cycles. The default types are: Real , defined by timer.real . Real timers operate primarily on real time, incrementing seconds whenever the game window is active. Simulate , defined by timer.simulate . Simulate timers operate much like real timers, incrementing seconds but only when the game is simulating (i.e. not in menu mode). This is the default type of timer. Game , defined by timer.game . Game timers operate by game hour, matching game time. 1 2 3 4 5 6 7 8 -- Create a timer that ends after 60 seconds. local myTimer = timer . start ({ duration = 60 , callback = onTimerComplete , type = timer . real }) -- Create a timer that ends after 30 unpaused seconds. local myTimer = timer . start ({ duration = 30 , callback = onTimerComplete , type = timer . simulate }) -- Create a timer that ends after 4 game hours. local myTimer = timer . start ({ duration = 4 , callback = onTimerComplete , type = timer . game })","title":"Timers"},{"location":"guides/timers/#timers","text":"Timers are a way to keep track with the passage of time. They are volatile, meaning that they do not persist between saved games.","title":"Timers"},{"location":"guides/timers/#creating-a-basic-timer","text":"To create a timer, pass a table of options to timer.start() . 1 2 3 4 5 6 7 -- The function we want to run when the timer completes. local function onTimerComplete () tes3 . messageBox ( \"30 seconds have passed!\" ) end -- Create our timer to fire the above function after 30 seconds. timer . start ({ duration = 30 , callback = onTimerComplete }) In the above example, we create a message box after 30 seconds.","title":"Creating a Basic Timer"},{"location":"guides/timers/#repeating-a-timer","text":"Timers can repeat, based on an iterations parameter. This can be used to define a timer that will trigger multiple times. 1 2 3 4 5 6 7 -- The function we want to run when the timer completes. local function onTimerComplete () tes3 . messageBox ( \"A minute has passed!\" ) end -- Create our timer to fire the above function every minute for 5 minutes. timer . start ({ duration = 60 , callback = onTimerComplete , iterations = 5 }) Additionally, a value of -1 will create a timer that will repeat forever.","title":"Repeating a Timer"},{"location":"guides/timers/#controlling-timer-state","text":"A timer's state (read through the .state property), can be timer.active , timer.paused , or timer.expired . An active timer is running normally. A paused timer doesn't run, but can be resumed to pick back up where it left off. An expired timer has finished running (and has no more iterations). A timer can be told to pause, resume, reset, or cancel. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 -- Create a timer. local myTimer = timer . start ({ duration = 60 , callback = onTimerComplete }) -- Pause the timer. It can be resumed again using myTimer:resume() myTimer : pause () -- Resume the timer. It's now active again. myTimer : resume () -- Reset the timer. It will take 60 seconds from right now to finish. myTimer : reset () -- Cancel the timer. We will no longer care about it. myTimer : cancel ()","title":"Controlling Timer State"},{"location":"guides/timers/#creating-different-types-of-timers","text":"Three different types of timers are available, though an advanced user can create their own types of timers and manage their clock cycles. The default types are: Real , defined by timer.real . Real timers operate primarily on real time, incrementing seconds whenever the game window is active. Simulate , defined by timer.simulate . Simulate timers operate much like real timers, incrementing seconds but only when the game is simulating (i.e. not in menu mode). This is the default type of timer. Game , defined by timer.game . Game timers operate by game hour, matching game time. 1 2 3 4 5 6 7 8 -- Create a timer that ends after 60 seconds. local myTimer = timer . start ({ duration = 60 , callback = onTimerComplete , type = timer . real }) -- Create a timer that ends after 30 unpaused seconds. local myTimer = timer . start ({ duration = 30 , callback = onTimerComplete , type = timer . simulate }) -- Create a timer that ends after 4 game hours. local myTimer = timer . start ({ duration = 4 , callback = onTimerComplete , type = timer . game })","title":"Creating Different Types of Timers"},{"location":"references/action-flags/","text":"Action Flags \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.actionFlag table. For example, tes3.actionFlag.onMurder has a value of 64 . Index Value useEnabled 1 onActivate 2 onDeath 16 onKnockout 32 onMurder 64 doorOpening 256 doorClosing 512 doorJammedOpening 1024 doorJammedClosing 2048","title":"Action Flags"},{"location":"references/action-flags/#action-flags","text":"Tip These values are available in Lua by their index in the tes3.actionFlag table. For example, tes3.actionFlag.onMurder has a value of 64 . Index Value useEnabled 1 onActivate 2 onDeath 16 onKnockout 32 onMurder 64 doorOpening 256 doorClosing 512 doorJammedOpening 1024 doorJammedClosing 2048","title":"Action Flags"},{"location":"references/active-body-part-layers/","text":"Active Body Part Layers \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.activeBodyPartLayer table. For example, tes3.activeBodyPartLayer.base has a value of 0 . Index Value base 0 clothing 1 armor 2","title":"Active Body Part Layers"},{"location":"references/active-body-part-layers/#active-body-part-layers","text":"Tip These values are available in Lua by their index in the tes3.activeBodyPartLayer table. For example, tes3.activeBodyPartLayer.base has a value of 0 . Index Value base 0 clothing 1 armor 2","title":"Active Body Part Layers"},{"location":"references/active-body-parts/","text":"Active Body Parts \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.activeBodyPart table. For example, tes3.activeBodyPart.hair has a value of 1 . Index Value head 0 hair 1 neck 2 chest 3 groin 4 skirt 5 rightHand 6 leftHand 7 rightWrist 8 leftWrist 9 shield 10 rightForearm 11 leftForearm 12 rightUpperArm 13 leftUpperArm 14 rightFoot 15 leftFoot 16 rightAnkle 17 leftAnkle 18 rightKnee 19 leftKnee 20 rightUpperLeg 21 leftUpperLeg 22 rightPauldron 23 leftPauldron 24 weapon 25 tail 26","title":"Active Body Parts"},{"location":"references/active-body-parts/#active-body-parts","text":"Tip These values are available in Lua by their index in the tes3.activeBodyPart table. For example, tes3.activeBodyPart.hair has a value of 1 . Index Value head 0 hair 1 neck 2 chest 3 groin 4 skirt 5 rightHand 6 leftHand 7 rightWrist 8 leftWrist 9 shield 10 rightForearm 11 leftForearm 12 rightUpperArm 13 leftUpperArm 14 rightFoot 15 leftFoot 16 rightAnkle 17 leftAnkle 18 rightKnee 19 leftKnee 20 rightUpperLeg 21 leftUpperLeg 22 rightPauldron 23 leftPauldron 24 weapon 25 tail 26","title":"Active Body Parts"},{"location":"references/actor-types/","text":"Actor Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.actorType table. For example, tes3.actorType.creature has a value of 0 . Index Value creature 0 npc 1 player 2","title":"Actor Types"},{"location":"references/actor-types/#actor-types","text":"Tip These values are available in Lua by their index in the tes3.actorType table. For example, tes3.actorType.creature has a value of 0 . Index Value creature 0 npc 1 player 2","title":"Actor Types"},{"location":"references/ai-behavior-states/","text":"AI Behavior States \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.aiBehaviorState table. For example, tes3.aiBehaviorState.undecided has a value of -1 . Index Value undecided -1 hello 0 idle 2 attack 3 avoid 4 flee 6 walk 8 greet 12","title":"AI Behavior States"},{"location":"references/ai-behavior-states/#ai-behavior-states","text":"Tip These values are available in Lua by their index in the tes3.aiBehaviorState table. For example, tes3.aiBehaviorState.undecided has a value of -1 . Index Value undecided -1 hello 0 idle 2 attack 3 avoid 4 flee 6 walk 8 greet 12","title":"AI Behavior States"},{"location":"references/ai-packages/","text":"AI Packages \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.aiPackage table. For example, tes3.aiPackage.none has a value of -1 . Index Value none -1 wander 0 travel 1 escort 2 follow 3 activate 4","title":"AI Packages"},{"location":"references/ai-packages/#ai-packages","text":"Tip These values are available in Lua by their index in the tes3.aiPackage table. For example, tes3.aiPackage.none has a value of -1 . Index Value none -1 wander 0 travel 1 escort 2 follow 3 activate 4","title":"AI Packages"},{"location":"references/animation-body-sections/","text":"Animation Body Sections \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.animationBodySection table. For example, tes3.animationBodySection.leftArm has a value of 2 . Index Value lower 0 upper 1 leftArm 2","title":"Animation Body Sections"},{"location":"references/animation-body-sections/#animation-body-sections","text":"Tip These values are available in Lua by their index in the tes3.animationBodySection table. For example, tes3.animationBodySection.leftArm has a value of 2 . Index Value lower 0 upper 1 leftArm 2","title":"Animation Body Sections"},{"location":"references/animation-groups/","text":"Animation Groups \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.animationGroup table. For example, tes3.animationGroup.swimKnockOut has a value of 41 . Index Value idle 0 idle2 1 idle3 2 idle4 3 idle5 4 idle6 5 idle7 6 idle8 7 idle9 8 idleHandToHand 9 idle1h 10 idle2c 11 idle2w 12 idleSwim 13 idleSpell 14 idleCrossbow 15 idleSneak 16 idleStorm 17 torch 18 hit1 19 hit2 20 hit3 21 hit4 22 hit5 23 swimHit1 24 swimHit2 25 swimHit3 26 death1 27 death2 28 death3 29 death4 30 death5 31 deathKnockDown 32 deathKnockOut 33 knockDown 34 knockOut 35 swimDeath 36 swimDeath2 37 swimDeath3 38 swimDeathKnockDown 39 swimDeathKnockOut 40 swimKnockOut 41 swimKnockDown 42 swimWalkForward 43 swimWalkBack 44 swimWalkLeft 45 swimWalkRight 46 swimRunForward 47 swimRunBack 48 swimRunLeft 49 swimRunRight 50 swimTurnLeft 51 swimTurnRight 52 walkForward 53 walkBack 54 walkLeft 55 walkRight 56 turnLeft 57 turnRight 58 runForward 59 runBack 60 runLeft 61 runRight 62 sneakForward 63 sneakBack 64 sneakLeft 65 sneakRight 66 jump 67 walkForwardHandToHand 68 walkBackHandToHand 69 walkLeftHandToHand 70 walkRightHandToHand 71 turnLeftHandToHand 72 turnRightHandToHand 73 runForwardHandToHand 74 runBackHandToHand 75 runLeftHandToHand 76 runRightHandToHand 77 sneakForwardHandToHand 78 sneakBackHandToHand 79 sneakLeftHandToHand 80 sneakRightHandToHand 81 jumpHandToHand 82 walkForward1h 83 walkBack1h 84 walkLeft1h 85 walkRight1h 86 turnLeft1h 87 turnRight1h 88 runForward1h 89 runBack1h 90 runLeft1h 91 runRight1h 92 sneakForward1h 93 sneakBack1h 94 sneakLeft1h 95 sneakRight1h 96 jump1h 97 walkForward2c 98 walkBack2c 99 walkLeft2c 100 walkRight2c 101 turnLeft2c 102 turnRight2c 103 runForward2c 104 runBack2c 105 runLeft2c 106 runRight2c 107 sneakForward2c 108 sneakBack2c 109 sneakLeft2c 110 sneakRight2c 111 jump2c 112 walkForward2w 113 walkBack2w 114 walkLeft2w 115 walkRight2w 116 turnLeft2w 117 turnRight2w 118 runForward2w 119 runBack2w 120 runLeft2w 121 runRight2w 122 sneakForward2w 123 sneakBack2w 124 sneakLeft2w 125 sneakRight2w 126 jump2w 127 spellCast 128 spellTurnLeft 129 spellTurnRight 130 attack1 131 attack2 132 attack3 133 swimAttack1 134 swimAttack2 135 swimAttack3 136 handToHand 137 crossbow 138 bowAndArrow 139 throwWeapon 140 weaponOneHand 141 weaponTwoHand 142 weaponTwoWide 143 shield 144 pickProbe 145 inventoryHandToHand 146 inventoryWeaponOneHand 147 inventoryWeaponTwoHand 148 inventoryWeaponTwoWide 149","title":"Animation Groups"},{"location":"references/animation-groups/#animation-groups","text":"Tip These values are available in Lua by their index in the tes3.animationGroup table. For example, tes3.animationGroup.swimKnockOut has a value of 41 . Index Value idle 0 idle2 1 idle3 2 idle4 3 idle5 4 idle6 5 idle7 6 idle8 7 idle9 8 idleHandToHand 9 idle1h 10 idle2c 11 idle2w 12 idleSwim 13 idleSpell 14 idleCrossbow 15 idleSneak 16 idleStorm 17 torch 18 hit1 19 hit2 20 hit3 21 hit4 22 hit5 23 swimHit1 24 swimHit2 25 swimHit3 26 death1 27 death2 28 death3 29 death4 30 death5 31 deathKnockDown 32 deathKnockOut 33 knockDown 34 knockOut 35 swimDeath 36 swimDeath2 37 swimDeath3 38 swimDeathKnockDown 39 swimDeathKnockOut 40 swimKnockOut 41 swimKnockDown 42 swimWalkForward 43 swimWalkBack 44 swimWalkLeft 45 swimWalkRight 46 swimRunForward 47 swimRunBack 48 swimRunLeft 49 swimRunRight 50 swimTurnLeft 51 swimTurnRight 52 walkForward 53 walkBack 54 walkLeft 55 walkRight 56 turnLeft 57 turnRight 58 runForward 59 runBack 60 runLeft 61 runRight 62 sneakForward 63 sneakBack 64 sneakLeft 65 sneakRight 66 jump 67 walkForwardHandToHand 68 walkBackHandToHand 69 walkLeftHandToHand 70 walkRightHandToHand 71 turnLeftHandToHand 72 turnRightHandToHand 73 runForwardHandToHand 74 runBackHandToHand 75 runLeftHandToHand 76 runRightHandToHand 77 sneakForwardHandToHand 78 sneakBackHandToHand 79 sneakLeftHandToHand 80 sneakRightHandToHand 81 jumpHandToHand 82 walkForward1h 83 walkBack1h 84 walkLeft1h 85 walkRight1h 86 turnLeft1h 87 turnRight1h 88 runForward1h 89 runBack1h 90 runLeft1h 91 runRight1h 92 sneakForward1h 93 sneakBack1h 94 sneakLeft1h 95 sneakRight1h 96 jump1h 97 walkForward2c 98 walkBack2c 99 walkLeft2c 100 walkRight2c 101 turnLeft2c 102 turnRight2c 103 runForward2c 104 runBack2c 105 runLeft2c 106 runRight2c 107 sneakForward2c 108 sneakBack2c 109 sneakLeft2c 110 sneakRight2c 111 jump2c 112 walkForward2w 113 walkBack2w 114 walkLeft2w 115 walkRight2w 116 turnLeft2w 117 turnRight2w 118 runForward2w 119 runBack2w 120 runLeft2w 121 runRight2w 122 sneakForward2w 123 sneakBack2w 124 sneakLeft2w 125 sneakRight2w 126 jump2w 127 spellCast 128 spellTurnLeft 129 spellTurnRight 130 attack1 131 attack2 132 attack3 133 swimAttack1 134 swimAttack2 135 swimAttack3 136 handToHand 137 crossbow 138 bowAndArrow 139 throwWeapon 140 weaponOneHand 141 weaponTwoHand 142 weaponTwoWide 143 shield 144 pickProbe 145 inventoryHandToHand 146 inventoryWeaponOneHand 147 inventoryWeaponTwoHand 148 inventoryWeaponTwoWide 149","title":"Animation Groups"},{"location":"references/animation-start-flags/","text":"Animation Start Flags \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.animationStartFlag table. For example, tes3.animationStartFlag.normal has a value of 0 . Index Value normal 0 immediate 1 immediateLoop 2","title":"Animation Start Flags"},{"location":"references/animation-start-flags/#animation-start-flags","text":"Tip These values are available in Lua by their index in the tes3.animationStartFlag table. For example, tes3.animationStartFlag.normal has a value of 0 . Index Value normal 0 immediate 1 immediateLoop 2","title":"Animation Start Flags"},{"location":"references/animation-states/","text":"Animation States \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.animationState table. For example, tes3.animationState.readyingWeap has a value of 8 . Index Value idle 0 ready 1 swingUp 2 swingDown 3 swingHit 4 swingFollowLight 5 swingFollowMed 6 swingFollowHeavy 7 readyingWeap 8 unreadyWeap 9 casting 10 casting2 11 readyingMagic 12 unreadyMagic 13 knockdown 14 knockedOut 15 pickingProbing 16 dying 18 dead 19","title":"Animation States"},{"location":"references/animation-states/#animation-states","text":"Tip These values are available in Lua by their index in the tes3.animationState table. For example, tes3.animationState.readyingWeap has a value of 8 . Index Value idle 0 ready 1 swingUp 2 swingDown 3 swingHit 4 swingFollowLight 5 swingFollowMed 6 swingFollowHeavy 7 readyingWeap 8 unreadyWeap 9 casting 10 casting2 11 readyingMagic 12 unreadyMagic 13 knockdown 14 knockedOut 15 pickingProbing 16 dying 18 dead 19","title":"Animation States"},{"location":"references/apparatus-types/","text":"Apparatus Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.apparatusType table. For example, tes3.apparatusType.calcinator has a value of 2 . Index Value mortarAndPestle 0 alembic 1 calcinator 2 retort 3","title":"Apparatus Types"},{"location":"references/apparatus-types/#apparatus-types","text":"Tip These values are available in Lua by their index in the tes3.apparatusType table. For example, tes3.apparatusType.calcinator has a value of 2 . Index Value mortarAndPestle 0 alembic 1 calcinator 2 retort 3","title":"Apparatus Types"},{"location":"references/armor-slots/","text":"Armor Slots \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.armorSlot table. For example, tes3.armorSlot.boots has a value of 5 . Index Value helmet 0 cuirass 1 leftPauldron 2 rightPauldron 3 greaves 4 boots 5 leftGauntlet 6 rightGauntlet 7 shield 8 leftBracer 9 rightBracer 10","title":"Armor Slots"},{"location":"references/armor-slots/#armor-slots","text":"Tip These values are available in Lua by their index in the tes3.armorSlot table. For example, tes3.armorSlot.boots has a value of 5 . Index Value helmet 0 cuirass 1 leftPauldron 2 rightPauldron 3 greaves 4 boots 5 leftGauntlet 6 rightGauntlet 7 shield 8 leftBracer 9 rightBracer 10","title":"Armor Slots"},{"location":"references/armor-weight-classes/","text":"Armor Weight Classes \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.armorWeightClass table. For example, tes3.armorWeightClass.heavy has a value of 2 . Index Value light 0 medium 1 heavy 2","title":"Armor Weight Classes"},{"location":"references/armor-weight-classes/#armor-weight-classes","text":"Tip These values are available in Lua by their index in the tes3.armorWeightClass table. For example, tes3.armorWeightClass.heavy has a value of 2 . Index Value light 0 medium 1 heavy 2","title":"Armor Weight Classes"},{"location":"references/attachment-types/","text":"Attachment Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.attachmentType table. For example, tes3.attachmentType.activator has a value of 9 . Index Value lock 3 variable 6 actor 8 activator 9","title":"Attachment Types"},{"location":"references/attachment-types/#attachment-types","text":"Tip These values are available in Lua by their index in the tes3.attachmentType table. For example, tes3.attachmentType.activator has a value of 9 . Index Value lock 3 variable 6 actor 8 activator 9","title":"Attachment Types"},{"location":"references/attribute-names/","text":"Attribute Names \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.attributeName table. For example, tes3.attributeName[0] has a value of \"strength\" . Index Value 3 \"agility\" 5 \"endurance\" 1 \"intelligence\" 7 \"luck\" 6 \"personality\" 4 \"speed\" 0 \"strength\" 2 \"willpower\"","title":"Attribute Names"},{"location":"references/attribute-names/#attribute-names","text":"Tip These values are available in Lua by their index in the tes3.attributeName table. For example, tes3.attributeName[0] has a value of \"strength\" . Index Value 3 \"agility\" 5 \"endurance\" 1 \"intelligence\" 7 \"luck\" 6 \"personality\" 4 \"speed\" 0 \"strength\" 2 \"willpower\"","title":"Attribute Names"},{"location":"references/attributes/","text":"Attributes \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.attribute table. For example, tes3.attribute.strength has a value of 0 . Index Value strength 0 intelligence 1 willpower 2 agility 3 speed 4 endurance 5 personality 6 luck 7","title":"Attributes"},{"location":"references/attributes/#attributes","text":"Tip These values are available in Lua by their index in the tes3.attribute table. For example, tes3.attribute.strength has a value of 0 . Index Value strength 0 intelligence 1 willpower 2 agility 3 speed 4 endurance 5 personality 6 luck 7","title":"Attributes"},{"location":"references/body-part-attachments/","text":"Body Part Attachments \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.bodyPartAttachment table. For example, tes3.bodyPartAttachment.root has a value of 0 . Index Value root 0 head 1 neck 2 spine 3 pelvis 4 rightHand 5 leftHand 6 rightForearm1 7 leftForearm1 8 rightForearm2 9 leftForearm2 10 rightUpperArm 11 leftUpperArm 12 rightFoot 13 leftFoot 14 rightCalf1 15 leftCalf1 16 rightCalf2 17 leftCalf2 18 rightThigh 19 leftThigh 20 rightClavicle 21 leftClavicle 22 weapon 23 shield 24","title":"Body Part Attachments"},{"location":"references/body-part-attachments/#body-part-attachments","text":"Tip These values are available in Lua by their index in the tes3.bodyPartAttachment table. For example, tes3.bodyPartAttachment.root has a value of 0 . Index Value root 0 head 1 neck 2 spine 3 pelvis 4 rightHand 5 leftHand 6 rightForearm1 7 leftForearm1 8 rightForearm2 9 leftForearm2 10 rightUpperArm 11 leftUpperArm 12 rightFoot 13 leftFoot 14 rightCalf1 15 leftCalf1 16 rightCalf2 17 leftCalf2 18 rightThigh 19 leftThigh 20 rightClavicle 21 leftClavicle 22 weapon 23 shield 24","title":"Body Part Attachments"},{"location":"references/book-types/","text":"Book Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.bookType table. For example, tes3.bookType.book has a value of 0 . Index Value book 0 scroll 1","title":"Book Types"},{"location":"references/book-types/#book-types","text":"Tip These values are available in Lua by their index in the tes3.bookType table. For example, tes3.bookType.book has a value of 0 . Index Value book 0 scroll 1","title":"Book Types"},{"location":"references/clothing-slots/","text":"Clothing Slots \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.clothingSlot table. For example, tes3.clothingSlot.leftGlove has a value of 6 . Index Value pants 0 shoes 1 shirt 2 belt 3 robe 4 rightGlove 5 leftGlove 6 skirt 7 ring 8 amulet 9","title":"Clothing Slots"},{"location":"references/clothing-slots/#clothing-slots","text":"Tip These values are available in Lua by their index in the tes3.clothingSlot table. For example, tes3.clothingSlot.leftGlove has a value of 6 . Index Value pants 0 shoes 1 shirt 2 belt 3 robe 4 rightGlove 5 leftGlove 6 skirt 7 ring 8 amulet 9","title":"Clothing Slots"},{"location":"references/code-patch-features/","text":"Code Patch Features \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.codePatchFeature table. For example, tes3.codePatchFeature.incorrectInventorySoundsFix has a value of 113 . Index Value savegameCorruptionFix 1 mercantileFix 2 unarmoredFix 3 calendarFix 4 merchantEquippingFix 5 restoreDrainAttributesFix 6 streamMusicMasterVolumeFix 7 calmSpellsFix 8 vampireStatsFix 9 reflectedSpellsFix 10 showTransparentClothesInTheInventory 11 enchantGlowInFogFix 12 showNPCHealthBarOnHealing 13 enchantingIncreasesItemValue 14 allowStealingFromKOedNPCs 15 spellmakingMaxMagnitudeIncrease 16 spellmakingMaxDurationReduced 17 exhaustNPCsWithDamageFatigue 18 dispositionFix 19 spellMagnitudeFix 20 dispelFix 21 creatureArmorDamageFix 22 inventoryBugsFix 23 npcPotionUseAI 24 blindFix 25 glossMapFix 26 lightingFixesGroup 27 particleEffectsFix 29 projectileAimingFix 30 waterwalkFix 32 trainingPriceStatsFix 33 travelPriceFix 34 allowReflectionEffectsOnSkinnedModels 35 createmapsFillmapFix 36 delayedSpellCrashFix 37 loudInterfaceGameplaySoundsFix 38 betterQualitySplashAndTitleScreens 39 strengthBasedHandToHandDamage 40 spellmakerEnchantMultipleEffects 41 spellmakerAreaEffectCost 42 arrowEnchanting 43 fortifyMaximumHealth 44 toggleSneak 45 placeAtDropFix 46 spellDeselectionBugFix 47 levelupStatsBugFix 48 boundItemsExpiryFix 49 stableEnchantmentSort 50 fogOfWarFix 51 intimidateFix 52 magickaDisplayAccuracy 53 hiDefCutsceneSupport 54 alchemyNamingStackingFix 55 spellmakerEnchantEditEffectFix 56 allowScrollEnchantPriceModifier 57 saveFileLimitWarning 58 multipleAttributeFortifyPotions 64 soulgemValueRebalance 65 onUseRingExtraSlot 66 npcAICastsZeroCostPowers 67 permanentBarterDispositionChanges 68 enchantedItemCooldown 69 hiddenTraps 70 swiftCasting 71 blightStormDiseaseFix 72 racialVariationInSpeedFix 73 gameFormulaRestoration 74 creatureArmorRatingFix 75 disableWeaponTransitionOnUnequip 76 pickpocketOverhaul 77 slowfallOnCompanionsFix 79 drainIntelligenceExploitFix 80 mouseoverMenuDisplayFixes 81 shortcutKeyImprovements 82 detectWaterLevelFix 83 serviceRefusalFiltering 84 armorIndicatorFix 85 detectLifeSpellVariant 86 scriptedMusicUninterruptible 87 argonianClothingChoice 88 vanityCameraLock 89 alchemyPotionWeightRebalance 90 itemRechargingRebalance 91 summonedCreatureCrashFix 92 repairItemFixes 93 bookAndScrollScalingFix 94 voiceoverScriptFunctionsFix 95 weaponReachIssues 96 initializingDataFix 97 animatedContainerCrashFix 98 lightSpellFix 99 allowFactionLeaving 100 slowMovementAnimFix 101 modRemovalFixes 102 playSoundVPVolumeFix 103 fixEnchantOptionsOnRanged 104 preventEmptyMessages 105 hiddenLocks 106 dontLootOnDispose 107 attributeUncap 108 hitFaderFix 109 skillUncap 110 weaponResistanceChange 111 disintegrateFix 112 incorrectInventorySoundsFix 113 separateAxeInventorySounds 114 confiscatedItemFix 115 waterEnvironmentSoundFix 116 talkedToPCExtension 117 droppingFromInventoryFix 118 creatureVoiceoverEnable 119 lockLevelScripting 120 selfEnchantingFix 121 ammunitionFix 122 placeItemFix 123 creatureMagickaFatigueFix 124 positionPositionCellFix 125 telekinesisFix 126 mapTextureConflictFix 127 rainSnowCollision 128 overTheShoulderFirstPersonCamera 130 overTheShoulderThirdPersonCamera 130 bumpReflectMapLocalLighting 131 improvedAnimationSupport 132 reduceCameraClipping 133 npcMinorBehaviourFixes 134 ammoFixes 135 resolutionOptionsFix 136 slowfallOverhaul 137 cellChangedFix 138 barterGoldResetFix 139 improvedLoadingSpeed 140 scriptExpressionParserFix 141 twoHandedWeaponRemovesShield 142 getSetAngleEnhancement 143 betterRecharging 144 qualityBasedPotionIconsModels 145 arrowDenocker 146 healthyAppetite 147 spellmakerEnchantingImprovement 148 safeDisposeCorpse 149 shieldHitLocationFix 150 selfEnchantingSuccessChance 151 firstPersonSwimAnimations 152 mouseCursorMovementFix 153 scriptDataFix 154 sneakingBootsPenaltyFix 155 spellmakingMatchesEditor 156 allowGlovesWithBracers 157 getWeaponTypeFix 158 probeQualityFix 159 removeItemWeightFix 160 getSpellEffectsTweak 161 seeAllStandardPotionEffects 162 bowSoundGlitchFix 163 fixReadingVarsFromAGlobalScript 164 aiActivateEnhancement 165 scriptablePotionUse 166 containerRespawnTimescale 167 avoidBlameForNeutralNPCDeaths 168 multipleSummonsOverlapFix 169 barterHaggleFix 170 menuModeWorldInteractionFix 171 enchantedItemRebalance 172 npcRankChangeFix 173 addItemWithLevelledItems 174 moveWorldZFix 175 spellEffectTooltipFix 176 getEffectRemoveEffectsFix 177 loadWarningCrashFix 178 followersDefendImmediately 179 equipScriptFix 180 dopplerAudioFix 181 autoStackAmmunition 182 seaWaterSoundFalloffFix 183 actorCollisionBoxFix 184 slidingAfterJumpingFix 185 fallingCreaturesCollisionFix 186 mapExpansionForTamrielRebuilt 256 mainMenuWiderTextures 257 disableMapSmoothing 258 displayMoreAccurateItemWeight 259 polishKeyboardSupport 260 unrestrictMenuSize 261 largerServiceChargenMenus 262 japaneseLocalization 263 russianFixes 264 journalTextColourConfiguration 265 polishCharacterCorrections 266 uiDisplayQualityFix 267 spellSelectByName 268 betterIngredientAndItemSelector 269 betterTypography 270 persuasionImprovement 271 improvedInventoryFilters 272 ownershipTooltip 273 betterSpellMerchants 274 levelupSkillsTooltip 275 convenientDefaults 276 betterHaggling 277","title":"Code Patch Features"},{"location":"references/code-patch-features/#code-patch-features","text":"Tip These values are available in Lua by their index in the tes3.codePatchFeature table. For example, tes3.codePatchFeature.incorrectInventorySoundsFix has a value of 113 . Index Value savegameCorruptionFix 1 mercantileFix 2 unarmoredFix 3 calendarFix 4 merchantEquippingFix 5 restoreDrainAttributesFix 6 streamMusicMasterVolumeFix 7 calmSpellsFix 8 vampireStatsFix 9 reflectedSpellsFix 10 showTransparentClothesInTheInventory 11 enchantGlowInFogFix 12 showNPCHealthBarOnHealing 13 enchantingIncreasesItemValue 14 allowStealingFromKOedNPCs 15 spellmakingMaxMagnitudeIncrease 16 spellmakingMaxDurationReduced 17 exhaustNPCsWithDamageFatigue 18 dispositionFix 19 spellMagnitudeFix 20 dispelFix 21 creatureArmorDamageFix 22 inventoryBugsFix 23 npcPotionUseAI 24 blindFix 25 glossMapFix 26 lightingFixesGroup 27 particleEffectsFix 29 projectileAimingFix 30 waterwalkFix 32 trainingPriceStatsFix 33 travelPriceFix 34 allowReflectionEffectsOnSkinnedModels 35 createmapsFillmapFix 36 delayedSpellCrashFix 37 loudInterfaceGameplaySoundsFix 38 betterQualitySplashAndTitleScreens 39 strengthBasedHandToHandDamage 40 spellmakerEnchantMultipleEffects 41 spellmakerAreaEffectCost 42 arrowEnchanting 43 fortifyMaximumHealth 44 toggleSneak 45 placeAtDropFix 46 spellDeselectionBugFix 47 levelupStatsBugFix 48 boundItemsExpiryFix 49 stableEnchantmentSort 50 fogOfWarFix 51 intimidateFix 52 magickaDisplayAccuracy 53 hiDefCutsceneSupport 54 alchemyNamingStackingFix 55 spellmakerEnchantEditEffectFix 56 allowScrollEnchantPriceModifier 57 saveFileLimitWarning 58 multipleAttributeFortifyPotions 64 soulgemValueRebalance 65 onUseRingExtraSlot 66 npcAICastsZeroCostPowers 67 permanentBarterDispositionChanges 68 enchantedItemCooldown 69 hiddenTraps 70 swiftCasting 71 blightStormDiseaseFix 72 racialVariationInSpeedFix 73 gameFormulaRestoration 74 creatureArmorRatingFix 75 disableWeaponTransitionOnUnequip 76 pickpocketOverhaul 77 slowfallOnCompanionsFix 79 drainIntelligenceExploitFix 80 mouseoverMenuDisplayFixes 81 shortcutKeyImprovements 82 detectWaterLevelFix 83 serviceRefusalFiltering 84 armorIndicatorFix 85 detectLifeSpellVariant 86 scriptedMusicUninterruptible 87 argonianClothingChoice 88 vanityCameraLock 89 alchemyPotionWeightRebalance 90 itemRechargingRebalance 91 summonedCreatureCrashFix 92 repairItemFixes 93 bookAndScrollScalingFix 94 voiceoverScriptFunctionsFix 95 weaponReachIssues 96 initializingDataFix 97 animatedContainerCrashFix 98 lightSpellFix 99 allowFactionLeaving 100 slowMovementAnimFix 101 modRemovalFixes 102 playSoundVPVolumeFix 103 fixEnchantOptionsOnRanged 104 preventEmptyMessages 105 hiddenLocks 106 dontLootOnDispose 107 attributeUncap 108 hitFaderFix 109 skillUncap 110 weaponResistanceChange 111 disintegrateFix 112 incorrectInventorySoundsFix 113 separateAxeInventorySounds 114 confiscatedItemFix 115 waterEnvironmentSoundFix 116 talkedToPCExtension 117 droppingFromInventoryFix 118 creatureVoiceoverEnable 119 lockLevelScripting 120 selfEnchantingFix 121 ammunitionFix 122 placeItemFix 123 creatureMagickaFatigueFix 124 positionPositionCellFix 125 telekinesisFix 126 mapTextureConflictFix 127 rainSnowCollision 128 overTheShoulderFirstPersonCamera 130 overTheShoulderThirdPersonCamera 130 bumpReflectMapLocalLighting 131 improvedAnimationSupport 132 reduceCameraClipping 133 npcMinorBehaviourFixes 134 ammoFixes 135 resolutionOptionsFix 136 slowfallOverhaul 137 cellChangedFix 138 barterGoldResetFix 139 improvedLoadingSpeed 140 scriptExpressionParserFix 141 twoHandedWeaponRemovesShield 142 getSetAngleEnhancement 143 betterRecharging 144 qualityBasedPotionIconsModels 145 arrowDenocker 146 healthyAppetite 147 spellmakerEnchantingImprovement 148 safeDisposeCorpse 149 shieldHitLocationFix 150 selfEnchantingSuccessChance 151 firstPersonSwimAnimations 152 mouseCursorMovementFix 153 scriptDataFix 154 sneakingBootsPenaltyFix 155 spellmakingMatchesEditor 156 allowGlovesWithBracers 157 getWeaponTypeFix 158 probeQualityFix 159 removeItemWeightFix 160 getSpellEffectsTweak 161 seeAllStandardPotionEffects 162 bowSoundGlitchFix 163 fixReadingVarsFromAGlobalScript 164 aiActivateEnhancement 165 scriptablePotionUse 166 containerRespawnTimescale 167 avoidBlameForNeutralNPCDeaths 168 multipleSummonsOverlapFix 169 barterHaggleFix 170 menuModeWorldInteractionFix 171 enchantedItemRebalance 172 npcRankChangeFix 173 addItemWithLevelledItems 174 moveWorldZFix 175 spellEffectTooltipFix 176 getEffectRemoveEffectsFix 177 loadWarningCrashFix 178 followersDefendImmediately 179 equipScriptFix 180 dopplerAudioFix 181 autoStackAmmunition 182 seaWaterSoundFalloffFix 183 actorCollisionBoxFix 184 slidingAfterJumpingFix 185 fallingCreaturesCollisionFix 186 mapExpansionForTamrielRebuilt 256 mainMenuWiderTextures 257 disableMapSmoothing 258 displayMoreAccurateItemWeight 259 polishKeyboardSupport 260 unrestrictMenuSize 261 largerServiceChargenMenus 262 japaneseLocalization 263 russianFixes 264 journalTextColourConfiguration 265 polishCharacterCorrections 266 uiDisplayQualityFix 267 spellSelectByName 268 betterIngredientAndItemSelector 269 betterTypography 270 persuasionImprovement 271 improvedInventoryFilters 272 ownershipTooltip 273 betterSpellMerchants 274 levelupSkillsTooltip 275 convenientDefaults 276 betterHaggling 277","title":"Code Patch Features"},{"location":"references/content-types/","text":"Content Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.contentType table. For example, tes3.contentType.image has a value of \"image\" . Index Value image \"image\" layout \"layout\" model \"model\" rect \"rect\" text \"text\"","title":"Content Types"},{"location":"references/content-types/#content-types","text":"Tip These values are available in Lua by their index in the tes3.contentType table. For example, tes3.contentType.image has a value of \"image\" . Index Value image \"image\" layout \"layout\" model \"model\" rect \"rect\" text \"text\"","title":"Content Types"},{"location":"references/creature-types/","text":"Creature Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.creatureType table. For example, tes3.creatureType.normal has a value of 0 . Index Value normal 0 daedra 1 undead 2 humanoid 3","title":"Creature Types"},{"location":"references/creature-types/#creature-types","text":"Tip These values are available in Lua by their index in the tes3.creatureType table. For example, tes3.creatureType.normal has a value of 0 . Index Value normal 0 daedra 1 undead 2 humanoid 3","title":"Creature Types"},{"location":"references/crime-types/","text":"Crime Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.crimeType table. For example, tes3.crimeType.werewolf has a value of 7 . Index Value Description attack 1 Attacked NPCs or creatures killing 2 Killed NPCs or creatures pickpocket 4 Pickpocketed NPCs or creatures theft 5 Picked up owned objects trespass 6 Lockpicked, probed, unlocked or tried to sleep in owned objects werewolf 7 Detected while transforming into a werewolf","title":"Crime Types"},{"location":"references/crime-types/#crime-types","text":"Tip These values are available in Lua by their index in the tes3.crimeType table. For example, tes3.crimeType.werewolf has a value of 7 . Index Value Description attack 1 Attacked NPCs or creatures killing 2 Killed NPCs or creatures pickpocket 4 Pickpocketed NPCs or creatures theft 5 Picked up owned objects trespass 6 Lockpicked, probed, unlocked or tried to sleep in owned objects werewolf 7 Detected while transforming into a werewolf","title":"Crime Types"},{"location":"references/damage-sources/","text":"Damage Sources \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.damageSource table. For example, tes3.damageSource.magic has a value of \"magic\" . Index Value attack \"attack\" fall \"fall\" magic \"magic\" script \"script\" shield \"shield\" suffocation \"suffocation\"","title":"Damage Sources"},{"location":"references/damage-sources/#damage-sources","text":"Tip These values are available in Lua by their index in the tes3.damageSource table. For example, tes3.damageSource.magic has a value of \"magic\" . Index Value attack \"attack\" fall \"fall\" magic \"magic\" script \"script\" shield \"shield\" suffocation \"suffocation\"","title":"Damage Sources"},{"location":"references/dialogue-pages/","text":"Dialogue Pages \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.dialoguePage.voice table. For example, tes3.dialoguePage.voice.hello has a value of 0 . Index Value hello 0 idle 1 intruder 2 thief 3 hit 4 attack 5 flee 6 Tip These values are available in Lua by their index in the tes3.dialoguePage.greeting table. For example, tes3.dialoguePage.greeting.greeting0 has a value of 0 . Index Value greeting0 0 greeting1 1 greeting2 2 greeting3 3 greeting4 4 greeting5 5 greeting6 6 greeting7 7 greeting8 8 greeting9 9 Tip These values are available in Lua by their index in the tes3.dialoguePage.service table. For example, tes3.dialoguePage.service.infoRefusal has a value of 0 . Index Value infoRefusal 0 admireSuccess 1 admireFail 2 initimidateSuccess 3 initimidateFail 4 tauntSuccess 5 tauntFail 6 serviceRefusal 7 bribeSuccess 8 bribeFail 9","title":"Dialogue Pages"},{"location":"references/dialogue-pages/#dialogue-pages","text":"Tip These values are available in Lua by their index in the tes3.dialoguePage.voice table. For example, tes3.dialoguePage.voice.hello has a value of 0 . Index Value hello 0 idle 1 intruder 2 thief 3 hit 4 attack 5 flee 6 Tip These values are available in Lua by their index in the tes3.dialoguePage.greeting table. For example, tes3.dialoguePage.greeting.greeting0 has a value of 0 . Index Value greeting0 0 greeting1 1 greeting2 2 greeting3 3 greeting4 4 greeting5 5 greeting6 6 greeting7 7 greeting8 8 greeting9 9 Tip These values are available in Lua by their index in the tes3.dialoguePage.service table. For example, tes3.dialoguePage.service.infoRefusal has a value of 0 . Index Value infoRefusal 0 admireSuccess 1 admireFail 2 initimidateSuccess 3 initimidateFail 4 tauntSuccess 5 tauntFail 6 serviceRefusal 7 bribeSuccess 8 bribeFail 9","title":"Dialogue Pages"},{"location":"references/dialogue-types/","text":"Dialogue Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.dialogueType table. For example, tes3.dialogueType.voice has a value of 1 . Index Value topic 0 voice 1 greeting 2 service 3 journal 4","title":"Dialogue Types"},{"location":"references/dialogue-types/#dialogue-types","text":"Tip These values are available in Lua by their index in the tes3.dialogueType table. For example, tes3.dialogueType.voice has a value of 1 . Index Value topic 0 voice 1 greeting 2 service 3 journal 4","title":"Dialogue Types"},{"location":"references/effect-attributes/","text":"Effect Attributes \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.effectAttribute table. For example, tes3.effectAttribute.swiftSwim has a value of 15 . Index Value attackBonus 0 sanctuary 1 resistMagicka 2 resistFire 3 resistFrost 4 resistShock 5 resistCommonDisease 6 resistBlightDisease 7 resistCorprus 8 resistPoison 9 resistParalysis 10 chameleon 11 resistNormalWeapons 12 waterBreathing 13 waterWalking 14 swiftSwim 15 jump 16 levitate 17 shield 18 sound 19 silence 20 blind 21 paralyze 22 invisibility 23 fight 24 flee 25 hello 26 alarm 27 nonResistable 28","title":"Effect Attributes"},{"location":"references/effect-attributes/#effect-attributes","text":"Tip These values are available in Lua by their index in the tes3.effectAttribute table. For example, tes3.effectAttribute.swiftSwim has a value of 15 . Index Value attackBonus 0 sanctuary 1 resistMagicka 2 resistFire 3 resistFrost 4 resistShock 5 resistCommonDisease 6 resistBlightDisease 7 resistCorprus 8 resistPoison 9 resistParalysis 10 chameleon 11 resistNormalWeapons 12 waterBreathing 13 waterWalking 14 swiftSwim 15 jump 16 levitate 17 shield 18 sound 19 silence 20 blind 21 paralyze 22 invisibility 23 fight 24 flee 25 hello 26 alarm 27 nonResistable 28","title":"Effect Attributes"},{"location":"references/effect-event-types/","text":"Effect Event Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.effectEventType table. For example, tes3.effectEventType.bool has a value of 0 . Index Value bool 0 boolean 0 integer 1 int 1 float 2 modStatistic 3","title":"Effect Event Types"},{"location":"references/effect-event-types/#effect-event-types","text":"Tip These values are available in Lua by their index in the tes3.effectEventType table. For example, tes3.effectEventType.bool has a value of 0 . Index Value bool 0 boolean 0 integer 1 int 1 float 2 modStatistic 3","title":"Effect Event Types"},{"location":"references/effect-ranges/","text":"Effect Ranges \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.effectRange table. For example, tes3.effectRange.self has a value of 0 . Index Value self 0 touch 1 target 2","title":"Effect Ranges"},{"location":"references/effect-ranges/#effect-ranges","text":"Tip These values are available in Lua by their index in the tes3.effectRange table. For example, tes3.effectRange.self has a value of 0 . Index Value self 0 touch 1 target 2","title":"Effect Ranges"},{"location":"references/enchantment-types/","text":"Enchantment Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.enchantmentType table. For example, tes3.enchantmentType.castOnce has a value of 0 . Index Value castOnce 0 onStrike 1 onUse 2 constant 3","title":"Enchantment Types"},{"location":"references/enchantment-types/#enchantment-types","text":"Tip These values are available in Lua by their index in the tes3.enchantmentType table. For example, tes3.enchantmentType.castOnce has a value of 0 . Index Value castOnce 0 onStrike 1 onUse 2 constant 3","title":"Enchantment Types"},{"location":"references/events/","text":"Events \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.event table. For example, tes3.event.uiShowRestMenu has a value of \"uiShowRestMenu\" . Index Value Event absorbedMagic \"absorbedMagic\" absorbedMagic activate \"activate\" activate activationTargetChanged \"activationTargetChanged\" activationTargetChanged activeMagicEffectIconsUpdated \"activeMagicEffectIconsUpdated\" activeMagicEffectIconsUpdated addSound \"addSound\" addSound addTempSound \"addTempSound\" addTempSound attack \"attack\" attack attackHit \"attackHit\" attackHit attackStart \"attackStart\" attackStart barterOffer \"barterOffer\" barterOffer bodyPartAssigned \"bodyPartAssigned\" bodyPartAssigned bodyPartsUpdated \"bodyPartsUpdated\" bodyPartsUpdated bookGetText \"bookGetText\" bookGetText buttonPressed \"buttonPressed\" buttonPressed calcArmorPieceHit \"calcArmorPieceHit\" calcArmorPieceHit calcArmorRating \"calcArmorRating\" calcArmorRating calcBarterPrice \"calcBarterPrice\" calcBarterPrice calcBlockChance \"calcBlockChance\" calcBlockChance calcFlySpeed \"calcFlySpeed\" calcFlySpeed calcHitChance \"calcHitChance\" calcHitChance calcMoveSpeed \"calcMoveSpeed\" calcMoveSpeed calcRepairPrice \"calcRepairPrice\" calcRepairPrice calcRestInterrupt \"calcRestInterrupt\" calcRestInterrupt calcRunSpeed \"calcRunSpeed\" calcRunSpeed calcSoulValue \"calcSoulValue\" calcSoulValue calcSpellmakingPrice \"calcSpellmakingPrice\" calcSpellmakingPrice calcSpellmakingSpellPointCost \"calcSpellmakingSpellPointCost\" calcSpellmakingSpellPointCost calcSpellPrice \"calcSpellPrice\" calcSpellPrice calcSunDamageScalar \"calcSunDamageScalar\" calcSunDamageScalar calcSwimRunSpeed \"calcSwimRunSpeed\" calcSwimRunSpeed calcSwimSpeed \"calcSwimSpeed\" calcSwimSpeed calcTrainingPrice \"calcTrainingPrice\" calcTrainingPrice calcTravelPrice \"calcTravelPrice\" calcTravelPrice calcWalkSpeed \"calcWalkSpeed\" calcWalkSpeed cellActivated \"cellActivated\" cellActivated cellChanged \"cellChanged\" cellChanged cellDeactivated \"cellDeactivated\" cellDeactivated charGenFinished \"charGenFinished\" charGenFinished collideWater \"collideWater\" collideWater collision \"collision\" collision combatStart \"combatStart\" combatStart combatStarted \"combatStarted\" combatStarted combatStop \"combatStop\" combatStop combatStopped \"combatStopped\" combatStopped consoleReferenceChanged \"consoleReferenceChanged\" consoleReferenceChanged containerClosed \"containerClosed\" containerClosed convertReferenceToItem \"convertReferenceToItem\" convertReferenceToItem crimeWitnessed \"crimeWitnessed\" crimeWitnessed damage \"damage\" damage damaged \"damaged\" damaged damagedHandToHand \"damagedHandToHand\" damagedHandToHand damageHandToHand \"damageHandToHand\" damageHandToHand death \"death\" death detectSneak \"detectSneak\" detectSneak determineAction \"determineAction\" determineAction determinedAction \"determinedAction\" determinedAction dialogueEnvironmentCreated \"dialogueEnvironmentCreated\" dialogueEnvironmentCreated disposition \"disposition\" disposition enchantChargeUse \"enchantChargeUse\" enchantChargeUse enchantedItemCreated \"enchantedItemCreated\" enchantedItemCreated enchantedItemCreateFailed \"enchantedItemCreateFailed\" enchantedItemCreateFailed enterFrame \"enterFrame\" enterFrame equip \"equip\" equip equipmentReevaluated \"equipmentReevaluated\" equipmentReevaluated equipped \"equipped\" equipped exerciseSkill \"exerciseSkill\" exerciseSkill fadersCreated \"fadersCreated\" fadersCreated filterBarterMenu \"filterBarterMenu\" filterBarterMenu filterContentsMenu \"filterContentsMenu\" filterContentsMenu filterInventory \"filterInventory\" filterInventory filterInventorySelect \"filterInventorySelect\" filterInventorySelect filterSoulGemTarget \"filterSoulGemTarget\" filterSoulGemTarget infoFilter \"infoFilter\" infoFilter infoGetText \"infoGetText\" infoGetText infoLinkResolve \"infoLinkResolve\" infoLinkResolve infoResponse \"infoResponse\" infoResponse initialized \"initialized\" initialized isGuard \"isGuard\" isGuard itemDropped \"itemDropped\" itemDropped itemTileUpdated \"itemTileUpdated\" itemTileUpdated journal \"journal\" journal jump \"jump\" jump key \"key\" key keybindTested \"keybindTested\" keybindTested keyDown \"keyDown\" keyDown keyframesLoad \"keyframesLoad\" keyframesLoad keyUp \"keyUp\" keyUp leveledCreaturePicked \"leveledCreaturePicked\" leveledCreaturePicked leveledItemPicked \"leveledItemPicked\" leveledItemPicked levelUp \"levelUp\" levelUp load \"load\" load loaded \"loaded\" loaded lockPick \"lockPick\" lockPick magicCasted \"magicCasted\" magicCasted magicEffectRemoved \"magicEffectRemoved\" magicEffectRemoved magicEffectsResolved \"magicEffectsResolved\" magicEffectsResolved menuEnter \"menuEnter\" menuEnter menuExit \"menuExit\" menuExit meshLoad \"meshLoad\" meshLoad meshLoaded \"meshLoaded\" meshLoaded mobileActivated \"mobileActivated\" mobileActivated mobileDeactivated \"mobileDeactivated\" mobileDeactivated modConfigReady \"modConfigReady\" modConfigReady mouseAxis \"mouseAxis\" mouseAxis mouseButtonDown \"mouseButtonDown\" mouseButtonDown mouseButtonUp \"mouseButtonUp\" mouseButtonUp mouseWheel \"mouseWheel\" mouseWheel musicSelectTrack \"musicSelectTrack\" musicSelectTrack objectInvalidated \"objectInvalidated\" objectInvalidated playGroup \"playGroup\" playGroup playItemSound \"playItemSound\" playItemSound postInfoResponse \"postInfoResponse\" postInfoResponse potionBrewed \"potionBrewed\" potionBrewed potionBrewFailed \"potionBrewFailed\" potionBrewFailed potionBrewSkillCheck \"potionBrewSkillCheck\" potionBrewSkillCheck powerRecharged \"powerRecharged\" powerRecharged preLevelUp \"preLevelUp\" preLevelUp preventRest \"preventRest\" preventRest projectileExpire \"projectileExpire\" projectileExpire projectileHitActor \"projectileHitActor\" projectileHitActor projectileHitObject \"projectileHitObject\" projectileHitObject projectileHitTerrain \"projectileHitTerrain\" projectileHitTerrain referenceActivated \"referenceActivated\" referenceActivated referenceDeactivated \"referenceDeactivated\" referenceDeactivated referenceSceneNodeCreated \"referenceSceneNodeCreated\" referenceSceneNodeCreated restInterrupt \"restInterrupt\" restInterrupt save \"save\" save saved \"saved\" saved simulate \"simulate\" simulate skillRaised \"skillRaised\" skillRaised soundObjectPlay \"soundObjectPlay\" soundObjectPlay spellCast \"spellCast\" spellCast spellCasted \"spellCasted\" spellCasted spellCastedFailure \"spellCastedFailure\" spellCastedFailure spellCreated \"spellCreated\" spellCreated spellMagickaUse \"spellMagickaUse\" spellMagickaUse spellResist \"spellResist\" spellResist spellResisted \"spellResisted\" spellResisted spellTick \"spellTick\" spellTick topicAdded \"topicAdded\" topicAdded trapDisarm \"trapDisarm\" trapDisarm uiActivated \"uiActivated\" uiActivated uiEvent \"uiEvent\" uiEvent uiObjectTooltip \"uiObjectTooltip\" uiObjectTooltip uiPreEvent \"uiPreEvent\" uiPreEvent uiRefreshed \"uiRefreshed\" uiRefreshed uiShowRestMenu \"uiShowRestMenu\" uiShowRestMenu uiSpellTooltip \"uiSpellTooltip\" uiSpellTooltip unequipped \"unequipped\" unequipped vfxCreated \"vfxCreated\" vfxCreated weaponReadied \"weaponReadied\" weaponReadied weaponUnreadied \"weaponUnreadied\" weaponUnreadied weatherChangedImmediate \"weatherChangedImmediate\" weatherChangedImmediate weatherCycled \"weatherCycled\" weatherCycled weatherTransitionStarted \"weatherTransitionStarted\" weatherTransitionStarted","title":"Events"},{"location":"references/events/#events","text":"Tip These values are available in Lua by their index in the tes3.event table. For example, tes3.event.uiShowRestMenu has a value of \"uiShowRestMenu\" . Index Value Event absorbedMagic \"absorbedMagic\" absorbedMagic activate \"activate\" activate activationTargetChanged \"activationTargetChanged\" activationTargetChanged activeMagicEffectIconsUpdated \"activeMagicEffectIconsUpdated\" activeMagicEffectIconsUpdated addSound \"addSound\" addSound addTempSound \"addTempSound\" addTempSound attack \"attack\" attack attackHit \"attackHit\" attackHit attackStart \"attackStart\" attackStart barterOffer \"barterOffer\" barterOffer bodyPartAssigned \"bodyPartAssigned\" bodyPartAssigned bodyPartsUpdated \"bodyPartsUpdated\" bodyPartsUpdated bookGetText \"bookGetText\" bookGetText buttonPressed \"buttonPressed\" buttonPressed calcArmorPieceHit \"calcArmorPieceHit\" calcArmorPieceHit calcArmorRating \"calcArmorRating\" calcArmorRating calcBarterPrice \"calcBarterPrice\" calcBarterPrice calcBlockChance \"calcBlockChance\" calcBlockChance calcFlySpeed \"calcFlySpeed\" calcFlySpeed calcHitChance \"calcHitChance\" calcHitChance calcMoveSpeed \"calcMoveSpeed\" calcMoveSpeed calcRepairPrice \"calcRepairPrice\" calcRepairPrice calcRestInterrupt \"calcRestInterrupt\" calcRestInterrupt calcRunSpeed \"calcRunSpeed\" calcRunSpeed calcSoulValue \"calcSoulValue\" calcSoulValue calcSpellmakingPrice \"calcSpellmakingPrice\" calcSpellmakingPrice calcSpellmakingSpellPointCost \"calcSpellmakingSpellPointCost\" calcSpellmakingSpellPointCost calcSpellPrice \"calcSpellPrice\" calcSpellPrice calcSunDamageScalar \"calcSunDamageScalar\" calcSunDamageScalar calcSwimRunSpeed \"calcSwimRunSpeed\" calcSwimRunSpeed calcSwimSpeed \"calcSwimSpeed\" calcSwimSpeed calcTrainingPrice \"calcTrainingPrice\" calcTrainingPrice calcTravelPrice \"calcTravelPrice\" calcTravelPrice calcWalkSpeed \"calcWalkSpeed\" calcWalkSpeed cellActivated \"cellActivated\" cellActivated cellChanged \"cellChanged\" cellChanged cellDeactivated \"cellDeactivated\" cellDeactivated charGenFinished \"charGenFinished\" charGenFinished collideWater \"collideWater\" collideWater collision \"collision\" collision combatStart \"combatStart\" combatStart combatStarted \"combatStarted\" combatStarted combatStop \"combatStop\" combatStop combatStopped \"combatStopped\" combatStopped consoleReferenceChanged \"consoleReferenceChanged\" consoleReferenceChanged containerClosed \"containerClosed\" containerClosed convertReferenceToItem \"convertReferenceToItem\" convertReferenceToItem crimeWitnessed \"crimeWitnessed\" crimeWitnessed damage \"damage\" damage damaged \"damaged\" damaged damagedHandToHand \"damagedHandToHand\" damagedHandToHand damageHandToHand \"damageHandToHand\" damageHandToHand death \"death\" death detectSneak \"detectSneak\" detectSneak determineAction \"determineAction\" determineAction determinedAction \"determinedAction\" determinedAction dialogueEnvironmentCreated \"dialogueEnvironmentCreated\" dialogueEnvironmentCreated disposition \"disposition\" disposition enchantChargeUse \"enchantChargeUse\" enchantChargeUse enchantedItemCreated \"enchantedItemCreated\" enchantedItemCreated enchantedItemCreateFailed \"enchantedItemCreateFailed\" enchantedItemCreateFailed enterFrame \"enterFrame\" enterFrame equip \"equip\" equip equipmentReevaluated \"equipmentReevaluated\" equipmentReevaluated equipped \"equipped\" equipped exerciseSkill \"exerciseSkill\" exerciseSkill fadersCreated \"fadersCreated\" fadersCreated filterBarterMenu \"filterBarterMenu\" filterBarterMenu filterContentsMenu \"filterContentsMenu\" filterContentsMenu filterInventory \"filterInventory\" filterInventory filterInventorySelect \"filterInventorySelect\" filterInventorySelect filterSoulGemTarget \"filterSoulGemTarget\" filterSoulGemTarget infoFilter \"infoFilter\" infoFilter infoGetText \"infoGetText\" infoGetText infoLinkResolve \"infoLinkResolve\" infoLinkResolve infoResponse \"infoResponse\" infoResponse initialized \"initialized\" initialized isGuard \"isGuard\" isGuard itemDropped \"itemDropped\" itemDropped itemTileUpdated \"itemTileUpdated\" itemTileUpdated journal \"journal\" journal jump \"jump\" jump key \"key\" key keybindTested \"keybindTested\" keybindTested keyDown \"keyDown\" keyDown keyframesLoad \"keyframesLoad\" keyframesLoad keyUp \"keyUp\" keyUp leveledCreaturePicked \"leveledCreaturePicked\" leveledCreaturePicked leveledItemPicked \"leveledItemPicked\" leveledItemPicked levelUp \"levelUp\" levelUp load \"load\" load loaded \"loaded\" loaded lockPick \"lockPick\" lockPick magicCasted \"magicCasted\" magicCasted magicEffectRemoved \"magicEffectRemoved\" magicEffectRemoved magicEffectsResolved \"magicEffectsResolved\" magicEffectsResolved menuEnter \"menuEnter\" menuEnter menuExit \"menuExit\" menuExit meshLoad \"meshLoad\" meshLoad meshLoaded \"meshLoaded\" meshLoaded mobileActivated \"mobileActivated\" mobileActivated mobileDeactivated \"mobileDeactivated\" mobileDeactivated modConfigReady \"modConfigReady\" modConfigReady mouseAxis \"mouseAxis\" mouseAxis mouseButtonDown \"mouseButtonDown\" mouseButtonDown mouseButtonUp \"mouseButtonUp\" mouseButtonUp mouseWheel \"mouseWheel\" mouseWheel musicSelectTrack \"musicSelectTrack\" musicSelectTrack objectInvalidated \"objectInvalidated\" objectInvalidated playGroup \"playGroup\" playGroup playItemSound \"playItemSound\" playItemSound postInfoResponse \"postInfoResponse\" postInfoResponse potionBrewed \"potionBrewed\" potionBrewed potionBrewFailed \"potionBrewFailed\" potionBrewFailed potionBrewSkillCheck \"potionBrewSkillCheck\" potionBrewSkillCheck powerRecharged \"powerRecharged\" powerRecharged preLevelUp \"preLevelUp\" preLevelUp preventRest \"preventRest\" preventRest projectileExpire \"projectileExpire\" projectileExpire projectileHitActor \"projectileHitActor\" projectileHitActor projectileHitObject \"projectileHitObject\" projectileHitObject projectileHitTerrain \"projectileHitTerrain\" projectileHitTerrain referenceActivated \"referenceActivated\" referenceActivated referenceDeactivated \"referenceDeactivated\" referenceDeactivated referenceSceneNodeCreated \"referenceSceneNodeCreated\" referenceSceneNodeCreated restInterrupt \"restInterrupt\" restInterrupt save \"save\" save saved \"saved\" saved simulate \"simulate\" simulate skillRaised \"skillRaised\" skillRaised soundObjectPlay \"soundObjectPlay\" soundObjectPlay spellCast \"spellCast\" spellCast spellCasted \"spellCasted\" spellCasted spellCastedFailure \"spellCastedFailure\" spellCastedFailure spellCreated \"spellCreated\" spellCreated spellMagickaUse \"spellMagickaUse\" spellMagickaUse spellResist \"spellResist\" spellResist spellResisted \"spellResisted\" spellResisted spellTick \"spellTick\" spellTick topicAdded \"topicAdded\" topicAdded trapDisarm \"trapDisarm\" trapDisarm uiActivated \"uiActivated\" uiActivated uiEvent \"uiEvent\" uiEvent uiObjectTooltip \"uiObjectTooltip\" uiObjectTooltip uiPreEvent \"uiPreEvent\" uiPreEvent uiRefreshed \"uiRefreshed\" uiRefreshed uiShowRestMenu \"uiShowRestMenu\" uiShowRestMenu uiSpellTooltip \"uiSpellTooltip\" uiSpellTooltip unequipped \"unequipped\" unequipped vfxCreated \"vfxCreated\" vfxCreated weaponReadied \"weaponReadied\" weaponReadied weaponUnreadied \"weaponUnreadied\" weaponUnreadied weatherChangedImmediate \"weatherChangedImmediate\" weatherChangedImmediate weatherCycled \"weatherCycled\" weatherCycled weatherTransitionStarted \"weatherTransitionStarted\" weatherTransitionStarted","title":"Events"},{"location":"references/flow-directions/","text":"Flow Directions \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.flowDirection table. For example, tes3.flowDirection.leftToRight has a value of \"left_to_right\" . Index Value leftToRight \"left_to_right\" topToBottom \"top_to_bottom\"","title":"Flow Directions"},{"location":"references/flow-directions/#flow-directions","text":"Tip These values are available in Lua by their index in the tes3.flowDirection table. For example, tes3.flowDirection.leftToRight has a value of \"left_to_right\" . Index Value leftToRight \"left_to_right\" topToBottom \"top_to_bottom\"","title":"Flow Directions"},{"location":"references/gmst/","text":"Game Settings (GMSTs) \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.gmst table. For example, tes3.gmst.sLevelUpMsg has a value of 682 . Tip The value of a GMST can be retrieved by using the tes3.findGMST() function. For example, tes3.findGMST(tes3.gmst.sMonthMorningstar).value has a value of \"Morning Star\" in an unmodded english installation of Morrowind. Index Value Type Default GMST Value sMonthMorningstar 0 string \"Morning Star\" sMonthSunsdawn 1 string \"Sun's Dawn\" sMonthFirstseed 2 string \"First Seed\" sMonthRainshand 3 string \"Rain's Hand\" sMonthSecondseed 4 string \"Second Seed\" sMonthMidyear 5 string \"Mid Year\" sMonthSunsheight 6 string \"Sun's Height\" sMonthLastseed 7 string \"Last Seed\" sMonthHeartfire 8 string \"Heartfire\" sMonthFrostfall 9 string \"Frost Fall\" sMonthSunsdusk 10 string \"Sun's Dusk\" sMonthEveningstar 11 string \"Evening Star\" sSpecialization 12 string \"Specialization\" sSpecializationCombat 13 string \"Combat\" sSpecializationMagic 14 string \"Magic\" sSpecializationStealth 15 string \"Stealth\" sSkillClassMajor 16 string \"Major Skills\" sSkillClassMinor 17 string \"Minor Skills\" sSkillClassMisc 18 string \"Misc Skills\" sRacialTraits 19 string \"Racial Traits\" sHealthPerHourOfRest 20 string \"Health per hour of rest\" sHealthPerLevel 21 string \"Health per level\" sGoverningAttribute 22 string \"Governing Attribute\" sClass 23 string \"Class\" sTraits 24 string \"Traits\" sJournal 25 string \"Journal\" sOK 26 string \"OK\" sClose 27 string \"Close\" sPrev 28 string \"Prev\" sNext 29 string \"Next\" sTake 30 string \"Take\" sWeaponTab 31 string \"Weapon\" sApparelTab 32 string \"Apparel\" sMagicTab 33 string \"Magic\" sMiscTab 34 string \"Misc\" sWornTab 35 string \"Worn\" sAllTab 36 string \"All\" sAttack 37 string \"Attack\" sUses 38 string \"Uses\" sQuality 39 string \"Quality\" sCharges 40 string \"Charge:\" sArmorRating 41 string \"Armor Rating\" sSlash 42 string \"Slash\" sThrust 43 string \"Thrust\" sChop 44 string \"Chop\" sEncumbrance 45 string \"Encumbrance\" sCondition 46 string \"Condition\" sWeight 47 string \"Weight\" sValue 48 string \"Value\" sLight 49 string \"Light\" sMedium 50 string \"Medium\" sHeavy 51 string \"Heavy\" sCancel 52 string \"Cancel\" sTakeAll 53 string \"Take All\" sUntilHealed 54 string \"Until Healed\" sRest 55 string \"Rest\" sWait 56 string \"Wait\" sRestIllegal 57 string \"Resting here is illegal. You'll need to find a bed.\" sGold 58 string \"Gold\" sMove 59 string \"Move\" sTo 60 string \"to\" sActorInCombat 61 string \"This character is in combat.\" sArmor 62 string \"Armor\" sTopics 63 string \"Topics\" sService 64 string \"Service\" sPersuasion 65 string \"Persuasion\" sBye 66 string \"Bye\" sGoodbye 67 string \"Goodbye\" sYes 68 string \"Yes\" sNo 69 string \"No\" sOn 70 string \"On\" sOff 71 string \"Off\" sFull 72 string \"Full\" sWorld 73 string \"World\" sExpelled 74 string \"EXPELLED\" sExpelledMessage 75 string \"You have been expelled from\" sFavoriteSkills 76 string \"Favorite Skills\" sGame 77 string \"Game\" sVideo 78 string \"Video\" sAudio 79 string \"Audio\" sControls 80 string \"Controls\" sPrefs 81 string \"Prefs\" sPreferences 82 string \"Preferences\" sNewGame 83 string \"New Game\" sExitGame 84 string \"Exit Game\" sOptions 85 string \"Options Menu\" sSaveGame 86 string \"Save Game\" sLoadGame 87 string \"Load Game\" sDeleteGame 88 string \"Delete Game\" sSaveGameDenied 89 string \"You cannot save your game right now.\" sSaveGameFailed 90 string \"An error was encountered while saving the game.\" sSaveGameTooBig 91 string \"There is not enough space to save this game. Free up at least %i blocks and try again.\" sSaveGameNoMemory 92 string \"Unable to create Save Game. Free up 100 blocks and try again.\" sMaximumSaveGameMessage 93 string \"You have reached the limit of Morrowind saved games. Please delete a Morrowind saved game and try again.\" sRender_Distance 94 string \"View Distance\" sNear 95 string \"Near\" sFar 96 string \"Far\" sGamma_Correction 97 string \"Gamma Correction\" sLight_Gamma 98 string \"Light\" sDark_Gamma 99 string \"Dark\" sSeldom 100 string \"Seldom\" sAlways 101 string \"Always\" sWaterTerrainReflect 102 string \"Reflect Terrain\" sWaterReflectUpdate 103 string \"Reflection Updating\" fWaterReflectUpdateAlways 104 float 0 fWaterReflectUpdateSeldom 105 float 10 sMaster 106 string \"Master\" sVoice 107 string \"Voice\" sEffects 108 string \"Effects\" sFootsteps 109 string \"Footsteps\" sMusic 110 string \"Music\" sTransparency_Menu 111 string \"Menu Transparency\" sMenu_Help_Delay 112 string \"Menu Help Delay\" sAIDistance 113 string \"AI Distance\" sHigh 114 string \"High\" sLow 115 string \"Low\" sDetail_Level 116 string \"Detail Level\" sMenus 117 string \"Menus\" sStrip 118 string \"Strip\" sReturnToGame 119 string \"Return To Game\" sForward 120 string \"Forward\" sBack 121 string \"Back\" sLeft 122 string \"Left\" sRight 123 string \"Right\" sUse 124 string \"Use\" sActivate 125 string \"Activate\" sReady_Weapon 126 string \"Ready Weapon\" sReady_Magic 127 string \"Ready Magic\" sCrouch_Sneak 128 string \"Sneak\" sRun 129 string \"Run\" sAlways_Run 130 string \"Always Run\" sAuto_Run 131 string \"Auto Run\" sJump 132 string \"Jump\" sNextWeapon 133 string \"Next Weapon\" sPrevWeapon 134 string \"Previous Weapon\" sNextSpell 135 string \"Next Spell\" sPrevSpell 136 string \"Previous Spell\" sTogglePOVCmd 137 string \"Toggle POV\" sMenu_Mode 138 string \"Menu Mode\" sJournalCmd 139 string \"Journal\" sRestKey 140 string \"Rest\" sQuickMenu 141 string \"Quick Menu\" sQuick1Cmd 142 string \"Quick 1\" sQuick2Cmd 143 string \"Quick 2\" sQuick3Cmd 144 string \"Quick 3\" sQuick4Cmd 145 string \"Quick 4\" sQuick5Cmd 146 string \"Quick 5\" sQuick6Cmd 147 string \"Quick 6\" sQuick7Cmd 148 string \"Quick 7\" sQuick8Cmd 149 string \"Quick 8\" sQuick9Cmd 150 string \"Quick 9\" sQuick10Cmd 151 string \"Quick 10\" sQuickSaveCmd 152 string \"Quick Save\" sQuickLoadCmd 153 string \"Quick Load\" sKeyName_00 154 string \"\" sKeyName_01 155 string \"ESC\" sKeyName_02 156 string \"1\" sKeyName_03 157 string \"2\" sKeyName_04 158 string \"3\" sKeyName_05 159 string \"4\" sKeyName_06 160 string \"5\" sKeyName_07 161 string \"6\" sKeyName_08 162 string \"7\" sKeyName_09 163 string \"8\" sKeyName_0A 164 string \"9\" sKeyName_0B 165 string \"0\" sKeyName_0C 166 string \"-\" sKeyName_0D 167 string \"=\" sKeyName_0E 168 string \"Back Space\" sKeyName_0F 169 string \"Tab\" sKeyName_10 170 string \"Q\" sKeyName_11 171 string \"W\" sKeyName_12 172 string \"E\" sKeyName_13 173 string \"R\" sKeyName_14 174 string \"T\" sKeyName_15 175 string \"Y\" sKeyName_16 176 string \"U\" sKeyName_17 177 string \"I\" sKeyName_18 178 string \"O\" sKeyName_19 179 string \"P\" sKeyName_1A 180 string \"[\" sKeyName_1B 181 string \"]\" sKeyName_1C 182 string \"Return\" sKeyName_1D 183 string \"Left Ctrl\" sKeyName_1E 184 string \"A\" sKeyName_1F 185 string \"S\" sKeyName_20 186 string \"D\" sKeyName_21 187 string \"F\" sKeyName_22 188 string \"G\" sKeyName_23 189 string \"H\" sKeyName_24 190 string \"J\" sKeyName_25 191 string \"K\" sKeyName_26 192 string \"L\" sKeyName_27 193 string \";\" sKeyName_28 194 string \"'\" sKeyName_29 195 string \"Grave\" sKeyName_2A 196 string \"Left Shift\" sKeyName_2B 197 string \"\\\" sKeyName_2C 198 string \"Z\" sKeyName_2D 199 string \"X\" sKeyName_2E 200 string \"C\" sKeyName_2F 201 string \"V\" sKeyName_30 202 string \"B\" sKeyName_31 203 string \"N\" sKeyName_32 204 string \"M\" sKeyName_33 205 string \",\" sKeyName_34 206 string \".\" sKeyName_35 207 string \"/\" sKeyName_36 208 string \"Right Shift\" sKeyName_37 209 string \"Numpad *\" sKeyName_38 210 string \"Left Alt\" sKeyName_39 211 string \"SPACEBAR\" sKeyName_3A 212 string \"Caps Lock\" sKeyName_3B 213 string \"F1\" sKeyName_3C 214 string \"F2\" sKeyName_3D 215 string \"F3\" sKeyName_3E 216 string \"F4\" sKeyName_3F 217 string \"F5\" sKeyName_40 218 string \"F6\" sKeyName_41 219 string \"F7\" sKeyName_42 220 string \"F8\" sKeyName_43 221 string \"F9\" sKeyName_44 222 string \"F10\" sKeyName_45 223 string \"Num Lock\" sKeyName_46 224 string \"Scroll Lock\" sKeyName_47 225 string \"Numpad 7\" sKeyName_48 226 string \"Numpad 8\" sKeyName_49 227 string \"Numpad 9\" sKeyName_4A 228 string \"Numpad -\" sKeyName_4B 229 string \"Numpad 4\" sKeyName_4C 230 string \"Numpad 5\" sKeyName_4D 231 string \"Numpad 6\" sKeyName_4E 232 string \"Numpad +\" sKeyName_4F 233 string \"Numpad 1\" sKeyName_50 234 string \"Numpad 2\" sKeyName_51 235 string \"Numpad 3\" sKeyName_52 236 string \"Numpad 0\" sKeyName_53 237 string \"Decimal\" sKeyName_54 238 string \"\" sKeyName_55 239 string \"\" sKeyName_56 240 string \"OEM 102\" sKeyName_57 241 string \"F11\" sKeyName_58 242 string \"F12\" sKeyName_59 243 string \"\" sKeyName_5A 244 string \"\" sKeyName_5B 245 string \"\" sKeyName_5C 246 string \"\" sKeyName_5D 247 string \"\" sKeyName_5E 248 string \"\" sKeyName_5F 249 string \"\" sKeyName_60 250 string \"\" sKeyName_61 251 string \"\" sKeyName_62 252 string \"\" sKeyName_63 253 string \"\" sKeyName_64 254 string \"F13\" sKeyName_65 255 string \"F14\" sKeyName_66 256 string \"F15\" sKeyName_67 257 string \"\" sKeyName_68 258 string \"\" sKeyName_69 259 string \"\" sKeyName_6A 260 string \"\" sKeyName_6B 261 string \"\" sKeyName_6C 262 string \"\" sKeyName_6D 263 string \"\" sKeyName_6E 264 string \"\" sKeyName_6F 265 string \"\" sKeyName_70 266 string \"Kana\" sKeyName_71 267 string \"\" sKeyName_72 268 string \"\" sKeyName_73 269 string \"Abnt C1\" sKeyName_74 270 string \"\" sKeyName_75 271 string \"\" sKeyName_76 272 string \"\" sKeyName_77 273 string \"\" sKeyName_78 274 string \"\" sKeyName_79 275 string \"Cnvrt\" sKeyName_7A 276 string \"\" sKeyName_7B 277 string \"No Cnvrt\" sKeyName_7C 278 string \"\" sKeyName_7D 279 string \"Yen\" sKeyName_7E 280 string \"Abnt C2\" sKeyName_7F 281 string \"\" sKeyName_80 282 string \"\" sKeyName_81 283 string \"\" sKeyName_82 284 string \"\" sKeyName_83 285 string \"\" sKeyName_84 286 string \"\" sKeyName_85 287 string \"\" sKeyName_86 288 string \"\" sKeyName_87 289 string \"\" sKeyName_88 290 string \"\" sKeyName_89 291 string \"\" sKeyName_8A 292 string \"\" sKeyName_8B 293 string \"\" sKeyName_8C 294 string \"\" sKeyName_8D 295 string \"Np Equals\" sKeyName_8E 296 string \"\" sKeyName_8F 297 string \"\" sKeyName_90 298 string \"PrvTrk\" sKeyName_91 299 string \"AT\" sKeyName_92 300 string \":\" sKeyName_93 301 string \"_\" sKeyName_94 302 string \"Kanji\" sKeyName_95 303 string \"Stop\" sKeyName_96 304 string \"Ax\" sKeyName_97 305 string \"Unlabeled\" sKeyName_98 306 string \"\" sKeyName_99 307 string \"NxtTrk\" sKeyName_9A 308 string \"\" sKeyName_9B 309 string \"\" sKeyName_9C 310 string \"Right Enter\" sKeyName_9D 311 string \"Right Ctrl\" sKeyName_9E 312 string \"\" sKeyName_9F 313 string \"\" sKeyName_A0 314 string \"Mute\" sKeyName_A1 315 string \"Calc\" sKeyName_A2 316 string \"Play Pause\" sKeyName_A3 317 string \"\" sKeyName_A4 318 string \"Media Stop\" sKeyName_A5 319 string \"\" sKeyName_A6 320 string \"\" sKeyName_A7 321 string \"\" sKeyName_A8 322 string \"\" sKeyName_A9 323 string \"\" sKeyName_AA 324 string \"\" sKeyName_AB 325 string \"\" sKeyName_AC 326 string \"\" sKeyName_AD 327 string \"\" sKeyName_AE 328 string \"Volume Down\" sKeyName_AF 329 string \"\" sKeyName_B0 330 string \"Volume Up\" sKeyName_B1 331 string \"\" sKeyName_B2 332 string \"Web Home\" sKeyName_B3 333 string \"Numpad ,\" sKeyName_B4 334 string \"\" sKeyName_B5 335 string \"Numpad /\" sKeyName_B6 336 string \"\" sKeyName_B7 337 string \"SysRq\" sKeyName_B8 338 string \"Right Alt\" sKeyName_B9 339 string \"\" sKeyName_BA 340 string \"\" sKeyName_BB 341 string \"\" sKeyName_BC 342 string \"\" sKeyName_BD 343 string \"\" sKeyName_BE 344 string \"\" sKeyName_BF 345 string \"\" sKeyName_C0 346 string \"\" sKeyName_C1 347 string \"\" sKeyName_C2 348 string \"\" sKeyName_C3 349 string \"\" sKeyName_C4 350 string \"\" sKeyName_C5 351 string \"Pause\" sKeyName_C6 352 string \"\" sKeyName_C7 353 string \"Home\" sKeyName_C8 354 string \"Up\" sKeyName_C9 355 string \"Page Up\" sKeyName_CA 356 string \"\" sKeyName_CB 357 string \"Left\" sKeyName_CC 358 string \"\" sKeyName_CD 359 string \"Right\" sKeyName_CE 360 string \"\" sKeyName_CF 361 string \"End\" sKeyName_D0 362 string \"Down\" sKeyName_D1 363 string \"Page Down\" sKeyName_D2 364 string \"Insert\" sKeyName_D3 365 string \"Delete\" sKeyName_D4 366 string \"\" sKeyName_D5 367 string \"\" sKeyName_D6 368 string \"\" sKeyName_D7 369 string \"\" sKeyName_D8 370 string \"\" sKeyName_D9 371 string \"\" sKeyName_DA 372 string \"\" sKeyName_DB 373 string \"Left Win\" sKeyName_DC 374 string \"Right Win\" sKeyName_DD 375 string \"Apps\" sKeyName_DE 376 string \"Power\" sKeyName_DF 377 string \"Sleep\" sKeyName_E0 378 string \"\" sKeyName_E1 379 string \"\" sKeyName_E2 380 string \"\" sKeyName_E3 381 string \"Wake\" sKeyName_E4 382 string \"\" sKeyName_E5 383 string \"Web Search\" sKeyName_E6 384 string \"Web Favs\" sKeyName_E7 385 string \"Web Ref\" sKeyName_E8 386 string \"Web Stop\" sKeyName_E9 387 string \"Web Fwd\" sKeyName_EA 388 string \"Web Back\" sKeyName_EB 389 string \"My Comp\" sKeyName_EC 390 string \"\" sKeyName_ED 391 string \"\" sKeyName_EE 392 string \"\" sKeyName_EF 393 string \"\" sKeyName_F0 394 string \"\" sKeyName_F1 395 string \"\" sKeyName_F2 396 string \"\" sKeyName_F3 397 string \"\" sKeyName_F4 398 string \"\" sKeyName_F5 399 string \"\" sKeyName_F6 400 string \"\" sKeyName_F7 401 string \"\" sKeyName_F8 402 string \"\" sKeyName_F9 403 string \"\" sKeyName_FA 404 string \"\" sKeyName_FB 405 string \"\" sKeyName_FC 406 string \"\" sKeyName_FD 407 string \"\" sKeyName_FE 408 string \"\" sKeyName_FF 409 string \"\" sForwardXbox 410 string \"Move Forward\" sBackXbox 411 string \"Move Backward\" sSlideLeftXbox 412 string \"Slide Left\" sSlideRightXbox 413 string \"Slide Right\" sMenuModeXbox 414 string \"Menu Mode\" sActivateXbox 415 string \"Activate\" sUseXbox 416 string \"Use\" sReadyItemXbox 417 string \"Ready Item\" sReadyMagicXbox 418 string \"Ready Magic\" sCrouchXbox 419 string \"Sneak\" sRunXbox 420 string \"Run\" sToggleRunXbox 421 string \"Toggle Run\" sJumpXbox 422 string \"Jump\" sTogglePOVXbox 423 string \"Toggle View\" sMenuNextXbox 424 string \"Next Menu\" sMenuPrevXbox 425 string \"Previous Menu\" sJournalXbox 426 string \"Journal\" sQuick4Xbox 427 string \"sQuick4Xbox\" sQuick5Xbox 428 string \"sQuick5Xbox\" sQuick6Xbox 429 string \"sQuick6Xbox\" sQuick7Xbox 430 string \"sQuick7Xbox\" sQuick8Xbox 431 string \"sQuick8Xbox\" sQuick9Xbox 432 string \"sQuick9Xbox\" sQuick0Xbox 433 string \"sQuick0Xbox\" sOptionsMenuXbox 434 string \"Options Menu\" sSystemMenuXbox 435 string \"System Menu\" sRestMenuXbox 436 string \"Rest/Wait\" sQuickSaveXbox 437 string \"Quick Save\" sQuickLoadXbox 438 string \"Quick Load\" sMoveUpXbox 439 string \"Move Up\" sMoveDownXbox 440 string \"Move Down\" sLookUpXbox 441 string \"Look Up\" sLookDownXbox 442 string \"Look Down\" sTurnLeftXbox 443 string \"Turn Left\" sTurnRightXbox 444 string \"Turn Right\" sNextWeaponXbox 445 string \"Next Weapon\" sPrevWeaponXbox 446 string \"Previous Weapon\" sNextSpellXbox 447 string \"Next Spell\" sPrevSpellXbox 448 string \"Previous Spell\" sDialogText1Xbox 449 string \"PUSH\" sDialogText2Xbox 450 string \"TO GO BACK\" sDialogText3Xbox 451 string \"TO READ MORE\" sQuick_Save 452 string \"Auto-Save when Rest\" sShadowText 453 string \"Real-time Shadows\" sLockSuccess 454 string \"Lock pick success!\" sLockFail 455 string \"Lock pick failed.\" sLockImpossible 456 string \"Lock too complex.\" sTrapSuccess 457 string \"Trap disarmed!\" sTrapFail 458 string \"Disarm trap failed.\" sTrapImpossible 459 string \"Trap too complex, your chance to disarm it is zero\" sTrapped 460 string \"Trapped\" sLockLevel 461 string \"Lock Level\" sKeyUsed 462 string \"used to open lock\" sUnlocked 463 string \"Unlocked\" fRepairMult 464 float 1 fRepairAmountMult 465 float 3 fSpellValueMult 466 float 10 fSpellMakingValueMult 467 float 7 fEnchantmentValueMult 468 float 1000 fTravelMult 469 float 4000 fTravelTimeMult 470 float 16000 fMagesGuildTravel 471 float 10 sBarter 472 string \"Barter\" sRepair 473 string \"Repair\" sSpells 474 string \"Spells\" sTraining 475 string \"Training\" sTravel 476 string \"Travel\" sSpellmaking 477 string \"Spellmaking\" sEnchanting 478 string \"Enchanting\" sJoystickNotFound 479 string \"Joystick not found.\" sJournalEntry 480 string \"Your journal has been updated.\" sDay 481 string \"Day\" sCreate 482 string \"Create\" sIngredients 483 string \"Ingredients\" sApparatus 484 string \"Apparatus\" sCreatedEffects 485 string \"Created Effects\" sOnetypeEffectMessage 486 string \"This effect has already been added.\" sName 487 string \"Name\" sNameTitle 488 string \"Name\" sSelect 489 string \"Select\" sBuy 490 string \"Buy\" sInfo 491 string \"Info\" sMagicEffects 492 string \"Magic Effects\" sOnce 493 string \"Once\" sCostCharge 494 string \"Cost/Charge\" sCostChance 495 string \"Cost/Chance\" sAttributesMenu1 496 string \"Choose an Attribute\" sBirthsignmenu1 497 string \"Abilities:\" sBirthsignmenu2 498 string \"Spells:\" sChooseClassMenu1 499 string \"Specialization:\" sChooseClassMenu2 500 string \"Favorite Attributes:\" sChooseClassMenu3 501 string \"Major Skills:\" sChooseClassMenu4 502 string \"Minor Skills:\" sCreateClassMenuWarning 503 string \"Reselect your class?\" sClassChoiceMenu1 504 string \"Answer his questions (Generates Class)\" sClassChoiceMenu2 505 string \"Give him the info (Pick from Class List)\" sClassChoiceMenu3 506 string \"Fill out forms yourself (Create Custom Class)\" sNotifyMessage1 507 string \"You can only rest on solid ground.\" sNotifyMessage2 508 string \"You can't rest here enemies are nearby.\" sNotifyMessage3 509 string \"You cannot sleep when dreaming.\" sNotifyMessage4 510 string \"Saving...\" sNotifyMessage4XBOX 511 string \"Saving. Please don't turn off your Xbox console.\" sNotifyMessage5 512 string \"You must place the object you are holding into a container before exiting menus.\" sNotifyMessage6 513 string \"Only one of each ingredient can be used to make a potion.\" sNotifyMessage6a 514 string \"At least two ingredients are needed to make a potion.\" sNotifyMessage7 515 string \"Only four ingredients can be used in a potion.\" sNotifyMessage8 516 string \"Your potion failed.\" sNotifyMessage9 517 string \"Your offer is refused.\" sNotifyMessage10 518 string \"You have to name the spell before buying it.\" sNotifyMessage11 519 string \"You have to have an item to enchant.\" sNotifyMessage12 520 string \"You don't have enough gold to buy this spell.\" sNotifyMessage13 521 string \"Beast races cannot wear full helmets.\" sNotifyMessage14 522 string \"Beast races cannot wear boots.\" sNotifyMessage15 523 string \"Beast races cannot wear shoes.\" sNotifyMessage16 524 string \"You can only wear one clothing item at a time.\" sNotifyMessage16_a 525 string \"You can only equip one item of that type at a time.\" sNotifyMessage17 526 string \"You cannot train a skill above its governing attribute.\" sNotifyMessage18 527 string \"You don't have enough gold to buy this spell.\" sNotifyMessage19 528 string \"Only one apparatus can be placed in each slot of the alchemy menu.\" sNotifyMessage20 529 string \"Please remove the object already in the mortar and pestle slot.\" sNotifyMessage21 530 string \"Please remove the object already in the alembic slot.\" sNotifyMessage22 531 string \"Please remove the object already in the calcinator slot.\" sNotifyMessage23 532 string \"Please remove the object already in the retort slot.\" sNotifyMessage24 533 string \"You need to assign all the major and minor skill slots.\" sNotifyMessage25 534 string \"You need to pick two favorite attributes.\" sNotifyMessage26 535 string \"You need to pick a specialization.\" sNotifyMessage27 536 string \"You need to assign all the major and minor skill slots.\" sNotifyMessage28 537 string \"You can only add eight effects to a spell.\" sNotifyMessage29 538 string \"You cannot add more enchantment to an object then it can hold.\" sNotifyMessage30 539 string \"You have to add at least one effect to a spell.\" sNotifyMessage31 540 string \"Items already enchanted cannot have another enchantment added.\" sNotifyMessage32 541 string \"Only soul gems with a soul can be put in the soul gem slot.\" sNotifyMessage33 542 string \"Only soul gems put in the soul gem slot.\" sNotifyMessage34 543 string \"The enchantment failed and your gem is destroyed.\" sNotifyMessage35 544 string \"Only one apparatus item can be equipped at a time.\" sNotifyMessage36 545 string \"You have to distribute all you points before exiting.\" sNotifyMessage37 546 string \"You need to type in your name.\" sNotifyMessage38 547 string \"Skill Increase:\" sNotifyMessage39 548 string \"Your %s skill increased to %d.\" sNotifyMessage40 549 string \"Skill Maximum Reached.\" sNotifyMessage41 550 string \"Your %s skill has reached the limit of your %s.\" sNotifyMessage42 551 string \"You have been released after %d day. A skill has been affected by your time in prison.\" sNotifyMessage43 552 string \"You have been released after %d days. Your skills have been affected by your time in prison.\" sNotifyMessage44 553 string \"Your %s skill decreased to %d.\" sNotifyMessage45 554 string \"You need a Mortar and Pestle to use\" sNotifyMessage46 555 string \"You need a Alembic to use\" sNotifyMessage47 556 string \"You need a Calcinator to use\" sNotifyMessage48 557 string \"You need a Retort to use\" sNotifyMessage49 558 string \"That %s is mine.\" sNotifyMessage50 559 string \"%s has no effect on you.\" sNotifyMessage51 560 string \"The %s has been used up.\" sNotifyMessage52 561 string \"You must have a soul gem with a soul to make an Enchanted Item\" sNotifyMessage53 562 string \"Your menu sizes and positions have been saved for exploring mode.\" sNotifyMessage54 563 string \"Do you want to start a new game and lose your current game?\" sNotifyMessage55 564 string \"Please reconnect the controller and press START to continue.\" sNotifyMessage56 565 string \"There's a problem with the disc you're using. It may be dirty or damaged. Press A to continue.\" sNotifyMessage57 566 string \"Please press START to begin.\" sNotifyMessage58 567 string \"Your Xbox Hard Disk doesn't have enough free blocks to save games. Press A to continue without saving or B to free more blocks.\" sNotifyMessage59 568 string \"You are over-encumbered.\" sNotifyMessage60 569 string \"%s has been added to your inventory.\" sNotifyMessage61 570 string \"%d %s has been added to your inventory.\" sNotifyMessage62 571 string \"%s has been removed from your inventory.\" sNotifyMessage63 572 string \"%d %s has been removed from your inventory.\" sNotifyMessage64 573 string \"You can't sleep in someone else's bed!\" sNotifyMessage65 574 string \"You can't save a game with no name!\" sNotifyMessage66 575 string \"This will reset all controls to the default settings. Do you wish to continue?\" sNotifyMessage67 576 string \"This will immediately change your resolution. Do you want to continue?\" sTeleportDisabled 577 string \"Teleportation magic does not work here.\" sLevitateDisabled 578 string \"Levitation magic does not work here.\" sInPrisonTitle 579 string \"Serving time...\" sInfoRefusal 580 string \"Info Refusal\" sAdmireSuccess 581 string \"Admire Success\" sAdmireFail 582 string \"Admire Fail\" sIntimidateSuccess 583 string \"Intimidate Success\" sIntimidateFail 584 string \"Intimidate Fail\" sTauntSuccess 585 string \"Taunt Success\" sTauntFail 586 string \"Taunt Fail\" sServiceRefusal 587 string \"Service Refusal\" sBribeSuccess 588 string \"Bribe Success\" sBribeFail 589 string \"Bribe Fail\" sWerewolfRefusal 590 string \"You cannot do this as a werewolf.\" sWerewolfPopup 591 string \"Werewolf\" sWerewolfRestMessage 592 string \"You cannot rest in werewolf form.\" sWerewolfAlarmMessage 593 string \"You have been detected as a known werewolf.\" sBookSkillMessage 594 string \"You have gained knowledge from this book.\" sLoadingMessage1 595 string \"Loading Master/Plugin Files\" sLoadingMessage2 596 string \"Loading Area\" sLoadingMessage3 597 string \"Loading Area\" sLoadingMessage4 598 string \"Initializing Data...\" sLoadingMessage5 599 string \"Parsing Quests (this may take a while) Re-save when done.\" sLoadingMessage9 600 string \"Clearing Data...\" sLoadingMessage14 601 string \"Loading Save Game\" sLoadingMessage15 602 string \"Loading (%s)\" sInvalidSaveGameMsg 603 string \"This file is an invalid Save Game.\" sInvalidSaveGameMsgXBOX 604 string \"Unable to load saved game. Press A to continue.\" sLoadingErrorsMsg 605 string \"Errors were encountered loading from file '%s'.\" sMissingMastersMsg 606 string \"The currently selected master files and plugins do not match the ones used by this save game. Errors may occur during load or game play. Do you wish to continue?\" sChangedMastersMsg 607 string \"The selected master files and plugins may have changed since this save game was created. Errors may occur during load or game play. Do you wish to continue?\" sMastPlugMismatchMsg 608 string \"One of the files that \"%s\" is dependent on has changed since the last save. This may result in errors. Saving again will clear this message but not necessarily fix any errors.\" sGeneralMastPlugMismatchMsg 609 string \"One or more plugins could not find the correct versions of the master files they depend on. Errors may occur during load or game play. Check the \"Warnings.txt\" file for more information.\" sLoadLastSaveMsg 610 string \"The most recent Save Game is '%s'. Would you like to load it?\" sMessage1 611 string \"Do you want to Load a save game and lose your current game?\" sMessage2 612 string \"Quit Morrowind?\" sMessage3 613 string \"Are you sure you want to delete this Save Game?\" sMessage4 614 string \"Are you sure you want to overwrite this Save Game?\" sMessage5 615 string \"Do you wish to quit your current game? All unsaved progress will be lost.\" sMessageQuestionAnswer1 616 string \"Your personality and past reflect a:\" sMessageQuestionAnswer2 617 string \"Accept this Class\" sMessageQuestionAnswer3 618 string \"Choose Another Class\" sBarterDialog1 619 string \"You cannot afford this transaction.\" sBarterDialog2 620 string \"I cannot afford this transaction.\" sBarterDialog3 621 string \"This is to heavy for you to carry.\" sBarterDialog4 622 string \"I don't buy that item.\" sBarterDialog5 623 string \"Thank you, Please Come Again.\" sBarterDialog6 624 string \"You need to place the bartered item before existing Barter Menu!\" sBarterDialog7 625 string \"Price\" sBarterDialog8 626 string \"Offer\" sBarterDialog9 627 string \"You cannot sell summoned items!\" sBarterDialog10 628 string \"You cannot buy summoned items!\" sBarterDialog11 629 string \"You need to trade items before making an offer.\" sBarterDialog12 630 string \"You cannot drop summoned items!\" sInventoryMessage1 631 string \"This object is broken and cannot be equipped until fixed.\" sInventoryMessage2 632 string \"You cannot repair items during battle.\" sInventoryMessage3 633 string \"You cannot make potions during battle.\" sInventoryMessage4 634 string \"You cannot read during battle.\" sInventoryMessage5 635 string \"You cannot use soul gems during battle.\" sContentsMessage1 636 string \"You cannot remove summoned items from their container.\" sContentsMessage2 637 string \"You cannot place items in this container.\" sContentsMessage3 638 string \"The item will not fit.\" sAttributeListTitle 639 string \"Attribute List\" sConsoleTitle 640 string \"Console\" sCreateClassMenu1 641 string \"Class Description\" sCreateClassMenu2 642 string \"Close the Description menu before leaving Class Creation\" sCreateClassMenu3 643 string \"The class needs a description.\" sCreateClassMenuHelp1 644 string \"You'll get +5 to all skills of your specialization. They'll also be easier to increase.\" sCreateClassMenuHelp2 645 string \"You'll get +10 to each of your favored attributes.\" sControlsMenu1 646 string \"Reset Controls\" sControlsMenu2 647 string \"Mouse Sensitivity\" sControlsMenu3 648 string \"Press a key or push a button to set this command.\" sControlsMenu4 649 string \"Vertical Sensitivity\" sControlsMenu5 650 string \"Horizontal Sensitivity\" sControlsMenu6 651 string \"Push a button to set this command.\" sGameWithoutLauncherXbox 652 string \"The game was started without the launcher. Press START to continue.\" sDialogMenu1 653 string \"Final Disposition:\" sEnchantmentMenu1 654 string \"Enchantment Menu\" sEnchantmentMenu2 655 string \"Enchantment Name\" sEnchantmentMenu3 656 string \"Enchantment\" sEnchantmentMenu4 657 string \"Point Cost\" sEnchantmentMenu5 658 string \"Buy\" sEnchantmentMenu6 659 string \"Chance\" sEnchantmentMenu7 660 string \"Please remove the current soul gem before placing a different soul gem.\" sEnchantmentMenu8 661 string \"You cannot buy a spell that has a zero point cost.\" sEnchantmentMenu9 662 string \"You cannot enchant more then one item of that type at a time.\" sEnchantmentMenu10 663 string \"The cast cost cannot exceed the charge amount put into the time\" sEnchantmentMenu11 664 string \"You must add at least one effect to an enchantment\" sEnchantmentMenu12 665 string \"You have successfully created an enchanted item\" sEnchantmentHelp1 666 string \"Slot for item to enchant. Only weapons, armor, scrolls and clothing that are not already enchanted can be enchanted.\" sEnchantmentHelp2 667 string \"Slot for the soul gem used to enchant an item. Only soul gems filled with a soul can be used. The soul amount is the total charge placed into the item.\" sEnchantmentHelp3 668 string \"The first number is the total amount the enchantment would cost to cast. The second number is the total enchantment cost that can be placed on this type of item.\" sEnchantmentHelp4 669 string \"The amount of charge points needed each time this enchantment is cast. This number is modified by your enchant skill.\" sEnchantmentHelp5 670 string \"The amount of soul in the soul gem in the soul gem slot\" sEnchantmentHelp6 671 string \"Amount of gold to buy this enchantment\" sEnchantmentHelp7 672 string \"Type of cast for the enchantment.\" sEnchantmentHelp8 673 string \"Name you give the spell.\" sEnchantmentHelp9 674 string \"Magic effects you know that you can add to an item\" sEnchantmentHelp10 675 string \"Current effects on the item\" sInputMenu1 676 string \"Enter\" sInventoryMenu1 677 string \"You cannot equip items being bartered.\" sLevelUpMenu1 678 string \"You have ascended to Level\" sLevelUpMenu2 679 string \"It's all suddenly obvious to you. You just have to concentrate. All the energy and time you've wasted is a sin, but without the experience you've gained, taking risks, taking responsibility for failure how could you have understood?\" sLevelUpMenu3 680 string \"x2\" sLevelUpMenu4 681 string \"x3\" sLevelUpMsg 682 string \"You should rest and meditate on what you've learned.\" sLevelUp 683 string \"Level Up\" sRange 684 string \"Range\" sArea 685 string \"Area\" sMagnitude 686 string \"Magnitude\" sDuration 687 string \"Duration\" sDrain 688 string \"Drain\" sAbsorb 689 string \"Absorb\" sFortify 690 string \"Fortify\" sRestore 691 string \"Restore\" sDamage 692 string \"Damage\" spoint 693 string \"pt\" spoints 694 string \"pts\" spercent 695 string \"%\" sfor 696 string \"for\" ssecond 697 string \"sec\" sseconds 698 string \"secs\" sin 699 string \"in\" sfootarea 700 string \"ft\" sfeet 701 string \"ft\" sXTimes 702 string \"x\" sXTimesINT 703 string \"x INT\" sonword 704 string \"on\" sNone 705 string \"None\" sDone 706 string \"Done\" sStartCell 707 string \"Cavern of the Incarnate\" sStartError 708 string \"Cannot start in an empty interior cell!\" sStartCellError 709 string \"Starting interior cell \"Cavern of the Incarnate\" not found!\" sAdmire 710 string \"Admire\" sIntimidate 711 string \"Intimidate\" sTaunt 712 string \"Taunt\" sBribe 10 Gold 713 string \"Bribe 10 Gold\" sBribe10Gold 713 string \"Bribe 10 Gold\" sBribe100Gold 714 string \"Bribe 100 Gold\" sBribe 100 Gold 714 string \"Bribe 100 Gold\" sBribe1000Gold 715 string \"Bribe 1000 Gold\" sBribe 1000 Gold 715 string \"Bribe 1000 Gold\" sPersuasionMenuTitle 716 string \"Persuasion\" sFast 717 string \"Fast\" sSlow 718 string \"Slow\" sBestAttack 719 string \"Always Use Best Attack\" sSubtitles 720 string \"Subtitles\" sMouseFlip 721 string \"Invert Y Axis\" sCursorOff 722 string \"Crosshair\" sEnableJoystick 723 string \"Enable Joystick\" sXStrafe 724 string \"X-Axis Movement\" sStrafe 725 string \"Strafe\" sTurn 726 string \"Turn\" sMouseWheelUpShort 727 string \"MWheel Up\" sMouseWheelDownShort 728 string \"MWheel Down\" sMouse 729 string \"Mouse\" sJoystickShort 730 string \"Joy\" sJoystickHatShort 731 string \"JHat\" sPickUp 732 string \"Take\" sItemName 733 string \"Item Name\" sNoName 734 string \"NO NAME GIVEN!\" sItem 735 string \"Item\" sRaceMenu1 736 string \"Appearance\" sRaceMenu2 737 string \"Change Sex\" sRaceMenu3 738 string \"Change Face\" sRaceMenu4 739 string \"Change Hair\" sRaceMenu5 740 string \"Race\" sRaceMenu6 741 string \"Race Description\" sRaceMenu7 742 string \"Specials\" sRestMenu1 743 string \"How many hours?\" sRestMenu2 744 string \"Hours\" sRestMenu3 745 string \"REST\" sRestMenu4 746 string \"You can't rest right now.\" fRestMagicMult 747 float 0.15 sSaveMenu1 748 string \"New Save Game\" sServiceRepairTitle 749 string \"Repair Service Menu\" sServiceTravelTitle 750 string \"Travel\" sServiceTrainingTitle 751 string \"Training\" sServiceTrainingWords 752 string \"I can teach nothing more about that skill\" sServiceSpellsTitle 753 string \"Spells\" sSkillsMenu1 754 string \"Choose a Skill\" sBonusSkillTitle 755 string \"Skill Bonus\" sSpecializationMenu1 756 string \"Choose a Specialization\" sSpellmakingMenuTitle 757 string \"Spellmaking\" sSpellmakingMenu1 758 string \"Spell Chance\" sSpellmakingHelp1 759 string \"Name you give the spell.\" sSpellmakingHelp2 760 string \"Amount of Magika one cast of the spell will cost\" sSpellmakingHelp3 761 string \"The chance you have to cast the spell at your current skill level\" sSpellmakingHelp4 762 string \"How much gold the spell will cost you.\" sSpellmakingHelp5 763 string \"Magic effects you know that you can add to a spell\" sSpellmakingHelp6 764 string \"Current effects on the spell\" sKilledEssential 765 string \"With this character's death, the thread of prophecy is severed. Restore a saved game to restore the weave of fate, or persist in the doomed world you have created.\" sCrimeMessage 766 string \"Your crime has been reported!\" sPotionSuccess 767 string \"You created a potion\" sMagicItem 768 string \"Magic Items\" sMagnitudeDes 769 string \"The range of a spells power\" sAreaDes 770 string \"The radius the spell attempt to affect\" sDurationDes 771 string \"The length a spell lasts\" sRangeDes 772 string \"What the spell is directed at such as yourself, a target or who you touch\" sCrimeHelp 773 string \"The penalty you must pay for your crimes, if caught.\" sSoulGem 774 string \"Soul\" sCastCost 775 string \"Cast Cost\" sTravelServiceTitle 776 string \"Select destination\" sSpellServiceTitle 777 string \"Select spell to buy\" sRepairServiceTitle 778 string \"Select item to repair\" sTrainingServiceTitle 779 string \"Select skill to train\" sMortar 780 string \"Mortar\" sCalcinator 781 string \"Calcinator\" sAlembic 782 string \"Alembic\" sRetort 783 string \"Retort\" sQuestionMark 784 string \"?\" s3dAudio 785 string \"3D Audio\" s3dHardware 786 string \"Hardware Accelerated\" s3dSoftware 787 string \"Software Mode\" sYourGold 788 string \"YOUR GOLD\" sSellerGold 789 string \"SELLER GOLD\" sMaxSale 790 string \"Max Sale\" sTotalCost 791 string \"TOTAL COST\" sTotalSold 792 string \"TOTAL SOLD\" sOffer 793 string \"Offer\" sLess 794 string \"Less\" sMore 795 string \"More\" sInventory 796 string \"Inventory\" sBookPageOne 797 string \"1\" sBookPageTwo 798 string \"2\" sDisposeofCorpse 799 string \"Dispose of Corpse\" sCaughtStealingMessage 800 string \"Hey he's stealing my stuff!\" sUserDefinedClass 801 string \"User Defined Class\" sAsk 802 string \"Ask\" sEnchantItems 803 string \"Items to Enchant\" sSoulGemsWithSouls 804 string \"Soul Gems with Souls\" sDoYouWantTo 805 string \"Do you want to\" sRechargeEnchantment 806 string \"Recharge Enchanted Item\" sMake 807 string \"Make an Enchanted Item\" sSell 808 string \"Sell\" sEquip 809 string \"Equip\" sDrop 810 string \"Drop\" sContainer 811 string \"Container\" sStats 812 string \"Stats\" sMap 813 string \"Map\" sCenter 814 string \"Center\" sSaveMenuHelp01 815 string \"th of\" sSaveMenuHelp02 816 string \"month\" sSaveMenuHelp03 817 string \"day\" sSaveMenuHelp04 818 string \"a.m.\" sSaveMenuHelp05 819 string \"p.m.\" sSaveMenuHelp06 820 string \"Delete Game?\" sDeleteNote 821 string \"Delete Note?\" sEditNote 822 string \"Edit Note\" sBlocks 823 string \"Blocks\" sFileSize 824 string \"File Size\" sSave 825 string \"Save\" sDeleteSpell 826 string \"Delete Spell\" sQuestionDeleteSpell 827 string \"Are you sure you wish to delete %s?\" sDeleteSpellError 828 string \"You cannot delete this item from the Magic Menu\" sLocal 829 string \"Local\" sLoadFailedMessage 830 string \"Your last load failed. You must load another game or start a new game.\" sShadows 831 string \"Shadows\" sControlerVibration 832 string \"Controller Vibration\" sQuanityMenuMessage01 833 string \"Amount to Sell\" sQuanityMenuMessage02 834 string \"Amount to Buy\" sSex 835 string \"Sex\" sHair 836 string \"Hair\" sFace 837 string \"Face\" sRepairFailed 838 string \"Your repair failed!\" sRepairSuccess 839 string \"Your repair succeeded!\" sHeal 840 string \"Heal\" sgp 841 string \"gp\" sSetValueMessage01 842 string \"The maximum magnitude cannot be less then the minimum magnitude!\" sDelete 843 string \"Delete\" sVideoWarning 844 string \"Warning: Video Resolution does not allow shadows.\" sResChangeWarning 845 string \"Desired resolution not supported by video card.\" sShift 846 string \"Shift\" sBackspace 847 string \"Backspace\" sCustomClassName 848 string \"Adventurer\" sSpace 849 string \"Space\" sInventorySelectNoItems 850 string \"You have no items to fill this slot.\" sInventorySelectNoSoul 851 string \"You have no filled Soul Gems\" sInventorySelectNoIngredients 852 string \"You have no ingredients\" sDisposeCorpseFail 853 string \"You can not remove this corpse\" sQuickMenuTitle 854 string \"Quick Keys\" sQuickMenuInstruc 855 string \"Click on quick key slot to add a spell, magic item or inventory item\" sQuickMenu1 856 string \"Item to QuickKey\" sQuickMenu2 857 string \"Inventory Menu Item\" sQuickMenu3 858 string \"Magic Menu Item\" sQuickMenu4 859 string \"Delete QuickKey Item\" sQuickMenu5 860 string \"You no longer have\" sQuickMenu6 861 string \"Inventory Items to Quick key\" sMagicSelectTitle 862 string \"Select a magic to Quick key.\" sNextRank 863 string \"Next Rank:\" sNeedOneSkill 864 string \"Need one skill at\" sNeedTwoSkills 865 string \"Need two skills at\" sand 866 string \"and\" sOneHanded 867 string \"One Handed\" sTwoHanded 868 string \"Two Handed\" sType 869 string \"Type:\" sAt 870 string \"At\" sUnequip 871 string \"Unequip\" sScrolldown 872 string \"Scroll Down\" sScrollup 873 string \"Scroll Up\" sSleepInterrupt 874 string \"Your rest has been interrupted.\" sSoultrapSuccess 875 string \"Your have trapped a soul\" sCantEquipWeapWarning 876 string \"Finish your current attack before equipping a new weapon\" sOfferMenuTitle 877 string \"Offer Menu\" sPowers 878 string \"Powers\" sBreath 879 string \"Breath\" sDifficulty 880 string \"Difficulty\" sEasy 881 string \"Easy\" sHard 882 string \"Hard\" sProfitValue 883 string \"Profit Value\" sCompanionShare 884 string \"Companion Share\" sCompanionWarningMessage 885 string \"Your mercenary is poorer now than when he contracted with you. Your mercenary will quit if you do not give him gold or goods to bring his Profit Value to a positive value.\" sCompanionWarningButtonOne 886 string \"Let the mercenary quit.\" sCompanionWarningButtonTwo 887 string \"Return to Companion Share display.\" sAttributeStrength 888 string \"Strength\" sAttributeIntelligence 889 string \"Intelligence\" sAttributeWillpower 890 string \"Willpower\" sAttributeAgility 891 string \"Agility\" sAttributeSpeed 892 string \"Speed\" sAttributeEndurance 893 string \"Endurance\" sAttributePersonality 894 string \"Personality\" sAttributeLuck 895 string \"Luck\" sSkillBlock 896 string \"Block\" sSkillArmorer 897 string \"Armorer\" sSkillMediumarmor 898 string \"Medium Armor\" sSkillHeavyarmor 899 string \"Heavy Armor\" sSkillBluntweapon 900 string \"Blunt Weapon\" sSkillLongblade 901 string \"Long Blade\" sSkillAxe 902 string \"Axe\" sSkillSpear 903 string \"Spear\" sSkillAthletics 904 string \"Athletics\" sSkillEnchant 905 string \"Enchant\" sSkillDestruction 906 string \"Destruction\" sSkillAlteration 907 string \"Alteration\" sSkillIllusion 908 string \"Illusion\" sSkillConjuration 909 string \"Conjuration\" sSkillMysticism 910 string \"Mysticism\" sSkillRestoration 911 string \"Restoration\" sSkillAlchemy 912 string \"Alchemy\" sSkillUnarmored 913 string \"Unarmored\" sSkillSecurity 914 string \"Security\" sSkillSneak 915 string \"Sneak\" sSkillAcrobatics 916 string \"Acrobatics\" sSkillLightarmor 917 string \"Light Armor\" sSkillShortblade 918 string \"Short Blade\" sSkillMarksman 919 string \"Marksman\" sSkillMercantile 920 string \"Mercantile\" sSkillSpeechcraft 921 string \"Speechcraft\" sSkillHandtohand 922 string \"Hand-to-hand\" sHealth 923 string \"Health\" sRace 924 string \"Race\" sLevel 925 string \"Level\" sLevels 926 string \"Levels\" sFaction 927 string \"Faction\" sBirthSign 928 string \"Sign\" sBounty 929 string \"Bounty\" sReputation 930 string \"Reputation\" sSchool 931 string \"School\" sSkill 932 string \"Skill\" sSkillProgress 933 string \"Progress towards skill increase\" sSkillMaxReached 934 string \"Maximum proficiency has been reached.\" sLevelProgress 935 string \"Progress towards level increase\" sMagic 936 string \"Magicka\" sMagicMenu 937 string \"Magic\" sFatigue 938 string \"Fatigue\" sSkillsMenuReputationHelp 939 string \"Your fame rating in the world of Morrowind.\" sStrDesc 940 string \"Affects your starting Health, how much you can carry, your maximum Fatigue, and how much damage you do in melee.\" sIntDesc 941 string \"Determines your maximum amount of Magicka.\" sWilDesc 942 string \"Affects your ability to resist magic, and your maximum Fatigue.\" sAgiDesc 943 string \"Affects your ability to dodge and hit targets in melee as well as your maximum Fatigue.\" sSpdDesc 944 string \"Determines how fast you can move.\" sEndDesc 945 string \"Affects your starting Health, your Health gain per level, and your maximum Fatigue.\" sPerDesc 946 string \"Affects your ability to deal with other characters and how much they like you.\" sLucDesc 947 string \"Affects every action you do in a small way.\" sFatDesc 948 string \"How tired you are. Low fatigue makes it harder to successfully perform actions.\" sHealthDesc 949 string \"The amount of damage you can take before you die. Increases every time you gain a level.\" sMagDesc 950 string \"Used to cast spells. Magicka is naturally restored by resting.\" fWortChanceValue 951 float 15 sDefaultCellname 952 string \"Wilderness\" fMinWalkSpeed 953 float 100 fMaxWalkSpeed 954 float 200 fMinWalkSpeedCreature 955 float 5 fMaxWalkSpeedCreature 956 float 300 fEncumberedMoveEffect 957 float 0.3 fBaseRunMultiplier 958 float 1.75 fAthleticsRunBonus 959 float 1 fJumpAcrobaticsBase 960 float 128 fJumpAcroMultiplier 961 float 4 fJumpEncumbranceBase 962 float 0.5 fJumpEncumbranceMultiplier 963 float 1 fJumpRunMultiplier 964 float 1 fJumpMoveBase 965 float 0.5 fJumpMoveMult 966 float 0.5 fSwimWalkBase 967 float 0.5 fSwimRunBase 968 float 0.5 fSwimWalkAthleticsMult 969 float 0.02 fSwimRunAthleticsMult 970 float 0.1 fSwimHeightScale 971 float 0.9 fHoldBreathTime 972 float 20 fHoldBreathEndMult 973 float 0.5 fSuffocationDamage 974 float 3 fMinFlySpeed 975 float 5 fMaxFlySpeed 976 float 300 fStromWindSpeed 977 float 0.7 fStromWalkMult 978 float 0.25 fFallDamageDistanceMin 979 float 400 fFallDistanceBase 980 float 0 fFallDistanceMult 981 float 0.07 fFallAcroBase 982 float 0.25 fFallAcroMult 983 float 0.01 iMaxActivateDist 984 integer 192 iMaxInfoDist 985 integer 192 fVanityDelay 986 float 30 fMaxHeadTrackDistance 987 float 400 fInteriorHeadTrackMult 988 float 0.5 iHelmWeight 989 integer 5 iPauldronWeight 990 integer 10 iCuirassWeight 991 integer 30 iGauntletWeight 992 integer 5 iGreavesWeight 993 integer 15 iBootsWeight 994 integer 20 iShieldWeight 995 integer 15 fLightMaxMod 996 float 0.6 fMedMaxMod 997 float 0.9 fUnarmoredBase1 998 float 0.1 fUnarmoredBase2 999 float 0.065 iBaseArmorSkill 1000 integer 30 fBlockStillBonus 1001 float 1.25 fDamageStrengthBase 1002 float 0.5 fDamageStrengthMult 1003 float 0.1 fSwingBlockBase 1004 float 1 fSwingBlockMult 1005 float 1 fFatigueBase 1006 float 1.25 fFatigueMult 1007 float 0.5 fFatigueReturnBase 1008 float 2.5 fFatigueReturnMult 1009 float 0.02 fEndFatigueMult 1010 float 0.04 fFatigueAttackBase 1011 float 2 fFatigueAttackMult 1012 float 0 fWeaponFatigueMult 1013 float 0.25 fFatigueBlockBase 1014 float 4 fFatigueBlockMult 1015 float 0 fWeaponFatigueBlockMult 1016 float 1 fFatigueRunBase 1017 float 5 fFatigueRunMult 1018 float 2 fFatigueJumpBase 1019 float 5 fFatigueJumpMult 1020 float 0 fFatigueSwimWalkBase 1021 float 2.5 fFatigueSwimRunBase 1022 float 7 fFatigueSwimWalkMult 1023 float 0 fFatigueSwimRunMult 1024 float 0 fFatigueSneakBase 1025 float 1.5 fFatigueSneakMult 1026 float 1.5 fMinHandToHandMult 1027 float 0.1 fMaxHandToHandMult 1028 float 0.5 fHandtoHandHealthPer 1029 float 0.1 fCombatInvisoMult 1030 float 0.2 fCombatKODamageMult 1031 float 1.5 fCombatCriticalStrikeMult 1032 float 4 iBlockMinChance 1033 integer 10 iBlockMaxChance 1034 integer 50 fLevelUpHealthEndMult 1035 float 0.1 fSoulGemMult 1036 float 3 fEffectCostMult 1037 float 0.5 fSpellPriceMult 1038 float 2 fFatigueSpellBase 1039 float 0 fFatigueSpellMult 1040 float 0 fFatigueSpellCostMult 1041 float 0 fPotionStrengthMult 1042 float 0.5 fPotionT1MagMult 1043 float 1.5 fPotionT1DurMult 1044 float 0.5 fPotionMinUsefulDuration 1045 float 20 fPotionT4BaseStrengthMult 1046 float 20 fPotionT4EquipStrengthMult 1047 float 12 fIngredientMult 1048 float 1 fMagicItemCostMult 1049 float 1 fMagicItemPriceMult 1050 float 1 fMagicItemOnceMult 1051 float 1 fMagicItemUsedMult 1052 float 1 fMagicItemStrikeMult 1053 float 1 fMagicItemConstantMult 1054 float 1 fEnchantmentMult 1055 float 0.1 fEnchantmentChanceMult 1056 float 3 fPCbaseMagickaMult 1057 float 1 fNPCbaseMagickaMult 1058 float 2 fAutoSpellChance 1059 float 80 fAutoPCSpellChance 1060 float 50 iAutoSpellTimesCanCast 1061 integer 3 iAutoSpellAttSkillMin 1062 integer 70 iAutoSpellAlterationMax 1063 integer 5 iAutoSpellConjurationMax 1064 integer 2 iAutoSpellDestructionMax 1065 integer 5 iAutoSpellIllusionMax 1066 integer 5 iAutoSpellMysticismMax 1067 integer 5 iAutoSpellRestorationMax 1068 integer 5 iAutoPCSpellMax 1069 integer 100 iAutoRepFacMod 1070 integer 2 iAutoRepLevMod 1071 integer 0 iMagicItemChargeOnce 1072 integer 1 iMagicItemChargeConst 1073 integer 10 iMagicItemChargeUse 1074 integer 5 iMagicItemChargeStrike 1075 integer 10 iMonthsToRespawn 1076 integer 4 fCorpseClearDelay 1077 float 72 fCorpseRespawnDelay 1078 float 72 fBarterGoldResetDelay 1079 float 24 fEncumbranceStrMult 1080 float 5 fPickLockMult 1081 float -1 fTrapCostMult 1082 float 0 fMessageTimePerChar 1083 float 0.1 fMagicItemRechargePerSecond 1084 float 0.05 i1stPersonSneakDelta 1085 integer 10 iBarterSuccessDisposition 1086 integer 1 iBarterFailDisposition 1087 integer -1 iLevelupTotal 1088 integer 10 iLevelupMajorMult 1089 integer 1 iLevelupMinorMult 1090 integer 1 iLevelupMajorMultAttribute 1091 integer 1 iLevelupMinorMultAttribute 1092 integer 1 iLevelupMiscMultAttriubte 1093 integer 1 iLevelupSpecialization 1094 integer 1 iLevelUp01Mult 1095 integer 2 iLevelUp02Mult 1096 integer 2 iLevelUp03Mult 1097 integer 2 iLevelUp04Mult 1098 integer 2 iLevelUp05Mult 1099 integer 3 iLevelUp06Mult 1100 integer 3 iLevelUp07Mult 1101 integer 3 iLevelUp08Mult 1102 integer 4 iLevelUp09Mult 1103 integer 4 iLevelUp10Mult 1104 integer 5 iSoulAmountForConstantEffect 1105 integer 400 fConstantEffectMult 1106 float 15 fEnchantmentConstantDurationMult 1107 float 100 fEnchantmentConstantChanceMult 1108 float 0.5 fWeaponDamageMult 1109 float 0.1 fSeriousWoundMult 1110 float 0 fKnockDownMult 1111 float 0.5 iKnockDownOddsBase 1112 integer 50 iKnockDownOddsMult 1113 integer 50 fCombatArmorMinMult 1114 float 0.25 fHandToHandReach 1115 float 1 fVoiceIdleOdds 1116 float 10 iVoiceAttackOdds 1117 integer 10 iVoiceHitOdds 1118 integer 30 fProjectileMinSpeed 1119 float 400 fProjectileMaxSpeed 1120 float 3000 fThrownWeaponMinSpeed 1121 float 300 fThrownWeaponMaxSpeed 1122 float 1000 fTargetSpellMaxSpeed 1123 float 1000 fProjectileThrownStoreChance 1124 float 25 iPickMinChance 1125 integer 5 iPickMaxChance 1126 integer 75 fDispRaceMod 1127 float 5 fDispPersonalityMult 1128 float 0.5 fDispPersonalityBase 1129 float 50 fDispFactionMod 1130 float 3 fDispFactionRankBase 1131 float 1 fDispFactionRankMult 1132 float 0.5 fDispCrimeMod 1133 float 0 fDispDiseaseMod 1134 float -10 iDispAttackMod 1135 integer -50 fDispWeaponDrawn 1136 float -5 fDispBargainSuccessMod 1137 float 1 fDispBargainFailMod 1138 float -1 fDispPickPocketMod 1139 float -25 iDaysinPrisonMod 1140 integer 100 fDispAttacking 1141 float -10 fDispStealing 1142 float -0.5 iDispTresspass 1143 integer -20 iDispKilling 1144 integer -50 iTrainingMod 1145 integer 10 iAlchemyMod 1146 integer 2 fBargainOfferBase 1147 float 50 fBargainOfferMulti 1148 float -4 fDispositionMod 1149 float 1 fPersonalityMod 1150 float 5 fLuckMod 1151 float 10 fReputationMod 1152 float 1 fLevelMod 1153 float 5 fBribe10Mod 1154 float 35 fBribe100Mod 1155 float 75 fBribe1000Mod 1156 float 150 fPerDieRollMult 1157 float 0.3 fPerTempMult 1158 float 1 iPerMinChance 1159 integer 5 iPerMinChange 1160 integer 10 fSpecialSkillBonus 1161 float 0.8 fMajorSkillBonus 1162 float 0.75 fMinorSkillBonus 1163 float 1 fMiscSkillBonus 1164 float 1.25 iAlarmKilling 1165 integer 90 iAlarmAttack 1166 integer 50 iAlarmStealing 1167 integer 1 iAlarmPickPocket 1168 integer 20 iAlarmTresspass 1169 integer 5 fAlarmRadius 1170 float 2000 iCrimeKilling 1171 integer 1000 iCrimeAttack 1172 integer 40 fCrimeStealing 1173 float 1 iCrimePickPocket 1174 integer 25 iCrimeTresspass 1175 integer 5 iCrimeThreshold 1176 integer 1000 iCrimeThresholdMultiplier 1177 integer 10 fCrimeGoldDiscountMult 1178 float 0.5 fCrimeGoldTurnInMult 1179 float 0.9 iFightAttack 1180 integer 100 iFightAttacking 1181 integer 50 iFightDistanceBase 1182 integer 20 fFightDistanceMultiplier 1183 float 0.005 iFightAlarmMult 1184 integer 1 fFightDispMult 1185 float 0.2 fFightStealing 1186 float 50 iFightPickpocket 1187 integer 25 iFightTrespass 1188 integer 25 iFightKilling 1189 integer 50 iFlee 1190 integer 0 iGreetDistanceMultiplier 1191 integer 6 iGreetDuration 1192 integer 4 fGreetDistanceReset 1193 float 512 fIdleChanceMultiplier 1194 float 0.75 fSneakUseDist 1195 float 500 fSneakUseDelay 1196 float 1 fSneakDistanceBase 1197 float 0.5 fSneakDistanceMultiplier 1198 float 0.002 fSneakSpeedMultiplier 1199 float 0.75 fSneakViewMult 1200 float 1.5 fSneakNoViewMult 1201 float 0.5 fSneakSkillMult 1202 float 1 fSneakBootMult 1203 float -1 fCombatDistance 1204 float 128 fCombatAngleXY 1205 float 0.6666667 fCombatAngleZ 1206 float 0.6666667 fCombatForceSideAngle 1207 float 0.3333333 fCombatTorsoSideAngle 1208 float 0.5 fCombatTorsoStartPercent 1209 float 0.3 fCombatTorsoStopPercent 1210 float 0.8 fCombatBlockLeftAngle 1211 float -1 fCombatBlockRightAngle 1212 float 0.3333333 fCombatDelayCreature 1213 float 0.1 fCombatDelayNPC 1214 float 0.1 sTargetCriticalStrike 1215 string \"Critical Damage!\" fAIMeleeWeaponMult 1216 float 2 fAIRangeMeleeWeaponMult 1217 float 5 fAIMagicSpellMult 1218 float 3 fAIRangeMagicSpellMult 1219 float 5 fAIMeleeArmorMult 1220 float 1 fAIMeleeSummWeaponMult 1221 float 1 fAIFleeHealthMult 1222 float 7 fAIFleeFleeMult 1223 float 0.3 fPickPocketMod 1224 float 0.3 fSleepRandMod 1225 float 0.25 fSleepRestMod 1226 float 0.3 iNumberCreatures 1227 integer 1 fAudioDefaultMinDistance 1228 float 5 fAudioDefaultMaxDistance 1229 float 40 fAudioVoiceDefaultMinDistance 1230 float 10 fAudioVoiceDefaultMaxDistance 1231 float 60 fAudioMinDistanceMult 1232 float 20 fAudioMaxDistanceMult 1233 float 50 fNPCHealthBarTime 1234 float 3 fNPCHealthBarFade 1235 float 0.5 fDifficultyMult 1236 float 5 fWereWolfRunMult 1237 float 1.3 fWereWolfSilverWeaponDamageMult 1238 float 2 iWereWolfBounty 1239 integer 1000 fWereWolfStrength 1240 float 150 fWereWolfAgility 1241 float 150 fWereWolfEndurance 1242 float 150 fWereWolfSpeed 1243 float 90 fWereWolfHandtoHand 1244 float 100 fWereWolfUnarmored 1245 float 100 iWereWolfLevelToAttack 1246 integer 20 iWereWolfFightMod 1247 integer 100 iWereWolfFleeMod 1248 integer 100 fWereWolfAthletics 1249 float 50 fWereWolfAcrobatics 1250 float 80 fWereWolfHealth 1251 float 2 fWereWolfFatigue 1252 float 400 fWereWolfMagicka 1253 float 100 fWereWolfIntellegence 1254 float 0 fWereWolfWillPower 1255 float 0 fWereWolfPersonality 1256 float 0 fWereWolfLuck 1257 float 25 fWereWolfBlock 1258 float 0 fWereWolfArmorer 1259 float 0 fWereWolfMediumArmor 1260 float 0 fWereWolfHeavyArmor 1261 float 0 fWereWolfBluntWeapon 1262 float 0 fWereWolfLongBlade 1263 float 0 fWereWolfAxe 1264 float 0 fWereWolfSpear 1265 float 0 fWereWolfDestruction 1266 float 0 fWereWolfAlteration 1267 float 0 fWereWolfIllusion 1268 float 0 fWereWolfConjuration 1269 float 0 fWereWolfMysticism 1270 float 0 fWereWolfRestoration 1271 float 0 fWereWolfEnchant 1272 float 0 fWereWolfAlchemy 1273 float 0 fWereWolfSecurity 1274 float 0 fWereWolfSneak 1275 float 95 fWereWolfLightArmor 1276 float 0 fWereWolfShortBlade 1277 float 0 fWereWolfMarksman 1278 float 0 fWereWolfMerchantile 1279 float 0 fWereWolfSpeechcraft 1280 float 0 fCombatDistanceWerewolfMod 1281 float 0.3 fFleeDistance 1282 float 3000 sEffectWaterBreathing 1283 string \"Water Breathing\" sEffectSwiftSwim 1284 string \"Swift Swim\" sEffectWaterWalking 1285 string \"Water Walking\" sEffectShield 1286 string \"Shield\" sEffectFireShield 1287 string \"Fire Shield\" sEffectLightningShield 1288 string \"Lightning Shield\" sEffectFrostShield 1289 string \"Frost Shield\" sEffectBurden 1290 string \"Burden\" sEffectFeather 1291 string \"Feather\" sEffectJump 1292 string \"Jump\" sEffectLevitate 1293 string \"Levitate\" sEffectSlowFall 1294 string \"SlowFall\" sEffectLock 1295 string \"Lock\" sEffectOpen 1296 string \"Open\" sEffectFireDamage 1297 string \"Fire Damage\" sEffectShockDamage 1298 string \"Shock Damage\" sEffectFrostDamage 1299 string \"Frost Damage\" sEffectDrainAttribute 1300 string \"Drain Attribute\" sEffectDrainHealth 1301 string \"Drain Health\" sEffectDrainSpellpoints 1302 string \"Drain Magicka\" sEffectDrainFatigue 1303 string \"Drain Fatigue\" sEffectDrainSkill 1304 string \"Drain Skill\" sEffectDamageAttribute 1305 string \"Damage Attribute\" sEffectDamageHealth 1306 string \"Damage Health\" sEffectDamageMagicka 1307 string \"Damage Magicka\" sEffectDamageFatigue 1308 string \"Damage Fatigue\" sEffectDamageSkill 1309 string \"Damage Skill\" sEffectPoison 1310 string \"Poison\" sEffectWeaknessToFire 1311 string \"Weakness to Fire\" sEffectWeaknessToFrost 1312 string \"Weakness to Frost\" sEffectWeaknessToShock 1313 string \"Weakness to Shock\" sEffectWeaknessToMagicka 1314 string \"Weakness to Magicka\" sEffectWeaknessToCommonDisease 1315 string \"Weakness to Common Disease\" sEffectWeaknessToBlightDisease 1316 string \"Weakness to Blight Disease\" sEffectWeaknessToCorprusDisease 1317 string \"Weakness to Corprus Disease\" sEffectWeaknessToPoison 1318 string \"Weakness to Poison\" sEffectWeaknessToNormalWeapons 1319 string \"Weakness to Normal Weapons\" sEffectDisintegrateWeapon 1320 string \"Disintegrate Weapon\" sEffectDisintegrateArmor 1321 string \"Disintegrate Armor\" sEffectInvisibility 1322 string \"Invisibility\" sEffectChameleon 1323 string \"Chameleon\" sEffectLight 1324 string \"Light\" sEffectSanctuary 1325 string \"Sanctuary\" sEffectNightEye 1326 string \"Night Eye\" sEffectCharm 1327 string \"Charm\" sEffectParalyze 1328 string \"Paralyze\" sEffectSilence 1329 string \"Silence\" sEffectBlind 1330 string \"Blind\" sEffectSound 1331 string \"Sound\" sEffectCalmHumanoid 1332 string \"Calm Humanoid\" sEffectCalmCreature 1333 string \"Calm Creature\" sEffectFrenzyHumanoid 1334 string \"Frenzy Humanoid\" sEffectFrenzyCreature 1335 string \"Frenzy Creature\" sEffectDemoralizeHumanoid 1336 string \"Demoralize Humanoid\" sEffectDemoralizeCreature 1337 string \"Demoralize Creature\" sEffectRallyHumanoid 1338 string \"Rally Humanoid\" sEffectRallyCreature 1339 string \"Rally Creature\" sEffectDispel 1340 string \"Dispel\" sEffectSoultrap 1341 string \"Soultrap\" sEffectTelekinesis 1342 string \"Telekinesis\" sEffectMark 1343 string \"Mark\" sEffectRecall 1344 string \"Recall\" sEffectDivineIntervention 1345 string \"Divine Intervention\" sEffectAlmsiviIntervention 1346 string \"Almsivi Intervention\" sEffectDetectAnimal 1347 string \"Detect Animal\" sEffectDetectEnchantment 1348 string \"Detect Enchantment\" sEffectDetectKey 1349 string \"Detect Key\" sEffectSpellAbsorption 1350 string \"Spell Absorption\" sEffectReflect 1351 string \"Reflect\" sEffectCureCommonDisease 1352 string \"Cure Common Disease\" sEffectCureBlightDisease 1353 string \"Cure Blight Disease\" sEffectCureCorprusDisease 1354 string \"Cure Corprus Disease\" sEffectCurePoison 1355 string \"Cure Poison\" sEffectCureParalyzation 1356 string \"Cure Paralyzation\" sEffectRestoreAttribute 1357 string \"Restore Attribute\" sEffectRestoreHealth 1358 string \"Restore Health\" sEffectRestoreSpellPoints 1359 string \"Restore Magicka\" sEffectRestoreFatigue 1360 string \"Restore Fatigue\" sEffectRestoreSkill 1361 string \"Restore Skill\" sEffectFortifyAttribute 1362 string \"Fortify Attribute\" sEffectFortifyHealth 1363 string \"Fortify Health\" sEffectFortifySpellpoints 1364 string \"Fortify Magicka\" sEffectFortifyFatigue 1365 string \"Fortify Fatigue\" sEffectFortifySkill 1366 string \"Fortify Skill\" sEffectFortifyMagickaMultiplier 1367 string \"Fortify Maximum Magicka\" sEffectAbsorbAttribute 1368 string \"Absorb Attribute\" sEffectAbsorbHealth 1369 string \"Absorb Health\" sEffectAbsorbSpellPoints 1370 string \"Absorb Magicka\" sEffectAbsorbFatigue 1371 string \"Absorb Fatigue\" sEffectAbsorbSkill 1372 string \"Absorb Skill\" sEffectResistFire 1373 string \"Resist Fire\" sEffectResistFrost 1374 string \"Resist Frost\" sEffectResistShock 1375 string \"Resist Shock\" sEffectResistMagicka 1376 string \"Resist Magicka\" sEffectResistCommonDisease 1377 string \"Resist Common Disease\" sEffectResistBlightDisease 1378 string \"Resist Blight Disease\" sEffectResistCorprusDisease 1379 string \"Resist Corprus Disease\" sEffectResistPoison 1380 string \"Resist Poison\" sEffectResistNormalWeapons 1381 string \"Resist Normal Weapons\" sEffectResistParalysis 1382 string \"Resist Paralysis\" sEffectRemoveCurse 1383 string \"Remove Curse\" sEffectTurnUndead 1384 string \"Turn Undead\" sEffectSummonScamp 1385 string \"Summon Scamp\" sEffectSummonClannfear 1386 string \"Summon Clannfear\" sEffectSummonDaedroth 1387 string \"Summon Daedroth\" sEffectSummonDremora 1388 string \"Summon Dremora\" sEffectSummonAncestralGhost 1389 string \"Summon Ancestral Ghost\" sEffectSummonSkeletalMinion 1390 string \"Summon Skeletal Minion\" sEffectSummonLeastBonewalker 1391 string \"Summon Bonewalker\" sEffectSummonGreaterBonewalker 1392 string \"Summon Greater Bonewalker\" sEffectSummonBonelord 1393 string \"Summon Bonelord\" sEffectSummonWingedTwilight 1394 string \"Summon Winged Twilight\" sEffectSummonHunger 1395 string \"Summon Hunger\" sEffectSummonGoldensaint 1396 string \"Summon Golden Saint\" sEffectSummonFlameAtronach 1397 string \"Summon Flame Atronach\" sEffectSummonFrostAtronach 1398 string \"Summon Frost Atronach\" sEffectSummonStormAtronach 1399 string \"Summon Storm Atronach\" sEffectFortifyAttackBonus 1400 string \"Fortify Attack\" sEffectCommandCreatures 1401 string \"Command Creature\" sEffectCommandHumanoids 1402 string \"Command Humanoid\" sEffectBoundDagger 1403 string \"Bound Dagger\" sEffectBoundLongsword 1404 string \"Bound Longsword\" sEffectBoundMace 1405 string \"Bound Mace\" sEffectBoundBattleAxe 1406 string \"Bound Battle Axe\" sEffectBoundSpear 1407 string \"Bound Spear\" sEffectBoundLongbow 1408 string \"Bound Longbow\" sEffectExtraSpell 1409 string \"EXTRA SPELL\" sEffectBoundCuirass 1410 string \"Bound Cuirass\" sEffectBoundHelm 1411 string \"Bound Helm\" sEffectBoundBoots 1412 string \"Bound Boots\" sEffectBoundShield 1413 string \"Bound Shield\" sEffectBoundGloves 1414 string \"Bound Gloves\" sEffectCorpus 1415 string \"Corprus\" sEffectVampirism 1416 string \"Vampirism\" sEffectSummonCenturionSphere 1417 string \"Summon Centurion Sphere\" sEffectSunDamage 1418 string \"Sun Damage\" sEffectStuntedMagicka 1419 string \"Stunted Magicka\" sEffectSummonFabricant 1420 string \"Summon Fabricant\" sEffectSummonCreature01 1421 string \"Call Wolf\" sEffectSummonCreature02 1422 string \"Call Bear\" sEffectSummonCreature03 1423 string \"Summon Bonewolf\" sEffectSummonCreature04 1424 string \"sEffectSummonCreature04\" sEffectSummonCreature05 1425 string \"sEffectSummonCreature05\" sSchoolAlteration 1426 string \"Alteration\" sSchoolConjuration 1427 string \"Conjuration\" sSchoolDestruction 1428 string \"Destruction\" sSchoolIllusion 1429 string \"Illusion\" sSchoolMysticism 1430 string \"Mysticism\" sSchoolRestoration 1431 string \"Restoration\" sTypeSpell 1432 string \"Spells\" sTypeAbility 1433 string \"Abilities\" sTypeBlightDisease 1434 string \"Blight Disease\" sTypeDisease 1435 string \"Disease\" sTypeCurse 1436 string \"Curse\" sTypePower 1437 string \"Powers\" sItemCastOnce 1438 string \"Cast Once\" sItemCastWhenStrikes 1439 string \"Cast When Strikes\" sItemCastWhenUsed 1440 string \"Cast When Used\" sItemCastConstant 1441 string \"Constant Effect\" sRangeSelf 1442 string \"Self\" sRangeTouch 1443 string \"Touch\" sRangeTarget 1444 string \"Target\" sMagicSkillFail 1445 string \"You failed casting the spell.\" sMagicInsufficientSP 1446 string \"You do not have enough Magicka to cast the spell.\" sMagicInsufficientCharge 1447 string \"Item does not have enough charge.\" sPowerAlreadyUsed 1448 string \"You already used that power today.\" sMagicInvalidTarget 1449 string \"Your spell did not get a target.\" sMagicLockSuccess 1450 string \"Your spell has locked its target.\" sMagicOpenSuccess 1451 string \"Your spell has unlocked its target.\" sMagicTargetResistsWeapons 1452 string \"Your weapon has no effect.\" sMagicContractDisease 1453 string \"You have contracted %s\" fMagicDetectRefreshRate 1454 float 0.5 fMagicStartIconBlink 1455 float 3 fMagicCreatureCastDelay 1456 float 1.5 sMagicScampID 1457 string \"Scamp_summon\" sMagicClannfearID 1458 string \"Clannfear_summon\" sMagicDaedrothID 1459 string \"Daedroth_summon\" sMagicDremoraID 1460 string \"Dremora_summon\" sMagicAncestralGhostID 1461 string \"Ancestor_Ghost_summon\" sMagicSkeletalMinionID 1462 string \"Skeleton_summon\" sMagicLeastBonewalkerID 1463 string \"Bonewalker_summon\" sMagicGreaterBonewalkerID 1464 string \"Bonewalker_Greater_summ\" sMagicBonelordID 1465 string \"Bonelord_summon\" sMagicWingedTwilightID 1466 string \"Winged Twilight_summon\" sMagicHungerID 1467 string \"Hunger_summon\" sMagicGoldenSaintID 1468 string \"Golden Saint_summon\" sMagicFlameAtronachID 1469 string \"Atronach_Flame_summon\" sMagicFrostAtronachID 1470 string \"Atronach_Frost_summon\" sMagicStormAtronachID 1471 string \"Atronach_Storm_summon\" sMagicCenturionSphereID 1472 string \"centurion_sphere_summon\" sMagicFabricantID 1473 string \"Fabricant_summon\" sMagicCreature01ID 1474 string \"BM_wolf_grey_summon\" sMagicCreature02ID 1475 string \"BM_bear_black_summon\" sMagicCreature03ID 1476 string \"BM_wolf_bone_summon\" sMagicCreature04ID 1477 string \"sMagicCreature04ID\" sMagicCreature05ID 1478 string \"sMagicCreature05ID\" sMagicBoundDaggerID 1479 string \"Bound_Dagger\" sMagicBoundLongswordID 1480 string \"Bound_Longsword\" sMagicBoundMaceID 1481 string \"Bound_Mace\" sMagicBoundBattleAxeID 1482 string \"Bound_Battle_Axe\" sMagicBoundSpearID 1483 string \"Bound_Spear\" sMagicBoundLongbowID 1484 string \"Bound_Longbow\" sMagicBoundCuirassID 1485 string \"Bound_Cuirass\" sMagicBoundHelmID 1486 string \"Bound_Helm\" sMagicBoundBootsID 1487 string \"Bound_Boots\" sMagicBoundShieldID 1488 string \"Bound_Shield\" sMagicBoundLeftGauntletID 1489 string \"Bound_Gauntlet_Left\" sMagicBoundRightGauntletID 1490 string \"Bound_Gauntlet_Right\" fDiseaseXferChance 1491 float 2.5 fElementalShieldMult 1492 float 0.1 sMagicCorprusWorsens 1493 string \"Your case of Corprus has worsened.\" sMagicCannotRecast 1494 string \"You cannot re-cast this spell while it is still in effect.\" fMagicSunBlockedMult 1495 float 0.5 sMagicPCResisted 1496 string \"You resisted magic.\" sMagicTargetResisted 1497 string \"Target resisted magic.\" sMagicInvalidEffect 1498 string \"You cannot cast this effect right now.\" sAcrobat 1499 string \"Acrobat\" sAgent 1500 string \"Agent\" sArcher 1501 string \"Archer\" sAssassin 1502 string \"Assassin\" sBarbarian 1503 string \"Barbarian\" sBard 1504 string \"Bard\" sBattlemage 1505 string \"Battlemage\" sCrusader 1506 string \"Crusader\" sCustom 1507 string \"Custom\" sHealer 1508 string \"Healer\" sKnight 1509 string \"Knight\" sMage 1510 string \"Mage\" sMonk 1511 string \"Monk\" sNightblade 1512 string \"Nightblade\" sPilgrim 1513 string \"Pilgrim\" sRogue 1514 string \"Rogue\" sScout 1515 string \"Scout\" sSorceror 1516 string \"Sorcerer\" sSpellsword 1517 string \"Spellsword\" sThief 1518 string \"Thief\" sWarrior 1519 string \"Warrior\" sWitchhunter 1520 string \"Witchhunter\"","title":"Game Settings (GMSTs)"},{"location":"references/gmst/#game-settings-gmsts","text":"Tip These values are available in Lua by their index in the tes3.gmst table. For example, tes3.gmst.sLevelUpMsg has a value of 682 . Tip The value of a GMST can be retrieved by using the tes3.findGMST() function. For example, tes3.findGMST(tes3.gmst.sMonthMorningstar).value has a value of \"Morning Star\" in an unmodded english installation of Morrowind. Index Value Type Default GMST Value sMonthMorningstar 0 string \"Morning Star\" sMonthSunsdawn 1 string \"Sun's Dawn\" sMonthFirstseed 2 string \"First Seed\" sMonthRainshand 3 string \"Rain's Hand\" sMonthSecondseed 4 string \"Second Seed\" sMonthMidyear 5 string \"Mid Year\" sMonthSunsheight 6 string \"Sun's Height\" sMonthLastseed 7 string \"Last Seed\" sMonthHeartfire 8 string \"Heartfire\" sMonthFrostfall 9 string \"Frost Fall\" sMonthSunsdusk 10 string \"Sun's Dusk\" sMonthEveningstar 11 string \"Evening Star\" sSpecialization 12 string \"Specialization\" sSpecializationCombat 13 string \"Combat\" sSpecializationMagic 14 string \"Magic\" sSpecializationStealth 15 string \"Stealth\" sSkillClassMajor 16 string \"Major Skills\" sSkillClassMinor 17 string \"Minor Skills\" sSkillClassMisc 18 string \"Misc Skills\" sRacialTraits 19 string \"Racial Traits\" sHealthPerHourOfRest 20 string \"Health per hour of rest\" sHealthPerLevel 21 string \"Health per level\" sGoverningAttribute 22 string \"Governing Attribute\" sClass 23 string \"Class\" sTraits 24 string \"Traits\" sJournal 25 string \"Journal\" sOK 26 string \"OK\" sClose 27 string \"Close\" sPrev 28 string \"Prev\" sNext 29 string \"Next\" sTake 30 string \"Take\" sWeaponTab 31 string \"Weapon\" sApparelTab 32 string \"Apparel\" sMagicTab 33 string \"Magic\" sMiscTab 34 string \"Misc\" sWornTab 35 string \"Worn\" sAllTab 36 string \"All\" sAttack 37 string \"Attack\" sUses 38 string \"Uses\" sQuality 39 string \"Quality\" sCharges 40 string \"Charge:\" sArmorRating 41 string \"Armor Rating\" sSlash 42 string \"Slash\" sThrust 43 string \"Thrust\" sChop 44 string \"Chop\" sEncumbrance 45 string \"Encumbrance\" sCondition 46 string \"Condition\" sWeight 47 string \"Weight\" sValue 48 string \"Value\" sLight 49 string \"Light\" sMedium 50 string \"Medium\" sHeavy 51 string \"Heavy\" sCancel 52 string \"Cancel\" sTakeAll 53 string \"Take All\" sUntilHealed 54 string \"Until Healed\" sRest 55 string \"Rest\" sWait 56 string \"Wait\" sRestIllegal 57 string \"Resting here is illegal. You'll need to find a bed.\" sGold 58 string \"Gold\" sMove 59 string \"Move\" sTo 60 string \"to\" sActorInCombat 61 string \"This character is in combat.\" sArmor 62 string \"Armor\" sTopics 63 string \"Topics\" sService 64 string \"Service\" sPersuasion 65 string \"Persuasion\" sBye 66 string \"Bye\" sGoodbye 67 string \"Goodbye\" sYes 68 string \"Yes\" sNo 69 string \"No\" sOn 70 string \"On\" sOff 71 string \"Off\" sFull 72 string \"Full\" sWorld 73 string \"World\" sExpelled 74 string \"EXPELLED\" sExpelledMessage 75 string \"You have been expelled from\" sFavoriteSkills 76 string \"Favorite Skills\" sGame 77 string \"Game\" sVideo 78 string \"Video\" sAudio 79 string \"Audio\" sControls 80 string \"Controls\" sPrefs 81 string \"Prefs\" sPreferences 82 string \"Preferences\" sNewGame 83 string \"New Game\" sExitGame 84 string \"Exit Game\" sOptions 85 string \"Options Menu\" sSaveGame 86 string \"Save Game\" sLoadGame 87 string \"Load Game\" sDeleteGame 88 string \"Delete Game\" sSaveGameDenied 89 string \"You cannot save your game right now.\" sSaveGameFailed 90 string \"An error was encountered while saving the game.\" sSaveGameTooBig 91 string \"There is not enough space to save this game. Free up at least %i blocks and try again.\" sSaveGameNoMemory 92 string \"Unable to create Save Game. Free up 100 blocks and try again.\" sMaximumSaveGameMessage 93 string \"You have reached the limit of Morrowind saved games. Please delete a Morrowind saved game and try again.\" sRender_Distance 94 string \"View Distance\" sNear 95 string \"Near\" sFar 96 string \"Far\" sGamma_Correction 97 string \"Gamma Correction\" sLight_Gamma 98 string \"Light\" sDark_Gamma 99 string \"Dark\" sSeldom 100 string \"Seldom\" sAlways 101 string \"Always\" sWaterTerrainReflect 102 string \"Reflect Terrain\" sWaterReflectUpdate 103 string \"Reflection Updating\" fWaterReflectUpdateAlways 104 float 0 fWaterReflectUpdateSeldom 105 float 10 sMaster 106 string \"Master\" sVoice 107 string \"Voice\" sEffects 108 string \"Effects\" sFootsteps 109 string \"Footsteps\" sMusic 110 string \"Music\" sTransparency_Menu 111 string \"Menu Transparency\" sMenu_Help_Delay 112 string \"Menu Help Delay\" sAIDistance 113 string \"AI Distance\" sHigh 114 string \"High\" sLow 115 string \"Low\" sDetail_Level 116 string \"Detail Level\" sMenus 117 string \"Menus\" sStrip 118 string \"Strip\" sReturnToGame 119 string \"Return To Game\" sForward 120 string \"Forward\" sBack 121 string \"Back\" sLeft 122 string \"Left\" sRight 123 string \"Right\" sUse 124 string \"Use\" sActivate 125 string \"Activate\" sReady_Weapon 126 string \"Ready Weapon\" sReady_Magic 127 string \"Ready Magic\" sCrouch_Sneak 128 string \"Sneak\" sRun 129 string \"Run\" sAlways_Run 130 string \"Always Run\" sAuto_Run 131 string \"Auto Run\" sJump 132 string \"Jump\" sNextWeapon 133 string \"Next Weapon\" sPrevWeapon 134 string \"Previous Weapon\" sNextSpell 135 string \"Next Spell\" sPrevSpell 136 string \"Previous Spell\" sTogglePOVCmd 137 string \"Toggle POV\" sMenu_Mode 138 string \"Menu Mode\" sJournalCmd 139 string \"Journal\" sRestKey 140 string \"Rest\" sQuickMenu 141 string \"Quick Menu\" sQuick1Cmd 142 string \"Quick 1\" sQuick2Cmd 143 string \"Quick 2\" sQuick3Cmd 144 string \"Quick 3\" sQuick4Cmd 145 string \"Quick 4\" sQuick5Cmd 146 string \"Quick 5\" sQuick6Cmd 147 string \"Quick 6\" sQuick7Cmd 148 string \"Quick 7\" sQuick8Cmd 149 string \"Quick 8\" sQuick9Cmd 150 string \"Quick 9\" sQuick10Cmd 151 string \"Quick 10\" sQuickSaveCmd 152 string \"Quick Save\" sQuickLoadCmd 153 string \"Quick Load\" sKeyName_00 154 string \"\" sKeyName_01 155 string \"ESC\" sKeyName_02 156 string \"1\" sKeyName_03 157 string \"2\" sKeyName_04 158 string \"3\" sKeyName_05 159 string \"4\" sKeyName_06 160 string \"5\" sKeyName_07 161 string \"6\" sKeyName_08 162 string \"7\" sKeyName_09 163 string \"8\" sKeyName_0A 164 string \"9\" sKeyName_0B 165 string \"0\" sKeyName_0C 166 string \"-\" sKeyName_0D 167 string \"=\" sKeyName_0E 168 string \"Back Space\" sKeyName_0F 169 string \"Tab\" sKeyName_10 170 string \"Q\" sKeyName_11 171 string \"W\" sKeyName_12 172 string \"E\" sKeyName_13 173 string \"R\" sKeyName_14 174 string \"T\" sKeyName_15 175 string \"Y\" sKeyName_16 176 string \"U\" sKeyName_17 177 string \"I\" sKeyName_18 178 string \"O\" sKeyName_19 179 string \"P\" sKeyName_1A 180 string \"[\" sKeyName_1B 181 string \"]\" sKeyName_1C 182 string \"Return\" sKeyName_1D 183 string \"Left Ctrl\" sKeyName_1E 184 string \"A\" sKeyName_1F 185 string \"S\" sKeyName_20 186 string \"D\" sKeyName_21 187 string \"F\" sKeyName_22 188 string \"G\" sKeyName_23 189 string \"H\" sKeyName_24 190 string \"J\" sKeyName_25 191 string \"K\" sKeyName_26 192 string \"L\" sKeyName_27 193 string \";\" sKeyName_28 194 string \"'\" sKeyName_29 195 string \"Grave\" sKeyName_2A 196 string \"Left Shift\" sKeyName_2B 197 string \"\\\" sKeyName_2C 198 string \"Z\" sKeyName_2D 199 string \"X\" sKeyName_2E 200 string \"C\" sKeyName_2F 201 string \"V\" sKeyName_30 202 string \"B\" sKeyName_31 203 string \"N\" sKeyName_32 204 string \"M\" sKeyName_33 205 string \",\" sKeyName_34 206 string \".\" sKeyName_35 207 string \"/\" sKeyName_36 208 string \"Right Shift\" sKeyName_37 209 string \"Numpad *\" sKeyName_38 210 string \"Left Alt\" sKeyName_39 211 string \"SPACEBAR\" sKeyName_3A 212 string \"Caps Lock\" sKeyName_3B 213 string \"F1\" sKeyName_3C 214 string \"F2\" sKeyName_3D 215 string \"F3\" sKeyName_3E 216 string \"F4\" sKeyName_3F 217 string \"F5\" sKeyName_40 218 string \"F6\" sKeyName_41 219 string \"F7\" sKeyName_42 220 string \"F8\" sKeyName_43 221 string \"F9\" sKeyName_44 222 string \"F10\" sKeyName_45 223 string \"Num Lock\" sKeyName_46 224 string \"Scroll Lock\" sKeyName_47 225 string \"Numpad 7\" sKeyName_48 226 string \"Numpad 8\" sKeyName_49 227 string \"Numpad 9\" sKeyName_4A 228 string \"Numpad -\" sKeyName_4B 229 string \"Numpad 4\" sKeyName_4C 230 string \"Numpad 5\" sKeyName_4D 231 string \"Numpad 6\" sKeyName_4E 232 string \"Numpad +\" sKeyName_4F 233 string \"Numpad 1\" sKeyName_50 234 string \"Numpad 2\" sKeyName_51 235 string \"Numpad 3\" sKeyName_52 236 string \"Numpad 0\" sKeyName_53 237 string \"Decimal\" sKeyName_54 238 string \"\" sKeyName_55 239 string \"\" sKeyName_56 240 string \"OEM 102\" sKeyName_57 241 string \"F11\" sKeyName_58 242 string \"F12\" sKeyName_59 243 string \"\" sKeyName_5A 244 string \"\" sKeyName_5B 245 string \"\" sKeyName_5C 246 string \"\" sKeyName_5D 247 string \"\" sKeyName_5E 248 string \"\" sKeyName_5F 249 string \"\" sKeyName_60 250 string \"\" sKeyName_61 251 string \"\" sKeyName_62 252 string \"\" sKeyName_63 253 string \"\" sKeyName_64 254 string \"F13\" sKeyName_65 255 string \"F14\" sKeyName_66 256 string \"F15\" sKeyName_67 257 string \"\" sKeyName_68 258 string \"\" sKeyName_69 259 string \"\" sKeyName_6A 260 string \"\" sKeyName_6B 261 string \"\" sKeyName_6C 262 string \"\" sKeyName_6D 263 string \"\" sKeyName_6E 264 string \"\" sKeyName_6F 265 string \"\" sKeyName_70 266 string \"Kana\" sKeyName_71 267 string \"\" sKeyName_72 268 string \"\" sKeyName_73 269 string \"Abnt C1\" sKeyName_74 270 string \"\" sKeyName_75 271 string \"\" sKeyName_76 272 string \"\" sKeyName_77 273 string \"\" sKeyName_78 274 string \"\" sKeyName_79 275 string \"Cnvrt\" sKeyName_7A 276 string \"\" sKeyName_7B 277 string \"No Cnvrt\" sKeyName_7C 278 string \"\" sKeyName_7D 279 string \"Yen\" sKeyName_7E 280 string \"Abnt C2\" sKeyName_7F 281 string \"\" sKeyName_80 282 string \"\" sKeyName_81 283 string \"\" sKeyName_82 284 string \"\" sKeyName_83 285 string \"\" sKeyName_84 286 string \"\" sKeyName_85 287 string \"\" sKeyName_86 288 string \"\" sKeyName_87 289 string \"\" sKeyName_88 290 string \"\" sKeyName_89 291 string \"\" sKeyName_8A 292 string \"\" sKeyName_8B 293 string \"\" sKeyName_8C 294 string \"\" sKeyName_8D 295 string \"Np Equals\" sKeyName_8E 296 string \"\" sKeyName_8F 297 string \"\" sKeyName_90 298 string \"PrvTrk\" sKeyName_91 299 string \"AT\" sKeyName_92 300 string \":\" sKeyName_93 301 string \"_\" sKeyName_94 302 string \"Kanji\" sKeyName_95 303 string \"Stop\" sKeyName_96 304 string \"Ax\" sKeyName_97 305 string \"Unlabeled\" sKeyName_98 306 string \"\" sKeyName_99 307 string \"NxtTrk\" sKeyName_9A 308 string \"\" sKeyName_9B 309 string \"\" sKeyName_9C 310 string \"Right Enter\" sKeyName_9D 311 string \"Right Ctrl\" sKeyName_9E 312 string \"\" sKeyName_9F 313 string \"\" sKeyName_A0 314 string \"Mute\" sKeyName_A1 315 string \"Calc\" sKeyName_A2 316 string \"Play Pause\" sKeyName_A3 317 string \"\" sKeyName_A4 318 string \"Media Stop\" sKeyName_A5 319 string \"\" sKeyName_A6 320 string \"\" sKeyName_A7 321 string \"\" sKeyName_A8 322 string \"\" sKeyName_A9 323 string \"\" sKeyName_AA 324 string \"\" sKeyName_AB 325 string \"\" sKeyName_AC 326 string \"\" sKeyName_AD 327 string \"\" sKeyName_AE 328 string \"Volume Down\" sKeyName_AF 329 string \"\" sKeyName_B0 330 string \"Volume Up\" sKeyName_B1 331 string \"\" sKeyName_B2 332 string \"Web Home\" sKeyName_B3 333 string \"Numpad ,\" sKeyName_B4 334 string \"\" sKeyName_B5 335 string \"Numpad /\" sKeyName_B6 336 string \"\" sKeyName_B7 337 string \"SysRq\" sKeyName_B8 338 string \"Right Alt\" sKeyName_B9 339 string \"\" sKeyName_BA 340 string \"\" sKeyName_BB 341 string \"\" sKeyName_BC 342 string \"\" sKeyName_BD 343 string \"\" sKeyName_BE 344 string \"\" sKeyName_BF 345 string \"\" sKeyName_C0 346 string \"\" sKeyName_C1 347 string \"\" sKeyName_C2 348 string \"\" sKeyName_C3 349 string \"\" sKeyName_C4 350 string \"\" sKeyName_C5 351 string \"Pause\" sKeyName_C6 352 string \"\" sKeyName_C7 353 string \"Home\" sKeyName_C8 354 string \"Up\" sKeyName_C9 355 string \"Page Up\" sKeyName_CA 356 string \"\" sKeyName_CB 357 string \"Left\" sKeyName_CC 358 string \"\" sKeyName_CD 359 string \"Right\" sKeyName_CE 360 string \"\" sKeyName_CF 361 string \"End\" sKeyName_D0 362 string \"Down\" sKeyName_D1 363 string \"Page Down\" sKeyName_D2 364 string \"Insert\" sKeyName_D3 365 string \"Delete\" sKeyName_D4 366 string \"\" sKeyName_D5 367 string \"\" sKeyName_D6 368 string \"\" sKeyName_D7 369 string \"\" sKeyName_D8 370 string \"\" sKeyName_D9 371 string \"\" sKeyName_DA 372 string \"\" sKeyName_DB 373 string \"Left Win\" sKeyName_DC 374 string \"Right Win\" sKeyName_DD 375 string \"Apps\" sKeyName_DE 376 string \"Power\" sKeyName_DF 377 string \"Sleep\" sKeyName_E0 378 string \"\" sKeyName_E1 379 string \"\" sKeyName_E2 380 string \"\" sKeyName_E3 381 string \"Wake\" sKeyName_E4 382 string \"\" sKeyName_E5 383 string \"Web Search\" sKeyName_E6 384 string \"Web Favs\" sKeyName_E7 385 string \"Web Ref\" sKeyName_E8 386 string \"Web Stop\" sKeyName_E9 387 string \"Web Fwd\" sKeyName_EA 388 string \"Web Back\" sKeyName_EB 389 string \"My Comp\" sKeyName_EC 390 string \"\" sKeyName_ED 391 string \"\" sKeyName_EE 392 string \"\" sKeyName_EF 393 string \"\" sKeyName_F0 394 string \"\" sKeyName_F1 395 string \"\" sKeyName_F2 396 string \"\" sKeyName_F3 397 string \"\" sKeyName_F4 398 string \"\" sKeyName_F5 399 string \"\" sKeyName_F6 400 string \"\" sKeyName_F7 401 string \"\" sKeyName_F8 402 string \"\" sKeyName_F9 403 string \"\" sKeyName_FA 404 string \"\" sKeyName_FB 405 string \"\" sKeyName_FC 406 string \"\" sKeyName_FD 407 string \"\" sKeyName_FE 408 string \"\" sKeyName_FF 409 string \"\" sForwardXbox 410 string \"Move Forward\" sBackXbox 411 string \"Move Backward\" sSlideLeftXbox 412 string \"Slide Left\" sSlideRightXbox 413 string \"Slide Right\" sMenuModeXbox 414 string \"Menu Mode\" sActivateXbox 415 string \"Activate\" sUseXbox 416 string \"Use\" sReadyItemXbox 417 string \"Ready Item\" sReadyMagicXbox 418 string \"Ready Magic\" sCrouchXbox 419 string \"Sneak\" sRunXbox 420 string \"Run\" sToggleRunXbox 421 string \"Toggle Run\" sJumpXbox 422 string \"Jump\" sTogglePOVXbox 423 string \"Toggle View\" sMenuNextXbox 424 string \"Next Menu\" sMenuPrevXbox 425 string \"Previous Menu\" sJournalXbox 426 string \"Journal\" sQuick4Xbox 427 string \"sQuick4Xbox\" sQuick5Xbox 428 string \"sQuick5Xbox\" sQuick6Xbox 429 string \"sQuick6Xbox\" sQuick7Xbox 430 string \"sQuick7Xbox\" sQuick8Xbox 431 string \"sQuick8Xbox\" sQuick9Xbox 432 string \"sQuick9Xbox\" sQuick0Xbox 433 string \"sQuick0Xbox\" sOptionsMenuXbox 434 string \"Options Menu\" sSystemMenuXbox 435 string \"System Menu\" sRestMenuXbox 436 string \"Rest/Wait\" sQuickSaveXbox 437 string \"Quick Save\" sQuickLoadXbox 438 string \"Quick Load\" sMoveUpXbox 439 string \"Move Up\" sMoveDownXbox 440 string \"Move Down\" sLookUpXbox 441 string \"Look Up\" sLookDownXbox 442 string \"Look Down\" sTurnLeftXbox 443 string \"Turn Left\" sTurnRightXbox 444 string \"Turn Right\" sNextWeaponXbox 445 string \"Next Weapon\" sPrevWeaponXbox 446 string \"Previous Weapon\" sNextSpellXbox 447 string \"Next Spell\" sPrevSpellXbox 448 string \"Previous Spell\" sDialogText1Xbox 449 string \"PUSH\" sDialogText2Xbox 450 string \"TO GO BACK\" sDialogText3Xbox 451 string \"TO READ MORE\" sQuick_Save 452 string \"Auto-Save when Rest\" sShadowText 453 string \"Real-time Shadows\" sLockSuccess 454 string \"Lock pick success!\" sLockFail 455 string \"Lock pick failed.\" sLockImpossible 456 string \"Lock too complex.\" sTrapSuccess 457 string \"Trap disarmed!\" sTrapFail 458 string \"Disarm trap failed.\" sTrapImpossible 459 string \"Trap too complex, your chance to disarm it is zero\" sTrapped 460 string \"Trapped\" sLockLevel 461 string \"Lock Level\" sKeyUsed 462 string \"used to open lock\" sUnlocked 463 string \"Unlocked\" fRepairMult 464 float 1 fRepairAmountMult 465 float 3 fSpellValueMult 466 float 10 fSpellMakingValueMult 467 float 7 fEnchantmentValueMult 468 float 1000 fTravelMult 469 float 4000 fTravelTimeMult 470 float 16000 fMagesGuildTravel 471 float 10 sBarter 472 string \"Barter\" sRepair 473 string \"Repair\" sSpells 474 string \"Spells\" sTraining 475 string \"Training\" sTravel 476 string \"Travel\" sSpellmaking 477 string \"Spellmaking\" sEnchanting 478 string \"Enchanting\" sJoystickNotFound 479 string \"Joystick not found.\" sJournalEntry 480 string \"Your journal has been updated.\" sDay 481 string \"Day\" sCreate 482 string \"Create\" sIngredients 483 string \"Ingredients\" sApparatus 484 string \"Apparatus\" sCreatedEffects 485 string \"Created Effects\" sOnetypeEffectMessage 486 string \"This effect has already been added.\" sName 487 string \"Name\" sNameTitle 488 string \"Name\" sSelect 489 string \"Select\" sBuy 490 string \"Buy\" sInfo 491 string \"Info\" sMagicEffects 492 string \"Magic Effects\" sOnce 493 string \"Once\" sCostCharge 494 string \"Cost/Charge\" sCostChance 495 string \"Cost/Chance\" sAttributesMenu1 496 string \"Choose an Attribute\" sBirthsignmenu1 497 string \"Abilities:\" sBirthsignmenu2 498 string \"Spells:\" sChooseClassMenu1 499 string \"Specialization:\" sChooseClassMenu2 500 string \"Favorite Attributes:\" sChooseClassMenu3 501 string \"Major Skills:\" sChooseClassMenu4 502 string \"Minor Skills:\" sCreateClassMenuWarning 503 string \"Reselect your class?\" sClassChoiceMenu1 504 string \"Answer his questions (Generates Class)\" sClassChoiceMenu2 505 string \"Give him the info (Pick from Class List)\" sClassChoiceMenu3 506 string \"Fill out forms yourself (Create Custom Class)\" sNotifyMessage1 507 string \"You can only rest on solid ground.\" sNotifyMessage2 508 string \"You can't rest here enemies are nearby.\" sNotifyMessage3 509 string \"You cannot sleep when dreaming.\" sNotifyMessage4 510 string \"Saving...\" sNotifyMessage4XBOX 511 string \"Saving. Please don't turn off your Xbox console.\" sNotifyMessage5 512 string \"You must place the object you are holding into a container before exiting menus.\" sNotifyMessage6 513 string \"Only one of each ingredient can be used to make a potion.\" sNotifyMessage6a 514 string \"At least two ingredients are needed to make a potion.\" sNotifyMessage7 515 string \"Only four ingredients can be used in a potion.\" sNotifyMessage8 516 string \"Your potion failed.\" sNotifyMessage9 517 string \"Your offer is refused.\" sNotifyMessage10 518 string \"You have to name the spell before buying it.\" sNotifyMessage11 519 string \"You have to have an item to enchant.\" sNotifyMessage12 520 string \"You don't have enough gold to buy this spell.\" sNotifyMessage13 521 string \"Beast races cannot wear full helmets.\" sNotifyMessage14 522 string \"Beast races cannot wear boots.\" sNotifyMessage15 523 string \"Beast races cannot wear shoes.\" sNotifyMessage16 524 string \"You can only wear one clothing item at a time.\" sNotifyMessage16_a 525 string \"You can only equip one item of that type at a time.\" sNotifyMessage17 526 string \"You cannot train a skill above its governing attribute.\" sNotifyMessage18 527 string \"You don't have enough gold to buy this spell.\" sNotifyMessage19 528 string \"Only one apparatus can be placed in each slot of the alchemy menu.\" sNotifyMessage20 529 string \"Please remove the object already in the mortar and pestle slot.\" sNotifyMessage21 530 string \"Please remove the object already in the alembic slot.\" sNotifyMessage22 531 string \"Please remove the object already in the calcinator slot.\" sNotifyMessage23 532 string \"Please remove the object already in the retort slot.\" sNotifyMessage24 533 string \"You need to assign all the major and minor skill slots.\" sNotifyMessage25 534 string \"You need to pick two favorite attributes.\" sNotifyMessage26 535 string \"You need to pick a specialization.\" sNotifyMessage27 536 string \"You need to assign all the major and minor skill slots.\" sNotifyMessage28 537 string \"You can only add eight effects to a spell.\" sNotifyMessage29 538 string \"You cannot add more enchantment to an object then it can hold.\" sNotifyMessage30 539 string \"You have to add at least one effect to a spell.\" sNotifyMessage31 540 string \"Items already enchanted cannot have another enchantment added.\" sNotifyMessage32 541 string \"Only soul gems with a soul can be put in the soul gem slot.\" sNotifyMessage33 542 string \"Only soul gems put in the soul gem slot.\" sNotifyMessage34 543 string \"The enchantment failed and your gem is destroyed.\" sNotifyMessage35 544 string \"Only one apparatus item can be equipped at a time.\" sNotifyMessage36 545 string \"You have to distribute all you points before exiting.\" sNotifyMessage37 546 string \"You need to type in your name.\" sNotifyMessage38 547 string \"Skill Increase:\" sNotifyMessage39 548 string \"Your %s skill increased to %d.\" sNotifyMessage40 549 string \"Skill Maximum Reached.\" sNotifyMessage41 550 string \"Your %s skill has reached the limit of your %s.\" sNotifyMessage42 551 string \"You have been released after %d day. A skill has been affected by your time in prison.\" sNotifyMessage43 552 string \"You have been released after %d days. Your skills have been affected by your time in prison.\" sNotifyMessage44 553 string \"Your %s skill decreased to %d.\" sNotifyMessage45 554 string \"You need a Mortar and Pestle to use\" sNotifyMessage46 555 string \"You need a Alembic to use\" sNotifyMessage47 556 string \"You need a Calcinator to use\" sNotifyMessage48 557 string \"You need a Retort to use\" sNotifyMessage49 558 string \"That %s is mine.\" sNotifyMessage50 559 string \"%s has no effect on you.\" sNotifyMessage51 560 string \"The %s has been used up.\" sNotifyMessage52 561 string \"You must have a soul gem with a soul to make an Enchanted Item\" sNotifyMessage53 562 string \"Your menu sizes and positions have been saved for exploring mode.\" sNotifyMessage54 563 string \"Do you want to start a new game and lose your current game?\" sNotifyMessage55 564 string \"Please reconnect the controller and press START to continue.\" sNotifyMessage56 565 string \"There's a problem with the disc you're using. It may be dirty or damaged. Press A to continue.\" sNotifyMessage57 566 string \"Please press START to begin.\" sNotifyMessage58 567 string \"Your Xbox Hard Disk doesn't have enough free blocks to save games. Press A to continue without saving or B to free more blocks.\" sNotifyMessage59 568 string \"You are over-encumbered.\" sNotifyMessage60 569 string \"%s has been added to your inventory.\" sNotifyMessage61 570 string \"%d %s has been added to your inventory.\" sNotifyMessage62 571 string \"%s has been removed from your inventory.\" sNotifyMessage63 572 string \"%d %s has been removed from your inventory.\" sNotifyMessage64 573 string \"You can't sleep in someone else's bed!\" sNotifyMessage65 574 string \"You can't save a game with no name!\" sNotifyMessage66 575 string \"This will reset all controls to the default settings. Do you wish to continue?\" sNotifyMessage67 576 string \"This will immediately change your resolution. Do you want to continue?\" sTeleportDisabled 577 string \"Teleportation magic does not work here.\" sLevitateDisabled 578 string \"Levitation magic does not work here.\" sInPrisonTitle 579 string \"Serving time...\" sInfoRefusal 580 string \"Info Refusal\" sAdmireSuccess 581 string \"Admire Success\" sAdmireFail 582 string \"Admire Fail\" sIntimidateSuccess 583 string \"Intimidate Success\" sIntimidateFail 584 string \"Intimidate Fail\" sTauntSuccess 585 string \"Taunt Success\" sTauntFail 586 string \"Taunt Fail\" sServiceRefusal 587 string \"Service Refusal\" sBribeSuccess 588 string \"Bribe Success\" sBribeFail 589 string \"Bribe Fail\" sWerewolfRefusal 590 string \"You cannot do this as a werewolf.\" sWerewolfPopup 591 string \"Werewolf\" sWerewolfRestMessage 592 string \"You cannot rest in werewolf form.\" sWerewolfAlarmMessage 593 string \"You have been detected as a known werewolf.\" sBookSkillMessage 594 string \"You have gained knowledge from this book.\" sLoadingMessage1 595 string \"Loading Master/Plugin Files\" sLoadingMessage2 596 string \"Loading Area\" sLoadingMessage3 597 string \"Loading Area\" sLoadingMessage4 598 string \"Initializing Data...\" sLoadingMessage5 599 string \"Parsing Quests (this may take a while) Re-save when done.\" sLoadingMessage9 600 string \"Clearing Data...\" sLoadingMessage14 601 string \"Loading Save Game\" sLoadingMessage15 602 string \"Loading (%s)\" sInvalidSaveGameMsg 603 string \"This file is an invalid Save Game.\" sInvalidSaveGameMsgXBOX 604 string \"Unable to load saved game. Press A to continue.\" sLoadingErrorsMsg 605 string \"Errors were encountered loading from file '%s'.\" sMissingMastersMsg 606 string \"The currently selected master files and plugins do not match the ones used by this save game. Errors may occur during load or game play. Do you wish to continue?\" sChangedMastersMsg 607 string \"The selected master files and plugins may have changed since this save game was created. Errors may occur during load or game play. Do you wish to continue?\" sMastPlugMismatchMsg 608 string \"One of the files that \"%s\" is dependent on has changed since the last save. This may result in errors. Saving again will clear this message but not necessarily fix any errors.\" sGeneralMastPlugMismatchMsg 609 string \"One or more plugins could not find the correct versions of the master files they depend on. Errors may occur during load or game play. Check the \"Warnings.txt\" file for more information.\" sLoadLastSaveMsg 610 string \"The most recent Save Game is '%s'. Would you like to load it?\" sMessage1 611 string \"Do you want to Load a save game and lose your current game?\" sMessage2 612 string \"Quit Morrowind?\" sMessage3 613 string \"Are you sure you want to delete this Save Game?\" sMessage4 614 string \"Are you sure you want to overwrite this Save Game?\" sMessage5 615 string \"Do you wish to quit your current game? All unsaved progress will be lost.\" sMessageQuestionAnswer1 616 string \"Your personality and past reflect a:\" sMessageQuestionAnswer2 617 string \"Accept this Class\" sMessageQuestionAnswer3 618 string \"Choose Another Class\" sBarterDialog1 619 string \"You cannot afford this transaction.\" sBarterDialog2 620 string \"I cannot afford this transaction.\" sBarterDialog3 621 string \"This is to heavy for you to carry.\" sBarterDialog4 622 string \"I don't buy that item.\" sBarterDialog5 623 string \"Thank you, Please Come Again.\" sBarterDialog6 624 string \"You need to place the bartered item before existing Barter Menu!\" sBarterDialog7 625 string \"Price\" sBarterDialog8 626 string \"Offer\" sBarterDialog9 627 string \"You cannot sell summoned items!\" sBarterDialog10 628 string \"You cannot buy summoned items!\" sBarterDialog11 629 string \"You need to trade items before making an offer.\" sBarterDialog12 630 string \"You cannot drop summoned items!\" sInventoryMessage1 631 string \"This object is broken and cannot be equipped until fixed.\" sInventoryMessage2 632 string \"You cannot repair items during battle.\" sInventoryMessage3 633 string \"You cannot make potions during battle.\" sInventoryMessage4 634 string \"You cannot read during battle.\" sInventoryMessage5 635 string \"You cannot use soul gems during battle.\" sContentsMessage1 636 string \"You cannot remove summoned items from their container.\" sContentsMessage2 637 string \"You cannot place items in this container.\" sContentsMessage3 638 string \"The item will not fit.\" sAttributeListTitle 639 string \"Attribute List\" sConsoleTitle 640 string \"Console\" sCreateClassMenu1 641 string \"Class Description\" sCreateClassMenu2 642 string \"Close the Description menu before leaving Class Creation\" sCreateClassMenu3 643 string \"The class needs a description.\" sCreateClassMenuHelp1 644 string \"You'll get +5 to all skills of your specialization. They'll also be easier to increase.\" sCreateClassMenuHelp2 645 string \"You'll get +10 to each of your favored attributes.\" sControlsMenu1 646 string \"Reset Controls\" sControlsMenu2 647 string \"Mouse Sensitivity\" sControlsMenu3 648 string \"Press a key or push a button to set this command.\" sControlsMenu4 649 string \"Vertical Sensitivity\" sControlsMenu5 650 string \"Horizontal Sensitivity\" sControlsMenu6 651 string \"Push a button to set this command.\" sGameWithoutLauncherXbox 652 string \"The game was started without the launcher. Press START to continue.\" sDialogMenu1 653 string \"Final Disposition:\" sEnchantmentMenu1 654 string \"Enchantment Menu\" sEnchantmentMenu2 655 string \"Enchantment Name\" sEnchantmentMenu3 656 string \"Enchantment\" sEnchantmentMenu4 657 string \"Point Cost\" sEnchantmentMenu5 658 string \"Buy\" sEnchantmentMenu6 659 string \"Chance\" sEnchantmentMenu7 660 string \"Please remove the current soul gem before placing a different soul gem.\" sEnchantmentMenu8 661 string \"You cannot buy a spell that has a zero point cost.\" sEnchantmentMenu9 662 string \"You cannot enchant more then one item of that type at a time.\" sEnchantmentMenu10 663 string \"The cast cost cannot exceed the charge amount put into the time\" sEnchantmentMenu11 664 string \"You must add at least one effect to an enchantment\" sEnchantmentMenu12 665 string \"You have successfully created an enchanted item\" sEnchantmentHelp1 666 string \"Slot for item to enchant. Only weapons, armor, scrolls and clothing that are not already enchanted can be enchanted.\" sEnchantmentHelp2 667 string \"Slot for the soul gem used to enchant an item. Only soul gems filled with a soul can be used. The soul amount is the total charge placed into the item.\" sEnchantmentHelp3 668 string \"The first number is the total amount the enchantment would cost to cast. The second number is the total enchantment cost that can be placed on this type of item.\" sEnchantmentHelp4 669 string \"The amount of charge points needed each time this enchantment is cast. This number is modified by your enchant skill.\" sEnchantmentHelp5 670 string \"The amount of soul in the soul gem in the soul gem slot\" sEnchantmentHelp6 671 string \"Amount of gold to buy this enchantment\" sEnchantmentHelp7 672 string \"Type of cast for the enchantment.\" sEnchantmentHelp8 673 string \"Name you give the spell.\" sEnchantmentHelp9 674 string \"Magic effects you know that you can add to an item\" sEnchantmentHelp10 675 string \"Current effects on the item\" sInputMenu1 676 string \"Enter\" sInventoryMenu1 677 string \"You cannot equip items being bartered.\" sLevelUpMenu1 678 string \"You have ascended to Level\" sLevelUpMenu2 679 string \"It's all suddenly obvious to you. You just have to concentrate. All the energy and time you've wasted is a sin, but without the experience you've gained, taking risks, taking responsibility for failure how could you have understood?\" sLevelUpMenu3 680 string \"x2\" sLevelUpMenu4 681 string \"x3\" sLevelUpMsg 682 string \"You should rest and meditate on what you've learned.\" sLevelUp 683 string \"Level Up\" sRange 684 string \"Range\" sArea 685 string \"Area\" sMagnitude 686 string \"Magnitude\" sDuration 687 string \"Duration\" sDrain 688 string \"Drain\" sAbsorb 689 string \"Absorb\" sFortify 690 string \"Fortify\" sRestore 691 string \"Restore\" sDamage 692 string \"Damage\" spoint 693 string \"pt\" spoints 694 string \"pts\" spercent 695 string \"%\" sfor 696 string \"for\" ssecond 697 string \"sec\" sseconds 698 string \"secs\" sin 699 string \"in\" sfootarea 700 string \"ft\" sfeet 701 string \"ft\" sXTimes 702 string \"x\" sXTimesINT 703 string \"x INT\" sonword 704 string \"on\" sNone 705 string \"None\" sDone 706 string \"Done\" sStartCell 707 string \"Cavern of the Incarnate\" sStartError 708 string \"Cannot start in an empty interior cell!\" sStartCellError 709 string \"Starting interior cell \"Cavern of the Incarnate\" not found!\" sAdmire 710 string \"Admire\" sIntimidate 711 string \"Intimidate\" sTaunt 712 string \"Taunt\" sBribe 10 Gold 713 string \"Bribe 10 Gold\" sBribe10Gold 713 string \"Bribe 10 Gold\" sBribe100Gold 714 string \"Bribe 100 Gold\" sBribe 100 Gold 714 string \"Bribe 100 Gold\" sBribe1000Gold 715 string \"Bribe 1000 Gold\" sBribe 1000 Gold 715 string \"Bribe 1000 Gold\" sPersuasionMenuTitle 716 string \"Persuasion\" sFast 717 string \"Fast\" sSlow 718 string \"Slow\" sBestAttack 719 string \"Always Use Best Attack\" sSubtitles 720 string \"Subtitles\" sMouseFlip 721 string \"Invert Y Axis\" sCursorOff 722 string \"Crosshair\" sEnableJoystick 723 string \"Enable Joystick\" sXStrafe 724 string \"X-Axis Movement\" sStrafe 725 string \"Strafe\" sTurn 726 string \"Turn\" sMouseWheelUpShort 727 string \"MWheel Up\" sMouseWheelDownShort 728 string \"MWheel Down\" sMouse 729 string \"Mouse\" sJoystickShort 730 string \"Joy\" sJoystickHatShort 731 string \"JHat\" sPickUp 732 string \"Take\" sItemName 733 string \"Item Name\" sNoName 734 string \"NO NAME GIVEN!\" sItem 735 string \"Item\" sRaceMenu1 736 string \"Appearance\" sRaceMenu2 737 string \"Change Sex\" sRaceMenu3 738 string \"Change Face\" sRaceMenu4 739 string \"Change Hair\" sRaceMenu5 740 string \"Race\" sRaceMenu6 741 string \"Race Description\" sRaceMenu7 742 string \"Specials\" sRestMenu1 743 string \"How many hours?\" sRestMenu2 744 string \"Hours\" sRestMenu3 745 string \"REST\" sRestMenu4 746 string \"You can't rest right now.\" fRestMagicMult 747 float 0.15 sSaveMenu1 748 string \"New Save Game\" sServiceRepairTitle 749 string \"Repair Service Menu\" sServiceTravelTitle 750 string \"Travel\" sServiceTrainingTitle 751 string \"Training\" sServiceTrainingWords 752 string \"I can teach nothing more about that skill\" sServiceSpellsTitle 753 string \"Spells\" sSkillsMenu1 754 string \"Choose a Skill\" sBonusSkillTitle 755 string \"Skill Bonus\" sSpecializationMenu1 756 string \"Choose a Specialization\" sSpellmakingMenuTitle 757 string \"Spellmaking\" sSpellmakingMenu1 758 string \"Spell Chance\" sSpellmakingHelp1 759 string \"Name you give the spell.\" sSpellmakingHelp2 760 string \"Amount of Magika one cast of the spell will cost\" sSpellmakingHelp3 761 string \"The chance you have to cast the spell at your current skill level\" sSpellmakingHelp4 762 string \"How much gold the spell will cost you.\" sSpellmakingHelp5 763 string \"Magic effects you know that you can add to a spell\" sSpellmakingHelp6 764 string \"Current effects on the spell\" sKilledEssential 765 string \"With this character's death, the thread of prophecy is severed. Restore a saved game to restore the weave of fate, or persist in the doomed world you have created.\" sCrimeMessage 766 string \"Your crime has been reported!\" sPotionSuccess 767 string \"You created a potion\" sMagicItem 768 string \"Magic Items\" sMagnitudeDes 769 string \"The range of a spells power\" sAreaDes 770 string \"The radius the spell attempt to affect\" sDurationDes 771 string \"The length a spell lasts\" sRangeDes 772 string \"What the spell is directed at such as yourself, a target or who you touch\" sCrimeHelp 773 string \"The penalty you must pay for your crimes, if caught.\" sSoulGem 774 string \"Soul\" sCastCost 775 string \"Cast Cost\" sTravelServiceTitle 776 string \"Select destination\" sSpellServiceTitle 777 string \"Select spell to buy\" sRepairServiceTitle 778 string \"Select item to repair\" sTrainingServiceTitle 779 string \"Select skill to train\" sMortar 780 string \"Mortar\" sCalcinator 781 string \"Calcinator\" sAlembic 782 string \"Alembic\" sRetort 783 string \"Retort\" sQuestionMark 784 string \"?\" s3dAudio 785 string \"3D Audio\" s3dHardware 786 string \"Hardware Accelerated\" s3dSoftware 787 string \"Software Mode\" sYourGold 788 string \"YOUR GOLD\" sSellerGold 789 string \"SELLER GOLD\" sMaxSale 790 string \"Max Sale\" sTotalCost 791 string \"TOTAL COST\" sTotalSold 792 string \"TOTAL SOLD\" sOffer 793 string \"Offer\" sLess 794 string \"Less\" sMore 795 string \"More\" sInventory 796 string \"Inventory\" sBookPageOne 797 string \"1\" sBookPageTwo 798 string \"2\" sDisposeofCorpse 799 string \"Dispose of Corpse\" sCaughtStealingMessage 800 string \"Hey he's stealing my stuff!\" sUserDefinedClass 801 string \"User Defined Class\" sAsk 802 string \"Ask\" sEnchantItems 803 string \"Items to Enchant\" sSoulGemsWithSouls 804 string \"Soul Gems with Souls\" sDoYouWantTo 805 string \"Do you want to\" sRechargeEnchantment 806 string \"Recharge Enchanted Item\" sMake 807 string \"Make an Enchanted Item\" sSell 808 string \"Sell\" sEquip 809 string \"Equip\" sDrop 810 string \"Drop\" sContainer 811 string \"Container\" sStats 812 string \"Stats\" sMap 813 string \"Map\" sCenter 814 string \"Center\" sSaveMenuHelp01 815 string \"th of\" sSaveMenuHelp02 816 string \"month\" sSaveMenuHelp03 817 string \"day\" sSaveMenuHelp04 818 string \"a.m.\" sSaveMenuHelp05 819 string \"p.m.\" sSaveMenuHelp06 820 string \"Delete Game?\" sDeleteNote 821 string \"Delete Note?\" sEditNote 822 string \"Edit Note\" sBlocks 823 string \"Blocks\" sFileSize 824 string \"File Size\" sSave 825 string \"Save\" sDeleteSpell 826 string \"Delete Spell\" sQuestionDeleteSpell 827 string \"Are you sure you wish to delete %s?\" sDeleteSpellError 828 string \"You cannot delete this item from the Magic Menu\" sLocal 829 string \"Local\" sLoadFailedMessage 830 string \"Your last load failed. You must load another game or start a new game.\" sShadows 831 string \"Shadows\" sControlerVibration 832 string \"Controller Vibration\" sQuanityMenuMessage01 833 string \"Amount to Sell\" sQuanityMenuMessage02 834 string \"Amount to Buy\" sSex 835 string \"Sex\" sHair 836 string \"Hair\" sFace 837 string \"Face\" sRepairFailed 838 string \"Your repair failed!\" sRepairSuccess 839 string \"Your repair succeeded!\" sHeal 840 string \"Heal\" sgp 841 string \"gp\" sSetValueMessage01 842 string \"The maximum magnitude cannot be less then the minimum magnitude!\" sDelete 843 string \"Delete\" sVideoWarning 844 string \"Warning: Video Resolution does not allow shadows.\" sResChangeWarning 845 string \"Desired resolution not supported by video card.\" sShift 846 string \"Shift\" sBackspace 847 string \"Backspace\" sCustomClassName 848 string \"Adventurer\" sSpace 849 string \"Space\" sInventorySelectNoItems 850 string \"You have no items to fill this slot.\" sInventorySelectNoSoul 851 string \"You have no filled Soul Gems\" sInventorySelectNoIngredients 852 string \"You have no ingredients\" sDisposeCorpseFail 853 string \"You can not remove this corpse\" sQuickMenuTitle 854 string \"Quick Keys\" sQuickMenuInstruc 855 string \"Click on quick key slot to add a spell, magic item or inventory item\" sQuickMenu1 856 string \"Item to QuickKey\" sQuickMenu2 857 string \"Inventory Menu Item\" sQuickMenu3 858 string \"Magic Menu Item\" sQuickMenu4 859 string \"Delete QuickKey Item\" sQuickMenu5 860 string \"You no longer have\" sQuickMenu6 861 string \"Inventory Items to Quick key\" sMagicSelectTitle 862 string \"Select a magic to Quick key.\" sNextRank 863 string \"Next Rank:\" sNeedOneSkill 864 string \"Need one skill at\" sNeedTwoSkills 865 string \"Need two skills at\" sand 866 string \"and\" sOneHanded 867 string \"One Handed\" sTwoHanded 868 string \"Two Handed\" sType 869 string \"Type:\" sAt 870 string \"At\" sUnequip 871 string \"Unequip\" sScrolldown 872 string \"Scroll Down\" sScrollup 873 string \"Scroll Up\" sSleepInterrupt 874 string \"Your rest has been interrupted.\" sSoultrapSuccess 875 string \"Your have trapped a soul\" sCantEquipWeapWarning 876 string \"Finish your current attack before equipping a new weapon\" sOfferMenuTitle 877 string \"Offer Menu\" sPowers 878 string \"Powers\" sBreath 879 string \"Breath\" sDifficulty 880 string \"Difficulty\" sEasy 881 string \"Easy\" sHard 882 string \"Hard\" sProfitValue 883 string \"Profit Value\" sCompanionShare 884 string \"Companion Share\" sCompanionWarningMessage 885 string \"Your mercenary is poorer now than when he contracted with you. Your mercenary will quit if you do not give him gold or goods to bring his Profit Value to a positive value.\" sCompanionWarningButtonOne 886 string \"Let the mercenary quit.\" sCompanionWarningButtonTwo 887 string \"Return to Companion Share display.\" sAttributeStrength 888 string \"Strength\" sAttributeIntelligence 889 string \"Intelligence\" sAttributeWillpower 890 string \"Willpower\" sAttributeAgility 891 string \"Agility\" sAttributeSpeed 892 string \"Speed\" sAttributeEndurance 893 string \"Endurance\" sAttributePersonality 894 string \"Personality\" sAttributeLuck 895 string \"Luck\" sSkillBlock 896 string \"Block\" sSkillArmorer 897 string \"Armorer\" sSkillMediumarmor 898 string \"Medium Armor\" sSkillHeavyarmor 899 string \"Heavy Armor\" sSkillBluntweapon 900 string \"Blunt Weapon\" sSkillLongblade 901 string \"Long Blade\" sSkillAxe 902 string \"Axe\" sSkillSpear 903 string \"Spear\" sSkillAthletics 904 string \"Athletics\" sSkillEnchant 905 string \"Enchant\" sSkillDestruction 906 string \"Destruction\" sSkillAlteration 907 string \"Alteration\" sSkillIllusion 908 string \"Illusion\" sSkillConjuration 909 string \"Conjuration\" sSkillMysticism 910 string \"Mysticism\" sSkillRestoration 911 string \"Restoration\" sSkillAlchemy 912 string \"Alchemy\" sSkillUnarmored 913 string \"Unarmored\" sSkillSecurity 914 string \"Security\" sSkillSneak 915 string \"Sneak\" sSkillAcrobatics 916 string \"Acrobatics\" sSkillLightarmor 917 string \"Light Armor\" sSkillShortblade 918 string \"Short Blade\" sSkillMarksman 919 string \"Marksman\" sSkillMercantile 920 string \"Mercantile\" sSkillSpeechcraft 921 string \"Speechcraft\" sSkillHandtohand 922 string \"Hand-to-hand\" sHealth 923 string \"Health\" sRace 924 string \"Race\" sLevel 925 string \"Level\" sLevels 926 string \"Levels\" sFaction 927 string \"Faction\" sBirthSign 928 string \"Sign\" sBounty 929 string \"Bounty\" sReputation 930 string \"Reputation\" sSchool 931 string \"School\" sSkill 932 string \"Skill\" sSkillProgress 933 string \"Progress towards skill increase\" sSkillMaxReached 934 string \"Maximum proficiency has been reached.\" sLevelProgress 935 string \"Progress towards level increase\" sMagic 936 string \"Magicka\" sMagicMenu 937 string \"Magic\" sFatigue 938 string \"Fatigue\" sSkillsMenuReputationHelp 939 string \"Your fame rating in the world of Morrowind.\" sStrDesc 940 string \"Affects your starting Health, how much you can carry, your maximum Fatigue, and how much damage you do in melee.\" sIntDesc 941 string \"Determines your maximum amount of Magicka.\" sWilDesc 942 string \"Affects your ability to resist magic, and your maximum Fatigue.\" sAgiDesc 943 string \"Affects your ability to dodge and hit targets in melee as well as your maximum Fatigue.\" sSpdDesc 944 string \"Determines how fast you can move.\" sEndDesc 945 string \"Affects your starting Health, your Health gain per level, and your maximum Fatigue.\" sPerDesc 946 string \"Affects your ability to deal with other characters and how much they like you.\" sLucDesc 947 string \"Affects every action you do in a small way.\" sFatDesc 948 string \"How tired you are. Low fatigue makes it harder to successfully perform actions.\" sHealthDesc 949 string \"The amount of damage you can take before you die. Increases every time you gain a level.\" sMagDesc 950 string \"Used to cast spells. Magicka is naturally restored by resting.\" fWortChanceValue 951 float 15 sDefaultCellname 952 string \"Wilderness\" fMinWalkSpeed 953 float 100 fMaxWalkSpeed 954 float 200 fMinWalkSpeedCreature 955 float 5 fMaxWalkSpeedCreature 956 float 300 fEncumberedMoveEffect 957 float 0.3 fBaseRunMultiplier 958 float 1.75 fAthleticsRunBonus 959 float 1 fJumpAcrobaticsBase 960 float 128 fJumpAcroMultiplier 961 float 4 fJumpEncumbranceBase 962 float 0.5 fJumpEncumbranceMultiplier 963 float 1 fJumpRunMultiplier 964 float 1 fJumpMoveBase 965 float 0.5 fJumpMoveMult 966 float 0.5 fSwimWalkBase 967 float 0.5 fSwimRunBase 968 float 0.5 fSwimWalkAthleticsMult 969 float 0.02 fSwimRunAthleticsMult 970 float 0.1 fSwimHeightScale 971 float 0.9 fHoldBreathTime 972 float 20 fHoldBreathEndMult 973 float 0.5 fSuffocationDamage 974 float 3 fMinFlySpeed 975 float 5 fMaxFlySpeed 976 float 300 fStromWindSpeed 977 float 0.7 fStromWalkMult 978 float 0.25 fFallDamageDistanceMin 979 float 400 fFallDistanceBase 980 float 0 fFallDistanceMult 981 float 0.07 fFallAcroBase 982 float 0.25 fFallAcroMult 983 float 0.01 iMaxActivateDist 984 integer 192 iMaxInfoDist 985 integer 192 fVanityDelay 986 float 30 fMaxHeadTrackDistance 987 float 400 fInteriorHeadTrackMult 988 float 0.5 iHelmWeight 989 integer 5 iPauldronWeight 990 integer 10 iCuirassWeight 991 integer 30 iGauntletWeight 992 integer 5 iGreavesWeight 993 integer 15 iBootsWeight 994 integer 20 iShieldWeight 995 integer 15 fLightMaxMod 996 float 0.6 fMedMaxMod 997 float 0.9 fUnarmoredBase1 998 float 0.1 fUnarmoredBase2 999 float 0.065 iBaseArmorSkill 1000 integer 30 fBlockStillBonus 1001 float 1.25 fDamageStrengthBase 1002 float 0.5 fDamageStrengthMult 1003 float 0.1 fSwingBlockBase 1004 float 1 fSwingBlockMult 1005 float 1 fFatigueBase 1006 float 1.25 fFatigueMult 1007 float 0.5 fFatigueReturnBase 1008 float 2.5 fFatigueReturnMult 1009 float 0.02 fEndFatigueMult 1010 float 0.04 fFatigueAttackBase 1011 float 2 fFatigueAttackMult 1012 float 0 fWeaponFatigueMult 1013 float 0.25 fFatigueBlockBase 1014 float 4 fFatigueBlockMult 1015 float 0 fWeaponFatigueBlockMult 1016 float 1 fFatigueRunBase 1017 float 5 fFatigueRunMult 1018 float 2 fFatigueJumpBase 1019 float 5 fFatigueJumpMult 1020 float 0 fFatigueSwimWalkBase 1021 float 2.5 fFatigueSwimRunBase 1022 float 7 fFatigueSwimWalkMult 1023 float 0 fFatigueSwimRunMult 1024 float 0 fFatigueSneakBase 1025 float 1.5 fFatigueSneakMult 1026 float 1.5 fMinHandToHandMult 1027 float 0.1 fMaxHandToHandMult 1028 float 0.5 fHandtoHandHealthPer 1029 float 0.1 fCombatInvisoMult 1030 float 0.2 fCombatKODamageMult 1031 float 1.5 fCombatCriticalStrikeMult 1032 float 4 iBlockMinChance 1033 integer 10 iBlockMaxChance 1034 integer 50 fLevelUpHealthEndMult 1035 float 0.1 fSoulGemMult 1036 float 3 fEffectCostMult 1037 float 0.5 fSpellPriceMult 1038 float 2 fFatigueSpellBase 1039 float 0 fFatigueSpellMult 1040 float 0 fFatigueSpellCostMult 1041 float 0 fPotionStrengthMult 1042 float 0.5 fPotionT1MagMult 1043 float 1.5 fPotionT1DurMult 1044 float 0.5 fPotionMinUsefulDuration 1045 float 20 fPotionT4BaseStrengthMult 1046 float 20 fPotionT4EquipStrengthMult 1047 float 12 fIngredientMult 1048 float 1 fMagicItemCostMult 1049 float 1 fMagicItemPriceMult 1050 float 1 fMagicItemOnceMult 1051 float 1 fMagicItemUsedMult 1052 float 1 fMagicItemStrikeMult 1053 float 1 fMagicItemConstantMult 1054 float 1 fEnchantmentMult 1055 float 0.1 fEnchantmentChanceMult 1056 float 3 fPCbaseMagickaMult 1057 float 1 fNPCbaseMagickaMult 1058 float 2 fAutoSpellChance 1059 float 80 fAutoPCSpellChance 1060 float 50 iAutoSpellTimesCanCast 1061 integer 3 iAutoSpellAttSkillMin 1062 integer 70 iAutoSpellAlterationMax 1063 integer 5 iAutoSpellConjurationMax 1064 integer 2 iAutoSpellDestructionMax 1065 integer 5 iAutoSpellIllusionMax 1066 integer 5 iAutoSpellMysticismMax 1067 integer 5 iAutoSpellRestorationMax 1068 integer 5 iAutoPCSpellMax 1069 integer 100 iAutoRepFacMod 1070 integer 2 iAutoRepLevMod 1071 integer 0 iMagicItemChargeOnce 1072 integer 1 iMagicItemChargeConst 1073 integer 10 iMagicItemChargeUse 1074 integer 5 iMagicItemChargeStrike 1075 integer 10 iMonthsToRespawn 1076 integer 4 fCorpseClearDelay 1077 float 72 fCorpseRespawnDelay 1078 float 72 fBarterGoldResetDelay 1079 float 24 fEncumbranceStrMult 1080 float 5 fPickLockMult 1081 float -1 fTrapCostMult 1082 float 0 fMessageTimePerChar 1083 float 0.1 fMagicItemRechargePerSecond 1084 float 0.05 i1stPersonSneakDelta 1085 integer 10 iBarterSuccessDisposition 1086 integer 1 iBarterFailDisposition 1087 integer -1 iLevelupTotal 1088 integer 10 iLevelupMajorMult 1089 integer 1 iLevelupMinorMult 1090 integer 1 iLevelupMajorMultAttribute 1091 integer 1 iLevelupMinorMultAttribute 1092 integer 1 iLevelupMiscMultAttriubte 1093 integer 1 iLevelupSpecialization 1094 integer 1 iLevelUp01Mult 1095 integer 2 iLevelUp02Mult 1096 integer 2 iLevelUp03Mult 1097 integer 2 iLevelUp04Mult 1098 integer 2 iLevelUp05Mult 1099 integer 3 iLevelUp06Mult 1100 integer 3 iLevelUp07Mult 1101 integer 3 iLevelUp08Mult 1102 integer 4 iLevelUp09Mult 1103 integer 4 iLevelUp10Mult 1104 integer 5 iSoulAmountForConstantEffect 1105 integer 400 fConstantEffectMult 1106 float 15 fEnchantmentConstantDurationMult 1107 float 100 fEnchantmentConstantChanceMult 1108 float 0.5 fWeaponDamageMult 1109 float 0.1 fSeriousWoundMult 1110 float 0 fKnockDownMult 1111 float 0.5 iKnockDownOddsBase 1112 integer 50 iKnockDownOddsMult 1113 integer 50 fCombatArmorMinMult 1114 float 0.25 fHandToHandReach 1115 float 1 fVoiceIdleOdds 1116 float 10 iVoiceAttackOdds 1117 integer 10 iVoiceHitOdds 1118 integer 30 fProjectileMinSpeed 1119 float 400 fProjectileMaxSpeed 1120 float 3000 fThrownWeaponMinSpeed 1121 float 300 fThrownWeaponMaxSpeed 1122 float 1000 fTargetSpellMaxSpeed 1123 float 1000 fProjectileThrownStoreChance 1124 float 25 iPickMinChance 1125 integer 5 iPickMaxChance 1126 integer 75 fDispRaceMod 1127 float 5 fDispPersonalityMult 1128 float 0.5 fDispPersonalityBase 1129 float 50 fDispFactionMod 1130 float 3 fDispFactionRankBase 1131 float 1 fDispFactionRankMult 1132 float 0.5 fDispCrimeMod 1133 float 0 fDispDiseaseMod 1134 float -10 iDispAttackMod 1135 integer -50 fDispWeaponDrawn 1136 float -5 fDispBargainSuccessMod 1137 float 1 fDispBargainFailMod 1138 float -1 fDispPickPocketMod 1139 float -25 iDaysinPrisonMod 1140 integer 100 fDispAttacking 1141 float -10 fDispStealing 1142 float -0.5 iDispTresspass 1143 integer -20 iDispKilling 1144 integer -50 iTrainingMod 1145 integer 10 iAlchemyMod 1146 integer 2 fBargainOfferBase 1147 float 50 fBargainOfferMulti 1148 float -4 fDispositionMod 1149 float 1 fPersonalityMod 1150 float 5 fLuckMod 1151 float 10 fReputationMod 1152 float 1 fLevelMod 1153 float 5 fBribe10Mod 1154 float 35 fBribe100Mod 1155 float 75 fBribe1000Mod 1156 float 150 fPerDieRollMult 1157 float 0.3 fPerTempMult 1158 float 1 iPerMinChance 1159 integer 5 iPerMinChange 1160 integer 10 fSpecialSkillBonus 1161 float 0.8 fMajorSkillBonus 1162 float 0.75 fMinorSkillBonus 1163 float 1 fMiscSkillBonus 1164 float 1.25 iAlarmKilling 1165 integer 90 iAlarmAttack 1166 integer 50 iAlarmStealing 1167 integer 1 iAlarmPickPocket 1168 integer 20 iAlarmTresspass 1169 integer 5 fAlarmRadius 1170 float 2000 iCrimeKilling 1171 integer 1000 iCrimeAttack 1172 integer 40 fCrimeStealing 1173 float 1 iCrimePickPocket 1174 integer 25 iCrimeTresspass 1175 integer 5 iCrimeThreshold 1176 integer 1000 iCrimeThresholdMultiplier 1177 integer 10 fCrimeGoldDiscountMult 1178 float 0.5 fCrimeGoldTurnInMult 1179 float 0.9 iFightAttack 1180 integer 100 iFightAttacking 1181 integer 50 iFightDistanceBase 1182 integer 20 fFightDistanceMultiplier 1183 float 0.005 iFightAlarmMult 1184 integer 1 fFightDispMult 1185 float 0.2 fFightStealing 1186 float 50 iFightPickpocket 1187 integer 25 iFightTrespass 1188 integer 25 iFightKilling 1189 integer 50 iFlee 1190 integer 0 iGreetDistanceMultiplier 1191 integer 6 iGreetDuration 1192 integer 4 fGreetDistanceReset 1193 float 512 fIdleChanceMultiplier 1194 float 0.75 fSneakUseDist 1195 float 500 fSneakUseDelay 1196 float 1 fSneakDistanceBase 1197 float 0.5 fSneakDistanceMultiplier 1198 float 0.002 fSneakSpeedMultiplier 1199 float 0.75 fSneakViewMult 1200 float 1.5 fSneakNoViewMult 1201 float 0.5 fSneakSkillMult 1202 float 1 fSneakBootMult 1203 float -1 fCombatDistance 1204 float 128 fCombatAngleXY 1205 float 0.6666667 fCombatAngleZ 1206 float 0.6666667 fCombatForceSideAngle 1207 float 0.3333333 fCombatTorsoSideAngle 1208 float 0.5 fCombatTorsoStartPercent 1209 float 0.3 fCombatTorsoStopPercent 1210 float 0.8 fCombatBlockLeftAngle 1211 float -1 fCombatBlockRightAngle 1212 float 0.3333333 fCombatDelayCreature 1213 float 0.1 fCombatDelayNPC 1214 float 0.1 sTargetCriticalStrike 1215 string \"Critical Damage!\" fAIMeleeWeaponMult 1216 float 2 fAIRangeMeleeWeaponMult 1217 float 5 fAIMagicSpellMult 1218 float 3 fAIRangeMagicSpellMult 1219 float 5 fAIMeleeArmorMult 1220 float 1 fAIMeleeSummWeaponMult 1221 float 1 fAIFleeHealthMult 1222 float 7 fAIFleeFleeMult 1223 float 0.3 fPickPocketMod 1224 float 0.3 fSleepRandMod 1225 float 0.25 fSleepRestMod 1226 float 0.3 iNumberCreatures 1227 integer 1 fAudioDefaultMinDistance 1228 float 5 fAudioDefaultMaxDistance 1229 float 40 fAudioVoiceDefaultMinDistance 1230 float 10 fAudioVoiceDefaultMaxDistance 1231 float 60 fAudioMinDistanceMult 1232 float 20 fAudioMaxDistanceMult 1233 float 50 fNPCHealthBarTime 1234 float 3 fNPCHealthBarFade 1235 float 0.5 fDifficultyMult 1236 float 5 fWereWolfRunMult 1237 float 1.3 fWereWolfSilverWeaponDamageMult 1238 float 2 iWereWolfBounty 1239 integer 1000 fWereWolfStrength 1240 float 150 fWereWolfAgility 1241 float 150 fWereWolfEndurance 1242 float 150 fWereWolfSpeed 1243 float 90 fWereWolfHandtoHand 1244 float 100 fWereWolfUnarmored 1245 float 100 iWereWolfLevelToAttack 1246 integer 20 iWereWolfFightMod 1247 integer 100 iWereWolfFleeMod 1248 integer 100 fWereWolfAthletics 1249 float 50 fWereWolfAcrobatics 1250 float 80 fWereWolfHealth 1251 float 2 fWereWolfFatigue 1252 float 400 fWereWolfMagicka 1253 float 100 fWereWolfIntellegence 1254 float 0 fWereWolfWillPower 1255 float 0 fWereWolfPersonality 1256 float 0 fWereWolfLuck 1257 float 25 fWereWolfBlock 1258 float 0 fWereWolfArmorer 1259 float 0 fWereWolfMediumArmor 1260 float 0 fWereWolfHeavyArmor 1261 float 0 fWereWolfBluntWeapon 1262 float 0 fWereWolfLongBlade 1263 float 0 fWereWolfAxe 1264 float 0 fWereWolfSpear 1265 float 0 fWereWolfDestruction 1266 float 0 fWereWolfAlteration 1267 float 0 fWereWolfIllusion 1268 float 0 fWereWolfConjuration 1269 float 0 fWereWolfMysticism 1270 float 0 fWereWolfRestoration 1271 float 0 fWereWolfEnchant 1272 float 0 fWereWolfAlchemy 1273 float 0 fWereWolfSecurity 1274 float 0 fWereWolfSneak 1275 float 95 fWereWolfLightArmor 1276 float 0 fWereWolfShortBlade 1277 float 0 fWereWolfMarksman 1278 float 0 fWereWolfMerchantile 1279 float 0 fWereWolfSpeechcraft 1280 float 0 fCombatDistanceWerewolfMod 1281 float 0.3 fFleeDistance 1282 float 3000 sEffectWaterBreathing 1283 string \"Water Breathing\" sEffectSwiftSwim 1284 string \"Swift Swim\" sEffectWaterWalking 1285 string \"Water Walking\" sEffectShield 1286 string \"Shield\" sEffectFireShield 1287 string \"Fire Shield\" sEffectLightningShield 1288 string \"Lightning Shield\" sEffectFrostShield 1289 string \"Frost Shield\" sEffectBurden 1290 string \"Burden\" sEffectFeather 1291 string \"Feather\" sEffectJump 1292 string \"Jump\" sEffectLevitate 1293 string \"Levitate\" sEffectSlowFall 1294 string \"SlowFall\" sEffectLock 1295 string \"Lock\" sEffectOpen 1296 string \"Open\" sEffectFireDamage 1297 string \"Fire Damage\" sEffectShockDamage 1298 string \"Shock Damage\" sEffectFrostDamage 1299 string \"Frost Damage\" sEffectDrainAttribute 1300 string \"Drain Attribute\" sEffectDrainHealth 1301 string \"Drain Health\" sEffectDrainSpellpoints 1302 string \"Drain Magicka\" sEffectDrainFatigue 1303 string \"Drain Fatigue\" sEffectDrainSkill 1304 string \"Drain Skill\" sEffectDamageAttribute 1305 string \"Damage Attribute\" sEffectDamageHealth 1306 string \"Damage Health\" sEffectDamageMagicka 1307 string \"Damage Magicka\" sEffectDamageFatigue 1308 string \"Damage Fatigue\" sEffectDamageSkill 1309 string \"Damage Skill\" sEffectPoison 1310 string \"Poison\" sEffectWeaknessToFire 1311 string \"Weakness to Fire\" sEffectWeaknessToFrost 1312 string \"Weakness to Frost\" sEffectWeaknessToShock 1313 string \"Weakness to Shock\" sEffectWeaknessToMagicka 1314 string \"Weakness to Magicka\" sEffectWeaknessToCommonDisease 1315 string \"Weakness to Common Disease\" sEffectWeaknessToBlightDisease 1316 string \"Weakness to Blight Disease\" sEffectWeaknessToCorprusDisease 1317 string \"Weakness to Corprus Disease\" sEffectWeaknessToPoison 1318 string \"Weakness to Poison\" sEffectWeaknessToNormalWeapons 1319 string \"Weakness to Normal Weapons\" sEffectDisintegrateWeapon 1320 string \"Disintegrate Weapon\" sEffectDisintegrateArmor 1321 string \"Disintegrate Armor\" sEffectInvisibility 1322 string \"Invisibility\" sEffectChameleon 1323 string \"Chameleon\" sEffectLight 1324 string \"Light\" sEffectSanctuary 1325 string \"Sanctuary\" sEffectNightEye 1326 string \"Night Eye\" sEffectCharm 1327 string \"Charm\" sEffectParalyze 1328 string \"Paralyze\" sEffectSilence 1329 string \"Silence\" sEffectBlind 1330 string \"Blind\" sEffectSound 1331 string \"Sound\" sEffectCalmHumanoid 1332 string \"Calm Humanoid\" sEffectCalmCreature 1333 string \"Calm Creature\" sEffectFrenzyHumanoid 1334 string \"Frenzy Humanoid\" sEffectFrenzyCreature 1335 string \"Frenzy Creature\" sEffectDemoralizeHumanoid 1336 string \"Demoralize Humanoid\" sEffectDemoralizeCreature 1337 string \"Demoralize Creature\" sEffectRallyHumanoid 1338 string \"Rally Humanoid\" sEffectRallyCreature 1339 string \"Rally Creature\" sEffectDispel 1340 string \"Dispel\" sEffectSoultrap 1341 string \"Soultrap\" sEffectTelekinesis 1342 string \"Telekinesis\" sEffectMark 1343 string \"Mark\" sEffectRecall 1344 string \"Recall\" sEffectDivineIntervention 1345 string \"Divine Intervention\" sEffectAlmsiviIntervention 1346 string \"Almsivi Intervention\" sEffectDetectAnimal 1347 string \"Detect Animal\" sEffectDetectEnchantment 1348 string \"Detect Enchantment\" sEffectDetectKey 1349 string \"Detect Key\" sEffectSpellAbsorption 1350 string \"Spell Absorption\" sEffectReflect 1351 string \"Reflect\" sEffectCureCommonDisease 1352 string \"Cure Common Disease\" sEffectCureBlightDisease 1353 string \"Cure Blight Disease\" sEffectCureCorprusDisease 1354 string \"Cure Corprus Disease\" sEffectCurePoison 1355 string \"Cure Poison\" sEffectCureParalyzation 1356 string \"Cure Paralyzation\" sEffectRestoreAttribute 1357 string \"Restore Attribute\" sEffectRestoreHealth 1358 string \"Restore Health\" sEffectRestoreSpellPoints 1359 string \"Restore Magicka\" sEffectRestoreFatigue 1360 string \"Restore Fatigue\" sEffectRestoreSkill 1361 string \"Restore Skill\" sEffectFortifyAttribute 1362 string \"Fortify Attribute\" sEffectFortifyHealth 1363 string \"Fortify Health\" sEffectFortifySpellpoints 1364 string \"Fortify Magicka\" sEffectFortifyFatigue 1365 string \"Fortify Fatigue\" sEffectFortifySkill 1366 string \"Fortify Skill\" sEffectFortifyMagickaMultiplier 1367 string \"Fortify Maximum Magicka\" sEffectAbsorbAttribute 1368 string \"Absorb Attribute\" sEffectAbsorbHealth 1369 string \"Absorb Health\" sEffectAbsorbSpellPoints 1370 string \"Absorb Magicka\" sEffectAbsorbFatigue 1371 string \"Absorb Fatigue\" sEffectAbsorbSkill 1372 string \"Absorb Skill\" sEffectResistFire 1373 string \"Resist Fire\" sEffectResistFrost 1374 string \"Resist Frost\" sEffectResistShock 1375 string \"Resist Shock\" sEffectResistMagicka 1376 string \"Resist Magicka\" sEffectResistCommonDisease 1377 string \"Resist Common Disease\" sEffectResistBlightDisease 1378 string \"Resist Blight Disease\" sEffectResistCorprusDisease 1379 string \"Resist Corprus Disease\" sEffectResistPoison 1380 string \"Resist Poison\" sEffectResistNormalWeapons 1381 string \"Resist Normal Weapons\" sEffectResistParalysis 1382 string \"Resist Paralysis\" sEffectRemoveCurse 1383 string \"Remove Curse\" sEffectTurnUndead 1384 string \"Turn Undead\" sEffectSummonScamp 1385 string \"Summon Scamp\" sEffectSummonClannfear 1386 string \"Summon Clannfear\" sEffectSummonDaedroth 1387 string \"Summon Daedroth\" sEffectSummonDremora 1388 string \"Summon Dremora\" sEffectSummonAncestralGhost 1389 string \"Summon Ancestral Ghost\" sEffectSummonSkeletalMinion 1390 string \"Summon Skeletal Minion\" sEffectSummonLeastBonewalker 1391 string \"Summon Bonewalker\" sEffectSummonGreaterBonewalker 1392 string \"Summon Greater Bonewalker\" sEffectSummonBonelord 1393 string \"Summon Bonelord\" sEffectSummonWingedTwilight 1394 string \"Summon Winged Twilight\" sEffectSummonHunger 1395 string \"Summon Hunger\" sEffectSummonGoldensaint 1396 string \"Summon Golden Saint\" sEffectSummonFlameAtronach 1397 string \"Summon Flame Atronach\" sEffectSummonFrostAtronach 1398 string \"Summon Frost Atronach\" sEffectSummonStormAtronach 1399 string \"Summon Storm Atronach\" sEffectFortifyAttackBonus 1400 string \"Fortify Attack\" sEffectCommandCreatures 1401 string \"Command Creature\" sEffectCommandHumanoids 1402 string \"Command Humanoid\" sEffectBoundDagger 1403 string \"Bound Dagger\" sEffectBoundLongsword 1404 string \"Bound Longsword\" sEffectBoundMace 1405 string \"Bound Mace\" sEffectBoundBattleAxe 1406 string \"Bound Battle Axe\" sEffectBoundSpear 1407 string \"Bound Spear\" sEffectBoundLongbow 1408 string \"Bound Longbow\" sEffectExtraSpell 1409 string \"EXTRA SPELL\" sEffectBoundCuirass 1410 string \"Bound Cuirass\" sEffectBoundHelm 1411 string \"Bound Helm\" sEffectBoundBoots 1412 string \"Bound Boots\" sEffectBoundShield 1413 string \"Bound Shield\" sEffectBoundGloves 1414 string \"Bound Gloves\" sEffectCorpus 1415 string \"Corprus\" sEffectVampirism 1416 string \"Vampirism\" sEffectSummonCenturionSphere 1417 string \"Summon Centurion Sphere\" sEffectSunDamage 1418 string \"Sun Damage\" sEffectStuntedMagicka 1419 string \"Stunted Magicka\" sEffectSummonFabricant 1420 string \"Summon Fabricant\" sEffectSummonCreature01 1421 string \"Call Wolf\" sEffectSummonCreature02 1422 string \"Call Bear\" sEffectSummonCreature03 1423 string \"Summon Bonewolf\" sEffectSummonCreature04 1424 string \"sEffectSummonCreature04\" sEffectSummonCreature05 1425 string \"sEffectSummonCreature05\" sSchoolAlteration 1426 string \"Alteration\" sSchoolConjuration 1427 string \"Conjuration\" sSchoolDestruction 1428 string \"Destruction\" sSchoolIllusion 1429 string \"Illusion\" sSchoolMysticism 1430 string \"Mysticism\" sSchoolRestoration 1431 string \"Restoration\" sTypeSpell 1432 string \"Spells\" sTypeAbility 1433 string \"Abilities\" sTypeBlightDisease 1434 string \"Blight Disease\" sTypeDisease 1435 string \"Disease\" sTypeCurse 1436 string \"Curse\" sTypePower 1437 string \"Powers\" sItemCastOnce 1438 string \"Cast Once\" sItemCastWhenStrikes 1439 string \"Cast When Strikes\" sItemCastWhenUsed 1440 string \"Cast When Used\" sItemCastConstant 1441 string \"Constant Effect\" sRangeSelf 1442 string \"Self\" sRangeTouch 1443 string \"Touch\" sRangeTarget 1444 string \"Target\" sMagicSkillFail 1445 string \"You failed casting the spell.\" sMagicInsufficientSP 1446 string \"You do not have enough Magicka to cast the spell.\" sMagicInsufficientCharge 1447 string \"Item does not have enough charge.\" sPowerAlreadyUsed 1448 string \"You already used that power today.\" sMagicInvalidTarget 1449 string \"Your spell did not get a target.\" sMagicLockSuccess 1450 string \"Your spell has locked its target.\" sMagicOpenSuccess 1451 string \"Your spell has unlocked its target.\" sMagicTargetResistsWeapons 1452 string \"Your weapon has no effect.\" sMagicContractDisease 1453 string \"You have contracted %s\" fMagicDetectRefreshRate 1454 float 0.5 fMagicStartIconBlink 1455 float 3 fMagicCreatureCastDelay 1456 float 1.5 sMagicScampID 1457 string \"Scamp_summon\" sMagicClannfearID 1458 string \"Clannfear_summon\" sMagicDaedrothID 1459 string \"Daedroth_summon\" sMagicDremoraID 1460 string \"Dremora_summon\" sMagicAncestralGhostID 1461 string \"Ancestor_Ghost_summon\" sMagicSkeletalMinionID 1462 string \"Skeleton_summon\" sMagicLeastBonewalkerID 1463 string \"Bonewalker_summon\" sMagicGreaterBonewalkerID 1464 string \"Bonewalker_Greater_summ\" sMagicBonelordID 1465 string \"Bonelord_summon\" sMagicWingedTwilightID 1466 string \"Winged Twilight_summon\" sMagicHungerID 1467 string \"Hunger_summon\" sMagicGoldenSaintID 1468 string \"Golden Saint_summon\" sMagicFlameAtronachID 1469 string \"Atronach_Flame_summon\" sMagicFrostAtronachID 1470 string \"Atronach_Frost_summon\" sMagicStormAtronachID 1471 string \"Atronach_Storm_summon\" sMagicCenturionSphereID 1472 string \"centurion_sphere_summon\" sMagicFabricantID 1473 string \"Fabricant_summon\" sMagicCreature01ID 1474 string \"BM_wolf_grey_summon\" sMagicCreature02ID 1475 string \"BM_bear_black_summon\" sMagicCreature03ID 1476 string \"BM_wolf_bone_summon\" sMagicCreature04ID 1477 string \"sMagicCreature04ID\" sMagicCreature05ID 1478 string \"sMagicCreature05ID\" sMagicBoundDaggerID 1479 string \"Bound_Dagger\" sMagicBoundLongswordID 1480 string \"Bound_Longsword\" sMagicBoundMaceID 1481 string \"Bound_Mace\" sMagicBoundBattleAxeID 1482 string \"Bound_Battle_Axe\" sMagicBoundSpearID 1483 string \"Bound_Spear\" sMagicBoundLongbowID 1484 string \"Bound_Longbow\" sMagicBoundCuirassID 1485 string \"Bound_Cuirass\" sMagicBoundHelmID 1486 string \"Bound_Helm\" sMagicBoundBootsID 1487 string \"Bound_Boots\" sMagicBoundShieldID 1488 string \"Bound_Shield\" sMagicBoundLeftGauntletID 1489 string \"Bound_Gauntlet_Left\" sMagicBoundRightGauntletID 1490 string \"Bound_Gauntlet_Right\" fDiseaseXferChance 1491 float 2.5 fElementalShieldMult 1492 float 0.1 sMagicCorprusWorsens 1493 string \"Your case of Corprus has worsened.\" sMagicCannotRecast 1494 string \"You cannot re-cast this spell while it is still in effect.\" fMagicSunBlockedMult 1495 float 0.5 sMagicPCResisted 1496 string \"You resisted magic.\" sMagicTargetResisted 1497 string \"Target resisted magic.\" sMagicInvalidEffect 1498 string \"You cannot cast this effect right now.\" sAcrobat 1499 string \"Acrobat\" sAgent 1500 string \"Agent\" sArcher 1501 string \"Archer\" sAssassin 1502 string \"Assassin\" sBarbarian 1503 string \"Barbarian\" sBard 1504 string \"Bard\" sBattlemage 1505 string \"Battlemage\" sCrusader 1506 string \"Crusader\" sCustom 1507 string \"Custom\" sHealer 1508 string \"Healer\" sKnight 1509 string \"Knight\" sMage 1510 string \"Mage\" sMonk 1511 string \"Monk\" sNightblade 1512 string \"Nightblade\" sPilgrim 1513 string \"Pilgrim\" sRogue 1514 string \"Rogue\" sScout 1515 string \"Scout\" sSorceror 1516 string \"Sorcerer\" sSpellsword 1517 string \"Spellsword\" sThief 1518 string \"Thief\" sWarrior 1519 string \"Warrior\" sWitchhunter 1520 string \"Witchhunter\"","title":"Game Settings (GMSTs)"},{"location":"references/inventory-select-filters/","text":"Inventory Select Menu Filters \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.inventorySelectFilter table. For example, tes3.inventorySelectFilter.ingredients has a value of \"ingredients\" . Index Value alembic \"alembic\" calcinator \"calcinator\" enchanted \"enchanted\" ingredients \"ingredients\" mortar \"mortar\" quickUse \"quickUse\" retort \"retort\" soulGemFilled \"soulGemFilled\"","title":"Inventory Select Menu Filters"},{"location":"references/inventory-select-filters/#inventory-select-menu-filters","text":"Tip These values are available in Lua by their index in the tes3.inventorySelectFilter table. For example, tes3.inventorySelectFilter.ingredients has a value of \"ingredients\" . Index Value alembic \"alembic\" calcinator \"calcinator\" enchanted \"enchanted\" ingredients \"ingredients\" mortar \"mortar\" quickUse \"quickUse\" retort \"retort\" soulGemFilled \"soulGemFilled\"","title":"Inventory Select Menu Filters"},{"location":"references/inventory-tile-types/","text":"Inventory Tile Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.inventoryTileType table. For example, tes3.inventoryTileType.magicBartered has a value of 5 . Index Value default 0 equipped 1 magic 2 magicEquipped 3 bartered 4 magicBartered 5","title":"Inventory Tile Types"},{"location":"references/inventory-tile-types/#inventory-tile-types","text":"Tip These values are available in Lua by their index in the tes3.inventoryTileType table. For example, tes3.inventoryTileType.magicBartered has a value of 5 . Index Value default 0 equipped 1 magic 2 magicEquipped 3 bartered 4 magicBartered 5","title":"Inventory Tile Types"},{"location":"references/item-sound-states/","text":"Item Sound States \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.itemSoundState table. For example, tes3.itemSoundState.down has a value of 1 . Index Value up 0 down 1 direct 2","title":"Item Sound States"},{"location":"references/item-sound-states/#item-sound-states","text":"Tip These values are available in Lua by their index in the tes3.itemSoundState table. For example, tes3.itemSoundState.down has a value of 1 . Index Value up 0 down 1 direct 2","title":"Item Sound States"},{"location":"references/justify-text/","text":"Justify Text \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.justifyText table. For example, tes3.justifyText.right has a value of \"right\" . Index Value center \"center\" left \"left\" right \"right\"","title":"Justify Text"},{"location":"references/justify-text/#justify-text","text":"Tip These values are available in Lua by their index in the tes3.justifyText table. For example, tes3.justifyText.right has a value of \"right\" . Index Value center \"center\" left \"left\" right \"right\"","title":"Justify Text"},{"location":"references/key-transitions/","text":"Key Transitions \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.keyTransition table. For example, tes3.keyTransition.up has a value of 1 . Index Value test 0 up 1 down 2 toggled 3","title":"Key Transitions"},{"location":"references/key-transitions/#key-transitions","text":"Tip These values are available in Lua by their index in the tes3.keyTransition table. For example, tes3.keyTransition.up has a value of 1 . Index Value test 0 up 1 down 2 toggled 3","title":"Key Transitions"},{"location":"references/keybinds/","text":"Keybinds \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.keybind table. For example, tes3.keybind.quick9 has a value of 30 . Index Value forward 0 back 1 left 2 right 3 use 4 activate 5 readyWeapon 6 readyMagic 7 sneak 8 run 9 alwaysRun 10 autoRun 11 jump 12 nextWeapon 13 previousWeapon 14 nextSpell 15 previousSpell 16 togglePOV 17 menuMode 18 journal 19 rest 20 quickMenu 21 quick1 22 quick2 23 quick3 24 quick4 25 quick5 26 quick6 27 quick7 28 quick8 29 quick9 30 quick10 31 quickSave 32 quickLoad 33 escape 34 console 35 screenshot 36 readyMagicMCP 37","title":"Keybinds"},{"location":"references/keybinds/#keybinds","text":"Tip These values are available in Lua by their index in the tes3.keybind table. For example, tes3.keybind.quick9 has a value of 30 . Index Value forward 0 back 1 left 2 right 3 use 4 activate 5 readyWeapon 6 readyMagic 7 sneak 8 run 9 alwaysRun 10 autoRun 11 jump 12 nextWeapon 13 previousWeapon 14 nextSpell 15 previousSpell 16 togglePOV 17 menuMode 18 journal 19 rest 20 quickMenu 21 quick1 22 quick2 23 quick3 24 quick4 25 quick5 26 quick6 27 quick7 28 quick8 29 quick9 30 quick10 31 quickSave 32 quickLoad 33 escape 34 console 35 screenshot 36 readyMagicMCP 37","title":"Keybinds"},{"location":"references/language-codes/","text":"Language Codes \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.languageCode table. For example, tes3.languageCode.eng has a value of 0 . Index Value eng 0 fra 1 deu 2 rus 3 pol 4","title":"Language Codes"},{"location":"references/language-codes/#language-codes","text":"Tip These values are available in Lua by their index in the tes3.languageCode table. For example, tes3.languageCode.eng has a value of 0 . Index Value eng 0 fra 1 deu 2 rus 3 pol 4","title":"Language Codes"},{"location":"references/languages/","text":"Languages \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.language table. For example, tes3.language[0] has a value of \"eng\" . Index Value 0 \"eng\" 2 \"deu\" 1 \"fra\" 3 \"rus\" 4 \"pol\"","title":"Languages"},{"location":"references/languages/#languages","text":"Tip These values are available in Lua by their index in the tes3.language table. For example, tes3.language[0] has a value of \"eng\" . Index Value 0 \"eng\" 2 \"deu\" 1 \"fra\" 3 \"rus\" 4 \"pol\"","title":"Languages"},{"location":"references/magic-effect-flags/","text":"Magic Effect Flags \u2693\ufe0e Tip These values are available in Lua with their field access. Instead of manually setting the flags. For example use .targetsSkills . See the Magic Effect type page for more information. Value Meaning 1 Targets skill. 2 Targets attribute. 4 No duration. 8 No magnitude. 16 Harmful. 32 Continuous VFX. 64 Cast self. 128 Cast touch. 256 Cast target. 512 Valid for spellmaking. 1024 Valid for enchanting. 2048 Negative lighting. 4096 Applied once. 8192 Stealth. 16384 Non-recastable. 32768 Illegal daedra. 65536 Unreflectable. 131072 Caster linked.","title":"Magic Effect Flags"},{"location":"references/magic-effect-flags/#magic-effect-flags","text":"Tip These values are available in Lua with their field access. Instead of manually setting the flags. For example use .targetsSkills . See the Magic Effect type page for more information. Value Meaning 1 Targets skill. 2 Targets attribute. 4 No duration. 8 No magnitude. 16 Harmful. 32 Continuous VFX. 64 Cast self. 128 Cast touch. 256 Cast target. 512 Valid for spellmaking. 1024 Valid for enchanting. 2048 Negative lighting. 4096 Applied once. 8192 Stealth. 16384 Non-recastable. 32768 Illegal daedra. 65536 Unreflectable. 131072 Caster linked.","title":"Magic Effect Flags"},{"location":"references/magic-effects-modded/","text":"Magic Effects, Modded \u2693\ufe0e These effects build off of the standard magic effects . If you would like to add your effect to the list, consider editing this page online , and submitting your change as a pull request. Alternatively, create an issue to list the information that needs to be added. Warning When registering a new effect ID, both the index and the value must be unique! Two mods cannot use the same magic effect id of 420 , nor can they both have the index of tes3.effect.summonCreeper . Tip These values are potentially available in Lua by their index in the tes3.effect table. For example, tes3.effect.detectDaedra has a value of 336 , but only if the Enhanced Detection mod is installed. Index Value Mod banishDaedra 220 Magicka Expanded summonGoblinGrunt 223 Magicka Expanded summonGoblinOfficer 224 Magicka Expanded summonHulkingFabricant 225 Magicka Expanded summonAscendedSleeper 226 Magicka Expanded summonDraugr 227 Magicka Expanded summonLich 228 Magicka Expanded boundClaymore 229 Magicka Expanded boundClub 230 Magicka Expanded boundDaiKatana 231 Magicka Expanded boundKatana 232 Magicka Expanded boundShortSword 233 Magicka Expanded boundStaff 234 Magicka Expanded boundTanto 235 Magicka Expanded boundWakizashi 236 Magicka Expanded boundWarAxe 237 Magicka Expanded boundWarhammer 238 Magicka Expanded boundGreaves 239 Magicka Expanded boundLeftPauldron 240 Magicka Expanded teleportToAldRuhn 241 Magicka Expanded teleportToBalmora 242 Magicka Expanded teleportToEbonheart 243 Magicka Expanded teleportToVivec 244 Magicka Expanded teleportToCaldera 245 Magicka Expanded teleportToGnisis 246 Magicka Expanded teleportToMaarGan 247 Magicka Expanded teleportToMolagMar 248 Magicka Expanded teleportToPelagiad 249 Magicka Expanded teleportToSuran 250 Magicka Expanded teleportToTelMora 251 Magicka Expanded summonOgrim 252 Magicka Expanded summonWarDurzog 253 Magicka Expanded summonSpriggan 254 Magicka Expanded summonCenturionSteam 255 Magicka Expanded summonCenturionProjectile 256 Magicka Expanded summonAshGhoul 257 Magicka Expanded summonAshZombie 258 Magicka Expanded summonAshSlave 259 Magicka Expanded summonCenturionSpider 260 Magicka Expanded summonImperfect 261 Magicka Expanded summonGoblinWarchief 262 Magicka Expanded darkness 263 Magicka Expanded boundRightPauldron 264 Magicka Expanded teleportToAstralPocket 265 The Astral Pocket chrysopoeia 266 Chrysopoeia summonArmorCent 267 Magicka Expanded summonArmorCentChamp 268 Magicka Expanded summonDraugrHsCrl 269 Magicka Expanded summonDraugrLord 270 Magicka Expanded summonDridrea 271 Magicka Expanded summonDridreaMonarch 272 Magicka Expanded summonFrostLich 273 Magicka Expanded summonGiant 274 Magicka Expanded summonGoblinShaman 275 Magicka Expanded summonGreaterLich 276 Magicka Expanded summonLamia 277 Magicka Expanded summonMammoth 278 Magicka Expanded summonMinotaur 279 Magicka Expanded summonMudGolem 280 Magicka Expanded summonParastylus 281 Magicka Expanded summonPlainStrider 282 Magicka Expanded summonRaki 283 Magicka Expanded callSabreCat 284 Magicka Expanded summonSiltStrider 285 Magicka Expanded summonSload 286 Magicka Expanded summonSwampTroll 287 Magicka Expanded summonWelkyndSpirit 288 Magicka Expanded callWereboar 289 Magicka Expanded summonVelk 290 Magicka Expanded summonVermai 291 Magicka Expanded summonTrebataur 292 Magicka Expanded teleportToAkamora 293 Magicka Expanded teleportToFirewatch 294 Magicka Expanded teleportToHelnim 295 Magicka Expanded teleportToNecrom 296 Magicka Expanded teleportToOldEbonheart 297 Magicka Expanded teleportToPortTelvannis 298 Magicka Expanded teleportToAltBosara 299 Magicka Expanded teleportToBalOrya 300 Magicka Expanded teleportToGahSadrith 301 Magicka Expanded teleportToGorne 302 Magicka Expanded teleportToLlothanis 303 Magicka Expanded teleportToMarog 304 Magicka Expanded teleportToMeralag 305 Magicka Expanded teleportToTelAranyon 306 Magicka Expanded teleportToTelMothrivra 307 Magicka Expanded teleportToTelMuthada 308 Magicka Expanded teleportToTelOuada 309 Magicka Expanded teleportToMournhold 310 Magicka Expanded weatherBlizzard 312 Magicka Expanded weatherSnow 313 Magicka Expanded weatherThunderstorm 314 Magicka Expanded weatherAsh 315 Magicka Expanded weatherBlight 316 Magicka Expanded weatherClear 317 Magicka Expanded weatherCloudy 318 Magicka Expanded weatherFoggy 319 Magicka Expanded weatherOvercast 320 Magicka Expanded weatherRain 321 Magicka Expanded thunderbolt 323 Magicka Expanded iceBarrage 324 Magicka Expanded blink 325 Magicka Expanded callWerewolf 326 Magicka Expanded summonAlfiq 327 Magicka Expanded clone 328 Magicka Expanded cloneSource 329 Magicka Expanded mindScan 330 Magicka Expanded mindRip 331 Magicka Expanded soulScrye 332 Magicka Expanded coalesce 333 Magicka Expanded entomb 334 Magicka Expanded permutation 335 Magicka Expanded detectDaedra 336 Enhanced Detection detectAutomaton 337 Enhanced Detection detectHumanoid 338 Enhanced Detection detectDead 339 Enhanced Detection detectUndead 340 Enhanced Detection detectDoor 341 Enhanced Detection detectTrap 342 Enhanced Detection 343 Hircine's Maze magelight 344 MM - Enhanced Light detectAnimalLand 345 Enhanced Detection detectAnimalUnderwater 346 Enhanced Detection dispelLevitate 400 Deeper Dagoth Ur dispelLevitateJavelin 401 Deeper Dagoth Ur slowTime 402 Fortified Molag Mar annihilate 403 Fortified Molag Mar firesOfOblivion 404 Fortified Molag Mar spawnChair 405 Fortified Molag Mar summonCreeper 420 Summon Creeper float 424 3E 427 A Space Odyssey fargothIntervention 424 Fargoth Intervention daedricIntervention 425 Daedric Intervention Spell callIncarnate 426 Call Incarnate summonDarkSeducer 427 OAAB Integrations boundLeggings 429 Bound Leggings for Beasts summonAncestorGuardianPlayer 430 Power Fantasy summonAncestorGuardianNPC 431 Power Fantasy teleport 500 4NM_Magic recharge 501 4NM_Magic repairWeapon 502 4NM_Magic lightTarget 504 4NM_Magic projectileControl 506 4NM_Magic kineticShield 508 4NM_Magic timeShift 510 4NM_Magic chargeFire 511 4NM_Magic chargeShock 513 4NM_Magic chargeVitality 515 4NM_Magic auraFire 516 4NM_Magic auraShock 518 4NM_Magic auraVitality 520 4NM_Magic aoeFire 521 4NM_Magic aoeShock 523 4NM_Magic aoeVitality 525 4NM_Magic runeFire 526 4NM_Magic runeShock 528 4NM_Magic runeVitality 530 4NM_Magic prokFire 531 4NM_Magic prokShock 533 4NM_Magic prokVitality 535 4NM_Magic shotgunFire 536 4NM_Magic shotgunShock 538 4NM_Magic shotgunVitality 540 4NM_Magic dischargeFire 541 4NM_Magic dischargeShock 543 4NM_Magic dischargeVitality 545 4NM_Magic rayFire 546 4NM_Magic rayShock 548 4NM_Magic rayVitality 550 4NM_Magic totemFire 551 4NM_Magic totemShock 553 4NM_Magic totemVitality 555 4NM_Magic empowerFire 556 4NM_Magic empowerShock 558 4NM_Magic empowerVitality 560 4NM_Magic reflectFire 561 4NM_Magic reflectShock 563 4NM_Magic reflectVitality 565 4NM_Magic dash 600 4NM_Magic multiMark 601 Customizable MWSE Multi Mark and Harder Recall kineticStrike 602 4NM_Magic multiRecall 602 Customizable MWSE Multi Mark and Harder Recall bolt 610 Throw It multiMark 701 4NM - Total Gameplay Overhaul pocket 701 Extradimensional Pockets multiRecall 702 4NM - Total Gameplay Overhaul boundarrow 704 Bound Ammo animatedWeapon 711 Animate Weapon Spell enchantDrain 786 Enchant Drain soulRelease 787 Obedient Summons fortifyStrength 790 Class Starting Spells fortifyIntelligence 791 Class Starting Spells fortifyAgility 793 Class Starting Spells fortifyPersonality 796 Class Starting Spells forbidSleep 1201 Vaermina's Quest - Dreams of the Escaped summonCorruptedDouble 1202 Vaermina's Quest - Dreams of the Escaped summonCorruptedDoublePotion 1203 Vaermina's Quest - Dreams of the Escaped summonAshGolem 7700 Atronach Expansion summonBoneGolem 7701 Atronach Expansion summonCrystalGolem 7702 Atronach Expansion summonFleshAtronach 7703 Atronach Expansion summonIronGolem 7704 Atronach Expansion summonSwampMyconid 7705 Atronach Expansion summonTelvanniMyconid 7706 Atronach Expansion sanguineRose 7770 The Sanguine Rose flawedSummonDaedroth 7800 OOAB Grazelands ss20SoulManipulation 8113 Pimp My Shrine - The Daedric Legend of Vernaccus ss20ManipulateSouls 8114 Pimp My Shrine - The Daedric Legend of Vernaccus selfRepair 8500 DRIP - Dynamic Randomised Item Properties npcSoulTrap 10000 Seph's NPC Soul Trapping","title":"Magic Effects, Modded"},{"location":"references/magic-effects-modded/#magic-effects-modded","text":"These effects build off of the standard magic effects . If you would like to add your effect to the list, consider editing this page online , and submitting your change as a pull request. Alternatively, create an issue to list the information that needs to be added. Warning When registering a new effect ID, both the index and the value must be unique! Two mods cannot use the same magic effect id of 420 , nor can they both have the index of tes3.effect.summonCreeper . Tip These values are potentially available in Lua by their index in the tes3.effect table. For example, tes3.effect.detectDaedra has a value of 336 , but only if the Enhanced Detection mod is installed. Index Value Mod banishDaedra 220 Magicka Expanded summonGoblinGrunt 223 Magicka Expanded summonGoblinOfficer 224 Magicka Expanded summonHulkingFabricant 225 Magicka Expanded summonAscendedSleeper 226 Magicka Expanded summonDraugr 227 Magicka Expanded summonLich 228 Magicka Expanded boundClaymore 229 Magicka Expanded boundClub 230 Magicka Expanded boundDaiKatana 231 Magicka Expanded boundKatana 232 Magicka Expanded boundShortSword 233 Magicka Expanded boundStaff 234 Magicka Expanded boundTanto 235 Magicka Expanded boundWakizashi 236 Magicka Expanded boundWarAxe 237 Magicka Expanded boundWarhammer 238 Magicka Expanded boundGreaves 239 Magicka Expanded boundLeftPauldron 240 Magicka Expanded teleportToAldRuhn 241 Magicka Expanded teleportToBalmora 242 Magicka Expanded teleportToEbonheart 243 Magicka Expanded teleportToVivec 244 Magicka Expanded teleportToCaldera 245 Magicka Expanded teleportToGnisis 246 Magicka Expanded teleportToMaarGan 247 Magicka Expanded teleportToMolagMar 248 Magicka Expanded teleportToPelagiad 249 Magicka Expanded teleportToSuran 250 Magicka Expanded teleportToTelMora 251 Magicka Expanded summonOgrim 252 Magicka Expanded summonWarDurzog 253 Magicka Expanded summonSpriggan 254 Magicka Expanded summonCenturionSteam 255 Magicka Expanded summonCenturionProjectile 256 Magicka Expanded summonAshGhoul 257 Magicka Expanded summonAshZombie 258 Magicka Expanded summonAshSlave 259 Magicka Expanded summonCenturionSpider 260 Magicka Expanded summonImperfect 261 Magicka Expanded summonGoblinWarchief 262 Magicka Expanded darkness 263 Magicka Expanded boundRightPauldron 264 Magicka Expanded teleportToAstralPocket 265 The Astral Pocket chrysopoeia 266 Chrysopoeia summonArmorCent 267 Magicka Expanded summonArmorCentChamp 268 Magicka Expanded summonDraugrHsCrl 269 Magicka Expanded summonDraugrLord 270 Magicka Expanded summonDridrea 271 Magicka Expanded summonDridreaMonarch 272 Magicka Expanded summonFrostLich 273 Magicka Expanded summonGiant 274 Magicka Expanded summonGoblinShaman 275 Magicka Expanded summonGreaterLich 276 Magicka Expanded summonLamia 277 Magicka Expanded summonMammoth 278 Magicka Expanded summonMinotaur 279 Magicka Expanded summonMudGolem 280 Magicka Expanded summonParastylus 281 Magicka Expanded summonPlainStrider 282 Magicka Expanded summonRaki 283 Magicka Expanded callSabreCat 284 Magicka Expanded summonSiltStrider 285 Magicka Expanded summonSload 286 Magicka Expanded summonSwampTroll 287 Magicka Expanded summonWelkyndSpirit 288 Magicka Expanded callWereboar 289 Magicka Expanded summonVelk 290 Magicka Expanded summonVermai 291 Magicka Expanded summonTrebataur 292 Magicka Expanded teleportToAkamora 293 Magicka Expanded teleportToFirewatch 294 Magicka Expanded teleportToHelnim 295 Magicka Expanded teleportToNecrom 296 Magicka Expanded teleportToOldEbonheart 297 Magicka Expanded teleportToPortTelvannis 298 Magicka Expanded teleportToAltBosara 299 Magicka Expanded teleportToBalOrya 300 Magicka Expanded teleportToGahSadrith 301 Magicka Expanded teleportToGorne 302 Magicka Expanded teleportToLlothanis 303 Magicka Expanded teleportToMarog 304 Magicka Expanded teleportToMeralag 305 Magicka Expanded teleportToTelAranyon 306 Magicka Expanded teleportToTelMothrivra 307 Magicka Expanded teleportToTelMuthada 308 Magicka Expanded teleportToTelOuada 309 Magicka Expanded teleportToMournhold 310 Magicka Expanded weatherBlizzard 312 Magicka Expanded weatherSnow 313 Magicka Expanded weatherThunderstorm 314 Magicka Expanded weatherAsh 315 Magicka Expanded weatherBlight 316 Magicka Expanded weatherClear 317 Magicka Expanded weatherCloudy 318 Magicka Expanded weatherFoggy 319 Magicka Expanded weatherOvercast 320 Magicka Expanded weatherRain 321 Magicka Expanded thunderbolt 323 Magicka Expanded iceBarrage 324 Magicka Expanded blink 325 Magicka Expanded callWerewolf 326 Magicka Expanded summonAlfiq 327 Magicka Expanded clone 328 Magicka Expanded cloneSource 329 Magicka Expanded mindScan 330 Magicka Expanded mindRip 331 Magicka Expanded soulScrye 332 Magicka Expanded coalesce 333 Magicka Expanded entomb 334 Magicka Expanded permutation 335 Magicka Expanded detectDaedra 336 Enhanced Detection detectAutomaton 337 Enhanced Detection detectHumanoid 338 Enhanced Detection detectDead 339 Enhanced Detection detectUndead 340 Enhanced Detection detectDoor 341 Enhanced Detection detectTrap 342 Enhanced Detection 343 Hircine's Maze magelight 344 MM - Enhanced Light detectAnimalLand 345 Enhanced Detection detectAnimalUnderwater 346 Enhanced Detection dispelLevitate 400 Deeper Dagoth Ur dispelLevitateJavelin 401 Deeper Dagoth Ur slowTime 402 Fortified Molag Mar annihilate 403 Fortified Molag Mar firesOfOblivion 404 Fortified Molag Mar spawnChair 405 Fortified Molag Mar summonCreeper 420 Summon Creeper float 424 3E 427 A Space Odyssey fargothIntervention 424 Fargoth Intervention daedricIntervention 425 Daedric Intervention Spell callIncarnate 426 Call Incarnate summonDarkSeducer 427 OAAB Integrations boundLeggings 429 Bound Leggings for Beasts summonAncestorGuardianPlayer 430 Power Fantasy summonAncestorGuardianNPC 431 Power Fantasy teleport 500 4NM_Magic recharge 501 4NM_Magic repairWeapon 502 4NM_Magic lightTarget 504 4NM_Magic projectileControl 506 4NM_Magic kineticShield 508 4NM_Magic timeShift 510 4NM_Magic chargeFire 511 4NM_Magic chargeShock 513 4NM_Magic chargeVitality 515 4NM_Magic auraFire 516 4NM_Magic auraShock 518 4NM_Magic auraVitality 520 4NM_Magic aoeFire 521 4NM_Magic aoeShock 523 4NM_Magic aoeVitality 525 4NM_Magic runeFire 526 4NM_Magic runeShock 528 4NM_Magic runeVitality 530 4NM_Magic prokFire 531 4NM_Magic prokShock 533 4NM_Magic prokVitality 535 4NM_Magic shotgunFire 536 4NM_Magic shotgunShock 538 4NM_Magic shotgunVitality 540 4NM_Magic dischargeFire 541 4NM_Magic dischargeShock 543 4NM_Magic dischargeVitality 545 4NM_Magic rayFire 546 4NM_Magic rayShock 548 4NM_Magic rayVitality 550 4NM_Magic totemFire 551 4NM_Magic totemShock 553 4NM_Magic totemVitality 555 4NM_Magic empowerFire 556 4NM_Magic empowerShock 558 4NM_Magic empowerVitality 560 4NM_Magic reflectFire 561 4NM_Magic reflectShock 563 4NM_Magic reflectVitality 565 4NM_Magic dash 600 4NM_Magic multiMark 601 Customizable MWSE Multi Mark and Harder Recall kineticStrike 602 4NM_Magic multiRecall 602 Customizable MWSE Multi Mark and Harder Recall bolt 610 Throw It multiMark 701 4NM - Total Gameplay Overhaul pocket 701 Extradimensional Pockets multiRecall 702 4NM - Total Gameplay Overhaul boundarrow 704 Bound Ammo animatedWeapon 711 Animate Weapon Spell enchantDrain 786 Enchant Drain soulRelease 787 Obedient Summons fortifyStrength 790 Class Starting Spells fortifyIntelligence 791 Class Starting Spells fortifyAgility 793 Class Starting Spells fortifyPersonality 796 Class Starting Spells forbidSleep 1201 Vaermina's Quest - Dreams of the Escaped summonCorruptedDouble 1202 Vaermina's Quest - Dreams of the Escaped summonCorruptedDoublePotion 1203 Vaermina's Quest - Dreams of the Escaped summonAshGolem 7700 Atronach Expansion summonBoneGolem 7701 Atronach Expansion summonCrystalGolem 7702 Atronach Expansion summonFleshAtronach 7703 Atronach Expansion summonIronGolem 7704 Atronach Expansion summonSwampMyconid 7705 Atronach Expansion summonTelvanniMyconid 7706 Atronach Expansion sanguineRose 7770 The Sanguine Rose flawedSummonDaedroth 7800 OOAB Grazelands ss20SoulManipulation 8113 Pimp My Shrine - The Daedric Legend of Vernaccus ss20ManipulateSouls 8114 Pimp My Shrine - The Daedric Legend of Vernaccus selfRepair 8500 DRIP - Dynamic Randomised Item Properties npcSoulTrap 10000 Seph's NPC Soul Trapping","title":"Magic Effects, Modded"},{"location":"references/magic-effects/","text":"Magic Effects \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.effect table. For example, tes3.effect.fortifySkill has a value of 83 . Note Custom effects can be added, expanding the tes3.effect table. See the Magic Effects, Modded reference page for more information. Index Value waterBreathing 0 swiftSwim 1 waterWalking 2 shield 3 fireShield 4 lightningShield 5 frostShield 6 burden 7 feather 8 jump 9 levitate 10 slowFall 11 lock 12 open 13 fireDamage 14 shockDamage 15 frostDamage 16 drainAttribute 17 drainHealth 18 drainMagicka 19 drainFatigue 20 drainSkill 21 damageAttribute 22 damageHealth 23 damageMagicka 24 damageFatigue 25 damageSkill 26 poison 27 weaknesstoFire 28 weaknesstoFrost 29 weaknesstoShock 30 weaknesstoMagicka 31 weaknesstoCommonDisease 32 weaknesstoBlightDisease 33 weaknesstoCorprusDisease 34 weaknesstoPoison 35 weaknesstoNormalWeapons 36 disintegrateWeapon 37 disintegrateArmor 38 invisibility 39 chameleon 40 light 41 sanctuary 42 nightEye 43 charm 44 paralyze 45 silence 46 blind 47 sound 48 calmHumanoid 49 calmCreature 50 frenzyHumanoid 51 frenzyCreature 52 demoralizeHumanoid 53 demoralizeCreature 54 rallyHumanoid 55 rallyCreature 56 dispel 57 soultrap 58 telekinesis 59 mark 60 recall 61 divineIntervention 62 almsiviIntervention 63 detectAnimal 64 detectEnchantment 65 detectKey 66 spellAbsorption 67 reflect 68 cureCommonDisease 69 cureBlightDisease 70 cureCorprusDisease 71 curePoison 72 cureParalyzation 73 restoreAttribute 74 restoreHealth 75 restoreMagicka 76 restoreFatigue 77 restoreSkill 78 fortifyAttribute 79 fortifyHealth 80 fortifyMagicka 81 fortifyFatigue 82 fortifySkill 83 fortifyMaximumMagicka 84 absorbAttribute 85 absorbHealth 86 absorbMagicka 87 absorbFatigue 88 absorbSkill 89 resistFire 90 resistFrost 91 resistShock 92 resistMagicka 93 resistCommonDisease 94 resistBlightDisease 95 resistCorprusDisease 96 resistPoison 97 resistNormalWeapons 98 resistParalysis 99 removeCurse 100 turnUndead 101 summonScamp 102 summonClannfear 103 summonDaedroth 104 summonDremora 105 summonAncestralGhost 106 summonSkeletalMinion 107 summonBonewalker 108 summonGreaterBonewalker 109 summonBonelord 110 summonWingedTwilight 111 summonHunger 112 summonGoldenSaint 113 summonFlameAtronach 114 summonFrostAtronach 115 summonStormAtronach 116 fortifyAttack 117 commandCreature 118 commandHumanoid 119 boundDagger 120 boundLongsword 121 boundMace 122 boundBattleAxe 123 boundSpear 124 boundLongbow 125 eXTRASPELL 126 boundCuirass 127 boundHelm 128 boundBoots 129 boundShield 130 boundGloves 131 corprus 132 vampirism 133 summonCenturionSphere 134 sunDamage 135 stuntedMagicka 136 summonFabricant 137 callWolf 138 callBear 139 summonBonewolf 140 sEffectSummonCreature04 141 sEffectSummonCreature05 142","title":"Magic Effects"},{"location":"references/magic-effects/#magic-effects","text":"Tip These values are available in Lua by their index in the tes3.effect table. For example, tes3.effect.fortifySkill has a value of 83 . Note Custom effects can be added, expanding the tes3.effect table. See the Magic Effects, Modded reference page for more information. Index Value waterBreathing 0 swiftSwim 1 waterWalking 2 shield 3 fireShield 4 lightningShield 5 frostShield 6 burden 7 feather 8 jump 9 levitate 10 slowFall 11 lock 12 open 13 fireDamage 14 shockDamage 15 frostDamage 16 drainAttribute 17 drainHealth 18 drainMagicka 19 drainFatigue 20 drainSkill 21 damageAttribute 22 damageHealth 23 damageMagicka 24 damageFatigue 25 damageSkill 26 poison 27 weaknesstoFire 28 weaknesstoFrost 29 weaknesstoShock 30 weaknesstoMagicka 31 weaknesstoCommonDisease 32 weaknesstoBlightDisease 33 weaknesstoCorprusDisease 34 weaknesstoPoison 35 weaknesstoNormalWeapons 36 disintegrateWeapon 37 disintegrateArmor 38 invisibility 39 chameleon 40 light 41 sanctuary 42 nightEye 43 charm 44 paralyze 45 silence 46 blind 47 sound 48 calmHumanoid 49 calmCreature 50 frenzyHumanoid 51 frenzyCreature 52 demoralizeHumanoid 53 demoralizeCreature 54 rallyHumanoid 55 rallyCreature 56 dispel 57 soultrap 58 telekinesis 59 mark 60 recall 61 divineIntervention 62 almsiviIntervention 63 detectAnimal 64 detectEnchantment 65 detectKey 66 spellAbsorption 67 reflect 68 cureCommonDisease 69 cureBlightDisease 70 cureCorprusDisease 71 curePoison 72 cureParalyzation 73 restoreAttribute 74 restoreHealth 75 restoreMagicka 76 restoreFatigue 77 restoreSkill 78 fortifyAttribute 79 fortifyHealth 80 fortifyMagicka 81 fortifyFatigue 82 fortifySkill 83 fortifyMaximumMagicka 84 absorbAttribute 85 absorbHealth 86 absorbMagicka 87 absorbFatigue 88 absorbSkill 89 resistFire 90 resistFrost 91 resistShock 92 resistMagicka 93 resistCommonDisease 94 resistBlightDisease 95 resistCorprusDisease 96 resistPoison 97 resistNormalWeapons 98 resistParalysis 99 removeCurse 100 turnUndead 101 summonScamp 102 summonClannfear 103 summonDaedroth 104 summonDremora 105 summonAncestralGhost 106 summonSkeletalMinion 107 summonBonewalker 108 summonGreaterBonewalker 109 summonBonelord 110 summonWingedTwilight 111 summonHunger 112 summonGoldenSaint 113 summonFlameAtronach 114 summonFrostAtronach 115 summonStormAtronach 116 fortifyAttack 117 commandCreature 118 commandHumanoid 119 boundDagger 120 boundLongsword 121 boundMace 122 boundBattleAxe 123 boundSpear 124 boundLongbow 125 eXTRASPELL 126 boundCuirass 127 boundHelm 128 boundBoots 129 boundShield 130 boundGloves 131 corprus 132 vampirism 133 summonCenturionSphere 134 sunDamage 135 stuntedMagicka 136 summonFabricant 137 callWolf 138 callBear 139 summonBonewolf 140 sEffectSummonCreature04 141 sEffectSummonCreature05 142","title":"Magic Effects"},{"location":"references/magic-schools/","text":"Magic Schools \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.magicSchool table. For example, tes3.magicSchool.destruction has a value of 2 . Index Value alteration 0 conjuration 1 destruction 2 illusion 3 mysticism 4 restoration 5 none 6","title":"Magic Schools"},{"location":"references/magic-schools/#magic-schools","text":"Tip These values are available in Lua by their index in the tes3.magicSchool table. For example, tes3.magicSchool.destruction has a value of 2 . Index Value alteration 0 conjuration 1 destruction 2 illusion 3 mysticism 4 restoration 5 none 6","title":"Magic Schools"},{"location":"references/magic-source-types/","text":"Magic Source Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.magicSourceType table. For example, tes3.magicSourceType.spell has a value of 1 . Index Value spell 1 enchantment 2 alchemy 3","title":"Magic Source Types"},{"location":"references/magic-source-types/#magic-source-types","text":"Tip These values are available in Lua by their index in the tes3.magicSourceType table. For example, tes3.magicSourceType.spell has a value of 1 . Index Value spell 1 enchantment 2 alchemy 3","title":"Magic Source Types"},{"location":"references/merchant-services/","text":"Merchant Services \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.merchantService table. For example, tes3.merchantService.training has a value of 16384 . Index Value spells 2048 training 16384 spellmaking 32768 enchanting 65536 repair 131072","title":"Merchant Services"},{"location":"references/merchant-services/#merchant-services","text":"Tip These values are available in Lua by their index in the tes3.merchantService table. For example, tes3.merchantService.training has a value of 16384 . Index Value spells 2048 training 16384 spellmaking 32768 enchanting 65536 repair 131072","title":"Merchant Services"},{"location":"references/music-situations/","text":"Music Situations \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.musicSituation table. For example, tes3.musicSituation.explore has a value of 0 . Index Value explore 0 combat 1 uninterruptible 2","title":"Music Situations"},{"location":"references/music-situations/#music-situations","text":"Tip These values are available in Lua by their index in the tes3.musicSituation table. For example, tes3.musicSituation.explore has a value of 0 . Index Value explore 0 combat 1 uninterruptible 2","title":"Music Situations"},{"location":"references/object-types/","text":"Object Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.objectType table. For example, tes3.objectType.creature has a value of 1095062083 . Note Their corresponding construction set ID (if available) and description are listed as well, but are not available through the tes3.objectType.* namespace. Note The AMMO object type is for arrows and bolts only, even though these usually show up in the weapons tab of the Construction Set. Thrown weapons do not have this type. Index Value CS ID Description activator 1230259009 ACTI Activator alchemy 1212369985 ALCH Alchemy ammunition 1330466113 AMMO Ammunition apparatus 1095782465 APPA Apparatus armor 1330467393 ARMO Armor book 1263488834 BOOK Book clothing 1414483011 CLOT Clothing container 1414418243 CONT Container creature 1095062083 CREA Creature door 1380929348 DOOR Door enchantment 1212370501 ENCH Enchantment faction 1413693766 FACT Faction ingredient 1380404809 INGR Ingredient leveledCreature 1129727308 LEVC Levelled Creature leveledItem 1230390604 LEVI Levelled Item light 1212631372 LIGH Light lockpick 1262702412 LOCK Lockpick miscItem 1129531725 MISC Misc Item npc 1598246990 NPC_ NPC reference 1380336978 REFR Reference probe 1112494672 PROB Probe repairItem 1095779666 REPA Repair Item script 1414546259 SCPT Script sound 1314213715 SOUN Sound soundGenerator 1195658835 SNDG Sound Generator spell 1279610963 SPEL Spell static 1413567571 STAT Static weapon 1346454871 WEAP Weapon class 1396788291 Class mobileActor 1413693773 Mobile Actor mobileCreature 1380139341 Mobile Creature mobileNPC 1212367181 Mobile NPC mobilePlayer 1346584909 Mobile Player mobileProjectile 1246908493 Mobile Projectile mobileSpellProjectile 1347637325 Mobile Spell Projectile","title":"Object Types"},{"location":"references/object-types/#object-types","text":"Tip These values are available in Lua by their index in the tes3.objectType table. For example, tes3.objectType.creature has a value of 1095062083 . Note Their corresponding construction set ID (if available) and description are listed as well, but are not available through the tes3.objectType.* namespace. Note The AMMO object type is for arrows and bolts only, even though these usually show up in the weapons tab of the Construction Set. Thrown weapons do not have this type. Index Value CS ID Description activator 1230259009 ACTI Activator alchemy 1212369985 ALCH Alchemy ammunition 1330466113 AMMO Ammunition apparatus 1095782465 APPA Apparatus armor 1330467393 ARMO Armor book 1263488834 BOOK Book clothing 1414483011 CLOT Clothing container 1414418243 CONT Container creature 1095062083 CREA Creature door 1380929348 DOOR Door enchantment 1212370501 ENCH Enchantment faction 1413693766 FACT Faction ingredient 1380404809 INGR Ingredient leveledCreature 1129727308 LEVC Levelled Creature leveledItem 1230390604 LEVI Levelled Item light 1212631372 LIGH Light lockpick 1262702412 LOCK Lockpick miscItem 1129531725 MISC Misc Item npc 1598246990 NPC_ NPC reference 1380336978 REFR Reference probe 1112494672 PROB Probe repairItem 1095779666 REPA Repair Item script 1414546259 SCPT Script sound 1314213715 SOUN Sound soundGenerator 1195658835 SNDG Sound Generator spell 1279610963 SPEL Spell static 1413567571 STAT Static weapon 1346454871 WEAP Weapon class 1396788291 Class mobileActor 1413693773 Mobile Actor mobileCreature 1380139341 Mobile Creature mobileNPC 1212367181 Mobile NPC mobilePlayer 1346584909 Mobile Player mobileProjectile 1246908493 Mobile Projectile mobileSpellProjectile 1347637325 Mobile Spell Projectile","title":"Object Types"},{"location":"references/palettes/","text":"Palettes \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.palette table. For example, tes3.palette.answerColor has a value of \"answer_color\" . Index Value absorbedMagic \"absorbedMagic\" activeColor \"active_color\" activeOverColor \"active_over_color\" activePressedColor \"active_pressed_color\" answerColor \"answer_color\" answerOverColor \"answer_over_color\" answerPressedColor \"answer_pressed_color\" backgroundColor \"background_color\" bigAnswerColor \"big_answer_color\" bigAnswerOverColor \"big_answer_over_color\" bigAnswerPressedColor \"big_answer_pressed_color\" bigHeaderColor \"big_header_color\" bigLinkColor \"big_link_color\" bigLinkOverColor \"big_link_over_color\" bigLinkPressedColor \"big_link_pressed_color\" bigNormalColor \"big_normal_color\" bigNormalOverColor \"big_normal_over_color\" bigNormalPressedColor \"big_normal_pressed_color\" bigNotifyColor \"big_notify_color\" blackColor \"black_color\" countColor \"count_color\" disabledColor \"disabled_color\" disabledOverColor \"disabled_over_color\" disabledPressedColor \"disabled_pressed_color\" fatigueColor \"fatigue_color\" focusColor \"focus_color\" headerColor \"header_color\" healthColor \"health_color\" healthNpcColor \"health_npc_color\" journalFinishedQuestColor \"journal_finished_quest_color\" journalFinishedQuestOverColor \"journal_finished_quest_over_color\" journalFinishedQuestPressedColor \"journal_finished_quest_pressed_color\" journalLinkColor \"journal_link_color\" journalLinkOverColor \"journal_link_over_color\" journalLinkPressedColor \"journal_link_pressed_color\" journalTopicColor \"journal_topic_color\" journalTopicOverColor \"journal_topic_over_color\" journalTopicPressedColor \"journal_topic_pressed_color\" linkColor \"link_color\" linkOverColor \"link_over_color\" linkPressedColor \"link_pressed_color\" magicColor \"magic_color\" magicFillColor \"magic_fill_color\" miscColor \"misc_color\" negativeColor \"negative_color\" normalColor \"normal_color\" normalOverColor \"normal_over_color\" normalPressedColor \"normal_pressed_color\" notifyColor \"notify_color\" positiveColor \"positive_color\" weaponFillColor \"weapon_fill_color\" whiteColor \"white_color\"","title":"Palettes"},{"location":"references/palettes/#palettes","text":"Tip These values are available in Lua by their index in the tes3.palette table. For example, tes3.palette.answerColor has a value of \"answer_color\" . Index Value absorbedMagic \"absorbedMagic\" activeColor \"active_color\" activeOverColor \"active_over_color\" activePressedColor \"active_pressed_color\" answerColor \"answer_color\" answerOverColor \"answer_over_color\" answerPressedColor \"answer_pressed_color\" backgroundColor \"background_color\" bigAnswerColor \"big_answer_color\" bigAnswerOverColor \"big_answer_over_color\" bigAnswerPressedColor \"big_answer_pressed_color\" bigHeaderColor \"big_header_color\" bigLinkColor \"big_link_color\" bigLinkOverColor \"big_link_over_color\" bigLinkPressedColor \"big_link_pressed_color\" bigNormalColor \"big_normal_color\" bigNormalOverColor \"big_normal_over_color\" bigNormalPressedColor \"big_normal_pressed_color\" bigNotifyColor \"big_notify_color\" blackColor \"black_color\" countColor \"count_color\" disabledColor \"disabled_color\" disabledOverColor \"disabled_over_color\" disabledPressedColor \"disabled_pressed_color\" fatigueColor \"fatigue_color\" focusColor \"focus_color\" headerColor \"header_color\" healthColor \"health_color\" healthNpcColor \"health_npc_color\" journalFinishedQuestColor \"journal_finished_quest_color\" journalFinishedQuestOverColor \"journal_finished_quest_over_color\" journalFinishedQuestPressedColor \"journal_finished_quest_pressed_color\" journalLinkColor \"journal_link_color\" journalLinkOverColor \"journal_link_over_color\" journalLinkPressedColor \"journal_link_pressed_color\" journalTopicColor \"journal_topic_color\" journalTopicOverColor \"journal_topic_over_color\" journalTopicPressedColor \"journal_topic_pressed_color\" linkColor \"link_color\" linkOverColor \"link_over_color\" linkPressedColor \"link_pressed_color\" magicColor \"magic_color\" magicFillColor \"magic_fill_color\" miscColor \"misc_color\" negativeColor \"negative_color\" normalColor \"normal_color\" normalOverColor \"normal_over_color\" normalPressedColor \"normal_pressed_color\" notifyColor \"notify_color\" positiveColor \"positive_color\" weaponFillColor \"weapon_fill_color\" whiteColor \"white_color\"","title":"Palettes"},{"location":"references/part-indices/","text":"Part Indices \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.partIndex table. For example, tes3.partIndex.hair has a value of 1 . Index Value head 0 hair 1 neck 2 chest 3 groin 4 hand 5 wrist 6 forearm 7 upperArm 8 foot 9 ankle 10 knee 11 upperLeg 12 clavicle 13 tail 14","title":"Part Indices"},{"location":"references/part-indices/#part-indices","text":"Tip These values are available in Lua by their index in the tes3.partIndex table. For example, tes3.partIndex.hair has a value of 1 . Index Value head 0 hair 1 neck 2 chest 3 groin 4 hand 5 wrist 6 forearm 7 upperArm 8 foot 9 ankle 10 knee 11 upperLeg 12 clavicle 13 tail 14","title":"Part Indices"},{"location":"references/physical-attack-types/","text":"Physical Attack Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.physicalAttackType table. For example, tes3.physicalAttackType.none has a value of 0 . Index Value none 0 slash 1 chop 2 thrust 3 projectile 4 creature1 5 creature2 6 creature3 7","title":"Physical Attack Types"},{"location":"references/physical-attack-types/#physical-attack-types","text":"Tip These values are available in Lua by their index in the tes3.physicalAttackType table. For example, tes3.physicalAttackType.none has a value of 0 . Index Value none 0 slash 1 chop 2 thrust 3 projectile 4 creature1 5 creature2 6 creature3 7","title":"Physical Attack Types"},{"location":"references/quick-key-types/","text":"Quick Key Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.quickKeyType table. For example, tes3.quickKeyType.none has a value of 0 . Index Value none 0 item 1 magic 2","title":"Quick Key Types"},{"location":"references/quick-key-types/#quick-key-types","text":"Tip These values are available in Lua by their index in the tes3.quickKeyType table. For example, tes3.quickKeyType.none has a value of 0 . Index Value none 0 item 1 magic 2","title":"Quick Key Types"},{"location":"references/scan-codes/","text":"Scan Codes \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.scanCode table. For example, tes3.scanCode.one has a value of 2 . Index Value esc 1 escape 1 one 2 exclamationMark 2 bang 2 ! 2 1 2 @ 3 at 3 2 3 two 3 hash 4 three 4 # 4 3 4 dollarSign 5 four 5 $ 5 4 5 five 6 5 6 percent 6 hat 7 ^ 7 6 7 six 7 caret 7 seven 8 7 8 ampersand 8 & 8 asterisk 9 8 9 eight 9 * 9 9 10 nine 10 openBracket 10 ( 10 zero 11 closeBracket 11 ) 11 0 11 - 12 underscore 12 dash 12 _ 12 plus 13 equals 13 = 13 + 13 backspace 14 tab 15 q 16 w 17 e 18 r 19 t 20 y 21 u 22 i 23 o 24 p 25 { 26 openSquareBracket 26 openCurlyBracket 26 [ 26 closeCurlyBracket 27 ] 27 } 27 closeSquareBracket 27 return 28 enter 28 leftCtrl 29 lCtrl 29 a 30 s 31 d 32 f 33 g 34 h 35 j 36 k 37 l 38 ; 39 colon 39 semicolon 39 : 39 ' 40 quoteMark 40 quotationMark 40 singleQuote 40 doubleQuote 40 quote 40 tilde 41 ~ 41 backTick 41 | 41` lShift 42 leftShift 42 backSlash 43 pipe 43 backslash 43 z 44 x 45 c 46 v 47 b 48 n 49 m 50 comma 51 lessThan 51 < 51 , 51 openPointyBracket 51 fullStop 52 greaterThan 52 . 52 period 52 > 52 closePointyBracket 52 questionMark 53 ? 53 / 53 forwardSlash 53 rightShift 54 rShift 54 multiply 55 lAlt 56 leftAlt 56 space 57 capslock 58 caps 58 F1 59 F2 60 F3 61 F4 62 F5 63 F6 64 F7 65 F8 66 F9 67 F10 68 numLock 69 scrollLock 70 numpad7 71 numpad8 72 numpad9 73 subtract 74 numpad4 75 numpad5 76 numpad6 77 add 78 numpad1 79 numpad2 80 numpad3 81 numpad0 82 decimal 83 F11 87 F12 88 numpadEnter 156 rightCtrl 157 rCtrl 157 divide 181 rAlt 184 rightAlt 184 home 199 keyUp 200 pageUp 201 keyLeft 203 keyRight 205 end 207 keyDown 208 pageDown 209 insert 210 delete 211","title":"Scan Codes"},{"location":"references/scan-codes/#scan-codes","text":"Tip These values are available in Lua by their index in the tes3.scanCode table. For example, tes3.scanCode.one has a value of 2 . Index Value esc 1 escape 1 one 2 exclamationMark 2 bang 2 ! 2 1 2 @ 3 at 3 2 3 two 3 hash 4 three 4 # 4 3 4 dollarSign 5 four 5 $ 5 4 5 five 6 5 6 percent 6 hat 7 ^ 7 6 7 six 7 caret 7 seven 8 7 8 ampersand 8 & 8 asterisk 9 8 9 eight 9 * 9 9 10 nine 10 openBracket 10 ( 10 zero 11 closeBracket 11 ) 11 0 11 - 12 underscore 12 dash 12 _ 12 plus 13 equals 13 = 13 + 13 backspace 14 tab 15 q 16 w 17 e 18 r 19 t 20 y 21 u 22 i 23 o 24 p 25 { 26 openSquareBracket 26 openCurlyBracket 26 [ 26 closeCurlyBracket 27 ] 27 } 27 closeSquareBracket 27 return 28 enter 28 leftCtrl 29 lCtrl 29 a 30 s 31 d 32 f 33 g 34 h 35 j 36 k 37 l 38 ; 39 colon 39 semicolon 39 : 39 ' 40 quoteMark 40 quotationMark 40 singleQuote 40 doubleQuote 40 quote 40 tilde 41 ~ 41 backTick 41 | 41` lShift 42 leftShift 42 backSlash 43 pipe 43 backslash 43 z 44 x 45 c 46 v 47 b 48 n 49 m 50 comma 51 lessThan 51 < 51 , 51 openPointyBracket 51 fullStop 52 greaterThan 52 . 52 period 52 > 52 closePointyBracket 52 questionMark 53 ? 53 / 53 forwardSlash 53 rightShift 54 rShift 54 multiply 55 lAlt 56 leftAlt 56 space 57 capslock 58 caps 58 F1 59 F2 60 F3 61 F4 62 F5 63 F6 64 F7 65 F8 66 F9 67 F10 68 numLock 69 scrollLock 70 numpad7 71 numpad8 72 numpad9 73 subtract 74 numpad4 75 numpad5 76 numpad6 77 add 78 numpad1 79 numpad2 80 numpad3 81 numpad0 82 decimal 83 F11 87 F12 88 numpadEnter 156 rightCtrl 157 rCtrl 157 divide 181 rAlt 184 rightAlt 184 home 199 keyUp 200 pageUp 201 keyLeft 203 keyRight 205 end 207 keyDown 208 pageDown 209 insert 210 delete 211","title":"Scan Codes"},{"location":"references/skill-names/","text":"Skill Names \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.skillName table. For example, tes3.skillName[0] has a value of \"Block\" . Index Value 20 \"Acrobatics\" 16 \"Alchemy\" 11 \"Alteration\" 1 \"Armorer\" 8 \"Athletics\" 6 \"Axe\" 0 \"Block\" 4 \"Blunt Weapon\" 13 \"Conjuration\" 10 \"Destruction\" 9 \"Enchant\" 26 \"Hand to Hand\" 3 \"Heavy Armor\" 12 \"Illusion\" 21 \"Light Armor\" 5 \"Long Blade\" 23 \"Marksman\" 2 \"Medium Armor\" 24 \"Mercantile\" 14 \"Mysticism\" 15 \"Restoration\" 18 \"Security\" 22 \"Short Blade\" 19 \"Sneak\" 7 \"Spear\" 25 \"Speechcraft\" 17 \"Unarmored\"","title":"Skill Names"},{"location":"references/skill-names/#skill-names","text":"Tip These values are available in Lua by their index in the tes3.skillName table. For example, tes3.skillName[0] has a value of \"Block\" . Index Value 20 \"Acrobatics\" 16 \"Alchemy\" 11 \"Alteration\" 1 \"Armorer\" 8 \"Athletics\" 6 \"Axe\" 0 \"Block\" 4 \"Blunt Weapon\" 13 \"Conjuration\" 10 \"Destruction\" 9 \"Enchant\" 26 \"Hand to Hand\" 3 \"Heavy Armor\" 12 \"Illusion\" 21 \"Light Armor\" 5 \"Long Blade\" 23 \"Marksman\" 2 \"Medium Armor\" 24 \"Mercantile\" 14 \"Mysticism\" 15 \"Restoration\" 18 \"Security\" 22 \"Short Blade\" 19 \"Sneak\" 7 \"Spear\" 25 \"Speechcraft\" 17 \"Unarmored\"","title":"Skill Names"},{"location":"references/skill-raise-sources/","text":"Skill Raise Sources \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.skillRaiseSource table. For example, tes3.skillRaiseSource.progress has a value of \"progress\" . Index Value book \"book\" progress \"progress\" training \"training\"","title":"Skill Raise Sources"},{"location":"references/skill-raise-sources/#skill-raise-sources","text":"Tip These values are available in Lua by their index in the tes3.skillRaiseSource table. For example, tes3.skillRaiseSource.progress has a value of \"progress\" . Index Value book \"book\" progress \"progress\" training \"training\"","title":"Skill Raise Sources"},{"location":"references/skill-types/","text":"Skill Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.skillType table. For example, tes3.skillType.miscellaneous has a value of 2 . Index Value major 0 minor 1 misc 2 miscellaneous 2","title":"Skill Types"},{"location":"references/skill-types/#skill-types","text":"Tip These values are available in Lua by their index in the tes3.skillType table. For example, tes3.skillType.miscellaneous has a value of 2 . Index Value major 0 minor 1 misc 2 miscellaneous 2","title":"Skill Types"},{"location":"references/skills/","text":"Skills \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.skill table. For example, tes3.skill.alchemy has a value of 16 . Index Value block 0 armorer 1 mediumArmor 2 heavyArmor 3 bluntWeapon 4 longBlade 5 axe 6 spear 7 athletics 8 enchant 9 destruction 10 alteration 11 illusion 12 conjuration 13 mysticism 14 restoration 15 alchemy 16 unarmored 17 security 18 sneak 19 acrobatics 20 lightArmor 21 shortBlade 22 marksman 23 mercantile 24 speechcraft 25 handToHand 26","title":"Skills"},{"location":"references/skills/#skills","text":"Tip These values are available in Lua by their index in the tes3.skill table. For example, tes3.skill.alchemy has a value of 16 . Index Value block 0 armorer 1 mediumArmor 2 heavyArmor 3 bluntWeapon 4 longBlade 5 axe 6 spear 7 athletics 8 enchant 9 destruction 10 alteration 11 illusion 12 conjuration 13 mysticism 14 restoration 15 alchemy 16 unarmored 17 security 18 sneak 19 acrobatics 20 lightArmor 21 shortBlade 22 marksman 23 mercantile 24 speechcraft 25 handToHand 26","title":"Skills"},{"location":"references/sound-generator-types/","text":"Sound Gen Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.soundGenType table. For example, tes3.soundGenType.roar has a value of 5 . Index Value leftFoot 0 rightFoot 1 swimLeft 2 swimRight 3 moan 4 roar 5 scream 6 land 7","title":"Sound Gen Types"},{"location":"references/sound-generator-types/#sound-gen-types","text":"Tip These values are available in Lua by their index in the tes3.soundGenType table. For example, tes3.soundGenType.roar has a value of 5 . Index Value leftFoot 0 rightFoot 1 swimLeft 2 swimRight 3 moan 4 roar 5 scream 6 land 7","title":"Sound Gen Types"},{"location":"references/sound-mix-types/","text":"Sound Mix Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.soundMix table. For example, tes3.soundMix.voice has a value of 1 . Index Value master 0 voice 1 effects 2 footsteps 3 music 4","title":"Sound Mix Types"},{"location":"references/sound-mix-types/#sound-mix-types","text":"Tip These values are available in Lua by their index in the tes3.soundMix table. For example, tes3.soundMix.voice has a value of 1 . Index Value master 0 voice 1 effects 2 footsteps 3 music 4","title":"Sound Mix Types"},{"location":"references/specialization-names/","text":"Specialization Names \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.specializationName table. For example, tes3.specializationName[0] has a value of \"combat\" . Index Value -1 \"invalid\" 0 \"combat\" 1 \"magic\" 2 \"stealth\"","title":"Specialization Names"},{"location":"references/specialization-names/#specialization-names","text":"Tip These values are available in Lua by their index in the tes3.specializationName table. For example, tes3.specializationName[0] has a value of \"combat\" . Index Value -1 \"invalid\" 0 \"combat\" 1 \"magic\" 2 \"stealth\"","title":"Specialization Names"},{"location":"references/specializations/","text":"Specializations \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.specialization table. For example, tes3.specialization.invalid has a value of -1 . Index Value invalid -1 combat 0 magic 1 stealth 2","title":"Specializations"},{"location":"references/specializations/#specializations","text":"Tip These values are available in Lua by their index in the tes3.specialization table. For example, tes3.specialization.invalid has a value of -1 . Index Value invalid -1 combat 0 magic 1 stealth 2","title":"Specializations"},{"location":"references/spell-sources/","text":"Spell Sources \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.spellSource table. For example, tes3.spellSource.script has a value of \"script\" . Index Value script \"script\" service \"service\"","title":"Spell Sources"},{"location":"references/spell-sources/#spell-sources","text":"Tip These values are available in Lua by their index in the tes3.spellSource table. For example, tes3.spellSource.script has a value of \"script\" . Index Value script \"script\" service \"service\"","title":"Spell Sources"},{"location":"references/spell-states/","text":"Spell States \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.spellState table. For example, tes3.spellState.retired has a value of 7 . Index Value Description preCast 0 Has not been cast yet cast 1 Has just been casted beginning 4 Has just been applied to a target working 5 Is applying its effects each frame ending 6 Is ending and being cleaned up retired 7 Has ended and will be deleted workingFortify 8 Same as working for fortify effects endingFortify 9 Same as ending for fortify effects","title":"Spell States"},{"location":"references/spell-states/#spell-states","text":"Tip These values are available in Lua by their index in the tes3.spellState table. For example, tes3.spellState.retired has a value of 7 . Index Value Description preCast 0 Has not been cast yet cast 1 Has just been casted beginning 4 Has just been applied to a target working 5 Is applying its effects each frame ending 6 Is ending and being cleaned up retired 7 Has ended and will be deleted workingFortify 8 Same as working for fortify effects endingFortify 9 Same as ending for fortify effects","title":"Spell States"},{"location":"references/spell-types/","text":"Spell Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.spellType table. For example, tes3.spellType.disease has a value of 3 . Index Value spell 0 ability 1 blight 2 disease 3 curse 4 power 5","title":"Spell Types"},{"location":"references/spell-types/#spell-types","text":"Tip These values are available in Lua by their index in the tes3.spellType table. For example, tes3.spellType.disease has a value of 3 . Index Value spell 0 ability 1 blight 2 disease 3 curse 4 power 5","title":"Spell Types"},{"location":"references/tes3uiElement-types/","text":"UI Element Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.uiElementType table. For example, tes3.uiElementType.textInput has a value of \"textInput\" . Index Value button \"button\" fillbar \"fillbar\" image \"image\" layout \"layout\" model \"model\" paragraphInput \"paragraphInput\" rect \"rect\" scrollBar \"scrollBar\" scrollPane \"scrollPane\" text \"text\" textInput \"textInput\" textSelect \"textSelect\"","title":"UI Element Types"},{"location":"references/tes3uiElement-types/#ui-element-types","text":"Tip These values are available in Lua by their index in the tes3.uiElementType table. For example, tes3.uiElementType.textInput has a value of \"textInput\" . Index Value button \"button\" fillbar \"fillbar\" image \"image\" layout \"layout\" model \"model\" paragraphInput \"paragraphInput\" rect \"rect\" scrollBar \"scrollBar\" scrollPane \"scrollPane\" text \"text\" textInput \"textInput\" textSelect \"textSelect\"","title":"UI Element Types"},{"location":"references/ui-events/","text":"UI Events \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.uiEvent table. For example, tes3.uiEvent.focus has a value of \"focus\" . Index Value destroy \"destroy\" focus \"focus\" help \"help\" keyEnter \"keyEnter\" keyPress \"keyPress\" mouseClick \"mouseClick\" mouseDoubleClick \"mouseDoubleClick\" mouseDown \"mouseDown\" mouseLeave \"mouseLeave\" mouseOver \"mouseOver\" mouseRelease \"mouseRelease\" mouseScrollDown \"mouseScrollDown\" mouseScrollUp \"mouseScrollUp\" mouseStillIdle \"mouseStillIdle\" mouseStillOver \"mouseStillOver\" mouseStillPressed \"mouseStillPressed\" mouseStillPressedOutside \"mouseStillPressedOutside\" partScrollBarChanged \"PartScrollBar_changed\" preUpdate \"preUpdate\" unfocus \"unfocus\" update \"update\"","title":"UI Events"},{"location":"references/ui-events/#ui-events","text":"Tip These values are available in Lua by their index in the tes3.uiEvent table. For example, tes3.uiEvent.focus has a value of \"focus\" . Index Value destroy \"destroy\" focus \"focus\" help \"help\" keyEnter \"keyEnter\" keyPress \"keyPress\" mouseClick \"mouseClick\" mouseDoubleClick \"mouseDoubleClick\" mouseDown \"mouseDown\" mouseLeave \"mouseLeave\" mouseOver \"mouseOver\" mouseRelease \"mouseRelease\" mouseScrollDown \"mouseScrollDown\" mouseScrollUp \"mouseScrollUp\" mouseStillIdle \"mouseStillIdle\" mouseStillOver \"mouseStillOver\" mouseStillPressed \"mouseStillPressed\" mouseStillPressedOutside \"mouseStillPressedOutside\" partScrollBarChanged \"PartScrollBar_changed\" preUpdate \"preUpdate\" unfocus \"unfocus\" update \"update\"","title":"UI Events"},{"location":"references/ui-properties/","text":"UI Properties \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.uiProperty table. For example, tes3.uiProperty.doubleClick has a value of 4294934584 . Index Value mouseLeave 4294934578 mouseOver 4294934579 mouseDown 4294934580 mouseClick 4294934581 scrollUp 4294934582 scrollDown 4294934583 doubleClick 4294934584 stillIdle 4294934585 stillOver 4294934586 stillPressedOutside 4294934587 stillPressed 4294934588 release 4294934589 keyPress 4294934590 enter 4294934591 leaveMenuMode 4294934592 enterMenuMode 4294934593 focus 4294934594 unfocus 4294934595 update 4294934596 preUpdate 4294934597 destroy 4294934599","title":"UI Properties"},{"location":"references/ui-properties/#ui-properties","text":"Tip These values are available in Lua by their index in the tes3.uiProperty table. For example, tes3.uiProperty.doubleClick has a value of 4294934584 . Index Value mouseLeave 4294934578 mouseOver 4294934579 mouseDown 4294934580 mouseClick 4294934581 scrollUp 4294934582 scrollDown 4294934583 doubleClick 4294934584 stillIdle 4294934585 stillOver 4294934586 stillPressedOutside 4294934587 stillPressed 4294934588 release 4294934589 keyPress 4294934590 enter 4294934591 leaveMenuMode 4294934592 enterMenuMode 4294934593 focus 4294934594 unfocus 4294934595 update 4294934596 preUpdate 4294934597 destroy 4294934599","title":"UI Properties"},{"location":"references/ui-states/","text":"UI States \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.uiState table. For example, tes3.uiState.normal has a value of 1 . Index Value normal 1 disabled 2 active 4","title":"UI States"},{"location":"references/ui-states/#ui-states","text":"Tip These values are available in Lua by their index in the tes3.uiState table. For example, tes3.uiState.normal has a value of 1 . Index Value normal 1 disabled 2 active 4","title":"UI States"},{"location":"references/voiceovers/","text":"Voiceovers \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.voiceover table. For example, tes3.voiceover.hit has a value of 4 . Index Value hello 0 idle 1 intruder 2 thief 3 hit 4 attack 5 flee 6","title":"Voiceovers"},{"location":"references/voiceovers/#voiceovers","text":"Tip These values are available in Lua by their index in the tes3.voiceover table. For example, tes3.voiceover.hit has a value of 4 . Index Value hello 0 idle 1 intruder 2 thief 3 hit 4 attack 5 flee 6","title":"Voiceovers"},{"location":"references/weapon-types/","text":"Weapon Types \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.weaponType table. For example, tes3.weaponType.bluntOneHand has a value of 3 . Index Value Description shortBladeOneHand 0 Short Blade, One Handed longBladeOneHand 1 Long Blade, One Handed longBladeTwoClose 2 Lon Blade, Two Handed bluntOneHand 3 Blunt Weapon, One Handed bluntTwoClose 4 Blunt Weapon, Two Handed (Warhammers) bluntTwoWide 5 Blunt Weapon, Two Handed (Staffs) spearTwoWide 6 Spear, Two Handed axeOneHand 7 Axe, One Handed axeTwoHand 8 Axe, Two Handed marksmanBow 9 Marksman, Bow marksmanCrossbow 10 Marksman, Crossbow marksmanThrown 11 Marksman, Thrown arrow 12 Arrows bolt 13 Bolts","title":"Weapon Types"},{"location":"references/weapon-types/#weapon-types","text":"Tip These values are available in Lua by their index in the tes3.weaponType table. For example, tes3.weaponType.bluntOneHand has a value of 3 . Index Value Description shortBladeOneHand 0 Short Blade, One Handed longBladeOneHand 1 Long Blade, One Handed longBladeTwoClose 2 Lon Blade, Two Handed bluntOneHand 3 Blunt Weapon, One Handed bluntTwoClose 4 Blunt Weapon, Two Handed (Warhammers) bluntTwoWide 5 Blunt Weapon, Two Handed (Staffs) spearTwoWide 6 Spear, Two Handed axeOneHand 7 Axe, One Handed axeTwoHand 8 Axe, Two Handed marksmanBow 9 Marksman, Bow marksmanCrossbow 10 Marksman, Crossbow marksmanThrown 11 Marksman, Thrown arrow 12 Arrows bolt 13 Bolts","title":"Weapon Types"},{"location":"references/weather-types/","text":"Weathers \u2693\ufe0e Tip These values are available in Lua by their index in the tes3.weather table. For example, tes3.weather.snow has a value of 8 . Index Value clear 0 cloudy 1 foggy 2 overcast 3 rain 4 thunder 5 ash 6 blight 7 snow 8 blizzard 9","title":"Weathers"},{"location":"references/weather-types/#weathers","text":"Tip These values are available in Lua by their index in the tes3.weather table. For example, tes3.weather.snow has a value of 8 . Index Value clear 0 cloudy 1 foggy 2 overcast 3 rain 4 thunder 5 ash 6 blight 7 snow 8 blizzard 9","title":"Weathers"},{"location":"references/mwse-mwscript/actor/","text":"Actor Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xActivate \u2693\ufe0e Parameters: reference target : What the reference will try to activate. Returned: None This function allows the forced activation of one reference onto another. Unlike the vanilla Activate function, this allows variable input and will work even when OnActivate hasn't been triggered in the script. Note Unlike the vanilla activate function, the reference is the actor that will activate something, rather than the object to activate. Force the PC to Activate begin test long targetRef long pcRef ; Don't force pickup if we're not sneaking. if ( GetPCSneaking == 0 ) return endif ; Get a reference to what the player is looking at. setx targetRef to xGetPCTarget if ( targetRef == 0 ) return endif ; Get a reference to the player, and force them to activate what they are looking at. setx pcRef to xGetRef \"player\" pcRef->xActivate targetRef end xAddSpell \u2693\ufe0e Parameters: string objectID : The object ID of the spell to add. Returned: None This is a wrapper for the vanilla AddSpell function that can take variable input. xAITravel \u2693\ufe0e Parameters: float x : The position to travel to on the X axis. float y : The position to travel to on the Y axis. float z : The position to travel to on the Z axis. Returned: None This is a wrapper for the vanilla AITravel function that can take variable input. xDrop \u2693\ufe0e Parameters: string objectID : The object ID of the item to drop. long count : The number of items to drop. Returned: None This is a wrapper for the vanilla Drop function that can take variable input. Note xDrop N+1 items will leave 1 phantom icon plus N real items in the dropping actors inventory. xGetItemCount will not report the 1 phantom icon. However, xRemoveItem will remove the phantom safely. So \"safe\" procedure for xDrop seems to be to follow up with xRemoveItem of the same count. Additionally for non-player actors in menumode, exit and re-entry to menumode is needed to refresh the icons and avoid phantom icon interaction that could result in permanent item doubling or CTD. This also applies to the standard drop function. xEquip \u2693\ufe0e Parameters: string objectID : The object ID of the item to equip. Returned: None This is a wrapper for the vanilla Equip function that can take variable input. xGetAttribute \u2693\ufe0e Parameters: long attributeID : The Attribute ID to get the value of. Returned: float value : Current value of the attribute. Returns the current value of the referenced object's attribute. Note This function only supports the player and NPCs. xGetBaseAttribute \u2693\ufe0e Parameters: long attributeID : The Attribute ID to get the value of. Returned: float value : Base value of the attribute. Returns the base current value of the referenced object's attribute. Note This function only supports the player and NPCs. xGetBaseGold \u2693\ufe0e Parameters: None Returned: long gold : The base amount of bartering gold of the reference. Returns the base amount of barter gold assigned to the NPC (or creature). This is the value that resets automatically each day. xGetBaseSkill \u2693\ufe0e Parameters: long skillID : The Skill ID to get the value of. Returned: float value : Base value of the skill. Returns the base value of the referenced object's skill. Note This function only supports the player and NPCs. xGetClass \u2693\ufe0e Parameters: long attributesMask : A bit mask to apply to the attributes value. long majorMask : A bit mask to apply to the majorSkills value. long minorMask : A bit mask to apply to the minorSkills value. Returned: string classID : The unique string identifier of the class. string name : The name of the class. long playable : 1 if the class can be chosen by the PC, 0 otherwise. long specialization : 0 = Combat, 1 = Magic, 2 = Stealth long attributes : A bitmap of the two primary attributes. The result is obtained by adding the values found in the attributes table below. long majorSkills : A bitmap of the 5 major skills. The result is obtained by adding the values found in the skills table below. long minorSkills : A bitmap of the 5 minor skills. The result is obtained by adding the values found in the skills table below. Returns info about the class of the target NPC/PC, or 0 if the target is not an NPC or the PC. For a custom class created at PC creation, the classID is \"NEWCLASSID_CHARGEN\" and playable is 0 . Attribute and Skill Bitmaps \u2693\ufe0e Value Attribute 1 Strength 2 Intelligence 4 Willpower 8 Agility 16 Speed 32 Endurance 64 Personality 128 Luck Value Skill 1 Block 2 Armorer 4 Medium Armor 8 Heavy Armor 16 Blunt Weapon 32 Long Blade 64 Axe 128 Spear 256 Athletics 512 Enchant 1024 Destruction 2048 Alteration 4096 Illusion 8192 Conjuration 16384 Mysticism 32768 Restoration 65536 Alchemy 131072 Unarmored 262144 Security 524288 Sneak 1048576 Acrobatics 2097152 Light Armor 4194304 Short Blade 8388608 Marksman 16777216 Mercantile 33554432 Speechcraft 67108864 Hand-to-Hand xGetCombat \u2693\ufe0e Parameters: None Returned: reference reference : Reference to the current combat target. Returns a reference to the reference NPC/creature's combat target, or 0 if the reference is not in combat. xGetGold \u2693\ufe0e Parameters: None Returned: long gold : The reference's current barter gold. xGetGold returns the current amount of barter gold possessed by the NPC (or creature). The base gold amount is used if you haven't bartered with the NPC/creature recently. xGetMagic \u2693\ufe0e Parameters: None Returned: long objectType : The Object Type of the equipped magical source. string objectID : The object ID of the spell or enchantment selected. Returns the currently equipped spell or enchanted item. This is specifically the object that appears in the equipped magic slot and includes on-use magical items as well as spells. Note The returned objectType and objectID will always be associated with a Spell or Enchantment object, not the Weapon , Armor , Clothing , or Book that the magic is placed on. xGetMaxFatigue \u2693\ufe0e Parameters: None Returned: float maxFatigue : The reference's maximum fatigue. !!! noteReturns maximum fatigue. This function only supports the player and NPCs. xGetMaxHealth \u2693\ufe0e Parameters: None Returned: float maxHealth : The reference's maximum health. !!! noteReturns maximum health. This function only supports the player and NPCs. xGetMaxMagicka \u2693\ufe0e Parameters: None Returned: float maxMagicka : The reference's maximum magicka. !!! noteReturns maximum magicka. This function only supports the player and NPCs. xGetRace \u2693\ufe0e Parameters: short returnType : The return pattern desired. See below for details. Returned (returnType is 0): string raceID : The object ID of the target's race. Returned (returnType is 1): array arrayID : An array ID containing the values of the race. This function fetches the objectID or complete details about the target's race. Warning The arrays returned by this function when returnType is 1 are volatile. They should not be used for custom storage. Whenever xGetRace is called, the arrays are cleared and refilled with up-to-date information. If returnType is 0 , the response is the race's object ID. Otherwise, the returned array contains the following values: Index Type Contents 0 string Object ID. 1 string Name. 2 array Skill bonuses. 3 array Starting attributes. 4 float Male height. 5 float Female height. 6 float Male weight. 7 float Female weight. 8 long Playable flag. 9 long Beast flag. The skill bonuses array begins with index 0 holding the number of skill bonuses (a value between 0 and 7). Pairs of values are then returned. The odd indexes hold the Skill while the even indexes hold the bonus to the given skill. The starting attributes array contains the following values: Index Type Contents 0 long Male strength. 1 long Female strength. 2 long Male intelligence. 3 long Female intelligence. 4 long Male willpower. 5 long Female willpower. 6 long Male agility. 7 long Female agility. 8 long Male speed. 9 long Female speed. 10 long Male endurance. 11 long Female endurance. 12 long Male personality. 13 long Female personality. 14 long Male luck. 15 long Female luck. xGetService \u2693\ufe0e Parameters: long mask : A filter to limit the services returned. Returned: long services : The services offered by the reference, limited by mask . This function returns a bitfield of services offered by a given reference. The service values are shown in the following table. If an NPC offers more than one service the sum of the service numbers will be returned. The mask parameter can be used as a filter to limit the return value to only consider the services indicated. Value Service 1 Barters for weapons. 2 Barters for armor. 4 Barters for clothing. 8 Barters for books. 16 Barters for ingredients. 32 Barters for lockpicks. 64 Barters for probes. 128 Barters for lights. 256 Barters for alchemical apparatus. 512 Barters for repair tools. 1024 Barters for miscellaneous items. 2048 Offers spells. 4096 Barters for enchanted items. 8192 Barters for potions. 16384 Provides training. 32768 Provides spellmaking service. 65536 Provides enchanting service. 131072 Repairs armor and weapons. Note Previous versions of MWSE made use of xIsTrader , xIsTrainer , and xIsProvider . This function supersedes those. Old scripts that use them will continue to work, but new scripts should make use of xGetService . xGetSkill \u2693\ufe0e Parameters: long skillID : The Skill ID to get the value of. Returned: float value : Current value of the skill. Returns the current value of the referenced object's skill. Note This function only supports the player and NPCs. xGetSpell \u2693\ufe0e Parameters: string spellID : The spell ID to search for. Returned: long result : 1 if the spell was found, otherwise 0 . Returns 1 if spellId is present, 0 otherwise. This is not a wrapper for GetSpell ; it's a reimplementation. It only works for NPCs and the player. xGetSpellEffects \u2693\ufe0e Parameters: string spellID : The spell ID to check for. Returned: long result : 1 if the object is equipped, otherwise 0 . Returns 1 if the calling object is under the effect of the given spell, or 0 otherwise. xHasItemEquipped \u2693\ufe0e Parameters: string objectID : The object ID to check if equipped. Returned: long result : 1 if the object is equipped, otherwise 0 . Returns 1 if the NPC or creature has the object equipped, 0 otherwise. xIsFemale \u2693\ufe0e Parameters: None Returned: long result : 1 if the reference is female, otherwise 0 . Returns 1 if the NPC is female and 0 otherwise. xModAttribute \u2693\ufe0e Parameters: long attributeID : The Attribute ID to modify. float value : The value to modify the attribute by. Returned: short result : Result of the function. Modifies the current and base values of the specified attribute. This suffers from the same display issue as xSetLevel. It ignores the 100 max attribute limit. Note This function only supports the player and NPCs. xModService \u2693\ufe0e Parameters: long services : The combined value of services the reference should offer (positive) or refuse (negative). Returned: None Uses the services parameter to modify the services offered by an NPC. A positive value adds that service (or set of services) to those already offered. A negative value will remove a service or service. The changes are not permanent. Value Service 1 Barters for weapons. 2 Barters for armor. 4 Barters for clothing. 8 Barters for books. 16 Barters for ingredients. 32 Barters for lockpicks. 64 Barters for probes. 128 Barters for lights. 256 Barters for alchemical apparatus. 512 Barters for repair tools. 1024 Barters for miscellaneous items. 2048 Offers spells. 4096 Barters for enchanted items. 8192 Barters for potions. 16384 Provides training. 32768 Provides spellmaking service. 65536 Provides enchanting service. 131072 Repairs armor and weapons. xRemoveSpell \u2693\ufe0e Parameters: string objectID : The object ID of the spell to remove. Returned: None This is a wrapper for the vanilla RemoveSpell function that can take variable input. xSetBaseGold \u2693\ufe0e Parameters: long gold : New value to set the reference's base barter gold to. Returned: None Changes the base amount of barter gold assigned to the NPC (or creature). Unfortunately this change won't be saved with the save game so you will need to reset it after each game reload or after the \"72-hour bug\" affects the merchant. xSetGold \u2693\ufe0e Parameters: long gold : New value to set the reference's current barter gold to. Returned: None xSetGold changes the current amount of barter gold possessed by the NPC (or creature). This value is stored in save game files so it will survive a game reload. Setting this will have no effect if you haven't recently bartered with the NPC/creature. But setting both this and the base gold amount at the same time will likely do what you want. xSetLevel \u2693\ufe0e Parameters: long level : New value to set the reference's level to. Returned: None Sets the level of the given reference. This function is a wrapper for SetLevel , and suffers from the same display issue: when using this function on the player, the character screen does not update with the new level. xSetService \u2693\ufe0e Parameters: long services : The combined value of services the reference should offer. Returned: None xSetService uses the value parameter to change the NPC to offer the set of services represented by the number. The service number values are used and any old services are ignored. For example using a value of 8 will make the NPC a bookseller. A value of 131587 ( 1+2+512+131072 ) is typical for smiths. The values changed by this function are not permanent and may be reset after 72-hours or a game reload. Value Service 1 Barters for weapons. 2 Barters for armor. 4 Barters for clothing. 8 Barters for books. 16 Barters for ingredients. 32 Barters for lockpicks. 64 Barters for probes. 128 Barters for lights. 256 Barters for alchemical apparatus. 512 Barters for repair tools. 1024 Barters for miscellaneous items. 2048 Offers spells. 4096 Barters for enchanted items. 8192 Barters for potions. 16384 Provides training. 32768 Provides spellmaking service. 65536 Provides enchanting service. 131072 Repairs armor and weapons. xStartCombat \u2693\ufe0e Parameters: long reference : Target reference for the caller to initiate combat with. Returned: None xStartCombat is a wrapper for the original StartCombat to take variables.","title":"Actor Functions"},{"location":"references/mwse-mwscript/actor/#actor-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Actor Functions"},{"location":"references/mwse-mwscript/actor/#xactivate","text":"Parameters: reference target : What the reference will try to activate. Returned: None This function allows the forced activation of one reference onto another. Unlike the vanilla Activate function, this allows variable input and will work even when OnActivate hasn't been triggered in the script. Note Unlike the vanilla activate function, the reference is the actor that will activate something, rather than the object to activate. Force the PC to Activate begin test long targetRef long pcRef ; Don't force pickup if we're not sneaking. if ( GetPCSneaking == 0 ) return endif ; Get a reference to what the player is looking at. setx targetRef to xGetPCTarget if ( targetRef == 0 ) return endif ; Get a reference to the player, and force them to activate what they are looking at. setx pcRef to xGetRef \"player\" pcRef->xActivate targetRef end","title":"xActivate"},{"location":"references/mwse-mwscript/actor/#xaddspell","text":"Parameters: string objectID : The object ID of the spell to add. Returned: None This is a wrapper for the vanilla AddSpell function that can take variable input.","title":"xAddSpell"},{"location":"references/mwse-mwscript/actor/#xaitravel","text":"Parameters: float x : The position to travel to on the X axis. float y : The position to travel to on the Y axis. float z : The position to travel to on the Z axis. Returned: None This is a wrapper for the vanilla AITravel function that can take variable input.","title":"xAITravel"},{"location":"references/mwse-mwscript/actor/#xdrop","text":"Parameters: string objectID : The object ID of the item to drop. long count : The number of items to drop. Returned: None This is a wrapper for the vanilla Drop function that can take variable input. Note xDrop N+1 items will leave 1 phantom icon plus N real items in the dropping actors inventory. xGetItemCount will not report the 1 phantom icon. However, xRemoveItem will remove the phantom safely. So \"safe\" procedure for xDrop seems to be to follow up with xRemoveItem of the same count. Additionally for non-player actors in menumode, exit and re-entry to menumode is needed to refresh the icons and avoid phantom icon interaction that could result in permanent item doubling or CTD. This also applies to the standard drop function.","title":"xDrop"},{"location":"references/mwse-mwscript/actor/#xequip","text":"Parameters: string objectID : The object ID of the item to equip. Returned: None This is a wrapper for the vanilla Equip function that can take variable input.","title":"xEquip"},{"location":"references/mwse-mwscript/actor/#xgetattribute","text":"Parameters: long attributeID : The Attribute ID to get the value of. Returned: float value : Current value of the attribute. Returns the current value of the referenced object's attribute. Note This function only supports the player and NPCs.","title":"xGetAttribute"},{"location":"references/mwse-mwscript/actor/#xgetbaseattribute","text":"Parameters: long attributeID : The Attribute ID to get the value of. Returned: float value : Base value of the attribute. Returns the base current value of the referenced object's attribute. Note This function only supports the player and NPCs.","title":"xGetBaseAttribute"},{"location":"references/mwse-mwscript/actor/#xgetbasegold","text":"Parameters: None Returned: long gold : The base amount of bartering gold of the reference. Returns the base amount of barter gold assigned to the NPC (or creature). This is the value that resets automatically each day.","title":"xGetBaseGold"},{"location":"references/mwse-mwscript/actor/#xgetbaseskill","text":"Parameters: long skillID : The Skill ID to get the value of. Returned: float value : Base value of the skill. Returns the base value of the referenced object's skill. Note This function only supports the player and NPCs.","title":"xGetBaseSkill"},{"location":"references/mwse-mwscript/actor/#xgetclass","text":"Parameters: long attributesMask : A bit mask to apply to the attributes value. long majorMask : A bit mask to apply to the majorSkills value. long minorMask : A bit mask to apply to the minorSkills value. Returned: string classID : The unique string identifier of the class. string name : The name of the class. long playable : 1 if the class can be chosen by the PC, 0 otherwise. long specialization : 0 = Combat, 1 = Magic, 2 = Stealth long attributes : A bitmap of the two primary attributes. The result is obtained by adding the values found in the attributes table below. long majorSkills : A bitmap of the 5 major skills. The result is obtained by adding the values found in the skills table below. long minorSkills : A bitmap of the 5 minor skills. The result is obtained by adding the values found in the skills table below. Returns info about the class of the target NPC/PC, or 0 if the target is not an NPC or the PC. For a custom class created at PC creation, the classID is \"NEWCLASSID_CHARGEN\" and playable is 0 .","title":"xGetClass"},{"location":"references/mwse-mwscript/actor/#attribute-and-skill-bitmaps","text":"Value Attribute 1 Strength 2 Intelligence 4 Willpower 8 Agility 16 Speed 32 Endurance 64 Personality 128 Luck Value Skill 1 Block 2 Armorer 4 Medium Armor 8 Heavy Armor 16 Blunt Weapon 32 Long Blade 64 Axe 128 Spear 256 Athletics 512 Enchant 1024 Destruction 2048 Alteration 4096 Illusion 8192 Conjuration 16384 Mysticism 32768 Restoration 65536 Alchemy 131072 Unarmored 262144 Security 524288 Sneak 1048576 Acrobatics 2097152 Light Armor 4194304 Short Blade 8388608 Marksman 16777216 Mercantile 33554432 Speechcraft 67108864 Hand-to-Hand","title":"Attribute and Skill Bitmaps"},{"location":"references/mwse-mwscript/actor/#xgetcombat","text":"Parameters: None Returned: reference reference : Reference to the current combat target. Returns a reference to the reference NPC/creature's combat target, or 0 if the reference is not in combat.","title":"xGetCombat"},{"location":"references/mwse-mwscript/actor/#xgetgold","text":"Parameters: None Returned: long gold : The reference's current barter gold. xGetGold returns the current amount of barter gold possessed by the NPC (or creature). The base gold amount is used if you haven't bartered with the NPC/creature recently.","title":"xGetGold"},{"location":"references/mwse-mwscript/actor/#xgetmagic","text":"Parameters: None Returned: long objectType : The Object Type of the equipped magical source. string objectID : The object ID of the spell or enchantment selected. Returns the currently equipped spell or enchanted item. This is specifically the object that appears in the equipped magic slot and includes on-use magical items as well as spells. Note The returned objectType and objectID will always be associated with a Spell or Enchantment object, not the Weapon , Armor , Clothing , or Book that the magic is placed on.","title":"xGetMagic"},{"location":"references/mwse-mwscript/actor/#xgetmaxfatigue","text":"Parameters: None Returned: float maxFatigue : The reference's maximum fatigue. !!! noteReturns maximum fatigue. This function only supports the player and NPCs.","title":"xGetMaxFatigue"},{"location":"references/mwse-mwscript/actor/#xgetmaxhealth","text":"Parameters: None Returned: float maxHealth : The reference's maximum health. !!! noteReturns maximum health. This function only supports the player and NPCs.","title":"xGetMaxHealth"},{"location":"references/mwse-mwscript/actor/#xgetmaxmagicka","text":"Parameters: None Returned: float maxMagicka : The reference's maximum magicka. !!! noteReturns maximum magicka. This function only supports the player and NPCs.","title":"xGetMaxMagicka"},{"location":"references/mwse-mwscript/actor/#xgetrace","text":"Parameters: short returnType : The return pattern desired. See below for details. Returned (returnType is 0): string raceID : The object ID of the target's race. Returned (returnType is 1): array arrayID : An array ID containing the values of the race. This function fetches the objectID or complete details about the target's race. Warning The arrays returned by this function when returnType is 1 are volatile. They should not be used for custom storage. Whenever xGetRace is called, the arrays are cleared and refilled with up-to-date information. If returnType is 0 , the response is the race's object ID. Otherwise, the returned array contains the following values: Index Type Contents 0 string Object ID. 1 string Name. 2 array Skill bonuses. 3 array Starting attributes. 4 float Male height. 5 float Female height. 6 float Male weight. 7 float Female weight. 8 long Playable flag. 9 long Beast flag. The skill bonuses array begins with index 0 holding the number of skill bonuses (a value between 0 and 7). Pairs of values are then returned. The odd indexes hold the Skill while the even indexes hold the bonus to the given skill. The starting attributes array contains the following values: Index Type Contents 0 long Male strength. 1 long Female strength. 2 long Male intelligence. 3 long Female intelligence. 4 long Male willpower. 5 long Female willpower. 6 long Male agility. 7 long Female agility. 8 long Male speed. 9 long Female speed. 10 long Male endurance. 11 long Female endurance. 12 long Male personality. 13 long Female personality. 14 long Male luck. 15 long Female luck.","title":"xGetRace"},{"location":"references/mwse-mwscript/actor/#xgetservice","text":"Parameters: long mask : A filter to limit the services returned. Returned: long services : The services offered by the reference, limited by mask . This function returns a bitfield of services offered by a given reference. The service values are shown in the following table. If an NPC offers more than one service the sum of the service numbers will be returned. The mask parameter can be used as a filter to limit the return value to only consider the services indicated. Value Service 1 Barters for weapons. 2 Barters for armor. 4 Barters for clothing. 8 Barters for books. 16 Barters for ingredients. 32 Barters for lockpicks. 64 Barters for probes. 128 Barters for lights. 256 Barters for alchemical apparatus. 512 Barters for repair tools. 1024 Barters for miscellaneous items. 2048 Offers spells. 4096 Barters for enchanted items. 8192 Barters for potions. 16384 Provides training. 32768 Provides spellmaking service. 65536 Provides enchanting service. 131072 Repairs armor and weapons. Note Previous versions of MWSE made use of xIsTrader , xIsTrainer , and xIsProvider . This function supersedes those. Old scripts that use them will continue to work, but new scripts should make use of xGetService .","title":"xGetService"},{"location":"references/mwse-mwscript/actor/#xgetskill","text":"Parameters: long skillID : The Skill ID to get the value of. Returned: float value : Current value of the skill. Returns the current value of the referenced object's skill. Note This function only supports the player and NPCs.","title":"xGetSkill"},{"location":"references/mwse-mwscript/actor/#xgetspell","text":"Parameters: string spellID : The spell ID to search for. Returned: long result : 1 if the spell was found, otherwise 0 . Returns 1 if spellId is present, 0 otherwise. This is not a wrapper for GetSpell ; it's a reimplementation. It only works for NPCs and the player.","title":"xGetSpell"},{"location":"references/mwse-mwscript/actor/#xgetspelleffects","text":"Parameters: string spellID : The spell ID to check for. Returned: long result : 1 if the object is equipped, otherwise 0 . Returns 1 if the calling object is under the effect of the given spell, or 0 otherwise.","title":"xGetSpellEffects"},{"location":"references/mwse-mwscript/actor/#xhasitemequipped","text":"Parameters: string objectID : The object ID to check if equipped. Returned: long result : 1 if the object is equipped, otherwise 0 . Returns 1 if the NPC or creature has the object equipped, 0 otherwise.","title":"xHasItemEquipped"},{"location":"references/mwse-mwscript/actor/#xisfemale","text":"Parameters: None Returned: long result : 1 if the reference is female, otherwise 0 . Returns 1 if the NPC is female and 0 otherwise.","title":"xIsFemale"},{"location":"references/mwse-mwscript/actor/#xmodattribute","text":"Parameters: long attributeID : The Attribute ID to modify. float value : The value to modify the attribute by. Returned: short result : Result of the function. Modifies the current and base values of the specified attribute. This suffers from the same display issue as xSetLevel. It ignores the 100 max attribute limit. Note This function only supports the player and NPCs.","title":"xModAttribute"},{"location":"references/mwse-mwscript/actor/#xmodservice","text":"Parameters: long services : The combined value of services the reference should offer (positive) or refuse (negative). Returned: None Uses the services parameter to modify the services offered by an NPC. A positive value adds that service (or set of services) to those already offered. A negative value will remove a service or service. The changes are not permanent. Value Service 1 Barters for weapons. 2 Barters for armor. 4 Barters for clothing. 8 Barters for books. 16 Barters for ingredients. 32 Barters for lockpicks. 64 Barters for probes. 128 Barters for lights. 256 Barters for alchemical apparatus. 512 Barters for repair tools. 1024 Barters for miscellaneous items. 2048 Offers spells. 4096 Barters for enchanted items. 8192 Barters for potions. 16384 Provides training. 32768 Provides spellmaking service. 65536 Provides enchanting service. 131072 Repairs armor and weapons.","title":"xModService"},{"location":"references/mwse-mwscript/actor/#xremovespell","text":"Parameters: string objectID : The object ID of the spell to remove. Returned: None This is a wrapper for the vanilla RemoveSpell function that can take variable input.","title":"xRemoveSpell"},{"location":"references/mwse-mwscript/actor/#xsetbasegold","text":"Parameters: long gold : New value to set the reference's base barter gold to. Returned: None Changes the base amount of barter gold assigned to the NPC (or creature). Unfortunately this change won't be saved with the save game so you will need to reset it after each game reload or after the \"72-hour bug\" affects the merchant.","title":"xSetBaseGold"},{"location":"references/mwse-mwscript/actor/#xsetgold","text":"Parameters: long gold : New value to set the reference's current barter gold to. Returned: None xSetGold changes the current amount of barter gold possessed by the NPC (or creature). This value is stored in save game files so it will survive a game reload. Setting this will have no effect if you haven't recently bartered with the NPC/creature. But setting both this and the base gold amount at the same time will likely do what you want.","title":"xSetGold"},{"location":"references/mwse-mwscript/actor/#xsetlevel","text":"Parameters: long level : New value to set the reference's level to. Returned: None Sets the level of the given reference. This function is a wrapper for SetLevel , and suffers from the same display issue: when using this function on the player, the character screen does not update with the new level.","title":"xSetLevel"},{"location":"references/mwse-mwscript/actor/#xsetservice","text":"Parameters: long services : The combined value of services the reference should offer. Returned: None xSetService uses the value parameter to change the NPC to offer the set of services represented by the number. The service number values are used and any old services are ignored. For example using a value of 8 will make the NPC a bookseller. A value of 131587 ( 1+2+512+131072 ) is typical for smiths. The values changed by this function are not permanent and may be reset after 72-hours or a game reload. Value Service 1 Barters for weapons. 2 Barters for armor. 4 Barters for clothing. 8 Barters for books. 16 Barters for ingredients. 32 Barters for lockpicks. 64 Barters for probes. 128 Barters for lights. 256 Barters for alchemical apparatus. 512 Barters for repair tools. 1024 Barters for miscellaneous items. 2048 Offers spells. 4096 Barters for enchanted items. 8192 Barters for potions. 16384 Provides training. 32768 Provides spellmaking service. 65536 Provides enchanting service. 131072 Repairs armor and weapons.","title":"xSetService"},{"location":"references/mwse-mwscript/actor/#xstartcombat","text":"Parameters: long reference : Target reference for the caller to initiate combat with. Returned: None xStartCombat is a wrapper for the original StartCombat to take variables.","title":"xStartCombat"},{"location":"references/mwse-mwscript/array/","text":"Array Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xClearArray \u2693\ufe0e Parameters: long arrayId : The id of the array to clear. Returned: long result : 1 if the array was successfully cleared. This function clears an array, removing any values from it. xCreateArray \u2693\ufe0e Parameters: None Returned: long arrayId : The id of the array that was created. This function creates an empty array, and returns the id of it. xGetArraySize \u2693\ufe0e Parameters: long arrayId : The id of the array. Returned: long size : The number of elements in the array. This function determines the size of an array. xGetArrayValue \u2693\ufe0e Parameters: long arrayId : The id of the array to get a value from. long index : The index in the array to fetch. Returned: long value : The value in the array at the given index . This function retrieves a value in an array, identified by arrayId and at index . xSetArrayValue \u2693\ufe0e Parameters: long arrayId : The id of the array to get a value from. long index : The index in the array to fetch. long value : The value to set into the array. Returned: short status : 1 if the value was set, otherwise 0. This function retrieves sets a value in an array, identified by arrayId and at index .","title":"Array Functions"},{"location":"references/mwse-mwscript/array/#array-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Array Functions"},{"location":"references/mwse-mwscript/array/#xcleararray","text":"Parameters: long arrayId : The id of the array to clear. Returned: long result : 1 if the array was successfully cleared. This function clears an array, removing any values from it.","title":"xClearArray"},{"location":"references/mwse-mwscript/array/#xcreatearray","text":"Parameters: None Returned: long arrayId : The id of the array that was created. This function creates an empty array, and returns the id of it.","title":"xCreateArray"},{"location":"references/mwse-mwscript/array/#xgetarraysize","text":"Parameters: long arrayId : The id of the array. Returned: long size : The number of elements in the array. This function determines the size of an array.","title":"xGetArraySize"},{"location":"references/mwse-mwscript/array/#xgetarrayvalue","text":"Parameters: long arrayId : The id of the array to get a value from. long index : The index in the array to fetch. Returned: long value : The value in the array at the given index . This function retrieves a value in an array, identified by arrayId and at index .","title":"xGetArrayValue"},{"location":"references/mwse-mwscript/array/#xsetarrayvalue","text":"Parameters: long arrayId : The id of the array to get a value from. long index : The index in the array to fetch. long value : The value to set into the array. Returned: short status : 1 if the value was set, otherwise 0. This function retrieves sets a value in an array, identified by arrayId and at index .","title":"xSetArrayValue"},{"location":"references/mwse-mwscript/file/","text":"File Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xFileReadFloat \u2693\ufe0e Parameters: string filename : The file to read values from. long count : The number of values desired. Returned: long valuesRead : The number of results actually read. This may differ from count if it encountered an error while reading. float value : A value read. A number of values are returned equal to valuesRead . Reads a number of float (4 byte) values requested from filename at the current reading position. The current position is then advanced. Returns the number of values actually read ( valuesRead ) followed by the values. xFileReadLong \u2693\ufe0e Parameters: string filename : The file to read values from. long count : The number of values desired. Returned: long valuesRead : The number of results actually read. This may differ from count if it encountered an error while reading. long value : A value read. A number of values are returned equal to valuesRead . Reads a number of long (4 byte) values requested from filename at the current reading position. The current position is then advanced. Returns the number of values actually read ( valuesRead ) followed by the values. xFileReadShort \u2693\ufe0e Parameters: string filename : The file to read values from. long count : The number of values desired. Returned: long valuesRead : The number of results actually read. This may differ from count if it encountered an error while reading. short value : A value read. A number of values are returned equal to valuesRead . Reads a number of short (2 byte) values requested from filename at the current reading position. The current position is then advanced. Returns the number of values actually read ( valuesRead ) followed by the values. xFileReadString \u2693\ufe0e Parameters: string filename : The file to read values from. Returned: string value : The value read from the file. Reads from filename at the current reading position, until a C-style null terminator ( \\0 / 0x00 ) is read. The current position is advanced as read, and the resultant bytes are returned as a string. xFileReadText \u2693\ufe0e Parameters: string filename : The file to read values from. string pattern : The pattern to match when reading. Returned: long numMatches : The number of values read. varies matches : A value returned. A number of values will be returned matching numMatches . xFileReadText reads a text string from from the file at the current reading position. The current position is then advanced. The pattern string is then used to extract data from the string just read; the first return value indicates how much of the pattern is matched. The values matched by the pattern are also returned. The pattern and return values are the same as for the xStringParse function with one addition: placing a single % sign at the end of the pattern will cause the read routine to stop when it gets to the end of a line (CR/LF) allowing you to use this to read a normal text file instead of a binary file. Without the trailing % sign on the pattern this will read up to the first NULL character or to the end of the file if it doesn't find a NULL character. xFileRewind \u2693\ufe0e Parameters: string filename : The file to rewind. Returned: None This function moves the current reading position to the start of the file. Call this or xFileSeek at the start of any script which uses file reading or writing functions, otherwise you will have problems with the current file position not being as expected. xFileSeek \u2693\ufe0e Parameters: string filename : The file to seek in. long position : Returned: None This function moves the current reading position to the specified offset in the file. You should call this or xFileRewind every frame before using other file functions. Use an offset divisible by 2 to read shorts and an offset divisible by 4 to read longs. This function isn't very useful if the file contains string data. xFileWriteFloat \u2693\ufe0e Parameters: string filename : The file to write value to. float value : The value to write to file. Returned: None Writes a float (4 byte) value to filename at the current position. The current position is then advanced. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file. xFileWriteLong \u2693\ufe0e Parameters: string filename : The file to write value to. long value : The value to write to file. Returned: None Writes a long (4 byte) value to filename at the current position. The current position is then advanced. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file. xFileWriteShort \u2693\ufe0e Parameters: string filename : The file to write value to. short value : The value to write to file. Returned: None Writes a short (2 byte) value to filename at the current position. The current position is then advanced. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file. xFileWriteString \u2693\ufe0e Parameters: string filename : The file to write value to. string value : The value to write to file. Returned: None Writes a string value to filename at the current position. The string is stored in the file as a C-style null-terminated string. The current position is then advanced. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file. xFileWriteText \u2693\ufe0e Parameters: string filename : The file to write value to. string format : The format to use when writing to the file. varies values : Multiple values that match the format . Returned: None Writes a formatted string to the file at the current position and advances. The formatting rules are the same as for the xStringBuild function with one addition. Placing a % at the end of the pattern will suppress the NULL that is normally printed, so a format string ending with %N% can be used to create a normal text file. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file.","title":"File Functions"},{"location":"references/mwse-mwscript/file/#file-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"File Functions"},{"location":"references/mwse-mwscript/file/#xfilereadfloat","text":"Parameters: string filename : The file to read values from. long count : The number of values desired. Returned: long valuesRead : The number of results actually read. This may differ from count if it encountered an error while reading. float value : A value read. A number of values are returned equal to valuesRead . Reads a number of float (4 byte) values requested from filename at the current reading position. The current position is then advanced. Returns the number of values actually read ( valuesRead ) followed by the values.","title":"xFileReadFloat"},{"location":"references/mwse-mwscript/file/#xfilereadlong","text":"Parameters: string filename : The file to read values from. long count : The number of values desired. Returned: long valuesRead : The number of results actually read. This may differ from count if it encountered an error while reading. long value : A value read. A number of values are returned equal to valuesRead . Reads a number of long (4 byte) values requested from filename at the current reading position. The current position is then advanced. Returns the number of values actually read ( valuesRead ) followed by the values.","title":"xFileReadLong"},{"location":"references/mwse-mwscript/file/#xfilereadshort","text":"Parameters: string filename : The file to read values from. long count : The number of values desired. Returned: long valuesRead : The number of results actually read. This may differ from count if it encountered an error while reading. short value : A value read. A number of values are returned equal to valuesRead . Reads a number of short (2 byte) values requested from filename at the current reading position. The current position is then advanced. Returns the number of values actually read ( valuesRead ) followed by the values.","title":"xFileReadShort"},{"location":"references/mwse-mwscript/file/#xfilereadstring","text":"Parameters: string filename : The file to read values from. Returned: string value : The value read from the file. Reads from filename at the current reading position, until a C-style null terminator ( \\0 / 0x00 ) is read. The current position is advanced as read, and the resultant bytes are returned as a string.","title":"xFileReadString"},{"location":"references/mwse-mwscript/file/#xfilereadtext","text":"Parameters: string filename : The file to read values from. string pattern : The pattern to match when reading. Returned: long numMatches : The number of values read. varies matches : A value returned. A number of values will be returned matching numMatches . xFileReadText reads a text string from from the file at the current reading position. The current position is then advanced. The pattern string is then used to extract data from the string just read; the first return value indicates how much of the pattern is matched. The values matched by the pattern are also returned. The pattern and return values are the same as for the xStringParse function with one addition: placing a single % sign at the end of the pattern will cause the read routine to stop when it gets to the end of a line (CR/LF) allowing you to use this to read a normal text file instead of a binary file. Without the trailing % sign on the pattern this will read up to the first NULL character or to the end of the file if it doesn't find a NULL character.","title":"xFileReadText"},{"location":"references/mwse-mwscript/file/#xfilerewind","text":"Parameters: string filename : The file to rewind. Returned: None This function moves the current reading position to the start of the file. Call this or xFileSeek at the start of any script which uses file reading or writing functions, otherwise you will have problems with the current file position not being as expected.","title":"xFileRewind"},{"location":"references/mwse-mwscript/file/#xfileseek","text":"Parameters: string filename : The file to seek in. long position : Returned: None This function moves the current reading position to the specified offset in the file. You should call this or xFileRewind every frame before using other file functions. Use an offset divisible by 2 to read shorts and an offset divisible by 4 to read longs. This function isn't very useful if the file contains string data.","title":"xFileSeek"},{"location":"references/mwse-mwscript/file/#xfilewritefloat","text":"Parameters: string filename : The file to write value to. float value : The value to write to file. Returned: None Writes a float (4 byte) value to filename at the current position. The current position is then advanced. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file.","title":"xFileWriteFloat"},{"location":"references/mwse-mwscript/file/#xfilewritelong","text":"Parameters: string filename : The file to write value to. long value : The value to write to file. Returned: None Writes a long (4 byte) value to filename at the current position. The current position is then advanced. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file.","title":"xFileWriteLong"},{"location":"references/mwse-mwscript/file/#xfilewriteshort","text":"Parameters: string filename : The file to write value to. short value : The value to write to file. Returned: None Writes a short (2 byte) value to filename at the current position. The current position is then advanced. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file.","title":"xFileWriteShort"},{"location":"references/mwse-mwscript/file/#xfilewritestring","text":"Parameters: string filename : The file to write value to. string value : The value to write to file. Returned: None Writes a string value to filename at the current position. The string is stored in the file as a C-style null-terminated string. The current position is then advanced. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file.","title":"xFileWriteString"},{"location":"references/mwse-mwscript/file/#xfilewritetext","text":"Parameters: string filename : The file to write value to. string format : The format to use when writing to the file. varies values : Multiple values that match the format . Returned: None Writes a formatted string to the file at the current position and advances. The formatting rules are the same as for the xStringBuild function with one addition. Placing a % at the end of the pattern will suppress the NULL that is normally printed, so a format string ending with %N% can be used to create a normal text file. Note The file is truncated at the current position (just after the end of the new value). This means that you cannot use this to modify the values in the middle of an existing file.","title":"xFileWriteText"},{"location":"references/mwse-mwscript/iteration/","text":"Iteration Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xContentList \u2693\ufe0e Parameters: long node : For the first call, this should be 0 to get the first item. In following iterations, this value will be what is returned as nextNode from the previous call. Returned: string id : The object ID string of the item. long count : How many items are in the item stack. long type : The Object Type of the item. long value : The value of the item. float weight : The weight of the item. (Always 0.000001 for LEVI objects.) string name : The name of the item. long nextNode : The next node to provide back into this function to continue looping. When this value is 0, there are no more items. This function allows a script to iterate through the inventory of an actor or container and retrieve information about the contents found. Unlike the xInventory and xNextStack functions, xContentList also provides access to the type, value, weight, and name of items processed. If you are only interested in items of specific types, consider using xContentListFiltered instead. If you are only interested in items currently equipped by the actor, consider using xEquipmentList . xContentListFiltered \u2693\ufe0e Parameters: long node : For the first call, this should be 0 to get the first item. In following iterations, this value will be what is returned as nextNode from the previous call. long filter : A filter that matches the Filter Mask that is desired. Only items matching the type(s) will be returned. This means that passing a value of 0 will return nothing. Returned: string id : The id string of the item. long count : How many items are in the item stack. long type : The Object Type of the item. long value : The value of the item. float weight : The weight of the item. string name : The name of the item. long nextNode : The next node to provide back into this function to continue looping. When this value is 0, there are no more items. This function behaves similar to xContentList , with the added convenience of filtering for one or more Object Type . If you are trying to specifically get the equipped items of an actor, consider using xEquipmentList . Filter Mask \u2693\ufe0e The filter mask below is meant to be summed for each Object Type desired in the filter. The exception to this rule is the ENCH filter, which restricts the results to enchanted items. For example, if you wanted clothing ( 128 ) and armor ( 16 ) results, you would pass a value of 144 ( 128+16 ). Type Mask ACTI 1 ALCH 2 AMMO 4 APPA 8 ARMO 16 BODY 32 BOOK 64 CLOT 128 CONT 256 CREA 512 DOOR 1024 INGR 2048 LEVC 4096 LEVI 8192 LIGH 16384 LOCK 32768 MISC 65536 NPC 131072 PROB 262144 REPA 524288 STAT 1048576 WEAP 2097152 ENCH 4194304 Simple Filtered Loop This example demonstrates how to loop through all potions the player is carrying. begin Example_xContentListFiltered long id long count long type long value float weight long name long next long filter long ref long loop setx ref to xGetRef \"player\" set filter to 2 ; ALCH set loop to 1 whilex ( loop ) setx id count type value weight name next to ref->xContentListFiltered next filter xLogMessage \"id: %s\" id xLogMessage \" count: %d\" count xLogMessage \" type: %l\" type xLogMessage \" value: %d\" value xLogMessage \" weight: %.2f\" weight xLogMessage \" name: %s\" name xLogMessage \" next: %d\" next set loop to next endwhile StopScript Example_xContentListFiltered end Transfer Ingredients This example shows how to efficiently transfer all ingredients and potions from the player to another container. A placeholder variable, such as \"_\", can be used to ignore return values that are not needed for your script. begin TransferIngreds long _ long id long count long src long dst setx src to xGetRef \"player\" setx dst to xGetRef \"ingred_storage\" set count to 1 whilex ( count ) ; get the next ingred and count setx id count _ _ _ _ _ to src->xContentListFiltered _ 2050 ; INGR + ALCH ; remove the ingred from source src->xRemoveItem id count ; add the ingred to destination dst->xAddItem id count ; continue with next ingredient set count to _ endwhile src->PlaySound3D \"Item Ingredient Down\" StopScript TransferIngreds end Get first item of a specific type. This example shows how to efficiently check if the player is carrying any weapons at all. No explicit loop is needed here, so evaluating the weapon id alone will suffice. begin NoWeaponsAllowed ; local script on a door long pcRef long weapID if ( OnActivate == 0 ) return endif setx pcRef to xGetRef \"player\" setx weapID to pcRef->xContentListFiltered 0 2097152 ; Weapon if ( weapID != 0 ) MessageBox \"No weapons are allowed inside the royal chamber!\" PlaySound3D \"Door Heavy Close\" return endif Activate end xEquipmentList \u2693\ufe0e Parameters: long node : For the first call, this should be 0 to get the first equipped item. In following iterations, this value will be what is returned as nextNode from the previous call. long typeFilter : A type filter that matches the Object Type that is desired. Only equipped items matching that type will be returned. A value of 0 will perform no type filtering. long subTypeFilter : An optional subtype filter, allowing the loop to search for a specific Armor Type , Clothing Type or Weapon Type . The value passed must be one higher than the value on the linked table. A value of 0 will perform no subtype filtering. Returned: string id : The id string of the equipped item. long count : This value will always be 1. Future version of MWSE may expand this to return the actual item count for arrows, bolts, and thrown weapons. long type : The Object Type of the equipped item. long subtype : The Armor Type , Clothing Type or Weapon Type of the equipped item, or 0 if it is not an armor, clothing, or weapon object. Note that the value returned is one higher than the value on the given table. long value : The value of the equipped item. float weight : The weight of the equipped item. string name : The name of the equipped item. string enchantId : The enchantment id of the equipped item. This can be fed to enchantment related functions that take an id. long nextNode : The next node to provide back into this function to continue looping. When this value is 0, there are no more equipped items. This function behaves similar to xContentList / xContentListFiltered , returning inventory information. This allows looping over equipped items instead of all items in the target's inventory. Note The subTypeFilter parameter does not exactly match the associated table. Instead, the function requires one more than the value on the table. For example if searching for clothing objects, a value of 0 will perform no filtering by subtype, while a value of 1 will filter for only pants. Tip At present this function is the only way to reliably get the equipment a reference has currently worn. Using the typeFilter and subTypeFilter the script can quickly query to see if, for example, the player is wearing pants. Simple Equipment Loop This example demonstrates how to do a simple loop through all equipped items (on the player in this instance). Begin loopEquippedItems long id long count long type long subtype long value long weight long name long enchantId long node long loop long ref setx ref to xGetRef \"player\" set loop to 1 whilex ( loop ) setx id count type subtype value weight name enchantId node to ref->xEquipmentList node 0 0 ; Code to be run for each looped item. set loop to node endwhile End Get Equipped Weapon's Enchantment This example shows how to get the enchantment objectId for the currently equipped weapon. Looping isn't required as the player can never have more than one equipped weapon. begin GetPlayerWeaponInfo long ref long id long count long type long subtype long value long weight long name long ench long node ; get the player reference setx ref to xGetRef \"player\" ; get info about his weapon setx id count type subtype value weight name ench node to ref->xEquipmentList 0 1346454871 0 ifx ( name ) xMessageFix \"Weapon: %s\" name MessageBox \"Weapon: ________________________________\" endif ifx ( ench ) xMessageFix \"Enchantment: %s\" ench MessageBox \"Enchantment: ________________________________\" endif end xFirstItem \u2693\ufe0e Parameters: None Returned: long reference : The first reference in the current cell's \"Item\" list. xFirstItem returns the first reference in the current cell's \"Item\" list. Despite the name of this function, the associated list can contain references of any Object Type other than those exclusive to xFirstNPC . Once acquired, the reference can be used with various other MWSE functions, such as xRefID and xRefType . Passing the reference as the argument to the xNextRef function will return the next reference in its associated list. Note Scripts that intend to process all references in the loaded cells will need to independently handle the separate lists provided by xFirstItem , xFirstStatic , and xFirstNPC . xFirstNPC \u2693\ufe0e Parameters: None Returned: long reference : The first reference in the current cell's \"NPC\" list. xFirstNPC returns the first reference in the current cell's \"NPC\" list. Once acquired, the reference can be used with various other MWSE functions, such as xRefID and xRefType . Passing the reference as the argument to the xNextRef function will return the next reference in its associated list. Note Scripts that intend to process all references in the loaded cells will need to independently handle the separate lists provided by xFirstItem , xFirstStatic , and xFirstNPC . xFirstStatic \u2693\ufe0e Parameters: None Returned: long reference : The first reference in the current cell's \"Static\" list. xFirstStatic returns the first reference in the current cell's \"Static\" list. Despite the name of this function, the associated list can contain references of any Object Type other than those exclusive to xFirstNPC . Once acquired, the reference can be used with various other MWSE functions, such as xRefID and xRefType . Passing the reference as the argument to the xNextRef function will return the next reference in its associated list. Note Scripts that intend to process all references in the loaded cells will need to independently handle the separate lists provided by xFirstItem , xFirstStatic , and xFirstNPC . xInventory \u2693\ufe0e Parameters: None Returned: string objectID : The object ID of the item. long count : The number of items in the stack. node nextStack : A handle to the next stack in the inventory. This is 0 when no more items are in the inventory. Returns the objectID and count of an item in the target's inventory. The nextStack can be fed into xNextStack to continue iteration. Warning This function is limited. Consider using xContentList , xContentListFiltered or xEquipmentList instead. xNextRef \u2693\ufe0e Parameters: long reference : A valid reference. See xFirstItem , xFirstNPC , xFirstStatic . Returned: long nextReference : The next reference in the given reference's associated list. xNextRef returns the next reference in the supplied reference's associated list. xNextStack \u2693\ufe0e Parameters: node stack : The result from a previous xInventory or xNextStack call. Returned: string objectID : The object ID of the item. long count : The number of items in the stack. node nextStack : A handle to the next stack in the inventory. This is 0 when no more items are in the inventory. Returns the objectID and count of an item in the target's inventory. The nextStack can be fed into xNextStack to continue iteration. Warning This function is limited. Consider using xContentList , xContentListFiltered or xEquipmentList instead. xSpellList \u2693\ufe0e Parameters: long node : For the first call, this should be 0 to get the first spell. In following iterations, this value will be what is returned as nextNode from the previous call. Returned: long totalSpells : Total number of spells the caller knows. long spellId : The spell ID. long name : The spell name. long type : The spell type. ( 0 = spell, 1 = ability, 2 = blight, 3 = disease, 4 = curse, 5 = power) long cost : The spell cost. long effects : The spell's number of effects ( 1 to 8 ). long flags : The spell flags. ( 1 = autocalc, 2 = PC start, 4 = always succeeds) long nextNode : The next node to supply to function to continue looping. When this value is 0 , there are no more items. This function allows a script to iterate through the spell list of an actor and retrieve information about the spells found. Currently this function does not work on creatures.","title":"Iteration Functions"},{"location":"references/mwse-mwscript/iteration/#iteration-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Iteration Functions"},{"location":"references/mwse-mwscript/iteration/#xcontentlist","text":"Parameters: long node : For the first call, this should be 0 to get the first item. In following iterations, this value will be what is returned as nextNode from the previous call. Returned: string id : The object ID string of the item. long count : How many items are in the item stack. long type : The Object Type of the item. long value : The value of the item. float weight : The weight of the item. (Always 0.000001 for LEVI objects.) string name : The name of the item. long nextNode : The next node to provide back into this function to continue looping. When this value is 0, there are no more items. This function allows a script to iterate through the inventory of an actor or container and retrieve information about the contents found. Unlike the xInventory and xNextStack functions, xContentList also provides access to the type, value, weight, and name of items processed. If you are only interested in items of specific types, consider using xContentListFiltered instead. If you are only interested in items currently equipped by the actor, consider using xEquipmentList .","title":"xContentList"},{"location":"references/mwse-mwscript/iteration/#xcontentlistfiltered","text":"Parameters: long node : For the first call, this should be 0 to get the first item. In following iterations, this value will be what is returned as nextNode from the previous call. long filter : A filter that matches the Filter Mask that is desired. Only items matching the type(s) will be returned. This means that passing a value of 0 will return nothing. Returned: string id : The id string of the item. long count : How many items are in the item stack. long type : The Object Type of the item. long value : The value of the item. float weight : The weight of the item. string name : The name of the item. long nextNode : The next node to provide back into this function to continue looping. When this value is 0, there are no more items. This function behaves similar to xContentList , with the added convenience of filtering for one or more Object Type . If you are trying to specifically get the equipped items of an actor, consider using xEquipmentList .","title":"xContentListFiltered"},{"location":"references/mwse-mwscript/iteration/#filter-mask","text":"The filter mask below is meant to be summed for each Object Type desired in the filter. The exception to this rule is the ENCH filter, which restricts the results to enchanted items. For example, if you wanted clothing ( 128 ) and armor ( 16 ) results, you would pass a value of 144 ( 128+16 ). Type Mask ACTI 1 ALCH 2 AMMO 4 APPA 8 ARMO 16 BODY 32 BOOK 64 CLOT 128 CONT 256 CREA 512 DOOR 1024 INGR 2048 LEVC 4096 LEVI 8192 LIGH 16384 LOCK 32768 MISC 65536 NPC 131072 PROB 262144 REPA 524288 STAT 1048576 WEAP 2097152 ENCH 4194304 Simple Filtered Loop This example demonstrates how to loop through all potions the player is carrying. begin Example_xContentListFiltered long id long count long type long value float weight long name long next long filter long ref long loop setx ref to xGetRef \"player\" set filter to 2 ; ALCH set loop to 1 whilex ( loop ) setx id count type value weight name next to ref->xContentListFiltered next filter xLogMessage \"id: %s\" id xLogMessage \" count: %d\" count xLogMessage \" type: %l\" type xLogMessage \" value: %d\" value xLogMessage \" weight: %.2f\" weight xLogMessage \" name: %s\" name xLogMessage \" next: %d\" next set loop to next endwhile StopScript Example_xContentListFiltered end Transfer Ingredients This example shows how to efficiently transfer all ingredients and potions from the player to another container. A placeholder variable, such as \"_\", can be used to ignore return values that are not needed for your script. begin TransferIngreds long _ long id long count long src long dst setx src to xGetRef \"player\" setx dst to xGetRef \"ingred_storage\" set count to 1 whilex ( count ) ; get the next ingred and count setx id count _ _ _ _ _ to src->xContentListFiltered _ 2050 ; INGR + ALCH ; remove the ingred from source src->xRemoveItem id count ; add the ingred to destination dst->xAddItem id count ; continue with next ingredient set count to _ endwhile src->PlaySound3D \"Item Ingredient Down\" StopScript TransferIngreds end Get first item of a specific type. This example shows how to efficiently check if the player is carrying any weapons at all. No explicit loop is needed here, so evaluating the weapon id alone will suffice. begin NoWeaponsAllowed ; local script on a door long pcRef long weapID if ( OnActivate == 0 ) return endif setx pcRef to xGetRef \"player\" setx weapID to pcRef->xContentListFiltered 0 2097152 ; Weapon if ( weapID != 0 ) MessageBox \"No weapons are allowed inside the royal chamber!\" PlaySound3D \"Door Heavy Close\" return endif Activate end","title":"Filter Mask"},{"location":"references/mwse-mwscript/iteration/#xequipmentlist","text":"Parameters: long node : For the first call, this should be 0 to get the first equipped item. In following iterations, this value will be what is returned as nextNode from the previous call. long typeFilter : A type filter that matches the Object Type that is desired. Only equipped items matching that type will be returned. A value of 0 will perform no type filtering. long subTypeFilter : An optional subtype filter, allowing the loop to search for a specific Armor Type , Clothing Type or Weapon Type . The value passed must be one higher than the value on the linked table. A value of 0 will perform no subtype filtering. Returned: string id : The id string of the equipped item. long count : This value will always be 1. Future version of MWSE may expand this to return the actual item count for arrows, bolts, and thrown weapons. long type : The Object Type of the equipped item. long subtype : The Armor Type , Clothing Type or Weapon Type of the equipped item, or 0 if it is not an armor, clothing, or weapon object. Note that the value returned is one higher than the value on the given table. long value : The value of the equipped item. float weight : The weight of the equipped item. string name : The name of the equipped item. string enchantId : The enchantment id of the equipped item. This can be fed to enchantment related functions that take an id. long nextNode : The next node to provide back into this function to continue looping. When this value is 0, there are no more equipped items. This function behaves similar to xContentList / xContentListFiltered , returning inventory information. This allows looping over equipped items instead of all items in the target's inventory. Note The subTypeFilter parameter does not exactly match the associated table. Instead, the function requires one more than the value on the table. For example if searching for clothing objects, a value of 0 will perform no filtering by subtype, while a value of 1 will filter for only pants. Tip At present this function is the only way to reliably get the equipment a reference has currently worn. Using the typeFilter and subTypeFilter the script can quickly query to see if, for example, the player is wearing pants. Simple Equipment Loop This example demonstrates how to do a simple loop through all equipped items (on the player in this instance). Begin loopEquippedItems long id long count long type long subtype long value long weight long name long enchantId long node long loop long ref setx ref to xGetRef \"player\" set loop to 1 whilex ( loop ) setx id count type subtype value weight name enchantId node to ref->xEquipmentList node 0 0 ; Code to be run for each looped item. set loop to node endwhile End Get Equipped Weapon's Enchantment This example shows how to get the enchantment objectId for the currently equipped weapon. Looping isn't required as the player can never have more than one equipped weapon. begin GetPlayerWeaponInfo long ref long id long count long type long subtype long value long weight long name long ench long node ; get the player reference setx ref to xGetRef \"player\" ; get info about his weapon setx id count type subtype value weight name ench node to ref->xEquipmentList 0 1346454871 0 ifx ( name ) xMessageFix \"Weapon: %s\" name MessageBox \"Weapon: ________________________________\" endif ifx ( ench ) xMessageFix \"Enchantment: %s\" ench MessageBox \"Enchantment: ________________________________\" endif end","title":"xEquipmentList"},{"location":"references/mwse-mwscript/iteration/#xfirstitem","text":"Parameters: None Returned: long reference : The first reference in the current cell's \"Item\" list. xFirstItem returns the first reference in the current cell's \"Item\" list. Despite the name of this function, the associated list can contain references of any Object Type other than those exclusive to xFirstNPC . Once acquired, the reference can be used with various other MWSE functions, such as xRefID and xRefType . Passing the reference as the argument to the xNextRef function will return the next reference in its associated list. Note Scripts that intend to process all references in the loaded cells will need to independently handle the separate lists provided by xFirstItem , xFirstStatic , and xFirstNPC .","title":"xFirstItem"},{"location":"references/mwse-mwscript/iteration/#xfirstnpc","text":"Parameters: None Returned: long reference : The first reference in the current cell's \"NPC\" list. xFirstNPC returns the first reference in the current cell's \"NPC\" list. Once acquired, the reference can be used with various other MWSE functions, such as xRefID and xRefType . Passing the reference as the argument to the xNextRef function will return the next reference in its associated list. Note Scripts that intend to process all references in the loaded cells will need to independently handle the separate lists provided by xFirstItem , xFirstStatic , and xFirstNPC .","title":"xFirstNPC"},{"location":"references/mwse-mwscript/iteration/#xfirststatic","text":"Parameters: None Returned: long reference : The first reference in the current cell's \"Static\" list. xFirstStatic returns the first reference in the current cell's \"Static\" list. Despite the name of this function, the associated list can contain references of any Object Type other than those exclusive to xFirstNPC . Once acquired, the reference can be used with various other MWSE functions, such as xRefID and xRefType . Passing the reference as the argument to the xNextRef function will return the next reference in its associated list. Note Scripts that intend to process all references in the loaded cells will need to independently handle the separate lists provided by xFirstItem , xFirstStatic , and xFirstNPC .","title":"xFirstStatic"},{"location":"references/mwse-mwscript/iteration/#xinventory","text":"Parameters: None Returned: string objectID : The object ID of the item. long count : The number of items in the stack. node nextStack : A handle to the next stack in the inventory. This is 0 when no more items are in the inventory. Returns the objectID and count of an item in the target's inventory. The nextStack can be fed into xNextStack to continue iteration. Warning This function is limited. Consider using xContentList , xContentListFiltered or xEquipmentList instead.","title":"xInventory"},{"location":"references/mwse-mwscript/iteration/#xnextref","text":"Parameters: long reference : A valid reference. See xFirstItem , xFirstNPC , xFirstStatic . Returned: long nextReference : The next reference in the given reference's associated list. xNextRef returns the next reference in the supplied reference's associated list.","title":"xNextRef"},{"location":"references/mwse-mwscript/iteration/#xnextstack","text":"Parameters: node stack : The result from a previous xInventory or xNextStack call. Returned: string objectID : The object ID of the item. long count : The number of items in the stack. node nextStack : A handle to the next stack in the inventory. This is 0 when no more items are in the inventory. Returns the objectID and count of an item in the target's inventory. The nextStack can be fed into xNextStack to continue iteration. Warning This function is limited. Consider using xContentList , xContentListFiltered or xEquipmentList instead.","title":"xNextStack"},{"location":"references/mwse-mwscript/iteration/#xspelllist","text":"Parameters: long node : For the first call, this should be 0 to get the first spell. In following iterations, this value will be what is returned as nextNode from the previous call. Returned: long totalSpells : Total number of spells the caller knows. long spellId : The spell ID. long name : The spell name. long type : The spell type. ( 0 = spell, 1 = ability, 2 = blight, 3 = disease, 4 = curse, 5 = power) long cost : The spell cost. long effects : The spell's number of effects ( 1 to 8 ). long flags : The spell flags. ( 1 = autocalc, 2 = PC start, 4 = always succeeds) long nextNode : The next node to supply to function to continue looping. When this value is 0 , there are no more items. This function allows a script to iterate through the spell list of an actor and retrieve information about the spells found. Currently this function does not work on creatures.","title":"xSpellList"},{"location":"references/mwse-mwscript/logic/","text":"Logic Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xAnd \u2693\ufe0e Parameters: long leftValue : First value for the logical operation. long rightValue : Second value for the logical operation. Returned: long result : 1 if the logical operation returns true. This function performs an AND logical operation, and returns its result. An AND operation returns true if both of the values are non-zero. A B xAnd A B 0 0 0 0 1 0 1 0 0 1 1 1 xNot \u2693\ufe0e Parameters: long value : Value for the logical operation. Returned: long result : 1 if the logical operation returns true. This function performs a NOT logical operation, and returns its result. A NOT operation returns true if its parameter is zero. A xNot A 0 1 1 0 xOr \u2693\ufe0e Parameters: long leftValue : First value for the logical operation. long rightValue : Second value for the logical operation. Returned: long result : 1 if the logical operation returns true. This function performs an OR logical operation, and returns its result. An OR operation returns true if either of the values are non-zero. A B xOr A B 0 0 0 0 1 1 1 0 1 1 1 1 xXor \u2693\ufe0e Parameters: long leftValue : First value for the logical operation. long rightValue : Second value for the logical operation. Returned: long result : 1 if the logical operation returns true. This function performs an XOR logical operation, and returns its result. An XOR operation returns true if one of the values is non-zero, but not both. A B xXor A B 0 0 0 0 1 1 1 0 1 1 1 0","title":"Logic Functions"},{"location":"references/mwse-mwscript/logic/#logic-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Logic Functions"},{"location":"references/mwse-mwscript/logic/#xand","text":"Parameters: long leftValue : First value for the logical operation. long rightValue : Second value for the logical operation. Returned: long result : 1 if the logical operation returns true. This function performs an AND logical operation, and returns its result. An AND operation returns true if both of the values are non-zero. A B xAnd A B 0 0 0 0 1 0 1 0 0 1 1 1","title":"xAnd"},{"location":"references/mwse-mwscript/logic/#xnot","text":"Parameters: long value : Value for the logical operation. Returned: long result : 1 if the logical operation returns true. This function performs a NOT logical operation, and returns its result. A NOT operation returns true if its parameter is zero. A xNot A 0 1 1 0","title":"xNot"},{"location":"references/mwse-mwscript/logic/#xor","text":"Parameters: long leftValue : First value for the logical operation. long rightValue : Second value for the logical operation. Returned: long result : 1 if the logical operation returns true. This function performs an OR logical operation, and returns its result. An OR operation returns true if either of the values are non-zero. A B xOr A B 0 0 0 0 1 1 1 0 1 1 1 1","title":"xOr"},{"location":"references/mwse-mwscript/logic/#xxor","text":"Parameters: long leftValue : First value for the logical operation. long rightValue : Second value for the logical operation. Returned: long result : 1 if the logical operation returns true. This function performs an XOR logical operation, and returns its result. An XOR operation returns true if one of the values is non-zero, but not both. A B xXor A B 0 0 0 0 1 1 1 0 1 1 1 0","title":"xXor"},{"location":"references/mwse-mwscript/lua/","text":"Lua Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xLuaRunScript \u2693\ufe0e Parameters: string script : The name of the script to run. This is relative to Data Files\\MWSE\\mods . varies (many) parameters : Values that the lua script can access. Returned: varies (many) results : Values that the lua script passes back. This function allows calling code from an external lua file. This call is blocking. Unlike other MWSE functions, this one requires the author to manage the parameter stack via Lua. This makes for slightly more complicated scripting, but allows for this function to create shared logic. Custom functions can be written out to Lua files and invoked with this method. Example In this example we will create some values, log them, send them to Lua, confirm that we got the values, send more values back, and confirm our results. This demonstrates how to send information back and forth between the xLuaRunScript call and Lua. First, our mwscript: Begin luaexec short myShort long myLong float myFloat long myString short retShort long retLong float retFloat long retString set myShort to 1 setx myLong to xRandomLong 0 2147483647 setx myFloat to xRandomFloat 0 1 setx myString to xStringBuild \"Hello World!\" xLogMessage \"[luaexec|mwscript] Sending values: %d, %d, %f, '%s'\" myShort myLong myFloat myString setx retShort retLong retFloat retString to xLuaRunScript \"test_mod\\\\luaexec\" myShort myLong myFloat myString xLogMessage \"[luaexec|mwscript] Got results: %d, %d, %f, '%s'\" retShort, retLong, retFloat, retString StopScript luaexec End Next, we have our Lua file ( Data Files\\mods\\test_mod\\luaexec.lua ) that gets the data, prints it, and sends more back. local myShort = mwse . stack . popShort () local myLong = mwse . stack . popLong () local myFloat = mwse . stack . popFloat () local myString = mwse . stack . popString () print ( string.format ( \"[luaexec|lua] Got values: %d, %d, %f, '%s'\" , myShort , myLong , myFloat , myString )) mwse . stack . pushString ( \"poop\" ) mwse . stack . pushFloat ( 3.14 ) mwse . stack . pushLong ( 512 ) mwse . stack . pushShort ( 4 ) print ( \"[luaexec|lua] Sending back values: 4, 512, 3.14, 'poop'\" )","title":"Lua Functions"},{"location":"references/mwse-mwscript/lua/#lua-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Lua Functions"},{"location":"references/mwse-mwscript/lua/#xluarunscript","text":"Parameters: string script : The name of the script to run. This is relative to Data Files\\MWSE\\mods . varies (many) parameters : Values that the lua script can access. Returned: varies (many) results : Values that the lua script passes back. This function allows calling code from an external lua file. This call is blocking. Unlike other MWSE functions, this one requires the author to manage the parameter stack via Lua. This makes for slightly more complicated scripting, but allows for this function to create shared logic. Custom functions can be written out to Lua files and invoked with this method. Example In this example we will create some values, log them, send them to Lua, confirm that we got the values, send more values back, and confirm our results. This demonstrates how to send information back and forth between the xLuaRunScript call and Lua. First, our mwscript: Begin luaexec short myShort long myLong float myFloat long myString short retShort long retLong float retFloat long retString set myShort to 1 setx myLong to xRandomLong 0 2147483647 setx myFloat to xRandomFloat 0 1 setx myString to xStringBuild \"Hello World!\" xLogMessage \"[luaexec|mwscript] Sending values: %d, %d, %f, '%s'\" myShort myLong myFloat myString setx retShort retLong retFloat retString to xLuaRunScript \"test_mod\\\\luaexec\" myShort myLong myFloat myString xLogMessage \"[luaexec|mwscript] Got results: %d, %d, %f, '%s'\" retShort, retLong, retFloat, retString StopScript luaexec End Next, we have our Lua file ( Data Files\\mods\\test_mod\\luaexec.lua ) that gets the data, prints it, and sends more back. local myShort = mwse . stack . popShort () local myLong = mwse . stack . popLong () local myFloat = mwse . stack . popFloat () local myString = mwse . stack . popString () print ( string.format ( \"[luaexec|lua] Got values: %d, %d, %f, '%s'\" , myShort , myLong , myFloat , myString )) mwse . stack . pushString ( \"poop\" ) mwse . stack . pushFloat ( 3.14 ) mwse . stack . pushLong ( 512 ) mwse . stack . pushShort ( 4 ) print ( \"[luaexec|lua] Sending back values: 4, 512, 3.14, 'poop'\" )","title":"xLuaRunScript"},{"location":"references/mwse-mwscript/magic/","text":"Magic Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xAddEffect \u2693\ufe0e Parameters: long objectType : Object Type value for the target's type. string objectID : Object ID of target spell, enchantment, or potion. long effectID : Magic Effect ID that will be added to the target. long skillAttributeID : Skill or Attribute ID to be used. (Only for absorb/damage/drain/fortify/restore effects - ignored otherwise.) long rangeType : New range type. (0 = SELF, 1 = TOUCH, 2 = TARGET) long area : Area of effect. long duration : Duration in seconds. long magMin : Minimum magnitude. long magMax : Maximum magnitude. Returned: long success : 1 if the effect was added, or 0 if it wasn't. Adds a new effect to the given spell, enchantment, or potion. Example begin Example_xAddEffect short result ; Fire Damage (14), On Touch (1), Duration (30), Magnitude (1 to 5) setx result to xAddEffect 1279610963 \"fire bite\" 14 0 1 0 30 1 5 if ( result != 0 ) MessageBox \"Your 'Fire Bite' spell has been upgraded!\" endif StopScript Example_xAddEffect end xCreateSpell \u2693\ufe0e Parameters: string ID : The object ID of the spell to create. string name : The name of the spell to create. Returned: long wasCreated : 1 if the spell was successfully created. Creates a new spell with all flags cleared, origin set to spellmaker ( 2 ) and a single Water Breathing effect and adds it to the master spell list. Note This function will fail if ID already exists or if either ID or name are longer than 31 characters. xDeleteEffect \u2693\ufe0e Parameters: long type : The Object Type to delete an effect from. Must be an alchemy, spell, or enchantment object. string id : The object ID to remove an effect from. long index : The index of the effect to remove. Must be between (inclusive) 1 and 8 . Returned: long result : 1 if the effect was deleted. Removes the effect at index from the given spell or enchantment. Other effects are reordered, e.g. if effect 1 is removed, effect 2 becomes 1 , 3 becomes 2 , etc. xDeleteSpell \u2693\ufe0e Parameters: long type : The Object Type to delete an effect from. Must be an alchemy, spell, or enchantment object. string id : The object ID to remove an effect from. long index : The index of the effect to remove. Must be between (inclusive) 1 and 8 . Returned: long result : 1 if the spell was deleted. Deletes a spell from the master spell list. It will no longer persist in save games. Notes: Be very careful using this command. The effect of deleting a spell originating from the CS is undefined. The effect of deleting a spell referenced by other entities (player, npcs, traps, etc.) in undefined. Do not attempt to add a deleted spell with AddSpell. AddSpell will succeed, but leave the game in an indeterminate state. It's not yet clear why this happens, but I hope to fix it in the future. xGetAlchemyInfo \u2693\ufe0e Parameters: string id : ID of the alchemy item to get information for. Returned: long effectCount : The number of effects on the alchemy item, between 1 and 8 . long flags : 1 = autocalc, 2 = PC Start, 4 = Always Succeeds Provides information important to a given alchemy object. Unlike the other related functions, there is no associated ability to set this information. The effects themselves can still be retrieved and modified using xGetEffectInfo and xSetEffectInfo . Tip Use this function to determine the state of a potion before modifying it with xAddEffect , xDeleteEffect or xSetEffectInfo . Example begin Example_xGetAlchemyInfo long numEffects long flags setx numEffects flags to xGetAlchemyInfo \"potion_skooma_01\" MessageBox \"flags: %g\" flags MessageBox \"numEffects: %g\" numEffects MessageBox \"potion_skooma_01\" end xGetBaseEffectInfo \u2693\ufe0e Parameters: long attributeID : The School ID to get the value of. Returned: long school : The School of the effect. float baseCost : The base cost of the effect. long flags : The flags of the effect. Returns the properties of a magic effect. This function only supports the player and NPCs. xGetEffectInfo \u2693\ufe0e Parameters: long type : The Object Type to get the effect of. string objectID : The Object ID of the object to get the effect of. long index : The effect index to get the info from, from 1 to 8. Returned: long effectId : The Effect ID _ of the effect. long skillAttribId : The Attribute or Skill ID associated with the effect, if applicable. long rangeType : 0 = self, 1 = touch, 2 = target long area : Area of effect. long duration : Duration in seconds. long magMin : Minimum magnitude. long magMax : Maximum magnitude. Returns the properties of an effect on the given alchemy item, spell, or enchantment. On failure, effectId is set to -1 . xGetEnchantInfo \u2693\ufe0e Parameters: string objectID : The Object ID of the enchantment. Returned: short type : 0 = Cast Once, 1 = Cast When Strikes, 2 = Cast When Used, 3 = Constant short cost : The cost of using the enchantment. long maxCharge : The maximum charge for the enchantment. short numEffects : The number of effects on the enchantment. long autocalc : 0 = off, 1 = on Returns info about the given enchantId , or 0 if enchantId is invalid. xGetIngredientEffect \u2693\ufe0e Parameters: string id : The id of the ingredient to fetch data for. long effectIndex : A value between 1 and 4, matching the effect index desired. Returned: long effectType : The Effect Type that the ingredient has at the given effectIndex . long skillAttributeType : The Attribute Type or Skill Type , if the effectType supports one. Otherwise will always be -1. This function allows scripts to determine the effects of a given ingredient programmatically. Scripts can alter these values as well using xSetIngredientEffect . Example begin Example_xGetIngredientEffect long effect long skillAttribute setx effect skillAttribute to xGetIngredientEffect \"food_kwama_egg_01\" 1 MessageBox \"skill / attribute: %g\" skillAttribute MessageBox \"effect: %g\" effectID MessageBox \"food_kwama_egg_01\" end xGetSpellInfo \u2693\ufe0e Parameters: string objectID : The object ID of the spell to get information from. Returned: string name : The spell's name. short type : 0 = Spell, 1 = Ability, 2 = Blight, 3 = Disease, 4 = Curse, 5 = Power. short cost : The cost to cast the spell. short numEffects : The number of effects the spell has. long flags : Bit array of spell flags. 1 = Auto-Calc, 2 = PC Starting Spell, 4 = Always Succeeds. This function gets information about a spell, given its objectID . The numEffects value is useful when looping over spell effects using xGetEffectInfo . xSetBaseEffectInfo \u2693\ufe0e Parameters: long effectID : The Magic Effect to modify. long school : New spell School . float cost : New base cost in magicka. long flags : New Magic Effect Flags . Only spellmaking, enchanting, and negative lighting are valid here. All others are ignored. Returned: long result : 1 on success, 0 on failure. This function changes the properties of the effect for all magic that uses it. Changes to school and flags take effect immediately. E.g. if you have a spell with a Fire Damage effect and you change the Fire Damage school to Alteration, casting that spell will raise Alteration instead of Destruction. Likewise, if you clear the Spellmaking or Enchanting flags, Fire Damage will no longer be available at the respective crafter. Changes to the base cost take effect on any subsequent spell or magic item creation, but don't affect any spells or items already in the game. xSetEffectInfo \u2693\ufe0e Parameters: long type : The Object Type of the object to alter. string id : The object ID of the object to alter. long index : The index of the effect to alter. long effectID : The Effect Type to change to. long skillOrAttributeID : The Attribute or Skill ID to use, if the effectID uses one. long rangeType : 0 = self, 1 = touch, 2 = target. long area : Area of effect. long duration : Effect duration (in seconds). long minimumMagnitude : Minimum magnitude. long maximumMagnitude : Maximum magnitude. Returned: long result : 1 on success, 0 on failure. Modifies an existing effect on the given spell or enchantment. xSetEnchantInfo \u2693\ufe0e Parameters: string enchantID : Object ID of the enchantment to modify. long type : 0 = cast once, 1 = cast when strikes, 2 = cast when used, 3 = constant. long cost : New cost per use. long charge : New maximum charge. long autoCalc : 0 = off, 1 = on. Returned: long result : 1 on success, 0 on failure. Sets the properties of the given enchantId . xSetIngredientEffect \u2693\ufe0e Parameters: string id : The id of the ingredient to fetch data for. long effectIndex : A value between 1 and 4 , matching the effect index desired. long effectType : The Effect Type that the ingredient has at the given effectIndex . long skillAttributeType : The Attribute Type or Skill Type , if the effectType supports one. Returned: long success : If the effect was set, this value is 1 . If it failed, the value is 0 . This function allows scripts to modify the effects of an ingredient programmatically. To instead retrieve these values, use xGetIngredientEffect . ??? example Set an ingredient's first effect. begin WheatAllergy long ingred long index long effect long attrib setx ingred to xStringBuild \"ingred_bread_01\" set index to 1 ; First Slot set effect to 22 ; Damage Attribute set attrib to 0 ; Strength xSetIngredientEffect ingred index effect attrib ; in this case, we could've also used literals xSetIngredientEffect \"ingred_bread_01\" 1 22 0 ; needs to run only once per session StopScript WheatAllergy end xSetSpellInfo \u2693\ufe0e Parameters: string spellID : The spell ID to modify. string spellName : New display name. Names longer than 31 characters will be truncated. long type : New spell type. ( 0 = spell, 1 = ability, 2 = blight, 3 = disease, 4 = curse, 5 = power) long cost : New magicka cost. long flags : New flags. ( 1 = autocalc, 2 = player start, 4 = always succeeds) long origin : New origin. ( 1 = module, not saved in .ess; 2 = spellmaker, saved in .ess; 0 to leave unmodified) Returned: short result : 1 if the function was successfull, other wise 0 .","title":"Magic Functions"},{"location":"references/mwse-mwscript/magic/#magic-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Magic Functions"},{"location":"references/mwse-mwscript/magic/#xaddeffect","text":"Parameters: long objectType : Object Type value for the target's type. string objectID : Object ID of target spell, enchantment, or potion. long effectID : Magic Effect ID that will be added to the target. long skillAttributeID : Skill or Attribute ID to be used. (Only for absorb/damage/drain/fortify/restore effects - ignored otherwise.) long rangeType : New range type. (0 = SELF, 1 = TOUCH, 2 = TARGET) long area : Area of effect. long duration : Duration in seconds. long magMin : Minimum magnitude. long magMax : Maximum magnitude. Returned: long success : 1 if the effect was added, or 0 if it wasn't. Adds a new effect to the given spell, enchantment, or potion. Example begin Example_xAddEffect short result ; Fire Damage (14), On Touch (1), Duration (30), Magnitude (1 to 5) setx result to xAddEffect 1279610963 \"fire bite\" 14 0 1 0 30 1 5 if ( result != 0 ) MessageBox \"Your 'Fire Bite' spell has been upgraded!\" endif StopScript Example_xAddEffect end","title":"xAddEffect"},{"location":"references/mwse-mwscript/magic/#xcreatespell","text":"Parameters: string ID : The object ID of the spell to create. string name : The name of the spell to create. Returned: long wasCreated : 1 if the spell was successfully created. Creates a new spell with all flags cleared, origin set to spellmaker ( 2 ) and a single Water Breathing effect and adds it to the master spell list. Note This function will fail if ID already exists or if either ID or name are longer than 31 characters.","title":"xCreateSpell"},{"location":"references/mwse-mwscript/magic/#xdeleteeffect","text":"Parameters: long type : The Object Type to delete an effect from. Must be an alchemy, spell, or enchantment object. string id : The object ID to remove an effect from. long index : The index of the effect to remove. Must be between (inclusive) 1 and 8 . Returned: long result : 1 if the effect was deleted. Removes the effect at index from the given spell or enchantment. Other effects are reordered, e.g. if effect 1 is removed, effect 2 becomes 1 , 3 becomes 2 , etc.","title":"xDeleteEffect"},{"location":"references/mwse-mwscript/magic/#xdeletespell","text":"Parameters: long type : The Object Type to delete an effect from. Must be an alchemy, spell, or enchantment object. string id : The object ID to remove an effect from. long index : The index of the effect to remove. Must be between (inclusive) 1 and 8 . Returned: long result : 1 if the spell was deleted. Deletes a spell from the master spell list. It will no longer persist in save games. Notes: Be very careful using this command. The effect of deleting a spell originating from the CS is undefined. The effect of deleting a spell referenced by other entities (player, npcs, traps, etc.) in undefined. Do not attempt to add a deleted spell with AddSpell. AddSpell will succeed, but leave the game in an indeterminate state. It's not yet clear why this happens, but I hope to fix it in the future.","title":"xDeleteSpell"},{"location":"references/mwse-mwscript/magic/#xgetalchemyinfo","text":"Parameters: string id : ID of the alchemy item to get information for. Returned: long effectCount : The number of effects on the alchemy item, between 1 and 8 . long flags : 1 = autocalc, 2 = PC Start, 4 = Always Succeeds Provides information important to a given alchemy object. Unlike the other related functions, there is no associated ability to set this information. The effects themselves can still be retrieved and modified using xGetEffectInfo and xSetEffectInfo . Tip Use this function to determine the state of a potion before modifying it with xAddEffect , xDeleteEffect or xSetEffectInfo . Example begin Example_xGetAlchemyInfo long numEffects long flags setx numEffects flags to xGetAlchemyInfo \"potion_skooma_01\" MessageBox \"flags: %g\" flags MessageBox \"numEffects: %g\" numEffects MessageBox \"potion_skooma_01\" end","title":"xGetAlchemyInfo"},{"location":"references/mwse-mwscript/magic/#xgetbaseeffectinfo","text":"Parameters: long attributeID : The School ID to get the value of. Returned: long school : The School of the effect. float baseCost : The base cost of the effect. long flags : The flags of the effect. Returns the properties of a magic effect. This function only supports the player and NPCs.","title":"xGetBaseEffectInfo"},{"location":"references/mwse-mwscript/magic/#xgeteffectinfo","text":"Parameters: long type : The Object Type to get the effect of. string objectID : The Object ID of the object to get the effect of. long index : The effect index to get the info from, from 1 to 8. Returned: long effectId : The Effect ID _ of the effect. long skillAttribId : The Attribute or Skill ID associated with the effect, if applicable. long rangeType : 0 = self, 1 = touch, 2 = target long area : Area of effect. long duration : Duration in seconds. long magMin : Minimum magnitude. long magMax : Maximum magnitude. Returns the properties of an effect on the given alchemy item, spell, or enchantment. On failure, effectId is set to -1 .","title":"xGetEffectInfo"},{"location":"references/mwse-mwscript/magic/#xgetenchantinfo","text":"Parameters: string objectID : The Object ID of the enchantment. Returned: short type : 0 = Cast Once, 1 = Cast When Strikes, 2 = Cast When Used, 3 = Constant short cost : The cost of using the enchantment. long maxCharge : The maximum charge for the enchantment. short numEffects : The number of effects on the enchantment. long autocalc : 0 = off, 1 = on Returns info about the given enchantId , or 0 if enchantId is invalid.","title":"xGetEnchantInfo"},{"location":"references/mwse-mwscript/magic/#xgetingredienteffect","text":"Parameters: string id : The id of the ingredient to fetch data for. long effectIndex : A value between 1 and 4, matching the effect index desired. Returned: long effectType : The Effect Type that the ingredient has at the given effectIndex . long skillAttributeType : The Attribute Type or Skill Type , if the effectType supports one. Otherwise will always be -1. This function allows scripts to determine the effects of a given ingredient programmatically. Scripts can alter these values as well using xSetIngredientEffect . Example begin Example_xGetIngredientEffect long effect long skillAttribute setx effect skillAttribute to xGetIngredientEffect \"food_kwama_egg_01\" 1 MessageBox \"skill / attribute: %g\" skillAttribute MessageBox \"effect: %g\" effectID MessageBox \"food_kwama_egg_01\" end","title":"xGetIngredientEffect"},{"location":"references/mwse-mwscript/magic/#xgetspellinfo","text":"Parameters: string objectID : The object ID of the spell to get information from. Returned: string name : The spell's name. short type : 0 = Spell, 1 = Ability, 2 = Blight, 3 = Disease, 4 = Curse, 5 = Power. short cost : The cost to cast the spell. short numEffects : The number of effects the spell has. long flags : Bit array of spell flags. 1 = Auto-Calc, 2 = PC Starting Spell, 4 = Always Succeeds. This function gets information about a spell, given its objectID . The numEffects value is useful when looping over spell effects using xGetEffectInfo .","title":"xGetSpellInfo"},{"location":"references/mwse-mwscript/magic/#xsetbaseeffectinfo","text":"Parameters: long effectID : The Magic Effect to modify. long school : New spell School . float cost : New base cost in magicka. long flags : New Magic Effect Flags . Only spellmaking, enchanting, and negative lighting are valid here. All others are ignored. Returned: long result : 1 on success, 0 on failure. This function changes the properties of the effect for all magic that uses it. Changes to school and flags take effect immediately. E.g. if you have a spell with a Fire Damage effect and you change the Fire Damage school to Alteration, casting that spell will raise Alteration instead of Destruction. Likewise, if you clear the Spellmaking or Enchanting flags, Fire Damage will no longer be available at the respective crafter. Changes to the base cost take effect on any subsequent spell or magic item creation, but don't affect any spells or items already in the game.","title":"xSetBaseEffectInfo"},{"location":"references/mwse-mwscript/magic/#xseteffectinfo","text":"Parameters: long type : The Object Type of the object to alter. string id : The object ID of the object to alter. long index : The index of the effect to alter. long effectID : The Effect Type to change to. long skillOrAttributeID : The Attribute or Skill ID to use, if the effectID uses one. long rangeType : 0 = self, 1 = touch, 2 = target. long area : Area of effect. long duration : Effect duration (in seconds). long minimumMagnitude : Minimum magnitude. long maximumMagnitude : Maximum magnitude. Returned: long result : 1 on success, 0 on failure. Modifies an existing effect on the given spell or enchantment.","title":"xSetEffectInfo"},{"location":"references/mwse-mwscript/magic/#xsetenchantinfo","text":"Parameters: string enchantID : Object ID of the enchantment to modify. long type : 0 = cast once, 1 = cast when strikes, 2 = cast when used, 3 = constant. long cost : New cost per use. long charge : New maximum charge. long autoCalc : 0 = off, 1 = on. Returned: long result : 1 on success, 0 on failure. Sets the properties of the given enchantId .","title":"xSetEnchantInfo"},{"location":"references/mwse-mwscript/magic/#xsetingredienteffect","text":"Parameters: string id : The id of the ingredient to fetch data for. long effectIndex : A value between 1 and 4 , matching the effect index desired. long effectType : The Effect Type that the ingredient has at the given effectIndex . long skillAttributeType : The Attribute Type or Skill Type , if the effectType supports one. Returned: long success : If the effect was set, this value is 1 . If it failed, the value is 0 . This function allows scripts to modify the effects of an ingredient programmatically. To instead retrieve these values, use xGetIngredientEffect . ??? example Set an ingredient's first effect. begin WheatAllergy long ingred long index long effect long attrib setx ingred to xStringBuild \"ingred_bread_01\" set index to 1 ; First Slot set effect to 22 ; Damage Attribute set attrib to 0 ; Strength xSetIngredientEffect ingred index effect attrib ; in this case, we could've also used literals xSetIngredientEffect \"ingred_bread_01\" 1 22 0 ; needs to run only once per session StopScript WheatAllergy end","title":"xSetIngredientEffect"},{"location":"references/mwse-mwscript/magic/#xsetspellinfo","text":"Parameters: string spellID : The spell ID to modify. string spellName : New display name. Names longer than 31 characters will be truncated. long type : New spell type. ( 0 = spell, 1 = ability, 2 = blight, 3 = disease, 4 = curse, 5 = power) long cost : New magicka cost. long flags : New flags. ( 1 = autocalc, 2 = player start, 4 = always succeeds) long origin : New origin. ( 1 = module, not saved in .ess; 2 = spellmaker, saved in .ess; 0 to leave unmodified) Returned: short result : 1 if the function was successfull, other wise 0 .","title":"xSetSpellInfo"},{"location":"references/mwse-mwscript/math/","text":"Math Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xArcCos \u2693\ufe0e Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the inverse trigonometric function arccosine on the given angle . xArcSin \u2693\ufe0e Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the inverse trigonometric function arcsine on the given angle . xArcTan \u2693\ufe0e Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the inverse trigonometric function arctangent on the given angle . xArcTan2 \u2693\ufe0e Parameters: float x : The angle to take the trigonometric function of. float y : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the inverse trigonometric function arctan2 on y / x . xBitAnd \u2693\ufe0e Parameters: long leftValue : First value for the bitwise operation. long rightValue : Second value for the bitwise operation. Returned: long result : 1 if the bitwise operation returns true. This function performs an AND bitwise operation, and returns its result. A B xBitAnd A B 0000 0000 0000 0101 1010 0000 1100 1111 1100 1111 0000 0000 xBitNot \u2693\ufe0e Parameters: long leftValue : Value for the bitwise operation. Returned: long result : 1 if the bitwise operation returns true. This function performs a NOT bitwise operation, and returns its result. A xBitNot A 0000 1111 0101 1010 1100 0011 1111 0000 xBitOr \u2693\ufe0e Parameters: long leftValue : First value for the bitwise operation. long rightValue : Second value for the bitwise operation. Returned: long result : 1 if the bitwise operation returns true. This function performs an OR bitwise operation, and returns its result. A B xBitOr A B 0000 0000 0000 0101 1010 1111 1100 1111 1111 1111 0000 1111 xBitXor \u2693\ufe0e Parameters: long leftValue : First value for the bitwise operation. long rightValue : Second value for the bitwise operation. Returned: long result : 1 if the bitwise operation returns true. This function performs an XOR bitwise operation, and returns its result. A B xBitXor A B 0000 0000 0000 0101 1010 1111 1100 1111 0011 1111 0000 1111 xCos \u2693\ufe0e Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the trigonometric function cosine on the given angle . xDegRad \u2693\ufe0e Parameters: float angle : An angle, in degrees. Returned: float result : The value of angle in radians. This simple function converts from degrees to radians. xFloatsToLong \u2693\ufe0e Parameters: float value1 : First value. Order doesn't matter. float value2 : Second value. Order doesn't matter. Returned: long result : Merged value from value1 and value2 . This function retrieves a long value using a pair of floats. It is intended to work around the issue that all globals are really floats. This work by splitting the long 32-bit value into two 16-bit values and adding a flag to indicate which value maps to the high 16 bits. Argument order doesn't matter. Warning MWEdit doesn't like to compile these functions with globals as arguments, and temporary locals will need to be used instead. Example long lVal1 long lVal2 float fVal1 float fVal2 set lVal1 to 2147483647 setx fVal1 fVal2 to xLongToFloats lVal1 setx lVal2 to xFloatsToLong fVal1 fVal2 if ( lVal1 == lVal2 ) MessageBox \"Success!\" else MessageBox \"Failure!\" endif Hypot \u2693\ufe0e Parameters: float x : float y : Returned: float hypotenuse : xHypot returns the hypotenuse for sides a and b, c = sqrt(a a + b b). Unlike xSqrt this is more efficient than calculating the formula inside the script. xLongToFloats \u2693\ufe0e Parameters: long value : Value to split. Returned: float result1 : First half of the split value . float result2 : Second half of the split value . This function stores a long value using a pair of floats. It is intended to work around the issue that all globals are really floats. This work by splitting the long 32-bit value into two 16-bit values and adding a flag to indicate which value maps to the high 16 bits. Argument order doesn't matter. Warning MWEdit doesn't like to compile these functions with globals as arguments, and temporary locals will need to be used instead. Example long lVal1 long lVal2 float fVal1 float fVal2 set lVal1 to 2147483647 setx fVal1 fVal2 to xLongToFloats lVal1 setx lVal2 to xFloatsToLong fVal1 fVal2 if ( lVal1 == lVal2 ) MessageBox \"Success!\" else MessageBox \"Failure!\" endif xPow \u2693\ufe0e Parameters: float base : Base value. float exponent : Exponent to calculate. Returned: float result : Result of the function. Calculates the value of base raised to exponent . xDegRad \u2693\ufe0e Parameters: float angle : An angle, in radians. Returned: float result : The value of angle in degrees. This simple function converts from radians to degrees. xRandomFloat \u2693\ufe0e Parameters: float minimum : Lowest value to return. float maximum : Highest value to return. Returned: float result : A random value between minimum and maximum . This function returns a random float value. xRandomLong \u2693\ufe0e Parameters: long minimum : Lowest value to return. long maximum : Highest value to return. Returned: long result : A random value between minimum and maximum . This function returns a random long value. xShift \u2693\ufe0e Parameters: long value : The value to shift. long magnitude : The number of bits to shift. If negative, the bits will be reverse-shifted. Returned: long result : value , shifted magnitude bits. This function allows shifting a value by a number of bits equal to magnitude . xSin \u2693\ufe0e Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the trigonometric function sine on the given angle . xSqrt \u2693\ufe0e Parameters: float value : Value to take the square root of. Returned: float result : Result of the function. Calculates the square root of value . xTan \u2693\ufe0e Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the trigonometric function tangent on the given angle .","title":"Math Functions"},{"location":"references/mwse-mwscript/math/#math-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Math Functions"},{"location":"references/mwse-mwscript/math/#xarccos","text":"Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the inverse trigonometric function arccosine on the given angle .","title":"xArcCos"},{"location":"references/mwse-mwscript/math/#xarcsin","text":"Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the inverse trigonometric function arcsine on the given angle .","title":"xArcSin"},{"location":"references/mwse-mwscript/math/#xarctan","text":"Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the inverse trigonometric function arctangent on the given angle .","title":"xArcTan"},{"location":"references/mwse-mwscript/math/#xarctan2","text":"Parameters: float x : The angle to take the trigonometric function of. float y : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the inverse trigonometric function arctan2 on y / x .","title":"xArcTan2"},{"location":"references/mwse-mwscript/math/#xbitand","text":"Parameters: long leftValue : First value for the bitwise operation. long rightValue : Second value for the bitwise operation. Returned: long result : 1 if the bitwise operation returns true. This function performs an AND bitwise operation, and returns its result. A B xBitAnd A B 0000 0000 0000 0101 1010 0000 1100 1111 1100 1111 0000 0000","title":"xBitAnd"},{"location":"references/mwse-mwscript/math/#xbitnot","text":"Parameters: long leftValue : Value for the bitwise operation. Returned: long result : 1 if the bitwise operation returns true. This function performs a NOT bitwise operation, and returns its result. A xBitNot A 0000 1111 0101 1010 1100 0011 1111 0000","title":"xBitNot"},{"location":"references/mwse-mwscript/math/#xbitor","text":"Parameters: long leftValue : First value for the bitwise operation. long rightValue : Second value for the bitwise operation. Returned: long result : 1 if the bitwise operation returns true. This function performs an OR bitwise operation, and returns its result. A B xBitOr A B 0000 0000 0000 0101 1010 1111 1100 1111 1111 1111 0000 1111","title":"xBitOr"},{"location":"references/mwse-mwscript/math/#xbitxor","text":"Parameters: long leftValue : First value for the bitwise operation. long rightValue : Second value for the bitwise operation. Returned: long result : 1 if the bitwise operation returns true. This function performs an XOR bitwise operation, and returns its result. A B xBitXor A B 0000 0000 0000 0101 1010 1111 1100 1111 0011 1111 0000 1111","title":"xBitXor"},{"location":"references/mwse-mwscript/math/#xcos","text":"Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the trigonometric function cosine on the given angle .","title":"xCos"},{"location":"references/mwse-mwscript/math/#xdegrad","text":"Parameters: float angle : An angle, in degrees. Returned: float result : The value of angle in radians. This simple function converts from degrees to radians.","title":"xDegRad"},{"location":"references/mwse-mwscript/math/#xfloatstolong","text":"Parameters: float value1 : First value. Order doesn't matter. float value2 : Second value. Order doesn't matter. Returned: long result : Merged value from value1 and value2 . This function retrieves a long value using a pair of floats. It is intended to work around the issue that all globals are really floats. This work by splitting the long 32-bit value into two 16-bit values and adding a flag to indicate which value maps to the high 16 bits. Argument order doesn't matter. Warning MWEdit doesn't like to compile these functions with globals as arguments, and temporary locals will need to be used instead. Example long lVal1 long lVal2 float fVal1 float fVal2 set lVal1 to 2147483647 setx fVal1 fVal2 to xLongToFloats lVal1 setx lVal2 to xFloatsToLong fVal1 fVal2 if ( lVal1 == lVal2 ) MessageBox \"Success!\" else MessageBox \"Failure!\" endif","title":"xFloatsToLong"},{"location":"references/mwse-mwscript/math/#hypot","text":"Parameters: float x : float y : Returned: float hypotenuse : xHypot returns the hypotenuse for sides a and b, c = sqrt(a a + b b). Unlike xSqrt this is more efficient than calculating the formula inside the script.","title":"Hypot"},{"location":"references/mwse-mwscript/math/#xlongtofloats","text":"Parameters: long value : Value to split. Returned: float result1 : First half of the split value . float result2 : Second half of the split value . This function stores a long value using a pair of floats. It is intended to work around the issue that all globals are really floats. This work by splitting the long 32-bit value into two 16-bit values and adding a flag to indicate which value maps to the high 16 bits. Argument order doesn't matter. Warning MWEdit doesn't like to compile these functions with globals as arguments, and temporary locals will need to be used instead. Example long lVal1 long lVal2 float fVal1 float fVal2 set lVal1 to 2147483647 setx fVal1 fVal2 to xLongToFloats lVal1 setx lVal2 to xFloatsToLong fVal1 fVal2 if ( lVal1 == lVal2 ) MessageBox \"Success!\" else MessageBox \"Failure!\" endif","title":"xLongToFloats"},{"location":"references/mwse-mwscript/math/#xpow","text":"Parameters: float base : Base value. float exponent : Exponent to calculate. Returned: float result : Result of the function. Calculates the value of base raised to exponent .","title":"xPow"},{"location":"references/mwse-mwscript/math/#xdegrad_1","text":"Parameters: float angle : An angle, in radians. Returned: float result : The value of angle in degrees. This simple function converts from radians to degrees.","title":"xDegRad"},{"location":"references/mwse-mwscript/math/#xrandomfloat","text":"Parameters: float minimum : Lowest value to return. float maximum : Highest value to return. Returned: float result : A random value between minimum and maximum . This function returns a random float value.","title":"xRandomFloat"},{"location":"references/mwse-mwscript/math/#xrandomlong","text":"Parameters: long minimum : Lowest value to return. long maximum : Highest value to return. Returned: long result : A random value between minimum and maximum . This function returns a random long value.","title":"xRandomLong"},{"location":"references/mwse-mwscript/math/#xshift","text":"Parameters: long value : The value to shift. long magnitude : The number of bits to shift. If negative, the bits will be reverse-shifted. Returned: long result : value , shifted magnitude bits. This function allows shifting a value by a number of bits equal to magnitude .","title":"xShift"},{"location":"references/mwse-mwscript/math/#xsin","text":"Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the trigonometric function sine on the given angle .","title":"xSin"},{"location":"references/mwse-mwscript/math/#xsqrt","text":"Parameters: float value : Value to take the square root of. Returned: float result : Result of the function. Calculates the square root of value .","title":"xSqrt"},{"location":"references/mwse-mwscript/math/#xtan","text":"Parameters: float angle : The angle to take the trigonometric function of. Returned: float result : Result of the function. Provides the trigonometric function tangent on the given angle .","title":"xTan"},{"location":"references/mwse-mwscript/player/","text":"Player Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xGetPCTarget \u2693\ufe0e Parameters: None Returned: long reference : The target reference, or 0 if none was found. Returns a reference to the object in the player's crosshair, or 0 if the player is not looking at anything that can be manipulated. xGetProgressLevel \u2693\ufe0e Parameters: None Returned: long progress : The player's progress to next level. Returns the current progress to the next level. xGetProgressSkill \u2693\ufe0e Parameters: long skillID : The Skill ID to get the progress of. Returned: float raw : Raw skill progress value. float normalized : Normalized skill progress value. Returns the skill progress for the given skill ID. Returned values will be zero if skill ID is invalid. xSetSkillInfo \u2693\ufe0e Parameters: long skillID : 1 if the effect was added, or 0 if it wasn't. Returned: long skillID : ID of the Skill to be modified. long attributeID : ID of the new governing Attribute . long specialization : The new Specialization Type . float action1 : Progress value for the 1st action. float action2 : Progress value for the 2nd action. float action3 : Progress value for the 3rd action. float action4 : Progress value for the 4th action. All parameters seem to take effect immediately. There may be side-effects other than those listed below that I have not discovered yet. Changing the governing attribute will cause any subsequent skill-ups to count toward that attribute at level-up. (Which implies they're counted, not inferred, and could be modified. Stay tuned...) Changing the specialization will cause the target progress needed for skill up to change. This function invokes the native skill-up function when changing specialization, in case the change would cause progress to reach 100. Actions can be set a negative value, in which case they'll remove progress, but progress will never go below zero. Example setx attribute specialization action1 action2 action3 action4 to xGetSkillInfo 9 xModProgressLevel \u2693\ufe0e Parameters: long value : Value added toward the player's progress to next level. Returned: short result : 1 if successful, otherwise 0 . Adds value to the progress to the next player level. If the new progress value is less than zero, it's set to zero instead. Returns non-zero on success, zero on failure. xModProgressSkill \u2693\ufe0e Parameters: long skillID : The Skill ID to modify. float value : The value to modify the skill's progress by. long normalized : flag indicating whether value is raw ( 0 ) or normalized ( 1 ) Returned: short result : 1 if successful, otherwise 0 . Modifies the current progress for the given skill. If the new progress value is less than zero, it's set to zero instead. Returns non-zero on success, zero on failure. This function will fail if skill ID is out of range. xPCCellID \u2693\ufe0e Parameters: None Returned: string cellID : The player's current cell ID. Returns a string containing the name of the current cell. xPlace \u2693\ufe0e Parameters: string objectID : The object ID of the item to add. Returned: reference placedObject : The reference to the placed object. This is based on the vanilla PlaceAtPC function that can take variable objectID . Unlike the original function, xPlace does not allow specifying a count or location for the placed object. xPlace returns a reference to the placedObject that can be used to take further actions or obtain further information. Note Unlike previous version of MWSE, the reference returned from xPlace is immediately available on the same frame it was created. xSetProgressLevel \u2693\ufe0e Parameters: long progress : New value for the player's progress to next level. Returned: short result : 1 if successful, otherwise 0 . Sets the progress to next level. There are some limits to what you can do with this, because of how the game handles this and other values. Progress is stored in memory as a signed long (32 bits, max value = 2147483647 ). Progress is stored in the save file as an unsigned char (8 bits, max value = 255 ). Progress is cast to a float before being displayed on the character screen. This appears to be true for iLevelupTotal as well. xSetProgressSkill \u2693\ufe0e Parameters: long skillID : The Skill ID to modify. float value : The value to set the skill's progress to. long normalized : Flag indicating whether value is raw ( 0 ) or normalized ( 1 ) Returned: short result : 1 if successful, otherwise 0 . Sets the current progress for the given skill. If the new progress value is less than zero, it's set to zero instead. Returns non-zero on success, zero on failure. This function will fail if skill ID is out of range. xSetSkillInfo \u2693\ufe0e Parameters: long skillID : ID of the Skill to be modified. long attributeID : ID of the new governing Attribute . long specialization : The new Specialization Type . float action1 : Progress value for the 1st action. float action2 : Progress value for the 2nd action. float action3 : Progress value for the 3rd action. float action4 : Progress value for the 4th action. Returned: long success : 1 if the effect was added, or 0 if it wasn't. All parameters seem to take effect immediately. There may be side-effects other than those listed below that I have not discovered yet. Changing the governing attribute will cause any subsequent skill-ups to count toward that attribute at level-up. (Which implies they're counted, not inferred, and could be modified. Stay tuned...) Changing the specialization will cause the target progress needed for skill up to change. This function invokes the native skill-up function when changing specialization, in case the change would cause progress to reach 100. Actions can be set a negative value, in which case they'll remove progress, but progress will never go below zero.","title":"Player Functions"},{"location":"references/mwse-mwscript/player/#player-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Player Functions"},{"location":"references/mwse-mwscript/player/#xgetpctarget","text":"Parameters: None Returned: long reference : The target reference, or 0 if none was found. Returns a reference to the object in the player's crosshair, or 0 if the player is not looking at anything that can be manipulated.","title":"xGetPCTarget"},{"location":"references/mwse-mwscript/player/#xgetprogresslevel","text":"Parameters: None Returned: long progress : The player's progress to next level. Returns the current progress to the next level.","title":"xGetProgressLevel"},{"location":"references/mwse-mwscript/player/#xgetprogressskill","text":"Parameters: long skillID : The Skill ID to get the progress of. Returned: float raw : Raw skill progress value. float normalized : Normalized skill progress value. Returns the skill progress for the given skill ID. Returned values will be zero if skill ID is invalid.","title":"xGetProgressSkill"},{"location":"references/mwse-mwscript/player/#xsetskillinfo","text":"Parameters: long skillID : 1 if the effect was added, or 0 if it wasn't. Returned: long skillID : ID of the Skill to be modified. long attributeID : ID of the new governing Attribute . long specialization : The new Specialization Type . float action1 : Progress value for the 1st action. float action2 : Progress value for the 2nd action. float action3 : Progress value for the 3rd action. float action4 : Progress value for the 4th action. All parameters seem to take effect immediately. There may be side-effects other than those listed below that I have not discovered yet. Changing the governing attribute will cause any subsequent skill-ups to count toward that attribute at level-up. (Which implies they're counted, not inferred, and could be modified. Stay tuned...) Changing the specialization will cause the target progress needed for skill up to change. This function invokes the native skill-up function when changing specialization, in case the change would cause progress to reach 100. Actions can be set a negative value, in which case they'll remove progress, but progress will never go below zero. Example setx attribute specialization action1 action2 action3 action4 to xGetSkillInfo 9","title":"xSetSkillInfo"},{"location":"references/mwse-mwscript/player/#xmodprogresslevel","text":"Parameters: long value : Value added toward the player's progress to next level. Returned: short result : 1 if successful, otherwise 0 . Adds value to the progress to the next player level. If the new progress value is less than zero, it's set to zero instead. Returns non-zero on success, zero on failure.","title":"xModProgressLevel"},{"location":"references/mwse-mwscript/player/#xmodprogressskill","text":"Parameters: long skillID : The Skill ID to modify. float value : The value to modify the skill's progress by. long normalized : flag indicating whether value is raw ( 0 ) or normalized ( 1 ) Returned: short result : 1 if successful, otherwise 0 . Modifies the current progress for the given skill. If the new progress value is less than zero, it's set to zero instead. Returns non-zero on success, zero on failure. This function will fail if skill ID is out of range.","title":"xModProgressSkill"},{"location":"references/mwse-mwscript/player/#xpccellid","text":"Parameters: None Returned: string cellID : The player's current cell ID. Returns a string containing the name of the current cell.","title":"xPCCellID"},{"location":"references/mwse-mwscript/player/#xplace","text":"Parameters: string objectID : The object ID of the item to add. Returned: reference placedObject : The reference to the placed object. This is based on the vanilla PlaceAtPC function that can take variable objectID . Unlike the original function, xPlace does not allow specifying a count or location for the placed object. xPlace returns a reference to the placedObject that can be used to take further actions or obtain further information. Note Unlike previous version of MWSE, the reference returned from xPlace is immediately available on the same frame it was created.","title":"xPlace"},{"location":"references/mwse-mwscript/player/#xsetprogresslevel","text":"Parameters: long progress : New value for the player's progress to next level. Returned: short result : 1 if successful, otherwise 0 . Sets the progress to next level. There are some limits to what you can do with this, because of how the game handles this and other values. Progress is stored in memory as a signed long (32 bits, max value = 2147483647 ). Progress is stored in the save file as an unsigned char (8 bits, max value = 255 ). Progress is cast to a float before being displayed on the character screen. This appears to be true for iLevelupTotal as well.","title":"xSetProgressLevel"},{"location":"references/mwse-mwscript/player/#xsetprogressskill","text":"Parameters: long skillID : The Skill ID to modify. float value : The value to set the skill's progress to. long normalized : Flag indicating whether value is raw ( 0 ) or normalized ( 1 ) Returned: short result : 1 if successful, otherwise 0 . Sets the current progress for the given skill. If the new progress value is less than zero, it's set to zero instead. Returns non-zero on success, zero on failure. This function will fail if skill ID is out of range.","title":"xSetProgressSkill"},{"location":"references/mwse-mwscript/player/#xsetskillinfo_1","text":"Parameters: long skillID : ID of the Skill to be modified. long attributeID : ID of the new governing Attribute . long specialization : The new Specialization Type . float action1 : Progress value for the 1st action. float action2 : Progress value for the 2nd action. float action3 : Progress value for the 3rd action. float action4 : Progress value for the 4th action. Returned: long success : 1 if the effect was added, or 0 if it wasn't. All parameters seem to take effect immediately. There may be side-effects other than those listed below that I have not discovered yet. Changing the governing attribute will cause any subsequent skill-ups to count toward that attribute at level-up. (Which implies they're counted, not inferred, and could be modified. Stay tuned...) Changing the specialization will cause the target progress needed for skill up to change. This function invokes the native skill-up function when changing specialization, in case the change would cause progress to reach 100. Actions can be set a negative value, in which case they'll remove progress, but progress will never go below zero.","title":"xSetSkillInfo"},{"location":"references/mwse-mwscript/reference/","text":"Reference Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xAddItem \u2693\ufe0e Parameters: string objectID : The object ID of the item to add. long count : The number of items to add. Returned: None This is a wrapper for the vanilla AddItem function that can take variable input. xDistance \u2693\ufe0e Parameters: reference target : The reference of the target to get the distance from. Returned: float distance : The distance between the calling reference and the target reference. Calculates the distance between the calling reference and target . Note Unlike the vanilla GetDistance function, this function will work on non-actors. Distance from PC Target This example calculates the distance between the PC and what they are looking at. begin DistanceToTarget long pcRef long targetRef float distance setx pcRef to xGetRef \"player\" setx targetRef to xGetPCTarget setx distance to pcRef->xDistance targetRef end xExplodeSpell \u2693\ufe0e Parameters: string objectID : The object ID of the spell to explode. Returned: None This is a wrapper for the vanilla ExplodeSpell function that can take variable input. xGetBaseID \u2693\ufe0e Parameters: None Returned: string id : The reference's base object ID. xGetBaseID returns reference's base object ID. In contrast to xRefID , this function will not include the hexadecimal suffix that identifies unique instances of containers, creatures, or NPCs. For example, where xRefID would return \"Fargoth00000000\" , xGetBaseID would instead return just \"Fargoth\" . xGetCharge \u2693\ufe0e Parameters: None Returned: float charge : The current charge on a item. Returns the current charge on a 'cast when used' or 'cast when strikes' enchanted item. Constant effect and non-enchanted items return 0 . xGetCondition \u2693\ufe0e Parameters: None Returned: float condition : The current condition on a item. Returns the current condition for armor and weapons and remaining uses for lockpicks, probes, and repair tools. xGetEnchant \u2693\ufe0e Parameters: None Returned: string enchantID : The Object ID of the enchantment. short type : The type of the enchantment. 0 = Cast Once, 1 = Cast on Strike, 2 = Cast on Use, 3 = Constant short cost : The cost of the enchantment. float currentCharge : The current charge for the enchantment. long maxCharge : The maximum charge for the enchantment. short numEffect : The number of effects on the enchantment. long autocalc : 1 if the enchantment is auto-calculated. Returns info about the enchantment on the target item, or 0 if no enchantment is present. xGetEncumb \u2693\ufe0e Parameters: None Returned: float weight : The weight, in pounds, of all the reference's inventory. This value is negative if leveled items are present. Calculates the total, unmodified encumbrance of the target reference's inventory. This function does not take into account any feather or burden spell effects. Note If the target has any leveled items in its inventory, the returned weight is negative. xGetItemCount \u2693\ufe0e Parameters: string objectId : The item's object ID to get the count of. Returned: long itemCount : The number of items that the reference has. This is a wrapper function around GetItemCount that allows variable input. Example begin Example_xGetItemCount long ref long id long count setx ref to xGetRef \"player\" setx id to xStringBuild \"Gold_001\" setx count to ref->xGetItemCount id MessageBox \"Total Gold: %g\" count StopScript Example_xGetItemCount end xGetLockLevel \u2693\ufe0e Parameters: None Returned: short lockLevel : The reference's lock level, or -1 if none was found. Returns the lock level of a door or container. This function returns -1 for doors/containers that have never been locked and for items that aren't doors or containers. This returns the lock level regardless of whether the item is locked or unlocked. Use GetLocked to determine the state of the lock. Lock level is stored as a signed short (16 bits, max value = 32,767). Values less than 0 do not survive saving, exiting, and reloading. They are converted to their absolute value and the door/container is flagged as unlocked. xGetMaxCharge \u2693\ufe0e Parameters: None Returned: float maxCharge : The current charge on a item. Returns the maximum charge on an enchanted item. xGetMaxCondition \u2693\ufe0e Parameters: None Returned: float maxCondition : The current maximum condition on a item. Returns the maxium condition for armor and weapons and maximum uses for lockpicks, probes, and repair tools. xGetModel \u2693\ufe0e Parameters: string objectId : The object ID to get the model of. If 0, the reference will be used. Returned: string modelPath : The path to the model. This function returns the model of an object. This can be done by passing a string for the object Id, or 0 can be passed to use the script's reference. Note The path returned does not include the Data Files\\models prefix. Get Model by Object ID begin Example_xGetModelById long model setx model to xGetModel \"ingred_bonemeal_01\" if ( model == 0 ) return endif xMessageFix \"Model: %s\" model MessageBox \"Model: ________________________________\" end Get Model by Reference begin Example_xGetModelByRef long ref long model setx ref to xGetPCTarget if ( ref == 0 ) return endif setx model to ref->xGetModel 0 if ( model == 0 ) return endif xMessageFix \"Model: %s\" model MessageBox \"Model: ________________________________\" end xGetName \u2693\ufe0e Parameters: None Returned: string name : The reference's name, or 0 if no name was found. xGetName returns a string containing the name (suitable for display, not the objectid) for the object or 0 if the object doesn't have a name. The NPC who falls from the sky near Seyda Neen has an object id of \"agronian guy\" but his name is \"Tarhiel\" when you look at his corpse. xGetOwnerInfo \u2693\ufe0e Parameters: None Returned: string owner : The object ID of the NPC or faction owner of the object. long or string condition : If owned by a faction, this is a long indicating the required rank. If this is an NPC this value is either 0, or a string for the global variable to check. long type : The Object Type of owner , either NPC or Faction. Ownership of entities in the world in Morrowind is comprised of two parts: owner and condition (this can specify when the player being detected taking or using the entity is not considered a crime). These work in two modes: The first is where owner is an NPC ID, and condition is a global variable - while the global var is set to a non-zero value, activating the entity is never considered a crime. In the second mode, owner is a faction id, and condition is a rank within it. If the player has equal (or higher) rank in that faction, then he can be seen using or taking the entity without it being a crime. This is how supply chests and beds in guildhalls work (their rank requirement is the minimal rank). This function allows getting full ownership information of an entity: both parts, whatever they may be (as well as what mode is used for the ownership). It is more in-depth than the xGetOwner function, which does not fully handle faction ownership or ownership with a global var requirement. Tip If the returned condition is a global variable, it can be used with xGetGlobal and xSetGlobal . Boobytrapped Mages Guild and Telvanni faction containers begin boobycontainers ;if the player tries to open a container owned by either MG or GHT that he ;doesn't have the required rank to legally take items from, then instead of ;the container opening, the player will be zapped. short framecount short temp short player_rank long pctarget long type long own_id long own_cond if ( MenuMode ) return endif set framecount to ( framecount + 1 ) if ( framecount < 30 ) return endif set framecount to 0 setx pctarget to xGetPCTarget ifx ( pctarget ) setx type to pctarget->xRefType if ( type != 1414418243 ) ;if it's not a container ref type return endif setx type own_id own_cond to pctarget->xGetOwnerInfo if ( type != 1413693766 ) ;if it's not a faction ownership type return endif setx temp to xStringCompare own_id \"Mages Guild\" ;if the owner of the container is MG, temp will be 0 ifx ( temp ) ;not MG setx temp to xStringCompare own_id \"Telvanni\" ifx ( temp ) ;owner is not MG and not GHT, either return endif ;owner is GHT set player_rank to GetPCRank \"Telvanni\" ;doesn't hurt here, but remember 0 and -1 are both possible return values of this function else ;owner is MG set player_rank to GetPCRank \"Mages Guild\" endif set temp to 0 if ( player_rank >= own_cond ) ;player is of the right rank in whichever faction to be able to claim the container's contents set temp to 1 endif ifx ( temp ) ;originally, there was only a return here. ;the following block is needed in case activation was already blocked by the OnActivate call (the 2nd instance of it, now) on a previous run, but the player since raised in rank enough; without this line, the player will no longer get the trap, but the container may not open (as it normally should), either xSetRef pctarget set temp to OnActivate ifx ( temp ) pctarget->Activate endif return endif ;if reached here, player doesn't meet rank requirement xSetRef pctarget if ( OnActivate ) ;merely CALLING this function will block any further normal activation attempts. it makes the object's activation temporarily only possible through the Activate function MessageBox \"A trap is sprung!\" set temp to - ( player->GetFatigue + 1 ) player->ModCurrentFatigue temp ;makes player fall down (\"knocked out\") briefly - causes current fatigue to be -1 player->PlaySound \"destruction hit\" endif endif end World entity destruction with ownership penalty begin entitydestruction ;allows the player to destroy objects in the world by striking at them with ;a weapon (or barehanded). but if the player wouldn't have been (legally) allowed to pick up that ;object, he gets a bounty as if he stole it (with respect to the GMST that controls the bounty amount for theft). ;the value of containers is assumed to be only the value of all the items within them. ;the value of doors is assumed to be 100 septims, and of activators, 200 septims. ;this script doesn't take into account whether player is detected (sneaking, invisible), ;etc. well, he's doing a loud and incriminating action, anyway. ;it doesn't do faction expulsion, either... short framecount short update_col long temp long pctarget long type long value long nextref long invvalue long invcount long ownerid long condition float glob ;note: in this script, existing vars are often reused, so that a bunch of ;vars are also used for other purposes than their name suggests. ;for example, because it is the only float and there's no problem with ;overwriting it, 'glob' is used to (temporarily) hold both the result of ;a reading of a global var, and also of reading a float GMST. if ( MenuMode ) return endif set framecount to ( framecount + 1 ) if ( framecount < timing1 ) return endif set framecount to 0 if ( player->GetWeaponDrawn == 0 ) return endif if ( player->GetWeaponType == 0 ) return ;ignore lockpicks and probes; unfortuantely this also applies to Short Blades... endif setx temp to xKeyPressed 1 ;left mouse button setx pctarget to xGetPCTarget setx temp to xAnd temp pctarget;if player looking at something AND pressing LMB, temp will be 1 if ( temp == 0 ) return endif ;you should also be able to just use 'if ( player->GetSoundPlaying \"weapon swish\" )' instead, to check ;if the player is making a strike, at least on machines where GetSoundPlaying works fine. ;you'd also be able to automatically support all swinging weapons, then. setx type to pctarget->xRefType set value to 0 set nextref to 0 if ( type == 1598246990 ) ;NPC return elseif ( type == 1095062083 ) ;creature return elseif ( type == 1414418243 ) ;container set nextref to 1 ;flag that we need to tally the container's total value set update_col to 1 elseif ( type == 1380929348 ) ;door (this script allows player to destroy load doors too, careful) set value to 100 set update_col to 1 elseif ( type == 1230259009 ) ;activator set value to 200 set update_col to 1 endif set invvalue to 0 set invcount to 0 setx type ownerid condition to pctarget->xGetOwnerInfo if ( type == 0 ) ;no owner set value to 1 ;in case 'value' wasn't determined yet - there's no need to calculate it below elseif ( type == 1598246990 ) ;NPC owner set invvalue to 1 ;(temp flag) elseif ( type == 1413693766 ) ;faction owner set invcount to 1 ;(temp flag) else MessageBox \"ERROR?!\" ;this should never happen return endif ifx ( invvalue ) ;NPC owner setx temp to xGetRef ownerid ifx ( temp ) xSetRef temp set temp to GetHealth else set temp to 0 ;if can't find the owner, assume he's dead endif if ( temp <= 0 ) ;if he's dead, then it's all legal... set type to 0 ;no ownership set value to 1 ;no need to calculate 'value' else ifx ( condition ) setx temp glob to xGetGlobal condition ifx ( temp ) ;got the global successfully ifx ( glob ) ;if it had a true value ;then player is allowed to take/use the target set type to 0 set value to 1 endif else MessageBox \"Got a problem...\" endif endif endif endif ifx ( invcount ) ;faction owner ;setx temp to xGetPCRank ownerid ;(this function doesn't exist yet) set temp to 0 ;temp filler since can't use above line. this makes the player count as of the lowest rank in the faction. if ( temp >= condition ) ;if player is of the required rank or above... ;then it's legal set type to 0 set value to 1 endif endif ifx ( value ) else ;if value is still 0, we're looking at an item (or a container) ifx ( nextref ) ;container set nextref to 0 setx temp invcount temp invvalue temp temp nextref to pctarget->xContentList nextref ;values we don't care about get stored in temp and overwritten whilex ( invcount ) ;might take a short... while, if container has tons of stacks in it set temp to ( invcount * invvalue ) set value to ( value + temp ) ifx ( nextref ) setx temp invcount temp invvalue temp temp nextref to pctarget->xContentList nextref else set invcount to 0 ;break the loop endif endwhile else ;looking at an item setx value to pctarget->xGetValue endif endif pctarget->Disable ;'destroy' the target player->PlaySound \"critical damage\" if ( type ) ;if it was determined to be illegal... setx glob to xGetGS 1173 ;GMST fCrimeStealing (default: 1.0) set value to ( value * glob ) ModPCCrimeLevel value endif if ( update_col ) set update_col to 0 ;in the event that that the player just disable'd a door or a large ;container or activator, its collision will normally remain until the ;cell is re-loaded, and the player won't be able to go through th ;space it used to occupy. ;this part of the script solves that issue, making use of the fact that ;the FixMe function also reloads some stuff in the active cell, such as ;object coliisions. ;unfortunately, it also seems to always teleport the player, and, ;ironically, sometimes cause him to get stuck. therefore, this line is commented out. ;FixMe endif end xGetQuality \u2693\ufe0e Parameters: None Returned: float quality : The quality of the reference's base object. Returns the quality of reference's base object. Supports alchemy apparatus, lockpicks, probes, repair tools. xGetRef \u2693\ufe0e Parameters: long objectID : An object ID to get a reference to, or 0 to get the script caller's reference. Returned: long reference : The reference requested, or 0 if none were found. Returns a reference to one of the active objects that match the object ID. An active object is an object in one of the loaded cells, or a persistent object such as an NPC. xGetStackSize \u2693\ufe0e Parameters: None Returned: long stackSize : The amount of items in the stack, or 0 if not called on a reference. This function returns the stack size of a given reference. For example if used on a reference to iron arrows, xGetStackSize will tell you how many arrows there are in that stack. Get player target's stack size. begin Example_xGetStackSize long ref long size setx ref to xGetPCTarget if ( ref == 0 ) return endif setx size to ref->xGetStackSize if ( size > 1 ) MessageBox \"Target stack size is %g.\" size else MessageBox \"Target is a single item.\" endif end xGetTrap \u2693\ufe0e Parameters: None Returned: string spellID : The trap's spell ID. string spellName : The trap's spell name. short spellCost : The trap's spell cost. Returns info about the reference's trap spell. Only works on container and doors. All returns will be zero if no trap is present. xGetValue \u2693\ufe0e Parameters: None Returned: long Value : The total value or maximum capacity of the object. xGetValue returns the Value of reference's base object. xGetWeight \u2693\ufe0e Parameters: None Returned: float weight : The total weight or maximum capacity of the object. xGetWeight returns the weight of reference's base object. If the reference is a stack of objects, return the total weight of the entire stack. If the reference is a container, return the maximum capacity. xMyCellID \u2693\ufe0e Parameters: None Returned: string cellID : The reference's current cell ID. Returns a string containing the name of the cell the object (intended to be used with references to unique NPCs) inhabits. So fargoth_ref->xMyCellID would return \"Seyda Neen\" unless you've lured him into the wilderness for some reason. Useful for locating that missing companion. Can't locate items stored in containers or inventory. xMyRef \u2693\ufe0e Parameters: None Returned: long reference : The caller's reference. Returns a reference to the calling object. Detect if target from local script. begin Example_xMyRef long myRef long targetRef setx targetRef to xGetPCTarget if ( targetRef == 0 ) return endif setx myRef to xMyRef if ( myRef == targetRef ) MessageBox \"I'm being targetted!\" endif end xPosition \u2693\ufe0e Parameters: float x : The X location to reposition to. float y : The Y location to reposition to. float z : The Z location to reposition to. float rotation : The rotation to take when positioned. Returned: None This is a wrapper for the vanilla Position function that can take variable input. xPositionCell \u2693\ufe0e Parameters: float x : The X location to reposition to. float y : The Y location to reposition to. float z : The Z location to reposition to. float rotation : The rotation to take when positioned. string cellID : The name/ID of the cell to position to. Returned: None This is a wrapper for the vanilla PositionCell function that can take variable input. xRefID \u2693\ufe0e Parameters: None Returned: string id : The reference's ID. xRefID returns the reference's ID. In contrast to xGetBaseID , this function will include the hexadecimal suffix that identifies unique instances of containers, creatures, or NPCs. For example, where xRefID would return \"Fargoth00000000\" , xGetBaseID would instead return just \"Fargoth\" . xRefType \u2693\ufe0e Parameters: None Returned: long type : The Object Type of the reference. Returns the four byte object name of the calling reference. xRemoveItem \u2693\ufe0e Parameters: string objectID : The object ID of the item to remove. long count : The number of items to remove. Returned: None This is a wrapper for the vanilla RemoveItem function that can take variable input. xSetCharge \u2693\ufe0e Parameters: float charge : New charge that will be set on the reference. Returned: long result : 1 if the reference's was modified, otherwise 0. Sets the current charge on a 'cast when used' or 'cast when strikes' enchanted item. May not work if the item has never been used. xSetCondition \u2693\ufe0e Parameters: float Condition : New condition that will be set on the reference. Returned: long result : 1 if the reference's was modified, otherwise 0. Sets the current condition of armor and weapons. Armor must not be at 100% or this function will fail. It must have already sustained some damage. xSetMaxCharge \u2693\ufe0e Parameters: float maxCharge : New charge that will be set on the reference. Returned: long result : 1 if the reference's was modified, otherwise 0. Sets the maximum charge on an enchanted item. xSetMaxCondition \u2693\ufe0e Parameters: float maxCondition : New maximum condition that will be set on the reference. Returned: long result : 1 if the reference's was modified, otherwise 0. Sets the maxium condition for armor and weapons and maximum uses for lockpicks, probes, and repair tools. xSetName \u2693\ufe0e Parameters: string name : The new name to apply to the reference's base object. (Maximum 31 characters) Returned: None xSetName uses the value parameter to change the reference's name. The new name will not persist through restarts. xSetQuality \u2693\ufe0e Parameters: float quality : New quality that will be set on the reference's base object. Returned: long result : 1 if the reference's base object was modified, otherwise 0. xSetQuality modifies the quality of reference's base object. Supports alchemy apparatus, lockpicks, probes, repair tools. xSetRef \u2693\ufe0e Parameters: reference newReference : A reference to the use for future function calls. Returned: None xSetRef provides a way of calling object functions where the syntax does not allow it, changing the reference used in future function calls. xSetTrap \u2693\ufe0e Parameters: string spellID : The spell ID to set as the trap, or 0 to unset a trap. Returned: short result : 1 if the reference's trap was modified, otherwise 0 . Sets a trap. Only works on containers or doors. In order to have a trap, a reference must also have a lock. For references without locks, call Lock 0 and Unlock prior to xSetTrap . Traps that are set this way do not persist through saving and loading. If a trap is removed its removal persists only if the object is activated or its lock is manipulated before saving. If you want to set a trap on a door/container, first check for an existing lock ( xGetLockLevel ). If no lock is already installed, use Lock 0 , Unlock to create the lock/trap object. Set the trap. To make sure the trap is persistent, manipulate the lock, but then put it back to its original state. In other words, if the lock is currently unlocked, lock it (use xGetLockLevel to determine the correct lock level) then unlock it. Do the reverse if it's currently unlocked. xSetValue \u2693\ufe0e Parameters: long value : New value that will be set on the reference's base object. Returned: long result : 1 if the reference's base object was modified, otherwise 0. xSetValue modifies the value of reference's base object. xSetWeight \u2693\ufe0e Parameters: float weight : New weight that will be set on the reference's base object. Returned: long result : 1 if the reference's base object was modified, otherwise 0. xSetWeight modifies the weight of the reference's base object.","title":"Reference Functions"},{"location":"references/mwse-mwscript/reference/#reference-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Reference Functions"},{"location":"references/mwse-mwscript/reference/#xadditem","text":"Parameters: string objectID : The object ID of the item to add. long count : The number of items to add. Returned: None This is a wrapper for the vanilla AddItem function that can take variable input.","title":"xAddItem"},{"location":"references/mwse-mwscript/reference/#xdistance","text":"Parameters: reference target : The reference of the target to get the distance from. Returned: float distance : The distance between the calling reference and the target reference. Calculates the distance between the calling reference and target . Note Unlike the vanilla GetDistance function, this function will work on non-actors. Distance from PC Target This example calculates the distance between the PC and what they are looking at. begin DistanceToTarget long pcRef long targetRef float distance setx pcRef to xGetRef \"player\" setx targetRef to xGetPCTarget setx distance to pcRef->xDistance targetRef end","title":"xDistance"},{"location":"references/mwse-mwscript/reference/#xexplodespell","text":"Parameters: string objectID : The object ID of the spell to explode. Returned: None This is a wrapper for the vanilla ExplodeSpell function that can take variable input.","title":"xExplodeSpell"},{"location":"references/mwse-mwscript/reference/#xgetbaseid","text":"Parameters: None Returned: string id : The reference's base object ID. xGetBaseID returns reference's base object ID. In contrast to xRefID , this function will not include the hexadecimal suffix that identifies unique instances of containers, creatures, or NPCs. For example, where xRefID would return \"Fargoth00000000\" , xGetBaseID would instead return just \"Fargoth\" .","title":"xGetBaseID"},{"location":"references/mwse-mwscript/reference/#xgetcharge","text":"Parameters: None Returned: float charge : The current charge on a item. Returns the current charge on a 'cast when used' or 'cast when strikes' enchanted item. Constant effect and non-enchanted items return 0 .","title":"xGetCharge"},{"location":"references/mwse-mwscript/reference/#xgetcondition","text":"Parameters: None Returned: float condition : The current condition on a item. Returns the current condition for armor and weapons and remaining uses for lockpicks, probes, and repair tools.","title":"xGetCondition"},{"location":"references/mwse-mwscript/reference/#xgetenchant","text":"Parameters: None Returned: string enchantID : The Object ID of the enchantment. short type : The type of the enchantment. 0 = Cast Once, 1 = Cast on Strike, 2 = Cast on Use, 3 = Constant short cost : The cost of the enchantment. float currentCharge : The current charge for the enchantment. long maxCharge : The maximum charge for the enchantment. short numEffect : The number of effects on the enchantment. long autocalc : 1 if the enchantment is auto-calculated. Returns info about the enchantment on the target item, or 0 if no enchantment is present.","title":"xGetEnchant"},{"location":"references/mwse-mwscript/reference/#xgetencumb","text":"Parameters: None Returned: float weight : The weight, in pounds, of all the reference's inventory. This value is negative if leveled items are present. Calculates the total, unmodified encumbrance of the target reference's inventory. This function does not take into account any feather or burden spell effects. Note If the target has any leveled items in its inventory, the returned weight is negative.","title":"xGetEncumb"},{"location":"references/mwse-mwscript/reference/#xgetitemcount","text":"Parameters: string objectId : The item's object ID to get the count of. Returned: long itemCount : The number of items that the reference has. This is a wrapper function around GetItemCount that allows variable input. Example begin Example_xGetItemCount long ref long id long count setx ref to xGetRef \"player\" setx id to xStringBuild \"Gold_001\" setx count to ref->xGetItemCount id MessageBox \"Total Gold: %g\" count StopScript Example_xGetItemCount end","title":"xGetItemCount"},{"location":"references/mwse-mwscript/reference/#xgetlocklevel","text":"Parameters: None Returned: short lockLevel : The reference's lock level, or -1 if none was found. Returns the lock level of a door or container. This function returns -1 for doors/containers that have never been locked and for items that aren't doors or containers. This returns the lock level regardless of whether the item is locked or unlocked. Use GetLocked to determine the state of the lock. Lock level is stored as a signed short (16 bits, max value = 32,767). Values less than 0 do not survive saving, exiting, and reloading. They are converted to their absolute value and the door/container is flagged as unlocked.","title":"xGetLockLevel"},{"location":"references/mwse-mwscript/reference/#xgetmaxcharge","text":"Parameters: None Returned: float maxCharge : The current charge on a item. Returns the maximum charge on an enchanted item.","title":"xGetMaxCharge"},{"location":"references/mwse-mwscript/reference/#xgetmaxcondition","text":"Parameters: None Returned: float maxCondition : The current maximum condition on a item. Returns the maxium condition for armor and weapons and maximum uses for lockpicks, probes, and repair tools.","title":"xGetMaxCondition"},{"location":"references/mwse-mwscript/reference/#xgetmodel","text":"Parameters: string objectId : The object ID to get the model of. If 0, the reference will be used. Returned: string modelPath : The path to the model. This function returns the model of an object. This can be done by passing a string for the object Id, or 0 can be passed to use the script's reference. Note The path returned does not include the Data Files\\models prefix. Get Model by Object ID begin Example_xGetModelById long model setx model to xGetModel \"ingred_bonemeal_01\" if ( model == 0 ) return endif xMessageFix \"Model: %s\" model MessageBox \"Model: ________________________________\" end Get Model by Reference begin Example_xGetModelByRef long ref long model setx ref to xGetPCTarget if ( ref == 0 ) return endif setx model to ref->xGetModel 0 if ( model == 0 ) return endif xMessageFix \"Model: %s\" model MessageBox \"Model: ________________________________\" end","title":"xGetModel"},{"location":"references/mwse-mwscript/reference/#xgetname","text":"Parameters: None Returned: string name : The reference's name, or 0 if no name was found. xGetName returns a string containing the name (suitable for display, not the objectid) for the object or 0 if the object doesn't have a name. The NPC who falls from the sky near Seyda Neen has an object id of \"agronian guy\" but his name is \"Tarhiel\" when you look at his corpse.","title":"xGetName"},{"location":"references/mwse-mwscript/reference/#xgetownerinfo","text":"Parameters: None Returned: string owner : The object ID of the NPC or faction owner of the object. long or string condition : If owned by a faction, this is a long indicating the required rank. If this is an NPC this value is either 0, or a string for the global variable to check. long type : The Object Type of owner , either NPC or Faction. Ownership of entities in the world in Morrowind is comprised of two parts: owner and condition (this can specify when the player being detected taking or using the entity is not considered a crime). These work in two modes: The first is where owner is an NPC ID, and condition is a global variable - while the global var is set to a non-zero value, activating the entity is never considered a crime. In the second mode, owner is a faction id, and condition is a rank within it. If the player has equal (or higher) rank in that faction, then he can be seen using or taking the entity without it being a crime. This is how supply chests and beds in guildhalls work (their rank requirement is the minimal rank). This function allows getting full ownership information of an entity: both parts, whatever they may be (as well as what mode is used for the ownership). It is more in-depth than the xGetOwner function, which does not fully handle faction ownership or ownership with a global var requirement. Tip If the returned condition is a global variable, it can be used with xGetGlobal and xSetGlobal . Boobytrapped Mages Guild and Telvanni faction containers begin boobycontainers ;if the player tries to open a container owned by either MG or GHT that he ;doesn't have the required rank to legally take items from, then instead of ;the container opening, the player will be zapped. short framecount short temp short player_rank long pctarget long type long own_id long own_cond if ( MenuMode ) return endif set framecount to ( framecount + 1 ) if ( framecount < 30 ) return endif set framecount to 0 setx pctarget to xGetPCTarget ifx ( pctarget ) setx type to pctarget->xRefType if ( type != 1414418243 ) ;if it's not a container ref type return endif setx type own_id own_cond to pctarget->xGetOwnerInfo if ( type != 1413693766 ) ;if it's not a faction ownership type return endif setx temp to xStringCompare own_id \"Mages Guild\" ;if the owner of the container is MG, temp will be 0 ifx ( temp ) ;not MG setx temp to xStringCompare own_id \"Telvanni\" ifx ( temp ) ;owner is not MG and not GHT, either return endif ;owner is GHT set player_rank to GetPCRank \"Telvanni\" ;doesn't hurt here, but remember 0 and -1 are both possible return values of this function else ;owner is MG set player_rank to GetPCRank \"Mages Guild\" endif set temp to 0 if ( player_rank >= own_cond ) ;player is of the right rank in whichever faction to be able to claim the container's contents set temp to 1 endif ifx ( temp ) ;originally, there was only a return here. ;the following block is needed in case activation was already blocked by the OnActivate call (the 2nd instance of it, now) on a previous run, but the player since raised in rank enough; without this line, the player will no longer get the trap, but the container may not open (as it normally should), either xSetRef pctarget set temp to OnActivate ifx ( temp ) pctarget->Activate endif return endif ;if reached here, player doesn't meet rank requirement xSetRef pctarget if ( OnActivate ) ;merely CALLING this function will block any further normal activation attempts. it makes the object's activation temporarily only possible through the Activate function MessageBox \"A trap is sprung!\" set temp to - ( player->GetFatigue + 1 ) player->ModCurrentFatigue temp ;makes player fall down (\"knocked out\") briefly - causes current fatigue to be -1 player->PlaySound \"destruction hit\" endif endif end World entity destruction with ownership penalty begin entitydestruction ;allows the player to destroy objects in the world by striking at them with ;a weapon (or barehanded). but if the player wouldn't have been (legally) allowed to pick up that ;object, he gets a bounty as if he stole it (with respect to the GMST that controls the bounty amount for theft). ;the value of containers is assumed to be only the value of all the items within them. ;the value of doors is assumed to be 100 septims, and of activators, 200 septims. ;this script doesn't take into account whether player is detected (sneaking, invisible), ;etc. well, he's doing a loud and incriminating action, anyway. ;it doesn't do faction expulsion, either... short framecount short update_col long temp long pctarget long type long value long nextref long invvalue long invcount long ownerid long condition float glob ;note: in this script, existing vars are often reused, so that a bunch of ;vars are also used for other purposes than their name suggests. ;for example, because it is the only float and there's no problem with ;overwriting it, 'glob' is used to (temporarily) hold both the result of ;a reading of a global var, and also of reading a float GMST. if ( MenuMode ) return endif set framecount to ( framecount + 1 ) if ( framecount < timing1 ) return endif set framecount to 0 if ( player->GetWeaponDrawn == 0 ) return endif if ( player->GetWeaponType == 0 ) return ;ignore lockpicks and probes; unfortuantely this also applies to Short Blades... endif setx temp to xKeyPressed 1 ;left mouse button setx pctarget to xGetPCTarget setx temp to xAnd temp pctarget;if player looking at something AND pressing LMB, temp will be 1 if ( temp == 0 ) return endif ;you should also be able to just use 'if ( player->GetSoundPlaying \"weapon swish\" )' instead, to check ;if the player is making a strike, at least on machines where GetSoundPlaying works fine. ;you'd also be able to automatically support all swinging weapons, then. setx type to pctarget->xRefType set value to 0 set nextref to 0 if ( type == 1598246990 ) ;NPC return elseif ( type == 1095062083 ) ;creature return elseif ( type == 1414418243 ) ;container set nextref to 1 ;flag that we need to tally the container's total value set update_col to 1 elseif ( type == 1380929348 ) ;door (this script allows player to destroy load doors too, careful) set value to 100 set update_col to 1 elseif ( type == 1230259009 ) ;activator set value to 200 set update_col to 1 endif set invvalue to 0 set invcount to 0 setx type ownerid condition to pctarget->xGetOwnerInfo if ( type == 0 ) ;no owner set value to 1 ;in case 'value' wasn't determined yet - there's no need to calculate it below elseif ( type == 1598246990 ) ;NPC owner set invvalue to 1 ;(temp flag) elseif ( type == 1413693766 ) ;faction owner set invcount to 1 ;(temp flag) else MessageBox \"ERROR?!\" ;this should never happen return endif ifx ( invvalue ) ;NPC owner setx temp to xGetRef ownerid ifx ( temp ) xSetRef temp set temp to GetHealth else set temp to 0 ;if can't find the owner, assume he's dead endif if ( temp <= 0 ) ;if he's dead, then it's all legal... set type to 0 ;no ownership set value to 1 ;no need to calculate 'value' else ifx ( condition ) setx temp glob to xGetGlobal condition ifx ( temp ) ;got the global successfully ifx ( glob ) ;if it had a true value ;then player is allowed to take/use the target set type to 0 set value to 1 endif else MessageBox \"Got a problem...\" endif endif endif endif ifx ( invcount ) ;faction owner ;setx temp to xGetPCRank ownerid ;(this function doesn't exist yet) set temp to 0 ;temp filler since can't use above line. this makes the player count as of the lowest rank in the faction. if ( temp >= condition ) ;if player is of the required rank or above... ;then it's legal set type to 0 set value to 1 endif endif ifx ( value ) else ;if value is still 0, we're looking at an item (or a container) ifx ( nextref ) ;container set nextref to 0 setx temp invcount temp invvalue temp temp nextref to pctarget->xContentList nextref ;values we don't care about get stored in temp and overwritten whilex ( invcount ) ;might take a short... while, if container has tons of stacks in it set temp to ( invcount * invvalue ) set value to ( value + temp ) ifx ( nextref ) setx temp invcount temp invvalue temp temp nextref to pctarget->xContentList nextref else set invcount to 0 ;break the loop endif endwhile else ;looking at an item setx value to pctarget->xGetValue endif endif pctarget->Disable ;'destroy' the target player->PlaySound \"critical damage\" if ( type ) ;if it was determined to be illegal... setx glob to xGetGS 1173 ;GMST fCrimeStealing (default: 1.0) set value to ( value * glob ) ModPCCrimeLevel value endif if ( update_col ) set update_col to 0 ;in the event that that the player just disable'd a door or a large ;container or activator, its collision will normally remain until the ;cell is re-loaded, and the player won't be able to go through th ;space it used to occupy. ;this part of the script solves that issue, making use of the fact that ;the FixMe function also reloads some stuff in the active cell, such as ;object coliisions. ;unfortunately, it also seems to always teleport the player, and, ;ironically, sometimes cause him to get stuck. therefore, this line is commented out. ;FixMe endif end","title":"xGetOwnerInfo"},{"location":"references/mwse-mwscript/reference/#xgetquality","text":"Parameters: None Returned: float quality : The quality of the reference's base object. Returns the quality of reference's base object. Supports alchemy apparatus, lockpicks, probes, repair tools.","title":"xGetQuality"},{"location":"references/mwse-mwscript/reference/#xgetref","text":"Parameters: long objectID : An object ID to get a reference to, or 0 to get the script caller's reference. Returned: long reference : The reference requested, or 0 if none were found. Returns a reference to one of the active objects that match the object ID. An active object is an object in one of the loaded cells, or a persistent object such as an NPC.","title":"xGetRef"},{"location":"references/mwse-mwscript/reference/#xgetstacksize","text":"Parameters: None Returned: long stackSize : The amount of items in the stack, or 0 if not called on a reference. This function returns the stack size of a given reference. For example if used on a reference to iron arrows, xGetStackSize will tell you how many arrows there are in that stack. Get player target's stack size. begin Example_xGetStackSize long ref long size setx ref to xGetPCTarget if ( ref == 0 ) return endif setx size to ref->xGetStackSize if ( size > 1 ) MessageBox \"Target stack size is %g.\" size else MessageBox \"Target is a single item.\" endif end","title":"xGetStackSize"},{"location":"references/mwse-mwscript/reference/#xgettrap","text":"Parameters: None Returned: string spellID : The trap's spell ID. string spellName : The trap's spell name. short spellCost : The trap's spell cost. Returns info about the reference's trap spell. Only works on container and doors. All returns will be zero if no trap is present.","title":"xGetTrap"},{"location":"references/mwse-mwscript/reference/#xgetvalue","text":"Parameters: None Returned: long Value : The total value or maximum capacity of the object. xGetValue returns the Value of reference's base object.","title":"xGetValue"},{"location":"references/mwse-mwscript/reference/#xgetweight","text":"Parameters: None Returned: float weight : The total weight or maximum capacity of the object. xGetWeight returns the weight of reference's base object. If the reference is a stack of objects, return the total weight of the entire stack. If the reference is a container, return the maximum capacity.","title":"xGetWeight"},{"location":"references/mwse-mwscript/reference/#xmycellid","text":"Parameters: None Returned: string cellID : The reference's current cell ID. Returns a string containing the name of the cell the object (intended to be used with references to unique NPCs) inhabits. So fargoth_ref->xMyCellID would return \"Seyda Neen\" unless you've lured him into the wilderness for some reason. Useful for locating that missing companion. Can't locate items stored in containers or inventory.","title":"xMyCellID"},{"location":"references/mwse-mwscript/reference/#xmyref","text":"Parameters: None Returned: long reference : The caller's reference. Returns a reference to the calling object. Detect if target from local script. begin Example_xMyRef long myRef long targetRef setx targetRef to xGetPCTarget if ( targetRef == 0 ) return endif setx myRef to xMyRef if ( myRef == targetRef ) MessageBox \"I'm being targetted!\" endif end","title":"xMyRef"},{"location":"references/mwse-mwscript/reference/#xposition","text":"Parameters: float x : The X location to reposition to. float y : The Y location to reposition to. float z : The Z location to reposition to. float rotation : The rotation to take when positioned. Returned: None This is a wrapper for the vanilla Position function that can take variable input.","title":"xPosition"},{"location":"references/mwse-mwscript/reference/#xpositioncell","text":"Parameters: float x : The X location to reposition to. float y : The Y location to reposition to. float z : The Z location to reposition to. float rotation : The rotation to take when positioned. string cellID : The name/ID of the cell to position to. Returned: None This is a wrapper for the vanilla PositionCell function that can take variable input.","title":"xPositionCell"},{"location":"references/mwse-mwscript/reference/#xrefid","text":"Parameters: None Returned: string id : The reference's ID. xRefID returns the reference's ID. In contrast to xGetBaseID , this function will include the hexadecimal suffix that identifies unique instances of containers, creatures, or NPCs. For example, where xRefID would return \"Fargoth00000000\" , xGetBaseID would instead return just \"Fargoth\" .","title":"xRefID"},{"location":"references/mwse-mwscript/reference/#xreftype","text":"Parameters: None Returned: long type : The Object Type of the reference. Returns the four byte object name of the calling reference.","title":"xRefType"},{"location":"references/mwse-mwscript/reference/#xremoveitem","text":"Parameters: string objectID : The object ID of the item to remove. long count : The number of items to remove. Returned: None This is a wrapper for the vanilla RemoveItem function that can take variable input.","title":"xRemoveItem"},{"location":"references/mwse-mwscript/reference/#xsetcharge","text":"Parameters: float charge : New charge that will be set on the reference. Returned: long result : 1 if the reference's was modified, otherwise 0. Sets the current charge on a 'cast when used' or 'cast when strikes' enchanted item. May not work if the item has never been used.","title":"xSetCharge"},{"location":"references/mwse-mwscript/reference/#xsetcondition","text":"Parameters: float Condition : New condition that will be set on the reference. Returned: long result : 1 if the reference's was modified, otherwise 0. Sets the current condition of armor and weapons. Armor must not be at 100% or this function will fail. It must have already sustained some damage.","title":"xSetCondition"},{"location":"references/mwse-mwscript/reference/#xsetmaxcharge","text":"Parameters: float maxCharge : New charge that will be set on the reference. Returned: long result : 1 if the reference's was modified, otherwise 0. Sets the maximum charge on an enchanted item.","title":"xSetMaxCharge"},{"location":"references/mwse-mwscript/reference/#xsetmaxcondition","text":"Parameters: float maxCondition : New maximum condition that will be set on the reference. Returned: long result : 1 if the reference's was modified, otherwise 0. Sets the maxium condition for armor and weapons and maximum uses for lockpicks, probes, and repair tools.","title":"xSetMaxCondition"},{"location":"references/mwse-mwscript/reference/#xsetname","text":"Parameters: string name : The new name to apply to the reference's base object. (Maximum 31 characters) Returned: None xSetName uses the value parameter to change the reference's name. The new name will not persist through restarts.","title":"xSetName"},{"location":"references/mwse-mwscript/reference/#xsetquality","text":"Parameters: float quality : New quality that will be set on the reference's base object. Returned: long result : 1 if the reference's base object was modified, otherwise 0. xSetQuality modifies the quality of reference's base object. Supports alchemy apparatus, lockpicks, probes, repair tools.","title":"xSetQuality"},{"location":"references/mwse-mwscript/reference/#xsetref","text":"Parameters: reference newReference : A reference to the use for future function calls. Returned: None xSetRef provides a way of calling object functions where the syntax does not allow it, changing the reference used in future function calls.","title":"xSetRef"},{"location":"references/mwse-mwscript/reference/#xsettrap","text":"Parameters: string spellID : The spell ID to set as the trap, or 0 to unset a trap. Returned: short result : 1 if the reference's trap was modified, otherwise 0 . Sets a trap. Only works on containers or doors. In order to have a trap, a reference must also have a lock. For references without locks, call Lock 0 and Unlock prior to xSetTrap . Traps that are set this way do not persist through saving and loading. If a trap is removed its removal persists only if the object is activated or its lock is manipulated before saving. If you want to set a trap on a door/container, first check for an existing lock ( xGetLockLevel ). If no lock is already installed, use Lock 0 , Unlock to create the lock/trap object. Set the trap. To make sure the trap is persistent, manipulate the lock, but then put it back to its original state. In other words, if the lock is currently unlocked, lock it (use xGetLockLevel to determine the correct lock level) then unlock it. Do the reverse if it's currently unlocked.","title":"xSetTrap"},{"location":"references/mwse-mwscript/reference/#xsetvalue","text":"Parameters: long value : New value that will be set on the reference's base object. Returned: long result : 1 if the reference's base object was modified, otherwise 0. xSetValue modifies the value of reference's base object.","title":"xSetValue"},{"location":"references/mwse-mwscript/reference/#xsetweight","text":"Parameters: float weight : New weight that will be set on the reference's base object. Returned: long result : 1 if the reference's base object was modified, otherwise 0. xSetWeight modifies the weight of the reference's base object.","title":"xSetWeight"},{"location":"references/mwse-mwscript/string/","text":"String Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xStringBuild \u2693\ufe0e Parameters: string format : The format string to use, given the tokens below. varies (many) input : The variables to use, matching the pattern of special tokens below. Returned: string result : A string build from the combined input. xStringBuild returns a new string that is constructed based on the format string and any other variable values as needed. The format string is similar to those for MessageBox with % indicating some special character or variable substitution. Some patterns can be used to place special characters into the string: Token Meaning %% A single % sign is placed in the string. %n A new line marker (CR/LF) is placed in the string. %q A quotation mark (\") is placed in the string. The rest are used to insert values from the remaining parameters into the output string. Token Meaning %d A short or long value is inserted as a decimal integer. %h A short or long value is inserted as a hexadecimal integer. %f A float value is inserted as real decimal number. %s A string value is inserted. %l A long value is inserted as a four character string. Note The uppercase forms %N , %Q , %D , %H , %F , %S , and %L also work. The float specifier takes a precision specifier just like the MessageBox command. The format %.3f will print a floating point value with three digits after the decimal point. The string specifier can take two numbers in its specifier: Token Meaning %2s Skips the first two characters of the string, but inserts the rest. %.3s Inserts only three characters of the string. %4.5s Skips 4 characters, then inserts the next 5 characters of the string. Note The compiler doesn't currently support more than 12 parameters at a time. Note The format string is limited to 64 characters. xStringCapture \u2693\ufe0e Parameters: string string : The string to search for pattern in. string pattern : The regex pattern to use. long desiredMatches : The number of results to return. Returned: string (many) matches : Results of the pattern matching for pattern on string . The function always return desiredMatches results. This function performs much as xStringMatch , but returns the result groups of the regex match. The a number of results matching desiredMatches is always returned. The matches will be 0 if a match isn't made. xStringCompare \u2693\ufe0e Parameters: string leftString : The first string in the comparison. string rightString : The second string in the comparison. Returned: string result : 0 if the strings are equal, otherwise a signed number based on sorting. Compares the two strings based on alphabetical order and returns 0 if they are equal, a negative number if leftString would appear first, and a positive number if rightString would appear first. xStringLength \u2693\ufe0e Parameters: string string : The string to take the length of. Returned: long length : The length of string . Returns the number of characters in the input, string . xStringMatch \u2693\ufe0e Parameters: string string : The string to search for pattern in. string pattern : The regex pattern to use. Returned: string (many) matches : Results of the pattern matching for pattern on string . The function always return desiredMatches results. This function performs a regular expression check on string , allowing for very flexible and powerful pattern and string matching/identification. For example, you can check if a string contains certain words, or a certain set of characters, in it and in a specific position and order, if you want, and much more. Note To return the tokenized regex result, use xStringCapture . MWSE uses the Regex library from the Boost C++ library. The regular expression style is the Perl syntax; please see the Boost Regex documentation for full details. However, here is a partial quick summary: Pattern Description . Matches any one character. ^ Matches the beginning of the string. $ Matches then end of the string. ( and ) Groups a sub-expression (see below). * Makes the preceeding item or group match zero or more times. ? Makes the preceeding item or group match zero or once. + Makes the preceeding item or group match one or more times. {integer} Makes the preceeding item or group match exactly integer times. {int1,int2} Makes the preceeding item or group match from int1 to int2 times. | Alternation; makes the pattern match either the item on the left of the [character set] Matches a single character from the set character set. The set can contain individual characters, or ranges of the form a-b, which matches all characters between a and b, including a and b. (For example, [A-Z] will match upper case letters.) If the character set begins with ^, then it will match any character except those in the character set. [[:name:]] Matches a single character from the pre-defined set name. \\character Matches the character; that is, removes the special meaning, if any, from character. (For example, \".\" matches any single character, but \".\" matches the period character.) \\d Match a digit (0-9). \\l Match a lower case letter (a-z). \\s Match whitespace (space, tab). \\u Match an upper case letter (A-Z). \\w Match a word (a string of letters, digits, and underscores) \\D Match anything but a digit. \\L Match anything but a lower case letter (a-z). \\S Match anything but whitespace (space, tab). \\U Match anything but an upper case letter (A-Z). \\W Match anything but a word. \\< Match the start of a word. \\> Match the end of a word. \\b Match the end or start of a word. \\B Match anything but the end or start of a word. (?i) Turns on the i modifier (case insensitive match) for the rest of the pattern or until an enclosing ). (?i:pattern) Turns on the i modifier for the enclosed pattern only. xStringParse \u2693\ufe0e Parameters: string pattern : The pattern to parse. string source : Indicates how much of the pattern matched successfully. Returned: long matchCount : The number of matches returned. varies (many) matches : The values parsed out of the string. This function identifies and extracts data from the source string based on the pattern string. The first return value matchCount is a long indicating how much of the pattern matched successfully. The matches by the pattern will then be returned in order. In the pattern string, all of the special features begin with a % symbol. Some, simply match special characters that can't otherwise be typed in the pattern string. Token Description %% Matches a single % sign. %n Matches the new line marker, CR/LF. %q Matches the \" quotation mark. The rest return the values matched so they can be stored in variables with setx . Token Description %d Matches a decimal integer and the value is returned as type long. %h Matches a hexadecimal integer and the value is returned as type long. %f Matches a real number and the value is returned as type float. %s Matches the rest of the string and returns it as type string. %l Matches exactly four characters and returns them as type long. Note The uppercase forms %N , %Q , %D , %H , %F , %S , and %L also work. MWSE Version Checking \u2693\ufe0e A special use case of xStringParse is to check the version of MWSE. If a value of zero is returned, the version of MWSE is older than version 2.0. To do this, pattern must be MWSE_VERSION . source is instead a long , to compare to the return value. If the version returned is greater than or equal to source , the second return value is 1. long version long versionAbove2p0 setx version versionAbove2p0 to xStringParse \"MWSE_VERSION\" 2000000 The version returned is spaced. Version 2.0.0 is 2000000 while the hypothetical version 2.34.9 would be 2034009.","title":"String Functions"},{"location":"references/mwse-mwscript/string/#string-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"String Functions"},{"location":"references/mwse-mwscript/string/#xstringbuild","text":"Parameters: string format : The format string to use, given the tokens below. varies (many) input : The variables to use, matching the pattern of special tokens below. Returned: string result : A string build from the combined input. xStringBuild returns a new string that is constructed based on the format string and any other variable values as needed. The format string is similar to those for MessageBox with % indicating some special character or variable substitution. Some patterns can be used to place special characters into the string: Token Meaning %% A single % sign is placed in the string. %n A new line marker (CR/LF) is placed in the string. %q A quotation mark (\") is placed in the string. The rest are used to insert values from the remaining parameters into the output string. Token Meaning %d A short or long value is inserted as a decimal integer. %h A short or long value is inserted as a hexadecimal integer. %f A float value is inserted as real decimal number. %s A string value is inserted. %l A long value is inserted as a four character string. Note The uppercase forms %N , %Q , %D , %H , %F , %S , and %L also work. The float specifier takes a precision specifier just like the MessageBox command. The format %.3f will print a floating point value with three digits after the decimal point. The string specifier can take two numbers in its specifier: Token Meaning %2s Skips the first two characters of the string, but inserts the rest. %.3s Inserts only three characters of the string. %4.5s Skips 4 characters, then inserts the next 5 characters of the string. Note The compiler doesn't currently support more than 12 parameters at a time. Note The format string is limited to 64 characters.","title":"xStringBuild"},{"location":"references/mwse-mwscript/string/#xstringcapture","text":"Parameters: string string : The string to search for pattern in. string pattern : The regex pattern to use. long desiredMatches : The number of results to return. Returned: string (many) matches : Results of the pattern matching for pattern on string . The function always return desiredMatches results. This function performs much as xStringMatch , but returns the result groups of the regex match. The a number of results matching desiredMatches is always returned. The matches will be 0 if a match isn't made.","title":"xStringCapture"},{"location":"references/mwse-mwscript/string/#xstringcompare","text":"Parameters: string leftString : The first string in the comparison. string rightString : The second string in the comparison. Returned: string result : 0 if the strings are equal, otherwise a signed number based on sorting. Compares the two strings based on alphabetical order and returns 0 if they are equal, a negative number if leftString would appear first, and a positive number if rightString would appear first.","title":"xStringCompare"},{"location":"references/mwse-mwscript/string/#xstringlength","text":"Parameters: string string : The string to take the length of. Returned: long length : The length of string . Returns the number of characters in the input, string .","title":"xStringLength"},{"location":"references/mwse-mwscript/string/#xstringmatch","text":"Parameters: string string : The string to search for pattern in. string pattern : The regex pattern to use. Returned: string (many) matches : Results of the pattern matching for pattern on string . The function always return desiredMatches results. This function performs a regular expression check on string , allowing for very flexible and powerful pattern and string matching/identification. For example, you can check if a string contains certain words, or a certain set of characters, in it and in a specific position and order, if you want, and much more. Note To return the tokenized regex result, use xStringCapture . MWSE uses the Regex library from the Boost C++ library. The regular expression style is the Perl syntax; please see the Boost Regex documentation for full details. However, here is a partial quick summary: Pattern Description . Matches any one character. ^ Matches the beginning of the string. $ Matches then end of the string. ( and ) Groups a sub-expression (see below). * Makes the preceeding item or group match zero or more times. ? Makes the preceeding item or group match zero or once. + Makes the preceeding item or group match one or more times. {integer} Makes the preceeding item or group match exactly integer times. {int1,int2} Makes the preceeding item or group match from int1 to int2 times. | Alternation; makes the pattern match either the item on the left of the [character set] Matches a single character from the set character set. The set can contain individual characters, or ranges of the form a-b, which matches all characters between a and b, including a and b. (For example, [A-Z] will match upper case letters.) If the character set begins with ^, then it will match any character except those in the character set. [[:name:]] Matches a single character from the pre-defined set name. \\character Matches the character; that is, removes the special meaning, if any, from character. (For example, \".\" matches any single character, but \".\" matches the period character.) \\d Match a digit (0-9). \\l Match a lower case letter (a-z). \\s Match whitespace (space, tab). \\u Match an upper case letter (A-Z). \\w Match a word (a string of letters, digits, and underscores) \\D Match anything but a digit. \\L Match anything but a lower case letter (a-z). \\S Match anything but whitespace (space, tab). \\U Match anything but an upper case letter (A-Z). \\W Match anything but a word. \\< Match the start of a word. \\> Match the end of a word. \\b Match the end or start of a word. \\B Match anything but the end or start of a word. (?i) Turns on the i modifier (case insensitive match) for the rest of the pattern or until an enclosing ). (?i:pattern) Turns on the i modifier for the enclosed pattern only.","title":"xStringMatch"},{"location":"references/mwse-mwscript/string/#xstringparse","text":"Parameters: string pattern : The pattern to parse. string source : Indicates how much of the pattern matched successfully. Returned: long matchCount : The number of matches returned. varies (many) matches : The values parsed out of the string. This function identifies and extracts data from the source string based on the pattern string. The first return value matchCount is a long indicating how much of the pattern matched successfully. The matches by the pattern will then be returned in order. In the pattern string, all of the special features begin with a % symbol. Some, simply match special characters that can't otherwise be typed in the pattern string. Token Description %% Matches a single % sign. %n Matches the new line marker, CR/LF. %q Matches the \" quotation mark. The rest return the values matched so they can be stored in variables with setx . Token Description %d Matches a decimal integer and the value is returned as type long. %h Matches a hexadecimal integer and the value is returned as type long. %f Matches a real number and the value is returned as type float. %s Matches the rest of the string and returns it as type string. %l Matches exactly four characters and returns them as type long. Note The uppercase forms %N , %Q , %D , %H , %F , %S , and %L also work.","title":"xStringParse"},{"location":"references/mwse-mwscript/string/#mwse-version-checking","text":"A special use case of xStringParse is to check the version of MWSE. If a value of zero is returned, the version of MWSE is older than version 2.0. To do this, pattern must be MWSE_VERSION . source is instead a long , to compare to the return value. If the version returned is greater than or equal to source , the second return value is 1. long version long versionAbove2p0 setx version versionAbove2p0 to xStringParse \"MWSE_VERSION\" 2000000 The version returned is spaced. Version 2.0.0 is 2000000 while the hypothetical version 2.34.9 would be 2034009.","title":"MWSE Version Checking"},{"location":"references/mwse-mwscript/utility/","text":"Utility Functions \u2693\ufe0e Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua. xGetGlobal \u2693\ufe0e Parameters: string globalName : The name of the global. Returned: long found : 1 if the global was found, otherwise 0. float value : The value of the global. Returns the value of a global represented by globalName . xGetGSString \u2693\ufe0e Parameters: long index : ID of the GMST to look up. Returned: string value : The GMST value at the given index . Fetches a GMST string by its given index and returns its value . xGetKeyBind \u2693\ufe0e Parameters: long controlType : The Control Type _ desired. Returned: long scanCode : The Key Scan Code _ for the controlType . long scanDevice : The device type used for the associated scan code. A value of 0 is keyboard, 1 is mouse, 2 is joystick. long keyCode : The Virtual-Key Code for the controlType . If this value is 0, the scan code could not be converted to a key code. This function allows scripts to determine what keys are configured by the player. Typically the keyCode is passed to xKeyPressed to determine if it is pressed. Other functions that require a scan code would make use of scanCode . Determine if the Activation Key is Pressed Begin IsActivating long scanCode long scanDevice long keyCode ; Get input information for the Activate key. setx scanCode scanDevice keyCode to xGetKeyBind 5 ifx (keyCode) ; Activation key was successfully obtained, get its state. setx isPressed to xKeyPressed keyCode if (isPressed) MessageBox \"Activation key pressed!\" endif endif StopScript \"IsActivating\" End xGetMCPFeatureState \u2693\ufe0e Parameters: long id : Identifier for the MCP feature. Returned: short state : 1 if the feature is enabled, 0 if it is disabled, or -1 if MWSE couldn't determine the MCP installation state. This function can be used to attempt to ensure that the user has the correct Morrowind Code Patch features enabled. Note The id parameter comes from mcpatch\\describe.json . For example, 137 matches with the Slowfall Overhaul component. Warning This functions depends on the user not deleting their mcpatch\\installed file. If the user doesn't have this file (because they deleted it or don't have the MCP installed), this function returns a value of -1 . Example begin DetectPickPocketOverhaul short state setx state to xGetMCPFeatureState 77 if (state) then MessageBox \"Pickpocket overhaul is enabled in MCP.\" endif end xKeyPressed \u2693\ufe0e Parameters: long keyCode : The Virtual-Key Code to check for input. Returned: long (many) keyStatus : The status of keyCode if the parameter is non-zero. Otherwise it returns multiple times, with every key code pressed. Monitors the status of the keyboard (and mouse buttons). This can be similar to GetPCSneaking, but actually detects whether a particular key is really being pressed. If input parameter code is a Virtual-Key Code (between 1 and 254) the return value will indicate the status of that key. A non-zero value means the key is being pressed. If the input code is 0, then on each call, the function will return the key code for the key (or one of the keys) currently being pressed. Warning Some of the codes match different keys on different keyboard layouts. Note The key VK code for a given input can be fetched using xKeyPressed , instead of having to rely on hardcoded values. xLogMessage \u2693\ufe0e Parameters: string format : The formatting for the log message. varies (many) input : Values to inject into the format . Returned: None Writes out formatted strings to the log file (mwse.log). This works much like MessageBox but with the additional formatting options described for xStringBuild . A trailing % in the format string will suppress the printing of the new line sequence allowing a single line of text to be created with two or more xLogMessage calls. The number of parameters specified in the format MUST match those supplied or there will be trouble. Note Literal strings in MWEdit have a maximum length of 63 characters. xMessageFix \u2693\ufe0e Parameters: string (many) newStrings : The strings used to overwrite the following MessageBox call. Returned: None This function allows you to use strings from variables with the MessageBox function with a few restrictions. The MessageBox command must immediately follow this one. The number of strings for this function must match the number of strings for the MessageBox. The MessageBox can have buttons but it can't use variables. The values of the strings used on the MessageBox will be replaced with the values from xMessageFix, but the MessageBox strings set a maximum size for each of the xMessageFix strings (it's OK if the MessageBox strings are longer than the MessageFix ones). Using xMessageFix can take both the string variable and literal string types and each string acts as a format string as described for the xStringBuild function. If a string ends in a single % and the formatted string takes less space than the matching string from MessageBox, the remaining characters of the MessageBox string will be used. While it is possible to use formatted messages and buttons, it is best to format strings with xStringBuild if there are buttons involved because of the limit of 12 parameters per function. xScriptRunning \u2693\ufe0e Parameters: string scriptName : The name of the script to determine the status of. Returned: long status : 1 if the script is running, or 0 if it is not (or does not exist). This function is a wrapper around ScriptRunning which allows a variable input. xSetGlobal \u2693\ufe0e Parameters: string globalName : The name of the global. float value : The value to set the global to. Returned: long found : 1 if the global was set, otherwise 0. Set the global represented by globalName to value . xSetGSString \u2693\ufe0e Parameters: long index : ID of the GMST to look up. string newValue : The value to set the GMST to. Returned: long valueSet : 1 if the value was successfully set. Fetches a GMST string by its given index , and sets its value to newValue xStartScript \u2693\ufe0e Parameters: string scriptName : The name of the script to determine the status of. Returned: None This function is a wrapper around StartScript which allows a variable input. xStopScript \u2693\ufe0e Parameters: string scriptName : The name of the script to determine the status of. Returned: None This function is a wrapper around StartScript which allows a variable input. xTextInput \u2693\ufe0e Parameters: string string : The string to modify with the user's input. long endCode : The Virtual-Key Code used to stop reading input. Returned: long length : The length of text . string text : The text entered. This function allows you to directly read keyboard input from the user and the results will be returned as a string. Pass a string and a virtual key code to the function. The function will wait for a key to be pressed and then take one of three actions. If the key pressed matches the endCode parameter, the string and its length are returned. If the key pressed is a printable ASCII character, the character is added to the string and the string and the number 0 are returned. If the key is RETURN or BACKSPACE, a new line is started or one character is removed from the string, and the modifed string and a 0 are returned. The function returns after each key press so that the current value of the string can be shown with xMessageFix and MessageBox but the string should only be used normally after the length is returned. Player controls should be disabled while this function is used. Note xGetKeyBind can be used to determine a specific key the user has configured. xTextInputAlt \u2693\ufe0e Parameters: string string : The string to modify with the user's input. long endCode : The Virtual-Key Code used to stop reading input. Returned: long length : The length of text . string text : The text entered. This function is identical to xTextInput except that the function simply checks the status of keys and returns immediately rather than waiting for a key to be pressed.","title":"Utility Functions"},{"location":"references/mwse-mwscript/utility/#utility-functions","text":"Warning The MWSE-mwscript API is deprecated. The documentation found here is for legacy purposes only. None of the following functions can be used directly from Lua.","title":"Utility Functions"},{"location":"references/mwse-mwscript/utility/#xgetglobal","text":"Parameters: string globalName : The name of the global. Returned: long found : 1 if the global was found, otherwise 0. float value : The value of the global. Returns the value of a global represented by globalName .","title":"xGetGlobal"},{"location":"references/mwse-mwscript/utility/#xgetgsstring","text":"Parameters: long index : ID of the GMST to look up. Returned: string value : The GMST value at the given index . Fetches a GMST string by its given index and returns its value .","title":"xGetGSString"},{"location":"references/mwse-mwscript/utility/#xgetkeybind","text":"Parameters: long controlType : The Control Type _ desired. Returned: long scanCode : The Key Scan Code _ for the controlType . long scanDevice : The device type used for the associated scan code. A value of 0 is keyboard, 1 is mouse, 2 is joystick. long keyCode : The Virtual-Key Code for the controlType . If this value is 0, the scan code could not be converted to a key code. This function allows scripts to determine what keys are configured by the player. Typically the keyCode is passed to xKeyPressed to determine if it is pressed. Other functions that require a scan code would make use of scanCode . Determine if the Activation Key is Pressed Begin IsActivating long scanCode long scanDevice long keyCode ; Get input information for the Activate key. setx scanCode scanDevice keyCode to xGetKeyBind 5 ifx (keyCode) ; Activation key was successfully obtained, get its state. setx isPressed to xKeyPressed keyCode if (isPressed) MessageBox \"Activation key pressed!\" endif endif StopScript \"IsActivating\" End","title":"xGetKeyBind"},{"location":"references/mwse-mwscript/utility/#xgetmcpfeaturestate","text":"Parameters: long id : Identifier for the MCP feature. Returned: short state : 1 if the feature is enabled, 0 if it is disabled, or -1 if MWSE couldn't determine the MCP installation state. This function can be used to attempt to ensure that the user has the correct Morrowind Code Patch features enabled. Note The id parameter comes from mcpatch\\describe.json . For example, 137 matches with the Slowfall Overhaul component. Warning This functions depends on the user not deleting their mcpatch\\installed file. If the user doesn't have this file (because they deleted it or don't have the MCP installed), this function returns a value of -1 . Example begin DetectPickPocketOverhaul short state setx state to xGetMCPFeatureState 77 if (state) then MessageBox \"Pickpocket overhaul is enabled in MCP.\" endif end","title":"xGetMCPFeatureState"},{"location":"references/mwse-mwscript/utility/#xkeypressed","text":"Parameters: long keyCode : The Virtual-Key Code to check for input. Returned: long (many) keyStatus : The status of keyCode if the parameter is non-zero. Otherwise it returns multiple times, with every key code pressed. Monitors the status of the keyboard (and mouse buttons). This can be similar to GetPCSneaking, but actually detects whether a particular key is really being pressed. If input parameter code is a Virtual-Key Code (between 1 and 254) the return value will indicate the status of that key. A non-zero value means the key is being pressed. If the input code is 0, then on each call, the function will return the key code for the key (or one of the keys) currently being pressed. Warning Some of the codes match different keys on different keyboard layouts. Note The key VK code for a given input can be fetched using xKeyPressed , instead of having to rely on hardcoded values.","title":"xKeyPressed"},{"location":"references/mwse-mwscript/utility/#xlogmessage","text":"Parameters: string format : The formatting for the log message. varies (many) input : Values to inject into the format . Returned: None Writes out formatted strings to the log file (mwse.log). This works much like MessageBox but with the additional formatting options described for xStringBuild . A trailing % in the format string will suppress the printing of the new line sequence allowing a single line of text to be created with two or more xLogMessage calls. The number of parameters specified in the format MUST match those supplied or there will be trouble. Note Literal strings in MWEdit have a maximum length of 63 characters.","title":"xLogMessage"},{"location":"references/mwse-mwscript/utility/#xmessagefix","text":"Parameters: string (many) newStrings : The strings used to overwrite the following MessageBox call. Returned: None This function allows you to use strings from variables with the MessageBox function with a few restrictions. The MessageBox command must immediately follow this one. The number of strings for this function must match the number of strings for the MessageBox. The MessageBox can have buttons but it can't use variables. The values of the strings used on the MessageBox will be replaced with the values from xMessageFix, but the MessageBox strings set a maximum size for each of the xMessageFix strings (it's OK if the MessageBox strings are longer than the MessageFix ones). Using xMessageFix can take both the string variable and literal string types and each string acts as a format string as described for the xStringBuild function. If a string ends in a single % and the formatted string takes less space than the matching string from MessageBox, the remaining characters of the MessageBox string will be used. While it is possible to use formatted messages and buttons, it is best to format strings with xStringBuild if there are buttons involved because of the limit of 12 parameters per function.","title":"xMessageFix"},{"location":"references/mwse-mwscript/utility/#xscriptrunning","text":"Parameters: string scriptName : The name of the script to determine the status of. Returned: long status : 1 if the script is running, or 0 if it is not (or does not exist). This function is a wrapper around ScriptRunning which allows a variable input.","title":"xScriptRunning"},{"location":"references/mwse-mwscript/utility/#xsetglobal","text":"Parameters: string globalName : The name of the global. float value : The value to set the global to. Returned: long found : 1 if the global was set, otherwise 0. Set the global represented by globalName to value .","title":"xSetGlobal"},{"location":"references/mwse-mwscript/utility/#xsetgsstring","text":"Parameters: long index : ID of the GMST to look up. string newValue : The value to set the GMST to. Returned: long valueSet : 1 if the value was successfully set. Fetches a GMST string by its given index , and sets its value to newValue","title":"xSetGSString"},{"location":"references/mwse-mwscript/utility/#xstartscript","text":"Parameters: string scriptName : The name of the script to determine the status of. Returned: None This function is a wrapper around StartScript which allows a variable input.","title":"xStartScript"},{"location":"references/mwse-mwscript/utility/#xstopscript","text":"Parameters: string scriptName : The name of the script to determine the status of. Returned: None This function is a wrapper around StartScript which allows a variable input.","title":"xStopScript"},{"location":"references/mwse-mwscript/utility/#xtextinput","text":"Parameters: string string : The string to modify with the user's input. long endCode : The Virtual-Key Code used to stop reading input. Returned: long length : The length of text . string text : The text entered. This function allows you to directly read keyboard input from the user and the results will be returned as a string. Pass a string and a virtual key code to the function. The function will wait for a key to be pressed and then take one of three actions. If the key pressed matches the endCode parameter, the string and its length are returned. If the key pressed is a printable ASCII character, the character is added to the string and the string and the number 0 are returned. If the key is RETURN or BACKSPACE, a new line is started or one character is removed from the string, and the modifed string and a 0 are returned. The function returns after each key press so that the current value of the string can be shown with xMessageFix and MessageBox but the string should only be used normally after the length is returned. Player controls should be disabled while this function is used. Note xGetKeyBind can be used to determine a specific key the user has configured.","title":"xTextInput"},{"location":"references/mwse-mwscript/utility/#xtextinputalt","text":"Parameters: string string : The string to modify with the user's input. long endCode : The Virtual-Key Code used to stop reading input. Returned: long length : The length of text . string text : The text entered. This function is identical to xTextInput except that the function simply checks the status of keys and returns immediately rather than waiting for a key to be pressed.","title":"xTextInputAlt"},{"location":"references/ni/animation-cycle-types/","text":"Animation Cycle Types \u2693\ufe0e Tip These values are available in Lua by their index in the ni.animCycleType table. For example, ni.animCycleType.reverse has a value of 2 . Index Value Description loop 0 At the end of the animation, it's looped again from the beginning. reverse 2 At the end of the animation, it's played in reverse achieving a ping-pong effect. clamp 4 Animation stops at the end.","title":"Animation Cycle Types"},{"location":"references/ni/animation-cycle-types/#animation-cycle-types","text":"Tip These values are available in Lua by their index in the ni.animCycleType table. For example, ni.animCycleType.reverse has a value of 2 . Index Value Description loop 0 At the end of the animation, it's looped again from the beginning. reverse 2 At the end of the animation, it's played in reverse achieving a ping-pong effect. clamp 4 Animation stops at the end.","title":"Animation Cycle Types"},{"location":"references/ni/animation-key-types/","text":"Animation Key Types \u2693\ufe0e Tip These values are available in Lua by their index in the ni.animationKeyType table. For example, ni.animationKeyType.tcb has a value of 3 . Index Value Description noInterp 0 Don't use interpolation. linear 1 Linear interpolation. bezier 2 Bezier (actually Hermite) interpolation. tcb 3 Tension-Continuity-Bias interpolation. TCB 3 euler 4 Euler interpolation \u2014 only applies to interpolation of rotation in niEulerRotKey s.","title":"Animation Key Types"},{"location":"references/ni/animation-key-types/#animation-key-types","text":"Tip These values are available in Lua by their index in the ni.animationKeyType table. For example, ni.animationKeyType.tcb has a value of 3 . Index Value Description noInterp 0 Don't use interpolation. linear 1 Linear interpolation. bezier 2 Bezier (actually Hermite) interpolation. tcb 3 Tension-Continuity-Bias interpolation. TCB 3 euler 4 Euler interpolation \u2014 only applies to interpolation of rotation in niEulerRotKey s.","title":"Animation Key Types"},{"location":"references/ni/animation-types/","text":"Animation Types \u2693\ufe0e Tip These values are available in Lua by their index in the ni.animType table. For example, ni.animType.appTime has a value of 0 . Index Value Description appTime 0 The time controller will simply use the Update time (after applying the frequency and phase modifications) to directly interpolate the state of the animation. appInit 1 The time controller will use the modified Update time to determine how long it has been since the animation has started playing and then use that local time to interpolate the state of the animation.","title":"Animation Types"},{"location":"references/ni/animation-types/#animation-types","text":"Tip These values are available in Lua by their index in the ni.animType table. For example, ni.animType.appTime has a value of 0 . Index Value Description appTime 0 The time controller will simply use the Update time (after applying the frequency and phase modifications) to directly interpolate the state of the animation. appInit 1 The time controller will use the modified Update time to determine how long it has been since the animation has started playing and then use that local time to interpolate the state of the animation.","title":"Animation Types"},{"location":"references/ni/billboard-modes/","text":"Billboard Modes \u2693\ufe0e Tip These values are available in Lua by their index in the ni.billboardMode table. For example, ni.billboardMode.rotateAboutUp has a value of 1 . Index Value Description alwaysFaceCamera 0 Causes the model-space z-vector to be in line with the camera's view plane normal. In other words, any plane of constant z in model space will have its normal parallel to the camera's direction vector. Each frame, the rotation required to reestablish this orientation is minimized. As a result, this mode may differ from rigidFaceCamera. rotateAboutUp 1 Causes the model-space z-vector of the billboard to be as close as possible to the camera's direction vector while only allowing rotation about the billboard's model-space up-axis [0,1,0]. This mode is useful for simulating cylindrically symmetric objects, such as light posts and trees, using a single cross-sectional flat image. rigidFaceCamera 2 The billboard has a normal that is always parallel to the camera's direction vector and the billboard and camera coordinate frames change rigidly together.","title":"Billboard Modes"},{"location":"references/ni/billboard-modes/#billboard-modes","text":"Tip These values are available in Lua by their index in the ni.billboardMode table. For example, ni.billboardMode.rotateAboutUp has a value of 1 . Index Value Description alwaysFaceCamera 0 Causes the model-space z-vector to be in line with the camera's view plane normal. In other words, any plane of constant z in model space will have its normal parallel to the camera's direction vector. Each frame, the rotation required to reestablish this orientation is minimized. As a result, this mode may differ from rigidFaceCamera. rotateAboutUp 1 Causes the model-space z-vector of the billboard to be as close as possible to the camera's direction vector while only allowing rotation about the billboard's model-space up-axis [0,1,0]. This mode is useful for simulating cylindrically symmetric objects, such as light posts and trees, using a single cross-sectional flat image. rigidFaceCamera 2 The billboard has a normal that is always parallel to the camera's direction vector and the billboard and camera coordinate frames change rigidly together.","title":"Billboard Modes"},{"location":"references/ni/dynamic-effect-types/","text":"Dynamic Effect Types \u2693\ufe0e Tip These values are available in Lua by their index in the ni.dynamicEffectType table. For example, ni.dynamicEffectType.pointLight has a value of 2 . Index Value ambientLight 0 directionalLight 1 pointLight 2 spotLight 3 textureEffect 4","title":"Dynamic Effect Types"},{"location":"references/ni/dynamic-effect-types/#dynamic-effect-types","text":"Tip These values are available in Lua by their index in the ni.dynamicEffectType table. For example, ni.dynamicEffectType.pointLight has a value of 2 . Index Value ambientLight 0 directionalLight 1 pointLight 2 spotLight 3 textureEffect 4","title":"Dynamic Effect Types"},{"location":"references/ni/euler-rotation-key-orders/","text":"Euler Rotation Key Orders \u2693\ufe0e Tip These values are available in Lua by their index in the ni.eulerRotKeyOrder table. For example, ni.eulerRotKeyOrder.YZX has a value of 2 . Index Value XYZ 0 XZY 1 YZX 2 YXZ 3 ZXY 4 ZYX 5 XYX 6 YZY 7 ZXZ 8","title":"Euler Rotation Key Orders"},{"location":"references/ni/euler-rotation-key-orders/#euler-rotation-key-orders","text":"Tip These values are available in Lua by their index in the ni.eulerRotKeyOrder table. For example, ni.eulerRotKeyOrder.YZX has a value of 2 . Index Value XYZ 0 XZY 1 YZX 2 YXZ 3 ZXY 4 ZYX 5 XYX 6 YZY 7 ZXZ 8","title":"Euler Rotation Key Orders"},{"location":"references/ni/gravity-force-types/","text":"Gravity Force Types \u2693\ufe0e Tip These values are available in Lua by their index in the ni.gravityForceType table. For example, ni.gravityForceType.spherical has a value of 1 . Index Value Description planar 0 Gravity of this type operates parallel to the direction vector of the niGravity. spherical 1 Gravity of this type operates spherically about the position point of the niGravity.","title":"Gravity Force Types"},{"location":"references/ni/gravity-force-types/#gravity-force-types","text":"Tip These values are available in Lua by their index in the ni.gravityForceType table. For example, ni.gravityForceType.spherical has a value of 1 . Index Value Description planar 0 Gravity of this type operates parallel to the direction vector of the niGravity. spherical 1 Gravity of this type operates spherically about the position point of the niGravity.","title":"Gravity Force Types"},{"location":"references/ni/lighting-modes/","text":"Lighting Modes \u2693\ufe0e Tip These values are available in Lua by their index in the ni.lightingMode table. For example, ni.lightingMode.emissive has a value of 0 . Index Value Description emissive 0 Only the emissive component of the lighting equation is used. No dynamic lights are considered in the lighting process. emiAmbDif 1 The emissive, ambient, and diffuse components of the lighting equation are all used.","title":"Lighting Modes"},{"location":"references/ni/lighting-modes/#lighting-modes","text":"Tip These values are available in Lua by their index in the ni.lightingMode table. For example, ni.lightingMode.emissive has a value of 0 . Index Value Description emissive 0 Only the emissive component of the lighting equation is used. No dynamic lights are considered in the lighting process. emiAmbDif 1 The emissive, ambient, and diffuse components of the lighting equation are all used.","title":"Lighting Modes"},{"location":"references/ni/look-at-controller-axes/","text":"Look at Controller Axes \u2693\ufe0e Tip These values are available in Lua by their index in the ni.lookAtControllerAxis table. For example, ni.lookAtControllerAxis.Z has a value of 2 . Index Value X 0 Y 1 Z 2","title":"Look at Controller Axes"},{"location":"references/ni/look-at-controller-axes/#look-at-controller-axes","text":"Tip These values are available in Lua by their index in the ni.lookAtControllerAxis table. For example, ni.lookAtControllerAxis.Z has a value of 2 . Index Value X 0 Y 1 Z 2","title":"Look at Controller Axes"},{"location":"references/ni/particle-bomb-decay-types/","text":"Particle Bomb Decay Types \u2693\ufe0e Tip These values are available in Lua by their index in the ni.particleBombDecayType table. For example, ni.particleBombDecayType.none has a value of 0 . Index Value Description none 0 The bomb's force will not decay over distance. linear 1 The force will decay linearly with distance. exponential 2 The force will decay exponentially with distance.","title":"Particle Bomb Decay Types"},{"location":"references/ni/particle-bomb-decay-types/#particle-bomb-decay-types","text":"Tip These values are available in Lua by their index in the ni.particleBombDecayType table. For example, ni.particleBombDecayType.none has a value of 0 . Index Value Description none 0 The bomb's force will not decay over distance. linear 1 The force will decay linearly with distance. exponential 2 The force will decay exponentially with distance.","title":"Particle Bomb Decay Types"},{"location":"references/ni/particle-bomb-symmetry-types/","text":"Particle Bomb Symmetry Types \u2693\ufe0e Tip These values are available in Lua by their index in the ni.particleBombSymmetryType table. For example, ni.particleBombSymmetryType.cylindrical has a value of 1 . Index Value Description spherical 0 The bomb's force will operate spherically about the point specified by position vector. cylindrical 1 The bomb will apply force to particles perpendicular to the direction vector but centered about the position vector. planar 2 The bomb's force is applied parallel to the direction vector.","title":"Particle Bomb Symmetry Types"},{"location":"references/ni/particle-bomb-symmetry-types/#particle-bomb-symmetry-types","text":"Tip These values are available in Lua by their index in the ni.particleBombSymmetryType table. For example, ni.particleBombSymmetryType.cylindrical has a value of 1 . Index Value Description spherical 0 The bomb's force will operate spherically about the point specified by position vector. cylindrical 1 The bomb will apply force to particles perpendicular to the direction vector but centered about the position vector. planar 2 The bomb's force is applied parallel to the direction vector.","title":"Particle Bomb Symmetry Types"},{"location":"references/ni/pick-coordinate-types/","text":"Pick Coordinate Types \u2693\ufe0e Tip These values are available in Lua by their index in the ni.pickCoordinateType table. For example, ni.pickCoordinateType.worldCoordinates has a value of 1 . Index Value Description modelCoordinates 0 The points returned by picking opertion will be in model coordinates. worldCoordinates 1 The points returned by picking opertion will be in world coordinates.","title":"Pick Coordinate Types"},{"location":"references/ni/pick-coordinate-types/#pick-coordinate-types","text":"Tip These values are available in Lua by their index in the ni.pickCoordinateType table. For example, ni.pickCoordinateType.worldCoordinates has a value of 1 . Index Value Description modelCoordinates 0 The points returned by picking opertion will be in model coordinates. worldCoordinates 1 The points returned by picking opertion will be in world coordinates.","title":"Pick Coordinate Types"},{"location":"references/ni/pick-intersection-types/","text":"Pick Intersection Types \u2693\ufe0e Tip These values are available in Lua by their index in the ni.pickIntersectType table. For example, ni.pickIntersectType.triangleIntersect has a value of 1 . Index Value Description boundIntersect 0 Intersection calculations are performed on the bounding spheres of objects. In this mode, intersections are either hit or miss, and calculations for the exact intersection point are not performed. Since exact intersection points are not calculated, the sortType is ignored. triangleIntersect 1 Intersection calculations are performed on the triangles that compose the objects. In this mode, intersections are exact. Calculations for the exact intersection point are performed and the intersection point, parametric distance from the ray origin, and index of the intersected triangle are stored in the niPickRecord. Once all intersections are calculated the array is sorted based on the sortType . Since only triangles are processed, niPickRecords are only added for the leaf nodes. Note that more than one pick record could be added per leaf node if more than one triangle intersection occurs.","title":"Pick Intersection Types"},{"location":"references/ni/pick-intersection-types/#pick-intersection-types","text":"Tip These values are available in Lua by their index in the ni.pickIntersectType table. For example, ni.pickIntersectType.triangleIntersect has a value of 1 . Index Value Description boundIntersect 0 Intersection calculations are performed on the bounding spheres of objects. In this mode, intersections are either hit or miss, and calculations for the exact intersection point are not performed. Since exact intersection points are not calculated, the sortType is ignored. triangleIntersect 1 Intersection calculations are performed on the triangles that compose the objects. In this mode, intersections are exact. Calculations for the exact intersection point are performed and the intersection point, parametric distance from the ray origin, and index of the intersected triangle are stored in the niPickRecord. Once all intersections are calculated the array is sorted based on the sortType . Since only triangles are processed, niPickRecords are only added for the leaf nodes. Note that more than one pick record could be added per leaf node if more than one triangle intersection occurs.","title":"Pick Intersection Types"},{"location":"references/ni/pick-sort-types/","text":"Pick Sort Types \u2693\ufe0e Tip These values are available in Lua by their index in the ni.pickSortType table. For example, ni.pickSortType.sort has a value of 0 . Index Value Description sort 0 The points returned by picking opertion will be sorted along the distance from the ray origin. noSort 1 The points returned by picking opertion will not be sorted.","title":"Pick Sort Types"},{"location":"references/ni/pick-sort-types/#pick-sort-types","text":"Tip These values are available in Lua by their index in the ni.pickSortType table. For example, ni.pickSortType.sort has a value of 0 . Index Value Description sort 0 The points returned by picking opertion will be sorted along the distance from the ray origin. noSort 1 The points returned by picking opertion will not be sorted.","title":"Pick Sort Types"},{"location":"references/ni/pick-types/","text":"Pick Types \u2693\ufe0e Tip These values are available in Lua by their index in the ni.pickType table. For example, ni.pickType.findAll has a value of 0 . Index Value Description findAll 0 The picking operation continues for the maxDistance units given to the pickObjects method. findFirst 1 The picking operation will end at first intersection.","title":"Pick Types"},{"location":"references/ni/pick-types/#pick-types","text":"Tip These values are available in Lua by their index in the ni.pickType table. For example, ni.pickType.findAll has a value of 0 . Index Value Description findAll 0 The picking operation continues for the maxDistance units given to the pickObjects method. findFirst 1 The picking operation will end at first intersection.","title":"Pick Types"},{"location":"references/ni/property-types/","text":"Property Types \u2693\ufe0e Tip These values are available in Lua by their index in the ni.propertyType table. For example, ni.propertyType.texturing has a value of 4 . Index Value alpha 0 fog 1 material 2 stencil 3 texturing 4 vertexColor 5 wireframe 6 zBuffer 7 dither 8 specular 9 shade 10 rendererSpecific 11 firstPropertyType 0 lastPropertyType 11","title":"Property Types"},{"location":"references/ni/property-types/#property-types","text":"Tip These values are available in Lua by their index in the ni.propertyType table. For example, ni.propertyType.texturing has a value of 4 . Index Value alpha 0 fog 1 material 2 stencil 3 texturing 4 vertexColor 5 wireframe 6 zBuffer 7 dither 8 specular 9 shade 10 rendererSpecific 11 firstPropertyType 0 lastPropertyType 11","title":"Property Types"},{"location":"references/ni/source-vertex-modes/","text":"Source Vertex Modes \u2693\ufe0e Tip These values are available in Lua by their index in the ni.sourceVertexMode table. For example, ni.sourceVertexMode.emissive has a value of 1 . Index Value Description ignore 0 Emissive, ambient, and diffuse colors are all specified by the niMaterialProperty. In other words, vertex colors aren't used. emissive 1 Emissive colors are specified by the source vertex colors. Ambient and Diffuse are specified by the niMaterialProperty. ambDiff 2 Ambient and Diffuse colors are specified by the source vertex colors. Emissive is specified by the niMaterialProperty (Default).","title":"Source Vertex Modes"},{"location":"references/ni/source-vertex-modes/#source-vertex-modes","text":"Tip These values are available in Lua by their index in the ni.sourceVertexMode table. For example, ni.sourceVertexMode.emissive has a value of 1 . Index Value Description ignore 0 Emissive, ambient, and diffuse colors are all specified by the niMaterialProperty. In other words, vertex colors aren't used. emissive 1 Emissive colors are specified by the source vertex colors. Ambient and Diffuse are specified by the niMaterialProperty. ambDiff 2 Ambient and Diffuse colors are specified by the source vertex colors. Emissive is specified by the niMaterialProperty (Default).","title":"Source Vertex Modes"},{"location":"references/ni/stencil-draw-modes/","text":"Stencil Draw Modes \u2693\ufe0e Tip These values are available in Lua by their index in the ni.stencilDrawMode table. For example, ni.stencilDrawMode.counterclockwise has a value of 1 . Index Value Description counterclockwiseOrBoth 0 The default mode, chooses between counterclockwise or both. counterclockwise 1 Draw only the triangles whose vertices are ordered counter-clockwise with respect to the viewer (Standard behavior). clockwise 2 Draw only the triangles whose vertices are ordered clockwise with respect to the viewer (Effectively flips the faces). both 3 Do not cull back faces of any kind. Draw all triangles, regardless of orientation (Effectively force double-sided).","title":"Stencil Draw Modes"},{"location":"references/ni/stencil-draw-modes/#stencil-draw-modes","text":"Tip These values are available in Lua by their index in the ni.stencilDrawMode table. For example, ni.stencilDrawMode.counterclockwise has a value of 1 . Index Value Description counterclockwiseOrBoth 0 The default mode, chooses between counterclockwise or both. counterclockwise 1 Draw only the triangles whose vertices are ordered counter-clockwise with respect to the viewer (Standard behavior). clockwise 2 Draw only the triangles whose vertices are ordered clockwise with respect to the viewer (Effectively flips the faces). both 3 Do not cull back faces of any kind. Draw all triangles, regardless of orientation (Effectively force double-sided).","title":"Stencil Draw Modes"},{"location":"references/ni/stencil-test-actions/","text":"Stencil Test Actions \u2693\ufe0e Tip These values are available in Lua by their index in the ni.stencilTestAction table. For example, ni.stencilTestAction.increment has a value of 3 . Index Value Description keep 0 Keep the current value in the stencil buffer. zero 1 Write zero to the stencil buffer. replace 2 Write the value of reference property of niStencilProperty to the stencil buffer. increment 3 Increment the value in the stencil buffer. decrement 4 Decrement the value in the stencil buffer. invert 5 Bitwise invert the value in the stencil buffer.","title":"Stencil Test Actions"},{"location":"references/ni/stencil-test-actions/#stencil-test-actions","text":"Tip These values are available in Lua by their index in the ni.stencilTestAction table. For example, ni.stencilTestAction.increment has a value of 3 . Index Value Description keep 0 Keep the current value in the stencil buffer. zero 1 Write zero to the stencil buffer. replace 2 Write the value of reference property of niStencilProperty to the stencil buffer. increment 3 Increment the value in the stencil buffer. decrement 4 Decrement the value in the stencil buffer. invert 5 Bitwise invert the value in the stencil buffer.","title":"Stencil Test Actions"},{"location":"references/ni/stencil-test-functions/","text":"Stencil Test Functions \u2693\ufe0e Tip These values are available in Lua by their index in the ni.stencilTestFunction table. For example, ni.stencilTestFunction.equal has a value of 2 . Index Value Description never 0 Test will allways return false. Nothing is drawn at all. less 1 The test will only succeed if the pixel is nearer than the previous pixel. equal 2 Test will only succeed if the z value of the pixel to be drawn is equal to the value of the previously drawn pixel. lessEqual 3 Test will succeed if the z value of the pixel to be drawn is smaller than or equal to the value in the Stencil Buffer. greater 4 The test will only succeed if the pixel is farther than the previous pixel. notEqual 5 Test will succeed if the z value of the pixel to be drawn is NOT equal to the value of the previously drawn pixel. greaterEqual 6 Test will succeed if the z value of the pixel to be drawn is bigger than or equal to the value in the Stencil Buffer. always 7 Test will allways succeed. The Stencil Buffer value is ignored.","title":"Stencil Test Functions"},{"location":"references/ni/stencil-test-functions/#stencil-test-functions","text":"Tip These values are available in Lua by their index in the ni.stencilTestFunction table. For example, ni.stencilTestFunction.equal has a value of 2 . Index Value Description never 0 Test will allways return false. Nothing is drawn at all. less 1 The test will only succeed if the pixel is nearer than the previous pixel. equal 2 Test will only succeed if the z value of the pixel to be drawn is equal to the value of the previously drawn pixel. lessEqual 3 Test will succeed if the z value of the pixel to be drawn is smaller than or equal to the value in the Stencil Buffer. greater 4 The test will only succeed if the pixel is farther than the previous pixel. notEqual 5 Test will succeed if the z value of the pixel to be drawn is NOT equal to the value of the previously drawn pixel. greaterEqual 6 Test will succeed if the z value of the pixel to be drawn is bigger than or equal to the value in the Stencil Buffer. always 7 Test will allways succeed. The Stencil Buffer value is ignored.","title":"Stencil Test Functions"},{"location":"references/ni/texture-format-preference-alpha-formats/","text":"Texture Format Preference Alpha Formats \u2693\ufe0e Tip These values are available in Lua by their index in the ni.textureFormatPrefsAlphaFormat table. For example, ni.textureFormatPrefsAlphaFormat.smooth has a value of 2 . Index Value Description none 0 Texture doesn't use alpha. binary 1 Texture needs only 1-bit (on/off) alpha. smooth 2 Texture needs multi-level alpha (4 to 8 bits of alpha). default 3 Texture can use an alpha format that best fits the source data.","title":"Texture Format Preference Alpha Formats"},{"location":"references/ni/texture-format-preference-alpha-formats/#texture-format-preference-alpha-formats","text":"Tip These values are available in Lua by their index in the ni.textureFormatPrefsAlphaFormat table. For example, ni.textureFormatPrefsAlphaFormat.smooth has a value of 2 . Index Value Description none 0 Texture doesn't use alpha. binary 1 Texture needs only 1-bit (on/off) alpha. smooth 2 Texture needs multi-level alpha (4 to 8 bits of alpha). default 3 Texture can use an alpha format that best fits the source data.","title":"Texture Format Preference Alpha Formats"},{"location":"references/ni/texture-format-preference-mip-flags/","text":"Texture Format Preference Mip Flags \u2693\ufe0e Tip These values are available in Lua by their index in the ni.textureFormatPrefsMipFlag table. For example, ni.textureFormatPrefsMipFlag.yes has a value of 1 . Index Value Description no 0 Texture prefers no mipmapping (\"flat\" image). yes 1 Texture prefers mipmapping. default 2 Texture can use the default setting from niTexture.","title":"Texture Format Preference Mip Flags"},{"location":"references/ni/texture-format-preference-mip-flags/#texture-format-preference-mip-flags","text":"Tip These values are available in Lua by their index in the ni.textureFormatPrefsMipFlag table. For example, ni.textureFormatPrefsMipFlag.yes has a value of 1 . Index Value Description no 0 Texture prefers no mipmapping (\"flat\" image). yes 1 Texture prefers mipmapping. default 2 Texture can use the default setting from niTexture.","title":"Texture Format Preference Mip Flags"},{"location":"references/ni/texture-format-preference-pixel-layouts/","text":"Texture Format Preference Pixel Layouts \u2693\ufe0e Tip These values are available in Lua by their index in the ni.textureFormatPrefsPixelLayout table. For example, ni.textureFormatPrefsPixelLayout.trueColor32 has a value of 2 . Index Value Description palettized8 0 Texture prefers an 8 bit palettized format (with or without alpha). highColor16 1 Texture prefers a 16-bit per pixel RGB(A) format. trueColor32 2 Texture prefers a 24/32-bit per pixel RGB(A) format. compressed 3 Texture prefers a compressed format. bumpMap 4 Texture prefers a Bump-map format. default 5 Texture can use whatever format best matches the source data.","title":"Texture Format Preference Pixel Layouts"},{"location":"references/ni/texture-format-preference-pixel-layouts/#texture-format-preference-pixel-layouts","text":"Tip These values are available in Lua by their index in the ni.textureFormatPrefsPixelLayout table. For example, ni.textureFormatPrefsPixelLayout.trueColor32 has a value of 2 . Index Value Description palettized8 0 Texture prefers an 8 bit palettized format (with or without alpha). highColor16 1 Texture prefers a 16-bit per pixel RGB(A) format. trueColor32 2 Texture prefers a 24/32-bit per pixel RGB(A) format. compressed 3 Texture prefers a compressed format. bumpMap 4 Texture prefers a Bump-map format. default 5 Texture can use whatever format best matches the source data.","title":"Texture Format Preference Pixel Layouts"},{"location":"references/ni/texturing-property-apply-modes/","text":"Texturing Property Apply Modes \u2693\ufe0e Tip These values are available in Lua by their index in the ni.texturingPropertyApplyMode table. For example, ni.texturingPropertyApplyMode.replace has a value of 0 . In the table below, C R represents the resulting color, A R represents the final alpha. The same notation is used for texture color and alpha values but with index T. Vertex color values have index V. Index Value Resulting Color Resulting Alpha Common Application replace 0 C R = C T A R = A T Basic texturing without any dynamic or static vertex-based lighting. decal 1 C R = C T x A T + C V x (1 - A T ) A R = A V Decal or bullet-hole textures on a base untextured surface. modulate 2 C R = C T x C V A R = A T x A V Texture and final vertex colors and alpha values are multiplied component-by-component.","title":"Texturing Property Apply Modes"},{"location":"references/ni/texturing-property-apply-modes/#texturing-property-apply-modes","text":"Tip These values are available in Lua by their index in the ni.texturingPropertyApplyMode table. For example, ni.texturingPropertyApplyMode.replace has a value of 0 . In the table below, C R represents the resulting color, A R represents the final alpha. The same notation is used for texture color and alpha values but with index T. Vertex color values have index V. Index Value Resulting Color Resulting Alpha Common Application replace 0 C R = C T A R = A T Basic texturing without any dynamic or static vertex-based lighting. decal 1 C R = C T x A T + C V x (1 - A T ) A R = A V Decal or bullet-hole textures on a base untextured surface. modulate 2 C R = C T x C V A R = A T x A V Texture and final vertex colors and alpha values are multiplied component-by-component.","title":"Texturing Property Apply Modes"},{"location":"references/ni/texturing-property-clamp-modes/","text":"Texturing Property Clamp Modes \u2693\ufe0e Tip These values are available in Lua by their index in the ni.texturingPropertyClampMode table. For example, ni.texturingPropertyClampMode.wrapSwrapT has a value of 3 . Index Value Description clampSclampT 0 Both texture dimensions are wrapped infinitely. clampSwrapT 1 U dimension is wrapped, V dimension is clamped to be between 0 and 1. wrapSclampT 2 U dimension is clamped to be between 0 and 1, V dimension is wrapped. wrapSwrapT 3 Both dimensions are clamped to be between 0 and 1.","title":"Texturing Property Clamp Modes"},{"location":"references/ni/texturing-property-clamp-modes/#texturing-property-clamp-modes","text":"Tip These values are available in Lua by their index in the ni.texturingPropertyClampMode table. For example, ni.texturingPropertyClampMode.wrapSwrapT has a value of 3 . Index Value Description clampSclampT 0 Both texture dimensions are wrapped infinitely. clampSwrapT 1 U dimension is wrapped, V dimension is clamped to be between 0 and 1. wrapSclampT 2 U dimension is clamped to be between 0 and 1, V dimension is wrapped. wrapSwrapT 3 Both dimensions are clamped to be between 0 and 1.","title":"Texturing Property Clamp Modes"},{"location":"references/ni/texturing-property-filter-modes/","text":"Texturing Property Filter Modes \u2693\ufe0e Tip These values are available in Lua by their index in the ni.texturingPropertyFilterMode table. For example, ni.texturingPropertyFilterMode.bilerpMipNearest has a value of 5 . Index Value Description nearest 0 Uses nearest neighbor, with no mipmapping. The most common reason to use nearest neighbor filtering is to achieve a \"blocky\" effect. bilerp 1 Uses bilinear interpolation with no mipmapping. It linearly interpolates between the four texels that enclose the texture coordinate. It causes the texture to look blurry. trilerp 2 Uses bilinear interpolation on each of the two nearest mipmap levels, then performs linear mipmap interpolation between the results. nearestMipNearest 3 Uses \"nearest level mipmapping\", then uses nearest neighbor on the result. nearestMipLerp 4 Uses nearest neighbor on each of the two nearest mipmap levels and then performs linear mipmap interpolation between the results. bilerpMipNearest 5 Uses \"nearest level mipmapping\", then uses \"bilinear interpolation\" on the result.","title":"Texturing Property Filter Modes"},{"location":"references/ni/texturing-property-filter-modes/#texturing-property-filter-modes","text":"Tip These values are available in Lua by their index in the ni.texturingPropertyFilterMode table. For example, ni.texturingPropertyFilterMode.bilerpMipNearest has a value of 5 . Index Value Description nearest 0 Uses nearest neighbor, with no mipmapping. The most common reason to use nearest neighbor filtering is to achieve a \"blocky\" effect. bilerp 1 Uses bilinear interpolation with no mipmapping. It linearly interpolates between the four texels that enclose the texture coordinate. It causes the texture to look blurry. trilerp 2 Uses bilinear interpolation on each of the two nearest mipmap levels, then performs linear mipmap interpolation between the results. nearestMipNearest 3 Uses \"nearest level mipmapping\", then uses nearest neighbor on the result. nearestMipLerp 4 Uses nearest neighbor on each of the two nearest mipmap levels and then performs linear mipmap interpolation between the results. bilerpMipNearest 5 Uses \"nearest level mipmapping\", then uses \"bilinear interpolation\" on the result.","title":"Texturing Property Filter Modes"},{"location":"references/ni/texturing-property-map-types/","text":"Texturing Property Map Types \u2693\ufe0e Tip These values are available in Lua by their index in the ni.texturingPropertyMapType table. For example, ni.texturingPropertyMapType.decalFirst has a value of 7 . Index Value Description base 1 Base dark 2 Dark detail 3 Detail gloss 4 Gloss glow 5 Glow bump 6 Bump decalFirst 7 First decal decal1 7 Decal #1 decal2 8 Decal #2 decal3 9 Decal #3 decal4 10 Decal #4 decal5 11 Decal #5 decal6 12 Decal #6 decal7 13 Decal #7 decalLast 13 Last decal","title":"Texturing Property Map Types"},{"location":"references/ni/texturing-property-map-types/#texturing-property-map-types","text":"Tip These values are available in Lua by their index in the ni.texturingPropertyMapType table. For example, ni.texturingPropertyMapType.decalFirst has a value of 7 . Index Value Description base 1 Base dark 2 Dark detail 3 Detail gloss 4 Gloss glow 5 Glow bump 6 Bump decalFirst 7 First decal decal1 7 Decal #1 decal2 8 Decal #2 decal3 9 Decal #3 decal4 10 Decal #4 decal5 11 Decal #5 decal6 12 Decal #6 decal7 13 Decal #7 decalLast 13 Last decal","title":"Texturing Property Map Types"},{"location":"references/ni/types/","text":"Types \u2693\ufe0e Tip These values are available in Lua by their index in the ni.type table. For example, ni.type.NiBltSource has a value of 8249608 . Index Value OffscreenSceneGraph_MasterPropertyAccumulator 8156216 BSMirroredNode 8162040 TES3ObjectExtraData 8184448 BrickNiExtraData 8199496 AvoidNode 8247188 RootCollisionNode 8247212 NiDX8Renderer 8247452 NiExtraData 8248936 NiSkinPartition 8248964 NiNode 8249016 NiScreenPolygon 8249056 NiCamera 8249080 NiClusterAccumulator 8249120 NiAlphaAccumulator 8249160 NiAlphaProperty 8249212 NiAmbientLight 8249228 NiSkinData 8249276 NiSkinInstance 8249296 NiParticlesData 8249324 NiParticles 8249348 NiAutoNormalParticlesData 8249412 NiAutoNormalParticles 8249444 NiBillboardNode 8249504 NiPalette 8249540 NiPixelData 8249580 NiBltSource 8249608 NiBSPNode 8249660 NiCollisionSwitch 8249680 NiDirectionalLight 8249708 NiDitherProperty 8249748 NiSwitchNode 8249772 NiFltAnimationNode 8249832 NiFogProperty 8249840 NiLinesData 8249868 NiLines 8249896 NiLODNode 8249968 NiMaterialProperty 8249992 NiPointLight 8250024 NiRenderedTexture 8250044 NiRendererSpecificProperty 8250096 NiRotatingParticlesData 8250120 NiRotatingParticles 8250148 NiShadeProperty 8250212 NiSortAdjustNode 8250248 NiSourceTexture 8250304 NiSpecularProperty 8250332 NiSpotLight 8250368 NiStencilProperty 8250392 NiStringExtraData 8250412 NiTexturingProperty 8250432 NiTextureEffect 8250500 NiTriShapeData 8250512 NiTriShape 8250704 NiTriShapeDynamicData 8250728 NiTriStripsData 8250760 NiTriStrips 8250792 NiVertexColorProperty 8250832 NiVertWeightsExtraData 8250856 NiWireframeProperty 8250884 NiZBufferProperty 8250928 NiProperty 8251168 NiObject 8251188 NiObjectNET 8251244 NiAVObject 8251340 NiTexture 8251360 NiBSAnimationManager 8251676 NiGeometryData 8251708 NiTriBasedGeom 8251724 NiBSAnimationNode 8251788 NiDynamicEffect 8251912 NiGeometry 8251948 NiRenderer 8252060 NiAccumulator 8252608 NiLight 8252664 NiBSParticleNode 8252732 NiTimeController 8252852 NiRenderedCubeMap 8252948 NiTriBasedGeomData 8253052 NiParticleSystemController 8253284 NiKeyframeData 8253384 NiKeyframeController 8253440 NiTextKeyExtraData 8253496 NiKeyframeManager 8253528 NiFloatData 8253572 NiAlphaController 8253600 NiColorData 8253696 NiFlipController 8253752 NiMorphData 8253768 NiGeomMorpherController 8253824 NiGravity 8253872 NiPosData 8253908 NiLightColorController 8253944 NiLookAtController 8254020 NiMaterialColorController 8254072 NiParticleBomb 8254124 NiParticleColorModifier 8254172 NiParticleGrowFade 8254212 NiParticleRotation 8254272 NiPathController 8254356 NiPlanarCollider 8254412 NiRollController 8254432 NiSequenceStreamHelper 8254456 NiSphericalCollider 8254496 NiUVData 8254588 NiUVController 8254628 NiVisData 8254656 NiVisController 8254680 NiBSPArrayController 8255864 NiFloatController 8255928 NiMorpherController 8256008 NiParticleModifier 8256088 NiParticleCollider 8256140","title":"Types"},{"location":"references/ni/types/#types","text":"Tip These values are available in Lua by their index in the ni.type table. For example, ni.type.NiBltSource has a value of 8249608 . Index Value OffscreenSceneGraph_MasterPropertyAccumulator 8156216 BSMirroredNode 8162040 TES3ObjectExtraData 8184448 BrickNiExtraData 8199496 AvoidNode 8247188 RootCollisionNode 8247212 NiDX8Renderer 8247452 NiExtraData 8248936 NiSkinPartition 8248964 NiNode 8249016 NiScreenPolygon 8249056 NiCamera 8249080 NiClusterAccumulator 8249120 NiAlphaAccumulator 8249160 NiAlphaProperty 8249212 NiAmbientLight 8249228 NiSkinData 8249276 NiSkinInstance 8249296 NiParticlesData 8249324 NiParticles 8249348 NiAutoNormalParticlesData 8249412 NiAutoNormalParticles 8249444 NiBillboardNode 8249504 NiPalette 8249540 NiPixelData 8249580 NiBltSource 8249608 NiBSPNode 8249660 NiCollisionSwitch 8249680 NiDirectionalLight 8249708 NiDitherProperty 8249748 NiSwitchNode 8249772 NiFltAnimationNode 8249832 NiFogProperty 8249840 NiLinesData 8249868 NiLines 8249896 NiLODNode 8249968 NiMaterialProperty 8249992 NiPointLight 8250024 NiRenderedTexture 8250044 NiRendererSpecificProperty 8250096 NiRotatingParticlesData 8250120 NiRotatingParticles 8250148 NiShadeProperty 8250212 NiSortAdjustNode 8250248 NiSourceTexture 8250304 NiSpecularProperty 8250332 NiSpotLight 8250368 NiStencilProperty 8250392 NiStringExtraData 8250412 NiTexturingProperty 8250432 NiTextureEffect 8250500 NiTriShapeData 8250512 NiTriShape 8250704 NiTriShapeDynamicData 8250728 NiTriStripsData 8250760 NiTriStrips 8250792 NiVertexColorProperty 8250832 NiVertWeightsExtraData 8250856 NiWireframeProperty 8250884 NiZBufferProperty 8250928 NiProperty 8251168 NiObject 8251188 NiObjectNET 8251244 NiAVObject 8251340 NiTexture 8251360 NiBSAnimationManager 8251676 NiGeometryData 8251708 NiTriBasedGeom 8251724 NiBSAnimationNode 8251788 NiDynamicEffect 8251912 NiGeometry 8251948 NiRenderer 8252060 NiAccumulator 8252608 NiLight 8252664 NiBSParticleNode 8252732 NiTimeController 8252852 NiRenderedCubeMap 8252948 NiTriBasedGeomData 8253052 NiParticleSystemController 8253284 NiKeyframeData 8253384 NiKeyframeController 8253440 NiTextKeyExtraData 8253496 NiKeyframeManager 8253528 NiFloatData 8253572 NiAlphaController 8253600 NiColorData 8253696 NiFlipController 8253752 NiMorphData 8253768 NiGeomMorpherController 8253824 NiGravity 8253872 NiPosData 8253908 NiLightColorController 8253944 NiLookAtController 8254020 NiMaterialColorController 8254072 NiParticleBomb 8254124 NiParticleColorModifier 8254172 NiParticleGrowFade 8254212 NiParticleRotation 8254272 NiPathController 8254356 NiPlanarCollider 8254412 NiRollController 8254432 NiSequenceStreamHelper 8254456 NiSphericalCollider 8254496 NiUVData 8254588 NiUVController 8254628 NiVisData 8254656 NiVisController 8254680 NiBSPArrayController 8255864 NiFloatController 8255928 NiMorpherController 8256008 NiParticleModifier 8256088 NiParticleCollider 8256140","title":"Types"},{"location":"references/ni/z-buffer-property-test-functions/","text":"Z-Buffer Property Test Functions \u2693\ufe0e Tip These values are available in Lua by their index in the ni.zBufferPropertyTestFunction table. For example, ni.zBufferPropertyTestFunction.less has a value of 1 . Note Less than means closer to the camera and greater than means farther from the camera, regardless of the low-level hardware representation of Z values. Index Value Description always 0 Test will allways succeed. The Z Buffer value is ignored. less 1 The test will only succeed if the pixel is nearer than the previous pixel. equal 2 Test will only succeed if the Z value of the pixel to be drawn is equal to the value of the previous drawn pixel. lessEqual 3 Test will succeed if the Z value of the pixel to be drawn is smaller than or equal to the value in the Z Buffer. greater 4 The test will only succeed if the pixel is farther than the previous pixel. notEqual 5 Test will succeed if the Z value of the pixel to be drawn is NOT equal to the value of the previously drawn pixel. greaterEqual 6 Test will succeed if the Z value of the pixel to be drawn is bigger than or equal to the value in the Z Buffer. never 7 Test will allways return false. Nothing is drawn at all.","title":"Z-Buffer Property Test Functions"},{"location":"references/ni/z-buffer-property-test-functions/#z-buffer-property-test-functions","text":"Tip These values are available in Lua by their index in the ni.zBufferPropertyTestFunction table. For example, ni.zBufferPropertyTestFunction.less has a value of 1 . Note Less than means closer to the camera and greater than means farther from the camera, regardless of the low-level hardware representation of Z values. Index Value Description always 0 Test will allways succeed. The Z Buffer value is ignored. less 1 The test will only succeed if the pixel is nearer than the previous pixel. equal 2 Test will only succeed if the Z value of the pixel to be drawn is equal to the value of the previous drawn pixel. lessEqual 3 Test will succeed if the Z value of the pixel to be drawn is smaller than or equal to the value in the Z Buffer. greater 4 The test will only succeed if the pixel is farther than the previous pixel. notEqual 5 Test will succeed if the Z value of the pixel to be drawn is NOT equal to the value of the previously drawn pixel. greaterEqual 6 Test will succeed if the Z value of the pixel to be drawn is bigger than or equal to the value in the Z Buffer. never 7 Test will allways return false. Nothing is drawn at all.","title":"Z-Buffer Property Test Functions"},{"location":"references/other/books/","text":"Game Books \u2693\ufe0e In Morrowind, books are written in simplified HTML. The subset of HTML used by Morrowind is discussed in the next paragraph. Tags \u2693\ufe0e Tags are the basic building block of HTML documents. Each tag is enclosed in angle brackets <>. In general, a tag affects a portion of the document inside the opening and closing tag. The closing tag has a slash ( / ) in front. For example, <tag> is an opening tag, while </tag> is a closing tag. Some tags allow specifying additional formatting information inside the opening tag. The tags are case insensitive, and most of Morrowind's books have uppercase tags. The tags are space sensitive. < font color = \"002200\" > This works < font color = \"002200\" > This doesn't work The available tags are: - <div> - text alignment - <font> - text style - <br> - a new line - <img> - inserts an image <div align=\"options\"> \u2693\ufe0e The div tag is used for aligning text. The \"options\" available are \"center\" , \"left\" , and \"right\" , which align the text correspondingly. The div tag is an exception to the rule because it doesn't need to have a closing tag. Instead, this tag will affect the whole book's text after the tag or until another div tag occurs. <font color=\"textCol\" size=\"num\" face=\"fontName\"> \u2693\ufe0e The font tag changes the appearance of the book's text. The first option available in this tag is \"textCol\" . The color is a string of six hexadecimal digits where two correspond to one color channel: \"RRGGBB\". The default font color is black (\"000000\"). The size option will change the text's size. The most common font size for Morrowind's books is \"3\". The size needs to be a natural number. The face option (from typographical typeface) will change the font used to render the book's text. The available \"fontName\" s are \"Magic Cards\", \"Century Gothic\", and \"Daedric\". The default font is \"Magic Cards\" and doesn't need to be specified. Not all the options need to be specified, but if more than one is specified, they need to be in the above order. Overriding Behavior \u2693\ufe0e If a font tag is encountered while one font tag already affects the text, another font tag will override the settings from the previous tag. For text to render properly, the paragraphs with different font settings need to be set apart with <br> tags at the beginning and end. The results can be unexpected if this rule isn't followed. Here is an example of text with two different font styles: < font color = \"002200\" size = \"3\" face = \"Magic Cards\" > This text is rendered green in Magic Cards font. </ font >< br > < font color = \"000022\" size = \"3\" face = \"Daedric\" > This text is rendered blue in Daedric font. </ font >< br > <br> \u2693\ufe0e The br tag inserts a newline character into the book's text. One br tag is needed at the end of the book's text to render properly. Otherwise, no content is rendered. <img src=\"imageName.extension\" width=\"pixels\" height=\"pixels\"> \u2693\ufe0e The img tag inserts an image in the book. For images to be inserted in the text properly, they need to be set apart from the surrounding text with br tags. The src specifies the name of the image to insert. The image needs to be in one of the texture formats supported by Morrowind. The location of the image needs to be the Data Files\\BookArt folder. The extension can be .bmp , .tga or .dds . It doesn't matter which one is it, but it needs to be one of the specified for the image to be rendered. The image dimensions are in pixels, and the image will be stretched if the aspect ratio isn't the same. The maximal height is 327 pixels for books. The width of the image isn't restricted by the engine. After a point part of the image doesn't fit the book. Scrolls don't have restrictions on the image's dimensions, but too big images just won't fit the scroll. Additional Notes \u2693\ufe0e The book HTML is extended to allow runtime replacement of text defines . The text defines for books can start with % or ^ followed by the variable's name. The variables that can be replaced include all global variables, plus some additional ones listed on the linked page. Further Reading \u2693\ufe0e The Construction Set help An example file called \"Morrowind Books HTML.htm\" is found in the Data Files\\BookArt\\ directory. Text of the existing books in the game can be seen in the Construction Set.","title":"Game Books"},{"location":"references/other/books/#game-books","text":"In Morrowind, books are written in simplified HTML. The subset of HTML used by Morrowind is discussed in the next paragraph.","title":"Game Books"},{"location":"references/other/books/#tags","text":"Tags are the basic building block of HTML documents. Each tag is enclosed in angle brackets <>. In general, a tag affects a portion of the document inside the opening and closing tag. The closing tag has a slash ( / ) in front. For example, <tag> is an opening tag, while </tag> is a closing tag. Some tags allow specifying additional formatting information inside the opening tag. The tags are case insensitive, and most of Morrowind's books have uppercase tags. The tags are space sensitive. < font color = \"002200\" > This works < font color = \"002200\" > This doesn't work The available tags are: - <div> - text alignment - <font> - text style - <br> - a new line - <img> - inserts an image","title":"Tags"},{"location":"references/other/books/#div-alignoptions","text":"The div tag is used for aligning text. The \"options\" available are \"center\" , \"left\" , and \"right\" , which align the text correspondingly. The div tag is an exception to the rule because it doesn't need to have a closing tag. Instead, this tag will affect the whole book's text after the tag or until another div tag occurs.","title":"&lt;div align=\"options\"&gt;"},{"location":"references/other/books/#font-colortextcol-sizenum-facefontname","text":"The font tag changes the appearance of the book's text. The first option available in this tag is \"textCol\" . The color is a string of six hexadecimal digits where two correspond to one color channel: \"RRGGBB\". The default font color is black (\"000000\"). The size option will change the text's size. The most common font size for Morrowind's books is \"3\". The size needs to be a natural number. The face option (from typographical typeface) will change the font used to render the book's text. The available \"fontName\" s are \"Magic Cards\", \"Century Gothic\", and \"Daedric\". The default font is \"Magic Cards\" and doesn't need to be specified. Not all the options need to be specified, but if more than one is specified, they need to be in the above order.","title":"&lt;font color=\"textCol\" size=\"num\" face=\"fontName\"&gt;"},{"location":"references/other/books/#br","text":"The br tag inserts a newline character into the book's text. One br tag is needed at the end of the book's text to render properly. Otherwise, no content is rendered.","title":"&lt;br&gt;"},{"location":"references/other/books/#img-srcimagenameextension-widthpixels-heightpixels","text":"The img tag inserts an image in the book. For images to be inserted in the text properly, they need to be set apart from the surrounding text with br tags. The src specifies the name of the image to insert. The image needs to be in one of the texture formats supported by Morrowind. The location of the image needs to be the Data Files\\BookArt folder. The extension can be .bmp , .tga or .dds . It doesn't matter which one is it, but it needs to be one of the specified for the image to be rendered. The image dimensions are in pixels, and the image will be stretched if the aspect ratio isn't the same. The maximal height is 327 pixels for books. The width of the image isn't restricted by the engine. After a point part of the image doesn't fit the book. Scrolls don't have restrictions on the image's dimensions, but too big images just won't fit the scroll.","title":"&lt;img src=\"imageName.extension\" width=\"pixels\" height=\"pixels\"&gt;"},{"location":"references/other/books/#additional-notes","text":"The book HTML is extended to allow runtime replacement of text defines . The text defines for books can start with % or ^ followed by the variable's name. The variables that can be replaced include all global variables, plus some additional ones listed on the linked page.","title":"Additional Notes"},{"location":"references/other/books/#further-reading","text":"The Construction Set help An example file called \"Morrowind Books HTML.htm\" is found in the Data Files\\BookArt\\ directory. Text of the existing books in the game can be seen in the Construction Set.","title":"Further Reading"},{"location":"references/other/csse/","text":"Construction Set Extender \u2693\ufe0e The Construction Set Extender, also known as CSSE, is a project that aims to improve the functionality of the TES Construction Set. This page serves to document the project. To request a feature, visit the Construction Set Extender Development issue on GitHub. Support for the project can be found in the #mwse channel in the Morrowind Modding Community . Requirements \u2693\ufe0e CSSE requires MGE XE v0.14.3 (released July 29, 2022) or later in order to be automatically loaded into the Construction Set. If using OpenMW, you will still need to install MGE XE into your Morrowind installation directory (the same directory that you launch the Construction Set). Installation \u2693\ufe0e You can obtain the CSSE using one of the following methods: MWSE-Updater \u2693\ufe0e MGE XE includes the MWSE-Update program. This program will download the latest CSSE file (as well as the latest MWSE) into your Morrowind installation directory. To get CSSE with this method, simply run the program and follow any prompts that may be displayed (such as closing the Construction Set). It may only open briefly, in which case you are likely already up-to-date. The updater won't download the file if you already have the latest version. Manually \u2693\ufe0e The same download can be found on the Automated Build release on GitHub . You can download the mwse.zip file, which contains both MWSE and CSSE. Once you have the zip file downloaded, extract its contents to the Morrowind installation directory. Both CSSE.dll and TES Construction Set.exe must reside in the same directory. If you are strictly an OpenMW user but also a TES Construction Set user, you need only extract the CSSE.dll file into your Morrowind directory. However, for testing in the vanilla engine you should still have the Morrowind Code Patch and MWSE installed. MWSE offers various patches and other features to help make the original engine faster and more stable, in the same way that CSSE does for the Construction Set. Compatibility \u2693\ufe0e If you are using Construction Set Better UI , CSSE will not automatically load. To get CSSE to work with Better UI, you will need to rename the Better UI executable to \"TES Construction Set\" and replace the existing vanilla CS file. Be sure to back the original up first! Features \u2693\ufe0e General \u2693\ufe0e General optimizations to UI rendering. Status updates are throttled to only update once every 20ms, which drastically improves load times. The following warnings will no longer or only conditionally create popup windows, but will still be written to Warnings.txt: \"Following string is different for topic\" and \"Previous string is different for topic\" are suppressed entirely. The \"1 duplicate references were removed\" from loading Tribunal and Bloodmoon will no longer make a popup. If this is not the vanilla duplicate reference, or if there is more than one duplicate reference, a popup will still be shown. Fixed GMST pollution bug caused when not loading Tribunal and Bloodmoon. A QuickStart feature. In the render window, use the context menu (Q) to save the currently loaded plugins, the active plugin, current cell, camera position, camera orientation. Whenever the CS is loaded with no other plugin loading, it will automatically load all the saved plugins, and load the cell with the viewport saved. This can be cleared or disabled. Object Window \u2693\ufe0e Significantly improved UI responsiveness. Added a footer to the window, with a new filter input. This input can be focused by using CTRL+F while the Object Window is active. This can be used to filter objects by a matching object ID fragment. Fixed issue where box selection in the object window would cause the mouse to snap to the edge of the screen. Dialogue Window \u2693\ufe0e Optimized UI. Changing between INFOs should be nearly instantaneous. Initial dialogue load time reduced by 60%. Render Window \u2693\ufe0e Reference rotation is now performed on the world axis, rather than the local axis. To rotate on the local axis as it worked in vanilla, hold the alt key. References can be group-scaled. By holding the alt key when scaling, all selected references will scale together and reposition accordingly. References can be moved onto surfaces. By holding the alt key when drag-moving a reference, it will rotate and snap onto the surface under the cursor. The context menu (Q) can be used to set the axis to snap to. Extended editor marker support. Toggling markers (M) will now also toggle markers supported by the game executable. This allows custom markers to be toggled by tagging them with a MRK string and adding a EditorMarker node, or by defining objects whose name begins with or matches \"Tri EditorMarker\". A new context menu is available, using the Q key. From it you can access some new features: Hide selected references, culling them from the scene so you can work behind them. Restore hidden references, restoring to view any references hidden with the hide selection option. Set the snap axis when alt-drag-moving references. Set or clear the QuickStart data from the current render window perspective. The following changes to the rendering window apply when landscape editing: The terrain editing disc is no longer hidden when hiding objects (Shift+C). You can use control+right mouse button to sample the texture at the cursor's position. This will select the matching texture under the cursor automatically in the landscape editing menu. Search & Replace Window \u2693\ufe0e Optimized performance of initial display by 80% (e.g. 1.9 seconds instead of 9.7 seconds). Cell View \u2693\ufe0e Significantly improved UI responsiveness.","title":"Construction Set Extender"},{"location":"references/other/csse/#construction-set-extender","text":"The Construction Set Extender, also known as CSSE, is a project that aims to improve the functionality of the TES Construction Set. This page serves to document the project. To request a feature, visit the Construction Set Extender Development issue on GitHub. Support for the project can be found in the #mwse channel in the Morrowind Modding Community .","title":"Construction Set Extender"},{"location":"references/other/csse/#requirements","text":"CSSE requires MGE XE v0.14.3 (released July 29, 2022) or later in order to be automatically loaded into the Construction Set. If using OpenMW, you will still need to install MGE XE into your Morrowind installation directory (the same directory that you launch the Construction Set).","title":"Requirements"},{"location":"references/other/csse/#installation","text":"You can obtain the CSSE using one of the following methods:","title":"Installation"},{"location":"references/other/csse/#mwse-updater","text":"MGE XE includes the MWSE-Update program. This program will download the latest CSSE file (as well as the latest MWSE) into your Morrowind installation directory. To get CSSE with this method, simply run the program and follow any prompts that may be displayed (such as closing the Construction Set). It may only open briefly, in which case you are likely already up-to-date. The updater won't download the file if you already have the latest version.","title":"MWSE-Updater"},{"location":"references/other/csse/#manually","text":"The same download can be found on the Automated Build release on GitHub . You can download the mwse.zip file, which contains both MWSE and CSSE. Once you have the zip file downloaded, extract its contents to the Morrowind installation directory. Both CSSE.dll and TES Construction Set.exe must reside in the same directory. If you are strictly an OpenMW user but also a TES Construction Set user, you need only extract the CSSE.dll file into your Morrowind directory. However, for testing in the vanilla engine you should still have the Morrowind Code Patch and MWSE installed. MWSE offers various patches and other features to help make the original engine faster and more stable, in the same way that CSSE does for the Construction Set.","title":"Manually"},{"location":"references/other/csse/#compatibility","text":"If you are using Construction Set Better UI , CSSE will not automatically load. To get CSSE to work with Better UI, you will need to rename the Better UI executable to \"TES Construction Set\" and replace the existing vanilla CS file. Be sure to back the original up first!","title":"Compatibility"},{"location":"references/other/csse/#features","text":"","title":"Features"},{"location":"references/other/csse/#general","text":"General optimizations to UI rendering. Status updates are throttled to only update once every 20ms, which drastically improves load times. The following warnings will no longer or only conditionally create popup windows, but will still be written to Warnings.txt: \"Following string is different for topic\" and \"Previous string is different for topic\" are suppressed entirely. The \"1 duplicate references were removed\" from loading Tribunal and Bloodmoon will no longer make a popup. If this is not the vanilla duplicate reference, or if there is more than one duplicate reference, a popup will still be shown. Fixed GMST pollution bug caused when not loading Tribunal and Bloodmoon. A QuickStart feature. In the render window, use the context menu (Q) to save the currently loaded plugins, the active plugin, current cell, camera position, camera orientation. Whenever the CS is loaded with no other plugin loading, it will automatically load all the saved plugins, and load the cell with the viewport saved. This can be cleared or disabled.","title":"General"},{"location":"references/other/csse/#object-window","text":"Significantly improved UI responsiveness. Added a footer to the window, with a new filter input. This input can be focused by using CTRL+F while the Object Window is active. This can be used to filter objects by a matching object ID fragment. Fixed issue where box selection in the object window would cause the mouse to snap to the edge of the screen.","title":"Object Window"},{"location":"references/other/csse/#dialogue-window","text":"Optimized UI. Changing between INFOs should be nearly instantaneous. Initial dialogue load time reduced by 60%.","title":"Dialogue Window"},{"location":"references/other/csse/#render-window","text":"Reference rotation is now performed on the world axis, rather than the local axis. To rotate on the local axis as it worked in vanilla, hold the alt key. References can be group-scaled. By holding the alt key when scaling, all selected references will scale together and reposition accordingly. References can be moved onto surfaces. By holding the alt key when drag-moving a reference, it will rotate and snap onto the surface under the cursor. The context menu (Q) can be used to set the axis to snap to. Extended editor marker support. Toggling markers (M) will now also toggle markers supported by the game executable. This allows custom markers to be toggled by tagging them with a MRK string and adding a EditorMarker node, or by defining objects whose name begins with or matches \"Tri EditorMarker\". A new context menu is available, using the Q key. From it you can access some new features: Hide selected references, culling them from the scene so you can work behind them. Restore hidden references, restoring to view any references hidden with the hide selection option. Set the snap axis when alt-drag-moving references. Set or clear the QuickStart data from the current render window perspective. The following changes to the rendering window apply when landscape editing: The terrain editing disc is no longer hidden when hiding objects (Shift+C). You can use control+right mouse button to sample the texture at the cursor's position. This will select the matching texture under the cursor automatically in the landscape editing menu.","title":"Render Window"},{"location":"references/other/csse/#search-replace-window","text":"Optimized performance of initial display by 80% (e.g. 1.9 seconds instead of 9.7 seconds).","title":"Search &amp; Replace Window"},{"location":"references/other/csse/#cell-view","text":"Significantly improved UI responsiveness.","title":"Cell View"},{"location":"references/other/game-units/","text":"Game Units \u2693\ufe0e Each exterior cell is 8192 by 8192 game units or 385 by 385 feet (117 x 117m), according to the Construction Set help. Dividing the two we get 21.3 units per foot, or 70 units per meter. The various properties (e.g. .position ), and functions in MWSE use these units. Cells and Their Sizes \u2693\ufe0e There are two types of cells: interior cells and exterior cells. The exterior cells form a grid, where each is 8192 x 8192 units. Each interior cell is a separate space without the defined dimensions. The water level in all the exterior cells is 0, while the interior cells have a custom water level, usually set in the Construction Set, or don't have water at all. The landscape consists of verticies that can only be moved on z axis (up and down). The verticies are 128 units apart, so a \"landscape tile\" is 128 x 128 units. Each landscape texture covers 512 x 512 units or 4 by 4 tiles. Actor Height \u2693\ufe0e Base height of an actor is 128 game units. It's further changed by racial height modifier.","title":"Game Units"},{"location":"references/other/game-units/#game-units","text":"Each exterior cell is 8192 by 8192 game units or 385 by 385 feet (117 x 117m), according to the Construction Set help. Dividing the two we get 21.3 units per foot, or 70 units per meter. The various properties (e.g. .position ), and functions in MWSE use these units.","title":"Game Units"},{"location":"references/other/game-units/#cells-and-their-sizes","text":"There are two types of cells: interior cells and exterior cells. The exterior cells form a grid, where each is 8192 x 8192 units. Each interior cell is a separate space without the defined dimensions. The water level in all the exterior cells is 0, while the interior cells have a custom water level, usually set in the Construction Set, or don't have water at all. The landscape consists of verticies that can only be moved on z axis (up and down). The verticies are 128 units apart, so a \"landscape tile\" is 128 x 128 units. Each landscape texture covers 512 x 512 units or 4 by 4 tiles.","title":"Cells and Their Sizes"},{"location":"references/other/game-units/#actor-height","text":"Base height of an actor is 128 game units. It's further changed by racial height modifier.","title":"Actor Height"},{"location":"references/other/ni-class-hierarchy/","text":"The Hierarchy of NetImmerse Classes \u2693\ufe0e This page puts into relation various classes that compromise Morrowind's scene graph. Some of these classes are abstract, meaning they aren't directly found in the scene graph but are used by other classes to inherit common variables and methods. The game's scene graph can be inspected by entering ssg (show scene graph) command in the console. Morrowind's engine is Gamebryo, which was before known as NetImmerse. That's why these classes have the prefix ni in their name. These classes in MWSE follow the naming as in the vanilla engine. But, some classes contain information about the scene graph in MWSE and have tes3 prefixes such as tes3vector3 . The primary building blocks of the scene graph are called nodes. Each node has one parent and zero or more child nodes. For example, the base node of Morrowind's world scene graph, named worldRoot , and all the game world objects are represented by nodes that are children of the worldRoot node. Note that the relations described here don't reflect how these types are organized in the scene graph. For instance, the worldRoot node mentioned earlier is of type niNode , but is the root node of the world's scene graph, while the base class of most types described here is niObject . The types are arranged into functional groupings. Within each grouping, indentation implies inheritance from the class of the previous indentation level. The color of the text carries the following meanings: Turquoise - Classes read by MWSE but not yet exposed to Lua scripts Green - Classes present in Morrowind but not yet read by MWSE All the other classes in standard text color in this list are available in Lua scripts niMain \u2693\ufe0e Basic Foundation Types \u2693\ufe0e niColor niColorA niPackedColor niRTTI Basic Math and Geometry Classes \u2693\ufe0e niBound tes3boundingBox tes3matrix33 tes3vector2 tes3vector3 niQuaternion tes3transform Templated Container Classes \u2693\ufe0e niTArray - not exposed as a type but can be iterated as a standard Lua array. niLinkedList niDynamicEffectLinkedList niNodeLinkedList niPropertyLinkedList Animation Classes \u2693\ufe0e niObject niTimeController niObjectNET niAVObject niNode niBSAnimationManager niBSAnimationNode niBSParticleNode niSequenceStreamHelper Texturing Classes \u2693\ufe0e niObject niBltSource niObjectNET niTexture niRenderedTexture niRenderedCubeMap niSourceTexture niPalette niPixelData niPixelFormat Object Depth Sorting Classes \u2693\ufe0e niObject niAccumulator niClusterAccumulator niAlphaAccumulator Geometry Data Classes \u2693\ufe0e niObject niGeometryData niLinesData niTriBasedGeomData niParticlesData niAutoNormalParticlesData niRotatingParticlesData niTriShapeData niTriShapeDynamicData niTriStripsData Geometry Rendering Classes \u2693\ufe0e niObject niObjectNET niAVObject niGeometry niLines niTriBasedGeometry niTriShape niTriStrips niParticles niAutoNormalParticles niRotatingParticles niScreenPolygon niSkinData niSkinDataBoneData niSkinDataBoneDataVertexWeight niSkinInstance niSkinPartition niSkinPartitionPartition Scene Graph Organization Classes \u2693\ufe0e niObject niExtraData BrickNiExtraData niStringExtraData niTES3ExtraData niTextKeyExtraData niVertWeightsExtraData niObjectNET niAVObject niNode AvoidNode niBillboardNode niBSPNode niSortAdjustNode niSwitchNode niFltAnimationNode niLODNode Lightning and Effects Classes \u2693\ufe0e niObject niObjectNET niAVObject niDynamicEffect niLight niAmbientLight niDirectionalLight niPointLight niSpotLight niTextureEffect Rendering and Property Classes \u2693\ufe0e niObject niObjectNET niAVObject niCamera niProperty niAlphaProperty niDitherProperty niFogProperty niMaterialProperty niRendererSpecificProperty niShadeProperty niSpecularProperty niStencilProperty niTexturingProperty niVertexColorProperty niWireframeProperty niZBufferProperty niRenderer niDX8Renderer niParticle \u2693\ufe0e Particle System Classes \u2693\ufe0e niObject niEmitterModifier niParticleModifier niGravity niParticleBomb niParticleCollider niPlanarCollider niSphericalCollider niParticleColorModifier niParticleGrowFade niParticleRotation niTimeController - Not only related to particles niParticleSystemController niPerParticleData niCollision \u2693\ufe0e Collision Classes \u2693\ufe0e niCollisionGroup niCollisionGroupRecord niObject niObjectNET niAVObject niNode RootCollisionNode niCollisionSwitch niPick niPickRecord niAnimation \u2693\ufe0e Animation Classes \u2693\ufe0e niObject niColorData niExtraData - this type is not related to animation by itself. niTextKeyExtraData niFloatData niKeyframeData niMorphData niPosData niSequence niTimeController niFlipController niFloatController niAlphaController niRollController niKeyframeController niKeyframeManager niLightColorController niLookAtController niMaterialColorController niMorpherController niGeomMorpherController niParticleSystemController niBSPArrayController niPathController niUVController niVisController niUVData niVisData niAnimationKey niColorKey niFloatKey niBezFloatKey niTCBFloatKey niPosKey niBezPosKey niTCBPosKey niRotKey niBezRotKey niTCBRotKey niEulerRotKey niTextKey graph LR A(NiObject) --> B(NiAccumulator); B --> C(NiClusterAccumulator); C --> D(NiAlphaAccumulator); A --> E(NiExtraData); E --> F(BrickNiExtraData); E --> G(TES3ObjectExtraData); E --> H(NiStringExtraData); E --> I(NiTextKeyExtraData); E --> J(NiVertWeightsExtraData); A --> K(NiObjectNET); K --> L(NiDynamicEffect); L --> M(NiLight); M --> N(NiPointLight); N --> O(NiSpotLight); classDef notExposed fill:#ADFF2F,stroke:#333,stroke-width:2px; class B,C,D notExposed; classDef notResearched fill:#40E0D0,stroke:#333,stroke-width:2px; class F,J notResearched;","title":"The Hierarchy of NetImmerse Classes"},{"location":"references/other/ni-class-hierarchy/#the-hierarchy-of-netimmerse-classes","text":"This page puts into relation various classes that compromise Morrowind's scene graph. Some of these classes are abstract, meaning they aren't directly found in the scene graph but are used by other classes to inherit common variables and methods. The game's scene graph can be inspected by entering ssg (show scene graph) command in the console. Morrowind's engine is Gamebryo, which was before known as NetImmerse. That's why these classes have the prefix ni in their name. These classes in MWSE follow the naming as in the vanilla engine. But, some classes contain information about the scene graph in MWSE and have tes3 prefixes such as tes3vector3 . The primary building blocks of the scene graph are called nodes. Each node has one parent and zero or more child nodes. For example, the base node of Morrowind's world scene graph, named worldRoot , and all the game world objects are represented by nodes that are children of the worldRoot node. Note that the relations described here don't reflect how these types are organized in the scene graph. For instance, the worldRoot node mentioned earlier is of type niNode , but is the root node of the world's scene graph, while the base class of most types described here is niObject . The types are arranged into functional groupings. Within each grouping, indentation implies inheritance from the class of the previous indentation level. The color of the text carries the following meanings: Turquoise - Classes read by MWSE but not yet exposed to Lua scripts Green - Classes present in Morrowind but not yet read by MWSE All the other classes in standard text color in this list are available in Lua scripts","title":"The Hierarchy of NetImmerse Classes"},{"location":"references/other/ni-class-hierarchy/#nimain","text":"","title":"niMain"},{"location":"references/other/ni-class-hierarchy/#basic-foundation-types","text":"niColor niColorA niPackedColor niRTTI","title":"Basic Foundation Types"},{"location":"references/other/ni-class-hierarchy/#basic-math-and-geometry-classes","text":"niBound tes3boundingBox tes3matrix33 tes3vector2 tes3vector3 niQuaternion tes3transform","title":"Basic Math and Geometry Classes"},{"location":"references/other/ni-class-hierarchy/#templated-container-classes","text":"niTArray - not exposed as a type but can be iterated as a standard Lua array. niLinkedList niDynamicEffectLinkedList niNodeLinkedList niPropertyLinkedList","title":"Templated Container Classes"},{"location":"references/other/ni-class-hierarchy/#animation-classes","text":"niObject niTimeController niObjectNET niAVObject niNode niBSAnimationManager niBSAnimationNode niBSParticleNode niSequenceStreamHelper","title":"Animation Classes"},{"location":"references/other/ni-class-hierarchy/#texturing-classes","text":"niObject niBltSource niObjectNET niTexture niRenderedTexture niRenderedCubeMap niSourceTexture niPalette niPixelData niPixelFormat","title":"Texturing Classes"},{"location":"references/other/ni-class-hierarchy/#object-depth-sorting-classes","text":"niObject niAccumulator niClusterAccumulator niAlphaAccumulator","title":"Object Depth Sorting Classes"},{"location":"references/other/ni-class-hierarchy/#geometry-data-classes","text":"niObject niGeometryData niLinesData niTriBasedGeomData niParticlesData niAutoNormalParticlesData niRotatingParticlesData niTriShapeData niTriShapeDynamicData niTriStripsData","title":"Geometry Data Classes"},{"location":"references/other/ni-class-hierarchy/#geometry-rendering-classes","text":"niObject niObjectNET niAVObject niGeometry niLines niTriBasedGeometry niTriShape niTriStrips niParticles niAutoNormalParticles niRotatingParticles niScreenPolygon niSkinData niSkinDataBoneData niSkinDataBoneDataVertexWeight niSkinInstance niSkinPartition niSkinPartitionPartition","title":"Geometry Rendering Classes"},{"location":"references/other/ni-class-hierarchy/#scene-graph-organization-classes","text":"niObject niExtraData BrickNiExtraData niStringExtraData niTES3ExtraData niTextKeyExtraData niVertWeightsExtraData niObjectNET niAVObject niNode AvoidNode niBillboardNode niBSPNode niSortAdjustNode niSwitchNode niFltAnimationNode niLODNode","title":"Scene Graph Organization Classes"},{"location":"references/other/ni-class-hierarchy/#lightning-and-effects-classes","text":"niObject niObjectNET niAVObject niDynamicEffect niLight niAmbientLight niDirectionalLight niPointLight niSpotLight niTextureEffect","title":"Lightning and Effects Classes"},{"location":"references/other/ni-class-hierarchy/#rendering-and-property-classes","text":"niObject niObjectNET niAVObject niCamera niProperty niAlphaProperty niDitherProperty niFogProperty niMaterialProperty niRendererSpecificProperty niShadeProperty niSpecularProperty niStencilProperty niTexturingProperty niVertexColorProperty niWireframeProperty niZBufferProperty niRenderer niDX8Renderer","title":"Rendering and Property Classes"},{"location":"references/other/ni-class-hierarchy/#niparticle","text":"","title":"niParticle"},{"location":"references/other/ni-class-hierarchy/#particle-system-classes","text":"niObject niEmitterModifier niParticleModifier niGravity niParticleBomb niParticleCollider niPlanarCollider niSphericalCollider niParticleColorModifier niParticleGrowFade niParticleRotation niTimeController - Not only related to particles niParticleSystemController niPerParticleData","title":"Particle System Classes"},{"location":"references/other/ni-class-hierarchy/#nicollision","text":"","title":"niCollision"},{"location":"references/other/ni-class-hierarchy/#collision-classes","text":"niCollisionGroup niCollisionGroupRecord niObject niObjectNET niAVObject niNode RootCollisionNode niCollisionSwitch niPick niPickRecord","title":"Collision Classes"},{"location":"references/other/ni-class-hierarchy/#nianimation","text":"","title":"niAnimation"},{"location":"references/other/ni-class-hierarchy/#animation-classes_1","text":"niObject niColorData niExtraData - this type is not related to animation by itself. niTextKeyExtraData niFloatData niKeyframeData niMorphData niPosData niSequence niTimeController niFlipController niFloatController niAlphaController niRollController niKeyframeController niKeyframeManager niLightColorController niLookAtController niMaterialColorController niMorpherController niGeomMorpherController niParticleSystemController niBSPArrayController niPathController niUVController niVisController niUVData niVisData niAnimationKey niColorKey niFloatKey niBezFloatKey niTCBFloatKey niPosKey niBezPosKey niTCBPosKey niRotKey niBezRotKey niTCBRotKey niEulerRotKey niTextKey graph LR A(NiObject) --> B(NiAccumulator); B --> C(NiClusterAccumulator); C --> D(NiAlphaAccumulator); A --> E(NiExtraData); E --> F(BrickNiExtraData); E --> G(TES3ObjectExtraData); E --> H(NiStringExtraData); E --> I(NiTextKeyExtraData); E --> J(NiVertWeightsExtraData); A --> K(NiObjectNET); K --> L(NiDynamicEffect); L --> M(NiLight); M --> N(NiPointLight); N --> O(NiSpotLight); classDef notExposed fill:#ADFF2F,stroke:#333,stroke-width:2px; class B,C,D notExposed; classDef notResearched fill:#40E0D0,stroke:#333,stroke-width:2px; class F,J notResearched;","title":"Animation Classes"},{"location":"references/other/patches/","text":"Patches \u2693\ufe0e The following patches are included by MWSE. Features \u2693\ufe0e Allows custom classes to have custom images on the class selection menu. The texture used is a bmp file found in the textures\\levelup directory, whose name is the id of the class. Allows Morrowind to run when not in focus. Allows movies to be played with letterboxing. Allows NiFlipController to specify its affected map correctly. Allows NiLinesData to be loaded from meshes. Allows NiUVController to specify its texture correctly. Creates crash dump files and logging information to help diagnose mod issues. Disable mwscript function updates collision information so the player won't collide with invisible references. Improves load times when using Mod Organizer 2. Optimizes access to global variables. Optimizes access to player kill count, via GetDeadCount or dialogue filtering. Optimizes disposition calculation when dialogue filtering. Optimizes DontThreadLoad ini file access to not always fetch from the file system. Optimizes journal updating. Optimizes ShowMap and FillMap to not be absurdly slow. Raises mod limit from 256 to 1024. Bug Fixes \u2693\ufe0e Allows the game to correctly close when quit with a messagebox popup, preventing rogue Morrowind.exe processes from hanging in the background. Athletics and sneak skill progress code made consistent with other skill advancements. Useful to modders. Correctly initialize MobileProjectile tag/objectType. Useful to modders. Enable and Disable mwscript functions no longer can cause crashes with script variables unset. Fixes book and weapon enchantment copying. Useful to modders. Fixes crash when releasing a clone of a light with no reference. Fixes crash when saving active VFXs when none are serializable. Fixes crash when saving menu position if the derived key name is too long. Fixes crash when updating cell markers at the border of the drawable map area. Fixes crash with paper doll equipping/unequipping. Fixes crash with uncloned actors removing items. Fixes time being nudged forward by small extra increments when resting. Fixes time being truncated when advancing time past midnight. Fixes transparency effects from invisibility/chameleon from being desynced when changing equipment. Prevents empty menu positions from saving to the ini file. Updates animations for third person and first person player reference when idle mode is flagged.","title":"Patches"},{"location":"references/other/patches/#patches","text":"The following patches are included by MWSE.","title":"Patches"},{"location":"references/other/patches/#features","text":"Allows custom classes to have custom images on the class selection menu. The texture used is a bmp file found in the textures\\levelup directory, whose name is the id of the class. Allows Morrowind to run when not in focus. Allows movies to be played with letterboxing. Allows NiFlipController to specify its affected map correctly. Allows NiLinesData to be loaded from meshes. Allows NiUVController to specify its texture correctly. Creates crash dump files and logging information to help diagnose mod issues. Disable mwscript function updates collision information so the player won't collide with invisible references. Improves load times when using Mod Organizer 2. Optimizes access to global variables. Optimizes access to player kill count, via GetDeadCount or dialogue filtering. Optimizes disposition calculation when dialogue filtering. Optimizes DontThreadLoad ini file access to not always fetch from the file system. Optimizes journal updating. Optimizes ShowMap and FillMap to not be absurdly slow. Raises mod limit from 256 to 1024.","title":"Features"},{"location":"references/other/patches/#bug-fixes","text":"Allows the game to correctly close when quit with a messagebox popup, preventing rogue Morrowind.exe processes from hanging in the background. Athletics and sneak skill progress code made consistent with other skill advancements. Useful to modders. Correctly initialize MobileProjectile tag/objectType. Useful to modders. Enable and Disable mwscript functions no longer can cause crashes with script variables unset. Fixes book and weapon enchantment copying. Useful to modders. Fixes crash when releasing a clone of a light with no reference. Fixes crash when saving active VFXs when none are serializable. Fixes crash when saving menu position if the derived key name is too long. Fixes crash when updating cell markers at the border of the drawable map area. Fixes crash with paper doll equipping/unequipping. Fixes crash with uncloned actors removing items. Fixes time being nudged forward by small extra increments when resting. Fixes time being truncated when advancing time past midnight. Fixes transparency effects from invisibility/chameleon from being desynced when changing equipment. Prevents empty menu positions from saving to the ini file. Updates animations for third person and first person player reference when idle mode is flagged.","title":"Bug Fixes"},{"location":"types/ioFile/","text":"ioFile \u2693\ufe0e An object that represents an open file.","title":"ioFile"},{"location":"types/ioFile/#iofile","text":"An object that represents an open file.","title":"ioFile"},{"location":"types/lfsLock/","text":"lfsLock \u2693\ufe0e An object that represents a file lock. Methods \u2693\ufe0e free \u2693\ufe0e Frees the lock, so that another lock can be made. Deletes the associated lock file. myObject : free ()","title":"lfsLock"},{"location":"types/lfsLock/#lfslock","text":"An object that represents a file lock.","title":"lfsLock"},{"location":"types/lfsLock/#methods","text":"","title":"Methods"},{"location":"types/lfsLock/#free","text":"Frees the lock, so that another lock can be made. Deletes the associated lock file. myObject : free ()","title":"free"},{"location":"types/mgeCameraConfig/","text":"mgeCameraConfig \u2693\ufe0e Allows control of MGE camera features. Properties \u2693\ufe0e fov \u2693\ufe0e Horizontal FOV, in degrees. Returns : result (number) shakeAcceleration \u2693\ufe0e Camera shake acceleration. Camera shake must be enabled to see an effect. Returns : result (number) shakeEnable \u2693\ufe0e Set if camera shake is active. Returns : result (boolean) shakeMagnitude \u2693\ufe0e Camera shake magnitude. Camera shake must be enabled to see an effect. Returns : result (number) thirdPersonOffset \u2693\ufe0e The position offset (from the character) of the third person camera. Returns : result ( tes3vector3 ) zoom \u2693\ufe0e Camera zoom multiplier. Default is 1.0. Camera zoom must be enabled to see an effect. Returns : result (number) zoomEnable \u2693\ufe0e Set if camera zoom is enabled. Returns : result (boolean) Functions \u2693\ufe0e stopZoom \u2693\ufe0e Stops any continuous camera zoom. mgeCameraConfig . stopZoom () zoomContinuous \u2693\ufe0e Sets up continuous camera zoom. The zoom speed starts at rate . The speed will approach targetRate over time, if provided. mgeCameraConfig . zoomContinuous ({ rate = ..., targetRate = ... }) Parameters : params (table): Optional . rate (number): Optional . targetRate (number): Optional . zoomIn \u2693\ufe0e Zooms in by the specified amount, or by a small amount if no amount is provided. mgeCameraConfig . zoomIn ({ amount = ... }) Parameters : params (table) amount (number): Default : 0.0625 . zoomOut \u2693\ufe0e Zooms out by the specified amount, or by a small amount if no amount is provided. mgeCameraConfig . zoomOut ({ amount = ... }) Parameters : params (table) amount (number)","title":"mgeCameraConfig"},{"location":"types/mgeCameraConfig/#mgecameraconfig","text":"Allows control of MGE camera features.","title":"mgeCameraConfig"},{"location":"types/mgeCameraConfig/#properties","text":"","title":"Properties"},{"location":"types/mgeCameraConfig/#fov","text":"Horizontal FOV, in degrees. Returns : result (number)","title":"fov"},{"location":"types/mgeCameraConfig/#shakeacceleration","text":"Camera shake acceleration. Camera shake must be enabled to see an effect. Returns : result (number)","title":"shakeAcceleration"},{"location":"types/mgeCameraConfig/#shakeenable","text":"Set if camera shake is active. Returns : result (boolean)","title":"shakeEnable"},{"location":"types/mgeCameraConfig/#shakemagnitude","text":"Camera shake magnitude. Camera shake must be enabled to see an effect. Returns : result (number)","title":"shakeMagnitude"},{"location":"types/mgeCameraConfig/#thirdpersonoffset","text":"The position offset (from the character) of the third person camera. Returns : result ( tes3vector3 )","title":"thirdPersonOffset"},{"location":"types/mgeCameraConfig/#zoom","text":"Camera zoom multiplier. Default is 1.0. Camera zoom must be enabled to see an effect. Returns : result (number)","title":"zoom"},{"location":"types/mgeCameraConfig/#zoomenable","text":"Set if camera zoom is enabled. Returns : result (boolean)","title":"zoomEnable"},{"location":"types/mgeCameraConfig/#functions","text":"","title":"Functions"},{"location":"types/mgeCameraConfig/#stopzoom","text":"Stops any continuous camera zoom. mgeCameraConfig . stopZoom ()","title":"stopZoom"},{"location":"types/mgeCameraConfig/#zoomcontinuous","text":"Sets up continuous camera zoom. The zoom speed starts at rate . The speed will approach targetRate over time, if provided. mgeCameraConfig . zoomContinuous ({ rate = ..., targetRate = ... }) Parameters : params (table): Optional . rate (number): Optional . targetRate (number): Optional .","title":"zoomContinuous"},{"location":"types/mgeCameraConfig/#zoomin","text":"Zooms in by the specified amount, or by a small amount if no amount is provided. mgeCameraConfig . zoomIn ({ amount = ... }) Parameters : params (table) amount (number): Default : 0.0625 .","title":"zoomIn"},{"location":"types/mgeCameraConfig/#zoomout","text":"Zooms out by the specified amount, or by a small amount if no amount is provided. mgeCameraConfig . zoomOut ({ amount = ... }) Parameters : params (table) amount (number)","title":"zoomOut"},{"location":"types/mgeDistantLandRenderConfig/","text":"mgeDistantLandRenderConfig \u2693\ufe0e Allows control of MGE distant land features. Properties \u2693\ufe0e aboveWaterFogEnd \u2693\ufe0e The above water fog end distance, in cells. Returns : result (number) aboveWaterFogStart \u2693\ufe0e The above water fog start distance, in cells. Returns : result (number) belowWaterFogEnd \u2693\ufe0e The below water fog end distance, in cells. Returns : result (number) belowWaterFogStart \u2693\ufe0e The below water fog start distance, in cells. Returns : result (number) drawDistance \u2693\ufe0e The draw distance, in cells. Returns : result (number) farStaticEnd \u2693\ufe0e The maximum distance that 'far' statics will be visible, in cells. Returns : result (number) farStaticMinSize \u2693\ufe0e Distant objects which are at least this size (and are smaller than veryFarStaticMinSize) are classified as 'far' statics. Smaller objects are classified as 'near' statics. This cannot be updated during gameplay. The game must be restarted to see changes. Returns : result (number) fogDistance \u2693\ufe0e An array containing the fog distance multiplier for each weather. Returns : result (number[]) fogOffsetPercent \u2693\ufe0e An array containing the fog offset % for each weather. Returns : result (number[]) interiorFogEnd \u2693\ufe0e The interior fog end distance, in cells. Returns : result (number) interiorFogStart \u2693\ufe0e The interior fog start distance, in cells. Returns : result (number) nearStaticEnd \u2693\ufe0e The maximum distance that 'near' statics will be visible, in cells. Returns : result (number) veryFarStaticEnd \u2693\ufe0e The maximum distance that 'very far' statics will be visible, in cells. Returns : result (number) veryFarStaticMinSize \u2693\ufe0e Distant objects which are at least this size are classified as 'very far' statics. This cannot be updated during gameplay. The game must be restarted to see changes. Returns : result (number) waterCaustics \u2693\ufe0e The % brightness of water caustics. Returns : result (number) waterWaveHeight \u2693\ufe0e The maximum height of dynamic waves. Returns : result (number) wind \u2693\ufe0e An array containing the wind speed multiplier for each weather. Returns : result (number[])","title":"mgeDistantLandRenderConfig"},{"location":"types/mgeDistantLandRenderConfig/#mgedistantlandrenderconfig","text":"Allows control of MGE distant land features.","title":"mgeDistantLandRenderConfig"},{"location":"types/mgeDistantLandRenderConfig/#properties","text":"","title":"Properties"},{"location":"types/mgeDistantLandRenderConfig/#abovewaterfogend","text":"The above water fog end distance, in cells. Returns : result (number)","title":"aboveWaterFogEnd"},{"location":"types/mgeDistantLandRenderConfig/#abovewaterfogstart","text":"The above water fog start distance, in cells. Returns : result (number)","title":"aboveWaterFogStart"},{"location":"types/mgeDistantLandRenderConfig/#belowwaterfogend","text":"The below water fog end distance, in cells. Returns : result (number)","title":"belowWaterFogEnd"},{"location":"types/mgeDistantLandRenderConfig/#belowwaterfogstart","text":"The below water fog start distance, in cells. Returns : result (number)","title":"belowWaterFogStart"},{"location":"types/mgeDistantLandRenderConfig/#drawdistance","text":"The draw distance, in cells. Returns : result (number)","title":"drawDistance"},{"location":"types/mgeDistantLandRenderConfig/#farstaticend","text":"The maximum distance that 'far' statics will be visible, in cells. Returns : result (number)","title":"farStaticEnd"},{"location":"types/mgeDistantLandRenderConfig/#farstaticminsize","text":"Distant objects which are at least this size (and are smaller than veryFarStaticMinSize) are classified as 'far' statics. Smaller objects are classified as 'near' statics. This cannot be updated during gameplay. The game must be restarted to see changes. Returns : result (number)","title":"farStaticMinSize"},{"location":"types/mgeDistantLandRenderConfig/#fogdistance","text":"An array containing the fog distance multiplier for each weather. Returns : result (number[])","title":"fogDistance"},{"location":"types/mgeDistantLandRenderConfig/#fogoffsetpercent","text":"An array containing the fog offset % for each weather. Returns : result (number[])","title":"fogOffsetPercent"},{"location":"types/mgeDistantLandRenderConfig/#interiorfogend","text":"The interior fog end distance, in cells. Returns : result (number)","title":"interiorFogEnd"},{"location":"types/mgeDistantLandRenderConfig/#interiorfogstart","text":"The interior fog start distance, in cells. Returns : result (number)","title":"interiorFogStart"},{"location":"types/mgeDistantLandRenderConfig/#nearstaticend","text":"The maximum distance that 'near' statics will be visible, in cells. Returns : result (number)","title":"nearStaticEnd"},{"location":"types/mgeDistantLandRenderConfig/#veryfarstaticend","text":"The maximum distance that 'very far' statics will be visible, in cells. Returns : result (number)","title":"veryFarStaticEnd"},{"location":"types/mgeDistantLandRenderConfig/#veryfarstaticminsize","text":"Distant objects which are at least this size are classified as 'very far' statics. This cannot be updated during gameplay. The game must be restarted to see changes. Returns : result (number)","title":"veryFarStaticMinSize"},{"location":"types/mgeDistantLandRenderConfig/#watercaustics","text":"The % brightness of water caustics. Returns : result (number)","title":"waterCaustics"},{"location":"types/mgeDistantLandRenderConfig/#waterwaveheight","text":"The maximum height of dynamic waves. Returns : result (number)","title":"waterWaveHeight"},{"location":"types/mgeDistantLandRenderConfig/#wind","text":"An array containing the wind speed multiplier for each weather. Returns : result (number[])","title":"wind"},{"location":"types/mgeRenderFeatures/","text":"mgeRenderFeatures \u2693\ufe0e Allows control of MGE render features. Properties \u2693\ufe0e atmosphericScattering \u2693\ufe0e No description yet available. Returns : result (boolean) blurReflections \u2693\ufe0e No description yet available. Returns : result (boolean) crosshairAutoHide \u2693\ufe0e No description yet available. Returns : result (boolean) displayMessages \u2693\ufe0e No description yet available. Returns : result (boolean) distantLand \u2693\ufe0e No description yet available. Returns : result (boolean) distantStatics \u2693\ufe0e No description yet available. Returns : result (boolean) distantWater \u2693\ufe0e No description yet available. Returns : result (boolean) dynamicRipples \u2693\ufe0e No description yet available. Returns : result (boolean) exponentialFog \u2693\ufe0e No description yet available. Returns : result (boolean) fpsCounter \u2693\ufe0e No description yet available. Returns : result (boolean) grass \u2693\ufe0e No description yet available. Returns : result (boolean) noMWMGEBlending \u2693\ufe0e No description yet available. Returns : result (boolean) noMWSunglare \u2693\ufe0e No description yet available. Returns : result (boolean) pauseRenderingInMenus \u2693\ufe0e No description yet available. Returns : result (boolean) reflectInterior \u2693\ufe0e No description yet available. Returns : result (boolean) reflectiveWater \u2693\ufe0e No description yet available. Returns : result (boolean) reflectNearStatics \u2693\ufe0e No description yet available. Returns : result (boolean) reflectSky \u2693\ufe0e No description yet available. Returns : result (boolean) shaders \u2693\ufe0e No description yet available. Returns : result (boolean) shadows \u2693\ufe0e No description yet available. Returns : result (boolean) transparencyAA \u2693\ufe0e No description yet available. Returns : result (boolean) updateHDR \u2693\ufe0e No description yet available. Returns : result (boolean)","title":"mgeRenderFeatures"},{"location":"types/mgeRenderFeatures/#mgerenderfeatures","text":"Allows control of MGE render features.","title":"mgeRenderFeatures"},{"location":"types/mgeRenderFeatures/#properties","text":"","title":"Properties"},{"location":"types/mgeRenderFeatures/#atmosphericscattering","text":"No description yet available. Returns : result (boolean)","title":"atmosphericScattering"},{"location":"types/mgeRenderFeatures/#blurreflections","text":"No description yet available. Returns : result (boolean)","title":"blurReflections"},{"location":"types/mgeRenderFeatures/#crosshairautohide","text":"No description yet available. Returns : result (boolean)","title":"crosshairAutoHide"},{"location":"types/mgeRenderFeatures/#displaymessages","text":"No description yet available. Returns : result (boolean)","title":"displayMessages"},{"location":"types/mgeRenderFeatures/#distantland","text":"No description yet available. Returns : result (boolean)","title":"distantLand"},{"location":"types/mgeRenderFeatures/#distantstatics","text":"No description yet available. Returns : result (boolean)","title":"distantStatics"},{"location":"types/mgeRenderFeatures/#distantwater","text":"No description yet available. Returns : result (boolean)","title":"distantWater"},{"location":"types/mgeRenderFeatures/#dynamicripples","text":"No description yet available. Returns : result (boolean)","title":"dynamicRipples"},{"location":"types/mgeRenderFeatures/#exponentialfog","text":"No description yet available. Returns : result (boolean)","title":"exponentialFog"},{"location":"types/mgeRenderFeatures/#fpscounter","text":"No description yet available. Returns : result (boolean)","title":"fpsCounter"},{"location":"types/mgeRenderFeatures/#grass","text":"No description yet available. Returns : result (boolean)","title":"grass"},{"location":"types/mgeRenderFeatures/#nomwmgeblending","text":"No description yet available. Returns : result (boolean)","title":"noMWMGEBlending"},{"location":"types/mgeRenderFeatures/#nomwsunglare","text":"No description yet available. Returns : result (boolean)","title":"noMWSunglare"},{"location":"types/mgeRenderFeatures/#pauserenderinginmenus","text":"No description yet available. Returns : result (boolean)","title":"pauseRenderingInMenus"},{"location":"types/mgeRenderFeatures/#reflectinterior","text":"No description yet available. Returns : result (boolean)","title":"reflectInterior"},{"location":"types/mgeRenderFeatures/#reflectivewater","text":"No description yet available. Returns : result (boolean)","title":"reflectiveWater"},{"location":"types/mgeRenderFeatures/#reflectnearstatics","text":"No description yet available. Returns : result (boolean)","title":"reflectNearStatics"},{"location":"types/mgeRenderFeatures/#reflectsky","text":"No description yet available. Returns : result (boolean)","title":"reflectSky"},{"location":"types/mgeRenderFeatures/#shaders","text":"No description yet available. Returns : result (boolean)","title":"shaders"},{"location":"types/mgeRenderFeatures/#shadows","text":"No description yet available. Returns : result (boolean)","title":"shadows"},{"location":"types/mgeRenderFeatures/#transparencyaa","text":"No description yet available. Returns : result (boolean)","title":"transparencyAA"},{"location":"types/mgeRenderFeatures/#updatehdr","text":"No description yet available. Returns : result (boolean)","title":"updateHDR"},{"location":"types/mgeShaderHandle/","text":"mgeShaderHandle \u2693\ufe0e A loaded MGE shader. Properties \u2693\ufe0e enabled \u2693\ufe0e The enabled state of the shader. Returns : result (boolean) name \u2693\ufe0e The shader name. Returns : result (string) orderPriority \u2693\ufe0e The calculated ordering priority value of the shader, that allows auto-sorting of shaders. Changing this value will re-sort the shader list. Returns : result (number) variables \u2693\ufe0e Lists the shader's editable variables. The result table has the variable names as keys, and the variable types as values. To get and set the actual variable, use the expression shaderHandle.<variableName> . Variable types are: 'b' boolean 'i' integer 'f' float 's' string 'a' float array '2' vec2 '3' vec3 '4' vec4 'm' matrix Returns : result (table<string, string>) Methods \u2693\ufe0e reload \u2693\ufe0e Reloads and recompiles the shader. Returns if the reload was successful. local result = myObject : reload () Returns : result (boolean)","title":"mgeShaderHandle"},{"location":"types/mgeShaderHandle/#mgeshaderhandle","text":"A loaded MGE shader.","title":"mgeShaderHandle"},{"location":"types/mgeShaderHandle/#properties","text":"","title":"Properties"},{"location":"types/mgeShaderHandle/#enabled","text":"The enabled state of the shader. Returns : result (boolean)","title":"enabled"},{"location":"types/mgeShaderHandle/#name","text":"The shader name. Returns : result (string)","title":"name"},{"location":"types/mgeShaderHandle/#orderpriority","text":"The calculated ordering priority value of the shader, that allows auto-sorting of shaders. Changing this value will re-sort the shader list. Returns : result (number)","title":"orderPriority"},{"location":"types/mgeShaderHandle/#variables","text":"Lists the shader's editable variables. The result table has the variable names as keys, and the variable types as values. To get and set the actual variable, use the expression shaderHandle.<variableName> . Variable types are: 'b' boolean 'i' integer 'f' float 's' string 'a' float array '2' vec2 '3' vec3 '4' vec4 'm' matrix Returns : result (table<string, string>)","title":"variables"},{"location":"types/mgeShaderHandle/#methods","text":"","title":"Methods"},{"location":"types/mgeShaderHandle/#reload","text":"Reloads and recompiles the shader. Returns if the reload was successful. local result = myObject : reload () Returns : result (boolean)","title":"reload"},{"location":"types/mgeShadersConfig/","text":"mgeShadersConfig \u2693\ufe0e Allows control of MGE shader features. Properties \u2693\ufe0e debug \u2693\ufe0e Read-only . Gathers a string listing all shaders. Returns : result (strings) hdrReactionSpeed \u2693\ufe0e The HDR exposure reaction speed, in seconds. Returns : result (number) list \u2693\ufe0e Read-only . Loads a list of all shaders. This is not a constant-held collection, and each shader handle is initialized anew each time this function is called. Cache this value when you are sure that shaders are not added or removed. Returns : result ( mgeShaderHandle []) Functions \u2693\ufe0e find \u2693\ufe0e Finds a loaded shader and returns a handle to it. local shader = mgeShadersConfig . find ({ name = ... }) Parameters : params (table) name (string) Returns : shader ( mgeShaderHandle , nil) load \u2693\ufe0e Loads a shader by name, from the Data Files/shaders/XEshaders directory. Adds the shader to the existing shader list, or returns the existing shader if it is already loaded. If the shader has a category annotation, it is inserted into a position that preserves the category ordering. Shaders without a category will be added to the end of the list. Summary of category sort order: * scene: Additional objects rendered into the scene. * atmosphere: Atmosphere effects that render over all objects, such as mist. * lens: Lens effects such as depth of field. * sensor: Sensor effects such as bloom. * tone: Tone mapping and color grading. * final: Any effects that need to run last. local shader = mgeShadersConfig . load ({ name = ... }) Parameters : params (table) name (string) Returns : shader ( mgeShaderHandle , nil)","title":"mgeShadersConfig"},{"location":"types/mgeShadersConfig/#mgeshadersconfig","text":"Allows control of MGE shader features.","title":"mgeShadersConfig"},{"location":"types/mgeShadersConfig/#properties","text":"","title":"Properties"},{"location":"types/mgeShadersConfig/#debug","text":"Read-only . Gathers a string listing all shaders. Returns : result (strings)","title":"debug"},{"location":"types/mgeShadersConfig/#hdrreactionspeed","text":"The HDR exposure reaction speed, in seconds. Returns : result (number)","title":"hdrReactionSpeed"},{"location":"types/mgeShadersConfig/#list","text":"Read-only . Loads a list of all shaders. This is not a constant-held collection, and each shader handle is initialized anew each time this function is called. Cache this value when you are sure that shaders are not added or removed. Returns : result ( mgeShaderHandle [])","title":"list"},{"location":"types/mgeShadersConfig/#functions","text":"","title":"Functions"},{"location":"types/mgeShadersConfig/#find","text":"Finds a loaded shader and returns a handle to it. local shader = mgeShadersConfig . find ({ name = ... }) Parameters : params (table) name (string) Returns : shader ( mgeShaderHandle , nil)","title":"find"},{"location":"types/mgeShadersConfig/#load","text":"Loads a shader by name, from the Data Files/shaders/XEshaders directory. Adds the shader to the existing shader list, or returns the existing shader if it is already loaded. If the shader has a category annotation, it is inserted into a position that preserves the category ordering. Shaders without a category will be added to the end of the list. Summary of category sort order: * scene: Additional objects rendered into the scene. * atmosphere: Atmosphere effects that render over all objects, such as mist. * lens: Lens effects such as depth of field. * sensor: Sensor effects such as bloom. * tone: Tone mapping and color grading. * final: Any effects that need to run last. local shader = mgeShadersConfig . load ({ name = ... }) Parameters : params (table) name (string) Returns : shader ( mgeShaderHandle , nil)","title":"load"},{"location":"types/mgeWeatherConfig/","text":"mgeWeatherConfig \u2693\ufe0e Allows control of MGE weather features. Functions \u2693\ufe0e getDistantFog \u2693\ufe0e No description yet available. mgeWeatherConfig . getDistantFog ( weather ) Parameters : weather (number) getPerPixelLighting \u2693\ufe0e Gets the PPL data for a weather from MGE. These are returned in a table with the sun and ambient keys, as well as the weather redefined. The result table can be modified, then sent back to setPerPixelLighting . local result = mgeWeatherConfig . getPerPixelLighting ( weather ) Parameters : weather (number) Returns : result (table<string, number>) getScattering \u2693\ufe0e Gets the in- and out-scatter values from MGE. These are returned in a table with the inscatter and outscatter keys. The result table can be modified, then sent back to setScattering . local scatters = mgeWeatherConfig . getScattering () Returns : scatters (table<string, tes3vector3 >) getWind \u2693\ufe0e Gets the wind speed for a weather from MGE. This is returned in a table with the speed key, as well as the weather redefined. The result table can be modified, then sent back to setWind . local result = mgeWeatherConfig . getWind ( weather ) Parameters : weather (number) Returns : result (table<string, number>): A package containing the speed property. setDistantFog \u2693\ufe0e No description yet available. mgeWeatherConfig . setDistantFog ({ weather = ..., distance = ..., offset = ... }) Parameters : params (table) weather (number) distance (number) offset (number) setPerPixelLighting \u2693\ufe0e Sets the PPL values for a weather in MGE. The result table of getPerPixelLighting can be modified then passed to this function. mgeWeatherConfig . setPerPixelLighting ({ weather = ..., sun = ..., ambient = ... }) Parameters : params (table) weather (number) sun (number) ambient (number) setScattering \u2693\ufe0e Sets the in- and out-scatter values for MGE. The result table of getScattering can be modified then passed to this function. local success = mgeWeatherConfig . setScattering ({ inscatter = ..., outscatter = ... }) Parameters : params (table) inscatter ( tes3vector3 , table) outscatter ( tes3vector3 , table) Returns : success (table<string, number>) setWind \u2693\ufe0e Sets the wind speed for a weather in MGE. The result table of getWind can be modified then passed to this function. mgeWeatherConfig . setWind ({ weather = ..., speed = ... }) Parameters : params (table) weather (number) speed (number)","title":"mgeWeatherConfig"},{"location":"types/mgeWeatherConfig/#mgeweatherconfig","text":"Allows control of MGE weather features.","title":"mgeWeatherConfig"},{"location":"types/mgeWeatherConfig/#functions","text":"","title":"Functions"},{"location":"types/mgeWeatherConfig/#getdistantfog","text":"No description yet available. mgeWeatherConfig . getDistantFog ( weather ) Parameters : weather (number)","title":"getDistantFog"},{"location":"types/mgeWeatherConfig/#getperpixellighting","text":"Gets the PPL data for a weather from MGE. These are returned in a table with the sun and ambient keys, as well as the weather redefined. The result table can be modified, then sent back to setPerPixelLighting . local result = mgeWeatherConfig . getPerPixelLighting ( weather ) Parameters : weather (number) Returns : result (table<string, number>)","title":"getPerPixelLighting"},{"location":"types/mgeWeatherConfig/#getscattering","text":"Gets the in- and out-scatter values from MGE. These are returned in a table with the inscatter and outscatter keys. The result table can be modified, then sent back to setScattering . local scatters = mgeWeatherConfig . getScattering () Returns : scatters (table<string, tes3vector3 >)","title":"getScattering"},{"location":"types/mgeWeatherConfig/#getwind","text":"Gets the wind speed for a weather from MGE. This is returned in a table with the speed key, as well as the weather redefined. The result table can be modified, then sent back to setWind . local result = mgeWeatherConfig . getWind ( weather ) Parameters : weather (number) Returns : result (table<string, number>): A package containing the speed property.","title":"getWind"},{"location":"types/mgeWeatherConfig/#setdistantfog","text":"No description yet available. mgeWeatherConfig . setDistantFog ({ weather = ..., distance = ..., offset = ... }) Parameters : params (table) weather (number) distance (number) offset (number)","title":"setDistantFog"},{"location":"types/mgeWeatherConfig/#setperpixellighting","text":"Sets the PPL values for a weather in MGE. The result table of getPerPixelLighting can be modified then passed to this function. mgeWeatherConfig . setPerPixelLighting ({ weather = ..., sun = ..., ambient = ... }) Parameters : params (table) weather (number) sun (number) ambient (number)","title":"setPerPixelLighting"},{"location":"types/mgeWeatherConfig/#setscattering","text":"Sets the in- and out-scatter values for MGE. The result table of getScattering can be modified then passed to this function. local success = mgeWeatherConfig . setScattering ({ inscatter = ..., outscatter = ... }) Parameters : params (table) inscatter ( tes3vector3 , table) outscatter ( tes3vector3 , table) Returns : success (table<string, number>)","title":"setScattering"},{"location":"types/mgeWeatherConfig/#setwind","text":"Sets the wind speed for a weather in MGE. The result table of getWind can be modified then passed to this function. mgeWeatherConfig . setWind ({ weather = ..., speed = ... }) Parameters : params (table) weather (number) speed (number)","title":"setWind"},{"location":"types/mwseLuaExecutor/","text":"mwseLuaExecutor \u2693\ufe0e A handle to a command excuted using os.execute configured to run asynchronously. Properties \u2693\ufe0e command \u2693\ufe0e The command originally passed to os.execute . Returns : result (string) errorCode \u2693\ufe0e The error code of the program, or 0 if there was no error. Returns : result (number) exitCode \u2693\ufe0e The exit code of the program, or nil if the program has not yet finished. Returns : result (number, nil) ready \u2693\ufe0e If true, the program is no longer running and output can be read. Returns : result (boolean) Methods \u2693\ufe0e getOutput \u2693\ufe0e Reads the current output of the program, and clears the output buffer. local output = myObject : getOutput () Returns : output (string): The output written to stdout by the program. wait \u2693\ufe0e Pauses the main thread, locking up the program until the program has finished. myObject : wait ()","title":"mwseLuaExecutor"},{"location":"types/mwseLuaExecutor/#mwseluaexecutor","text":"A handle to a command excuted using os.execute configured to run asynchronously.","title":"mwseLuaExecutor"},{"location":"types/mwseLuaExecutor/#properties","text":"","title":"Properties"},{"location":"types/mwseLuaExecutor/#command","text":"The command originally passed to os.execute . Returns : result (string)","title":"command"},{"location":"types/mwseLuaExecutor/#errorcode","text":"The error code of the program, or 0 if there was no error. Returns : result (number)","title":"errorCode"},{"location":"types/mwseLuaExecutor/#exitcode","text":"The exit code of the program, or nil if the program has not yet finished. Returns : result (number, nil)","title":"exitCode"},{"location":"types/mwseLuaExecutor/#ready","text":"If true, the program is no longer running and output can be read. Returns : result (boolean)","title":"ready"},{"location":"types/mwseLuaExecutor/#methods","text":"","title":"Methods"},{"location":"types/mwseLuaExecutor/#getoutput","text":"Reads the current output of the program, and clears the output buffer. local output = myObject : getOutput () Returns : output (string): The output written to stdout by the program.","title":"getOutput"},{"location":"types/mwseLuaExecutor/#wait","text":"Pauses the main thread, locking up the program until the program has finished. myObject : wait ()","title":"wait"},{"location":"types/mwseSafeObjectHandle/","text":"mwseSafeObjectHandle \u2693\ufe0e A handle to safely operate on ( tes3object ). Methods \u2693\ufe0e getObject \u2693\ufe0e Returns the object of this handle. local result = myObject : getObject () Returns : result ( tes3object ) valid \u2693\ufe0e Returns true if the object of this handle is still valid. Objects that are invalid do no longer exist and cannot be used. myObject : valid () Example: An example of usage local result = tes3 . rayTest { -- the result can get invalidated position = tes3 . getPlayerEyePosition (), direction = tes3 . getPlayerEyeVector (), ignore = { tes3 . player } } local refHandle if result then refHandle = tes3 . makeSafeObjectHandle ( result . reference ) end local function myFunction () -- Before using the reference, we need to check that it's still valid. -- References get unloaded on cell changes etc. if refHandle : valid () then -- Now we can safely do something with our stored reference. local reference = refHandle : getObject () end end","title":"mwseSafeObjectHandle"},{"location":"types/mwseSafeObjectHandle/#mwsesafeobjecthandle","text":"A handle to safely operate on ( tes3object ).","title":"mwseSafeObjectHandle"},{"location":"types/mwseSafeObjectHandle/#methods","text":"","title":"Methods"},{"location":"types/mwseSafeObjectHandle/#getobject","text":"Returns the object of this handle. local result = myObject : getObject () Returns : result ( tes3object )","title":"getObject"},{"location":"types/mwseSafeObjectHandle/#valid","text":"Returns true if the object of this handle is still valid. Objects that are invalid do no longer exist and cannot be used. myObject : valid () Example: An example of usage local result = tes3 . rayTest { -- the result can get invalidated position = tes3 . getPlayerEyePosition (), direction = tes3 . getPlayerEyeVector (), ignore = { tes3 . player } } local refHandle if result then refHandle = tes3 . makeSafeObjectHandle ( result . reference ) end local function myFunction () -- Before using the reference, we need to check that it's still valid. -- References get unloaded on cell changes etc. if refHandle : valid () then -- Now we can safely do something with our stored reference. local reference = refHandle : getObject () end end","title":"valid"},{"location":"types/mwseTimer/","text":"mwseTimer \u2693\ufe0e A Timer is a class used to keep track of callback that should be invoked at a later time. Properties \u2693\ufe0e callback \u2693\ufe0e Read-only . The callback that will be invoked at the end of each iteration. Returns : result (function, string) data \u2693\ufe0e Arbitrary json-serializable data stored in the timer. This defaults to nil , but can be set at the time of timer creation, or changed later. Returns : result (table, nil) duration \u2693\ufe0e Read-only . The duration of single iteration of the timer in seconds for timers of timer.real and timer.simulate types. It's in hours for timer.game timers. Returns : result (number) iterations \u2693\ufe0e Read-only . The amount of iterations left for the timer. Returns : result (integer) state \u2693\ufe0e Read-only . The state of the timer, matching timer.active , timer.paused , or timer.expired . Returns : result (integer) timeLeft \u2693\ufe0e Read-only . The amount of time left before the current iteration of the timer will complete. Reset to duration value at the end of each iteration. Returns : result (number) timing \u2693\ufe0e Read-only . This is the time in the owning mwseTimerController 's clock when the current iteration of the timer ends. It's updated for each iteration. For paused timers its equal to the number of seconds/hours left for the current iteration. Returns : result (number) Methods \u2693\ufe0e cancel \u2693\ufe0e Cancels the timer. local canceled = myObject : cancel () Returns : canceled (boolean) pause \u2693\ufe0e Pauses the timer. local paused = myObject : pause () Returns : paused (boolean) reset \u2693\ufe0e Resets the timer completion time and iterations count. myObject : reset () resume \u2693\ufe0e Resumes a paused timer. local resumed = myObject : resume () Returns : resumed (boolean)","title":"mwseTimer"},{"location":"types/mwseTimer/#mwsetimer","text":"A Timer is a class used to keep track of callback that should be invoked at a later time.","title":"mwseTimer"},{"location":"types/mwseTimer/#properties","text":"","title":"Properties"},{"location":"types/mwseTimer/#callback","text":"Read-only . The callback that will be invoked at the end of each iteration. Returns : result (function, string)","title":"callback"},{"location":"types/mwseTimer/#data","text":"Arbitrary json-serializable data stored in the timer. This defaults to nil , but can be set at the time of timer creation, or changed later. Returns : result (table, nil)","title":"data"},{"location":"types/mwseTimer/#duration","text":"Read-only . The duration of single iteration of the timer in seconds for timers of timer.real and timer.simulate types. It's in hours for timer.game timers. Returns : result (number)","title":"duration"},{"location":"types/mwseTimer/#iterations","text":"Read-only . The amount of iterations left for the timer. Returns : result (integer)","title":"iterations"},{"location":"types/mwseTimer/#state","text":"Read-only . The state of the timer, matching timer.active , timer.paused , or timer.expired . Returns : result (integer)","title":"state"},{"location":"types/mwseTimer/#timeleft","text":"Read-only . The amount of time left before the current iteration of the timer will complete. Reset to duration value at the end of each iteration. Returns : result (number)","title":"timeLeft"},{"location":"types/mwseTimer/#timing","text":"Read-only . This is the time in the owning mwseTimerController 's clock when the current iteration of the timer ends. It's updated for each iteration. For paused timers its equal to the number of seconds/hours left for the current iteration. Returns : result (number)","title":"timing"},{"location":"types/mwseTimer/#methods","text":"","title":"Methods"},{"location":"types/mwseTimer/#cancel","text":"Cancels the timer. local canceled = myObject : cancel () Returns : canceled (boolean)","title":"cancel"},{"location":"types/mwseTimer/#pause","text":"Pauses the timer. local paused = myObject : pause () Returns : paused (boolean)","title":"pause"},{"location":"types/mwseTimer/#reset","text":"Resets the timer completion time and iterations count. myObject : reset ()","title":"reset"},{"location":"types/mwseTimer/#resume","text":"Resumes a paused timer. local resumed = myObject : resume () Returns : resumed (boolean)","title":"resume"},{"location":"types/mwseTimerController/","text":"mwseTimerController \u2693\ufe0e A Timer Controller is a class used to sort and trigger callbacks based on an arbitrary timekeeping mechanic. By default there are three Timer Controllers for each type of timers: timer.simulate , timer.game or timer.real . Properties \u2693\ufe0e clock \u2693\ufe0e The current clock time for this timer controller. Timer Controller, responsible for timer.game type of timers, has clock equal to the game's simuation timestamp. Timer Controllers, responsible for timer.real , and timer.simulate , types of timers have their initial clock set to 0 on a new game, and their clock's progressions is equal to deltaTime . Timer Controller's, responsible for timer.simulate timers, clock only advances when the menu mode is off. Returns : result (number) Methods \u2693\ufe0e create \u2693\ufe0e Creates a timer for the given Timer Controller. local timer = myObject : create ({ duration = ..., callback = ..., iterations = ..., persists = ..., data = ... }) Parameters : params (table) duration (number) callback (function, string) iterations (integer): Default : 1 . persists (boolean): Default : true . data (table, nil): Default : nil . Returns : timer ( mwseTimer ) Functions \u2693\ufe0e new \u2693\ufe0e Creates a new Timer Controller. Its initial clock is zero, unless a start time is provided. local result = mwseTimerController . new ( startTime ) Parameters : startTime (number): Optional . Returns : result ( mwseTimerController )","title":"mwseTimerController"},{"location":"types/mwseTimerController/#mwsetimercontroller","text":"A Timer Controller is a class used to sort and trigger callbacks based on an arbitrary timekeeping mechanic. By default there are three Timer Controllers for each type of timers: timer.simulate , timer.game or timer.real .","title":"mwseTimerController"},{"location":"types/mwseTimerController/#properties","text":"","title":"Properties"},{"location":"types/mwseTimerController/#clock","text":"The current clock time for this timer controller. Timer Controller, responsible for timer.game type of timers, has clock equal to the game's simuation timestamp. Timer Controllers, responsible for timer.real , and timer.simulate , types of timers have their initial clock set to 0 on a new game, and their clock's progressions is equal to deltaTime . Timer Controller's, responsible for timer.simulate timers, clock only advances when the menu mode is off. Returns : result (number)","title":"clock"},{"location":"types/mwseTimerController/#methods","text":"","title":"Methods"},{"location":"types/mwseTimerController/#create","text":"Creates a timer for the given Timer Controller. local timer = myObject : create ({ duration = ..., callback = ..., iterations = ..., persists = ..., data = ... }) Parameters : params (table) duration (number) callback (function, string) iterations (integer): Default : 1 . persists (boolean): Default : true . data (table, nil): Default : nil . Returns : timer ( mwseTimer )","title":"create"},{"location":"types/mwseTimerController/#functions","text":"","title":"Functions"},{"location":"types/mwseTimerController/#new","text":"Creates a new Timer Controller. Its initial clock is zero, unless a start time is provided. local result = mwseTimerController . new ( startTime ) Parameters : startTime (number): Optional . Returns : result ( mwseTimerController )","title":"new"},{"location":"types/niAVObject/","text":"niAVObject \u2693\ufe0e The typical base type for most NetImmerse scene graph objects. This type inherits the following: niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) velocity \u2693\ufe0e The object's local velocity. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) worldBoundOrigin \u2693\ufe0e The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 ) worldBoundRadius \u2693\ufe0e The radius of the object's bounds. Returns : result (number) worldTransform \u2693\ufe0e The object's transformations in the world space. Returns : result ( tes3transform ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) attachProperty \u2693\ufe0e Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. myObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) detachAllProperties \u2693\ufe0e Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty []) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) propagatePositionChange \u2693\ufe0e Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? updateEffects \u2693\ufe0e Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. myObject : updateProperties ()","title":"niAVObject"},{"location":"types/niAVObject/#niavobject","text":"The typical base type for most NetImmerse scene graph objects. This type inherits the following: niObjectNET , niObject","title":"niAVObject"},{"location":"types/niAVObject/#properties","text":"","title":"Properties"},{"location":"types/niAVObject/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niAVObject/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niAVObject/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niAVObject/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niAVObject/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niAVObject/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niAVObject/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niAVObject/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niAVObject/#parent","text":"Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niAVObject/#properties_1","text":"Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niAVObject/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niAVObject/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niAVObject/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niAVObject/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niAVObject/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niAVObject/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niAVObject/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niAVObject/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niAVObject/#velocity","text":"The object's local velocity. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/niAVObject/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niAVObject/#worldboundorigin","text":"The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 )","title":"worldBoundOrigin"},{"location":"types/niAVObject/#worldboundradius","text":"The radius of the object's bounds. Returns : result (number)","title":"worldBoundRadius"},{"location":"types/niAVObject/#worldtransform","text":"The object's transformations in the world space. Returns : result ( tes3transform )","title":"worldTransform"},{"location":"types/niAVObject/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil)","title":"zBufferProperty"},{"location":"types/niAVObject/#methods","text":"","title":"Methods"},{"location":"types/niAVObject/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niAVObject/#attachproperty","text":"Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niAVObject/#cleartransforms","text":"Resets the object's local transform. myObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niAVObject/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niAVObject/#detachallproperties","text":"Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty [])","title":"detachAllProperties"},{"location":"types/niAVObject/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niAVObject/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niAVObject/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niAVObject/#getproperty","text":"Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niAVObject/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niAVObject/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niAVObject/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niAVObject/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niAVObject/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niAVObject/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niAVObject/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niAVObject/#propagatepositionchange","text":"Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"propagatePositionChange"},{"location":"types/niAVObject/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niAVObject/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niAVObject/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niAVObject/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niAVObject/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niAVObject/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niAVObject/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"update"},{"location":"types/niAVObject/#updateeffects","text":"Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects ()","title":"updateEffects"},{"location":"types/niAVObject/#updateproperties","text":"Update all attached properties. myObject : updateProperties ()","title":"updateProperties"},{"location":"types/niAlphaProperty/","text":"niAlphaProperty \u2693\ufe0e A rendering property that manages alpha blending, enabling and disabling it, and setting blending functions. The property also affects alpha testing, which can provide a performance boost. This type inherits the following: niProperty , niObjectNET , niObject Properties \u2693\ufe0e alphaTestRef \u2693\ufe0e The reference value used for alpha testing. In range [0, 255]. Returns : result (integer) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) propertyFlags \u2693\ufe0e Returns : result (integer) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) type \u2693\ufe0e Read-only . The unique class identifier number of the given rendering property. The types are available in ni.propertyType table. Returns : result (integer) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) Functions \u2693\ufe0e new \u2693\ufe0e Creates a new, niAlphaProperty, with the alphaTestRef set to 0. local property = niAlphaProperty . new () Returns : property ( niAlphaProperty )","title":"niAlphaProperty"},{"location":"types/niAlphaProperty/#nialphaproperty","text":"A rendering property that manages alpha blending, enabling and disabling it, and setting blending functions. The property also affects alpha testing, which can provide a performance boost. This type inherits the following: niProperty , niObjectNET , niObject","title":"niAlphaProperty"},{"location":"types/niAlphaProperty/#properties","text":"","title":"Properties"},{"location":"types/niAlphaProperty/#alphatestref","text":"The reference value used for alpha testing. In range [0, 255]. Returns : result (integer)","title":"alphaTestRef"},{"location":"types/niAlphaProperty/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niAlphaProperty/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niAlphaProperty/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niAlphaProperty/#propertyflags","text":"Returns : result (integer)","title":"propertyFlags"},{"location":"types/niAlphaProperty/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niAlphaProperty/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niAlphaProperty/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niAlphaProperty/#type","text":"Read-only . The unique class identifier number of the given rendering property. The types are available in ni.propertyType table. Returns : result (integer)","title":"type"},{"location":"types/niAlphaProperty/#methods","text":"","title":"Methods"},{"location":"types/niAlphaProperty/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niAlphaProperty/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niAlphaProperty/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niAlphaProperty/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niAlphaProperty/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niAlphaProperty/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niAlphaProperty/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niAlphaProperty/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niAlphaProperty/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niAlphaProperty/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niAlphaProperty/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niAlphaProperty/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niAlphaProperty/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niAlphaProperty/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niAlphaProperty/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niAlphaProperty/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niAlphaProperty/#functions","text":"","title":"Functions"},{"location":"types/niAlphaProperty/#new","text":"Creates a new, niAlphaProperty, with the alphaTestRef set to 0. local property = niAlphaProperty . new () Returns : property ( niAlphaProperty )","title":"new"},{"location":"types/niAmbientLight/","text":"niAmbientLight \u2693\ufe0e An object that represents an ambient light. This object is fairly simple, and has no location, direction, or attenuation. This type inherits the following: niLight , niDynamicEffect , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e affectedNodes \u2693\ufe0e The list of nodes that a given dynamic effect will affect. Returns : result ( niNodeLinkedList ) alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) ambient \u2693\ufe0e The ambient light color. Returns : result ( niColor ) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) diffuse \u2693\ufe0e The diffuse light color. Returns : result ( niColor ) dimmer \u2693\ufe0e This flag scales the overall brightness of all light components. This value must be nonnegative. It is usually less than or equal to 1.0 (although advanced lighting effects may use larger values). Returns : result (number) enabled \u2693\ufe0e The enabled state of a given dynamic effect. Returns : result (boolean) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) specular \u2693\ufe0e This property was inteded to be specular light color in NetImmerse, but in Morrowind it represents the dynamic culling radius. All the color channels are equal to the radius. In practice, this radius represents the light's influence radius. Returns : result ( niColor ) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) type \u2693\ufe0e Read-only . The enumerated type of a given dynamic effect. Maps to values in ni.dynamicEffectType table. Returns : result (integer) velocity \u2693\ufe0e The object's local velocity. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) worldBoundOrigin \u2693\ufe0e The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 ) worldBoundRadius \u2693\ufe0e The radius of the object's bounds. Returns : result (number) worldTransform \u2693\ufe0e The object's transformations in the world space. Returns : result ( tes3transform ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) attachAffectedNode \u2693\ufe0e Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list. attachProperty \u2693\ufe0e Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. myObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) detachAffectedNode \u2693\ufe0e Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list. detachAllProperties \u2693\ufe0e Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty []) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) propagatePositionChange \u2693\ufe0e Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? updateEffects \u2693\ufe0e Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. myObject : updateProperties ()","title":"niAmbientLight"},{"location":"types/niAmbientLight/#niambientlight","text":"An object that represents an ambient light. This object is fairly simple, and has no location, direction, or attenuation. This type inherits the following: niLight , niDynamicEffect , niAVObject , niObjectNET , niObject","title":"niAmbientLight"},{"location":"types/niAmbientLight/#properties","text":"","title":"Properties"},{"location":"types/niAmbientLight/#affectednodes","text":"The list of nodes that a given dynamic effect will affect. Returns : result ( niNodeLinkedList )","title":"affectedNodes"},{"location":"types/niAmbientLight/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niAmbientLight/#ambient","text":"The ambient light color. Returns : result ( niColor )","title":"ambient"},{"location":"types/niAmbientLight/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niAmbientLight/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niAmbientLight/#diffuse","text":"The diffuse light color. Returns : result ( niColor )","title":"diffuse"},{"location":"types/niAmbientLight/#dimmer","text":"This flag scales the overall brightness of all light components. This value must be nonnegative. It is usually less than or equal to 1.0 (although advanced lighting effects may use larger values). Returns : result (number)","title":"dimmer"},{"location":"types/niAmbientLight/#enabled","text":"The enabled state of a given dynamic effect. Returns : result (boolean)","title":"enabled"},{"location":"types/niAmbientLight/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niAmbientLight/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niAmbientLight/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niAmbientLight/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niAmbientLight/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niAmbientLight/#parent","text":"Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niAmbientLight/#properties_1","text":"Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niAmbientLight/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niAmbientLight/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niAmbientLight/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niAmbientLight/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niAmbientLight/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niAmbientLight/#specular","text":"This property was inteded to be specular light color in NetImmerse, but in Morrowind it represents the dynamic culling radius. All the color channels are equal to the radius. In practice, this radius represents the light's influence radius. Returns : result ( niColor )","title":"specular"},{"location":"types/niAmbientLight/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niAmbientLight/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niAmbientLight/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niAmbientLight/#type","text":"Read-only . The enumerated type of a given dynamic effect. Maps to values in ni.dynamicEffectType table. Returns : result (integer)","title":"type"},{"location":"types/niAmbientLight/#velocity","text":"The object's local velocity. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/niAmbientLight/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niAmbientLight/#worldboundorigin","text":"The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 )","title":"worldBoundOrigin"},{"location":"types/niAmbientLight/#worldboundradius","text":"The radius of the object's bounds. Returns : result (number)","title":"worldBoundRadius"},{"location":"types/niAmbientLight/#worldtransform","text":"The object's transformations in the world space. Returns : result ( tes3transform )","title":"worldTransform"},{"location":"types/niAmbientLight/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil)","title":"zBufferProperty"},{"location":"types/niAmbientLight/#methods","text":"","title":"Methods"},{"location":"types/niAmbientLight/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niAmbientLight/#attachaffectednode","text":"Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list.","title":"attachAffectedNode"},{"location":"types/niAmbientLight/#attachproperty","text":"Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niAmbientLight/#cleartransforms","text":"Resets the object's local transform. myObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niAmbientLight/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niAmbientLight/#detachaffectednode","text":"Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"detachAffectedNode"},{"location":"types/niAmbientLight/#detachallproperties","text":"Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty [])","title":"detachAllProperties"},{"location":"types/niAmbientLight/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niAmbientLight/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niAmbientLight/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niAmbientLight/#getproperty","text":"Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niAmbientLight/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niAmbientLight/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niAmbientLight/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niAmbientLight/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niAmbientLight/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niAmbientLight/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niAmbientLight/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niAmbientLight/#propagatepositionchange","text":"Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"propagatePositionChange"},{"location":"types/niAmbientLight/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niAmbientLight/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niAmbientLight/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niAmbientLight/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niAmbientLight/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niAmbientLight/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niAmbientLight/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"update"},{"location":"types/niAmbientLight/#updateeffects","text":"Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects ()","title":"updateEffects"},{"location":"types/niAmbientLight/#updateproperties","text":"Update all attached properties. myObject : updateProperties ()","title":"updateProperties"},{"location":"types/niAnimationKey/","text":"niAnimationKey \u2693\ufe0e The base-most class from which all other animation keys are derived. Simply holds timing information. Properties \u2693\ufe0e timing \u2693\ufe0e The timing of the animation key. Returns : result (number)","title":"niAnimationKey"},{"location":"types/niAnimationKey/#nianimationkey","text":"The base-most class from which all other animation keys are derived. Simply holds timing information.","title":"niAnimationKey"},{"location":"types/niAnimationKey/#properties","text":"","title":"Properties"},{"location":"types/niAnimationKey/#timing","text":"The timing of the animation key. Returns : result (number)","title":"timing"},{"location":"types/niBezFloatKey/","text":"niBezFloatKey \u2693\ufe0e An animation key for bezier curved values. This type inherits the following: niFloatKey , niAnimationKey Properties \u2693\ufe0e inTangent \u2693\ufe0e The inbound tangent for the bezier curve. Returns : result (number) outTangent \u2693\ufe0e The outbound tangent for the bezier curve. Returns : result (number) timing \u2693\ufe0e The timing of the animation key. Returns : result (number) value \u2693\ufe0e The arbitrary value of the NiFloatKey. Returns : result (number)","title":"niBezFloatKey"},{"location":"types/niBezFloatKey/#nibezfloatkey","text":"An animation key for bezier curved values. This type inherits the following: niFloatKey , niAnimationKey","title":"niBezFloatKey"},{"location":"types/niBezFloatKey/#properties","text":"","title":"Properties"},{"location":"types/niBezFloatKey/#intangent","text":"The inbound tangent for the bezier curve. Returns : result (number)","title":"inTangent"},{"location":"types/niBezFloatKey/#outtangent","text":"The outbound tangent for the bezier curve. Returns : result (number)","title":"outTangent"},{"location":"types/niBezFloatKey/#timing","text":"The timing of the animation key. Returns : result (number)","title":"timing"},{"location":"types/niBezFloatKey/#value","text":"The arbitrary value of the NiFloatKey. Returns : result (number)","title":"value"},{"location":"types/niBezPosKey/","text":"niBezPosKey \u2693\ufe0e An animation key for bezier curved position. This type inherits the following: niPosKey , niAnimationKey Properties \u2693\ufe0e inTangent \u2693\ufe0e The inbound tangent for the bezier curve. Returns : result ( tes3vector3 ) outTangent \u2693\ufe0e The outbound tangent for the bezier curve. Returns : result ( tes3vector3 ) timing \u2693\ufe0e The timing of the animation key. Returns : result (number) value \u2693\ufe0e The position value of the animation key. Returns : result ( tes3vector3 )","title":"niBezPosKey"},{"location":"types/niBezPosKey/#nibezposkey","text":"An animation key for bezier curved position. This type inherits the following: niPosKey , niAnimationKey","title":"niBezPosKey"},{"location":"types/niBezPosKey/#properties","text":"","title":"Properties"},{"location":"types/niBezPosKey/#intangent","text":"The inbound tangent for the bezier curve. Returns : result ( tes3vector3 )","title":"inTangent"},{"location":"types/niBezPosKey/#outtangent","text":"The outbound tangent for the bezier curve. Returns : result ( tes3vector3 )","title":"outTangent"},{"location":"types/niBezPosKey/#timing","text":"The timing of the animation key. Returns : result (number)","title":"timing"},{"location":"types/niBezPosKey/#value","text":"The position value of the animation key. Returns : result ( tes3vector3 )","title":"value"},{"location":"types/niBezRotKey/","text":"niBezRotKey \u2693\ufe0e An animation key for bezier curved rotation. This type inherits the following: niRotKey , niAnimationKey Properties \u2693\ufe0e timing \u2693\ufe0e The timing of the animation key. Returns : result (number) value \u2693\ufe0e The rotation value of the animation key. Returns : result ( niQuaternion )","title":"niBezRotKey"},{"location":"types/niBezRotKey/#nibezrotkey","text":"An animation key for bezier curved rotation. This type inherits the following: niRotKey , niAnimationKey","title":"niBezRotKey"},{"location":"types/niBezRotKey/#properties","text":"","title":"Properties"},{"location":"types/niBezRotKey/#timing","text":"The timing of the animation key. Returns : result (number)","title":"timing"},{"location":"types/niBezRotKey/#value","text":"The rotation value of the animation key. Returns : result ( niQuaternion )","title":"value"},{"location":"types/niBillboardNode/","text":"niBillboardNode \u2693\ufe0e This node adjusts its render-time orientation so that the local z axis will face the camera. It supports multiple modes: camera parallel, or rotation around the local Y axis. This type inherits the following: niNode , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) children \u2693\ufe0e Read-only . The children of the node. Can have nil entries. Returns : result ( niAVObject []) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) effectList \u2693\ufe0e Read-only . The effect list of the node. Attached effects affect the node and all of its child subtree geometry. Returns : result ( niDynamicEffectLinkedList ) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) mode \u2693\ufe0e The orientation mode. Maps to values in ni.billboardMode table. 0 Always face camera. Local z-axis becomes parallel to the camera. Minimizes rotation difference from the previous frame for smoother motion. 1 Rotate about up vector. The object is rotated around its local y-axis so that its z-axis is pointing towards the camera. 2 Rigid face camera. Local z-axis becomes parallel to the camera. Does not depend on previous frame. Returns : result (integer) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) velocity \u2693\ufe0e The object's local velocity. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) worldBoundOrigin \u2693\ufe0e The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 ) worldBoundRadius \u2693\ufe0e The radius of the object's bounds. Returns : result (number) worldTransform \u2693\ufe0e The object's transformations in the world space. Returns : result ( tes3transform ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) attachChild \u2693\ufe0e Attaches the child to the children list of the node. Doesn't check to see if the object is already in the child list. myObject : attachChild ( child , useFirstAvailable ) Parameters : child ( niAVObject ) useFirstAvailable (boolean): Default : false . Use the first available space in the list. If false appends the child at the end of the list. attachEffect \u2693\ufe0e Attaches a dynamic effect to the node. It will not attach the same effect twice. myObject : attachEffect ( effect ) Parameters : effect ( niDynamicEffect ) attachProperty \u2693\ufe0e Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. myObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) createBoundingBox \u2693\ufe0e Calculates and creates a bounding box for the object. The existing bounding box, if any, will not be used, a fresh one will always be calculated. local boundingBox = myObject : createBoundingBox () Returns : boundingBox ( tes3boundingBox ): The newly created bounding box. detachAllEffects \u2693\ufe0e Detaches all dynamic effect from the effect list of the node. myObject : detachAllEffects () detachAllProperties \u2693\ufe0e Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty []) detachChild \u2693\ufe0e Detaches the child from the children list of the node. Returns the detached child. local detachedChild = myObject : detachChild ( child ) Parameters : child ( niAVObject ) Returns : detachedChild ( niAVObject ) detachChildAt \u2693\ufe0e Detaches the child at the specified index from the children list of the node. Returns the detached child. local detachedChild = myObject : detachChildAt ( index ) Parameters : index (integer) Returns : detachedChild ( niAVObject ) detachEffect \u2693\ufe0e Detaches the given dynamic effect from the effect list of the node, if it was present. Has no effect if the effect wasn't attached to the node. myObject : detachEffect ( effect ) Parameters : effect ( niDynamicEffect ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getEffect \u2693\ufe0e Gets the effect of the given type. local effect = myObject : getEffect ( type ) Parameters : type (integer): Use the values from ni.dynamicEffectType table. Returns : effect ( niDynamicEffect , nil) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) propagatePositionChange \u2693\ufe0e Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) rotateToCamera \u2693\ufe0e Updates the world transform to point at a camera. Used automatically during rendering. This method is only needed when you need to get the world transform without rendering. myObject : rotateToCamera ( camera ) Parameters : camera ( niCamera ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? updateEffects \u2693\ufe0e Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. myObject : updateProperties () Functions \u2693\ufe0e new \u2693\ufe0e Creates a new, empty niBillboardNode, with the mode set to rotate about the model-space up vector. local node = niBillboardNode . new () Returns : node ( niBillboardNode )","title":"niBillboardNode"},{"location":"types/niBillboardNode/#nibillboardnode","text":"This node adjusts its render-time orientation so that the local z axis will face the camera. It supports multiple modes: camera parallel, or rotation around the local Y axis. This type inherits the following: niNode , niAVObject , niObjectNET , niObject","title":"niBillboardNode"},{"location":"types/niBillboardNode/#properties","text":"","title":"Properties"},{"location":"types/niBillboardNode/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niBillboardNode/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niBillboardNode/#children","text":"Read-only . The children of the node. Can have nil entries. Returns : result ( niAVObject [])","title":"children"},{"location":"types/niBillboardNode/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niBillboardNode/#effectlist","text":"Read-only . The effect list of the node. Attached effects affect the node and all of its child subtree geometry. Returns : result ( niDynamicEffectLinkedList )","title":"effectList"},{"location":"types/niBillboardNode/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niBillboardNode/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niBillboardNode/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niBillboardNode/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niBillboardNode/#mode","text":"The orientation mode. Maps to values in ni.billboardMode table. 0 Always face camera. Local z-axis becomes parallel to the camera. Minimizes rotation difference from the previous frame for smoother motion. 1 Rotate about up vector. The object is rotated around its local y-axis so that its z-axis is pointing towards the camera. 2 Rigid face camera. Local z-axis becomes parallel to the camera. Does not depend on previous frame. Returns : result (integer)","title":"mode"},{"location":"types/niBillboardNode/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niBillboardNode/#parent","text":"Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niBillboardNode/#properties_1","text":"Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niBillboardNode/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niBillboardNode/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niBillboardNode/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niBillboardNode/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niBillboardNode/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niBillboardNode/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niBillboardNode/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niBillboardNode/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niBillboardNode/#velocity","text":"The object's local velocity. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/niBillboardNode/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niBillboardNode/#worldboundorigin","text":"The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 )","title":"worldBoundOrigin"},{"location":"types/niBillboardNode/#worldboundradius","text":"The radius of the object's bounds. Returns : result (number)","title":"worldBoundRadius"},{"location":"types/niBillboardNode/#worldtransform","text":"The object's transformations in the world space. Returns : result ( tes3transform )","title":"worldTransform"},{"location":"types/niBillboardNode/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil)","title":"zBufferProperty"},{"location":"types/niBillboardNode/#methods","text":"","title":"Methods"},{"location":"types/niBillboardNode/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niBillboardNode/#attachchild","text":"Attaches the child to the children list of the node. Doesn't check to see if the object is already in the child list. myObject : attachChild ( child , useFirstAvailable ) Parameters : child ( niAVObject ) useFirstAvailable (boolean): Default : false . Use the first available space in the list. If false appends the child at the end of the list.","title":"attachChild"},{"location":"types/niBillboardNode/#attacheffect","text":"Attaches a dynamic effect to the node. It will not attach the same effect twice. myObject : attachEffect ( effect ) Parameters : effect ( niDynamicEffect )","title":"attachEffect"},{"location":"types/niBillboardNode/#attachproperty","text":"Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niBillboardNode/#cleartransforms","text":"Resets the object's local transform. myObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niBillboardNode/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niBillboardNode/#createboundingbox","text":"Calculates and creates a bounding box for the object. The existing bounding box, if any, will not be used, a fresh one will always be calculated. local boundingBox = myObject : createBoundingBox () Returns : boundingBox ( tes3boundingBox ): The newly created bounding box.","title":"createBoundingBox"},{"location":"types/niBillboardNode/#detachalleffects","text":"Detaches all dynamic effect from the effect list of the node. myObject : detachAllEffects ()","title":"detachAllEffects"},{"location":"types/niBillboardNode/#detachallproperties","text":"Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty [])","title":"detachAllProperties"},{"location":"types/niBillboardNode/#detachchild","text":"Detaches the child from the children list of the node. Returns the detached child. local detachedChild = myObject : detachChild ( child ) Parameters : child ( niAVObject ) Returns : detachedChild ( niAVObject )","title":"detachChild"},{"location":"types/niBillboardNode/#detachchildat","text":"Detaches the child at the specified index from the children list of the node. Returns the detached child. local detachedChild = myObject : detachChildAt ( index ) Parameters : index (integer) Returns : detachedChild ( niAVObject )","title":"detachChildAt"},{"location":"types/niBillboardNode/#detacheffect","text":"Detaches the given dynamic effect from the effect list of the node, if it was present. Has no effect if the effect wasn't attached to the node. myObject : detachEffect ( effect ) Parameters : effect ( niDynamicEffect )","title":"detachEffect"},{"location":"types/niBillboardNode/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niBillboardNode/#geteffect","text":"Gets the effect of the given type. local effect = myObject : getEffect ( type ) Parameters : type (integer): Use the values from ni.dynamicEffectType table. Returns : effect ( niDynamicEffect , nil)","title":"getEffect"},{"location":"types/niBillboardNode/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niBillboardNode/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niBillboardNode/#getproperty","text":"Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niBillboardNode/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niBillboardNode/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niBillboardNode/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niBillboardNode/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niBillboardNode/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niBillboardNode/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niBillboardNode/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niBillboardNode/#propagatepositionchange","text":"Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"propagatePositionChange"},{"location":"types/niBillboardNode/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niBillboardNode/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niBillboardNode/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niBillboardNode/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niBillboardNode/#rotatetocamera","text":"Updates the world transform to point at a camera. Used automatically during rendering. This method is only needed when you need to get the world transform without rendering. myObject : rotateToCamera ( camera ) Parameters : camera ( niCamera )","title":"rotateToCamera"},{"location":"types/niBillboardNode/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niBillboardNode/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niBillboardNode/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"update"},{"location":"types/niBillboardNode/#updateeffects","text":"Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects ()","title":"updateEffects"},{"location":"types/niBillboardNode/#updateproperties","text":"Update all attached properties. myObject : updateProperties ()","title":"updateProperties"},{"location":"types/niBillboardNode/#functions","text":"","title":"Functions"},{"location":"types/niBillboardNode/#new","text":"Creates a new, empty niBillboardNode, with the mode set to rotate about the model-space up vector. local node = niBillboardNode . new () Returns : node ( niBillboardNode )","title":"new"},{"location":"types/niCamera/","text":"niCamera \u2693\ufe0e Object that represent a camera. Position and orientation is determined by parent properties. This enables the cameras to be attached to scene graph objects and follow them automatically, as they move. This type inherits the following: niAVObject , niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) cullingPlanes \u2693\ufe0e The culling planes of the camera: near, far, left, right, top, and bottom. Returns : result ( tes3vector4 []) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) lodAdjust \u2693\ufe0e The level-of-detail adjustment value for the camera. This value is used by NiLODNode objects to multiply the distance between the object whose LOD is being computed and the camera. A higher value will lower the LOD of the objects drawn by the camera. Returns : result (number) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) port \u2693\ufe0e The port on the backbuffer of the camera. Represents the rectangular portion of the rendering backbuffer to which the camera's view rectangle is drawn (purely 2D mapping). These values are called port settings. The ordering: X - left, Y - right, Z - top and W - bottom. All port settings must be in the unit interval [0, 1]. The left edge of the backbuffer is 0.0, the right edge is 1.0. The top edge of the backbuffer is 1.0, the bottom edge is 0.0. Returns : result ( tes3vector4 ) properties \u2693\ufe0e Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) renderer \u2693\ufe0e Read-only . The renderer of the camera. Returns : result (niRenderer) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) scene \u2693\ufe0e Read-only . The scene of the camera. Returns : result ( niNode ) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) velocity \u2693\ufe0e The object's local velocity. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) viewDistance \u2693\ufe0e The view distance of the camera. Returns : result (number) worldBoundOrigin \u2693\ufe0e The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 ) worldBoundRadius \u2693\ufe0e The radius of the object's bounds. Returns : result (number) worldDirection \u2693\ufe0e Defines the X-axis of the camera. Returns : result ( tes3vector3 ) worldRight \u2693\ufe0e Defines the Z-axis of the camera. Returns : result ( tes3vector3 ) worldToCamera \u2693\ufe0e The world-to-camera transform matrix in row-major order. Returns : result ( tes3matrix44 ) worldTransform \u2693\ufe0e The object's transformations in the world space. Returns : result ( tes3transform ) worldUp \u2693\ufe0e Defines the Y-axis of the camera. Returns : result ( tes3vector3 ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) attachProperty \u2693\ufe0e Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. myObject : clearTransforms () click \u2693\ufe0e This method renders the currently-attached scene graph to the active renderer. myObject : click ( something ) Parameters : something (boolean): Default : false . clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) detachAllProperties \u2693\ufe0e Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty []) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) propagatePositionChange \u2693\ufe0e Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? updateEffects \u2693\ufe0e Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. myObject : updateProperties () windowPointToRay \u2693\ufe0e Given a screen space position, calculates the world position and outlook direction. This can be useful when trying to find a reference under a UI element, such as the cusor. local origin , direction = myObject : windowPointToRay ( point ) Parameters : point ( tes3vector2 ): The screen position to calculate a world ray for. Screen space is measured as ([-screenWidth/2, screenWidth/2], [-screenHeight/2, screenHeight/2]) with up-right being positive and an origin at the center of the screen. Returns : origin ( tes3vector3 ): The world point that the given screen position looks out from. direction ( tes3vector3 ): The look direction of the camera from the given origin point. worldPointToScreenPoint \u2693\ufe0e Given a world coordinate position, calculates where that point relates to the screen space. local screenPosition = myObject : worldPointToScreenPoint ( point ) Parameters : point ( tes3vector3 ): The world position to calculate screen position for. Returns : screenPosition ( tes3vector2 ): The screen space position. Screen space is measured as ([-screenWidth/2, screenWidth/2], [-screenHeight/2, screenHeight/2]) with up-right being positive and an origin at the center of the screen.","title":"niCamera"},{"location":"types/niCamera/#nicamera","text":"Object that represent a camera. Position and orientation is determined by parent properties. This enables the cameras to be attached to scene graph objects and follow them automatically, as they move. This type inherits the following: niAVObject , niObjectNET , niObject","title":"niCamera"},{"location":"types/niCamera/#properties","text":"","title":"Properties"},{"location":"types/niCamera/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niCamera/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niCamera/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niCamera/#cullingplanes","text":"The culling planes of the camera: near, far, left, right, top, and bottom. Returns : result ( tes3vector4 [])","title":"cullingPlanes"},{"location":"types/niCamera/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niCamera/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niCamera/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niCamera/#lodadjust","text":"The level-of-detail adjustment value for the camera. This value is used by NiLODNode objects to multiply the distance between the object whose LOD is being computed and the camera. A higher value will lower the LOD of the objects drawn by the camera. Returns : result (number)","title":"lodAdjust"},{"location":"types/niCamera/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niCamera/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niCamera/#parent","text":"Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niCamera/#port","text":"The port on the backbuffer of the camera. Represents the rectangular portion of the rendering backbuffer to which the camera's view rectangle is drawn (purely 2D mapping). These values are called port settings. The ordering: X - left, Y - right, Z - top and W - bottom. All port settings must be in the unit interval [0, 1]. The left edge of the backbuffer is 0.0, the right edge is 1.0. The top edge of the backbuffer is 1.0, the bottom edge is 0.0. Returns : result ( tes3vector4 )","title":"port"},{"location":"types/niCamera/#properties_1","text":"Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niCamera/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niCamera/#renderer","text":"Read-only . The renderer of the camera. Returns : result (niRenderer)","title":"renderer"},{"location":"types/niCamera/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niCamera/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niCamera/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niCamera/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niCamera/#scene","text":"Read-only . The scene of the camera. Returns : result ( niNode )","title":"scene"},{"location":"types/niCamera/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niCamera/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niCamera/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niCamera/#velocity","text":"The object's local velocity. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/niCamera/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niCamera/#viewdistance","text":"The view distance of the camera. Returns : result (number)","title":"viewDistance"},{"location":"types/niCamera/#worldboundorigin","text":"The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 )","title":"worldBoundOrigin"},{"location":"types/niCamera/#worldboundradius","text":"The radius of the object's bounds. Returns : result (number)","title":"worldBoundRadius"},{"location":"types/niCamera/#worlddirection","text":"Defines the X-axis of the camera. Returns : result ( tes3vector3 )","title":"worldDirection"},{"location":"types/niCamera/#worldright","text":"Defines the Z-axis of the camera. Returns : result ( tes3vector3 )","title":"worldRight"},{"location":"types/niCamera/#worldtocamera","text":"The world-to-camera transform matrix in row-major order. Returns : result ( tes3matrix44 )","title":"worldToCamera"},{"location":"types/niCamera/#worldtransform","text":"The object's transformations in the world space. Returns : result ( tes3transform )","title":"worldTransform"},{"location":"types/niCamera/#worldup","text":"Defines the Y-axis of the camera. Returns : result ( tes3vector3 )","title":"worldUp"},{"location":"types/niCamera/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil)","title":"zBufferProperty"},{"location":"types/niCamera/#methods","text":"","title":"Methods"},{"location":"types/niCamera/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niCamera/#attachproperty","text":"Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niCamera/#cleartransforms","text":"Resets the object's local transform. myObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niCamera/#click","text":"This method renders the currently-attached scene graph to the active renderer. myObject : click ( something ) Parameters : something (boolean): Default : false .","title":"click"},{"location":"types/niCamera/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niCamera/#detachallproperties","text":"Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty [])","title":"detachAllProperties"},{"location":"types/niCamera/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niCamera/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niCamera/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niCamera/#getproperty","text":"Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niCamera/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niCamera/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niCamera/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niCamera/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niCamera/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niCamera/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niCamera/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niCamera/#propagatepositionchange","text":"Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"propagatePositionChange"},{"location":"types/niCamera/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niCamera/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niCamera/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niCamera/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niCamera/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niCamera/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niCamera/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"update"},{"location":"types/niCamera/#updateeffects","text":"Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects ()","title":"updateEffects"},{"location":"types/niCamera/#updateproperties","text":"Update all attached properties. myObject : updateProperties ()","title":"updateProperties"},{"location":"types/niCamera/#windowpointtoray","text":"Given a screen space position, calculates the world position and outlook direction. This can be useful when trying to find a reference under a UI element, such as the cusor. local origin , direction = myObject : windowPointToRay ( point ) Parameters : point ( tes3vector2 ): The screen position to calculate a world ray for. Screen space is measured as ([-screenWidth/2, screenWidth/2], [-screenHeight/2, screenHeight/2]) with up-right being positive and an origin at the center of the screen. Returns : origin ( tes3vector3 ): The world point that the given screen position looks out from. direction ( tes3vector3 ): The look direction of the camera from the given origin point.","title":"windowPointToRay"},{"location":"types/niCamera/#worldpointtoscreenpoint","text":"Given a world coordinate position, calculates where that point relates to the screen space. local screenPosition = myObject : worldPointToScreenPoint ( point ) Parameters : point ( tes3vector3 ): The world position to calculate screen position for. Returns : screenPosition ( tes3vector2 ): The screen space position. Screen space is measured as ([-screenWidth/2, screenWidth/2], [-screenHeight/2, screenHeight/2]) with up-right being positive and an origin at the center of the screen.","title":"worldPointToScreenPoint"},{"location":"types/niCollisionGroup/","text":"niCollisionGroup \u2693\ufe0e Warning This part of the API isn't fully understood yet and thus is considered experimental. That means that there can be breaking changes requiring the code using this part of the API to be rewritten. The MWSE team will not make any effort to keep backward compatibility with the mods using experimental APIs. Collision Basics: \u2693\ufe0e Collidion detection means the detecting of the intersection of two objects. The collision detection is split in narrow and broad phase. The during narrow phase the actuall collision intersection test are done. The broad phase it is determined if two object should be tested for a potential collision. For example, there is no need to check for collision between two static, non-movable objects. The niCollisionGroup class is used to group the object into two main groups, based on whether the objects move or not: colliders - The objects that are expected to move. Each time the collision system starts finding collisions, it checks for collisions between each of the colliders. It tests every collider against every collidee as well. collidees - The objects that don't move. These objects are never tested for collision agains other collidees, making them less computationally expensive. Properties \u2693\ufe0e collidees \u2693\ufe0e Read-only . The array of collidee objects. Returns : result ( niCollisionGroupRecord []) colliders \u2693\ufe0e Read-only . The array of collider objects. Returns : result ( niCollisionGroupRecord [])","title":"niCollisionGroup"},{"location":"types/niCollisionGroup/#nicollisiongroup","text":"Warning This part of the API isn't fully understood yet and thus is considered experimental. That means that there can be breaking changes requiring the code using this part of the API to be rewritten. The MWSE team will not make any effort to keep backward compatibility with the mods using experimental APIs.","title":"niCollisionGroup"},{"location":"types/niCollisionGroup/#collision-basics","text":"Collidion detection means the detecting of the intersection of two objects. The collision detection is split in narrow and broad phase. The during narrow phase the actuall collision intersection test are done. The broad phase it is determined if two object should be tested for a potential collision. For example, there is no need to check for collision between two static, non-movable objects. The niCollisionGroup class is used to group the object into two main groups, based on whether the objects move or not: colliders - The objects that are expected to move. Each time the collision system starts finding collisions, it checks for collisions between each of the colliders. It tests every collider against every collidee as well. collidees - The objects that don't move. These objects are never tested for collision agains other collidees, making them less computationally expensive.","title":"Collision Basics:"},{"location":"types/niCollisionGroup/#properties","text":"","title":"Properties"},{"location":"types/niCollisionGroup/#collidees","text":"Read-only . The array of collidee objects. Returns : result ( niCollisionGroupRecord [])","title":"collidees"},{"location":"types/niCollisionGroup/#colliders","text":"Read-only . The array of collider objects. Returns : result ( niCollisionGroupRecord [])","title":"colliders"},{"location":"types/niCollisionGroupRecord/","text":"niCollisionGroupRecord \u2693\ufe0e Warning This part of the API isn't fully understood yet and thus is considered experimental. That means that there can be breaking changes requiring the code using this part of the API to be rewritten. The MWSE team will not make any effort to keep backward compatibility with the mods using experimental APIs. This class is used to store the niAVObject derived object for collision detection in the parent niCollisionGroup collider and collidee arrays. Properties \u2693\ufe0e collisionRoot \u2693\ufe0e Read-only . This is the ancestor root node added to the parent niCollisionGroup, whose child is the related .object . Returns : result ( niAVObject ) object \u2693\ufe0e Read-only . Access to the actual scene graph object this niCollisionGroupRecord represents. Returns : result ( niAVObject )","title":"niCollisionGroupRecord"},{"location":"types/niCollisionGroupRecord/#nicollisiongrouprecord","text":"Warning This part of the API isn't fully understood yet and thus is considered experimental. That means that there can be breaking changes requiring the code using this part of the API to be rewritten. The MWSE team will not make any effort to keep backward compatibility with the mods using experimental APIs. This class is used to store the niAVObject derived object for collision detection in the parent niCollisionGroup collider and collidee arrays.","title":"niCollisionGroupRecord"},{"location":"types/niCollisionGroupRecord/#properties","text":"","title":"Properties"},{"location":"types/niCollisionGroupRecord/#collisionroot","text":"Read-only . This is the ancestor root node added to the parent niCollisionGroup, whose child is the related .object . Returns : result ( niAVObject )","title":"collisionRoot"},{"location":"types/niCollisionGroupRecord/#object","text":"Read-only . Access to the actual scene graph object this niCollisionGroupRecord represents. Returns : result ( niAVObject )","title":"object"},{"location":"types/niCollisionSwitch/","text":"niCollisionSwitch \u2693\ufe0e An object that specifies if the collision system is enabled. This type inherits the following: niNode , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) children \u2693\ufe0e Read-only . The children of the node. Can have nil entries. Returns : result ( niAVObject []) collisionActive \u2693\ufe0e The enabled state of collision on the collision switch. Returns : result (boolean) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) effectList \u2693\ufe0e Read-only . The effect list of the node. Attached effects affect the node and all of its child subtree geometry. Returns : result ( niDynamicEffectLinkedList ) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) velocity \u2693\ufe0e The object's local velocity. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) worldBoundOrigin \u2693\ufe0e The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 ) worldBoundRadius \u2693\ufe0e The radius of the object's bounds. Returns : result (number) worldTransform \u2693\ufe0e The object's transformations in the world space. Returns : result ( tes3transform ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) attachChild \u2693\ufe0e Attaches the child to the children list of the node. Doesn't check to see if the object is already in the child list. myObject : attachChild ( child , useFirstAvailable ) Parameters : child ( niAVObject ) useFirstAvailable (boolean): Default : false . Use the first available space in the list. If false appends the child at the end of the list. attachEffect \u2693\ufe0e Attaches a dynamic effect to the node. It will not attach the same effect twice. myObject : attachEffect ( effect ) Parameters : effect ( niDynamicEffect ) attachProperty \u2693\ufe0e Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. myObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) createBoundingBox \u2693\ufe0e Calculates and creates a bounding box for the object. The existing bounding box, if any, will not be used, a fresh one will always be calculated. local boundingBox = myObject : createBoundingBox () Returns : boundingBox ( tes3boundingBox ): The newly created bounding box. detachAllEffects \u2693\ufe0e Detaches all dynamic effect from the effect list of the node. myObject : detachAllEffects () detachAllProperties \u2693\ufe0e Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty []) detachChild \u2693\ufe0e Detaches the child from the children list of the node. Returns the detached child. local detachedChild = myObject : detachChild ( child ) Parameters : child ( niAVObject ) Returns : detachedChild ( niAVObject ) detachChildAt \u2693\ufe0e Detaches the child at the specified index from the children list of the node. Returns the detached child. local detachedChild = myObject : detachChildAt ( index ) Parameters : index (integer) Returns : detachedChild ( niAVObject ) detachEffect \u2693\ufe0e Detaches the given dynamic effect from the effect list of the node, if it was present. Has no effect if the effect wasn't attached to the node. myObject : detachEffect ( effect ) Parameters : effect ( niDynamicEffect ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getEffect \u2693\ufe0e Gets the effect of the given type. local effect = myObject : getEffect ( type ) Parameters : type (integer): Use the values from ni.dynamicEffectType table. Returns : effect ( niDynamicEffect , nil) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) propagatePositionChange \u2693\ufe0e Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? updateEffects \u2693\ufe0e Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. myObject : updateProperties () Functions \u2693\ufe0e new \u2693\ufe0e Creates a new niCollisionSwitch. local new = niCollisionSwitch . new () Returns : new ( niCollisionSwitch )","title":"niCollisionSwitch"},{"location":"types/niCollisionSwitch/#nicollisionswitch","text":"An object that specifies if the collision system is enabled. This type inherits the following: niNode , niAVObject , niObjectNET , niObject","title":"niCollisionSwitch"},{"location":"types/niCollisionSwitch/#properties","text":"","title":"Properties"},{"location":"types/niCollisionSwitch/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niCollisionSwitch/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niCollisionSwitch/#children","text":"Read-only . The children of the node. Can have nil entries. Returns : result ( niAVObject [])","title":"children"},{"location":"types/niCollisionSwitch/#collisionactive","text":"The enabled state of collision on the collision switch. Returns : result (boolean)","title":"collisionActive"},{"location":"types/niCollisionSwitch/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niCollisionSwitch/#effectlist","text":"Read-only . The effect list of the node. Attached effects affect the node and all of its child subtree geometry. Returns : result ( niDynamicEffectLinkedList )","title":"effectList"},{"location":"types/niCollisionSwitch/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niCollisionSwitch/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niCollisionSwitch/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niCollisionSwitch/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niCollisionSwitch/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niCollisionSwitch/#parent","text":"Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niCollisionSwitch/#properties_1","text":"Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niCollisionSwitch/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niCollisionSwitch/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niCollisionSwitch/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niCollisionSwitch/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niCollisionSwitch/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niCollisionSwitch/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niCollisionSwitch/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niCollisionSwitch/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niCollisionSwitch/#velocity","text":"The object's local velocity. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/niCollisionSwitch/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niCollisionSwitch/#worldboundorigin","text":"The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 )","title":"worldBoundOrigin"},{"location":"types/niCollisionSwitch/#worldboundradius","text":"The radius of the object's bounds. Returns : result (number)","title":"worldBoundRadius"},{"location":"types/niCollisionSwitch/#worldtransform","text":"The object's transformations in the world space. Returns : result ( tes3transform )","title":"worldTransform"},{"location":"types/niCollisionSwitch/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil)","title":"zBufferProperty"},{"location":"types/niCollisionSwitch/#methods","text":"","title":"Methods"},{"location":"types/niCollisionSwitch/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niCollisionSwitch/#attachchild","text":"Attaches the child to the children list of the node. Doesn't check to see if the object is already in the child list. myObject : attachChild ( child , useFirstAvailable ) Parameters : child ( niAVObject ) useFirstAvailable (boolean): Default : false . Use the first available space in the list. If false appends the child at the end of the list.","title":"attachChild"},{"location":"types/niCollisionSwitch/#attacheffect","text":"Attaches a dynamic effect to the node. It will not attach the same effect twice. myObject : attachEffect ( effect ) Parameters : effect ( niDynamicEffect )","title":"attachEffect"},{"location":"types/niCollisionSwitch/#attachproperty","text":"Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niCollisionSwitch/#cleartransforms","text":"Resets the object's local transform. myObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niCollisionSwitch/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niCollisionSwitch/#createboundingbox","text":"Calculates and creates a bounding box for the object. The existing bounding box, if any, will not be used, a fresh one will always be calculated. local boundingBox = myObject : createBoundingBox () Returns : boundingBox ( tes3boundingBox ): The newly created bounding box.","title":"createBoundingBox"},{"location":"types/niCollisionSwitch/#detachalleffects","text":"Detaches all dynamic effect from the effect list of the node. myObject : detachAllEffects ()","title":"detachAllEffects"},{"location":"types/niCollisionSwitch/#detachallproperties","text":"Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty [])","title":"detachAllProperties"},{"location":"types/niCollisionSwitch/#detachchild","text":"Detaches the child from the children list of the node. Returns the detached child. local detachedChild = myObject : detachChild ( child ) Parameters : child ( niAVObject ) Returns : detachedChild ( niAVObject )","title":"detachChild"},{"location":"types/niCollisionSwitch/#detachchildat","text":"Detaches the child at the specified index from the children list of the node. Returns the detached child. local detachedChild = myObject : detachChildAt ( index ) Parameters : index (integer) Returns : detachedChild ( niAVObject )","title":"detachChildAt"},{"location":"types/niCollisionSwitch/#detacheffect","text":"Detaches the given dynamic effect from the effect list of the node, if it was present. Has no effect if the effect wasn't attached to the node. myObject : detachEffect ( effect ) Parameters : effect ( niDynamicEffect )","title":"detachEffect"},{"location":"types/niCollisionSwitch/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niCollisionSwitch/#geteffect","text":"Gets the effect of the given type. local effect = myObject : getEffect ( type ) Parameters : type (integer): Use the values from ni.dynamicEffectType table. Returns : effect ( niDynamicEffect , nil)","title":"getEffect"},{"location":"types/niCollisionSwitch/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niCollisionSwitch/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niCollisionSwitch/#getproperty","text":"Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niCollisionSwitch/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niCollisionSwitch/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niCollisionSwitch/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niCollisionSwitch/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niCollisionSwitch/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niCollisionSwitch/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niCollisionSwitch/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niCollisionSwitch/#propagatepositionchange","text":"Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"propagatePositionChange"},{"location":"types/niCollisionSwitch/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niCollisionSwitch/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niCollisionSwitch/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niCollisionSwitch/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niCollisionSwitch/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niCollisionSwitch/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niCollisionSwitch/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"update"},{"location":"types/niCollisionSwitch/#updateeffects","text":"Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects ()","title":"updateEffects"},{"location":"types/niCollisionSwitch/#updateproperties","text":"Update all attached properties. myObject : updateProperties ()","title":"updateProperties"},{"location":"types/niCollisionSwitch/#functions","text":"","title":"Functions"},{"location":"types/niCollisionSwitch/#new","text":"Creates a new niCollisionSwitch. local new = niCollisionSwitch . new () Returns : new ( niCollisionSwitch )","title":"new"},{"location":"types/niColor/","text":"niColor \u2693\ufe0e An object that represents a RGB color. The values are in [0.0, 1.0] range. Properties \u2693\ufe0e b \u2693\ufe0e The blue value of the color. Returns : result (number) blue \u2693\ufe0e Alias for the blue value of the color. Returns : result (number) g \u2693\ufe0e The green value of the color. Returns : result (number) green \u2693\ufe0e Alias for the green value of the color. Returns : result (number) r \u2693\ufe0e The red value of the color. Returns : result (number) red \u2693\ufe0e Alias for the red value of the color. Returns : result (number) Methods \u2693\ufe0e clamp \u2693\ufe0e Clamps the color object to [0.0, 1.0] range. myObject : clamp () copy \u2693\ufe0e Creates a copy of the color object. local result = myObject : copy () Returns : result ( niColor ) lerp \u2693\ufe0e Calculates the interpolated color between this color and another, given a transition. local lerpedcolor = myObject : lerp ( tocolor , transition ) Parameters : tocolor ( niColor ): The color to interpolate towards. transition (number): The interpolation value. Must be between 0.0 (closer to this color) and 1.0 (closer to the other color). Returns : lerpedcolor ( niColor ): The calculated value. toVector3 \u2693\ufe0e Creates a vector3 of the color object. local result = myObject : toVector3 () Returns : result ( tes3vector3 ) Functions \u2693\ufe0e new \u2693\ufe0e Creates a new niColor. local color = niColor . new ( r , g , b ) Parameters : r (number): Default : 0 . The red value for the color. g (number): Default : 0 . The green value for the color. b (number): Default : 0 . The blue value for the color. Returns : color ( niColor ) Math Operations \u2693\ufe0e Addition ( + ) \u2693\ufe0e Left operand type Right operand type Result type Description niColor niColor niColor Adds the color channel values of two niColor objects. Multiplication ( * ) \u2693\ufe0e Left operand type Right operand type Result type Description niColor niColor niColor Multiplies color channel values. niColor number niColor Multiplies each color value with a scalar. Subtraction ( - ) \u2693\ufe0e Left operand type Right operand type Result type Description niColor niColor niColor Subtracts the color channel values.","title":"niColor"},{"location":"types/niColor/#nicolor","text":"An object that represents a RGB color. The values are in [0.0, 1.0] range.","title":"niColor"},{"location":"types/niColor/#properties","text":"","title":"Properties"},{"location":"types/niColor/#b","text":"The blue value of the color. Returns : result (number)","title":"b"},{"location":"types/niColor/#blue","text":"Alias for the blue value of the color. Returns : result (number)","title":"blue"},{"location":"types/niColor/#g","text":"The green value of the color. Returns : result (number)","title":"g"},{"location":"types/niColor/#green","text":"Alias for the green value of the color. Returns : result (number)","title":"green"},{"location":"types/niColor/#r","text":"The red value of the color. Returns : result (number)","title":"r"},{"location":"types/niColor/#red","text":"Alias for the red value of the color. Returns : result (number)","title":"red"},{"location":"types/niColor/#methods","text":"","title":"Methods"},{"location":"types/niColor/#clamp","text":"Clamps the color object to [0.0, 1.0] range. myObject : clamp ()","title":"clamp"},{"location":"types/niColor/#copy","text":"Creates a copy of the color object. local result = myObject : copy () Returns : result ( niColor )","title":"copy"},{"location":"types/niColor/#lerp","text":"Calculates the interpolated color between this color and another, given a transition. local lerpedcolor = myObject : lerp ( tocolor , transition ) Parameters : tocolor ( niColor ): The color to interpolate towards. transition (number): The interpolation value. Must be between 0.0 (closer to this color) and 1.0 (closer to the other color). Returns : lerpedcolor ( niColor ): The calculated value.","title":"lerp"},{"location":"types/niColor/#tovector3","text":"Creates a vector3 of the color object. local result = myObject : toVector3 () Returns : result ( tes3vector3 )","title":"toVector3"},{"location":"types/niColor/#functions","text":"","title":"Functions"},{"location":"types/niColor/#new","text":"Creates a new niColor. local color = niColor . new ( r , g , b ) Parameters : r (number): Default : 0 . The red value for the color. g (number): Default : 0 . The green value for the color. b (number): Default : 0 . The blue value for the color. Returns : color ( niColor )","title":"new"},{"location":"types/niColor/#math-operations","text":"","title":"Math Operations"},{"location":"types/niColor/#addition","text":"Left operand type Right operand type Result type Description niColor niColor niColor Adds the color channel values of two niColor objects.","title":"Addition (+)"},{"location":"types/niColor/#multiplication","text":"Left operand type Right operand type Result type Description niColor niColor niColor Multiplies color channel values. niColor number niColor Multiplies each color value with a scalar.","title":"Multiplication (*)"},{"location":"types/niColor/#subtraction-","text":"Left operand type Right operand type Result type Description niColor niColor niColor Subtracts the color channel values.","title":"Subtraction (-)"},{"location":"types/niColorA/","text":"niColorA \u2693\ufe0e An object that represents a RGB color with alpha channel support. The values are in [0.0, 1.0] range. Properties \u2693\ufe0e a \u2693\ufe0e The alpha value of the color. Returns : result (number) alpha \u2693\ufe0e The alpha value of the color. Returns : result (number) b \u2693\ufe0e The blue value of the color. Returns : result (number) blue \u2693\ufe0e Alias for the blue value of the color. Returns : result (number) g \u2693\ufe0e The green value of the color. Returns : result (number) green \u2693\ufe0e Alias for the green value of the color. Returns : result (number) r \u2693\ufe0e The red value of the color. Returns : result (number) red \u2693\ufe0e Alias for the red value of the color. Returns : result (number) Methods \u2693\ufe0e copy \u2693\ufe0e Creates a copy of the color object. local result = myObject : copy () Returns : result ( niColorA ) lerp \u2693\ufe0e Calculates the interpolated color between this color and another, given a transition. local lerpedcolor = myObject : lerp ( tocolor , transition ) Parameters : tocolor ( niColorA ): The color to interpolate towards. transition (number): The interpolation value. Must be between 0.0 (closer to this color) and 1.0 (closer to the other color). Returns : lerpedcolor ( niColorA ): The calculated value. Functions \u2693\ufe0e new \u2693\ufe0e Creates a new niColorA. local color = niColorA . new ( r , g , b , a ) Parameters : r (number): Default : 0 . The red value for the color. g (number): Default : 0 . The green value for the color. b (number): Default : 0 . The blue value for the color. a (number): Default : 0 . The alpha value for the color. Returns : color ( niColorA )","title":"niColorA"},{"location":"types/niColorA/#nicolora","text":"An object that represents a RGB color with alpha channel support. The values are in [0.0, 1.0] range.","title":"niColorA"},{"location":"types/niColorA/#properties","text":"","title":"Properties"},{"location":"types/niColorA/#a","text":"The alpha value of the color. Returns : result (number)","title":"a"},{"location":"types/niColorA/#alpha","text":"The alpha value of the color. Returns : result (number)","title":"alpha"},{"location":"types/niColorA/#b","text":"The blue value of the color. Returns : result (number)","title":"b"},{"location":"types/niColorA/#blue","text":"Alias for the blue value of the color. Returns : result (number)","title":"blue"},{"location":"types/niColorA/#g","text":"The green value of the color. Returns : result (number)","title":"g"},{"location":"types/niColorA/#green","text":"Alias for the green value of the color. Returns : result (number)","title":"green"},{"location":"types/niColorA/#r","text":"The red value of the color. Returns : result (number)","title":"r"},{"location":"types/niColorA/#red","text":"Alias for the red value of the color. Returns : result (number)","title":"red"},{"location":"types/niColorA/#methods","text":"","title":"Methods"},{"location":"types/niColorA/#copy","text":"Creates a copy of the color object. local result = myObject : copy () Returns : result ( niColorA )","title":"copy"},{"location":"types/niColorA/#lerp","text":"Calculates the interpolated color between this color and another, given a transition. local lerpedcolor = myObject : lerp ( tocolor , transition ) Parameters : tocolor ( niColorA ): The color to interpolate towards. transition (number): The interpolation value. Must be between 0.0 (closer to this color) and 1.0 (closer to the other color). Returns : lerpedcolor ( niColorA ): The calculated value.","title":"lerp"},{"location":"types/niColorA/#functions","text":"","title":"Functions"},{"location":"types/niColorA/#new","text":"Creates a new niColorA. local color = niColorA . new ( r , g , b , a ) Parameters : r (number): Default : 0 . The red value for the color. g (number): Default : 0 . The green value for the color. b (number): Default : 0 . The blue value for the color. a (number): Default : 0 . The alpha value for the color. Returns : color ( niColorA )","title":"new"},{"location":"types/niColorData/","text":"niColorData \u2693\ufe0e The NiColorData class provides a shareable wrapper for color animation data. Usually found in niParticleColorModifiers. This type inherits the following: niObject Properties \u2693\ufe0e keyCount \u2693\ufe0e The number of keys in this niColorData. Returns : result (integer) keys \u2693\ufe0e Read-only . The keyframe data that this object currently stores. Returns : result ( niColorKey []) keyType \u2693\ufe0e The type of the keys. Maps to values in ni.animationKeyType table. Returns : result (integer) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"niColorData"},{"location":"types/niColorData/#nicolordata","text":"The NiColorData class provides a shareable wrapper for color animation data. Usually found in niParticleColorModifiers. This type inherits the following: niObject","title":"niColorData"},{"location":"types/niColorData/#properties","text":"","title":"Properties"},{"location":"types/niColorData/#keycount","text":"The number of keys in this niColorData. Returns : result (integer)","title":"keyCount"},{"location":"types/niColorData/#keys","text":"Read-only . The keyframe data that this object currently stores. Returns : result ( niColorKey [])","title":"keys"},{"location":"types/niColorData/#keytype","text":"The type of the keys. Maps to values in ni.animationKeyType table. Returns : result (integer)","title":"keyType"},{"location":"types/niColorData/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niColorData/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niColorData/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niColorData/#methods","text":"","title":"Methods"},{"location":"types/niColorData/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niColorData/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niColorData/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niColorData/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niColorKey/","text":"niColorKey \u2693\ufe0e A key with timing, and color in niColorData, which are found in niParticleColorModifiers. This type inherits the following: niAnimationKey Properties \u2693\ufe0e color \u2693\ufe0e The color for this key. Returns : result ( niPackedColor ) timing \u2693\ufe0e The timing of the animation key. Returns : result (number)","title":"niColorKey"},{"location":"types/niColorKey/#nicolorkey","text":"A key with timing, and color in niColorData, which are found in niParticleColorModifiers. This type inherits the following: niAnimationKey","title":"niColorKey"},{"location":"types/niColorKey/#properties","text":"","title":"Properties"},{"location":"types/niColorKey/#color","text":"The color for this key. Returns : result ( niPackedColor )","title":"color"},{"location":"types/niColorKey/#timing","text":"The timing of the animation key. Returns : result (number)","title":"timing"},{"location":"types/niDirectionalLight/","text":"niDirectionalLight \u2693\ufe0e An object that represents a light source located at infinity with parallel light rays traveling in a given direction. The light will project illumination in its model-space positive X axis. The light may be pointed in any direction by rotating the light. This type inherits the following: niLight , niDynamicEffect , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e affectedNodes \u2693\ufe0e The list of nodes that a given dynamic effect will affect. Returns : result ( niNodeLinkedList ) alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) ambient \u2693\ufe0e The ambient light color. Returns : result ( niColor ) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) diffuse \u2693\ufe0e The diffuse light color. Returns : result ( niColor ) dimmer \u2693\ufe0e This flag scales the overall brightness of all light components. This value must be nonnegative. It is usually less than or equal to 1.0 (although advanced lighting effects may use larger values). Returns : result (number) direction \u2693\ufe0e The direction of the directional light. Returns : result ( tes3vector3 ) enabled \u2693\ufe0e The enabled state of a given dynamic effect. Returns : result (boolean) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) specular \u2693\ufe0e This property was inteded to be specular light color in NetImmerse, but in Morrowind it represents the dynamic culling radius. All the color channels are equal to the radius. In practice, this radius represents the light's influence radius. Returns : result ( niColor ) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) type \u2693\ufe0e Read-only . The enumerated type of a given dynamic effect. Maps to values in ni.dynamicEffectType table. Returns : result (integer) velocity \u2693\ufe0e The object's local velocity. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) worldBoundOrigin \u2693\ufe0e The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 ) worldBoundRadius \u2693\ufe0e The radius of the object's bounds. Returns : result (number) worldTransform \u2693\ufe0e The object's transformations in the world space. Returns : result ( tes3transform ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) attachAffectedNode \u2693\ufe0e Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list. attachProperty \u2693\ufe0e Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. myObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) detachAffectedNode \u2693\ufe0e Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list. detachAllProperties \u2693\ufe0e Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty []) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) propagatePositionChange \u2693\ufe0e Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? updateEffects \u2693\ufe0e Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. myObject : updateProperties ()","title":"niDirectionalLight"},{"location":"types/niDirectionalLight/#nidirectionallight","text":"An object that represents a light source located at infinity with parallel light rays traveling in a given direction. The light will project illumination in its model-space positive X axis. The light may be pointed in any direction by rotating the light. This type inherits the following: niLight , niDynamicEffect , niAVObject , niObjectNET , niObject","title":"niDirectionalLight"},{"location":"types/niDirectionalLight/#properties","text":"","title":"Properties"},{"location":"types/niDirectionalLight/#affectednodes","text":"The list of nodes that a given dynamic effect will affect. Returns : result ( niNodeLinkedList )","title":"affectedNodes"},{"location":"types/niDirectionalLight/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niDirectionalLight/#ambient","text":"The ambient light color. Returns : result ( niColor )","title":"ambient"},{"location":"types/niDirectionalLight/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niDirectionalLight/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niDirectionalLight/#diffuse","text":"The diffuse light color. Returns : result ( niColor )","title":"diffuse"},{"location":"types/niDirectionalLight/#dimmer","text":"This flag scales the overall brightness of all light components. This value must be nonnegative. It is usually less than or equal to 1.0 (although advanced lighting effects may use larger values). Returns : result (number)","title":"dimmer"},{"location":"types/niDirectionalLight/#direction","text":"The direction of the directional light. Returns : result ( tes3vector3 )","title":"direction"},{"location":"types/niDirectionalLight/#enabled","text":"The enabled state of a given dynamic effect. Returns : result (boolean)","title":"enabled"},{"location":"types/niDirectionalLight/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niDirectionalLight/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niDirectionalLight/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niDirectionalLight/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niDirectionalLight/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niDirectionalLight/#parent","text":"Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niDirectionalLight/#properties_1","text":"Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niDirectionalLight/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niDirectionalLight/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niDirectionalLight/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niDirectionalLight/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niDirectionalLight/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niDirectionalLight/#specular","text":"This property was inteded to be specular light color in NetImmerse, but in Morrowind it represents the dynamic culling radius. All the color channels are equal to the radius. In practice, this radius represents the light's influence radius. Returns : result ( niColor )","title":"specular"},{"location":"types/niDirectionalLight/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niDirectionalLight/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niDirectionalLight/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niDirectionalLight/#type","text":"Read-only . The enumerated type of a given dynamic effect. Maps to values in ni.dynamicEffectType table. Returns : result (integer)","title":"type"},{"location":"types/niDirectionalLight/#velocity","text":"The object's local velocity. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/niDirectionalLight/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niDirectionalLight/#worldboundorigin","text":"The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 )","title":"worldBoundOrigin"},{"location":"types/niDirectionalLight/#worldboundradius","text":"The radius of the object's bounds. Returns : result (number)","title":"worldBoundRadius"},{"location":"types/niDirectionalLight/#worldtransform","text":"The object's transformations in the world space. Returns : result ( tes3transform )","title":"worldTransform"},{"location":"types/niDirectionalLight/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil)","title":"zBufferProperty"},{"location":"types/niDirectionalLight/#methods","text":"","title":"Methods"},{"location":"types/niDirectionalLight/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niDirectionalLight/#attachaffectednode","text":"Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list.","title":"attachAffectedNode"},{"location":"types/niDirectionalLight/#attachproperty","text":"Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niDirectionalLight/#cleartransforms","text":"Resets the object's local transform. myObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niDirectionalLight/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niDirectionalLight/#detachaffectednode","text":"Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"detachAffectedNode"},{"location":"types/niDirectionalLight/#detachallproperties","text":"Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty [])","title":"detachAllProperties"},{"location":"types/niDirectionalLight/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niDirectionalLight/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niDirectionalLight/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niDirectionalLight/#getproperty","text":"Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niDirectionalLight/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niDirectionalLight/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niDirectionalLight/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niDirectionalLight/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niDirectionalLight/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niDirectionalLight/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niDirectionalLight/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niDirectionalLight/#propagatepositionchange","text":"Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"propagatePositionChange"},{"location":"types/niDirectionalLight/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niDirectionalLight/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niDirectionalLight/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niDirectionalLight/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niDirectionalLight/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niDirectionalLight/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niDirectionalLight/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"update"},{"location":"types/niDirectionalLight/#updateeffects","text":"Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects ()","title":"updateEffects"},{"location":"types/niDirectionalLight/#updateproperties","text":"Update all attached properties. myObject : updateProperties ()","title":"updateProperties"},{"location":"types/niDynamicEffect/","text":"niDynamicEffect \u2693\ufe0e Base class for dynamic effects such as NiLights or projected textures effects. This type inherits the following: niAVObject , niObjectNET , niObject Properties \u2693\ufe0e affectedNodes \u2693\ufe0e The list of nodes that a given dynamic effect will affect. Returns : result ( niNodeLinkedList ) alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) enabled \u2693\ufe0e The enabled state of a given dynamic effect. Returns : result (boolean) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) type \u2693\ufe0e Read-only . The enumerated type of a given dynamic effect. Maps to values in ni.dynamicEffectType table. Returns : result (integer) velocity \u2693\ufe0e The object's local velocity. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) worldBoundOrigin \u2693\ufe0e The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 ) worldBoundRadius \u2693\ufe0e The radius of the object's bounds. Returns : result (number) worldTransform \u2693\ufe0e The object's transformations in the world space. Returns : result ( tes3transform ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) attachAffectedNode \u2693\ufe0e Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list. attachProperty \u2693\ufe0e Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. myObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) detachAffectedNode \u2693\ufe0e Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list. detachAllProperties \u2693\ufe0e Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty []) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) propagatePositionChange \u2693\ufe0e Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? updateEffects \u2693\ufe0e Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. myObject : updateProperties ()","title":"niDynamicEffect"},{"location":"types/niDynamicEffect/#nidynamiceffect","text":"Base class for dynamic effects such as NiLights or projected textures effects. This type inherits the following: niAVObject , niObjectNET , niObject","title":"niDynamicEffect"},{"location":"types/niDynamicEffect/#properties","text":"","title":"Properties"},{"location":"types/niDynamicEffect/#affectednodes","text":"The list of nodes that a given dynamic effect will affect. Returns : result ( niNodeLinkedList )","title":"affectedNodes"},{"location":"types/niDynamicEffect/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niDynamicEffect/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niDynamicEffect/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niDynamicEffect/#enabled","text":"The enabled state of a given dynamic effect. Returns : result (boolean)","title":"enabled"},{"location":"types/niDynamicEffect/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niDynamicEffect/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niDynamicEffect/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niDynamicEffect/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niDynamicEffect/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niDynamicEffect/#parent","text":"Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niDynamicEffect/#properties_1","text":"Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niDynamicEffect/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niDynamicEffect/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niDynamicEffect/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niDynamicEffect/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niDynamicEffect/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niDynamicEffect/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niDynamicEffect/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niDynamicEffect/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niDynamicEffect/#type","text":"Read-only . The enumerated type of a given dynamic effect. Maps to values in ni.dynamicEffectType table. Returns : result (integer)","title":"type"},{"location":"types/niDynamicEffect/#velocity","text":"The object's local velocity. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/niDynamicEffect/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niDynamicEffect/#worldboundorigin","text":"The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 )","title":"worldBoundOrigin"},{"location":"types/niDynamicEffect/#worldboundradius","text":"The radius of the object's bounds. Returns : result (number)","title":"worldBoundRadius"},{"location":"types/niDynamicEffect/#worldtransform","text":"The object's transformations in the world space. Returns : result ( tes3transform )","title":"worldTransform"},{"location":"types/niDynamicEffect/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil)","title":"zBufferProperty"},{"location":"types/niDynamicEffect/#methods","text":"","title":"Methods"},{"location":"types/niDynamicEffect/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niDynamicEffect/#attachaffectednode","text":"Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list.","title":"attachAffectedNode"},{"location":"types/niDynamicEffect/#attachproperty","text":"Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niDynamicEffect/#cleartransforms","text":"Resets the object's local transform. myObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niDynamicEffect/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niDynamicEffect/#detachaffectednode","text":"Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"detachAffectedNode"},{"location":"types/niDynamicEffect/#detachallproperties","text":"Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty [])","title":"detachAllProperties"},{"location":"types/niDynamicEffect/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niDynamicEffect/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niDynamicEffect/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niDynamicEffect/#getproperty","text":"Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niDynamicEffect/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niDynamicEffect/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niDynamicEffect/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niDynamicEffect/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niDynamicEffect/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niDynamicEffect/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niDynamicEffect/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niDynamicEffect/#propagatepositionchange","text":"Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"propagatePositionChange"},{"location":"types/niDynamicEffect/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niDynamicEffect/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niDynamicEffect/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niDynamicEffect/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niDynamicEffect/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niDynamicEffect/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niDynamicEffect/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"update"},{"location":"types/niDynamicEffect/#updateeffects","text":"Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects ()","title":"updateEffects"},{"location":"types/niDynamicEffect/#updateproperties","text":"Update all attached properties. myObject : updateProperties ()","title":"updateProperties"},{"location":"types/niDynamicEffectLinkedList/","text":"niDynamicEffectLinkedList \u2693\ufe0e A linked list of dynamic effects. Properties \u2693\ufe0e data \u2693\ufe0e Read-only . The current dynamic effect in the linked list. Returns : result ( niDynamicEffect ) next \u2693\ufe0e Read-only . The next dynamic effect in the linked list. Returns : result ( niDynamicEffectLinkedList )","title":"niDynamicEffectLinkedList"},{"location":"types/niDynamicEffectLinkedList/#nidynamiceffectlinkedlist","text":"A linked list of dynamic effects.","title":"niDynamicEffectLinkedList"},{"location":"types/niDynamicEffectLinkedList/#properties","text":"","title":"Properties"},{"location":"types/niDynamicEffectLinkedList/#data","text":"Read-only . The current dynamic effect in the linked list. Returns : result ( niDynamicEffect )","title":"data"},{"location":"types/niDynamicEffectLinkedList/#next","text":"Read-only . The next dynamic effect in the linked list. Returns : result ( niDynamicEffectLinkedList )","title":"next"},{"location":"types/niEulerRotKey/","text":"niEulerRotKey \u2693\ufe0e An animation key for euler rotations. This type inherits the following: niRotKey , niAnimationKey Properties \u2693\ufe0e keyOrder \u2693\ufe0e Read-only . An array of 3 values that define the ordering used for the contained keys. Maps to values in ni.eulerRotKeyOrder table. Returns : result (integer[]) keys \u2693\ufe0e Read-only . A table of x/y/z rotation keys. Each value in the table is an array of animation keys, with a length matching numKeys . Because an axis key can be nil , use pairs instead of ipairs to iterate over this table. Returns : result (table<number, niFloatKey []>) keyTypes \u2693\ufe0e Read-only . An array of 3 values that define the types used for the contained keys. The types map to values in ni.animationKeyType table. Returns : result (integer[]) lastIndices \u2693\ufe0e Read-only . An array of 3 values that define the last indices used for each key. Returns : result (integer[]) numKeys \u2693\ufe0e Read-only . An array of 3 values that define the number of keys in each xRotations/yRotations/zRotations. Returns : result (integer[]) timing \u2693\ufe0e The timing of the animation key. Returns : result (number) value \u2693\ufe0e The rotation value of the animation key. Returns : result ( niQuaternion )","title":"niEulerRotKey"},{"location":"types/niEulerRotKey/#nieulerrotkey","text":"An animation key for euler rotations. This type inherits the following: niRotKey , niAnimationKey","title":"niEulerRotKey"},{"location":"types/niEulerRotKey/#properties","text":"","title":"Properties"},{"location":"types/niEulerRotKey/#keyorder","text":"Read-only . An array of 3 values that define the ordering used for the contained keys. Maps to values in ni.eulerRotKeyOrder table. Returns : result (integer[])","title":"keyOrder"},{"location":"types/niEulerRotKey/#keys","text":"Read-only . A table of x/y/z rotation keys. Each value in the table is an array of animation keys, with a length matching numKeys . Because an axis key can be nil , use pairs instead of ipairs to iterate over this table. Returns : result (table<number, niFloatKey []>)","title":"keys"},{"location":"types/niEulerRotKey/#keytypes","text":"Read-only . An array of 3 values that define the types used for the contained keys. The types map to values in ni.animationKeyType table. Returns : result (integer[])","title":"keyTypes"},{"location":"types/niEulerRotKey/#lastindices","text":"Read-only . An array of 3 values that define the last indices used for each key. Returns : result (integer[])","title":"lastIndices"},{"location":"types/niEulerRotKey/#numkeys","text":"Read-only . An array of 3 values that define the number of keys in each xRotations/yRotations/zRotations. Returns : result (integer[])","title":"numKeys"},{"location":"types/niEulerRotKey/#timing","text":"The timing of the animation key. Returns : result (number)","title":"timing"},{"location":"types/niEulerRotKey/#value","text":"The rotation value of the animation key. Returns : result ( niQuaternion )","title":"value"},{"location":"types/niExtraData/","text":"niExtraData \u2693\ufe0e An attachment to NiObjectNETs that allows the storing of arbitrary data onto the given object. This type inherits the following: niObject Properties \u2693\ufe0e genericData \u2693\ufe0e Read-only . Generic data held in the extra data. This is not used if a subtype of extra data is used. Returns : result (number[]) next \u2693\ufe0e The next extra data available on the object. Returns : result ( niExtraData ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"niExtraData"},{"location":"types/niExtraData/#niextradata","text":"An attachment to NiObjectNETs that allows the storing of arbitrary data onto the given object. This type inherits the following: niObject","title":"niExtraData"},{"location":"types/niExtraData/#properties","text":"","title":"Properties"},{"location":"types/niExtraData/#genericdata","text":"Read-only . Generic data held in the extra data. This is not used if a subtype of extra data is used. Returns : result (number[])","title":"genericData"},{"location":"types/niExtraData/#next","text":"The next extra data available on the object. Returns : result ( niExtraData )","title":"next"},{"location":"types/niExtraData/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niExtraData/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niExtraData/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niExtraData/#methods","text":"","title":"Methods"},{"location":"types/niExtraData/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niExtraData/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niExtraData/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niExtraData/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niFloatKey/","text":"niFloatKey \u2693\ufe0e A simple animation key, that holds an arbitrary floating point value. This type inherits the following: niAnimationKey Properties \u2693\ufe0e timing \u2693\ufe0e The timing of the animation key. Returns : result (number) value \u2693\ufe0e The arbitrary value of the NiFloatKey. Returns : result (number)","title":"niFloatKey"},{"location":"types/niFloatKey/#nifloatkey","text":"A simple animation key, that holds an arbitrary floating point value. This type inherits the following: niAnimationKey","title":"niFloatKey"},{"location":"types/niFloatKey/#properties","text":"","title":"Properties"},{"location":"types/niFloatKey/#timing","text":"The timing of the animation key. Returns : result (number)","title":"timing"},{"location":"types/niFloatKey/#value","text":"The arbitrary value of the NiFloatKey. Returns : result (number)","title":"value"},{"location":"types/niFogProperty/","text":"niFogProperty \u2693\ufe0e A rendering property that controls the appearance of fogging, also known as haze. This type inherits the following: niProperty , niObjectNET , niObject Properties \u2693\ufe0e color \u2693\ufe0e Read-only . The RGBA fog color value in range [0, 255]. Returns : result (integer[]) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) density \u2693\ufe0e The fog density in normalized units [0.0, 1.0]. If set to 1.0, then the fogging begins at the near plane. If set to a value of 0.5, then fogging begins halfway between the near and far planes in world space. Returns : result (number) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) propertyFlags \u2693\ufe0e Returns : result (integer) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) type \u2693\ufe0e Read-only . The unique class identifier number of the given rendering property. The types are available in ni.propertyType table. Returns : result (integer) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"niFogProperty"},{"location":"types/niFogProperty/#nifogproperty","text":"A rendering property that controls the appearance of fogging, also known as haze. This type inherits the following: niProperty , niObjectNET , niObject","title":"niFogProperty"},{"location":"types/niFogProperty/#properties","text":"","title":"Properties"},{"location":"types/niFogProperty/#color","text":"Read-only . The RGBA fog color value in range [0, 255]. Returns : result (integer[])","title":"color"},{"location":"types/niFogProperty/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niFogProperty/#density","text":"The fog density in normalized units [0.0, 1.0]. If set to 1.0, then the fogging begins at the near plane. If set to a value of 0.5, then fogging begins halfway between the near and far planes in world space. Returns : result (number)","title":"density"},{"location":"types/niFogProperty/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niFogProperty/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niFogProperty/#propertyflags","text":"Returns : result (integer)","title":"propertyFlags"},{"location":"types/niFogProperty/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niFogProperty/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niFogProperty/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niFogProperty/#type","text":"Read-only . The unique class identifier number of the given rendering property. The types are available in ni.propertyType table. Returns : result (integer)","title":"type"},{"location":"types/niFogProperty/#methods","text":"","title":"Methods"},{"location":"types/niFogProperty/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niFogProperty/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niFogProperty/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niFogProperty/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niFogProperty/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niFogProperty/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niFogProperty/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niFogProperty/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niFogProperty/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niFogProperty/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niFogProperty/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niFogProperty/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niFogProperty/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niFogProperty/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niFogProperty/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niFogProperty/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niFormatPrefs/","text":"niFormatPrefs \u2693\ufe0e A class that represents a set of preferences for texture formats. These preferences dictate levels of pixel accuracy. Properties \u2693\ufe0e alphaLayout \u2693\ufe0e The Alpha format. Maps to values in ni.textureFormatPrefsAlphaFormat table. Returns : result (integer) mipLayout \u2693\ufe0e The MIP format. Maps to values in ni.textureFormatPrefsMipFlag table. Returns : result (integer) pixelLayout \u2693\ufe0e The pixel layout. Maps to values in ni.textureFormatPrefsPixelLayout table. Returns : result (integer)","title":"niFormatPrefs"},{"location":"types/niFormatPrefs/#niformatprefs","text":"A class that represents a set of preferences for texture formats. These preferences dictate levels of pixel accuracy.","title":"niFormatPrefs"},{"location":"types/niFormatPrefs/#properties","text":"","title":"Properties"},{"location":"types/niFormatPrefs/#alphalayout","text":"The Alpha format. Maps to values in ni.textureFormatPrefsAlphaFormat table. Returns : result (integer)","title":"alphaLayout"},{"location":"types/niFormatPrefs/#miplayout","text":"The MIP format. Maps to values in ni.textureFormatPrefsMipFlag table. Returns : result (integer)","title":"mipLayout"},{"location":"types/niFormatPrefs/#pixellayout","text":"The pixel layout. Maps to values in ni.textureFormatPrefsPixelLayout table. Returns : result (integer)","title":"pixelLayout"},{"location":"types/niGeometry/","text":"niGeometry \u2693\ufe0e Base class for most geometric objects. Includes basic vertex and normal management. This type inherits the following: niAVObject , niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) velocity \u2693\ufe0e The object's local velocity. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) worldBoundOrigin \u2693\ufe0e The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 ) worldBoundRadius \u2693\ufe0e The radius of the object's bounds. Returns : result (number) worldTransform \u2693\ufe0e The object's transformations in the world space. Returns : result ( tes3transform ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) attachProperty \u2693\ufe0e Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. myObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) detachAllProperties \u2693\ufe0e Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty []) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) propagatePositionChange \u2693\ufe0e Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? updateEffects \u2693\ufe0e Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. myObject : updateProperties ()","title":"niGeometry"},{"location":"types/niGeometry/#nigeometry","text":"Base class for most geometric objects. Includes basic vertex and normal management. This type inherits the following: niAVObject , niObjectNET , niObject","title":"niGeometry"},{"location":"types/niGeometry/#properties","text":"","title":"Properties"},{"location":"types/niGeometry/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niGeometry/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niGeometry/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niGeometry/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niGeometry/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niGeometry/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niGeometry/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niGeometry/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niGeometry/#parent","text":"Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niGeometry/#properties_1","text":"Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niGeometry/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niGeometry/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niGeometry/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niGeometry/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niGeometry/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niGeometry/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niGeometry/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niGeometry/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niGeometry/#velocity","text":"The object's local velocity. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/niGeometry/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niGeometry/#worldboundorigin","text":"The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 )","title":"worldBoundOrigin"},{"location":"types/niGeometry/#worldboundradius","text":"The radius of the object's bounds. Returns : result (number)","title":"worldBoundRadius"},{"location":"types/niGeometry/#worldtransform","text":"The object's transformations in the world space. Returns : result ( tes3transform )","title":"worldTransform"},{"location":"types/niGeometry/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil)","title":"zBufferProperty"},{"location":"types/niGeometry/#methods","text":"","title":"Methods"},{"location":"types/niGeometry/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niGeometry/#attachproperty","text":"Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niGeometry/#cleartransforms","text":"Resets the object's local transform. myObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niGeometry/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niGeometry/#detachallproperties","text":"Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty [])","title":"detachAllProperties"},{"location":"types/niGeometry/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niGeometry/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niGeometry/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niGeometry/#getproperty","text":"Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niGeometry/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niGeometry/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niGeometry/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niGeometry/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niGeometry/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niGeometry/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niGeometry/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niGeometry/#propagatepositionchange","text":"Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"propagatePositionChange"},{"location":"types/niGeometry/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niGeometry/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niGeometry/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niGeometry/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niGeometry/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niGeometry/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niGeometry/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"update"},{"location":"types/niGeometry/#updateeffects","text":"Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects ()","title":"updateEffects"},{"location":"types/niGeometry/#updateproperties","text":"Update all attached properties. myObject : updateProperties ()","title":"updateProperties"},{"location":"types/niGeometryData/","text":"niGeometryData \u2693\ufe0e niGeometryData objects contain the geometry data necessary to render a niGeometry object. When a niGeometry-based object is created, the actual geometry data is stored in an attached niGeometryData object. The distinction between niGeometry and niGeometryData (and other pairs of NetImmerse classes with similarly distinguished names, such as niTriShape and niTriShapeData) is that niGeometry stores data that cannot be shared when an object is instanced, and niGeometryData stores data that can be shared when an object is instanced. So, for example, when a scene graph is cloned, duplicate copies of the niGeometry objects in the original scene graph are created for the new scene graph, but new niGeometryData objects are not created. Instead, the newly-created niGeometry objects refer to the same niGeometryData objects referred to by the original scene graph. This type inherits the following: niObject Properties \u2693\ufe0e bounds \u2693\ufe0e The model-space bounding sphere of the object. Returns : result (niBound) colors \u2693\ufe0e Read-only . The vertex colors for the object. The length of the array is equal to vertexCount . Returns : result ( niPackedColor []) normals \u2693\ufe0e Read-only . The list of unitized, model-space vertex normals for the object. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 []) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) texCoords \u2693\ufe0e Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 []) textures \u2693\ufe0e Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 []) textureSets \u2693\ufe0e The number of texture coordinate sets in the data. Returns : result (number) uniqueID \u2693\ufe0e Read-only . A unique ID for this model, assigned at model creation. Returns : result (number) vertexCount \u2693\ufe0e Read-only . The vertex count for the object. Returns : result (number) vertices \u2693\ufe0e Read-only . The array of vertex position data. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 []) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) markAsChanged \u2693\ufe0e Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data. If you have altered vertex positions, you may need to also call updateModelBound _. You should call it if vertices have been moved outside the bounds of the original model. myObject : markAsChanged () saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. updateModelBound \u2693\ufe0e Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function. myObject : updateModelBound ()","title":"niGeometryData"},{"location":"types/niGeometryData/#nigeometrydata","text":"niGeometryData objects contain the geometry data necessary to render a niGeometry object. When a niGeometry-based object is created, the actual geometry data is stored in an attached niGeometryData object. The distinction between niGeometry and niGeometryData (and other pairs of NetImmerse classes with similarly distinguished names, such as niTriShape and niTriShapeData) is that niGeometry stores data that cannot be shared when an object is instanced, and niGeometryData stores data that can be shared when an object is instanced. So, for example, when a scene graph is cloned, duplicate copies of the niGeometry objects in the original scene graph are created for the new scene graph, but new niGeometryData objects are not created. Instead, the newly-created niGeometry objects refer to the same niGeometryData objects referred to by the original scene graph. This type inherits the following: niObject","title":"niGeometryData"},{"location":"types/niGeometryData/#properties","text":"","title":"Properties"},{"location":"types/niGeometryData/#bounds","text":"The model-space bounding sphere of the object. Returns : result (niBound)","title":"bounds"},{"location":"types/niGeometryData/#colors","text":"Read-only . The vertex colors for the object. The length of the array is equal to vertexCount . Returns : result ( niPackedColor [])","title":"colors"},{"location":"types/niGeometryData/#normals","text":"Read-only . The list of unitized, model-space vertex normals for the object. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 [])","title":"normals"},{"location":"types/niGeometryData/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niGeometryData/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niGeometryData/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niGeometryData/#texcoords","text":"Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 [])","title":"texCoords"},{"location":"types/niGeometryData/#textures","text":"Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 [])","title":"textures"},{"location":"types/niGeometryData/#texturesets","text":"The number of texture coordinate sets in the data. Returns : result (number)","title":"textureSets"},{"location":"types/niGeometryData/#uniqueid","text":"Read-only . A unique ID for this model, assigned at model creation. Returns : result (number)","title":"uniqueID"},{"location":"types/niGeometryData/#vertexcount","text":"Read-only . The vertex count for the object. Returns : result (number)","title":"vertexCount"},{"location":"types/niGeometryData/#vertices","text":"Read-only . The array of vertex position data. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 [])","title":"vertices"},{"location":"types/niGeometryData/#methods","text":"","title":"Methods"},{"location":"types/niGeometryData/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niGeometryData/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niGeometryData/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niGeometryData/#markaschanged","text":"Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data. If you have altered vertex positions, you may need to also call updateModelBound _. You should call it if vertices have been moved outside the bounds of the original model. myObject : markAsChanged ()","title":"markAsChanged"},{"location":"types/niGeometryData/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niGeometryData/#updatemodelbound","text":"Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function. myObject : updateModelBound ()","title":"updateModelBound"},{"location":"types/niGravity/","text":"niGravity \u2693\ufe0e This modifer applies force, constant over time, to particles in the parent niParticleSystemController. This type inherits the following: niParticleModifier , niObject Properties \u2693\ufe0e controller \u2693\ufe0e Access to the generic time controller for particle systems. Returns : result ( niParticleSystemController ) decay \u2693\ufe0e This value impacts how fast gravitational force attenuates with the distance from the source. A value of 0 causes no decay. Returns : result (number) direction \u2693\ufe0e The direction of action for planar gravity. Returns : result ( tes3vector3 ) force \u2693\ufe0e The magnitude of the gravitational force in units/second . Returns : result (number) forceType \u2693\ufe0e The type of the modifier. Planar force will attract the particles parallel to the .direction vector. Spherical force will act so that the point defined by .position property is the source of the spherical gravitational force. Maps to values in ni.gravityForceType table. Returns : result (integer) next \u2693\ufe0e Access to the next attached modifier. Returns : result ( niParticleModifier ) position \u2693\ufe0e The position of the center used when applying spherical gravity. Returns : result ( tes3vector3 ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"niGravity"},{"location":"types/niGravity/#nigravity","text":"This modifer applies force, constant over time, to particles in the parent niParticleSystemController. This type inherits the following: niParticleModifier , niObject","title":"niGravity"},{"location":"types/niGravity/#properties","text":"","title":"Properties"},{"location":"types/niGravity/#controller","text":"Access to the generic time controller for particle systems. Returns : result ( niParticleSystemController )","title":"controller"},{"location":"types/niGravity/#decay","text":"This value impacts how fast gravitational force attenuates with the distance from the source. A value of 0 causes no decay. Returns : result (number)","title":"decay"},{"location":"types/niGravity/#direction","text":"The direction of action for planar gravity. Returns : result ( tes3vector3 )","title":"direction"},{"location":"types/niGravity/#force","text":"The magnitude of the gravitational force in units/second . Returns : result (number)","title":"force"},{"location":"types/niGravity/#forcetype","text":"The type of the modifier. Planar force will attract the particles parallel to the .direction vector. Spherical force will act so that the point defined by .position property is the source of the spherical gravitational force. Maps to values in ni.gravityForceType table. Returns : result (integer)","title":"forceType"},{"location":"types/niGravity/#next","text":"Access to the next attached modifier. Returns : result ( niParticleModifier )","title":"next"},{"location":"types/niGravity/#position","text":"The position of the center used when applying spherical gravity. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/niGravity/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niGravity/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niGravity/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niGravity/#methods","text":"","title":"Methods"},{"location":"types/niGravity/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niGravity/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niGravity/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niGravity/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niKeyframeController/","text":"niKeyframeController \u2693\ufe0e The controller responsible for animating transforms, using position, rotation, and scale keys. This type inherits the following: niTimeController , niObject Properties \u2693\ufe0e active \u2693\ufe0e If the controller is active. When inactive, the target does not get updated and animation timing does not advance. Returns : result (boolean) animTimingType \u2693\ufe0e How the time parameter passed to the update function is treated. Type 0 is the default, which treats the update time as a delta time. Type 1 treats the update time an offset from the start of the animation. Maps to values in ni.animType table. Returns : result (integer) cycleType \u2693\ufe0e The animation cycle type. Type 0 is looping, type 2 is reverse, type 4 is clamped. Maps to values in ni.animCycleType table. Returns : result (integer) data \u2693\ufe0e Read-only . The keyframe data used by the controller. Returns : result ( niKeyframeData ) frequency \u2693\ufe0e The animation controller's frequency value. It is a scaling value used to convert from update time units to keyframe time units, if necessary. Returns : result (number) highKeyFrame \u2693\ufe0e This is the end animation key time of the animation controller. Returns : result (number) lastScaledTime \u2693\ufe0e This function returns the last scaled time computed by this controller. The scaled time takes the frequency and phase into account, along with the cycleType and animTimingType . This is the last value used to interpolate animation keys. Returns : result (number) lastTime \u2693\ufe0e No description. Returns : result (number) lastUsedPositionIndex \u2693\ufe0e The last position index that the game engine used. Returns : result (number) lastUsedRotationIndex \u2693\ufe0e The last rotation index that the game engine used. Returns : result (number) lastUsedScaleIndex \u2693\ufe0e The last scale index that the game engine used. Returns : result (number) lowKeyFrame \u2693\ufe0e This is the beginning animation key time of the animation controller. Returns : result (number) nextController \u2693\ufe0e The next animation controller in the list of controllers containing the calling controller. Returns : result ( niTimeController ) phase \u2693\ufe0e The phase value. It is an offset applied to the animation's update time, in seconds. Returns : result (number) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) startTime \u2693\ufe0e The time at which the animation controller starts playing its animation. Returns : result (number) target \u2693\ufe0e Read-only . The scene graph object that this animation controller is to animate. Returns : result ( niObjectNET ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setTarget \u2693\ufe0e This method assigns a new target to the animation controller. myObject : setTarget ( target ) Parameters : target ( niObjectNET ): The new target to assign. start \u2693\ufe0e Starts the controller at the specified time. Intended for controllers with animTimingType of 1. myObject : start ( time ) Parameters : time (number) stop \u2693\ufe0e Stops the controller. If you only want to pause the controller, use the update property. myObject : stop ()","title":"niKeyframeController"},{"location":"types/niKeyframeController/#nikeyframecontroller","text":"The controller responsible for animating transforms, using position, rotation, and scale keys. This type inherits the following: niTimeController , niObject","title":"niKeyframeController"},{"location":"types/niKeyframeController/#properties","text":"","title":"Properties"},{"location":"types/niKeyframeController/#active","text":"If the controller is active. When inactive, the target does not get updated and animation timing does not advance. Returns : result (boolean)","title":"active"},{"location":"types/niKeyframeController/#animtimingtype","text":"How the time parameter passed to the update function is treated. Type 0 is the default, which treats the update time as a delta time. Type 1 treats the update time an offset from the start of the animation. Maps to values in ni.animType table. Returns : result (integer)","title":"animTimingType"},{"location":"types/niKeyframeController/#cycletype","text":"The animation cycle type. Type 0 is looping, type 2 is reverse, type 4 is clamped. Maps to values in ni.animCycleType table. Returns : result (integer)","title":"cycleType"},{"location":"types/niKeyframeController/#data","text":"Read-only . The keyframe data used by the controller. Returns : result ( niKeyframeData )","title":"data"},{"location":"types/niKeyframeController/#frequency","text":"The animation controller's frequency value. It is a scaling value used to convert from update time units to keyframe time units, if necessary. Returns : result (number)","title":"frequency"},{"location":"types/niKeyframeController/#highkeyframe","text":"This is the end animation key time of the animation controller. Returns : result (number)","title":"highKeyFrame"},{"location":"types/niKeyframeController/#lastscaledtime","text":"This function returns the last scaled time computed by this controller. The scaled time takes the frequency and phase into account, along with the cycleType and animTimingType . This is the last value used to interpolate animation keys. Returns : result (number)","title":"lastScaledTime"},{"location":"types/niKeyframeController/#lasttime","text":"No description. Returns : result (number)","title":"lastTime"},{"location":"types/niKeyframeController/#lastusedpositionindex","text":"The last position index that the game engine used. Returns : result (number)","title":"lastUsedPositionIndex"},{"location":"types/niKeyframeController/#lastusedrotationindex","text":"The last rotation index that the game engine used. Returns : result (number)","title":"lastUsedRotationIndex"},{"location":"types/niKeyframeController/#lastusedscaleindex","text":"The last scale index that the game engine used. Returns : result (number)","title":"lastUsedScaleIndex"},{"location":"types/niKeyframeController/#lowkeyframe","text":"This is the beginning animation key time of the animation controller. Returns : result (number)","title":"lowKeyFrame"},{"location":"types/niKeyframeController/#nextcontroller","text":"The next animation controller in the list of controllers containing the calling controller. Returns : result ( niTimeController )","title":"nextController"},{"location":"types/niKeyframeController/#phase","text":"The phase value. It is an offset applied to the animation's update time, in seconds. Returns : result (number)","title":"phase"},{"location":"types/niKeyframeController/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niKeyframeController/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niKeyframeController/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niKeyframeController/#starttime","text":"The time at which the animation controller starts playing its animation. Returns : result (number)","title":"startTime"},{"location":"types/niKeyframeController/#target","text":"Read-only . The scene graph object that this animation controller is to animate. Returns : result ( niObjectNET )","title":"target"},{"location":"types/niKeyframeController/#methods","text":"","title":"Methods"},{"location":"types/niKeyframeController/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niKeyframeController/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niKeyframeController/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niKeyframeController/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niKeyframeController/#settarget","text":"This method assigns a new target to the animation controller. myObject : setTarget ( target ) Parameters : target ( niObjectNET ): The new target to assign.","title":"setTarget"},{"location":"types/niKeyframeController/#start","text":"Starts the controller at the specified time. Intended for controllers with animTimingType of 1. myObject : start ( time ) Parameters : time (number)","title":"start"},{"location":"types/niKeyframeController/#stop","text":"Stops the controller. If you only want to pause the controller, use the update property. myObject : stop ()","title":"stop"},{"location":"types/niKeyframeData/","text":"niKeyframeData \u2693\ufe0e A collection of position, rotation, and scale keys used on NiKeyframeControllers. This type inherits the following: niObject Properties \u2693\ufe0e positionKeyCount \u2693\ufe0e Read-only . The number of position keys available. Returns : result (number) positionKeys \u2693\ufe0e Read-only . The available position keys. Returns : result ( niPosKey []) positionType \u2693\ufe0e Read-only . The type of animation key used for position keys. Maps to values in ni.animationKeyType table. Returns : result (integer) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotationKeyCount \u2693\ufe0e Read-only . The number of rotation keys available. Returns : result (number) rotationKeys \u2693\ufe0e Read-only . The available rotation keys. Returns : result ( niRotKey []) rotationType \u2693\ufe0e Read-only . The type of animation key used for rotation keys. Maps to values in ni.animationKeyType table. Returns : result (integer) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scaleKeyCount \u2693\ufe0e Read-only . The number of scale keys available. Returns : result (number) scaleKeys \u2693\ufe0e Read-only . The available scale keys. Returns : result ( niFloatKey []) scaleType \u2693\ufe0e Read-only . The type of animation key used for scale keys. Maps to values in ni.animationKeyType table. Returns : result (integer) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"niKeyframeData"},{"location":"types/niKeyframeData/#nikeyframedata","text":"A collection of position, rotation, and scale keys used on NiKeyframeControllers. This type inherits the following: niObject","title":"niKeyframeData"},{"location":"types/niKeyframeData/#properties","text":"","title":"Properties"},{"location":"types/niKeyframeData/#positionkeycount","text":"Read-only . The number of position keys available. Returns : result (number)","title":"positionKeyCount"},{"location":"types/niKeyframeData/#positionkeys","text":"Read-only . The available position keys. Returns : result ( niPosKey [])","title":"positionKeys"},{"location":"types/niKeyframeData/#positiontype","text":"Read-only . The type of animation key used for position keys. Maps to values in ni.animationKeyType table. Returns : result (integer)","title":"positionType"},{"location":"types/niKeyframeData/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niKeyframeData/#rotationkeycount","text":"Read-only . The number of rotation keys available. Returns : result (number)","title":"rotationKeyCount"},{"location":"types/niKeyframeData/#rotationkeys","text":"Read-only . The available rotation keys. Returns : result ( niRotKey [])","title":"rotationKeys"},{"location":"types/niKeyframeData/#rotationtype","text":"Read-only . The type of animation key used for rotation keys. Maps to values in ni.animationKeyType table. Returns : result (integer)","title":"rotationType"},{"location":"types/niKeyframeData/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niKeyframeData/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niKeyframeData/#scalekeycount","text":"Read-only . The number of scale keys available. Returns : result (number)","title":"scaleKeyCount"},{"location":"types/niKeyframeData/#scalekeys","text":"Read-only . The available scale keys. Returns : result ( niFloatKey [])","title":"scaleKeys"},{"location":"types/niKeyframeData/#scaletype","text":"Read-only . The type of animation key used for scale keys. Maps to values in ni.animationKeyType table. Returns : result (integer)","title":"scaleType"},{"location":"types/niKeyframeData/#methods","text":"","title":"Methods"},{"location":"types/niKeyframeData/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niKeyframeData/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niKeyframeData/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niKeyframeData/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niLight/","text":"niLight \u2693\ufe0e Base class that represents light sources in a scene graph. This includes the ambient, diffuse, and specular colors of a light, as well as its intensity. This type inherits the following: niDynamicEffect , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e affectedNodes \u2693\ufe0e The list of nodes that a given dynamic effect will affect. Returns : result ( niNodeLinkedList ) alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) ambient \u2693\ufe0e The ambient light color. Returns : result ( niColor ) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) diffuse \u2693\ufe0e The diffuse light color. Returns : result ( niColor ) dimmer \u2693\ufe0e This flag scales the overall brightness of all light components. This value must be nonnegative. It is usually less than or equal to 1.0 (although advanced lighting effects may use larger values). Returns : result (number) enabled \u2693\ufe0e The enabled state of a given dynamic effect. Returns : result (boolean) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) specular \u2693\ufe0e This property was inteded to be specular light color in NetImmerse, but in Morrowind it represents the dynamic culling radius. All the color channels are equal to the radius. In practice, this radius represents the light's influence radius. Returns : result ( niColor ) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) type \u2693\ufe0e Read-only . The enumerated type of a given dynamic effect. Maps to values in ni.dynamicEffectType table. Returns : result (integer) velocity \u2693\ufe0e The object's local velocity. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) worldBoundOrigin \u2693\ufe0e The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 ) worldBoundRadius \u2693\ufe0e The radius of the object's bounds. Returns : result (number) worldTransform \u2693\ufe0e The object's transformations in the world space. Returns : result ( tes3transform ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) attachAffectedNode \u2693\ufe0e Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list. attachProperty \u2693\ufe0e Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. myObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) detachAffectedNode \u2693\ufe0e Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list. detachAllProperties \u2693\ufe0e Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty []) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) propagatePositionChange \u2693\ufe0e Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? updateEffects \u2693\ufe0e Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. myObject : updateProperties ()","title":"niLight"},{"location":"types/niLight/#nilight","text":"Base class that represents light sources in a scene graph. This includes the ambient, diffuse, and specular colors of a light, as well as its intensity. This type inherits the following: niDynamicEffect , niAVObject , niObjectNET , niObject","title":"niLight"},{"location":"types/niLight/#properties","text":"","title":"Properties"},{"location":"types/niLight/#affectednodes","text":"The list of nodes that a given dynamic effect will affect. Returns : result ( niNodeLinkedList )","title":"affectedNodes"},{"location":"types/niLight/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niLight/#ambient","text":"The ambient light color. Returns : result ( niColor )","title":"ambient"},{"location":"types/niLight/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niLight/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niLight/#diffuse","text":"The diffuse light color. Returns : result ( niColor )","title":"diffuse"},{"location":"types/niLight/#dimmer","text":"This flag scales the overall brightness of all light components. This value must be nonnegative. It is usually less than or equal to 1.0 (although advanced lighting effects may use larger values). Returns : result (number)","title":"dimmer"},{"location":"types/niLight/#enabled","text":"The enabled state of a given dynamic effect. Returns : result (boolean)","title":"enabled"},{"location":"types/niLight/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niLight/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niLight/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niLight/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niLight/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niLight/#parent","text":"Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niLight/#properties_1","text":"Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niLight/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niLight/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niLight/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niLight/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niLight/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niLight/#specular","text":"This property was inteded to be specular light color in NetImmerse, but in Morrowind it represents the dynamic culling radius. All the color channels are equal to the radius. In practice, this radius represents the light's influence radius. Returns : result ( niColor )","title":"specular"},{"location":"types/niLight/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niLight/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niLight/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niLight/#type","text":"Read-only . The enumerated type of a given dynamic effect. Maps to values in ni.dynamicEffectType table. Returns : result (integer)","title":"type"},{"location":"types/niLight/#velocity","text":"The object's local velocity. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/niLight/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niLight/#worldboundorigin","text":"The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 )","title":"worldBoundOrigin"},{"location":"types/niLight/#worldboundradius","text":"The radius of the object's bounds. Returns : result (number)","title":"worldBoundRadius"},{"location":"types/niLight/#worldtransform","text":"The object's transformations in the world space. Returns : result ( tes3transform )","title":"worldTransform"},{"location":"types/niLight/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil)","title":"zBufferProperty"},{"location":"types/niLight/#methods","text":"","title":"Methods"},{"location":"types/niLight/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niLight/#attachaffectednode","text":"Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list.","title":"attachAffectedNode"},{"location":"types/niLight/#attachproperty","text":"Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niLight/#cleartransforms","text":"Resets the object's local transform. myObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niLight/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niLight/#detachaffectednode","text":"Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"detachAffectedNode"},{"location":"types/niLight/#detachallproperties","text":"Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty [])","title":"detachAllProperties"},{"location":"types/niLight/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niLight/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niLight/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niLight/#getproperty","text":"Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niLight/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niLight/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niLight/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niLight/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niLight/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niLight/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niLight/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niLight/#propagatepositionchange","text":"Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"propagatePositionChange"},{"location":"types/niLight/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niLight/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niLight/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niLight/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niLight/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niLight/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niLight/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"update"},{"location":"types/niLight/#updateeffects","text":"Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects ()","title":"updateEffects"},{"location":"types/niLight/#updateproperties","text":"Update all attached properties. myObject : updateProperties ()","title":"updateProperties"},{"location":"types/niLookAtController/","text":"niLookAtController \u2693\ufe0e Orients an axis of the controlled object towards a lookAt target. The axis is selectable. Warning: The lookAt property is not reference counted, so this controller must be removed, or lookAt set to nil before the lookAt object is deleted. This type inherits the following: niTimeController , niObject Properties \u2693\ufe0e active \u2693\ufe0e If the controller is active. When inactive, the target does not get updated and animation timing does not advance. Returns : result (boolean) animTimingType \u2693\ufe0e How the time parameter passed to the update function is treated. Type 0 is the default, which treats the update time as a delta time. Type 1 treats the update time an offset from the start of the animation. Maps to values in ni.animType table. Returns : result (integer) axis \u2693\ufe0e A number representing the axis that points at the lookAt object. flip determines which end of this axis points at the target. 0 X axis 1 Y axis 2 Z axis Maps to values in ni.lookAtControllerAxis table. Returns : result (integer) cycleType \u2693\ufe0e The animation cycle type. Type 0 is looping, type 2 is reverse, type 4 is clamped. Maps to values in ni.animCycleType table. Returns : result (integer) flip \u2693\ufe0e Determines which end of the chosen axis points towards the lookAt target. Returns : result (boolean) frequency \u2693\ufe0e The animation controller's frequency value. It is a scaling value used to convert from update time units to keyframe time units, if necessary. Returns : result (number) highKeyFrame \u2693\ufe0e This is the end animation key time of the animation controller. Returns : result (number) lastScaledTime \u2693\ufe0e This function returns the last scaled time computed by this controller. The scaled time takes the frequency and phase into account, along with the cycleType and animTimingType . This is the last value used to interpolate animation keys. Returns : result (number) lastTime \u2693\ufe0e No description. Returns : result (number) lookAt \u2693\ufe0e The object that this controller will point towards. This is not a reference counted pointer, so this controller must be removed or lookAt set to nil before the lookAt object is deleted. This was probably designed to avoid reference cycles where controllers keep an ancestor node alive. Returns : result ( niAVObject ) lowKeyFrame \u2693\ufe0e This is the beginning animation key time of the animation controller. Returns : result (number) nextController \u2693\ufe0e The next animation controller in the list of controllers containing the calling controller. Returns : result ( niTimeController ) phase \u2693\ufe0e The phase value. It is an offset applied to the animation's update time, in seconds. Returns : result (number) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) startTime \u2693\ufe0e The time at which the animation controller starts playing its animation. Returns : result (number) target \u2693\ufe0e Read-only . The scene graph object that this animation controller is to animate. Returns : result ( niObjectNET ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setTarget \u2693\ufe0e This method assigns a new target to the animation controller. myObject : setTarget ( target ) Parameters : target ( niObjectNET ): The new target to assign. start \u2693\ufe0e Starts the controller at the specified time. Intended for controllers with animTimingType of 1. myObject : start ( time ) Parameters : time (number) stop \u2693\ufe0e Stops the controller. If you only want to pause the controller, use the update property. myObject : stop ()","title":"niLookAtController"},{"location":"types/niLookAtController/#nilookatcontroller","text":"Orients an axis of the controlled object towards a lookAt target. The axis is selectable. Warning: The lookAt property is not reference counted, so this controller must be removed, or lookAt set to nil before the lookAt object is deleted. This type inherits the following: niTimeController , niObject","title":"niLookAtController"},{"location":"types/niLookAtController/#properties","text":"","title":"Properties"},{"location":"types/niLookAtController/#active","text":"If the controller is active. When inactive, the target does not get updated and animation timing does not advance. Returns : result (boolean)","title":"active"},{"location":"types/niLookAtController/#animtimingtype","text":"How the time parameter passed to the update function is treated. Type 0 is the default, which treats the update time as a delta time. Type 1 treats the update time an offset from the start of the animation. Maps to values in ni.animType table. Returns : result (integer)","title":"animTimingType"},{"location":"types/niLookAtController/#axis","text":"A number representing the axis that points at the lookAt object. flip determines which end of this axis points at the target. 0 X axis 1 Y axis 2 Z axis Maps to values in ni.lookAtControllerAxis table. Returns : result (integer)","title":"axis"},{"location":"types/niLookAtController/#cycletype","text":"The animation cycle type. Type 0 is looping, type 2 is reverse, type 4 is clamped. Maps to values in ni.animCycleType table. Returns : result (integer)","title":"cycleType"},{"location":"types/niLookAtController/#flip","text":"Determines which end of the chosen axis points towards the lookAt target. Returns : result (boolean)","title":"flip"},{"location":"types/niLookAtController/#frequency","text":"The animation controller's frequency value. It is a scaling value used to convert from update time units to keyframe time units, if necessary. Returns : result (number)","title":"frequency"},{"location":"types/niLookAtController/#highkeyframe","text":"This is the end animation key time of the animation controller. Returns : result (number)","title":"highKeyFrame"},{"location":"types/niLookAtController/#lastscaledtime","text":"This function returns the last scaled time computed by this controller. The scaled time takes the frequency and phase into account, along with the cycleType and animTimingType . This is the last value used to interpolate animation keys. Returns : result (number)","title":"lastScaledTime"},{"location":"types/niLookAtController/#lasttime","text":"No description. Returns : result (number)","title":"lastTime"},{"location":"types/niLookAtController/#lookat","text":"The object that this controller will point towards. This is not a reference counted pointer, so this controller must be removed or lookAt set to nil before the lookAt object is deleted. This was probably designed to avoid reference cycles where controllers keep an ancestor node alive. Returns : result ( niAVObject )","title":"lookAt"},{"location":"types/niLookAtController/#lowkeyframe","text":"This is the beginning animation key time of the animation controller. Returns : result (number)","title":"lowKeyFrame"},{"location":"types/niLookAtController/#nextcontroller","text":"The next animation controller in the list of controllers containing the calling controller. Returns : result ( niTimeController )","title":"nextController"},{"location":"types/niLookAtController/#phase","text":"The phase value. It is an offset applied to the animation's update time, in seconds. Returns : result (number)","title":"phase"},{"location":"types/niLookAtController/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niLookAtController/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niLookAtController/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niLookAtController/#starttime","text":"The time at which the animation controller starts playing its animation. Returns : result (number)","title":"startTime"},{"location":"types/niLookAtController/#target","text":"Read-only . The scene graph object that this animation controller is to animate. Returns : result ( niObjectNET )","title":"target"},{"location":"types/niLookAtController/#methods","text":"","title":"Methods"},{"location":"types/niLookAtController/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niLookAtController/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niLookAtController/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niLookAtController/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niLookAtController/#settarget","text":"This method assigns a new target to the animation controller. myObject : setTarget ( target ) Parameters : target ( niObjectNET ): The new target to assign.","title":"setTarget"},{"location":"types/niLookAtController/#start","text":"Starts the controller at the specified time. Intended for controllers with animTimingType of 1. myObject : start ( time ) Parameters : time (number)","title":"start"},{"location":"types/niLookAtController/#stop","text":"Stops the controller. If you only want to pause the controller, use the update property. myObject : stop ()","title":"stop"},{"location":"types/niMaterialProperty/","text":"niMaterialProperty \u2693\ufe0e A rendering property that controls the surface properties of objects affected by the property. These surface properties include translucency, ambient reflective color, diffuse reflective color, emissive color intensity, and specular color. This type inherits the following: niProperty , niObjectNET , niObject Properties \u2693\ufe0e alpha \u2693\ufe0e The alpha value of the material. Value should be in [0.0, 1.0] range. Setting this value also marks the material as changed, so that renderer knows that it needs to update its copies of the material settings. Returns : result (number) ambient \u2693\ufe0e The ambient material color. Setting this value also marks the material as changed, so that renderer knows that it needs to update its copies of the material settings. Returns : result ( niColor ) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) diffuse \u2693\ufe0e The diffuse material color. Setting this value also marks the material as changed, so that renderer knows that it needs to update its copies of the material settings. Returns : result ( niColor ) emissive \u2693\ufe0e The emissive material color. Setting this value also marks the material as changed, so that renderer knows that it needs to update its copies of the material settings. Returns : result ( niColor ) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) propertyFlags \u2693\ufe0e Returns : result (integer) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) shininess \u2693\ufe0e The shine of the material. Value should be >= 0. Higher values tend to make the material appear to have a more mirror-like finish. Setting this value also marks the material as changed, so that renderer knows that it needs to update its copies of the material settings. Returns : result (number) specular \u2693\ufe0e The specular material color. Setting this value also marks the material as changed, so that renderer knows that it needs to update its copies of the material settings. Returns : result ( niColor ) type \u2693\ufe0e Read-only . The unique class identifier number of the given rendering property. The types are available in ni.propertyType table. Returns : result (integer) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) incrementRevisionId \u2693\ufe0e This marks the material as changed, so that the renderer knows that it needs to update the copies of the material settings. myObject : incrementRevisionId () isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"niMaterialProperty"},{"location":"types/niMaterialProperty/#nimaterialproperty","text":"A rendering property that controls the surface properties of objects affected by the property. These surface properties include translucency, ambient reflective color, diffuse reflective color, emissive color intensity, and specular color. This type inherits the following: niProperty , niObjectNET , niObject","title":"niMaterialProperty"},{"location":"types/niMaterialProperty/#properties","text":"","title":"Properties"},{"location":"types/niMaterialProperty/#alpha","text":"The alpha value of the material. Value should be in [0.0, 1.0] range. Setting this value also marks the material as changed, so that renderer knows that it needs to update its copies of the material settings. Returns : result (number)","title":"alpha"},{"location":"types/niMaterialProperty/#ambient","text":"The ambient material color. Setting this value also marks the material as changed, so that renderer knows that it needs to update its copies of the material settings. Returns : result ( niColor )","title":"ambient"},{"location":"types/niMaterialProperty/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niMaterialProperty/#diffuse","text":"The diffuse material color. Setting this value also marks the material as changed, so that renderer knows that it needs to update its copies of the material settings. Returns : result ( niColor )","title":"diffuse"},{"location":"types/niMaterialProperty/#emissive","text":"The emissive material color. Setting this value also marks the material as changed, so that renderer knows that it needs to update its copies of the material settings. Returns : result ( niColor )","title":"emissive"},{"location":"types/niMaterialProperty/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niMaterialProperty/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niMaterialProperty/#propertyflags","text":"Returns : result (integer)","title":"propertyFlags"},{"location":"types/niMaterialProperty/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niMaterialProperty/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niMaterialProperty/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niMaterialProperty/#shininess","text":"The shine of the material. Value should be >= 0. Higher values tend to make the material appear to have a more mirror-like finish. Setting this value also marks the material as changed, so that renderer knows that it needs to update its copies of the material settings. Returns : result (number)","title":"shininess"},{"location":"types/niMaterialProperty/#specular","text":"The specular material color. Setting this value also marks the material as changed, so that renderer knows that it needs to update its copies of the material settings. Returns : result ( niColor )","title":"specular"},{"location":"types/niMaterialProperty/#type","text":"Read-only . The unique class identifier number of the given rendering property. The types are available in ni.propertyType table. Returns : result (integer)","title":"type"},{"location":"types/niMaterialProperty/#methods","text":"","title":"Methods"},{"location":"types/niMaterialProperty/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niMaterialProperty/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niMaterialProperty/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niMaterialProperty/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niMaterialProperty/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niMaterialProperty/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niMaterialProperty/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niMaterialProperty/#incrementrevisionid","text":"This marks the material as changed, so that the renderer knows that it needs to update the copies of the material settings. myObject : incrementRevisionId ()","title":"incrementRevisionId"},{"location":"types/niMaterialProperty/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niMaterialProperty/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niMaterialProperty/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niMaterialProperty/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niMaterialProperty/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niMaterialProperty/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niMaterialProperty/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niMaterialProperty/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niMaterialProperty/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niNode/","text":"niNode \u2693\ufe0e Base class that represents the nodes of a scene graph. A node can have any number of child nodes. This type inherits the following: niAVObject , niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) children \u2693\ufe0e Read-only . The children of the node. Can have nil entries. Returns : result ( niAVObject []) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) effectList \u2693\ufe0e Read-only . The effect list of the node. Attached effects affect the node and all of its child subtree geometry. Returns : result ( niDynamicEffectLinkedList ) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) velocity \u2693\ufe0e The object's local velocity. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) worldBoundOrigin \u2693\ufe0e The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 ) worldBoundRadius \u2693\ufe0e The radius of the object's bounds. Returns : result (number) worldTransform \u2693\ufe0e The object's transformations in the world space. Returns : result ( tes3transform ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) attachChild \u2693\ufe0e Attaches the child to the children list of the node. Doesn't check to see if the object is already in the child list. myObject : attachChild ( child , useFirstAvailable ) Parameters : child ( niAVObject ) useFirstAvailable (boolean): Default : false . Use the first available space in the list. If false appends the child at the end of the list. attachEffect \u2693\ufe0e Attaches a dynamic effect to the node. It will not attach the same effect twice. myObject : attachEffect ( effect ) Parameters : effect ( niDynamicEffect ) attachProperty \u2693\ufe0e Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. myObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) createBoundingBox \u2693\ufe0e Calculates and creates a bounding box for the object. The existing bounding box, if any, will not be used, a fresh one will always be calculated. local boundingBox = myObject : createBoundingBox () Returns : boundingBox ( tes3boundingBox ): The newly created bounding box. detachAllEffects \u2693\ufe0e Detaches all dynamic effect from the effect list of the node. myObject : detachAllEffects () detachAllProperties \u2693\ufe0e Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty []) detachChild \u2693\ufe0e Detaches the child from the children list of the node. Returns the detached child. local detachedChild = myObject : detachChild ( child ) Parameters : child ( niAVObject ) Returns : detachedChild ( niAVObject ) detachChildAt \u2693\ufe0e Detaches the child at the specified index from the children list of the node. Returns the detached child. local detachedChild = myObject : detachChildAt ( index ) Parameters : index (integer) Returns : detachedChild ( niAVObject ) detachEffect \u2693\ufe0e Detaches the given dynamic effect from the effect list of the node, if it was present. Has no effect if the effect wasn't attached to the node. myObject : detachEffect ( effect ) Parameters : effect ( niDynamicEffect ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getEffect \u2693\ufe0e Gets the effect of the given type. local effect = myObject : getEffect ( type ) Parameters : type (integer): Use the values from ni.dynamicEffectType table. Returns : effect ( niDynamicEffect , nil) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) propagatePositionChange \u2693\ufe0e Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? updateEffects \u2693\ufe0e Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. myObject : updateProperties () Functions \u2693\ufe0e new \u2693\ufe0e Creates a new, empty NiNode. local node = niNode . new () Returns : node ( niNode )","title":"niNode"},{"location":"types/niNode/#ninode","text":"Base class that represents the nodes of a scene graph. A node can have any number of child nodes. This type inherits the following: niAVObject , niObjectNET , niObject","title":"niNode"},{"location":"types/niNode/#properties","text":"","title":"Properties"},{"location":"types/niNode/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niNode/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niNode/#children","text":"Read-only . The children of the node. Can have nil entries. Returns : result ( niAVObject [])","title":"children"},{"location":"types/niNode/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niNode/#effectlist","text":"Read-only . The effect list of the node. Attached effects affect the node and all of its child subtree geometry. Returns : result ( niDynamicEffectLinkedList )","title":"effectList"},{"location":"types/niNode/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niNode/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niNode/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niNode/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niNode/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niNode/#parent","text":"Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niNode/#properties_1","text":"Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niNode/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niNode/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niNode/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niNode/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niNode/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niNode/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niNode/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niNode/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niNode/#velocity","text":"The object's local velocity. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/niNode/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niNode/#worldboundorigin","text":"The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 )","title":"worldBoundOrigin"},{"location":"types/niNode/#worldboundradius","text":"The radius of the object's bounds. Returns : result (number)","title":"worldBoundRadius"},{"location":"types/niNode/#worldtransform","text":"The object's transformations in the world space. Returns : result ( tes3transform )","title":"worldTransform"},{"location":"types/niNode/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil)","title":"zBufferProperty"},{"location":"types/niNode/#methods","text":"","title":"Methods"},{"location":"types/niNode/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niNode/#attachchild","text":"Attaches the child to the children list of the node. Doesn't check to see if the object is already in the child list. myObject : attachChild ( child , useFirstAvailable ) Parameters : child ( niAVObject ) useFirstAvailable (boolean): Default : false . Use the first available space in the list. If false appends the child at the end of the list.","title":"attachChild"},{"location":"types/niNode/#attacheffect","text":"Attaches a dynamic effect to the node. It will not attach the same effect twice. myObject : attachEffect ( effect ) Parameters : effect ( niDynamicEffect )","title":"attachEffect"},{"location":"types/niNode/#attachproperty","text":"Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niNode/#cleartransforms","text":"Resets the object's local transform. myObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niNode/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niNode/#createboundingbox","text":"Calculates and creates a bounding box for the object. The existing bounding box, if any, will not be used, a fresh one will always be calculated. local boundingBox = myObject : createBoundingBox () Returns : boundingBox ( tes3boundingBox ): The newly created bounding box.","title":"createBoundingBox"},{"location":"types/niNode/#detachalleffects","text":"Detaches all dynamic effect from the effect list of the node. myObject : detachAllEffects ()","title":"detachAllEffects"},{"location":"types/niNode/#detachallproperties","text":"Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty [])","title":"detachAllProperties"},{"location":"types/niNode/#detachchild","text":"Detaches the child from the children list of the node. Returns the detached child. local detachedChild = myObject : detachChild ( child ) Parameters : child ( niAVObject ) Returns : detachedChild ( niAVObject )","title":"detachChild"},{"location":"types/niNode/#detachchildat","text":"Detaches the child at the specified index from the children list of the node. Returns the detached child. local detachedChild = myObject : detachChildAt ( index ) Parameters : index (integer) Returns : detachedChild ( niAVObject )","title":"detachChildAt"},{"location":"types/niNode/#detacheffect","text":"Detaches the given dynamic effect from the effect list of the node, if it was present. Has no effect if the effect wasn't attached to the node. myObject : detachEffect ( effect ) Parameters : effect ( niDynamicEffect )","title":"detachEffect"},{"location":"types/niNode/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niNode/#geteffect","text":"Gets the effect of the given type. local effect = myObject : getEffect ( type ) Parameters : type (integer): Use the values from ni.dynamicEffectType table. Returns : effect ( niDynamicEffect , nil)","title":"getEffect"},{"location":"types/niNode/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niNode/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niNode/#getproperty","text":"Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niNode/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niNode/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niNode/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niNode/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niNode/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niNode/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niNode/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niNode/#propagatepositionchange","text":"Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"propagatePositionChange"},{"location":"types/niNode/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niNode/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niNode/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niNode/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niNode/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niNode/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niNode/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"update"},{"location":"types/niNode/#updateeffects","text":"Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects ()","title":"updateEffects"},{"location":"types/niNode/#updateproperties","text":"Update all attached properties. myObject : updateProperties ()","title":"updateProperties"},{"location":"types/niNode/#functions","text":"","title":"Functions"},{"location":"types/niNode/#new","text":"Creates a new, empty NiNode. local node = niNode . new () Returns : node ( niNode )","title":"new"},{"location":"types/niNodeLinkedList/","text":"niNodeLinkedList \u2693\ufe0e A linked list of scene graph nodes. Properties \u2693\ufe0e data \u2693\ufe0e Read-only . The current scene graph node in the linked list. Returns : result ( niNode ) next \u2693\ufe0e Read-only . The next scene graph node in the linked list. Returns : result ( niNodeLinkedList )","title":"niNodeLinkedList"},{"location":"types/niNodeLinkedList/#ninodelinkedlist","text":"A linked list of scene graph nodes.","title":"niNodeLinkedList"},{"location":"types/niNodeLinkedList/#properties","text":"","title":"Properties"},{"location":"types/niNodeLinkedList/#data","text":"Read-only . The current scene graph node in the linked list. Returns : result ( niNode )","title":"data"},{"location":"types/niNodeLinkedList/#next","text":"Read-only . The next scene graph node in the linked list. Returns : result ( niNodeLinkedList )","title":"next"},{"location":"types/niObject/","text":"niObject \u2693\ufe0e The base-most object from which almost all NetImmerse structures are derived from. Properties \u2693\ufe0e refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"niObject"},{"location":"types/niObject/#niobject","text":"The base-most object from which almost all NetImmerse structures are derived from.","title":"niObject"},{"location":"types/niObject/#properties","text":"","title":"Properties"},{"location":"types/niObject/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niObject/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niObject/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niObject/#methods","text":"","title":"Methods"},{"location":"types/niObject/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niObject/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niObject/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niObject/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niObjectNET/","text":"niObjectNET \u2693\ufe0e An object that has a name, extra data, and controllers. This type inherits the following: niObject Properties \u2693\ufe0e controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"niObjectNET"},{"location":"types/niObjectNET/#niobjectnet","text":"An object that has a name, extra data, and controllers. This type inherits the following: niObject","title":"niObjectNET"},{"location":"types/niObjectNET/#properties","text":"","title":"Properties"},{"location":"types/niObjectNET/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niObjectNET/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niObjectNET/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niObjectNET/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niObjectNET/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niObjectNET/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niObjectNET/#methods","text":"","title":"Methods"},{"location":"types/niObjectNET/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niObjectNET/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niObjectNET/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niObjectNET/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niObjectNET/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niObjectNET/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niObjectNET/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niObjectNET/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niObjectNET/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niObjectNET/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niObjectNET/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niObjectNET/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niObjectNET/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niObjectNET/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niObjectNET/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niObjectNET/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niPackedColor/","text":"niPackedColor \u2693\ufe0e An object that represents a RGB color with alpha channel support. Unlike other color values, this is compressed into 4 bytes. Values are not from 0 to 1, but from 0 to 255. Properties \u2693\ufe0e a \u2693\ufe0e The alpha value of the color. Returns : result (integer) alpha \u2693\ufe0e The alpha value of the color. Returns : result (integer) b \u2693\ufe0e The blue value of the color. Returns : result (integer) blue \u2693\ufe0e Alias for the blue value of the color. Returns : result (integer) g \u2693\ufe0e The green value of the color. Returns : result (integer) green \u2693\ufe0e Alias for the green value of the color. Returns : result (integer) r \u2693\ufe0e The red value of the color. Returns : result (integer) red \u2693\ufe0e Alias for the red value of the color. Returns : result (integer) Functions \u2693\ufe0e new \u2693\ufe0e Creates a new niPackedColor object. local color = niPackedColor . new ( r , g , b , a ) Parameters : r (integer): Default : 0 . The red value for the color. g (integer): Default : 0 . The green value for the color. b (integer): Default : 0 . The blue value for the color. a (integer): Default : 0 . The alpha value for the color. Returns : color ( niPackedColor )","title":"niPackedColor"},{"location":"types/niPackedColor/#nipackedcolor","text":"An object that represents a RGB color with alpha channel support. Unlike other color values, this is compressed into 4 bytes. Values are not from 0 to 1, but from 0 to 255.","title":"niPackedColor"},{"location":"types/niPackedColor/#properties","text":"","title":"Properties"},{"location":"types/niPackedColor/#a","text":"The alpha value of the color. Returns : result (integer)","title":"a"},{"location":"types/niPackedColor/#alpha","text":"The alpha value of the color. Returns : result (integer)","title":"alpha"},{"location":"types/niPackedColor/#b","text":"The blue value of the color. Returns : result (integer)","title":"b"},{"location":"types/niPackedColor/#blue","text":"Alias for the blue value of the color. Returns : result (integer)","title":"blue"},{"location":"types/niPackedColor/#g","text":"The green value of the color. Returns : result (integer)","title":"g"},{"location":"types/niPackedColor/#green","text":"Alias for the green value of the color. Returns : result (integer)","title":"green"},{"location":"types/niPackedColor/#r","text":"The red value of the color. Returns : result (integer)","title":"r"},{"location":"types/niPackedColor/#red","text":"Alias for the red value of the color. Returns : result (integer)","title":"red"},{"location":"types/niPackedColor/#functions","text":"","title":"Functions"},{"location":"types/niPackedColor/#new","text":"Creates a new niPackedColor object. local color = niPackedColor . new ( r , g , b , a ) Parameters : r (integer): Default : 0 . The red value for the color. g (integer): Default : 0 . The green value for the color. b (integer): Default : 0 . The blue value for the color. a (integer): Default : 0 . The alpha value for the color. Returns : color ( niPackedColor )","title":"new"},{"location":"types/niParticleBomb/","text":"niParticleBomb \u2693\ufe0e This modifer applies acceleration to particles in the parent niParticleSystemController. This type inherits the following: niParticleModifier , niObject Properties \u2693\ufe0e controller \u2693\ufe0e Access to the generic time controller for particle systems. Returns : result ( niParticleSystemController ) decay \u2693\ufe0e The niParticleBomb modifers with decayType linear and exponential have their strength attenuated with distance. No attenuation occurs within the .decay distance of the niParticelBomb's position. Returns : result (number) decayType \u2693\ufe0e Controls how the force applied attenuates with distance. Maps to values in ni.particleBombDecayType table. Returns : result (integer) deltaV \u2693\ufe0e The acceleration applied to the particles. Returns : result (number) direction \u2693\ufe0e The direction of applied acceleration used for cylindrical and planar particle bombs. Returns : result ( tes3vector3 ) duration \u2693\ufe0e Controls how long this modifer affects the particles. Returns : result (number) next \u2693\ufe0e Access to the next attached modifier. Returns : result ( niParticleModifier ) position \u2693\ufe0e This is the center of force that spherical and cylindrical particle bombs apply to the particles. Returns : result ( tes3vector3 ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) start \u2693\ufe0e The time at which this modifier start affecting the particles. Returns : result (number) symmetryType \u2693\ufe0e Controls how this modifer affects the particles. Spherical modifer operates around the point defined by .position property. Cylindrical modifer applied the force parallel to the .direction vector, centered at position property. Planar modifers operate perpendicular to the .direction vector. Maps to values in ni.particleBombSymmetryType table. Returns : result (integer) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"niParticleBomb"},{"location":"types/niParticleBomb/#niparticlebomb","text":"This modifer applies acceleration to particles in the parent niParticleSystemController. This type inherits the following: niParticleModifier , niObject","title":"niParticleBomb"},{"location":"types/niParticleBomb/#properties","text":"","title":"Properties"},{"location":"types/niParticleBomb/#controller","text":"Access to the generic time controller for particle systems. Returns : result ( niParticleSystemController )","title":"controller"},{"location":"types/niParticleBomb/#decay","text":"The niParticleBomb modifers with decayType linear and exponential have their strength attenuated with distance. No attenuation occurs within the .decay distance of the niParticelBomb's position. Returns : result (number)","title":"decay"},{"location":"types/niParticleBomb/#decaytype","text":"Controls how the force applied attenuates with distance. Maps to values in ni.particleBombDecayType table. Returns : result (integer)","title":"decayType"},{"location":"types/niParticleBomb/#deltav","text":"The acceleration applied to the particles. Returns : result (number)","title":"deltaV"},{"location":"types/niParticleBomb/#direction","text":"The direction of applied acceleration used for cylindrical and planar particle bombs. Returns : result ( tes3vector3 )","title":"direction"},{"location":"types/niParticleBomb/#duration","text":"Controls how long this modifer affects the particles. Returns : result (number)","title":"duration"},{"location":"types/niParticleBomb/#next","text":"Access to the next attached modifier. Returns : result ( niParticleModifier )","title":"next"},{"location":"types/niParticleBomb/#position","text":"This is the center of force that spherical and cylindrical particle bombs apply to the particles. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/niParticleBomb/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niParticleBomb/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niParticleBomb/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niParticleBomb/#start","text":"The time at which this modifier start affecting the particles. Returns : result (number)","title":"start"},{"location":"types/niParticleBomb/#symmetrytype","text":"Controls how this modifer affects the particles. Spherical modifer operates around the point defined by .position property. Cylindrical modifer applied the force parallel to the .direction vector, centered at position property. Planar modifers operate perpendicular to the .direction vector. Maps to values in ni.particleBombSymmetryType table. Returns : result (integer)","title":"symmetryType"},{"location":"types/niParticleBomb/#methods","text":"","title":"Methods"},{"location":"types/niParticleBomb/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niParticleBomb/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niParticleBomb/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niParticleBomb/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niParticleCollider/","text":"niParticleCollider \u2693\ufe0e This modifier provides framework for collision testing. The classes derived from this one: niSphericalCollider, and niPlanarCollider, test for collisions. Each frame a niParticleSystemController traverses its list of niParticlesColliders to determine if any collisions happened. This type inherits the following: niParticleModifier , niObject Properties \u2693\ufe0e collisionPoint \u2693\ufe0e Returns : result ( tes3vector3 ) collisionTime \u2693\ufe0e Returns : result (number) controller \u2693\ufe0e Access to the generic time controller for particle systems. Returns : result ( niParticleSystemController ) dieOnCollide \u2693\ufe0e If this flag is true a particle that collides with something will be destroyed. Returns : result (boolean) next \u2693\ufe0e Access to the next attached modifier. Returns : result ( niParticleModifier ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) restitution \u2693\ufe0e The fraction of the original amount of energy the particle retains after a collision. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) spawnOnCollide \u2693\ufe0e This flag controls if a new particle will be spawned on a collision. The new particle is spawned at the position of the old particle with the same attributes. Returns : result (boolean) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"niParticleCollider"},{"location":"types/niParticleCollider/#niparticlecollider","text":"This modifier provides framework for collision testing. The classes derived from this one: niSphericalCollider, and niPlanarCollider, test for collisions. Each frame a niParticleSystemController traverses its list of niParticlesColliders to determine if any collisions happened. This type inherits the following: niParticleModifier , niObject","title":"niParticleCollider"},{"location":"types/niParticleCollider/#properties","text":"","title":"Properties"},{"location":"types/niParticleCollider/#collisionpoint","text":"Returns : result ( tes3vector3 )","title":"collisionPoint"},{"location":"types/niParticleCollider/#collisiontime","text":"Returns : result (number)","title":"collisionTime"},{"location":"types/niParticleCollider/#controller","text":"Access to the generic time controller for particle systems. Returns : result ( niParticleSystemController )","title":"controller"},{"location":"types/niParticleCollider/#dieoncollide","text":"If this flag is true a particle that collides with something will be destroyed. Returns : result (boolean)","title":"dieOnCollide"},{"location":"types/niParticleCollider/#next","text":"Access to the next attached modifier. Returns : result ( niParticleModifier )","title":"next"},{"location":"types/niParticleCollider/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niParticleCollider/#restitution","text":"The fraction of the original amount of energy the particle retains after a collision. Returns : result (number)","title":"restitution"},{"location":"types/niParticleCollider/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niParticleCollider/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niParticleCollider/#spawnoncollide","text":"This flag controls if a new particle will be spawned on a collision. The new particle is spawned at the position of the old particle with the same attributes. Returns : result (boolean)","title":"spawnOnCollide"},{"location":"types/niParticleCollider/#methods","text":"","title":"Methods"},{"location":"types/niParticleCollider/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niParticleCollider/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niParticleCollider/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niParticleCollider/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niParticleColorModifier/","text":"niParticleColorModifier \u2693\ufe0e This modifer alters the color of each particle as it ages. This type inherits the following: niParticleModifier , niObject Properties \u2693\ufe0e colorData \u2693\ufe0e The parameters for this modifier. Returns : result ( niColorData ) controller \u2693\ufe0e Access to the generic time controller for particle systems. Returns : result ( niParticleSystemController ) next \u2693\ufe0e Access to the next attached modifier. Returns : result ( niParticleModifier ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"niParticleColorModifier"},{"location":"types/niParticleColorModifier/#niparticlecolormodifier","text":"This modifer alters the color of each particle as it ages. This type inherits the following: niParticleModifier , niObject","title":"niParticleColorModifier"},{"location":"types/niParticleColorModifier/#properties","text":"","title":"Properties"},{"location":"types/niParticleColorModifier/#colordata","text":"The parameters for this modifier. Returns : result ( niColorData )","title":"colorData"},{"location":"types/niParticleColorModifier/#controller","text":"Access to the generic time controller for particle systems. Returns : result ( niParticleSystemController )","title":"controller"},{"location":"types/niParticleColorModifier/#next","text":"Access to the next attached modifier. Returns : result ( niParticleModifier )","title":"next"},{"location":"types/niParticleColorModifier/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niParticleColorModifier/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niParticleColorModifier/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niParticleColorModifier/#methods","text":"","title":"Methods"},{"location":"types/niParticleColorModifier/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niParticleColorModifier/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niParticleColorModifier/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niParticleColorModifier/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niParticleGrowFade/","text":"niParticleGrowFade \u2693\ufe0e This modifer alters the size and fading of the particles. The growing starts once a particle is first created, so that when a particle appears it will grow from nothing to its full size. Particles fade out of existance when they die, changing their size from full to nothing. If the two effects overlap, the particle will be smaller (to extinguish dying particles). This type inherits the following: niParticleModifier , niObject Properties \u2693\ufe0e controller \u2693\ufe0e Access to the generic time controller for particle systems. Returns : result ( niParticleSystemController ) fade \u2693\ufe0e The time over which the particles grow smaller, and at the end completely disappear. Returns : result (number) grow \u2693\ufe0e The time over which the particles grow larger. Returns : result (number) next \u2693\ufe0e Access to the next attached modifier. Returns : result ( niParticleModifier ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"niParticleGrowFade"},{"location":"types/niParticleGrowFade/#niparticlegrowfade","text":"This modifer alters the size and fading of the particles. The growing starts once a particle is first created, so that when a particle appears it will grow from nothing to its full size. Particles fade out of existance when they die, changing their size from full to nothing. If the two effects overlap, the particle will be smaller (to extinguish dying particles). This type inherits the following: niParticleModifier , niObject","title":"niParticleGrowFade"},{"location":"types/niParticleGrowFade/#properties","text":"","title":"Properties"},{"location":"types/niParticleGrowFade/#controller","text":"Access to the generic time controller for particle systems. Returns : result ( niParticleSystemController )","title":"controller"},{"location":"types/niParticleGrowFade/#fade","text":"The time over which the particles grow smaller, and at the end completely disappear. Returns : result (number)","title":"fade"},{"location":"types/niParticleGrowFade/#grow","text":"The time over which the particles grow larger. Returns : result (number)","title":"grow"},{"location":"types/niParticleGrowFade/#next","text":"Access to the next attached modifier. Returns : result ( niParticleModifier )","title":"next"},{"location":"types/niParticleGrowFade/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niParticleGrowFade/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niParticleGrowFade/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niParticleGrowFade/#methods","text":"","title":"Methods"},{"location":"types/niParticleGrowFade/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niParticleGrowFade/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niParticleGrowFade/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niParticleGrowFade/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niParticleModifier/","text":"niParticleModifier \u2693\ufe0e Abstract base class for particle system modifiers. It affects every particle in a particle system. This type inherits the following: niObject Properties \u2693\ufe0e controller \u2693\ufe0e Access to the generic time controller for particle systems. Returns : result ( niParticleSystemController ) next \u2693\ufe0e Access to the next attached modifier. Returns : result ( niParticleModifier ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"niParticleModifier"},{"location":"types/niParticleModifier/#niparticlemodifier","text":"Abstract base class for particle system modifiers. It affects every particle in a particle system. This type inherits the following: niObject","title":"niParticleModifier"},{"location":"types/niParticleModifier/#properties","text":"","title":"Properties"},{"location":"types/niParticleModifier/#controller","text":"Access to the generic time controller for particle systems. Returns : result ( niParticleSystemController )","title":"controller"},{"location":"types/niParticleModifier/#next","text":"Access to the next attached modifier. Returns : result ( niParticleModifier )","title":"next"},{"location":"types/niParticleModifier/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niParticleModifier/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niParticleModifier/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niParticleModifier/#methods","text":"","title":"Methods"},{"location":"types/niParticleModifier/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niParticleModifier/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niParticleModifier/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niParticleModifier/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niParticleRotation/","text":"niParticleRotation \u2693\ufe0e This modifier rotates particles a constant rate. This type inherits the following: niParticleModifier , niObject Properties \u2693\ufe0e controller \u2693\ufe0e Access to the generic time controller for particle systems. Returns : result ( niParticleSystemController ) initialAxis \u2693\ufe0e The axis of rotation for the particles. If .randomInitialAxis is set to true then this won't be used. Returns : result ( tes3vector3 ) next \u2693\ufe0e Access to the next attached modifier. Returns : result ( niParticleModifier ) randomInitialAxis \u2693\ufe0e If set to true, random axis of rotation will be used to rotate each particle. Returns : result (boolean) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotationSpeed \u2693\ufe0e The speed at which each particle rotates. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"niParticleRotation"},{"location":"types/niParticleRotation/#niparticlerotation","text":"This modifier rotates particles a constant rate. This type inherits the following: niParticleModifier , niObject","title":"niParticleRotation"},{"location":"types/niParticleRotation/#properties","text":"","title":"Properties"},{"location":"types/niParticleRotation/#controller","text":"Access to the generic time controller for particle systems. Returns : result ( niParticleSystemController )","title":"controller"},{"location":"types/niParticleRotation/#initialaxis","text":"The axis of rotation for the particles. If .randomInitialAxis is set to true then this won't be used. Returns : result ( tes3vector3 )","title":"initialAxis"},{"location":"types/niParticleRotation/#next","text":"Access to the next attached modifier. Returns : result ( niParticleModifier )","title":"next"},{"location":"types/niParticleRotation/#randominitialaxis","text":"If set to true, random axis of rotation will be used to rotate each particle. Returns : result (boolean)","title":"randomInitialAxis"},{"location":"types/niParticleRotation/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niParticleRotation/#rotationspeed","text":"The speed at which each particle rotates. Returns : result (number)","title":"rotationSpeed"},{"location":"types/niParticleRotation/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niParticleRotation/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niParticleRotation/#methods","text":"","title":"Methods"},{"location":"types/niParticleRotation/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niParticleRotation/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niParticleRotation/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niParticleRotation/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niParticleSystemController/","text":"niParticleSystemController \u2693\ufe0e The niParticleSystemController animates an niParticles-based object. The controller handles birth and death, spawning and motion. A particle spawn can be set to occur when the particle undergoes a specific condition, such as colliding with an object or dying. When such an event happens, naw particles are generated at the position of the old particle with the same attributes as the original particle. This behaviour will continue until the number of spawn generations equals the number of generations allowed. The number of new particles, precentage of particles that undergo spawning, speed and directional chaos values can be specified. This type inherits the following: niTimeController , niObject Properties \u2693\ufe0e active \u2693\ufe0e If the controller is active. When inactive, the target does not get updated and animation timing does not advance. Returns : result (boolean) activeParticleCount \u2693\ufe0e Read-only . The number of active particles in the initial particles array. Returns : result (integer) animTimingType \u2693\ufe0e How the time parameter passed to the update function is treated. Type 0 is the default, which treats the update time as a delta time. Type 1 treats the update time an offset from the start of the animation. Maps to values in ni.animType table. Returns : result (integer) birthRate \u2693\ufe0e The rate at which new particles are generated. Returns : result (number) currentParticleIndex \u2693\ufe0e Read-only . Returns : result (integer) cycleType \u2693\ufe0e The animation cycle type. Type 0 is looping, type 2 is reverse, type 4 is clamped. Maps to values in ni.animCycleType table. Returns : result (integer) declinationAngle \u2693\ufe0e The declination angle of the velocity vector of newly spawned particles from the positive Z axis in radians. The range is [0, PI], where declination angle of 0 will set the initial velocity vector to [0, 0, 1]. Declination angle of PI will set the initial velocity vector to [0, 0, -1]. Returns : result (number) declinationAngleVariation \u2693\ufe0e The variation of the initial declination angle. The initial velocity declination will be evenly distributed over the [ .declinationAngle - .declinationAngleVariation / 2 , .declinationAngle + .declinationAngleVariation / 2 ] range. Returns : result (number) emitStartTime \u2693\ufe0e The time value at which the niParticleSystemController will start emitting particles. If this value is less than the .startTime variable (inherited from niTimeController), the controller will perform a run-up for the amount of time indicated by the difference. Returns : result (number) emitStopTime \u2693\ufe0e The time value at which the controller stops emitting the particles. Returns : result (number) emitter \u2693\ufe0e The object that emits the particles. The emitter volume is transformed into the world coordinates of the emitter before new particles are generated. This allows the transforms of the emitter to change without affecting the transforms of all the particles in the system. Returns : result ( niObject ) emitterDepth \u2693\ufe0e Determines the dimensions of the volume from which new particles are generated. Returns : result (number) emitterHeight \u2693\ufe0e Determines the dimensions of the volume from which new particles are generated. Returns : result (number) emitterModifiers \u2693\ufe0e Modifiers that will influence the particle system by modifying the emmiting object. Returns : result ( niObject []) emitterWidth \u2693\ufe0e Determines the dimensions of the volume from which new particles are generated. Returns : result (number) firstTime \u2693\ufe0e Returns : result (integer) frequency \u2693\ufe0e The animation controller's frequency value. It is a scaling value used to convert from update time units to keyframe time units, if necessary. Returns : result (number) highKeyFrame \u2693\ufe0e This is the end animation key time of the animation controller. Returns : result (number) initialColor \u2693\ufe0e The initial color given to the newly created particles. Returns : result ( niPackedColor ) initialNormal \u2693\ufe0e Default : {1.0, 0.0, 0.0} . The normal vector given to the newly created particles. Returns : result ( tes3vector3 ) initialSize \u2693\ufe0e The initial size of the new particles. Returns : result (number) lastEmit \u2693\ufe0e The timestamp at which the last emitted particles were created. Returns : result (number) lastScaledTime \u2693\ufe0e This function returns the last scaled time computed by this controller. The scaled time takes the frequency and phase into account, along with the cycleType and animTimingType . This is the last value used to interpolate animation keys. Returns : result (number) lastTime \u2693\ufe0e No description. Returns : result (number) lifespan \u2693\ufe0e The life spane for each particle. Returns : result (number) lifespanVariance \u2693\ufe0e The variation of the particle life span. It will be evenly distributed over the [ .lifespan - .lifespanVariance / 2 , .lifespan + .lifespanVariance / 2 ] range. Returns : result (number) lowKeyFrame \u2693\ufe0e This is the beginning animation key time of the animation controller. Returns : result (number) nextController \u2693\ufe0e The next animation controller in the list of controllers containing the calling controller. Returns : result ( niTimeController ) particleColliders \u2693\ufe0e Collider modifiers that will influence the individual particles. Returns : result ( niParticleCollider []) particleDataCount \u2693\ufe0e Read-only . The number of initial particles. Returns : result (integer) particleModifiers \u2693\ufe0e Modifiers that will influence the individual particles. Returns : result ( niParticleModifier []) phase \u2693\ufe0e The phase value. It is an offset applied to the animation's update time, in seconds. Returns : result (number) planarAngle \u2693\ufe0e The planar angle (around the Z axis from the positive X axis) that will serve as the plane in which the declination will occur. The expected range of the planar angle is [0, 2PI). Returns : result (number) planarAngleVariation \u2693\ufe0e The variation of the initial planar angle. The planar angle will be evenly distributed over the [ .planarAngle - .planarAngleVariation / 2 , .planarAngle + .planarAngleVariation / 2 ] range. Returns : result (number) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) resetParticleSystem \u2693\ufe0e Controls whether the system will be reset when the niParticleSystemController loops. If this flag is set to true , existing particles will be eliminated when the controller loops, and any run-up indicated by .emitStartTime variable will occur. Otherwise, the controller will simply continue running from the beginning of the loop, and the existing particles will continue to run until they die out naturally. Returns : result (boolean) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scaledLastTime \u2693\ufe0e Returns : result (number) spawnDirectionChaos \u2693\ufe0e Controls the change in direction that new particles generated by a spawn event will have. A value of 0.0 indicates no change in direction, and a value of 1.0 indicates a 0 % to 100 % change in direction. Returns : result (number) spawnGenerationsCount \u2693\ufe0e The number of spawn generations a particle can go through. Returns : result (integer) spawnMultiplier \u2693\ufe0e The number of new particles generated on a spawn event. Returns : result (integer) spawnOnDeath \u2693\ufe0e This flag indicates whether a particle spawn event will occur upon particle death. Returns : result (boolean) spawnPercentage \u2693\ufe0e The percentage of the particles that will actually spawn when a spawn event occurs Expected values are in range [0.0, 1.0]. Returns : result (number) spawnSpeedChaos \u2693\ufe0e Controls the change in speed that new particles generated by a spawn event will have. A value of 0.0 indicates no change in speed, a value of 1.0 indicates a 0 % to 100 % increase in speed, and a value of -1.0 indicates 0 % to 100 % decrease in speed. Returns : result (number) speed \u2693\ufe0e This is the initial speed of the newly spawned particles. Returns : result (number) speedVariation \u2693\ufe0e The variation of the initial velocity. The initial velocity will be evenly distributed over the [ .speed - .speedVariation / 2 , .speed + .speedVariation / 2 ] range. Returns : result (number) startTime \u2693\ufe0e The time at which the animation controller starts playing its animation. Returns : result (number) staticBounds \u2693\ufe0e This flag controls whether or not the controller uses precomputed static bounding volumes for each frame of the animation. Returns : result (boolean) target \u2693\ufe0e Read-only . The scene graph object that this animation controller is to animate. Returns : result ( niObjectNET ) useBirthRate \u2693\ufe0e If this flag is set to false , the maximal sustainable birth rate based on the life span of the particles will be used. Otherwise, the value of .birthRate property will be used. Returns : result (boolean) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setTarget \u2693\ufe0e This method assigns a new target to the animation controller. myObject : setTarget ( target ) Parameters : target ( niObjectNET ): The new target to assign. start \u2693\ufe0e Starts the controller at the specified time. Intended for controllers with animTimingType of 1. myObject : start ( time ) Parameters : time (number) stop \u2693\ufe0e Stops the controller. If you only want to pause the controller, use the update property. myObject : stop ()","title":"niParticleSystemController"},{"location":"types/niParticleSystemController/#niparticlesystemcontroller","text":"The niParticleSystemController animates an niParticles-based object. The controller handles birth and death, spawning and motion. A particle spawn can be set to occur when the particle undergoes a specific condition, such as colliding with an object or dying. When such an event happens, naw particles are generated at the position of the old particle with the same attributes as the original particle. This behaviour will continue until the number of spawn generations equals the number of generations allowed. The number of new particles, precentage of particles that undergo spawning, speed and directional chaos values can be specified. This type inherits the following: niTimeController , niObject","title":"niParticleSystemController"},{"location":"types/niParticleSystemController/#properties","text":"","title":"Properties"},{"location":"types/niParticleSystemController/#active","text":"If the controller is active. When inactive, the target does not get updated and animation timing does not advance. Returns : result (boolean)","title":"active"},{"location":"types/niParticleSystemController/#activeparticlecount","text":"Read-only . The number of active particles in the initial particles array. Returns : result (integer)","title":"activeParticleCount"},{"location":"types/niParticleSystemController/#animtimingtype","text":"How the time parameter passed to the update function is treated. Type 0 is the default, which treats the update time as a delta time. Type 1 treats the update time an offset from the start of the animation. Maps to values in ni.animType table. Returns : result (integer)","title":"animTimingType"},{"location":"types/niParticleSystemController/#birthrate","text":"The rate at which new particles are generated. Returns : result (number)","title":"birthRate"},{"location":"types/niParticleSystemController/#currentparticleindex","text":"Read-only . Returns : result (integer)","title":"currentParticleIndex"},{"location":"types/niParticleSystemController/#cycletype","text":"The animation cycle type. Type 0 is looping, type 2 is reverse, type 4 is clamped. Maps to values in ni.animCycleType table. Returns : result (integer)","title":"cycleType"},{"location":"types/niParticleSystemController/#declinationangle","text":"The declination angle of the velocity vector of newly spawned particles from the positive Z axis in radians. The range is [0, PI], where declination angle of 0 will set the initial velocity vector to [0, 0, 1]. Declination angle of PI will set the initial velocity vector to [0, 0, -1]. Returns : result (number)","title":"declinationAngle"},{"location":"types/niParticleSystemController/#declinationanglevariation","text":"The variation of the initial declination angle. The initial velocity declination will be evenly distributed over the [ .declinationAngle - .declinationAngleVariation / 2 , .declinationAngle + .declinationAngleVariation / 2 ] range. Returns : result (number)","title":"declinationAngleVariation"},{"location":"types/niParticleSystemController/#emitstarttime","text":"The time value at which the niParticleSystemController will start emitting particles. If this value is less than the .startTime variable (inherited from niTimeController), the controller will perform a run-up for the amount of time indicated by the difference. Returns : result (number)","title":"emitStartTime"},{"location":"types/niParticleSystemController/#emitstoptime","text":"The time value at which the controller stops emitting the particles. Returns : result (number)","title":"emitStopTime"},{"location":"types/niParticleSystemController/#emitter","text":"The object that emits the particles. The emitter volume is transformed into the world coordinates of the emitter before new particles are generated. This allows the transforms of the emitter to change without affecting the transforms of all the particles in the system. Returns : result ( niObject )","title":"emitter"},{"location":"types/niParticleSystemController/#emitterdepth","text":"Determines the dimensions of the volume from which new particles are generated. Returns : result (number)","title":"emitterDepth"},{"location":"types/niParticleSystemController/#emitterheight","text":"Determines the dimensions of the volume from which new particles are generated. Returns : result (number)","title":"emitterHeight"},{"location":"types/niParticleSystemController/#emittermodifiers","text":"Modifiers that will influence the particle system by modifying the emmiting object. Returns : result ( niObject [])","title":"emitterModifiers"},{"location":"types/niParticleSystemController/#emitterwidth","text":"Determines the dimensions of the volume from which new particles are generated. Returns : result (number)","title":"emitterWidth"},{"location":"types/niParticleSystemController/#firsttime","text":"Returns : result (integer)","title":"firstTime"},{"location":"types/niParticleSystemController/#frequency","text":"The animation controller's frequency value. It is a scaling value used to convert from update time units to keyframe time units, if necessary. Returns : result (number)","title":"frequency"},{"location":"types/niParticleSystemController/#highkeyframe","text":"This is the end animation key time of the animation controller. Returns : result (number)","title":"highKeyFrame"},{"location":"types/niParticleSystemController/#initialcolor","text":"The initial color given to the newly created particles. Returns : result ( niPackedColor )","title":"initialColor"},{"location":"types/niParticleSystemController/#initialnormal","text":"Default : {1.0, 0.0, 0.0} . The normal vector given to the newly created particles. Returns : result ( tes3vector3 )","title":"initialNormal"},{"location":"types/niParticleSystemController/#initialsize","text":"The initial size of the new particles. Returns : result (number)","title":"initialSize"},{"location":"types/niParticleSystemController/#lastemit","text":"The timestamp at which the last emitted particles were created. Returns : result (number)","title":"lastEmit"},{"location":"types/niParticleSystemController/#lastscaledtime","text":"This function returns the last scaled time computed by this controller. The scaled time takes the frequency and phase into account, along with the cycleType and animTimingType . This is the last value used to interpolate animation keys. Returns : result (number)","title":"lastScaledTime"},{"location":"types/niParticleSystemController/#lasttime","text":"No description. Returns : result (number)","title":"lastTime"},{"location":"types/niParticleSystemController/#lifespan","text":"The life spane for each particle. Returns : result (number)","title":"lifespan"},{"location":"types/niParticleSystemController/#lifespanvariance","text":"The variation of the particle life span. It will be evenly distributed over the [ .lifespan - .lifespanVariance / 2 , .lifespan + .lifespanVariance / 2 ] range. Returns : result (number)","title":"lifespanVariance"},{"location":"types/niParticleSystemController/#lowkeyframe","text":"This is the beginning animation key time of the animation controller. Returns : result (number)","title":"lowKeyFrame"},{"location":"types/niParticleSystemController/#nextcontroller","text":"The next animation controller in the list of controllers containing the calling controller. Returns : result ( niTimeController )","title":"nextController"},{"location":"types/niParticleSystemController/#particlecolliders","text":"Collider modifiers that will influence the individual particles. Returns : result ( niParticleCollider [])","title":"particleColliders"},{"location":"types/niParticleSystemController/#particledatacount","text":"Read-only . The number of initial particles. Returns : result (integer)","title":"particleDataCount"},{"location":"types/niParticleSystemController/#particlemodifiers","text":"Modifiers that will influence the individual particles. Returns : result ( niParticleModifier [])","title":"particleModifiers"},{"location":"types/niParticleSystemController/#phase","text":"The phase value. It is an offset applied to the animation's update time, in seconds. Returns : result (number)","title":"phase"},{"location":"types/niParticleSystemController/#planarangle","text":"The planar angle (around the Z axis from the positive X axis) that will serve as the plane in which the declination will occur. The expected range of the planar angle is [0, 2PI). Returns : result (number)","title":"planarAngle"},{"location":"types/niParticleSystemController/#planaranglevariation","text":"The variation of the initial planar angle. The planar angle will be evenly distributed over the [ .planarAngle - .planarAngleVariation / 2 , .planarAngle + .planarAngleVariation / 2 ] range. Returns : result (number)","title":"planarAngleVariation"},{"location":"types/niParticleSystemController/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niParticleSystemController/#resetparticlesystem","text":"Controls whether the system will be reset when the niParticleSystemController loops. If this flag is set to true , existing particles will be eliminated when the controller loops, and any run-up indicated by .emitStartTime variable will occur. Otherwise, the controller will simply continue running from the beginning of the loop, and the existing particles will continue to run until they die out naturally. Returns : result (boolean)","title":"resetParticleSystem"},{"location":"types/niParticleSystemController/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niParticleSystemController/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niParticleSystemController/#scaledlasttime","text":"Returns : result (number)","title":"scaledLastTime"},{"location":"types/niParticleSystemController/#spawndirectionchaos","text":"Controls the change in direction that new particles generated by a spawn event will have. A value of 0.0 indicates no change in direction, and a value of 1.0 indicates a 0 % to 100 % change in direction. Returns : result (number)","title":"spawnDirectionChaos"},{"location":"types/niParticleSystemController/#spawngenerationscount","text":"The number of spawn generations a particle can go through. Returns : result (integer)","title":"spawnGenerationsCount"},{"location":"types/niParticleSystemController/#spawnmultiplier","text":"The number of new particles generated on a spawn event. Returns : result (integer)","title":"spawnMultiplier"},{"location":"types/niParticleSystemController/#spawnondeath","text":"This flag indicates whether a particle spawn event will occur upon particle death. Returns : result (boolean)","title":"spawnOnDeath"},{"location":"types/niParticleSystemController/#spawnpercentage","text":"The percentage of the particles that will actually spawn when a spawn event occurs Expected values are in range [0.0, 1.0]. Returns : result (number)","title":"spawnPercentage"},{"location":"types/niParticleSystemController/#spawnspeedchaos","text":"Controls the change in speed that new particles generated by a spawn event will have. A value of 0.0 indicates no change in speed, a value of 1.0 indicates a 0 % to 100 % increase in speed, and a value of -1.0 indicates 0 % to 100 % decrease in speed. Returns : result (number)","title":"spawnSpeedChaos"},{"location":"types/niParticleSystemController/#speed","text":"This is the initial speed of the newly spawned particles. Returns : result (number)","title":"speed"},{"location":"types/niParticleSystemController/#speedvariation","text":"The variation of the initial velocity. The initial velocity will be evenly distributed over the [ .speed - .speedVariation / 2 , .speed + .speedVariation / 2 ] range. Returns : result (number)","title":"speedVariation"},{"location":"types/niParticleSystemController/#starttime","text":"The time at which the animation controller starts playing its animation. Returns : result (number)","title":"startTime"},{"location":"types/niParticleSystemController/#staticbounds","text":"This flag controls whether or not the controller uses precomputed static bounding volumes for each frame of the animation. Returns : result (boolean)","title":"staticBounds"},{"location":"types/niParticleSystemController/#target","text":"Read-only . The scene graph object that this animation controller is to animate. Returns : result ( niObjectNET )","title":"target"},{"location":"types/niParticleSystemController/#usebirthrate","text":"If this flag is set to false , the maximal sustainable birth rate based on the life span of the particles will be used. Otherwise, the value of .birthRate property will be used. Returns : result (boolean)","title":"useBirthRate"},{"location":"types/niParticleSystemController/#methods","text":"","title":"Methods"},{"location":"types/niParticleSystemController/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niParticleSystemController/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niParticleSystemController/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niParticleSystemController/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niParticleSystemController/#settarget","text":"This method assigns a new target to the animation controller. myObject : setTarget ( target ) Parameters : target ( niObjectNET ): The new target to assign.","title":"setTarget"},{"location":"types/niParticleSystemController/#start","text":"Starts the controller at the specified time. Intended for controllers with animTimingType of 1. myObject : start ( time ) Parameters : time (number)","title":"start"},{"location":"types/niParticleSystemController/#stop","text":"Stops the controller. If you only want to pause the controller, use the update property. myObject : stop ()","title":"stop"},{"location":"types/niParticles/","text":"niParticles \u2693\ufe0e An object that represent collections of large numbers of small point-like objects, designed for dynamic effects like fountains, waterfalls, snow, explosions, etc. This type inherits the following: niTriBasedGeometry , niGeometry , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) data \u2693\ufe0e The niParticlesData of the object. Manipulation should not be done directly. Instead, consider copying the data and assigning it to this shape. Returns : result ( niParticlesData ) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) velocity \u2693\ufe0e The object's local velocity. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) worldBoundOrigin \u2693\ufe0e The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 ) worldBoundRadius \u2693\ufe0e The radius of the object's bounds. Returns : result (number) worldTransform \u2693\ufe0e The object's transformations in the world space. Returns : result ( tes3transform ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) attachProperty \u2693\ufe0e Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. myObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) detachAllProperties \u2693\ufe0e Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty []) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) propagatePositionChange \u2693\ufe0e Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? updateEffects \u2693\ufe0e Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. myObject : updateProperties ()","title":"niParticles"},{"location":"types/niParticles/#niparticles","text":"An object that represent collections of large numbers of small point-like objects, designed for dynamic effects like fountains, waterfalls, snow, explosions, etc. This type inherits the following: niTriBasedGeometry , niGeometry , niAVObject , niObjectNET , niObject","title":"niParticles"},{"location":"types/niParticles/#properties","text":"","title":"Properties"},{"location":"types/niParticles/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niParticles/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niParticles/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niParticles/#data","text":"The niParticlesData of the object. Manipulation should not be done directly. Instead, consider copying the data and assigning it to this shape. Returns : result ( niParticlesData )","title":"data"},{"location":"types/niParticles/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niParticles/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niParticles/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niParticles/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niParticles/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niParticles/#parent","text":"Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niParticles/#properties_1","text":"Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niParticles/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niParticles/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niParticles/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niParticles/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niParticles/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niParticles/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niParticles/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niParticles/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niParticles/#velocity","text":"The object's local velocity. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/niParticles/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niParticles/#worldboundorigin","text":"The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 )","title":"worldBoundOrigin"},{"location":"types/niParticles/#worldboundradius","text":"The radius of the object's bounds. Returns : result (number)","title":"worldBoundRadius"},{"location":"types/niParticles/#worldtransform","text":"The object's transformations in the world space. Returns : result ( tes3transform )","title":"worldTransform"},{"location":"types/niParticles/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil)","title":"zBufferProperty"},{"location":"types/niParticles/#methods","text":"","title":"Methods"},{"location":"types/niParticles/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niParticles/#attachproperty","text":"Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niParticles/#cleartransforms","text":"Resets the object's local transform. myObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niParticles/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niParticles/#detachallproperties","text":"Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty [])","title":"detachAllProperties"},{"location":"types/niParticles/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niParticles/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niParticles/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niParticles/#getproperty","text":"Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niParticles/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niParticles/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niParticles/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niParticles/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niParticles/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niParticles/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niParticles/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niParticles/#propagatepositionchange","text":"Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"propagatePositionChange"},{"location":"types/niParticles/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niParticles/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niParticles/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niParticles/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niParticles/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niParticles/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niParticles/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"update"},{"location":"types/niParticles/#updateeffects","text":"Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects ()","title":"updateEffects"},{"location":"types/niParticles/#updateproperties","text":"Update all attached properties. myObject : updateProperties ()","title":"updateProperties"},{"location":"types/niParticlesData/","text":"niParticlesData \u2693\ufe0e niParticlesData objects contain the geometry data necessary to render a niParticles object. When a niParticles-based object is created, the actual geometry data is stored in an attached niParticlesData object. There are two ways to adjust particle size within an niParticles object. The radius affects all the particles in this niParticlesData object. There is also a size for each particle (available as sizes array), which is a ratio between 0.0 and 1.0 that is multiplied by the radius to obtain the final rendered size of the particle. This type inherits the following: niTriBasedGeometryData , niGeometryData , niObject Properties \u2693\ufe0e activeCount \u2693\ufe0e Read-only . The number of active particles. Returns : result (number) activeTriangleCount \u2693\ufe0e The active triangle count of the object. Returns : result (number) bounds \u2693\ufe0e The model-space bounding sphere of the object. Returns : result (niBound) colors \u2693\ufe0e Read-only . The vertex colors for the object. The length of the array is equal to vertexCount . Returns : result ( niPackedColor []) normals \u2693\ufe0e Read-only . The list of unitized, model-space vertex normals for the object. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 []) radius \u2693\ufe0e Read-only . The radius of the particles. Returns : result (number) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) sizes \u2693\ufe0e Read-only . The particle sizes. The length of the array is equal to vertexCount . Returns : result (number[]) texCoords \u2693\ufe0e Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 []) textures \u2693\ufe0e Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 []) textureSets \u2693\ufe0e The number of texture coordinate sets in the data. Returns : result (number) triangleCount \u2693\ufe0e Read-only . The triangle count of the object. Returns : result (number) uniqueID \u2693\ufe0e Read-only . A unique ID for this model, assigned at model creation. Returns : result (number) vertexCount \u2693\ufe0e Read-only . The vertex count for the object. Returns : result (number) vertices \u2693\ufe0e Read-only . The array of vertex position data. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 []) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) markAsChanged \u2693\ufe0e Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data. If you have altered vertex positions, you may need to also call updateModelBound _. You should call it if vertices have been moved outside the bounds of the original model. myObject : markAsChanged () saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. updateModelBound \u2693\ufe0e Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function. myObject : updateModelBound ()","title":"niParticlesData"},{"location":"types/niParticlesData/#niparticlesdata","text":"niParticlesData objects contain the geometry data necessary to render a niParticles object. When a niParticles-based object is created, the actual geometry data is stored in an attached niParticlesData object. There are two ways to adjust particle size within an niParticles object. The radius affects all the particles in this niParticlesData object. There is also a size for each particle (available as sizes array), which is a ratio between 0.0 and 1.0 that is multiplied by the radius to obtain the final rendered size of the particle. This type inherits the following: niTriBasedGeometryData , niGeometryData , niObject","title":"niParticlesData"},{"location":"types/niParticlesData/#properties","text":"","title":"Properties"},{"location":"types/niParticlesData/#activecount","text":"Read-only . The number of active particles. Returns : result (number)","title":"activeCount"},{"location":"types/niParticlesData/#activetrianglecount","text":"The active triangle count of the object. Returns : result (number)","title":"activeTriangleCount"},{"location":"types/niParticlesData/#bounds","text":"The model-space bounding sphere of the object. Returns : result (niBound)","title":"bounds"},{"location":"types/niParticlesData/#colors","text":"Read-only . The vertex colors for the object. The length of the array is equal to vertexCount . Returns : result ( niPackedColor [])","title":"colors"},{"location":"types/niParticlesData/#normals","text":"Read-only . The list of unitized, model-space vertex normals for the object. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 [])","title":"normals"},{"location":"types/niParticlesData/#radius","text":"Read-only . The radius of the particles. Returns : result (number)","title":"radius"},{"location":"types/niParticlesData/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niParticlesData/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niParticlesData/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niParticlesData/#sizes","text":"Read-only . The particle sizes. The length of the array is equal to vertexCount . Returns : result (number[])","title":"sizes"},{"location":"types/niParticlesData/#texcoords","text":"Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 [])","title":"texCoords"},{"location":"types/niParticlesData/#textures","text":"Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 [])","title":"textures"},{"location":"types/niParticlesData/#texturesets","text":"The number of texture coordinate sets in the data. Returns : result (number)","title":"textureSets"},{"location":"types/niParticlesData/#trianglecount","text":"Read-only . The triangle count of the object. Returns : result (number)","title":"triangleCount"},{"location":"types/niParticlesData/#uniqueid","text":"Read-only . A unique ID for this model, assigned at model creation. Returns : result (number)","title":"uniqueID"},{"location":"types/niParticlesData/#vertexcount","text":"Read-only . The vertex count for the object. Returns : result (number)","title":"vertexCount"},{"location":"types/niParticlesData/#vertices","text":"Read-only . The array of vertex position data. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 [])","title":"vertices"},{"location":"types/niParticlesData/#methods","text":"","title":"Methods"},{"location":"types/niParticlesData/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niParticlesData/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niParticlesData/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niParticlesData/#markaschanged","text":"Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data. If you have altered vertex positions, you may need to also call updateModelBound _. You should call it if vertices have been moved outside the bounds of the original model. myObject : markAsChanged ()","title":"markAsChanged"},{"location":"types/niParticlesData/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niParticlesData/#updatemodelbound","text":"Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function. myObject : updateModelBound ()","title":"updateModelBound"},{"location":"types/niPick/","text":"niPick \u2693\ufe0e Class used in the picking intersection system within the game engine. Using a ray, the engine performs picking operations on a scene graph or any subtree. Given a ray and a subtree, the subtree is traversed and matching nodes are added to an array. Properties \u2693\ufe0e coordinateType \u2693\ufe0e The coordinate type for the object. Maps to values in ni.pickCoordinateType table. Returns : result (integer) frontOnly \u2693\ufe0e If true, back face triangles (those with clockwise winding order) are culled prior to intersection calculations. If false, intersections of ray with triangles are computed regardless of triangle orientation. Returns : result (boolean) intersectType \u2693\ufe0e The intersect type for the object. Maps to values in ni.pickIntersectType table. Returns : result (integer) lastAddedRecord \u2693\ufe0e The pick record that was last added to the object. Returns : result ( niPickRecord ) observeAppCullFlag \u2693\ufe0e If true, the pick stops if it encounters an object with the 'app culled' flag set. If false, the pick will continue over 'app culled' objects. Returns : result (boolean) pickType \u2693\ufe0e The pick type for the object. Maps to values in ni.pickType table. Returns : result (integer) results \u2693\ufe0e Read-only . The array of pick records obtained by the last call to pickObjects . Returns : result ( niPickRecord []) returnColor \u2693\ufe0e If true, a vertex color value is returned for the point of intersection of triangles during picking. Returns : result (boolean) returnNormal \u2693\ufe0e If true, a unit-length normal is returned for the point of intersection of triangles intersected during the picking. Returns : result (boolean) returnSmoothNormal \u2693\ufe0e If true and if vertex normals exist, then a unit-length normal vector is interpolated from the vertex normals and returned during the picking operation. Returns : result (boolean) returnTexture \u2693\ufe0e If true, texture coordinates are returned for the point of intersection of triangles during the picking operation. Returns : result (boolean) root \u2693\ufe0e The root pick type for the object. Returns : result (niPickType) sortType \u2693\ufe0e The sort type for the object. Maps to values in ni.pickSortType table. Returns : result (integer) Methods \u2693\ufe0e clearResults \u2693\ufe0e Clears the results of any previous picking operation. myObject : clearResults () pickObjects \u2693\ufe0e Performs the picking operation by casting a ray. myObject : pickObjects ( origin , direction , append , maxDistance ) Parameters : origin ( tes3vector3 ): The origin of the ray in world coordinates. direction ( tes3vector3 ) append (boolean): Default : false . This parameter indicates whether the new results are appended to the results array, or if a new array is formed clearing the results array. maxDistance (number): Optional . Default value: 0.0F","title":"niPick"},{"location":"types/niPick/#nipick","text":"Class used in the picking intersection system within the game engine. Using a ray, the engine performs picking operations on a scene graph or any subtree. Given a ray and a subtree, the subtree is traversed and matching nodes are added to an array.","title":"niPick"},{"location":"types/niPick/#properties","text":"","title":"Properties"},{"location":"types/niPick/#coordinatetype","text":"The coordinate type for the object. Maps to values in ni.pickCoordinateType table. Returns : result (integer)","title":"coordinateType"},{"location":"types/niPick/#frontonly","text":"If true, back face triangles (those with clockwise winding order) are culled prior to intersection calculations. If false, intersections of ray with triangles are computed regardless of triangle orientation. Returns : result (boolean)","title":"frontOnly"},{"location":"types/niPick/#intersecttype","text":"The intersect type for the object. Maps to values in ni.pickIntersectType table. Returns : result (integer)","title":"intersectType"},{"location":"types/niPick/#lastaddedrecord","text":"The pick record that was last added to the object. Returns : result ( niPickRecord )","title":"lastAddedRecord"},{"location":"types/niPick/#observeappcullflag","text":"If true, the pick stops if it encounters an object with the 'app culled' flag set. If false, the pick will continue over 'app culled' objects. Returns : result (boolean)","title":"observeAppCullFlag"},{"location":"types/niPick/#picktype","text":"The pick type for the object. Maps to values in ni.pickType table. Returns : result (integer)","title":"pickType"},{"location":"types/niPick/#results","text":"Read-only . The array of pick records obtained by the last call to pickObjects . Returns : result ( niPickRecord [])","title":"results"},{"location":"types/niPick/#returncolor","text":"If true, a vertex color value is returned for the point of intersection of triangles during picking. Returns : result (boolean)","title":"returnColor"},{"location":"types/niPick/#returnnormal","text":"If true, a unit-length normal is returned for the point of intersection of triangles intersected during the picking. Returns : result (boolean)","title":"returnNormal"},{"location":"types/niPick/#returnsmoothnormal","text":"If true and if vertex normals exist, then a unit-length normal vector is interpolated from the vertex normals and returned during the picking operation. Returns : result (boolean)","title":"returnSmoothNormal"},{"location":"types/niPick/#returntexture","text":"If true, texture coordinates are returned for the point of intersection of triangles during the picking operation. Returns : result (boolean)","title":"returnTexture"},{"location":"types/niPick/#root","text":"The root pick type for the object. Returns : result (niPickType)","title":"root"},{"location":"types/niPick/#sorttype","text":"The sort type for the object. Maps to values in ni.pickSortType table. Returns : result (integer)","title":"sortType"},{"location":"types/niPick/#methods","text":"","title":"Methods"},{"location":"types/niPick/#clearresults","text":"Clears the results of any previous picking operation. myObject : clearResults ()","title":"clearResults"},{"location":"types/niPick/#pickobjects","text":"Performs the picking operation by casting a ray. myObject : pickObjects ( origin , direction , append , maxDistance ) Parameters : origin ( tes3vector3 ): The origin of the ray in world coordinates. direction ( tes3vector3 ) append (boolean): Default : false . This parameter indicates whether the new results are appended to the results array, or if a new array is formed clearing the results array. maxDistance (number): Optional . Default value: 0.0F","title":"pickObjects"},{"location":"types/niPickRecord/","text":"niPickRecord \u2693\ufe0e A nested class of NiPick that stores the results of previous picking operations for use by the game engine. Properties \u2693\ufe0e color \u2693\ufe0e The vertex color at the point of intersection. The color is valid only when returnColor = true . Returns : result ( niPackedColor ) distance \u2693\ufe0e The distance of the triangle intersection from the ray origin. Returns : result (number) intersection \u2693\ufe0e The intersection point on the triangle. It's valid only if the intersectType was ni.pickIntersectType.triangleIntersect . Returns : result ( tes3vector3 ) normal \u2693\ufe0e The normal vector at the point of intersection. The normal is valid only when returnNormal = true in the parent niPick object. Returns : result ( tes3vector3 ) object \u2693\ufe0e Read-only . The object of the record. Returns : result ( niAVObject ) parent \u2693\ufe0e Read-only . The parent of the record. Returns : result ( niAVObject ) reference \u2693\ufe0e Read-only . Quick access to the associated object's reference. Returns : result ( tes3reference ) texture \u2693\ufe0e The texture coordinates at the point of intersection. The coordinates are valid only when returnTexture = true in the parent niPick object. Returns : result ( tes3vector2 ) triangleIndex \u2693\ufe0e The index of the intersected triangle. Returns : result (integer) vertexIndex \u2693\ufe0e An array containing the 3 indices of the vertices that form the triangle at the intersection point. It's valid only if the intersectType was ni.pickIntersectType.triangleIntersect . Returns : result (integer[])","title":"niPickRecord"},{"location":"types/niPickRecord/#nipickrecord","text":"A nested class of NiPick that stores the results of previous picking operations for use by the game engine.","title":"niPickRecord"},{"location":"types/niPickRecord/#properties","text":"","title":"Properties"},{"location":"types/niPickRecord/#color","text":"The vertex color at the point of intersection. The color is valid only when returnColor = true . Returns : result ( niPackedColor )","title":"color"},{"location":"types/niPickRecord/#distance","text":"The distance of the triangle intersection from the ray origin. Returns : result (number)","title":"distance"},{"location":"types/niPickRecord/#intersection","text":"The intersection point on the triangle. It's valid only if the intersectType was ni.pickIntersectType.triangleIntersect . Returns : result ( tes3vector3 )","title":"intersection"},{"location":"types/niPickRecord/#normal","text":"The normal vector at the point of intersection. The normal is valid only when returnNormal = true in the parent niPick object. Returns : result ( tes3vector3 )","title":"normal"},{"location":"types/niPickRecord/#object","text":"Read-only . The object of the record. Returns : result ( niAVObject )","title":"object"},{"location":"types/niPickRecord/#parent","text":"Read-only . The parent of the record. Returns : result ( niAVObject )","title":"parent"},{"location":"types/niPickRecord/#reference","text":"Read-only . Quick access to the associated object's reference. Returns : result ( tes3reference )","title":"reference"},{"location":"types/niPickRecord/#texture","text":"The texture coordinates at the point of intersection. The coordinates are valid only when returnTexture = true in the parent niPick object. Returns : result ( tes3vector2 )","title":"texture"},{"location":"types/niPickRecord/#triangleindex","text":"The index of the intersected triangle. Returns : result (integer)","title":"triangleIndex"},{"location":"types/niPickRecord/#vertexindex","text":"An array containing the 3 indices of the vertices that form the triangle at the intersection point. It's valid only if the intersectType was ni.pickIntersectType.triangleIntersect . Returns : result (integer[])","title":"vertexIndex"},{"location":"types/niPixelData/","text":"niPixelData \u2693\ufe0e Represents 2D arrays of pixel values, as well as pyramids of multiple mipmap levels, each of 2D arrays of pixel values. Also contains information representing the format of the pixels and dimensions of the arrays. This type inherits the following: niObject Properties \u2693\ufe0e bytesPerPixel \u2693\ufe0e Read-only . The number of bytes per pixel. Returns : result (number) mipMapLevels \u2693\ufe0e Read-only . The number of MipMap levels. Returns : result (number) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) createSourceTexture \u2693\ufe0e Creates a source texture from the current NiPixelData object. local result = myObject : createSourceTexture () Returns : result ( niSourceTexture ) fill \u2693\ufe0e Fills this pixel data with the provided color. myObject : fill ( data , mipMapLevel ) Parameters : data (number[]): The color data to be set (1-indexed). The values should be in range [0.0, 1.0]. The first three values are RGB color channels, while the last one is alpha channel. The array length must be equal to the bytesPerPixel property of this niPixelData object, because alpha can be assigned only to the niPixelData object that has an alpha channel. mipMapLevel (number): Default : 0 . The mipmap level to fill with the provided color. The finest (largest) mipmap level is level 0. getHeight \u2693\ufe0e Returns the height of the mipmap level at the given index, where level 0 is the finest (largest) mipmap level, and level mipMapLevels - 1 is the coarsest (smallest) mipmap level. local result = myObject : getHeight ( mipMapLevel ) Parameters : mipMapLevel (number): Default : 0 . Returns : result (number) getWidth \u2693\ufe0e Returns the width of the mipmap level at the given index, where level 0 is the finest (largest) mipmap level, and level mipMapLevels - 1 is the coarsest (smallest) mipmap level. local result = myObject : getWidth ( mipMapLevel ) Parameters : mipMapLevel (number): Default : 0 . Returns : result (number) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setPixelsByte \u2693\ufe0e Sets the pixel data from byte data. myObject : setPixelsByte ( data , mipMapLevel ) Parameters : data (number[]): The byte data to be set to (1-indexed). mipMapLevel (number): Default : 0 . The mipmap level whose data to modify. The finest (largest) mipmap level is level 0. setPixelsFloat \u2693\ufe0e Sets the pixel data from float data. myObject : setPixelsFloat ( data , mipMapLevel ) Parameters : data (number[]): The float data to be set to (1-indexed). The values should be in range [0.0, 1.0]. mipMapLevel (number): Default : 0 . The mipmap level whose data to modify. The finest (largest) mipmap level is level 0. Functions \u2693\ufe0e new \u2693\ufe0e Creates a new NiPixelData object. local pixelData = niPixelData . new ( width , height , mipMapLevels ) Parameters : width (number) height (number) mipMapLevels (number): Default : 1 . Returns : pixelData ( niPixelData )","title":"niPixelData"},{"location":"types/niPixelData/#nipixeldata","text":"Represents 2D arrays of pixel values, as well as pyramids of multiple mipmap levels, each of 2D arrays of pixel values. Also contains information representing the format of the pixels and dimensions of the arrays. This type inherits the following: niObject","title":"niPixelData"},{"location":"types/niPixelData/#properties","text":"","title":"Properties"},{"location":"types/niPixelData/#bytesperpixel","text":"Read-only . The number of bytes per pixel. Returns : result (number)","title":"bytesPerPixel"},{"location":"types/niPixelData/#mipmaplevels","text":"Read-only . The number of MipMap levels. Returns : result (number)","title":"mipMapLevels"},{"location":"types/niPixelData/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niPixelData/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niPixelData/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niPixelData/#methods","text":"","title":"Methods"},{"location":"types/niPixelData/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niPixelData/#createsourcetexture","text":"Creates a source texture from the current NiPixelData object. local result = myObject : createSourceTexture () Returns : result ( niSourceTexture )","title":"createSourceTexture"},{"location":"types/niPixelData/#fill","text":"Fills this pixel data with the provided color. myObject : fill ( data , mipMapLevel ) Parameters : data (number[]): The color data to be set (1-indexed). The values should be in range [0.0, 1.0]. The first three values are RGB color channels, while the last one is alpha channel. The array length must be equal to the bytesPerPixel property of this niPixelData object, because alpha can be assigned only to the niPixelData object that has an alpha channel. mipMapLevel (number): Default : 0 . The mipmap level to fill with the provided color. The finest (largest) mipmap level is level 0.","title":"fill"},{"location":"types/niPixelData/#getheight","text":"Returns the height of the mipmap level at the given index, where level 0 is the finest (largest) mipmap level, and level mipMapLevels - 1 is the coarsest (smallest) mipmap level. local result = myObject : getHeight ( mipMapLevel ) Parameters : mipMapLevel (number): Default : 0 . Returns : result (number)","title":"getHeight"},{"location":"types/niPixelData/#getwidth","text":"Returns the width of the mipmap level at the given index, where level 0 is the finest (largest) mipmap level, and level mipMapLevels - 1 is the coarsest (smallest) mipmap level. local result = myObject : getWidth ( mipMapLevel ) Parameters : mipMapLevel (number): Default : 0 . Returns : result (number)","title":"getWidth"},{"location":"types/niPixelData/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niPixelData/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niPixelData/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niPixelData/#setpixelsbyte","text":"Sets the pixel data from byte data. myObject : setPixelsByte ( data , mipMapLevel ) Parameters : data (number[]): The byte data to be set to (1-indexed). mipMapLevel (number): Default : 0 . The mipmap level whose data to modify. The finest (largest) mipmap level is level 0.","title":"setPixelsByte"},{"location":"types/niPixelData/#setpixelsfloat","text":"Sets the pixel data from float data. myObject : setPixelsFloat ( data , mipMapLevel ) Parameters : data (number[]): The float data to be set to (1-indexed). The values should be in range [0.0, 1.0]. mipMapLevel (number): Default : 0 . The mipmap level whose data to modify. The finest (largest) mipmap level is level 0.","title":"setPixelsFloat"},{"location":"types/niPixelData/#functions","text":"","title":"Functions"},{"location":"types/niPixelData/#new","text":"Creates a new NiPixelData object. local pixelData = niPixelData . new ( width , height , mipMapLevels ) Parameters : width (number) height (number) mipMapLevels (number): Default : 1 . Returns : pixelData ( niPixelData )","title":"new"},{"location":"types/niPlanarCollider/","text":"niPlanarCollider \u2693\ufe0e This modifier makes particles bounce off of a rectangle. This type inherits the following: niParticleCollider , niParticleModifier , niObject Properties \u2693\ufe0e collisionPoint \u2693\ufe0e Returns : result ( tes3vector3 ) collisionTime \u2693\ufe0e Returns : result (number) controller \u2693\ufe0e Access to the generic time controller for particle systems. Returns : result ( niParticleSystemController ) dieOnCollide \u2693\ufe0e If this flag is true a particle that collides with something will be destroyed. Returns : result (boolean) height \u2693\ufe0e The plane size along the y axis. Returns : result (number) next \u2693\ufe0e Access to the next attached modifier. Returns : result ( niParticleModifier ) planeEquation \u2693\ufe0e The coefficients in the point-normal form equation of the plane. Returns : result ( tes3vector4 ) position \u2693\ufe0e The center point of the collider. Returns : result ( tes3vector3 ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) restitution \u2693\ufe0e The fraction of the original amount of energy the particle retains after a collision. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) spawnOnCollide \u2693\ufe0e This flag controls if a new particle will be spawned on a collision. The new particle is spawned at the position of the old particle with the same attributes. Returns : result (boolean) width \u2693\ufe0e The plane size along the x axis. Returns : result (number) xAxis \u2693\ufe0e The x axis, lying in the plane of the collider. Returns : result ( tes3vector3 ) yAxis \u2693\ufe0e The y axis, lying in the plane of the collider. Returns : result ( tes3vector3 ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"niPlanarCollider"},{"location":"types/niPlanarCollider/#niplanarcollider","text":"This modifier makes particles bounce off of a rectangle. This type inherits the following: niParticleCollider , niParticleModifier , niObject","title":"niPlanarCollider"},{"location":"types/niPlanarCollider/#properties","text":"","title":"Properties"},{"location":"types/niPlanarCollider/#collisionpoint","text":"Returns : result ( tes3vector3 )","title":"collisionPoint"},{"location":"types/niPlanarCollider/#collisiontime","text":"Returns : result (number)","title":"collisionTime"},{"location":"types/niPlanarCollider/#controller","text":"Access to the generic time controller for particle systems. Returns : result ( niParticleSystemController )","title":"controller"},{"location":"types/niPlanarCollider/#dieoncollide","text":"If this flag is true a particle that collides with something will be destroyed. Returns : result (boolean)","title":"dieOnCollide"},{"location":"types/niPlanarCollider/#height","text":"The plane size along the y axis. Returns : result (number)","title":"height"},{"location":"types/niPlanarCollider/#next","text":"Access to the next attached modifier. Returns : result ( niParticleModifier )","title":"next"},{"location":"types/niPlanarCollider/#planeequation","text":"The coefficients in the point-normal form equation of the plane. Returns : result ( tes3vector4 )","title":"planeEquation"},{"location":"types/niPlanarCollider/#position","text":"The center point of the collider. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/niPlanarCollider/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niPlanarCollider/#restitution","text":"The fraction of the original amount of energy the particle retains after a collision. Returns : result (number)","title":"restitution"},{"location":"types/niPlanarCollider/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niPlanarCollider/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niPlanarCollider/#spawnoncollide","text":"This flag controls if a new particle will be spawned on a collision. The new particle is spawned at the position of the old particle with the same attributes. Returns : result (boolean)","title":"spawnOnCollide"},{"location":"types/niPlanarCollider/#width","text":"The plane size along the x axis. Returns : result (number)","title":"width"},{"location":"types/niPlanarCollider/#xaxis","text":"The x axis, lying in the plane of the collider. Returns : result ( tes3vector3 )","title":"xAxis"},{"location":"types/niPlanarCollider/#yaxis","text":"The y axis, lying in the plane of the collider. Returns : result ( tes3vector3 )","title":"yAxis"},{"location":"types/niPlanarCollider/#methods","text":"","title":"Methods"},{"location":"types/niPlanarCollider/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niPlanarCollider/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niPlanarCollider/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niPlanarCollider/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niPointLight/","text":"niPointLight \u2693\ufe0e Represents a point light source in a scene. Point lights have a specific location in space and a distance attenuation function. Point lights project light in all directions from their position. They can be moved by changing the translation of the light. This type inherits the following: niLight , niDynamicEffect , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e affectedNodes \u2693\ufe0e The list of nodes that a given dynamic effect will affect. Returns : result ( niNodeLinkedList ) alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) ambient \u2693\ufe0e The ambient light color. Returns : result ( niColor ) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) constantAttenuation \u2693\ufe0e The constant attenuation factor. Returns : result (number) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) diffuse \u2693\ufe0e The diffuse light color. Returns : result ( niColor ) dimmer \u2693\ufe0e This flag scales the overall brightness of all light components. This value must be nonnegative. It is usually less than or equal to 1.0 (although advanced lighting effects may use larger values). Returns : result (number) enabled \u2693\ufe0e The enabled state of a given dynamic effect. Returns : result (boolean) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) linearAttenuation \u2693\ufe0e The linear attenuation factor. Returns : result (number) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) quadraticAttenuation \u2693\ufe0e The quadratic attenuation factor. Returns : result (number) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) specular \u2693\ufe0e This property was inteded to be specular light color in NetImmerse, but in Morrowind it represents the dynamic culling radius. All the color channels are equal to the radius. In practice, this radius represents the light's influence radius. Returns : result ( niColor ) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) type \u2693\ufe0e Read-only . The enumerated type of a given dynamic effect. Maps to values in ni.dynamicEffectType table. Returns : result (integer) velocity \u2693\ufe0e The object's local velocity. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) worldBoundOrigin \u2693\ufe0e The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 ) worldBoundRadius \u2693\ufe0e The radius of the object's bounds. Returns : result (number) worldTransform \u2693\ufe0e The object's transformations in the world space. Returns : result ( tes3transform ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) attachAffectedNode \u2693\ufe0e Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list. attachProperty \u2693\ufe0e Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. myObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) detachAffectedNode \u2693\ufe0e Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list. detachAllProperties \u2693\ufe0e Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty []) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) propagatePositionChange \u2693\ufe0e Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setAttenuationForRadius \u2693\ufe0e Sets the light attenuation values for the given radius. Respects the values in the Morrowind.ini file. myObject : setAttenuationForRadius ( radius ) Parameters : radius (integer) setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) setRadius \u2693\ufe0e Sets both the light's influence radius, and its lighting attenuation to match the radius. myObject : setRadius ( radius ) Parameters : radius (integer) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? updateEffects \u2693\ufe0e Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. myObject : updateProperties () Functions \u2693\ufe0e new \u2693\ufe0e Creates a new niPointLight. Sets the light's constant attenuation to 0, linear attenuation to 1 and quadratic attenuation to 0. local light = niPointLight . new () Returns : light ( niPointLight )","title":"niPointLight"},{"location":"types/niPointLight/#nipointlight","text":"Represents a point light source in a scene. Point lights have a specific location in space and a distance attenuation function. Point lights project light in all directions from their position. They can be moved by changing the translation of the light. This type inherits the following: niLight , niDynamicEffect , niAVObject , niObjectNET , niObject","title":"niPointLight"},{"location":"types/niPointLight/#properties","text":"","title":"Properties"},{"location":"types/niPointLight/#affectednodes","text":"The list of nodes that a given dynamic effect will affect. Returns : result ( niNodeLinkedList )","title":"affectedNodes"},{"location":"types/niPointLight/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niPointLight/#ambient","text":"The ambient light color. Returns : result ( niColor )","title":"ambient"},{"location":"types/niPointLight/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niPointLight/#constantattenuation","text":"The constant attenuation factor. Returns : result (number)","title":"constantAttenuation"},{"location":"types/niPointLight/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niPointLight/#diffuse","text":"The diffuse light color. Returns : result ( niColor )","title":"diffuse"},{"location":"types/niPointLight/#dimmer","text":"This flag scales the overall brightness of all light components. This value must be nonnegative. It is usually less than or equal to 1.0 (although advanced lighting effects may use larger values). Returns : result (number)","title":"dimmer"},{"location":"types/niPointLight/#enabled","text":"The enabled state of a given dynamic effect. Returns : result (boolean)","title":"enabled"},{"location":"types/niPointLight/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niPointLight/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niPointLight/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niPointLight/#linearattenuation","text":"The linear attenuation factor. Returns : result (number)","title":"linearAttenuation"},{"location":"types/niPointLight/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niPointLight/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niPointLight/#parent","text":"Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niPointLight/#properties_1","text":"Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niPointLight/#quadraticattenuation","text":"The quadratic attenuation factor. Returns : result (number)","title":"quadraticAttenuation"},{"location":"types/niPointLight/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niPointLight/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niPointLight/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niPointLight/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niPointLight/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niPointLight/#specular","text":"This property was inteded to be specular light color in NetImmerse, but in Morrowind it represents the dynamic culling radius. All the color channels are equal to the radius. In practice, this radius represents the light's influence radius. Returns : result ( niColor )","title":"specular"},{"location":"types/niPointLight/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niPointLight/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niPointLight/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niPointLight/#type","text":"Read-only . The enumerated type of a given dynamic effect. Maps to values in ni.dynamicEffectType table. Returns : result (integer)","title":"type"},{"location":"types/niPointLight/#velocity","text":"The object's local velocity. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/niPointLight/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niPointLight/#worldboundorigin","text":"The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 )","title":"worldBoundOrigin"},{"location":"types/niPointLight/#worldboundradius","text":"The radius of the object's bounds. Returns : result (number)","title":"worldBoundRadius"},{"location":"types/niPointLight/#worldtransform","text":"The object's transformations in the world space. Returns : result ( tes3transform )","title":"worldTransform"},{"location":"types/niPointLight/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil)","title":"zBufferProperty"},{"location":"types/niPointLight/#methods","text":"","title":"Methods"},{"location":"types/niPointLight/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niPointLight/#attachaffectednode","text":"Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list.","title":"attachAffectedNode"},{"location":"types/niPointLight/#attachproperty","text":"Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niPointLight/#cleartransforms","text":"Resets the object's local transform. myObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niPointLight/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niPointLight/#detachaffectednode","text":"Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"detachAffectedNode"},{"location":"types/niPointLight/#detachallproperties","text":"Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty [])","title":"detachAllProperties"},{"location":"types/niPointLight/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niPointLight/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niPointLight/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niPointLight/#getproperty","text":"Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niPointLight/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niPointLight/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niPointLight/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niPointLight/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niPointLight/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niPointLight/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niPointLight/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niPointLight/#propagatepositionchange","text":"Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"propagatePositionChange"},{"location":"types/niPointLight/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niPointLight/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niPointLight/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niPointLight/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niPointLight/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niPointLight/#setattenuationforradius","text":"Sets the light attenuation values for the given radius. Respects the values in the Morrowind.ini file. myObject : setAttenuationForRadius ( radius ) Parameters : radius (integer)","title":"setAttenuationForRadius"},{"location":"types/niPointLight/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niPointLight/#setradius","text":"Sets both the light's influence radius, and its lighting attenuation to match the radius. myObject : setRadius ( radius ) Parameters : radius (integer)","title":"setRadius"},{"location":"types/niPointLight/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"update"},{"location":"types/niPointLight/#updateeffects","text":"Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects ()","title":"updateEffects"},{"location":"types/niPointLight/#updateproperties","text":"Update all attached properties. myObject : updateProperties ()","title":"updateProperties"},{"location":"types/niPointLight/#functions","text":"","title":"Functions"},{"location":"types/niPointLight/#new","text":"Creates a new niPointLight. Sets the light's constant attenuation to 0, linear attenuation to 1 and quadratic attenuation to 0. local light = niPointLight . new () Returns : light ( niPointLight )","title":"new"},{"location":"types/niPosKey/","text":"niPosKey \u2693\ufe0e An animation key that holds a position value. This type inherits the following: niAnimationKey Properties \u2693\ufe0e timing \u2693\ufe0e The timing of the animation key. Returns : result (number) value \u2693\ufe0e The position value of the animation key. Returns : result ( tes3vector3 )","title":"niPosKey"},{"location":"types/niPosKey/#niposkey","text":"An animation key that holds a position value. This type inherits the following: niAnimationKey","title":"niPosKey"},{"location":"types/niPosKey/#properties","text":"","title":"Properties"},{"location":"types/niPosKey/#timing","text":"The timing of the animation key. Returns : result (number)","title":"timing"},{"location":"types/niPosKey/#value","text":"The position value of the animation key. Returns : result ( tes3vector3 )","title":"value"},{"location":"types/niProperty/","text":"niProperty \u2693\ufe0e A base class representing all rendering properties. This type inherits the following: niObjectNET , niObject Properties \u2693\ufe0e controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) propertyFlags \u2693\ufe0e Returns : result (integer) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) type \u2693\ufe0e Read-only . The unique class identifier number of the given rendering property. The types are available in ni.propertyType table. Returns : result (integer) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"niProperty"},{"location":"types/niProperty/#niproperty","text":"A base class representing all rendering properties. This type inherits the following: niObjectNET , niObject","title":"niProperty"},{"location":"types/niProperty/#properties","text":"","title":"Properties"},{"location":"types/niProperty/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niProperty/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niProperty/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niProperty/#propertyflags","text":"Returns : result (integer)","title":"propertyFlags"},{"location":"types/niProperty/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niProperty/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niProperty/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niProperty/#type","text":"Read-only . The unique class identifier number of the given rendering property. The types are available in ni.propertyType table. Returns : result (integer)","title":"type"},{"location":"types/niProperty/#methods","text":"","title":"Methods"},{"location":"types/niProperty/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niProperty/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niProperty/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niProperty/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niProperty/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niProperty/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niProperty/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niProperty/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niProperty/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niProperty/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niProperty/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niProperty/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niProperty/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niProperty/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niProperty/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niProperty/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niPropertyLinkedList/","text":"niPropertyLinkedList \u2693\ufe0e A linked list of properties. Properties \u2693\ufe0e data \u2693\ufe0e Read-only . The current property in the linked list. Returns : result ( niProperty ) next \u2693\ufe0e Read-only . The next property in the linked list. Returns : result ( niPropertyLinkedList )","title":"niPropertyLinkedList"},{"location":"types/niPropertyLinkedList/#nipropertylinkedlist","text":"A linked list of properties.","title":"niPropertyLinkedList"},{"location":"types/niPropertyLinkedList/#properties","text":"","title":"Properties"},{"location":"types/niPropertyLinkedList/#data","text":"Read-only . The current property in the linked list. Returns : result ( niProperty )","title":"data"},{"location":"types/niPropertyLinkedList/#next","text":"Read-only . The next property in the linked list. Returns : result ( niPropertyLinkedList )","title":"next"},{"location":"types/niQuaternion/","text":"niQuaternion \u2693\ufe0e A rotation in quaternion representation. Properties \u2693\ufe0e w \u2693\ufe0e The W component of the quaternion. Returns : result (number) x \u2693\ufe0e The X component of the quaternion. Returns : result (number) y \u2693\ufe0e The Y component of the quaternion. Returns : result (number) z \u2693\ufe0e The Z component of the quaternion. Returns : result (number) Methods \u2693\ufe0e copy \u2693\ufe0e Creates a copy of the quaternion. local result = myObject : copy () Returns : result ( niQuaternion ) fromAngleAxis \u2693\ufe0e Fill the quaternion by converting an angle-axis rotation. The angle must be within the interval [0, PI] and the axis must be unit length. myObject : fromAngleAxis ( angle , axis ) Parameters : angle (number) axis ( tes3vector3 ) fromRotation \u2693\ufe0e Fill the quaternion by converting a rotation matrix. myObject : fromRotation ( matrix ) Parameters : matrix ( tes3matrix33 ) invert \u2693\ufe0e Inverting or conjugating a rotation quaternion has the effect of reversing the axis of rotation, which modifies it to rotate in the opposite direction from the original. That is, if an object is rotated to a new position using a quaternion, then rotating it again by quaternion's inverse will return it to its original location. local result = myObject : invert () Returns : result ( niQuaternion ) slerp \u2693\ufe0e Calculates the spherical linear interpolate between this quaternion and another. local result = myObject : slerp ( target , transition ) Parameters : target ( niQuaternion ): The quaternion to interpolate towards. transition (number): The interpolation value. Must be between 0.0 (closer to this quaternion) and 1.0 (closer to the other quaternion). Returns : result ( niQuaternion ): The calculated result. toAngleAxis \u2693\ufe0e Convert this quaternion into an angle-axis rotation. local angle , axis = myObject : toAngleAxis () Returns : angle (number) axis ( tes3vector3 ) toRotation \u2693\ufe0e Convert this quaternion into a rotation matrix. local result = myObject : toRotation () Returns : result ( tes3matrix33 ) Functions \u2693\ufe0e new \u2693\ufe0e Creates a new niQuaternion object. local quaternion = niQuaternion . new ( w , x , y , z ) Parameters : w (number): Default : 0 . x (number): Default : 0 . y (number): Default : 0 . z (number): Default : 0 . Returns : quaternion ( niQuaternion ) Math Operations \u2693\ufe0e Multiplication ( * ) \u2693\ufe0e Left operand type Right operand type Result type Description niQuaternion niQuaternion niQuaternion Multiplies two quaternions. The end effect is that the resulting rotation quaternion is equal to the rotation of both quaternions.","title":"niQuaternion"},{"location":"types/niQuaternion/#niquaternion","text":"A rotation in quaternion representation.","title":"niQuaternion"},{"location":"types/niQuaternion/#properties","text":"","title":"Properties"},{"location":"types/niQuaternion/#w","text":"The W component of the quaternion. Returns : result (number)","title":"w"},{"location":"types/niQuaternion/#x","text":"The X component of the quaternion. Returns : result (number)","title":"x"},{"location":"types/niQuaternion/#y","text":"The Y component of the quaternion. Returns : result (number)","title":"y"},{"location":"types/niQuaternion/#z","text":"The Z component of the quaternion. Returns : result (number)","title":"z"},{"location":"types/niQuaternion/#methods","text":"","title":"Methods"},{"location":"types/niQuaternion/#copy","text":"Creates a copy of the quaternion. local result = myObject : copy () Returns : result ( niQuaternion )","title":"copy"},{"location":"types/niQuaternion/#fromangleaxis","text":"Fill the quaternion by converting an angle-axis rotation. The angle must be within the interval [0, PI] and the axis must be unit length. myObject : fromAngleAxis ( angle , axis ) Parameters : angle (number) axis ( tes3vector3 )","title":"fromAngleAxis"},{"location":"types/niQuaternion/#fromrotation","text":"Fill the quaternion by converting a rotation matrix. myObject : fromRotation ( matrix ) Parameters : matrix ( tes3matrix33 )","title":"fromRotation"},{"location":"types/niQuaternion/#invert","text":"Inverting or conjugating a rotation quaternion has the effect of reversing the axis of rotation, which modifies it to rotate in the opposite direction from the original. That is, if an object is rotated to a new position using a quaternion, then rotating it again by quaternion's inverse will return it to its original location. local result = myObject : invert () Returns : result ( niQuaternion )","title":"invert"},{"location":"types/niQuaternion/#slerp","text":"Calculates the spherical linear interpolate between this quaternion and another. local result = myObject : slerp ( target , transition ) Parameters : target ( niQuaternion ): The quaternion to interpolate towards. transition (number): The interpolation value. Must be between 0.0 (closer to this quaternion) and 1.0 (closer to the other quaternion). Returns : result ( niQuaternion ): The calculated result.","title":"slerp"},{"location":"types/niQuaternion/#toangleaxis","text":"Convert this quaternion into an angle-axis rotation. local angle , axis = myObject : toAngleAxis () Returns : angle (number) axis ( tes3vector3 )","title":"toAngleAxis"},{"location":"types/niQuaternion/#torotation","text":"Convert this quaternion into a rotation matrix. local result = myObject : toRotation () Returns : result ( tes3matrix33 )","title":"toRotation"},{"location":"types/niQuaternion/#functions","text":"","title":"Functions"},{"location":"types/niQuaternion/#new","text":"Creates a new niQuaternion object. local quaternion = niQuaternion . new ( w , x , y , z ) Parameters : w (number): Default : 0 . x (number): Default : 0 . y (number): Default : 0 . z (number): Default : 0 . Returns : quaternion ( niQuaternion )","title":"new"},{"location":"types/niQuaternion/#math-operations","text":"","title":"Math Operations"},{"location":"types/niQuaternion/#multiplication","text":"Left operand type Right operand type Result type Description niQuaternion niQuaternion niQuaternion Multiplies two quaternions. The end effect is that the resulting rotation quaternion is equal to the rotation of both quaternions.","title":"Multiplication (*)"},{"location":"types/niRTTI/","text":"niRTTI \u2693\ufe0e Runtime type information for NetImmerse structures. Properties \u2693\ufe0e name \u2693\ufe0e The human readable name for the type. Returns : result (string) parent \u2693\ufe0e The runtime type information that this type derives from. Returns : result ( niRTTI )","title":"niRTTI"},{"location":"types/niRTTI/#nirtti","text":"Runtime type information for NetImmerse structures.","title":"niRTTI"},{"location":"types/niRTTI/#properties","text":"","title":"Properties"},{"location":"types/niRTTI/#name","text":"The human readable name for the type. Returns : result (string)","title":"name"},{"location":"types/niRTTI/#parent","text":"The runtime type information that this type derives from. Returns : result ( niRTTI )","title":"parent"},{"location":"types/niRotKey/","text":"niRotKey \u2693\ufe0e An animation key that holds a rotation value. This type inherits the following: niAnimationKey Properties \u2693\ufe0e timing \u2693\ufe0e The timing of the animation key. Returns : result (number) value \u2693\ufe0e The rotation value of the animation key. Returns : result ( niQuaternion )","title":"niRotKey"},{"location":"types/niRotKey/#nirotkey","text":"An animation key that holds a rotation value. This type inherits the following: niAnimationKey","title":"niRotKey"},{"location":"types/niRotKey/#properties","text":"","title":"Properties"},{"location":"types/niRotKey/#timing","text":"The timing of the animation key. Returns : result (number)","title":"timing"},{"location":"types/niRotKey/#value","text":"The rotation value of the animation key. Returns : result ( niQuaternion )","title":"value"},{"location":"types/niRotatingParticles/","text":"niRotatingParticles \u2693\ufe0e An object that represent collections of large numbers of small point-like objects. Each object in the collection can be separately rotated. This type inherits the following: niParticles , niTriBasedGeometry , niGeometry , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) data \u2693\ufe0e The niRotatingParticlesData of the object. Manipulation should not be done directly. Instead, consider copying the data and assigning it to this shape. Returns : result ( niRotatingParticlesData ) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) velocity \u2693\ufe0e The object's local velocity. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) worldBoundOrigin \u2693\ufe0e The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 ) worldBoundRadius \u2693\ufe0e The radius of the object's bounds. Returns : result (number) worldTransform \u2693\ufe0e The object's transformations in the world space. Returns : result ( tes3transform ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) attachProperty \u2693\ufe0e Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. myObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) detachAllProperties \u2693\ufe0e Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty []) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) propagatePositionChange \u2693\ufe0e Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? updateEffects \u2693\ufe0e Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. myObject : updateProperties ()","title":"niRotatingParticles"},{"location":"types/niRotatingParticles/#nirotatingparticles","text":"An object that represent collections of large numbers of small point-like objects. Each object in the collection can be separately rotated. This type inherits the following: niParticles , niTriBasedGeometry , niGeometry , niAVObject , niObjectNET , niObject","title":"niRotatingParticles"},{"location":"types/niRotatingParticles/#properties","text":"","title":"Properties"},{"location":"types/niRotatingParticles/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niRotatingParticles/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niRotatingParticles/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niRotatingParticles/#data","text":"The niRotatingParticlesData of the object. Manipulation should not be done directly. Instead, consider copying the data and assigning it to this shape. Returns : result ( niRotatingParticlesData )","title":"data"},{"location":"types/niRotatingParticles/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niRotatingParticles/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niRotatingParticles/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niRotatingParticles/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niRotatingParticles/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niRotatingParticles/#parent","text":"Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niRotatingParticles/#properties_1","text":"Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niRotatingParticles/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niRotatingParticles/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niRotatingParticles/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niRotatingParticles/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niRotatingParticles/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niRotatingParticles/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niRotatingParticles/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niRotatingParticles/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niRotatingParticles/#velocity","text":"The object's local velocity. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/niRotatingParticles/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niRotatingParticles/#worldboundorigin","text":"The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 )","title":"worldBoundOrigin"},{"location":"types/niRotatingParticles/#worldboundradius","text":"The radius of the object's bounds. Returns : result (number)","title":"worldBoundRadius"},{"location":"types/niRotatingParticles/#worldtransform","text":"The object's transformations in the world space. Returns : result ( tes3transform )","title":"worldTransform"},{"location":"types/niRotatingParticles/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil)","title":"zBufferProperty"},{"location":"types/niRotatingParticles/#methods","text":"","title":"Methods"},{"location":"types/niRotatingParticles/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niRotatingParticles/#attachproperty","text":"Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niRotatingParticles/#cleartransforms","text":"Resets the object's local transform. myObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niRotatingParticles/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niRotatingParticles/#detachallproperties","text":"Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty [])","title":"detachAllProperties"},{"location":"types/niRotatingParticles/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niRotatingParticles/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niRotatingParticles/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niRotatingParticles/#getproperty","text":"Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niRotatingParticles/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niRotatingParticles/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niRotatingParticles/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niRotatingParticles/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niRotatingParticles/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niRotatingParticles/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niRotatingParticles/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niRotatingParticles/#propagatepositionchange","text":"Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"propagatePositionChange"},{"location":"types/niRotatingParticles/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niRotatingParticles/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niRotatingParticles/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niRotatingParticles/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niRotatingParticles/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niRotatingParticles/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niRotatingParticles/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"update"},{"location":"types/niRotatingParticles/#updateeffects","text":"Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects ()","title":"updateEffects"},{"location":"types/niRotatingParticles/#updateproperties","text":"Update all attached properties. myObject : updateProperties ()","title":"updateProperties"},{"location":"types/niRotatingParticlesData/","text":"niRotatingParticlesData \u2693\ufe0e niRotatingParticlesData objects contain the geometry data necessary to render a niRotatingParticles object. When a niRotatingParticles-based object is created, the actual geometry data is stored in an attached niRotatingParticlesData object. This type inherits the following: niParticlesData , niTriBasedGeometryData , niGeometryData , niObject Properties \u2693\ufe0e activeCount \u2693\ufe0e Read-only . The number of active particles. Returns : result (number) activeTriangleCount \u2693\ufe0e The active triangle count of the object. Returns : result (number) bounds \u2693\ufe0e The model-space bounding sphere of the object. Returns : result (niBound) colors \u2693\ufe0e Read-only . The vertex colors for the object. The length of the array is equal to vertexCount . Returns : result ( niPackedColor []) normals \u2693\ufe0e Read-only . The list of unitized, model-space vertex normals for the object. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 []) radius \u2693\ufe0e Read-only . The radius of the particles. Returns : result (number) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotations \u2693\ufe0e Read-only . The particle rotations. The length of the array is equal to vertexCount . Returns : result ( niQuaternion []) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) sizes \u2693\ufe0e Read-only . The particle sizes. The length of the array is equal to vertexCount . Returns : result (number[]) texCoords \u2693\ufe0e Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 []) textures \u2693\ufe0e Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 []) textureSets \u2693\ufe0e The number of texture coordinate sets in the data. Returns : result (number) triangleCount \u2693\ufe0e Read-only . The triangle count of the object. Returns : result (number) uniqueID \u2693\ufe0e Read-only . A unique ID for this model, assigned at model creation. Returns : result (number) vertexCount \u2693\ufe0e Read-only . The vertex count for the object. Returns : result (number) vertices \u2693\ufe0e Read-only . The array of vertex position data. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 []) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) markAsChanged \u2693\ufe0e Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data. If you have altered vertex positions, you may need to also call updateModelBound _. You should call it if vertices have been moved outside the bounds of the original model. myObject : markAsChanged () saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. updateModelBound \u2693\ufe0e Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function. myObject : updateModelBound ()","title":"niRotatingParticlesData"},{"location":"types/niRotatingParticlesData/#nirotatingparticlesdata","text":"niRotatingParticlesData objects contain the geometry data necessary to render a niRotatingParticles object. When a niRotatingParticles-based object is created, the actual geometry data is stored in an attached niRotatingParticlesData object. This type inherits the following: niParticlesData , niTriBasedGeometryData , niGeometryData , niObject","title":"niRotatingParticlesData"},{"location":"types/niRotatingParticlesData/#properties","text":"","title":"Properties"},{"location":"types/niRotatingParticlesData/#activecount","text":"Read-only . The number of active particles. Returns : result (number)","title":"activeCount"},{"location":"types/niRotatingParticlesData/#activetrianglecount","text":"The active triangle count of the object. Returns : result (number)","title":"activeTriangleCount"},{"location":"types/niRotatingParticlesData/#bounds","text":"The model-space bounding sphere of the object. Returns : result (niBound)","title":"bounds"},{"location":"types/niRotatingParticlesData/#colors","text":"Read-only . The vertex colors for the object. The length of the array is equal to vertexCount . Returns : result ( niPackedColor [])","title":"colors"},{"location":"types/niRotatingParticlesData/#normals","text":"Read-only . The list of unitized, model-space vertex normals for the object. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 [])","title":"normals"},{"location":"types/niRotatingParticlesData/#radius","text":"Read-only . The radius of the particles. Returns : result (number)","title":"radius"},{"location":"types/niRotatingParticlesData/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niRotatingParticlesData/#rotations","text":"Read-only . The particle rotations. The length of the array is equal to vertexCount . Returns : result ( niQuaternion [])","title":"rotations"},{"location":"types/niRotatingParticlesData/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niRotatingParticlesData/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niRotatingParticlesData/#sizes","text":"Read-only . The particle sizes. The length of the array is equal to vertexCount . Returns : result (number[])","title":"sizes"},{"location":"types/niRotatingParticlesData/#texcoords","text":"Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 [])","title":"texCoords"},{"location":"types/niRotatingParticlesData/#textures","text":"Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 [])","title":"textures"},{"location":"types/niRotatingParticlesData/#texturesets","text":"The number of texture coordinate sets in the data. Returns : result (number)","title":"textureSets"},{"location":"types/niRotatingParticlesData/#trianglecount","text":"Read-only . The triangle count of the object. Returns : result (number)","title":"triangleCount"},{"location":"types/niRotatingParticlesData/#uniqueid","text":"Read-only . A unique ID for this model, assigned at model creation. Returns : result (number)","title":"uniqueID"},{"location":"types/niRotatingParticlesData/#vertexcount","text":"Read-only . The vertex count for the object. Returns : result (number)","title":"vertexCount"},{"location":"types/niRotatingParticlesData/#vertices","text":"Read-only . The array of vertex position data. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 [])","title":"vertices"},{"location":"types/niRotatingParticlesData/#methods","text":"","title":"Methods"},{"location":"types/niRotatingParticlesData/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niRotatingParticlesData/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niRotatingParticlesData/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niRotatingParticlesData/#markaschanged","text":"Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data. If you have altered vertex positions, you may need to also call updateModelBound _. You should call it if vertices have been moved outside the bounds of the original model. myObject : markAsChanged ()","title":"markAsChanged"},{"location":"types/niRotatingParticlesData/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niRotatingParticlesData/#updatemodelbound","text":"Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function. myObject : updateModelBound ()","title":"updateModelBound"},{"location":"types/niSkinData/","text":"niSkinData \u2693\ufe0e Contains skinning data that may be shared by multiple NiSkinInstance objects. This type inherits the following: niObject Properties \u2693\ufe0e boneData \u2693\ufe0e Read-only . An array of objects containing one entry for each bone that influences vertices in the skinned mesh. The order of the entries in the boneData array corresponds to the order of the bones in the bone array in the niSkinInstance objects that point to this niSkinData . Each object in this array contains all the data needed to deform vertices by a single bone. Returns : result ( niSkinDataBoneData []) partition \u2693\ufe0e Access to the container with the skinning data optimized for hardware skinning. If the niSkinData object has not been partitioned, this property is nil . Returns : result ( niSkinPartition , nil) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotation \u2693\ufe0e Defines the rotation of the root bone in the bind pose from the parent node of the root bone to the coordinate system of the skinned object. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e Defines the scale of the root bone in the bind pose from the parent node of the root bone to the coordinate system of the skinned object. Returns : result (number) translation \u2693\ufe0e Defines the translation of the root bone in the bind pose from the parent node of the root bone to the coordinate system of the skinned object. Returns : result ( tes3vector3 ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"niSkinData"},{"location":"types/niSkinData/#niskindata","text":"Contains skinning data that may be shared by multiple NiSkinInstance objects. This type inherits the following: niObject","title":"niSkinData"},{"location":"types/niSkinData/#properties","text":"","title":"Properties"},{"location":"types/niSkinData/#bonedata","text":"Read-only . An array of objects containing one entry for each bone that influences vertices in the skinned mesh. The order of the entries in the boneData array corresponds to the order of the bones in the bone array in the niSkinInstance objects that point to this niSkinData . Each object in this array contains all the data needed to deform vertices by a single bone. Returns : result ( niSkinDataBoneData [])","title":"boneData"},{"location":"types/niSkinData/#partition","text":"Access to the container with the skinning data optimized for hardware skinning. If the niSkinData object has not been partitioned, this property is nil . Returns : result ( niSkinPartition , nil)","title":"partition"},{"location":"types/niSkinData/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niSkinData/#rotation","text":"Defines the rotation of the root bone in the bind pose from the parent node of the root bone to the coordinate system of the skinned object. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niSkinData/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niSkinData/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niSkinData/#scale","text":"Defines the scale of the root bone in the bind pose from the parent node of the root bone to the coordinate system of the skinned object. Returns : result (number)","title":"scale"},{"location":"types/niSkinData/#translation","text":"Defines the translation of the root bone in the bind pose from the parent node of the root bone to the coordinate system of the skinned object. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niSkinData/#methods","text":"","title":"Methods"},{"location":"types/niSkinData/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niSkinData/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niSkinData/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niSkinData/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niSkinDataBoneData/","text":"niSkinDataBoneData \u2693\ufe0e This class contains all the information needed to deform vertices by a single bone. Properties \u2693\ufe0e bounds \u2693\ufe0e This bounding volume is used internally by the skinning system to calculate bounding volumes for skinned objects without actually having to calculate the positions of the vertices in the skinned object. Returns : result (niBound) rotation \u2693\ufe0e Defines the rotation of the bone in the bind pose from the skinned object's coordinate system to the bone's coordinate system. Returns : result ( tes3matrix33 ) scale \u2693\ufe0e Defines the scale of the bone in the bind pose from the skinned object's coordinate system to the bone's coordinate system. Returns : result (number) translation \u2693\ufe0e Defines the translation of the bone in bind pose from the skinned object's coordinate system to the bone's coordinate system. Returns : result ( tes3vector3 ) weights \u2693\ufe0e Read-only . Contains all the per-vertex weight coefficients used when deforming the verticies influenced by this bone. Returns : result ( niSkinDataBoneDataVertexWeight [])","title":"niSkinDataBoneData"},{"location":"types/niSkinDataBoneData/#niskindatabonedata","text":"This class contains all the information needed to deform vertices by a single bone.","title":"niSkinDataBoneData"},{"location":"types/niSkinDataBoneData/#properties","text":"","title":"Properties"},{"location":"types/niSkinDataBoneData/#bounds","text":"This bounding volume is used internally by the skinning system to calculate bounding volumes for skinned objects without actually having to calculate the positions of the vertices in the skinned object. Returns : result (niBound)","title":"bounds"},{"location":"types/niSkinDataBoneData/#rotation","text":"Defines the rotation of the bone in the bind pose from the skinned object's coordinate system to the bone's coordinate system. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niSkinDataBoneData/#scale","text":"Defines the scale of the bone in the bind pose from the skinned object's coordinate system to the bone's coordinate system. Returns : result (number)","title":"scale"},{"location":"types/niSkinDataBoneData/#translation","text":"Defines the translation of the bone in bind pose from the skinned object's coordinate system to the bone's coordinate system. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niSkinDataBoneData/#weights","text":"Read-only . Contains all the per-vertex weight coefficients used when deforming the verticies influenced by this bone. Returns : result ( niSkinDataBoneDataVertexWeight [])","title":"weights"},{"location":"types/niSkinDataBoneDataVertexWeight/","text":"niSkinDataBoneDataVertexWeight \u2693\ufe0e An instance of niSkinDataBoneDataVertexWeight exists for every vertex that is influenced by a particular bone. This container stores the weight coefficients used for each vertex when deforming skinned objects with this bone. Properties \u2693\ufe0e index \u2693\ufe0e The index of the vertex in the skinned object's array of vertices. Returns : result (integer) weight \u2693\ufe0e The weight of the bone's influence on the vertex. The sum of the weights for all the bones that influence a particular vertex must be 1.0. Returns : result (number)","title":"niSkinDataBoneDataVertexWeight"},{"location":"types/niSkinDataBoneDataVertexWeight/#niskindatabonedatavertexweight","text":"An instance of niSkinDataBoneDataVertexWeight exists for every vertex that is influenced by a particular bone. This container stores the weight coefficients used for each vertex when deforming skinned objects with this bone.","title":"niSkinDataBoneDataVertexWeight"},{"location":"types/niSkinDataBoneDataVertexWeight/#properties","text":"","title":"Properties"},{"location":"types/niSkinDataBoneDataVertexWeight/#index","text":"The index of the vertex in the skinned object's array of vertices. Returns : result (integer)","title":"index"},{"location":"types/niSkinDataBoneDataVertexWeight/#weight","text":"The weight of the bone's influence on the vertex. The sum of the weights for all the bones that influence a particular vertex must be 1.0. Returns : result (number)","title":"weight"},{"location":"types/niSkinInstance/","text":"niSkinInstance \u2693\ufe0e Contains instance-dependent skinning data for a NiTriShape object. This type inherits the following: niObject Properties \u2693\ufe0e bones \u2693\ufe0e Read-only . The bone influences for this skin instance. Returns : result ( niAVObject []) data \u2693\ufe0e The skinning data. May be shared by multiple skin instances. Returns : result ( niSkinData ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) root \u2693\ufe0e The skeleton root (parent of the root bone). Returns : result ( niNode ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"niSkinInstance"},{"location":"types/niSkinInstance/#niskininstance","text":"Contains instance-dependent skinning data for a NiTriShape object. This type inherits the following: niObject","title":"niSkinInstance"},{"location":"types/niSkinInstance/#properties","text":"","title":"Properties"},{"location":"types/niSkinInstance/#bones","text":"Read-only . The bone influences for this skin instance. Returns : result ( niAVObject [])","title":"bones"},{"location":"types/niSkinInstance/#data","text":"The skinning data. May be shared by multiple skin instances. Returns : result ( niSkinData )","title":"data"},{"location":"types/niSkinInstance/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niSkinInstance/#root","text":"The skeleton root (parent of the root bone). Returns : result ( niNode )","title":"root"},{"location":"types/niSkinInstance/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niSkinInstance/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niSkinInstance/#methods","text":"","title":"Methods"},{"location":"types/niSkinInstance/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niSkinInstance/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niSkinInstance/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niSkinInstance/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niSkinPartition/","text":"niSkinPartition \u2693\ufe0e A container for skinning data, optimized for hardware skinning. The mesh is partitioned in submeshes such that each vertex of a submesh is influenced only by a limited and fixed number of bones (in Morrowind up to 4 bones can deform a single vertex). This type inherits the following: niObject Properties \u2693\ufe0e partitions \u2693\ufe0e Read-only . Access to the array of actual skin partitions. Returns : result ( niSkinPartitionPartition [], nil) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"niSkinPartition"},{"location":"types/niSkinPartition/#niskinpartition","text":"A container for skinning data, optimized for hardware skinning. The mesh is partitioned in submeshes such that each vertex of a submesh is influenced only by a limited and fixed number of bones (in Morrowind up to 4 bones can deform a single vertex). This type inherits the following: niObject","title":"niSkinPartition"},{"location":"types/niSkinPartition/#properties","text":"","title":"Properties"},{"location":"types/niSkinPartition/#partitions","text":"Read-only . Access to the array of actual skin partitions. Returns : result ( niSkinPartitionPartition [], nil)","title":"partitions"},{"location":"types/niSkinPartition/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niSkinPartition/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niSkinPartition/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niSkinPartition/#methods","text":"","title":"Methods"},{"location":"types/niSkinPartition/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niSkinPartition/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niSkinPartition/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niSkinPartition/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niSkinPartitionPartition/","text":"niSkinPartitionPartition \u2693\ufe0e Skinning data for a submesh, optimized for hardware skinning. Properties \u2693\ufe0e bones \u2693\ufe0e Read-only . The list of bone indices (that influence this partition) from the bones array in the parent niSkinInstance node. Returns : result (integer[]) bonesPerVertex \u2693\ufe0e Returns : result (integer) stripLengths \u2693\ufe0e Read-only . Returns : result (integer[]) triangles \u2693\ufe0e Read-only . The triangles that form this submesh. Returns : result ( niTriangle []) vertices \u2693\ufe0e Read-only . Maps the weight/influence list in this submesh to the vertices in the shape being skinned. Returns : result (integer[])","title":"niSkinPartitionPartition"},{"location":"types/niSkinPartitionPartition/#niskinpartitionpartition","text":"Skinning data for a submesh, optimized for hardware skinning.","title":"niSkinPartitionPartition"},{"location":"types/niSkinPartitionPartition/#properties","text":"","title":"Properties"},{"location":"types/niSkinPartitionPartition/#bones","text":"Read-only . The list of bone indices (that influence this partition) from the bones array in the parent niSkinInstance node. Returns : result (integer[])","title":"bones"},{"location":"types/niSkinPartitionPartition/#bonespervertex","text":"Returns : result (integer)","title":"bonesPerVertex"},{"location":"types/niSkinPartitionPartition/#striplengths","text":"Read-only . Returns : result (integer[])","title":"stripLengths"},{"location":"types/niSkinPartitionPartition/#triangles","text":"Read-only . The triangles that form this submesh. Returns : result ( niTriangle [])","title":"triangles"},{"location":"types/niSkinPartitionPartition/#vertices","text":"Read-only . Maps the weight/influence list in this submesh to the vertices in the shape being skinned. Returns : result (integer[])","title":"vertices"},{"location":"types/niSourceTexture/","text":"niSourceTexture \u2693\ufe0e A texture that represent both static and dynamic content, as NiSourceTexture data objects can have their pixel data modified on the fly to implement dynamic texture behavior. This type inherits the following: niTexture , niObjectNET , niObject Properties \u2693\ufe0e controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) fileName \u2693\ufe0e Read-only . The platform-independent version of the filename from which the image was created, or nil if the image was created from pixel data. Returns : result (string) formatPrefs \u2693\ufe0e The NiFormatPrefs of the texture. Returns : result ( niFormatPrefs ) height \u2693\ufe0e Read-only . The height of the texture. Returns : result (number) isStatic \u2693\ufe0e The static flag. Returns : result (boolean) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) pixelData \u2693\ufe0e The app-level pixel data. Returns : result ( niPixelData ) platformFilename \u2693\ufe0e Read-only . The platform-specific version of the filename. Returns : result (string) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) width \u2693\ufe0e Read-only . The width of the texture. Returns : result (number) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) clearPixelData \u2693\ufe0e Detaches any pixel data associated with this texture. Any render-specific data will be maintained, and remain in the GPU's memory. myObject : clearPixelData () clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) loadPixelDataFromFile \u2693\ufe0e Loads the file associated with the texture into memory, and makes it accessible from the pixelData property. myObject : loadPixelDataFromFile () prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) Functions \u2693\ufe0e createFromPath \u2693\ufe0e Creates an niSourceTexture from the given filepath. niSourceTexture . createFromPath ( path , useCached ) Parameters : path (string): The filepath of the texture to load. useCached (boolean): Default : true . If true, the texture will be stored in the normal texture source cache, so that multiple calls to the same path will return the same object. This behavior can be disabled if necessary.","title":"niSourceTexture"},{"location":"types/niSourceTexture/#nisourcetexture","text":"A texture that represent both static and dynamic content, as NiSourceTexture data objects can have their pixel data modified on the fly to implement dynamic texture behavior. This type inherits the following: niTexture , niObjectNET , niObject","title":"niSourceTexture"},{"location":"types/niSourceTexture/#properties","text":"","title":"Properties"},{"location":"types/niSourceTexture/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niSourceTexture/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niSourceTexture/#filename","text":"Read-only . The platform-independent version of the filename from which the image was created, or nil if the image was created from pixel data. Returns : result (string)","title":"fileName"},{"location":"types/niSourceTexture/#formatprefs","text":"The NiFormatPrefs of the texture. Returns : result ( niFormatPrefs )","title":"formatPrefs"},{"location":"types/niSourceTexture/#height","text":"Read-only . The height of the texture. Returns : result (number)","title":"height"},{"location":"types/niSourceTexture/#isstatic","text":"The static flag. Returns : result (boolean)","title":"isStatic"},{"location":"types/niSourceTexture/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niSourceTexture/#pixeldata","text":"The app-level pixel data. Returns : result ( niPixelData )","title":"pixelData"},{"location":"types/niSourceTexture/#platformfilename","text":"Read-only . The platform-specific version of the filename. Returns : result (string)","title":"platformFilename"},{"location":"types/niSourceTexture/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niSourceTexture/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niSourceTexture/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niSourceTexture/#width","text":"Read-only . The width of the texture. Returns : result (number)","title":"width"},{"location":"types/niSourceTexture/#methods","text":"","title":"Methods"},{"location":"types/niSourceTexture/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niSourceTexture/#clearpixeldata","text":"Detaches any pixel data associated with this texture. Any render-specific data will be maintained, and remain in the GPU's memory. myObject : clearPixelData ()","title":"clearPixelData"},{"location":"types/niSourceTexture/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niSourceTexture/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niSourceTexture/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niSourceTexture/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niSourceTexture/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niSourceTexture/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niSourceTexture/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niSourceTexture/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niSourceTexture/#loadpixeldatafromfile","text":"Loads the file associated with the texture into memory, and makes it accessible from the pixelData property. myObject : loadPixelDataFromFile ()","title":"loadPixelDataFromFile"},{"location":"types/niSourceTexture/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niSourceTexture/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niSourceTexture/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niSourceTexture/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niSourceTexture/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niSourceTexture/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niSourceTexture/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niSourceTexture/#functions","text":"","title":"Functions"},{"location":"types/niSourceTexture/#createfrompath","text":"Creates an niSourceTexture from the given filepath. niSourceTexture . createFromPath ( path , useCached ) Parameters : path (string): The filepath of the texture to load. useCached (boolean): Default : true . If true, the texture will be stored in the normal texture source cache, so that multiple calls to the same path will return the same object. This behavior can be disabled if necessary.","title":"createFromPath"},{"location":"types/niSphericalCollider/","text":"niSphericalCollider \u2693\ufe0e This modifier makes particles bounce off of a sphere. This type inherits the following: niParticleCollider , niParticleModifier , niObject Properties \u2693\ufe0e collisionPoint \u2693\ufe0e Returns : result ( tes3vector3 ) collisionTime \u2693\ufe0e Returns : result (number) controller \u2693\ufe0e Access to the generic time controller for particle systems. Returns : result ( niParticleSystemController ) dieOnCollide \u2693\ufe0e If this flag is true a particle that collides with something will be destroyed. Returns : result (boolean) next \u2693\ufe0e Access to the next attached modifier. Returns : result ( niParticleModifier ) position \u2693\ufe0e The center of the deflecting sphere. Returns : result ( tes3vector3 ) radius \u2693\ufe0e The radius of the used spherical deflector. Returns : result (number) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) restitution \u2693\ufe0e The fraction of the original amount of energy the particle retains after a collision. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) spawnOnCollide \u2693\ufe0e This flag controls if a new particle will be spawned on a collision. The new particle is spawned at the position of the old particle with the same attributes. Returns : result (boolean) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"niSphericalCollider"},{"location":"types/niSphericalCollider/#nisphericalcollider","text":"This modifier makes particles bounce off of a sphere. This type inherits the following: niParticleCollider , niParticleModifier , niObject","title":"niSphericalCollider"},{"location":"types/niSphericalCollider/#properties","text":"","title":"Properties"},{"location":"types/niSphericalCollider/#collisionpoint","text":"Returns : result ( tes3vector3 )","title":"collisionPoint"},{"location":"types/niSphericalCollider/#collisiontime","text":"Returns : result (number)","title":"collisionTime"},{"location":"types/niSphericalCollider/#controller","text":"Access to the generic time controller for particle systems. Returns : result ( niParticleSystemController )","title":"controller"},{"location":"types/niSphericalCollider/#dieoncollide","text":"If this flag is true a particle that collides with something will be destroyed. Returns : result (boolean)","title":"dieOnCollide"},{"location":"types/niSphericalCollider/#next","text":"Access to the next attached modifier. Returns : result ( niParticleModifier )","title":"next"},{"location":"types/niSphericalCollider/#position","text":"The center of the deflecting sphere. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/niSphericalCollider/#radius","text":"The radius of the used spherical deflector. Returns : result (number)","title":"radius"},{"location":"types/niSphericalCollider/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niSphericalCollider/#restitution","text":"The fraction of the original amount of energy the particle retains after a collision. Returns : result (number)","title":"restitution"},{"location":"types/niSphericalCollider/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niSphericalCollider/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niSphericalCollider/#spawnoncollide","text":"This flag controls if a new particle will be spawned on a collision. The new particle is spawned at the position of the old particle with the same attributes. Returns : result (boolean)","title":"spawnOnCollide"},{"location":"types/niSphericalCollider/#methods","text":"","title":"Methods"},{"location":"types/niSphericalCollider/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niSphericalCollider/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niSphericalCollider/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niSphericalCollider/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niSpotLight/","text":"niSpotLight \u2693\ufe0e Represents a spotlight in a scene. The street lights, emmithing the illumination in the cone shape can be represented by this class. Spotlights have a specific location and direction, as well as a distance attenuation and angle attenuation functions. The light direction is handled in the same way as in niDirectionalLight - it shines down the model-space positive X axis of the light. This type inherits the following: niPointLight , niLight , niDynamicEffect , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e affectedNodes \u2693\ufe0e The list of nodes that a given dynamic effect will affect. Returns : result ( niNodeLinkedList ) alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) ambient \u2693\ufe0e The ambient light color. Returns : result ( niColor ) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) constantAttenuation \u2693\ufe0e The constant attenuation factor. Returns : result (number) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) diffuse \u2693\ufe0e The diffuse light color. Returns : result ( niColor ) dimmer \u2693\ufe0e This flag scales the overall brightness of all light components. This value must be nonnegative. It is usually less than or equal to 1.0 (although advanced lighting effects may use larger values). Returns : result (number) direction \u2693\ufe0e The direction of the axis of the spotlight cone from the light location in world space. Returns : result ( tes3vector3 ) enabled \u2693\ufe0e The enabled state of a given dynamic effect. Returns : result (boolean) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) linearAttenuation \u2693\ufe0e The linear attenuation factor. Returns : result (number) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) quadraticAttenuation \u2693\ufe0e The quadratic attenuation factor. Returns : result (number) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) specular \u2693\ufe0e This property was inteded to be specular light color in NetImmerse, but in Morrowind it represents the dynamic culling radius. All the color channels are equal to the radius. In practice, this radius represents the light's influence radius. Returns : result ( niColor ) spotAngle \u2693\ufe0e The spotlight angle, in degrees. Controls the size of the light's cone. Returns : result (number) spotExponent \u2693\ufe0e The spotlight angular attenuation exponent. This value may be ignored. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) type \u2693\ufe0e Read-only . The enumerated type of a given dynamic effect. Maps to values in ni.dynamicEffectType table. Returns : result (integer) velocity \u2693\ufe0e The object's local velocity. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) worldBoundOrigin \u2693\ufe0e The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 ) worldBoundRadius \u2693\ufe0e The radius of the object's bounds. Returns : result (number) worldTransform \u2693\ufe0e The object's transformations in the world space. Returns : result ( tes3transform ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) attachAffectedNode \u2693\ufe0e Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list. attachProperty \u2693\ufe0e Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. myObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) detachAffectedNode \u2693\ufe0e Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list. detachAllProperties \u2693\ufe0e Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty []) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) propagatePositionChange \u2693\ufe0e Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setAttenuationForRadius \u2693\ufe0e Sets the light attenuation values for the given radius. Respects the values in the Morrowind.ini file. myObject : setAttenuationForRadius ( radius ) Parameters : radius (integer) setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) setRadius \u2693\ufe0e Sets both the light's influence radius, and its lighting attenuation to match the radius. myObject : setRadius ( radius ) Parameters : radius (integer) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? updateEffects \u2693\ufe0e Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. myObject : updateProperties () Functions \u2693\ufe0e new \u2693\ufe0e Creates a new niPointLight. Sets the light's constant attenuation to 0, linear attenuation to 1 and quadratic attenuation to 0. local light = niPointLight . new () Returns : light ( niPointLight )","title":"niSpotLight"},{"location":"types/niSpotLight/#nispotlight","text":"Represents a spotlight in a scene. The street lights, emmithing the illumination in the cone shape can be represented by this class. Spotlights have a specific location and direction, as well as a distance attenuation and angle attenuation functions. The light direction is handled in the same way as in niDirectionalLight - it shines down the model-space positive X axis of the light. This type inherits the following: niPointLight , niLight , niDynamicEffect , niAVObject , niObjectNET , niObject","title":"niSpotLight"},{"location":"types/niSpotLight/#properties","text":"","title":"Properties"},{"location":"types/niSpotLight/#affectednodes","text":"The list of nodes that a given dynamic effect will affect. Returns : result ( niNodeLinkedList )","title":"affectedNodes"},{"location":"types/niSpotLight/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niSpotLight/#ambient","text":"The ambient light color. Returns : result ( niColor )","title":"ambient"},{"location":"types/niSpotLight/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niSpotLight/#constantattenuation","text":"The constant attenuation factor. Returns : result (number)","title":"constantAttenuation"},{"location":"types/niSpotLight/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niSpotLight/#diffuse","text":"The diffuse light color. Returns : result ( niColor )","title":"diffuse"},{"location":"types/niSpotLight/#dimmer","text":"This flag scales the overall brightness of all light components. This value must be nonnegative. It is usually less than or equal to 1.0 (although advanced lighting effects may use larger values). Returns : result (number)","title":"dimmer"},{"location":"types/niSpotLight/#direction","text":"The direction of the axis of the spotlight cone from the light location in world space. Returns : result ( tes3vector3 )","title":"direction"},{"location":"types/niSpotLight/#enabled","text":"The enabled state of a given dynamic effect. Returns : result (boolean)","title":"enabled"},{"location":"types/niSpotLight/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niSpotLight/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niSpotLight/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niSpotLight/#linearattenuation","text":"The linear attenuation factor. Returns : result (number)","title":"linearAttenuation"},{"location":"types/niSpotLight/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niSpotLight/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niSpotLight/#parent","text":"Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niSpotLight/#properties_1","text":"Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niSpotLight/#quadraticattenuation","text":"The quadratic attenuation factor. Returns : result (number)","title":"quadraticAttenuation"},{"location":"types/niSpotLight/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niSpotLight/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niSpotLight/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niSpotLight/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niSpotLight/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niSpotLight/#specular","text":"This property was inteded to be specular light color in NetImmerse, but in Morrowind it represents the dynamic culling radius. All the color channels are equal to the radius. In practice, this radius represents the light's influence radius. Returns : result ( niColor )","title":"specular"},{"location":"types/niSpotLight/#spotangle","text":"The spotlight angle, in degrees. Controls the size of the light's cone. Returns : result (number)","title":"spotAngle"},{"location":"types/niSpotLight/#spotexponent","text":"The spotlight angular attenuation exponent. This value may be ignored. Returns : result (number)","title":"spotExponent"},{"location":"types/niSpotLight/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niSpotLight/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niSpotLight/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niSpotLight/#type","text":"Read-only . The enumerated type of a given dynamic effect. Maps to values in ni.dynamicEffectType table. Returns : result (integer)","title":"type"},{"location":"types/niSpotLight/#velocity","text":"The object's local velocity. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/niSpotLight/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niSpotLight/#worldboundorigin","text":"The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 )","title":"worldBoundOrigin"},{"location":"types/niSpotLight/#worldboundradius","text":"The radius of the object's bounds. Returns : result (number)","title":"worldBoundRadius"},{"location":"types/niSpotLight/#worldtransform","text":"The object's transformations in the world space. Returns : result ( tes3transform )","title":"worldTransform"},{"location":"types/niSpotLight/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil)","title":"zBufferProperty"},{"location":"types/niSpotLight/#methods","text":"","title":"Methods"},{"location":"types/niSpotLight/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niSpotLight/#attachaffectednode","text":"Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list.","title":"attachAffectedNode"},{"location":"types/niSpotLight/#attachproperty","text":"Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niSpotLight/#cleartransforms","text":"Resets the object's local transform. myObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niSpotLight/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niSpotLight/#detachaffectednode","text":"Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"detachAffectedNode"},{"location":"types/niSpotLight/#detachallproperties","text":"Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty [])","title":"detachAllProperties"},{"location":"types/niSpotLight/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niSpotLight/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niSpotLight/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niSpotLight/#getproperty","text":"Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niSpotLight/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niSpotLight/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niSpotLight/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niSpotLight/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niSpotLight/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niSpotLight/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niSpotLight/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niSpotLight/#propagatepositionchange","text":"Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"propagatePositionChange"},{"location":"types/niSpotLight/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niSpotLight/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niSpotLight/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niSpotLight/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niSpotLight/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niSpotLight/#setattenuationforradius","text":"Sets the light attenuation values for the given radius. Respects the values in the Morrowind.ini file. myObject : setAttenuationForRadius ( radius ) Parameters : radius (integer)","title":"setAttenuationForRadius"},{"location":"types/niSpotLight/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niSpotLight/#setradius","text":"Sets both the light's influence radius, and its lighting attenuation to match the radius. myObject : setRadius ( radius ) Parameters : radius (integer)","title":"setRadius"},{"location":"types/niSpotLight/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"update"},{"location":"types/niSpotLight/#updateeffects","text":"Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects ()","title":"updateEffects"},{"location":"types/niSpotLight/#updateproperties","text":"Update all attached properties. myObject : updateProperties ()","title":"updateProperties"},{"location":"types/niSpotLight/#functions","text":"","title":"Functions"},{"location":"types/niSpotLight/#new","text":"Creates a new niPointLight. Sets the light's constant attenuation to 0, linear attenuation to 1 and quadratic attenuation to 0. local light = niPointLight . new () Returns : light ( niPointLight )","title":"new"},{"location":"types/niStencilProperty/","text":"niStencilProperty \u2693\ufe0e A rendering property that controls the use of a stencil buffer when rendering. Stencil buffering allows effects such as cutouts in a screen, decal polygons without Z-buffer \"aliasing\", and advanced effects such as volumetric shadows. It also includes a draw-mode setting to allow the game engine to control the culling mode of a set of geometry. This table describes the actions that can be set to occur as a result of tests for niStencilProperty: Value Mode Description 0 ACTION_KEEP Keep the current value in the stencil buffer. 1 ACTION_ZERO Write zero to the stencil buffer. 2 ACTION_REPLACE Write the reference value to the stencil buffer. 3 ACTION_INCREMENT Increment the value in the stencil buffer. 4 ACTION_DECREMENT Decrement the value in the stencil buffer. 5 ACTION_INVERT Bitwise invert the value in the stencil buffer. This type inherits the following: niProperty , niObjectNET , niObject Properties \u2693\ufe0e controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) drawMode \u2693\ufe0e The face drawing (culling) mode used to draw the object. Value Mode Behavior 0 DRAW_CCW_OR_BOTH The default mode, chooses between DRAW_CCW or DRAW_BOTH. 1 DRAW_CCW Draw only the triangles whose vertices are ordered counter-clockwise with respect to the viewer (Standard behavior). 2 DRAW_CW Draw only the triangles whose vertices are ordered clockwise with respect to the viewer (Effectively flips the faces). 3 DRAW_BOTH Do not cull back faces of any kind. Draw all triangles, regardless of orientation (Effectively force double-sided). Returns : result (integer) enabled \u2693\ufe0e The value of the stencil buffer enable flag. Returns : result (boolean) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) failAction \u2693\ufe0e The action that is taken in the stencil buffer when the stencil test fails. See the table at the top for available actions. Returns : result (integer) mask \u2693\ufe0e The mask value of the stencil buffer. This value is AND-ed with the reference and the buffer value prior to comparing and writing the buffer. The default is 0xffffffff . Returns : result (integer) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) passAction \u2693\ufe0e The action that is taken in the stencil buffer when the stencil test passes and the pixel passes the Z-buffer test. See the table at the top for available actions. Returns : result (integer) propertyFlags \u2693\ufe0e Returns : result (integer) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) reference \u2693\ufe0e The stencil reference value. It's compared against the stencil value at an individual pixel to determine the success of the stencil test. Returns : result (integer) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) testFunc \u2693\ufe0e The stencil buffer test function used to test the reference value against the buffer value. Value Mode Description 0 TEST_NEVER Test will allways return false. Nothing is drawn at all. 1 TEST_LESS The test will only succeed if the pixel is nearer than the previous pixel. 2 TEST_EQUAL Test will only succeed if the z value of the pixel to be drawn is equal to the value of the previous drawn pixel. 3 TEST_LESS_EQUAL Test will succeed if the z value of the pixel to be drawn is smaller than or equal to the value in the Stencil Buffer. 4 TEST_GREATER Opposite of TEST_LESS 5 TEST_NOT_EQUAL Test will succeed if the z value of the pixel to be drawn is NOT equal to the value of the previously drawn pixel. 6 TEST_GREATER_EQUAL Opposite of TEST_LESS_EQUAL. 7 TEST_ALWAYS Test will allways succeed. The Stencil Buffer value is ignored. Returns : result (integer) type \u2693\ufe0e Read-only . The unique class identifier number of the given rendering property. The types are available in ni.propertyType table. Returns : result (integer) zFailAction \u2693\ufe0e The action that is taken in the stencil buffer when the stencil test passes but the pixel fails the Z-buffer test. See the table at the top for available actions. Returns : result (integer) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"niStencilProperty"},{"location":"types/niStencilProperty/#nistencilproperty","text":"A rendering property that controls the use of a stencil buffer when rendering. Stencil buffering allows effects such as cutouts in a screen, decal polygons without Z-buffer \"aliasing\", and advanced effects such as volumetric shadows. It also includes a draw-mode setting to allow the game engine to control the culling mode of a set of geometry. This table describes the actions that can be set to occur as a result of tests for niStencilProperty: Value Mode Description 0 ACTION_KEEP Keep the current value in the stencil buffer. 1 ACTION_ZERO Write zero to the stencil buffer. 2 ACTION_REPLACE Write the reference value to the stencil buffer. 3 ACTION_INCREMENT Increment the value in the stencil buffer. 4 ACTION_DECREMENT Decrement the value in the stencil buffer. 5 ACTION_INVERT Bitwise invert the value in the stencil buffer. This type inherits the following: niProperty , niObjectNET , niObject","title":"niStencilProperty"},{"location":"types/niStencilProperty/#properties","text":"","title":"Properties"},{"location":"types/niStencilProperty/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niStencilProperty/#drawmode","text":"The face drawing (culling) mode used to draw the object. Value Mode Behavior 0 DRAW_CCW_OR_BOTH The default mode, chooses between DRAW_CCW or DRAW_BOTH. 1 DRAW_CCW Draw only the triangles whose vertices are ordered counter-clockwise with respect to the viewer (Standard behavior). 2 DRAW_CW Draw only the triangles whose vertices are ordered clockwise with respect to the viewer (Effectively flips the faces). 3 DRAW_BOTH Do not cull back faces of any kind. Draw all triangles, regardless of orientation (Effectively force double-sided). Returns : result (integer)","title":"drawMode"},{"location":"types/niStencilProperty/#enabled","text":"The value of the stencil buffer enable flag. Returns : result (boolean)","title":"enabled"},{"location":"types/niStencilProperty/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niStencilProperty/#failaction","text":"The action that is taken in the stencil buffer when the stencil test fails. See the table at the top for available actions. Returns : result (integer)","title":"failAction"},{"location":"types/niStencilProperty/#mask","text":"The mask value of the stencil buffer. This value is AND-ed with the reference and the buffer value prior to comparing and writing the buffer. The default is 0xffffffff . Returns : result (integer)","title":"mask"},{"location":"types/niStencilProperty/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niStencilProperty/#passaction","text":"The action that is taken in the stencil buffer when the stencil test passes and the pixel passes the Z-buffer test. See the table at the top for available actions. Returns : result (integer)","title":"passAction"},{"location":"types/niStencilProperty/#propertyflags","text":"Returns : result (integer)","title":"propertyFlags"},{"location":"types/niStencilProperty/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niStencilProperty/#reference","text":"The stencil reference value. It's compared against the stencil value at an individual pixel to determine the success of the stencil test. Returns : result (integer)","title":"reference"},{"location":"types/niStencilProperty/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niStencilProperty/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niStencilProperty/#testfunc","text":"The stencil buffer test function used to test the reference value against the buffer value. Value Mode Description 0 TEST_NEVER Test will allways return false. Nothing is drawn at all. 1 TEST_LESS The test will only succeed if the pixel is nearer than the previous pixel. 2 TEST_EQUAL Test will only succeed if the z value of the pixel to be drawn is equal to the value of the previous drawn pixel. 3 TEST_LESS_EQUAL Test will succeed if the z value of the pixel to be drawn is smaller than or equal to the value in the Stencil Buffer. 4 TEST_GREATER Opposite of TEST_LESS 5 TEST_NOT_EQUAL Test will succeed if the z value of the pixel to be drawn is NOT equal to the value of the previously drawn pixel. 6 TEST_GREATER_EQUAL Opposite of TEST_LESS_EQUAL. 7 TEST_ALWAYS Test will allways succeed. The Stencil Buffer value is ignored. Returns : result (integer)","title":"testFunc"},{"location":"types/niStencilProperty/#type","text":"Read-only . The unique class identifier number of the given rendering property. The types are available in ni.propertyType table. Returns : result (integer)","title":"type"},{"location":"types/niStencilProperty/#zfailaction","text":"The action that is taken in the stencil buffer when the stencil test passes but the pixel fails the Z-buffer test. See the table at the top for available actions. Returns : result (integer)","title":"zFailAction"},{"location":"types/niStencilProperty/#methods","text":"","title":"Methods"},{"location":"types/niStencilProperty/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niStencilProperty/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niStencilProperty/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niStencilProperty/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niStencilProperty/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niStencilProperty/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niStencilProperty/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niStencilProperty/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niStencilProperty/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niStencilProperty/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niStencilProperty/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niStencilProperty/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niStencilProperty/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niStencilProperty/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niStencilProperty/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niStencilProperty/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niStringExtraData/","text":"niStringExtraData \u2693\ufe0e A simple extra data that contains a string. This type inherits the following: niExtraData , niObject Properties \u2693\ufe0e genericData \u2693\ufe0e Read-only . Generic data held in the extra data. This is not used if a subtype of extra data is used. Returns : result (number[]) next \u2693\ufe0e The next extra data available on the object. Returns : result ( niExtraData ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) string \u2693\ufe0e The string kept on the niStringExtraData. Returns : result (string) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. Functions \u2693\ufe0e new \u2693\ufe0e Creates an niStringExtraData. local extraData = niStringExtraData . new ( string ) Parameters : string (string): The initial value for the extra data to store. Returns : extraData ( niStringExtraData )","title":"niStringExtraData"},{"location":"types/niStringExtraData/#nistringextradata","text":"A simple extra data that contains a string. This type inherits the following: niExtraData , niObject","title":"niStringExtraData"},{"location":"types/niStringExtraData/#properties","text":"","title":"Properties"},{"location":"types/niStringExtraData/#genericdata","text":"Read-only . Generic data held in the extra data. This is not used if a subtype of extra data is used. Returns : result (number[])","title":"genericData"},{"location":"types/niStringExtraData/#next","text":"The next extra data available on the object. Returns : result ( niExtraData )","title":"next"},{"location":"types/niStringExtraData/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niStringExtraData/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niStringExtraData/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niStringExtraData/#string","text":"The string kept on the niStringExtraData. Returns : result (string)","title":"string"},{"location":"types/niStringExtraData/#methods","text":"","title":"Methods"},{"location":"types/niStringExtraData/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niStringExtraData/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niStringExtraData/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niStringExtraData/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niStringExtraData/#functions","text":"","title":"Functions"},{"location":"types/niStringExtraData/#new","text":"Creates an niStringExtraData. local extraData = niStringExtraData . new ( string ) Parameters : string (string): The initial value for the extra data to store. Returns : extraData ( niStringExtraData )","title":"new"},{"location":"types/niSwitchNode/","text":"niSwitchNode \u2693\ufe0e Represents groups of multiple scene graph subtrees, only one of which is visible at any given time. They are useful for showing different states of a model depending on engine / lua logic. If you detach the active subtree, the switch node will set the active subtree to none, or to an index of -1. This type inherits the following: niNode , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) children \u2693\ufe0e Read-only . The children of the node. Can have nil entries. Returns : result ( niAVObject []) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) effectList \u2693\ufe0e Read-only . The effect list of the node. Attached effects affect the node and all of its child subtree geometry. Returns : result ( niDynamicEffectLinkedList ) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) switchIndex \u2693\ufe0e The value of the active child index. This index represents the index of the active child in the children array of the niSwitchNode. If this index is -1, then no child is active. Returns : result (integer) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) velocity \u2693\ufe0e The object's local velocity. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) worldBoundOrigin \u2693\ufe0e The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 ) worldBoundRadius \u2693\ufe0e The radius of the object's bounds. Returns : result (number) worldTransform \u2693\ufe0e The object's transformations in the world space. Returns : result ( tes3transform ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) attachChild \u2693\ufe0e Attaches the child to the children list of the node. Doesn't check to see if the object is already in the child list. myObject : attachChild ( child , useFirstAvailable ) Parameters : child ( niAVObject ) useFirstAvailable (boolean): Default : false . Use the first available space in the list. If false appends the child at the end of the list. attachEffect \u2693\ufe0e Attaches a dynamic effect to the node. It will not attach the same effect twice. myObject : attachEffect ( effect ) Parameters : effect ( niDynamicEffect ) attachProperty \u2693\ufe0e Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. myObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) createBoundingBox \u2693\ufe0e Calculates and creates a bounding box for the object. The existing bounding box, if any, will not be used, a fresh one will always be calculated. local boundingBox = myObject : createBoundingBox () Returns : boundingBox ( tes3boundingBox ): The newly created bounding box. detachAllEffects \u2693\ufe0e Detaches all dynamic effect from the effect list of the node. myObject : detachAllEffects () detachAllProperties \u2693\ufe0e Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty []) detachChild \u2693\ufe0e Detaches the child from the children list of the node. Returns the detached child. local detachedChild = myObject : detachChild ( child ) Parameters : child ( niAVObject ) Returns : detachedChild ( niAVObject ) detachChildAt \u2693\ufe0e Detaches the child at the specified index from the children list of the node. Returns the detached child. local detachedChild = myObject : detachChildAt ( index ) Parameters : index (integer) Returns : detachedChild ( niAVObject ) detachEffect \u2693\ufe0e Detaches the given dynamic effect from the effect list of the node, if it was present. Has no effect if the effect wasn't attached to the node. myObject : detachEffect ( effect ) Parameters : effect ( niDynamicEffect ) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getActiveChild \u2693\ufe0e Gets the active child node, or returns nil if the switch index is -1. local result = myObject : getActiveChild () Returns : result ( niAVObject ) getEffect \u2693\ufe0e Gets the effect of the given type. local effect = myObject : getEffect ( type ) Parameters : type (integer): Use the values from ni.dynamicEffectType table. Returns : effect ( niDynamicEffect , nil) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) propagatePositionChange \u2693\ufe0e Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? updateEffects \u2693\ufe0e Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. myObject : updateProperties () Functions \u2693\ufe0e new \u2693\ufe0e Creates a new, empty NiNode. local node = niNode . new () Returns : node ( niNode )","title":"niSwitchNode"},{"location":"types/niSwitchNode/#niswitchnode","text":"Represents groups of multiple scene graph subtrees, only one of which is visible at any given time. They are useful for showing different states of a model depending on engine / lua logic. If you detach the active subtree, the switch node will set the active subtree to none, or to an index of -1. This type inherits the following: niNode , niAVObject , niObjectNET , niObject","title":"niSwitchNode"},{"location":"types/niSwitchNode/#properties","text":"","title":"Properties"},{"location":"types/niSwitchNode/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niSwitchNode/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niSwitchNode/#children","text":"Read-only . The children of the node. Can have nil entries. Returns : result ( niAVObject [])","title":"children"},{"location":"types/niSwitchNode/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niSwitchNode/#effectlist","text":"Read-only . The effect list of the node. Attached effects affect the node and all of its child subtree geometry. Returns : result ( niDynamicEffectLinkedList )","title":"effectList"},{"location":"types/niSwitchNode/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niSwitchNode/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niSwitchNode/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niSwitchNode/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niSwitchNode/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niSwitchNode/#parent","text":"Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niSwitchNode/#properties_1","text":"Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niSwitchNode/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niSwitchNode/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niSwitchNode/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niSwitchNode/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niSwitchNode/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niSwitchNode/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niSwitchNode/#switchindex","text":"The value of the active child index. This index represents the index of the active child in the children array of the niSwitchNode. If this index is -1, then no child is active. Returns : result (integer)","title":"switchIndex"},{"location":"types/niSwitchNode/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niSwitchNode/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niSwitchNode/#velocity","text":"The object's local velocity. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/niSwitchNode/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niSwitchNode/#worldboundorigin","text":"The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 )","title":"worldBoundOrigin"},{"location":"types/niSwitchNode/#worldboundradius","text":"The radius of the object's bounds. Returns : result (number)","title":"worldBoundRadius"},{"location":"types/niSwitchNode/#worldtransform","text":"The object's transformations in the world space. Returns : result ( tes3transform )","title":"worldTransform"},{"location":"types/niSwitchNode/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil)","title":"zBufferProperty"},{"location":"types/niSwitchNode/#methods","text":"","title":"Methods"},{"location":"types/niSwitchNode/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niSwitchNode/#attachchild","text":"Attaches the child to the children list of the node. Doesn't check to see if the object is already in the child list. myObject : attachChild ( child , useFirstAvailable ) Parameters : child ( niAVObject ) useFirstAvailable (boolean): Default : false . Use the first available space in the list. If false appends the child at the end of the list.","title":"attachChild"},{"location":"types/niSwitchNode/#attacheffect","text":"Attaches a dynamic effect to the node. It will not attach the same effect twice. myObject : attachEffect ( effect ) Parameters : effect ( niDynamicEffect )","title":"attachEffect"},{"location":"types/niSwitchNode/#attachproperty","text":"Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niSwitchNode/#cleartransforms","text":"Resets the object's local transform. myObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niSwitchNode/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niSwitchNode/#createboundingbox","text":"Calculates and creates a bounding box for the object. The existing bounding box, if any, will not be used, a fresh one will always be calculated. local boundingBox = myObject : createBoundingBox () Returns : boundingBox ( tes3boundingBox ): The newly created bounding box.","title":"createBoundingBox"},{"location":"types/niSwitchNode/#detachalleffects","text":"Detaches all dynamic effect from the effect list of the node. myObject : detachAllEffects ()","title":"detachAllEffects"},{"location":"types/niSwitchNode/#detachallproperties","text":"Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty [])","title":"detachAllProperties"},{"location":"types/niSwitchNode/#detachchild","text":"Detaches the child from the children list of the node. Returns the detached child. local detachedChild = myObject : detachChild ( child ) Parameters : child ( niAVObject ) Returns : detachedChild ( niAVObject )","title":"detachChild"},{"location":"types/niSwitchNode/#detachchildat","text":"Detaches the child at the specified index from the children list of the node. Returns the detached child. local detachedChild = myObject : detachChildAt ( index ) Parameters : index (integer) Returns : detachedChild ( niAVObject )","title":"detachChildAt"},{"location":"types/niSwitchNode/#detacheffect","text":"Detaches the given dynamic effect from the effect list of the node, if it was present. Has no effect if the effect wasn't attached to the node. myObject : detachEffect ( effect ) Parameters : effect ( niDynamicEffect )","title":"detachEffect"},{"location":"types/niSwitchNode/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niSwitchNode/#getactivechild","text":"Gets the active child node, or returns nil if the switch index is -1. local result = myObject : getActiveChild () Returns : result ( niAVObject )","title":"getActiveChild"},{"location":"types/niSwitchNode/#geteffect","text":"Gets the effect of the given type. local effect = myObject : getEffect ( type ) Parameters : type (integer): Use the values from ni.dynamicEffectType table. Returns : effect ( niDynamicEffect , nil)","title":"getEffect"},{"location":"types/niSwitchNode/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niSwitchNode/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niSwitchNode/#getproperty","text":"Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niSwitchNode/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niSwitchNode/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niSwitchNode/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niSwitchNode/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niSwitchNode/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niSwitchNode/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niSwitchNode/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niSwitchNode/#propagatepositionchange","text":"Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"propagatePositionChange"},{"location":"types/niSwitchNode/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niSwitchNode/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niSwitchNode/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niSwitchNode/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niSwitchNode/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niSwitchNode/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niSwitchNode/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"update"},{"location":"types/niSwitchNode/#updateeffects","text":"Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects ()","title":"updateEffects"},{"location":"types/niSwitchNode/#updateproperties","text":"Update all attached properties. myObject : updateProperties ()","title":"updateProperties"},{"location":"types/niSwitchNode/#functions","text":"","title":"Functions"},{"location":"types/niSwitchNode/#new","text":"Creates a new, empty NiNode. local node = niNode . new () Returns : node ( niNode )","title":"new"},{"location":"types/niTCBFloatKey/","text":"niTCBFloatKey \u2693\ufe0e An animation key for tension-, continuity-, and bias-derived values. This type inherits the following: niFloatKey , niAnimationKey Properties \u2693\ufe0e bias \u2693\ufe0e The bias value for the TCB scale animation key. Returns : result (number) continuity \u2693\ufe0e The continuity value for the TCB scale animation key. Returns : result (number) tension \u2693\ufe0e The tension value for the TCB scale animation key. Returns : result (number) timing \u2693\ufe0e The timing of the animation key. Returns : result (number) value \u2693\ufe0e The arbitrary value of the NiFloatKey. Returns : result (number)","title":"niTCBFloatKey"},{"location":"types/niTCBFloatKey/#nitcbfloatkey","text":"An animation key for tension-, continuity-, and bias-derived values. This type inherits the following: niFloatKey , niAnimationKey","title":"niTCBFloatKey"},{"location":"types/niTCBFloatKey/#properties","text":"","title":"Properties"},{"location":"types/niTCBFloatKey/#bias","text":"The bias value for the TCB scale animation key. Returns : result (number)","title":"bias"},{"location":"types/niTCBFloatKey/#continuity","text":"The continuity value for the TCB scale animation key. Returns : result (number)","title":"continuity"},{"location":"types/niTCBFloatKey/#tension","text":"The tension value for the TCB scale animation key. Returns : result (number)","title":"tension"},{"location":"types/niTCBFloatKey/#timing","text":"The timing of the animation key. Returns : result (number)","title":"timing"},{"location":"types/niTCBFloatKey/#value","text":"The arbitrary value of the NiFloatKey. Returns : result (number)","title":"value"},{"location":"types/niTCBPosKey/","text":"niTCBPosKey \u2693\ufe0e An animation key for tension-, continuity-, and bias-derived positioning. This type inherits the following: niPosKey , niAnimationKey Properties \u2693\ufe0e bias \u2693\ufe0e The bias value for the TCB position animation key. Returns : result (number) continuity \u2693\ufe0e The continuity value for the TCB position animation key. Returns : result (number) tension \u2693\ufe0e The tension value for the TCB position animation key. Returns : result (number) timing \u2693\ufe0e The timing of the animation key. Returns : result (number) value \u2693\ufe0e The position value of the animation key. Returns : result ( tes3vector3 )","title":"niTCBPosKey"},{"location":"types/niTCBPosKey/#nitcbposkey","text":"An animation key for tension-, continuity-, and bias-derived positioning. This type inherits the following: niPosKey , niAnimationKey","title":"niTCBPosKey"},{"location":"types/niTCBPosKey/#properties","text":"","title":"Properties"},{"location":"types/niTCBPosKey/#bias","text":"The bias value for the TCB position animation key. Returns : result (number)","title":"bias"},{"location":"types/niTCBPosKey/#continuity","text":"The continuity value for the TCB position animation key. Returns : result (number)","title":"continuity"},{"location":"types/niTCBPosKey/#tension","text":"The tension value for the TCB position animation key. Returns : result (number)","title":"tension"},{"location":"types/niTCBPosKey/#timing","text":"The timing of the animation key. Returns : result (number)","title":"timing"},{"location":"types/niTCBPosKey/#value","text":"The position value of the animation key. Returns : result ( tes3vector3 )","title":"value"},{"location":"types/niTCBRotKey/","text":"niTCBRotKey \u2693\ufe0e An animation key for tension-, continuity-, and bias-derived rotating. This type inherits the following: niRotKey , niAnimationKey Properties \u2693\ufe0e bias \u2693\ufe0e The bias value for the TCB rotation animation key. Returns : result (number) continuity \u2693\ufe0e The continuity value for the TCB rotation animation key. Returns : result (number) tension \u2693\ufe0e The tension value for the TCB rotation animation key. Returns : result (number) timing \u2693\ufe0e The timing of the animation key. Returns : result (number) value \u2693\ufe0e The rotation value of the animation key. Returns : result ( niQuaternion )","title":"niTCBRotKey"},{"location":"types/niTCBRotKey/#nitcbrotkey","text":"An animation key for tension-, continuity-, and bias-derived rotating. This type inherits the following: niRotKey , niAnimationKey","title":"niTCBRotKey"},{"location":"types/niTCBRotKey/#properties","text":"","title":"Properties"},{"location":"types/niTCBRotKey/#bias","text":"The bias value for the TCB rotation animation key. Returns : result (number)","title":"bias"},{"location":"types/niTCBRotKey/#continuity","text":"The continuity value for the TCB rotation animation key. Returns : result (number)","title":"continuity"},{"location":"types/niTCBRotKey/#tension","text":"The tension value for the TCB rotation animation key. Returns : result (number)","title":"tension"},{"location":"types/niTCBRotKey/#timing","text":"The timing of the animation key. Returns : result (number)","title":"timing"},{"location":"types/niTCBRotKey/#value","text":"The rotation value of the animation key. Returns : result ( niQuaternion )","title":"value"},{"location":"types/niTES3ExtraData/","text":"niTES3ExtraData \u2693\ufe0e A simple extra data that stores a tes3reference object. This type inherits the following: niExtraData , niObject Properties \u2693\ufe0e genericData \u2693\ufe0e Read-only . Generic data held in the extra data. This is not used if a subtype of extra data is used. Returns : result (number[]) next \u2693\ufe0e The next extra data available on the object. Returns : result ( niExtraData ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) reference \u2693\ufe0e The reference stored on this extra data. Returns : result ( tes3reference ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"niTES3ExtraData"},{"location":"types/niTES3ExtraData/#nites3extradata","text":"A simple extra data that stores a tes3reference object. This type inherits the following: niExtraData , niObject","title":"niTES3ExtraData"},{"location":"types/niTES3ExtraData/#properties","text":"","title":"Properties"},{"location":"types/niTES3ExtraData/#genericdata","text":"Read-only . Generic data held in the extra data. This is not used if a subtype of extra data is used. Returns : result (number[])","title":"genericData"},{"location":"types/niTES3ExtraData/#next","text":"The next extra data available on the object. Returns : result ( niExtraData )","title":"next"},{"location":"types/niTES3ExtraData/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niTES3ExtraData/#reference","text":"The reference stored on this extra data. Returns : result ( tes3reference )","title":"reference"},{"location":"types/niTES3ExtraData/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niTES3ExtraData/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niTES3ExtraData/#methods","text":"","title":"Methods"},{"location":"types/niTES3ExtraData/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niTES3ExtraData/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niTES3ExtraData/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niTES3ExtraData/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niTextKey/","text":"niTextKey \u2693\ufe0e A class used to represent text notes that have an associated time value. They are used for designating the start and stop of animations and the triggering of sounds. Properties \u2693\ufe0e text \u2693\ufe0e Returns : result (string) time \u2693\ufe0e Returns : result (number)","title":"niTextKey"},{"location":"types/niTextKey/#nitextkey","text":"A class used to represent text notes that have an associated time value. They are used for designating the start and stop of animations and the triggering of sounds.","title":"niTextKey"},{"location":"types/niTextKey/#properties","text":"","title":"Properties"},{"location":"types/niTextKey/#text","text":"Returns : result (string)","title":"text"},{"location":"types/niTextKey/#time","text":"Returns : result (number)","title":"time"},{"location":"types/niTextKeyExtraData/","text":"niTextKeyExtraData \u2693\ufe0e A class used to store an array of niTextKey objects. These objects are a list of textual notes and at which time they take effect. These keys are used for designating the start and stop of animations and the triggering of sounds. This type inherits the following: niExtraData , niObject Properties \u2693\ufe0e genericData \u2693\ufe0e Read-only . Generic data held in the extra data. This is not used if a subtype of extra data is used. Returns : result (number[]) keys \u2693\ufe0e Read-only . The access to the text key objects stored on this niTextKeyExtraData. Returns : result ( niTextKey []) next \u2693\ufe0e The next extra data available on the object. Returns : result ( niExtraData ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"niTextKeyExtraData"},{"location":"types/niTextKeyExtraData/#nitextkeyextradata","text":"A class used to store an array of niTextKey objects. These objects are a list of textual notes and at which time they take effect. These keys are used for designating the start and stop of animations and the triggering of sounds. This type inherits the following: niExtraData , niObject","title":"niTextKeyExtraData"},{"location":"types/niTextKeyExtraData/#properties","text":"","title":"Properties"},{"location":"types/niTextKeyExtraData/#genericdata","text":"Read-only . Generic data held in the extra data. This is not used if a subtype of extra data is used. Returns : result (number[])","title":"genericData"},{"location":"types/niTextKeyExtraData/#keys","text":"Read-only . The access to the text key objects stored on this niTextKeyExtraData. Returns : result ( niTextKey [])","title":"keys"},{"location":"types/niTextKeyExtraData/#next","text":"The next extra data available on the object. Returns : result ( niExtraData )","title":"next"},{"location":"types/niTextKeyExtraData/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niTextKeyExtraData/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niTextKeyExtraData/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niTextKeyExtraData/#methods","text":"","title":"Methods"},{"location":"types/niTextKeyExtraData/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niTextKeyExtraData/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niTextKeyExtraData/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niTextKeyExtraData/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niTexture/","text":"niTexture \u2693\ufe0e Represents all texture objects that are created from a file or a block of in-memory pixel data. This type inherits the following: niObjectNET , niObject Properties \u2693\ufe0e controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) formatPrefs \u2693\ufe0e The NiFormatPrefs of the texture. Returns : result ( niFormatPrefs ) height \u2693\ufe0e Read-only . The height of the texture. Returns : result (number) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) width \u2693\ufe0e Read-only . The width of the texture. Returns : result (number) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"niTexture"},{"location":"types/niTexture/#nitexture","text":"Represents all texture objects that are created from a file or a block of in-memory pixel data. This type inherits the following: niObjectNET , niObject","title":"niTexture"},{"location":"types/niTexture/#properties","text":"","title":"Properties"},{"location":"types/niTexture/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niTexture/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niTexture/#formatprefs","text":"The NiFormatPrefs of the texture. Returns : result ( niFormatPrefs )","title":"formatPrefs"},{"location":"types/niTexture/#height","text":"Read-only . The height of the texture. Returns : result (number)","title":"height"},{"location":"types/niTexture/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niTexture/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niTexture/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niTexture/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niTexture/#width","text":"Read-only . The width of the texture. Returns : result (number)","title":"width"},{"location":"types/niTexture/#methods","text":"","title":"Methods"},{"location":"types/niTexture/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niTexture/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niTexture/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niTexture/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niTexture/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niTexture/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niTexture/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niTexture/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niTexture/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niTexture/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niTexture/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niTexture/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niTexture/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niTexture/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niTexture/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niTexture/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niTextureEffect/","text":"niTextureEffect \u2693\ufe0e Represents an effect that uses projected textures such as projected lights (gobos) and shadows, environment maps, and fog maps. Should be in both the children list and effects list of the niTriShape object. For Morrowind: the bump map can be used to bump the environment map (note that the bump map is ignored if no niTextureEffect object is present). This type inherits the following: niDynamicEffect , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e affectedNodes \u2693\ufe0e The list of nodes that a given dynamic effect will affect. Returns : result ( niNodeLinkedList ) alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) enabled \u2693\ufe0e The enabled state of a given dynamic effect. Returns : result (boolean) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) sourceTexture \u2693\ufe0e The texture used for the texture effect. Returns : result ( niSourceTexture ) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) type \u2693\ufe0e Read-only . The enumerated type of a given dynamic effect. Maps to values in ni.dynamicEffectType table. Returns : result (integer) velocity \u2693\ufe0e The object's local velocity. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) worldBoundOrigin \u2693\ufe0e The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 ) worldBoundRadius \u2693\ufe0e The radius of the object's bounds. Returns : result (number) worldTransform \u2693\ufe0e The object's transformations in the world space. Returns : result ( tes3transform ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) attachAffectedNode \u2693\ufe0e Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list. attachProperty \u2693\ufe0e Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. myObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) detachAffectedNode \u2693\ufe0e Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list. detachAllProperties \u2693\ufe0e Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty []) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) propagatePositionChange \u2693\ufe0e Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? updateEffects \u2693\ufe0e Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. myObject : updateProperties () Functions \u2693\ufe0e new \u2693\ufe0e Creates a new texture effect object. local effect = niTextureEffect . new () Returns : effect ( niTextureEffect )","title":"niTextureEffect"},{"location":"types/niTextureEffect/#nitextureeffect","text":"Represents an effect that uses projected textures such as projected lights (gobos) and shadows, environment maps, and fog maps. Should be in both the children list and effects list of the niTriShape object. For Morrowind: the bump map can be used to bump the environment map (note that the bump map is ignored if no niTextureEffect object is present). This type inherits the following: niDynamicEffect , niAVObject , niObjectNET , niObject","title":"niTextureEffect"},{"location":"types/niTextureEffect/#properties","text":"","title":"Properties"},{"location":"types/niTextureEffect/#affectednodes","text":"The list of nodes that a given dynamic effect will affect. Returns : result ( niNodeLinkedList )","title":"affectedNodes"},{"location":"types/niTextureEffect/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niTextureEffect/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niTextureEffect/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niTextureEffect/#enabled","text":"The enabled state of a given dynamic effect. Returns : result (boolean)","title":"enabled"},{"location":"types/niTextureEffect/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niTextureEffect/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niTextureEffect/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niTextureEffect/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niTextureEffect/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niTextureEffect/#parent","text":"Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niTextureEffect/#properties_1","text":"Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niTextureEffect/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niTextureEffect/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niTextureEffect/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niTextureEffect/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niTextureEffect/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niTextureEffect/#sourcetexture","text":"The texture used for the texture effect. Returns : result ( niSourceTexture )","title":"sourceTexture"},{"location":"types/niTextureEffect/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niTextureEffect/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niTextureEffect/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niTextureEffect/#type","text":"Read-only . The enumerated type of a given dynamic effect. Maps to values in ni.dynamicEffectType table. Returns : result (integer)","title":"type"},{"location":"types/niTextureEffect/#velocity","text":"The object's local velocity. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/niTextureEffect/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niTextureEffect/#worldboundorigin","text":"The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 )","title":"worldBoundOrigin"},{"location":"types/niTextureEffect/#worldboundradius","text":"The radius of the object's bounds. Returns : result (number)","title":"worldBoundRadius"},{"location":"types/niTextureEffect/#worldtransform","text":"The object's transformations in the world space. Returns : result ( tes3transform )","title":"worldTransform"},{"location":"types/niTextureEffect/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil)","title":"zBufferProperty"},{"location":"types/niTextureEffect/#methods","text":"","title":"Methods"},{"location":"types/niTextureEffect/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niTextureEffect/#attachaffectednode","text":"Adds a node to the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : attachAffectedNode ( node ) Parameters : node ( niNode ): The node to add to the affected nodes list.","title":"attachAffectedNode"},{"location":"types/niTextureEffect/#attachproperty","text":"Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niTextureEffect/#cleartransforms","text":"Resets the object's local transform. myObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niTextureEffect/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niTextureEffect/#detachaffectednode","text":"Removes a node from the dynamic effect's affected nodes list. The node's :updateEffects() function should be called afterwards to recognize the change. myObject : detachAffectedNode ( node ) Parameters : node ( niNode ): The node to remove from the affected nodes list.","title":"detachAffectedNode"},{"location":"types/niTextureEffect/#detachallproperties","text":"Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty [])","title":"detachAllProperties"},{"location":"types/niTextureEffect/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niTextureEffect/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niTextureEffect/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niTextureEffect/#getproperty","text":"Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niTextureEffect/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niTextureEffect/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niTextureEffect/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niTextureEffect/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niTextureEffect/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niTextureEffect/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niTextureEffect/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niTextureEffect/#propagatepositionchange","text":"Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"propagatePositionChange"},{"location":"types/niTextureEffect/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niTextureEffect/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niTextureEffect/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niTextureEffect/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niTextureEffect/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niTextureEffect/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niTextureEffect/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"update"},{"location":"types/niTextureEffect/#updateeffects","text":"Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects ()","title":"updateEffects"},{"location":"types/niTextureEffect/#updateproperties","text":"Update all attached properties. myObject : updateProperties ()","title":"updateProperties"},{"location":"types/niTextureEffect/#functions","text":"","title":"Functions"},{"location":"types/niTextureEffect/#new","text":"Creates a new texture effect object. local effect = niTextureEffect . new () Returns : effect ( niTextureEffect )","title":"new"},{"location":"types/niTexturingProperty/","text":"niTexturingProperty \u2693\ufe0e A rendering property that controls the methods used to filter texture pixels, and blend texture colors and vertex colors. This type inherits the following: niProperty , niObjectNET , niObject Properties \u2693\ufe0e applyMode \u2693\ufe0e The texture apply mode. The texture apply mode controls how the vertex colors are blended with the texture color. Maps to values in ni.texturingPropertyApplyMode table. Returns : result (integer) baseMap \u2693\ufe0e Gets or set the base map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil) bumpMap \u2693\ufe0e Gets or set the bump map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil) canAddDecal \u2693\ufe0e Read-only . If true, the texturing property supports additional decal maps. Returns : result (boolean) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) darkMap \u2693\ufe0e Gets or set the dark map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil) decalCount \u2693\ufe0e Read-only . The number of decals currently on the texturing property. Returns : result (integer) detailMap \u2693\ufe0e Gets or set the detail map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) glossMap \u2693\ufe0e Gets or set the gloss map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil) glowMap \u2693\ufe0e Gets or set the glow map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil) maps \u2693\ufe0e Read-only . The maps of texture property. Accessible as an array. Returns : result ( niTexturingPropertyMap []) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) propertyFlags \u2693\ufe0e Returns : result (integer) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) type \u2693\ufe0e Read-only . The unique class identifier number of the given rendering property. The types are available in ni.propertyType table. Returns : result (integer) Methods \u2693\ufe0e addDecalMap \u2693\ufe0e Attempts to create a new decal map. If successful, it returns both the new map and the index it was created in. local map , index = myObject : addDecalMap ( texture ) Parameters : texture ( niTexture ): Optional . The texture to assign to the new decal. Returns : map ( niTexturingPropertyMap , nil): A newly created decal map. index (integer, nil): The index of the newly added decal map. addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeDecalMap \u2693\ufe0e Attempts to remove a decal at a given index. local removed = myObject : removeDecalMap ( index ) Parameters : index (integer): The index of the decal to remove. The available indices are between ni.texturingPropertyMapType.decalFirst and ni.texturingPropertyMapType.decalLast . Returns : removed (boolean): True if the decal was removed. removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"niTexturingProperty"},{"location":"types/niTexturingProperty/#nitexturingproperty","text":"A rendering property that controls the methods used to filter texture pixels, and blend texture colors and vertex colors. This type inherits the following: niProperty , niObjectNET , niObject","title":"niTexturingProperty"},{"location":"types/niTexturingProperty/#properties","text":"","title":"Properties"},{"location":"types/niTexturingProperty/#applymode","text":"The texture apply mode. The texture apply mode controls how the vertex colors are blended with the texture color. Maps to values in ni.texturingPropertyApplyMode table. Returns : result (integer)","title":"applyMode"},{"location":"types/niTexturingProperty/#basemap","text":"Gets or set the base map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil)","title":"baseMap"},{"location":"types/niTexturingProperty/#bumpmap","text":"Gets or set the bump map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil)","title":"bumpMap"},{"location":"types/niTexturingProperty/#canadddecal","text":"Read-only . If true, the texturing property supports additional decal maps. Returns : result (boolean)","title":"canAddDecal"},{"location":"types/niTexturingProperty/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niTexturingProperty/#darkmap","text":"Gets or set the dark map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil)","title":"darkMap"},{"location":"types/niTexturingProperty/#decalcount","text":"Read-only . The number of decals currently on the texturing property. Returns : result (integer)","title":"decalCount"},{"location":"types/niTexturingProperty/#detailmap","text":"Gets or set the detail map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil)","title":"detailMap"},{"location":"types/niTexturingProperty/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niTexturingProperty/#glossmap","text":"Gets or set the gloss map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil)","title":"glossMap"},{"location":"types/niTexturingProperty/#glowmap","text":"Gets or set the glow map. Can be set to nil to delete it. Note that doing so will free the memory of the map, causing all existing handles to it to become invalid. Returns : result ( niTexturingPropertyMap , nil)","title":"glowMap"},{"location":"types/niTexturingProperty/#maps","text":"Read-only . The maps of texture property. Accessible as an array. Returns : result ( niTexturingPropertyMap [])","title":"maps"},{"location":"types/niTexturingProperty/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niTexturingProperty/#propertyflags","text":"Returns : result (integer)","title":"propertyFlags"},{"location":"types/niTexturingProperty/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niTexturingProperty/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niTexturingProperty/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niTexturingProperty/#type","text":"Read-only . The unique class identifier number of the given rendering property. The types are available in ni.propertyType table. Returns : result (integer)","title":"type"},{"location":"types/niTexturingProperty/#methods","text":"","title":"Methods"},{"location":"types/niTexturingProperty/#adddecalmap","text":"Attempts to create a new decal map. If successful, it returns both the new map and the index it was created in. local map , index = myObject : addDecalMap ( texture ) Parameters : texture ( niTexture ): Optional . The texture to assign to the new decal. Returns : map ( niTexturingPropertyMap , nil): A newly created decal map. index (integer, nil): The index of the newly added decal map.","title":"addDecalMap"},{"location":"types/niTexturingProperty/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niTexturingProperty/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niTexturingProperty/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niTexturingProperty/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niTexturingProperty/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niTexturingProperty/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niTexturingProperty/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niTexturingProperty/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niTexturingProperty/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niTexturingProperty/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niTexturingProperty/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niTexturingProperty/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niTexturingProperty/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niTexturingProperty/#removedecalmap","text":"Attempts to remove a decal at a given index. local removed = myObject : removeDecalMap ( index ) Parameters : index (integer): The index of the decal to remove. The available indices are between ni.texturingPropertyMapType.decalFirst and ni.texturingPropertyMapType.decalLast . Returns : removed (boolean): True if the decal was removed.","title":"removeDecalMap"},{"location":"types/niTexturingProperty/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niTexturingProperty/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niTexturingProperty/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niTexturingPropertyMap/","text":"niTexturingPropertyMap \u2693\ufe0e A combination of a texture, a filter mode, a clamping mode, and an index to a set of texture coordinates. Properties \u2693\ufe0e clampMode \u2693\ufe0e The clamp mode for the Map. Maps to values in ni.texturingPropertyClampMode table. Returns : result (integer) filterMode \u2693\ufe0e The filter mode for the Map. Maps to values in ni.texturingPropertyFilterMode table. Returns : result (integer) texCoordSet \u2693\ufe0e The texture coordinate set for the Map. Returns : result (integer) texture \u2693\ufe0e The texture for the Map. Returns : result ( niTexture ) Functions \u2693\ufe0e new \u2693\ufe0e Creates a new basic or bump map. local map = niTexturingPropertyMap . new ({ texture = ..., clampMode = ..., filterMode = ..., textCoords = ..., isBumpMap = ... }) Parameters : params (table): Optional . texture ( niTexture ): Optional . If provided, sets the map texture to the given value. clampMode (integer): Default : ni.texturingPropertyClampMode.wrapSwrapT . The clamp mode to set the map to use. filterMode (integer): Default : ni.texturingPropertyFilterMode.trilerp . The filter mode to set the map to use. textCoords (integer): Default : 0 . The texture coordinates to set the map to use. isBumpMap (boolean): Default : false . If true, a bump map will be created instead. Returns : map ( niTexturingPropertyMap ): The created basic or bump map.","title":"niTexturingPropertyMap"},{"location":"types/niTexturingPropertyMap/#nitexturingpropertymap","text":"A combination of a texture, a filter mode, a clamping mode, and an index to a set of texture coordinates.","title":"niTexturingPropertyMap"},{"location":"types/niTexturingPropertyMap/#properties","text":"","title":"Properties"},{"location":"types/niTexturingPropertyMap/#clampmode","text":"The clamp mode for the Map. Maps to values in ni.texturingPropertyClampMode table. Returns : result (integer)","title":"clampMode"},{"location":"types/niTexturingPropertyMap/#filtermode","text":"The filter mode for the Map. Maps to values in ni.texturingPropertyFilterMode table. Returns : result (integer)","title":"filterMode"},{"location":"types/niTexturingPropertyMap/#texcoordset","text":"The texture coordinate set for the Map. Returns : result (integer)","title":"texCoordSet"},{"location":"types/niTexturingPropertyMap/#texture","text":"The texture for the Map. Returns : result ( niTexture )","title":"texture"},{"location":"types/niTexturingPropertyMap/#functions","text":"","title":"Functions"},{"location":"types/niTexturingPropertyMap/#new","text":"Creates a new basic or bump map. local map = niTexturingPropertyMap . new ({ texture = ..., clampMode = ..., filterMode = ..., textCoords = ..., isBumpMap = ... }) Parameters : params (table): Optional . texture ( niTexture ): Optional . If provided, sets the map texture to the given value. clampMode (integer): Default : ni.texturingPropertyClampMode.wrapSwrapT . The clamp mode to set the map to use. filterMode (integer): Default : ni.texturingPropertyFilterMode.trilerp . The filter mode to set the map to use. textCoords (integer): Default : 0 . The texture coordinates to set the map to use. isBumpMap (boolean): Default : false . If true, a bump map will be created instead. Returns : map ( niTexturingPropertyMap ): The created basic or bump map.","title":"new"},{"location":"types/niTimeController/","text":"niTimeController \u2693\ufe0e An abstract base class from which all the animation controllers inherit. It has all the functionality needed to control the timing and update animations. This type inherits the following: niObject Properties \u2693\ufe0e active \u2693\ufe0e If the controller is active. When inactive, the target does not get updated and animation timing does not advance. Returns : result (boolean) animTimingType \u2693\ufe0e How the time parameter passed to the update function is treated. Type 0 is the default, which treats the update time as a delta time. Type 1 treats the update time an offset from the start of the animation. Maps to values in ni.animType table. Returns : result (integer) cycleType \u2693\ufe0e The animation cycle type. Type 0 is looping, type 2 is reverse, type 4 is clamped. Maps to values in ni.animCycleType table. Returns : result (integer) frequency \u2693\ufe0e The animation controller's frequency value. It is a scaling value used to convert from update time units to keyframe time units, if necessary. Returns : result (number) highKeyFrame \u2693\ufe0e This is the end animation key time of the animation controller. Returns : result (number) lastScaledTime \u2693\ufe0e This function returns the last scaled time computed by this controller. The scaled time takes the frequency and phase into account, along with the cycleType and animTimingType . This is the last value used to interpolate animation keys. Returns : result (number) lastTime \u2693\ufe0e No description. Returns : result (number) lowKeyFrame \u2693\ufe0e This is the beginning animation key time of the animation controller. Returns : result (number) nextController \u2693\ufe0e The next animation controller in the list of controllers containing the calling controller. Returns : result ( niTimeController ) phase \u2693\ufe0e The phase value. It is an offset applied to the animation's update time, in seconds. Returns : result (number) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) startTime \u2693\ufe0e The time at which the animation controller starts playing its animation. Returns : result (number) target \u2693\ufe0e Read-only . The scene graph object that this animation controller is to animate. Returns : result ( niObjectNET ) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setTarget \u2693\ufe0e This method assigns a new target to the animation controller. myObject : setTarget ( target ) Parameters : target ( niObjectNET ): The new target to assign. start \u2693\ufe0e Starts the controller at the specified time. Intended for controllers with animTimingType of 1. myObject : start ( time ) Parameters : time (number) stop \u2693\ufe0e Stops the controller. If you only want to pause the controller, use the update property. myObject : stop ()","title":"niTimeController"},{"location":"types/niTimeController/#nitimecontroller","text":"An abstract base class from which all the animation controllers inherit. It has all the functionality needed to control the timing and update animations. This type inherits the following: niObject","title":"niTimeController"},{"location":"types/niTimeController/#properties","text":"","title":"Properties"},{"location":"types/niTimeController/#active","text":"If the controller is active. When inactive, the target does not get updated and animation timing does not advance. Returns : result (boolean)","title":"active"},{"location":"types/niTimeController/#animtimingtype","text":"How the time parameter passed to the update function is treated. Type 0 is the default, which treats the update time as a delta time. Type 1 treats the update time an offset from the start of the animation. Maps to values in ni.animType table. Returns : result (integer)","title":"animTimingType"},{"location":"types/niTimeController/#cycletype","text":"The animation cycle type. Type 0 is looping, type 2 is reverse, type 4 is clamped. Maps to values in ni.animCycleType table. Returns : result (integer)","title":"cycleType"},{"location":"types/niTimeController/#frequency","text":"The animation controller's frequency value. It is a scaling value used to convert from update time units to keyframe time units, if necessary. Returns : result (number)","title":"frequency"},{"location":"types/niTimeController/#highkeyframe","text":"This is the end animation key time of the animation controller. Returns : result (number)","title":"highKeyFrame"},{"location":"types/niTimeController/#lastscaledtime","text":"This function returns the last scaled time computed by this controller. The scaled time takes the frequency and phase into account, along with the cycleType and animTimingType . This is the last value used to interpolate animation keys. Returns : result (number)","title":"lastScaledTime"},{"location":"types/niTimeController/#lasttime","text":"No description. Returns : result (number)","title":"lastTime"},{"location":"types/niTimeController/#lowkeyframe","text":"This is the beginning animation key time of the animation controller. Returns : result (number)","title":"lowKeyFrame"},{"location":"types/niTimeController/#nextcontroller","text":"The next animation controller in the list of controllers containing the calling controller. Returns : result ( niTimeController )","title":"nextController"},{"location":"types/niTimeController/#phase","text":"The phase value. It is an offset applied to the animation's update time, in seconds. Returns : result (number)","title":"phase"},{"location":"types/niTimeController/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niTimeController/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niTimeController/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niTimeController/#starttime","text":"The time at which the animation controller starts playing its animation. Returns : result (number)","title":"startTime"},{"location":"types/niTimeController/#target","text":"Read-only . The scene graph object that this animation controller is to animate. Returns : result ( niObjectNET )","title":"target"},{"location":"types/niTimeController/#methods","text":"","title":"Methods"},{"location":"types/niTimeController/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niTimeController/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niTimeController/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niTimeController/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niTimeController/#settarget","text":"This method assigns a new target to the animation controller. myObject : setTarget ( target ) Parameters : target ( niObjectNET ): The new target to assign.","title":"setTarget"},{"location":"types/niTimeController/#start","text":"Starts the controller at the specified time. Intended for controllers with animTimingType of 1. myObject : start ( time ) Parameters : time (number)","title":"start"},{"location":"types/niTimeController/#stop","text":"Stops the controller. If you only want to pause the controller, use the update property. myObject : stop ()","title":"stop"},{"location":"types/niTriBasedGeometry/","text":"niTriBasedGeometry \u2693\ufe0e Base class for all geometry that uses triangles. This type inherits the following: niGeometry , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) parent \u2693\ufe0e Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) velocity \u2693\ufe0e The object's local velocity. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) worldBoundOrigin \u2693\ufe0e The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 ) worldBoundRadius \u2693\ufe0e The radius of the object's bounds. Returns : result (number) worldTransform \u2693\ufe0e The object's transformations in the world space. Returns : result ( tes3transform ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) attachProperty \u2693\ufe0e Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. myObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) detachAllProperties \u2693\ufe0e Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty []) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) propagatePositionChange \u2693\ufe0e Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? updateEffects \u2693\ufe0e Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. myObject : updateProperties ()","title":"niTriBasedGeometry"},{"location":"types/niTriBasedGeometry/#nitribasedgeometry","text":"Base class for all geometry that uses triangles. This type inherits the following: niGeometry , niAVObject , niObjectNET , niObject","title":"niTriBasedGeometry"},{"location":"types/niTriBasedGeometry/#properties","text":"","title":"Properties"},{"location":"types/niTriBasedGeometry/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niTriBasedGeometry/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niTriBasedGeometry/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niTriBasedGeometry/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niTriBasedGeometry/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niTriBasedGeometry/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niTriBasedGeometry/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niTriBasedGeometry/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niTriBasedGeometry/#parent","text":"Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niTriBasedGeometry/#properties_1","text":"Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niTriBasedGeometry/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niTriBasedGeometry/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niTriBasedGeometry/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niTriBasedGeometry/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niTriBasedGeometry/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niTriBasedGeometry/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niTriBasedGeometry/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niTriBasedGeometry/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niTriBasedGeometry/#velocity","text":"The object's local velocity. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/niTriBasedGeometry/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niTriBasedGeometry/#worldboundorigin","text":"The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 )","title":"worldBoundOrigin"},{"location":"types/niTriBasedGeometry/#worldboundradius","text":"The radius of the object's bounds. Returns : result (number)","title":"worldBoundRadius"},{"location":"types/niTriBasedGeometry/#worldtransform","text":"The object's transformations in the world space. Returns : result ( tes3transform )","title":"worldTransform"},{"location":"types/niTriBasedGeometry/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil)","title":"zBufferProperty"},{"location":"types/niTriBasedGeometry/#methods","text":"","title":"Methods"},{"location":"types/niTriBasedGeometry/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niTriBasedGeometry/#attachproperty","text":"Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niTriBasedGeometry/#cleartransforms","text":"Resets the object's local transform. myObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niTriBasedGeometry/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niTriBasedGeometry/#detachallproperties","text":"Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty [])","title":"detachAllProperties"},{"location":"types/niTriBasedGeometry/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niTriBasedGeometry/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niTriBasedGeometry/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niTriBasedGeometry/#getproperty","text":"Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niTriBasedGeometry/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niTriBasedGeometry/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niTriBasedGeometry/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niTriBasedGeometry/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niTriBasedGeometry/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niTriBasedGeometry/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niTriBasedGeometry/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niTriBasedGeometry/#propagatepositionchange","text":"Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"propagatePositionChange"},{"location":"types/niTriBasedGeometry/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niTriBasedGeometry/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niTriBasedGeometry/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niTriBasedGeometry/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niTriBasedGeometry/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niTriBasedGeometry/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niTriBasedGeometry/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"update"},{"location":"types/niTriBasedGeometry/#updateeffects","text":"Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects ()","title":"updateEffects"},{"location":"types/niTriBasedGeometry/#updateproperties","text":"Update all attached properties. myObject : updateProperties ()","title":"updateProperties"},{"location":"types/niTriBasedGeometryData/","text":"niTriBasedGeometryData \u2693\ufe0e Contains the actual geometry data for a NiTriBasedGeometry object. This type inherits the following: niGeometryData , niObject Properties \u2693\ufe0e activeTriangleCount \u2693\ufe0e The active triangle count of the object. Returns : result (number) bounds \u2693\ufe0e The model-space bounding sphere of the object. Returns : result (niBound) colors \u2693\ufe0e Read-only . The vertex colors for the object. The length of the array is equal to vertexCount . Returns : result ( niPackedColor []) normals \u2693\ufe0e Read-only . The list of unitized, model-space vertex normals for the object. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 []) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) texCoords \u2693\ufe0e Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 []) textures \u2693\ufe0e Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 []) textureSets \u2693\ufe0e The number of texture coordinate sets in the data. Returns : result (number) triangleCount \u2693\ufe0e Read-only . The triangle count of the object. Returns : result (number) uniqueID \u2693\ufe0e Read-only . A unique ID for this model, assigned at model creation. Returns : result (number) vertexCount \u2693\ufe0e Read-only . The vertex count for the object. Returns : result (number) vertices \u2693\ufe0e Read-only . The array of vertex position data. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 []) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) markAsChanged \u2693\ufe0e Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data. If you have altered vertex positions, you may need to also call updateModelBound _. You should call it if vertices have been moved outside the bounds of the original model. myObject : markAsChanged () saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. updateModelBound \u2693\ufe0e Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function. myObject : updateModelBound ()","title":"niTriBasedGeometryData"},{"location":"types/niTriBasedGeometryData/#nitribasedgeometrydata","text":"Contains the actual geometry data for a NiTriBasedGeometry object. This type inherits the following: niGeometryData , niObject","title":"niTriBasedGeometryData"},{"location":"types/niTriBasedGeometryData/#properties","text":"","title":"Properties"},{"location":"types/niTriBasedGeometryData/#activetrianglecount","text":"The active triangle count of the object. Returns : result (number)","title":"activeTriangleCount"},{"location":"types/niTriBasedGeometryData/#bounds","text":"The model-space bounding sphere of the object. Returns : result (niBound)","title":"bounds"},{"location":"types/niTriBasedGeometryData/#colors","text":"Read-only . The vertex colors for the object. The length of the array is equal to vertexCount . Returns : result ( niPackedColor [])","title":"colors"},{"location":"types/niTriBasedGeometryData/#normals","text":"Read-only . The list of unitized, model-space vertex normals for the object. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 [])","title":"normals"},{"location":"types/niTriBasedGeometryData/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niTriBasedGeometryData/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niTriBasedGeometryData/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niTriBasedGeometryData/#texcoords","text":"Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 [])","title":"texCoords"},{"location":"types/niTriBasedGeometryData/#textures","text":"Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 [])","title":"textures"},{"location":"types/niTriBasedGeometryData/#texturesets","text":"The number of texture coordinate sets in the data. Returns : result (number)","title":"textureSets"},{"location":"types/niTriBasedGeometryData/#trianglecount","text":"Read-only . The triangle count of the object. Returns : result (number)","title":"triangleCount"},{"location":"types/niTriBasedGeometryData/#uniqueid","text":"Read-only . A unique ID for this model, assigned at model creation. Returns : result (number)","title":"uniqueID"},{"location":"types/niTriBasedGeometryData/#vertexcount","text":"Read-only . The vertex count for the object. Returns : result (number)","title":"vertexCount"},{"location":"types/niTriBasedGeometryData/#vertices","text":"Read-only . The array of vertex position data. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 [])","title":"vertices"},{"location":"types/niTriBasedGeometryData/#methods","text":"","title":"Methods"},{"location":"types/niTriBasedGeometryData/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niTriBasedGeometryData/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niTriBasedGeometryData/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niTriBasedGeometryData/#markaschanged","text":"Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data. If you have altered vertex positions, you may need to also call updateModelBound _. You should call it if vertices have been moved outside the bounds of the original model. myObject : markAsChanged ()","title":"markAsChanged"},{"location":"types/niTriBasedGeometryData/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niTriBasedGeometryData/#updatemodelbound","text":"Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function. myObject : updateModelBound ()","title":"updateModelBound"},{"location":"types/niTriShape/","text":"niTriShape \u2693\ufe0e An object that allows the sharing of vertices between triangles to create shapes. This type inherits the following: niTriBasedGeometry , niGeometry , niAVObject , niObjectNET , niObject Properties \u2693\ufe0e alphaProperty \u2693\ufe0e Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil) appCulled \u2693\ufe0e A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean) controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) data \u2693\ufe0e The NiTriShapeData of the object. Manipulation should not be done directly. Instead, consider copying the data and assigning it to this shape. Returns : result ( niTriShapeData ) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) flags \u2693\ufe0e Flags, dependent on the specific object type. Returns : result (number) fogProperty \u2693\ufe0e Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil) materialProperty \u2693\ufe0e Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) normals \u2693\ufe0e Read-only . The list of unitized, model-space vertex normals for the object. The length of the array is equal to the vertex count. Returns : result ( tes3vector3 []) parent \u2693\ufe0e Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode ) properties \u2693\ufe0e Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList ) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) rotation \u2693\ufe0e The object's local rotation matrix. Returns : result ( tes3matrix33 ) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) scale \u2693\ufe0e The object's local uniform scaling factor. Returns : result (number) skinInstance \u2693\ufe0e The skinInstance of the object. Returns : result ( niSkinInstance ) stencilProperty \u2693\ufe0e Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil) texturingProperty \u2693\ufe0e Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil) translation \u2693\ufe0e The object's local translation vector. Returns : result ( tes3vector3 ) velocity \u2693\ufe0e The object's local velocity. Returns : result ( tes3vector3 ) vertexColorProperty \u2693\ufe0e Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil) vertices \u2693\ufe0e Read-only . The array of vertex position data. The length of the array is equal to vertex count. Returns : result ( tes3vector3 []) worldBoundOrigin \u2693\ufe0e The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 ) worldBoundRadius \u2693\ufe0e The radius of the object's bounds. Returns : result (number) worldTransform \u2693\ufe0e The object's transformations in the world space. Returns : result ( tes3transform ) zBufferProperty \u2693\ufe0e Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) attachProperty \u2693\ufe0e Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty ) clearTransforms \u2693\ufe0e Resets the object's local transform. myObject : clearTransforms () clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) createBoundingBox \u2693\ufe0e Calculates and creates a bounding box for the object. The existing bounding box, if any, will not be used, a fresh one will always be calculated. local boundingBox = myObject : createBoundingBox () Returns : boundingBox ( tes3boundingBox ): The newly created bounding box. detachAllProperties \u2693\ufe0e Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty []) detachProperty \u2693\ufe0e Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getObjectByName \u2693\ufe0e Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject ) getProperty \u2693\ufe0e Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) propagatePositionChange \u2693\ufe0e Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) update \u2693\ufe0e Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds? updateEffects \u2693\ufe0e Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects () updateProperties \u2693\ufe0e Update all attached properties. myObject : updateProperties ()","title":"niTriShape"},{"location":"types/niTriShape/#nitrishape","text":"An object that allows the sharing of vertices between triangles to create shapes. This type inherits the following: niTriBasedGeometry , niGeometry , niAVObject , niObjectNET , niObject","title":"niTriShape"},{"location":"types/niTriShape/#properties","text":"","title":"Properties"},{"location":"types/niTriShape/#alphaproperty","text":"Convenient access to this object's alpha property. Setting this value to be nil will erase the property, while setting it to a valid alpha property will set (or replace) it. Returns : result ( niAlphaProperty , nil)","title":"alphaProperty"},{"location":"types/niTriShape/#appculled","text":"A flag indicating if this object is culled. When culled, it will not render, and raycasts ignore it. Returns : result (boolean)","title":"appCulled"},{"location":"types/niTriShape/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niTriShape/#data","text":"The NiTriShapeData of the object. Manipulation should not be done directly. Instead, consider copying the data and assigning it to this shape. Returns : result ( niTriShapeData )","title":"data"},{"location":"types/niTriShape/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niTriShape/#flags","text":"Flags, dependent on the specific object type. Returns : result (number)","title":"flags"},{"location":"types/niTriShape/#fogproperty","text":"Convenient access to this object's fog property. Setting this value to be nil will erase the property, while setting it to a valid fog property will set (or replace) it. Returns : result ( niFogProperty , nil)","title":"fogProperty"},{"location":"types/niTriShape/#materialproperty","text":"Convenient access to this object's material property. Setting this value to be nil will erase the property, while setting it to a valid material property will set (or replace) it. Returns : result ( niMaterialProperty , nil)","title":"materialProperty"},{"location":"types/niTriShape/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niTriShape/#normals","text":"Read-only . The list of unitized, model-space vertex normals for the object. The length of the array is equal to the vertex count. Returns : result ( tes3vector3 [])","title":"normals"},{"location":"types/niTriShape/#parent","text":"Read-only . The object's parent. It may not have one if it is not attached to the scene. Returns : result ( niNode )","title":"parent"},{"location":"types/niTriShape/#properties_1","text":"Read-only . The list of properties attached to this niAVObject . Returns : result ( niPropertyLinkedList )","title":"properties"},{"location":"types/niTriShape/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niTriShape/#rotation","text":"The object's local rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/niTriShape/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niTriShape/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niTriShape/#scale","text":"The object's local uniform scaling factor. Returns : result (number)","title":"scale"},{"location":"types/niTriShape/#skininstance","text":"The skinInstance of the object. Returns : result ( niSkinInstance )","title":"skinInstance"},{"location":"types/niTriShape/#stencilproperty","text":"Convenient access to this object's stencil property. Setting this value to be nil will erase the property, while setting it to a valid stencil property will set (or replace) it. Returns : result ( niStencilProperty , nil)","title":"stencilProperty"},{"location":"types/niTriShape/#texturingproperty","text":"Convenient access to this object's texturing property. Setting this value to be nil will erase the property, while setting it to a valid texturing property will set (or replace) it. Returns : result ( niTexturingProperty , nil)","title":"texturingProperty"},{"location":"types/niTriShape/#translation","text":"The object's local translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/niTriShape/#velocity","text":"The object's local velocity. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/niTriShape/#vertexcolorproperty","text":"Convenient access to this object's vertex coloring property. Setting this value to be nil will erase the property, while setting it to a valid vertex coloring property will set (or replace) it. Returns : result ( niVertexColorProperty , nil)","title":"vertexColorProperty"},{"location":"types/niTriShape/#vertices","text":"Read-only . The array of vertex position data. The length of the array is equal to vertex count. Returns : result ( tes3vector3 [])","title":"vertices"},{"location":"types/niTriShape/#worldboundorigin","text":"The world coordinates of the object's bounds origin. Returns : result ( tes3vector3 )","title":"worldBoundOrigin"},{"location":"types/niTriShape/#worldboundradius","text":"The radius of the object's bounds. Returns : result (number)","title":"worldBoundRadius"},{"location":"types/niTriShape/#worldtransform","text":"The object's transformations in the world space. Returns : result ( tes3transform )","title":"worldTransform"},{"location":"types/niTriShape/#zbufferproperty","text":"Convenient access to this object's z-buffer property. Setting this value to be nil will erase the property, while setting it to a valid z-buffer property will set (or replace) it. Returns : result ( niZBufferProperty , nil)","title":"zBufferProperty"},{"location":"types/niTriShape/#methods","text":"","title":"Methods"},{"location":"types/niTriShape/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niTriShape/#attachproperty","text":"Attaches a property to this object, without checking to see if the property or another of its type is already on the list. Property lists must not have more than one property of a given class (i.e. no two niTexturingProperty objects) attached at once, or else undefined behavior will result. myObject : attachProperty ( property ) Parameters : property ( niProperty )","title":"attachProperty"},{"location":"types/niTriShape/#cleartransforms","text":"Resets the object's local transform. myObject : clearTransforms ()","title":"clearTransforms"},{"location":"types/niTriShape/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niTriShape/#createboundingbox","text":"Calculates and creates a bounding box for the object. The existing bounding box, if any, will not be used, a fresh one will always be calculated. local boundingBox = myObject : createBoundingBox () Returns : boundingBox ( tes3boundingBox ): The newly created bounding box.","title":"createBoundingBox"},{"location":"types/niTriShape/#detachallproperties","text":"Detaches all the properties on the object and returns them in the table. local result = myObject : detachAllProperties () Returns : result ( niProperty [])","title":"detachAllProperties"},{"location":"types/niTriShape/#detachproperty","text":"Detaches and returns a property from the object which matches the given property type. local result = myObject : detachProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"detachProperty"},{"location":"types/niTriShape/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niTriShape/#getobjectbyname","text":"Searches this node and all child nodes recursively for a node with a name that matches the argument. local result = myObject : getObjectByName ( name ) Parameters : name (string) Returns : result ( niAVObject )","title":"getObjectByName"},{"location":"types/niTriShape/#getproperty","text":"Gets an attached property by property type. local result = myObject : getProperty ( type ) Parameters : type (integer): The types are available in ni.propertyType table. Returns : result ( niProperty )","title":"getProperty"},{"location":"types/niTriShape/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niTriShape/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niTriShape/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niTriShape/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niTriShape/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niTriShape/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niTriShape/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niTriShape/#propagatepositionchange","text":"Alias for update() method. Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : propagatePositionChange ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"propagatePositionChange"},{"location":"types/niTriShape/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niTriShape/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niTriShape/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niTriShape/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niTriShape/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niTriShape/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niTriShape/#update","text":"Updates the world transforms of this node and its children, which makes changes visible for rendering. Use after changing any local rotation, translation, scale, bounds or after attaching and detaching nodes. Tip Update Efficiency It's best to \"batch up\" calls to this method. For example, when transform of an object its parent and grandparent are all changed during the same frame, it is much more efficient to call this method only on the grandparent object after all transforms have been changed. Also, consider calling this function as low as possible on a scene graph. myObject : update ({ time = ..., controllers = ..., bounds = ... }) Parameters : args (table): Optional . time (number): Default : 0 . This parameter is the time-slice for transformation and bounds updates controllers (boolean): Default : false . Update object's controllers? bounds (boolean): Default : true . Update object's bounds?","title":"update"},{"location":"types/niTriShape/#updateeffects","text":"Update all attached effects. This method must be called at or above any object when dynamic effects are attached or detached from it myObject : updateEffects ()","title":"updateEffects"},{"location":"types/niTriShape/#updateproperties","text":"Update all attached properties. myObject : updateProperties ()","title":"updateProperties"},{"location":"types/niTriShapeData/","text":"niTriShapeData \u2693\ufe0e Contains the geometry data for an NiTriShape object. This type inherits the following: niTriBasedGeometryData , niGeometryData , niObject Properties \u2693\ufe0e activeTriangleCount \u2693\ufe0e The active triangle count of the object. Returns : result (number) bounds \u2693\ufe0e The model-space bounding sphere of the object. Returns : result (niBound) colors \u2693\ufe0e Read-only . The vertex colors for the object. The length of the array is equal to vertexCount . Returns : result ( niPackedColor []) normals \u2693\ufe0e Read-only . The list of unitized, model-space vertex normals for the object. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 []) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) texCoords \u2693\ufe0e Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 []) textures \u2693\ufe0e Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 []) textureSets \u2693\ufe0e The number of texture coordinate sets in the data. Returns : result (number) triangleCount \u2693\ufe0e Read-only . The triangle count of the object. Returns : result (number) triangles \u2693\ufe0e The access to the triangles of the object. The length of the array is equal to the number of active triangles. Returns : result ( niTriangle []) uniqueID \u2693\ufe0e Read-only . A unique ID for this model, assigned at model creation. Returns : result (number) vertexCount \u2693\ufe0e Read-only . The vertex count for the object. Returns : result (number) vertices \u2693\ufe0e Read-only . The array of vertex position data. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 []) Methods \u2693\ufe0e clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) copy \u2693\ufe0e Creates a copy of the data. An optional table of filters can be passed to remove information from the copy. local copiedData = myObject : copy ({ normals = ..., colors = ..., texCoords = ... }) Parameters : filters (table): Optional . normals (boolean): Default : true . If false, the geometry data's normals will be absent from the copy. colors (boolean): Default : true . If false, the geometry data's colors will be absent from the copy. texCoords (boolean): Default : true . If false, the geometry data's texture coordinates will be absent from the copy. Returns : copiedData ( niTriShapeData ): The duplicated data. isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) markAsChanged \u2693\ufe0e Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data. If you have altered vertex positions, you may need to also call updateModelBound _. You should call it if vertices have been moved outside the bounds of the original model. myObject : markAsChanged () saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. updateModelBound \u2693\ufe0e Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function. myObject : updateModelBound ()","title":"niTriShapeData"},{"location":"types/niTriShapeData/#nitrishapedata","text":"Contains the geometry data for an NiTriShape object. This type inherits the following: niTriBasedGeometryData , niGeometryData , niObject","title":"niTriShapeData"},{"location":"types/niTriShapeData/#properties","text":"","title":"Properties"},{"location":"types/niTriShapeData/#activetrianglecount","text":"The active triangle count of the object. Returns : result (number)","title":"activeTriangleCount"},{"location":"types/niTriShapeData/#bounds","text":"The model-space bounding sphere of the object. Returns : result (niBound)","title":"bounds"},{"location":"types/niTriShapeData/#colors","text":"Read-only . The vertex colors for the object. The length of the array is equal to vertexCount . Returns : result ( niPackedColor [])","title":"colors"},{"location":"types/niTriShapeData/#normals","text":"Read-only . The list of unitized, model-space vertex normals for the object. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 [])","title":"normals"},{"location":"types/niTriShapeData/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niTriShapeData/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niTriShapeData/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niTriShapeData/#texcoords","text":"Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 [])","title":"texCoords"},{"location":"types/niTriShapeData/#textures","text":"Read-only . The array of texture coordinates. The length of the array is equal to vertexCount times textureSets . Returns : result ( tes3vector2 [])","title":"textures"},{"location":"types/niTriShapeData/#texturesets","text":"The number of texture coordinate sets in the data. Returns : result (number)","title":"textureSets"},{"location":"types/niTriShapeData/#trianglecount","text":"Read-only . The triangle count of the object. Returns : result (number)","title":"triangleCount"},{"location":"types/niTriShapeData/#triangles","text":"The access to the triangles of the object. The length of the array is equal to the number of active triangles. Returns : result ( niTriangle [])","title":"triangles"},{"location":"types/niTriShapeData/#uniqueid","text":"Read-only . A unique ID for this model, assigned at model creation. Returns : result (number)","title":"uniqueID"},{"location":"types/niTriShapeData/#vertexcount","text":"Read-only . The vertex count for the object. Returns : result (number)","title":"vertexCount"},{"location":"types/niTriShapeData/#vertices","text":"Read-only . The array of vertex position data. The length of the array is equal to vertexCount . Returns : result ( tes3vector3 [])","title":"vertices"},{"location":"types/niTriShapeData/#methods","text":"","title":"Methods"},{"location":"types/niTriShapeData/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niTriShapeData/#copy","text":"Creates a copy of the data. An optional table of filters can be passed to remove information from the copy. local copiedData = myObject : copy ({ normals = ..., colors = ..., texCoords = ... }) Parameters : filters (table): Optional . normals (boolean): Default : true . If false, the geometry data's normals will be absent from the copy. colors (boolean): Default : true . If false, the geometry data's colors will be absent from the copy. texCoords (boolean): Default : true . If false, the geometry data's texture coordinates will be absent from the copy. Returns : copiedData ( niTriShapeData ): The duplicated data.","title":"copy"},{"location":"types/niTriShapeData/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niTriShapeData/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niTriShapeData/#markaschanged","text":"Tells the renderer that the object has changed. Should be called after you have finished changing any vertex data. If you have altered vertex positions, you may need to also call updateModelBound _. You should call it if vertices have been moved outside the bounds of the original model. myObject : markAsChanged ()","title":"markAsChanged"},{"location":"types/niTriShapeData/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niTriShapeData/#updatemodelbound","text":"Updates the geometry bounds to match the vertex data. You should call it if vertices have been moved outside the bounds of the original model, or if the effective bounds have become significantly smaller. If you already know the effective radius of the vertex data, you could more efficiently set the bounds directly instead of calling this function. myObject : updateModelBound ()","title":"updateModelBound"},{"location":"types/niTriangle/","text":"niTriangle \u2693\ufe0e Contains the geometry data for an NiTriShape object. Properties \u2693\ufe0e verticies \u2693\ufe0e The access to the three indices of the verticies that make up this triangle (0-indexed). Returns : result (number[])","title":"niTriangle"},{"location":"types/niTriangle/#nitriangle","text":"Contains the geometry data for an NiTriShape object.","title":"niTriangle"},{"location":"types/niTriangle/#properties","text":"","title":"Properties"},{"location":"types/niTriangle/#verticies","text":"The access to the three indices of the verticies that make up this triangle (0-indexed). Returns : result (number[])","title":"verticies"},{"location":"types/niVertexColorProperty/","text":"niVertexColorProperty \u2693\ufe0e A rendering property that allows the application to control the method used to compute colors for each vertex in a geometry object. This class enables effects such as static pre-lighting, dynamic lighting, etc. This type inherits the following: niProperty , niObjectNET , niObject Properties \u2693\ufe0e controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) lighting \u2693\ufe0e Describes how vertex colors influence lighting. Maps to values in ni.lightingMode table. Returns : result (integer) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) propertyFlags \u2693\ufe0e Returns : result (integer) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) source \u2693\ufe0e Determines how vertex and material colors are mixed on subclasses of niAVObject. Maps to values in ni.sourceVertexModes table. Returns : result (integer) type \u2693\ufe0e Read-only . The unique class identifier number of the given rendering property. The types are available in ni.propertyType table. Returns : result (integer) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) Functions \u2693\ufe0e new \u2693\ufe0e Creates a new niVertexColorProperty with lighting set to ni.lightingMode.emiAmbDif and source set to ni.sourceVertexMode.ignore . local property = niVertexColorProperty . new () Returns : property ( niVertexColorProperty )","title":"niVertexColorProperty"},{"location":"types/niVertexColorProperty/#nivertexcolorproperty","text":"A rendering property that allows the application to control the method used to compute colors for each vertex in a geometry object. This class enables effects such as static pre-lighting, dynamic lighting, etc. This type inherits the following: niProperty , niObjectNET , niObject","title":"niVertexColorProperty"},{"location":"types/niVertexColorProperty/#properties","text":"","title":"Properties"},{"location":"types/niVertexColorProperty/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niVertexColorProperty/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niVertexColorProperty/#lighting","text":"Describes how vertex colors influence lighting. Maps to values in ni.lightingMode table. Returns : result (integer)","title":"lighting"},{"location":"types/niVertexColorProperty/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niVertexColorProperty/#propertyflags","text":"Returns : result (integer)","title":"propertyFlags"},{"location":"types/niVertexColorProperty/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niVertexColorProperty/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niVertexColorProperty/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niVertexColorProperty/#source","text":"Determines how vertex and material colors are mixed on subclasses of niAVObject. Maps to values in ni.sourceVertexModes table. Returns : result (integer)","title":"source"},{"location":"types/niVertexColorProperty/#type","text":"Read-only . The unique class identifier number of the given rendering property. The types are available in ni.propertyType table. Returns : result (integer)","title":"type"},{"location":"types/niVertexColorProperty/#methods","text":"","title":"Methods"},{"location":"types/niVertexColorProperty/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niVertexColorProperty/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niVertexColorProperty/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niVertexColorProperty/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niVertexColorProperty/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niVertexColorProperty/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niVertexColorProperty/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niVertexColorProperty/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niVertexColorProperty/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niVertexColorProperty/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niVertexColorProperty/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niVertexColorProperty/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niVertexColorProperty/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niVertexColorProperty/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niVertexColorProperty/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niVertexColorProperty/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niVertexColorProperty/#functions","text":"","title":"Functions"},{"location":"types/niVertexColorProperty/#new","text":"Creates a new niVertexColorProperty with lighting set to ni.lightingMode.emiAmbDif and source set to ni.sourceVertexMode.ignore . local property = niVertexColorProperty . new () Returns : property ( niVertexColorProperty )","title":"new"},{"location":"types/niZBufferProperty/","text":"niZBufferProperty \u2693\ufe0e A rendering property that allows the application to set the test and write modes of the renderer's Z-buffer and to set the comparison function used for the Z-buffer test. This type inherits the following: niProperty , niObjectNET , niObject Properties \u2693\ufe0e controller \u2693\ufe0e Read-only . The first controller available on the object. Returns : result ( niTimeController ) extraData \u2693\ufe0e Read-only . The first extra data available on the object. Returns : result ( niExtraData ) name \u2693\ufe0e The human-facing name of the given object. Returns : result (string) propertyFlags \u2693\ufe0e Returns : result (integer) refCount \u2693\ufe0e Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number) RTTI \u2693\ufe0e Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI ) runTimeTypeInformation \u2693\ufe0e Read-only . The runtime type information for this object. Returns : result ( niRTTI ) testFunction \u2693\ufe0e The Z-buffer test function used. Maps to values in ni.zBufferPropertyTestFunction table. Returns : result (integer) type \u2693\ufe0e Read-only . The unique class identifier number of the given rendering property. The types are available in ni.propertyType table. Returns : result (integer) Methods \u2693\ufe0e addExtraData \u2693\ufe0e Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData ) clone \u2693\ufe0e Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject ) getGameReference \u2693\ufe0e Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference ) getStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData ) getStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData ) hasStringDataStartingWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) hasStringDataWith \u2693\ufe0e Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean) isInstanceOfType \u2693\ufe0e Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) isOfType \u2693\ufe0e Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean) prependController \u2693\ufe0e Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController ) removeAllControllers \u2693\ufe0e Removes all controllers. myObject : removeAllControllers () removeAllExtraData \u2693\ufe0e Removes all extra data. myObject : removeAllExtraData () removeController \u2693\ufe0e Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController ) removeExtraData \u2693\ufe0e Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData ) saveBinary \u2693\ufe0e Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized. setFlag \u2693\ufe0e Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number) Functions \u2693\ufe0e new \u2693\ufe0e Creates a new niZBufferProperty with testFunction set to ni.zBufferPropertyTestFunction.lessEqual . local property = niZBufferProperty . new () Returns : property ( niZBufferProperty )","title":"niZBufferProperty"},{"location":"types/niZBufferProperty/#nizbufferproperty","text":"A rendering property that allows the application to set the test and write modes of the renderer's Z-buffer and to set the comparison function used for the Z-buffer test. This type inherits the following: niProperty , niObjectNET , niObject","title":"niZBufferProperty"},{"location":"types/niZBufferProperty/#properties","text":"","title":"Properties"},{"location":"types/niZBufferProperty/#controller","text":"Read-only . The first controller available on the object. Returns : result ( niTimeController )","title":"controller"},{"location":"types/niZBufferProperty/#extradata","text":"Read-only . The first extra data available on the object. Returns : result ( niExtraData )","title":"extraData"},{"location":"types/niZBufferProperty/#name","text":"The human-facing name of the given object. Returns : result (string)","title":"name"},{"location":"types/niZBufferProperty/#propertyflags","text":"Returns : result (integer)","title":"propertyFlags"},{"location":"types/niZBufferProperty/#refcount","text":"Read-only . The number of references that exist for this object. When this value reaches zero, the object will be deleted. Returns : result (number)","title":"refCount"},{"location":"types/niZBufferProperty/#rtti","text":"Read-only . The runtime type information for this object. This is an alias for the .runTimeTypeInformation property. Returns : result ( niRTTI )","title":"RTTI"},{"location":"types/niZBufferProperty/#runtimetypeinformation","text":"Read-only . The runtime type information for this object. Returns : result ( niRTTI )","title":"runTimeTypeInformation"},{"location":"types/niZBufferProperty/#testfunction","text":"The Z-buffer test function used. Maps to values in ni.zBufferPropertyTestFunction table. Returns : result (integer)","title":"testFunction"},{"location":"types/niZBufferProperty/#type","text":"Read-only . The unique class identifier number of the given rendering property. The types are available in ni.propertyType table. Returns : result (integer)","title":"type"},{"location":"types/niZBufferProperty/#methods","text":"","title":"Methods"},{"location":"types/niZBufferProperty/#addextradata","text":"Appends an extra data to the object. myObject : addExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"addExtraData"},{"location":"types/niZBufferProperty/#clone","text":"Creates a copy of this object. local result = myObject : clone () Returns : result ( niObject )","title":"clone"},{"location":"types/niZBufferProperty/#getgamereference","text":"Searches for an niExtraData on this object to see if it has one that holds a related reference. local reference = myObject : getGameReference ( searchParents ) Parameters : searchParents (boolean): Default : false . If true, all parent objects (if applicable) are also searched. Returns : reference ( tes3reference )","title":"getGameReference"},{"location":"types/niZBufferProperty/#getstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. local extra = myObject : getStringDataStartingWith ( value ) Parameters : value (string): The first niStringExtraData starting with this value will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataStartingWith"},{"location":"types/niZBufferProperty/#getstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has the provided value argument in its string field. local extra = myObject : getStringDataWith ( value ) Parameters : value (string): The first niStringExtraData with this word will be returned. Returns : extra ( niStringExtraData )","title":"getStringDataWith"},{"location":"types/niZBufferProperty/#hasstringdatastartingwith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that has its string start with the provided value argument. Returns true if the value was found. local result = myObject : hasStringDataStartingWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataStartingWith"},{"location":"types/niZBufferProperty/#hasstringdatawith","text":"Searches for an niExtraData on this object to see if it has niStringExtraData that contains the provided value argument in its string field. Returns true if the value was found. local result = myObject : hasStringDataWith ( value ) Parameters : value (string): The value to search for. Returns : result (boolean)","title":"hasStringDataWith"},{"location":"types/niZBufferProperty/#isinstanceoftype","text":"Determines if the object is of a given type, or of a type derived from the given type. Types can be found in the ni.type table. local result = myObject : isInstanceOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isInstanceOfType"},{"location":"types/niZBufferProperty/#isoftype","text":"Determines if the object is of a given type. Types can be found in the ni.type table. local result = myObject : isOfType ( type ) Parameters : type (number): Use values in the ni.type table. Returns : result (boolean)","title":"isOfType"},{"location":"types/niZBufferProperty/#prependcontroller","text":"Add a controller to the object as the first controller. myObject : prependController ( controller ) Parameters : controller ( niTimeController )","title":"prependController"},{"location":"types/niZBufferProperty/#removeallcontrollers","text":"Removes all controllers. myObject : removeAllControllers ()","title":"removeAllControllers"},{"location":"types/niZBufferProperty/#removeallextradata","text":"Removes all extra data. myObject : removeAllExtraData ()","title":"removeAllExtraData"},{"location":"types/niZBufferProperty/#removecontroller","text":"Removes a controller from the object. myObject : removeController ( controller ) Parameters : controller ( niTimeController )","title":"removeController"},{"location":"types/niZBufferProperty/#removeextradata","text":"Removes a specific extra data from the object. myObject : removeExtraData ( extraData ) Parameters : extraData ( niExtraData )","title":"removeExtraData"},{"location":"types/niZBufferProperty/#savebinary","text":"Serializes the object, and writes it to the given file. local success = myObject : saveBinary ( path ) Parameters : path (string): The path to write the file at, relative to the Morrowind installation folder. Returns : success (boolean): If true the object was successfully serialized.","title":"saveBinary"},{"location":"types/niZBufferProperty/#setflag","text":"Sets a given flag in the niObjectNET flag data. The specifics use of the flag is dependent on the real underlying type. myObject : setFlag ( state , index ) Parameters : state (boolean) index (number)","title":"setFlag"},{"location":"types/niZBufferProperty/#functions","text":"","title":"Functions"},{"location":"types/niZBufferProperty/#new","text":"Creates a new niZBufferProperty with testFunction set to ni.zBufferPropertyTestFunction.lessEqual . local property = niZBufferProperty . new () Returns : property ( niZBufferProperty )","title":"new"},{"location":"types/tes3actionData/","text":"tes3actionData \u2693\ufe0e A substructure of mobile actors that provides information about the current or previous action. Properties \u2693\ufe0e aiBehaviorState \u2693\ufe0e The behavior state of the tes3actionData . This maps to values in tes3.aiBehaviorState namespace. Value Behavior -1 Undecided 0 Hello 2 Idle 3 Attack 4 Avoid 6 Flee 8 Walk 12 Greet Returns : result (number) animationAttackState \u2693\ufe0e The actor's animation state. Maps to values in tes3.animationState namespace. Returns : result (number) attackSwing \u2693\ufe0e When attacking, this value represents how much the weapon has been pulled back. The value ranges from [0.0 - 1.0]. Returns : result (number) currentAnimationGroup \u2693\ufe0e Actor's current animation group. Maps to values in tes3.animationGroup namespace. Returns : result (number) hitTarget \u2693\ufe0e The actor's attack target. The target will be saved in hitTarget field until a new attack is made. Missing an attack will clear hitTarget field. Returns : result ( tes3mobileActor , nil) lastBarterHoursPassed \u2693\ufe0e No description yet available. Returns : result (number) nockedProjectile \u2693\ufe0e The currently nocked projectile the associated actor is using. It is available while charging a projectile attack, before releasing the projectile. This can be modified, but can only be set to nil, which will remove the projectile without consuming ammo. Returns : result ( tes3mobileProjectile ) physicalAttackType \u2693\ufe0e A number from the tes3.physicalAttackType enumeration identifying the physical attack type. Can be tes3.physicalAttackType.slash , .chop , .thrust , .projectile , .creature1 , .creature2 , or .creature3. Returns : result (number) physicalDamage \u2693\ufe0e When attacking, this is the value of the weapon damage that was rolled. This value takes into account the actor's strength, attack swing and weapon condition, but it doesn't include difficulty nor target's armor. This value is updated on an attack. After the attack this value will still contain the damage rolled. It will be refreshed on a new attack. Returns : result (number) stolenFrom \u2693\ufe0e No description yet available. Returns : result ( tes3object ) target \u2693\ufe0e The actor's attack target, stored until the actor attacks successfully again. In contrast to hitTarget , target property isn't cleared on missed attack. Returns : result ( tes3mobileActor , nil) walkDestination \u2693\ufe0e If moving to a location, this is the position to be walked to. Returns : result ( tes3vector3 )","title":"tes3actionData"},{"location":"types/tes3actionData/#tes3actiondata","text":"A substructure of mobile actors that provides information about the current or previous action.","title":"tes3actionData"},{"location":"types/tes3actionData/#properties","text":"","title":"Properties"},{"location":"types/tes3actionData/#aibehaviorstate","text":"The behavior state of the tes3actionData . This maps to values in tes3.aiBehaviorState namespace. Value Behavior -1 Undecided 0 Hello 2 Idle 3 Attack 4 Avoid 6 Flee 8 Walk 12 Greet Returns : result (number)","title":"aiBehaviorState"},{"location":"types/tes3actionData/#animationattackstate","text":"The actor's animation state. Maps to values in tes3.animationState namespace. Returns : result (number)","title":"animationAttackState"},{"location":"types/tes3actionData/#attackswing","text":"When attacking, this value represents how much the weapon has been pulled back. The value ranges from [0.0 - 1.0]. Returns : result (number)","title":"attackSwing"},{"location":"types/tes3actionData/#currentanimationgroup","text":"Actor's current animation group. Maps to values in tes3.animationGroup namespace. Returns : result (number)","title":"currentAnimationGroup"},{"location":"types/tes3actionData/#hittarget","text":"The actor's attack target. The target will be saved in hitTarget field until a new attack is made. Missing an attack will clear hitTarget field. Returns : result ( tes3mobileActor , nil)","title":"hitTarget"},{"location":"types/tes3actionData/#lastbarterhourspassed","text":"No description yet available. Returns : result (number)","title":"lastBarterHoursPassed"},{"location":"types/tes3actionData/#nockedprojectile","text":"The currently nocked projectile the associated actor is using. It is available while charging a projectile attack, before releasing the projectile. This can be modified, but can only be set to nil, which will remove the projectile without consuming ammo. Returns : result ( tes3mobileProjectile )","title":"nockedProjectile"},{"location":"types/tes3actionData/#physicalattacktype","text":"A number from the tes3.physicalAttackType enumeration identifying the physical attack type. Can be tes3.physicalAttackType.slash , .chop , .thrust , .projectile , .creature1 , .creature2 , or .creature3. Returns : result (number)","title":"physicalAttackType"},{"location":"types/tes3actionData/#physicaldamage","text":"When attacking, this is the value of the weapon damage that was rolled. This value takes into account the actor's strength, attack swing and weapon condition, but it doesn't include difficulty nor target's armor. This value is updated on an attack. After the attack this value will still contain the damage rolled. It will be refreshed on a new attack. Returns : result (number)","title":"physicalDamage"},{"location":"types/tes3actionData/#stolenfrom","text":"No description yet available. Returns : result ( tes3object )","title":"stolenFrom"},{"location":"types/tes3actionData/#target","text":"The actor's attack target, stored until the actor attacks successfully again. In contrast to hitTarget , target property isn't cleared on missed attack. Returns : result ( tes3mobileActor , nil)","title":"target"},{"location":"types/tes3actionData/#walkdestination","text":"If moving to a location, this is the position to be walked to. Returns : result ( tes3vector3 )","title":"walkDestination"},{"location":"types/tes3activator/","text":"tes3activator \u2693\ufe0e An activator game object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) createCopy \u2693\ufe0e Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3activator )","title":"Tes3activator"},{"location":"types/tes3activator/#tes3activator","text":"An activator game object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject","title":"tes3activator"},{"location":"types/tes3activator/#properties","text":"","title":"Properties"},{"location":"types/tes3activator/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3activator/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3activator/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3activator/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3activator/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3activator/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3activator/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3activator/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3activator/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3activator/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3activator/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3activator/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3activator/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3activator/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3activator/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3activator/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3activator/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3activator/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3activator/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3activator/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3activator/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3activator/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3activator/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3activator/#methods","text":"","title":"Methods"},{"location":"types/tes3activator/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3activator/#createcopy","text":"Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3activator )","title":"createCopy"},{"location":"types/tes3activeMagicEffect/","text":"tes3activeMagicEffect \u2693\ufe0e An active magic effect. Properties \u2693\ufe0e attributeId \u2693\ufe0e Read-only . The attribute ID (note that this may be the skill ID if the effect affects skills, since attributeId and skillId properties are set to the same value by the engine). Maps to values from tes3.attribute table. Returns : result (integer) duration \u2693\ufe0e Read-only . The total duration of this specific effect. Returns : result (number) effectId \u2693\ufe0e Read-only . The magic effect ID. Maps to values from tes3.effect table. Returns : result (integer) effectIndex \u2693\ufe0e Read-only . The index of the effect inside the magic source instance. Returns : result (integer) effectInstance \u2693\ufe0e Read-only . The magic effect instance for this effect. Returns : result ( tes3magicEffectInstance ) harmful \u2693\ufe0e Read-only . This flag that determines if this effect is counted as a hostile action. Returns : result (boolean) instance \u2693\ufe0e Read-only . The magic source instance for this effect. Returns : result ( tes3magicSourceInstance ) isBoundItem \u2693\ufe0e Read-only . If this effect has summoned a bound item. Returns : result (boolean) isIllegalSummon \u2693\ufe0e Read-only . If this effect has summoned a creature that has been declared illegal to summon. This is an otherwise unused flag in the game that is set for daedra and undead summon magic effects, but not for any other summon creature magic effects. Returns : result (boolean) isSummon \u2693\ufe0e Read-only . If this effect has summoned a creature. Returns : result (boolean) magnitude \u2693\ufe0e Read-only . The unresisted magnitude of the magic effect, that is the magnitude before resistance attributes are applied. To find the actual effective magnitude after resistances are applied, you must check the magic effect instance. Returns : result (integer) magnitudeMin \u2693\ufe0e Read-only . Deprecated. Returns : result (number) mobile \u2693\ufe0e Read-only . The mobile affected by the magic effect. Returns : result ( tes3mobileCreature , tes3mobileNPC , tes3mobilePlayer ) next \u2693\ufe0e Read-only . Deprecated. Returns : result ( tes3activeMagicEffect ) previous \u2693\ufe0e Read-only . Deprecated. Returns : result ( tes3activeMagicEffect ) serial \u2693\ufe0e Read-only . The magic source instance serial number. See the instance and effectInstance properties to easily access the magic and effect instances. Returns : result (integer) skillId \u2693\ufe0e Read-only . The skill ID (note that this may be the attribute ID if the effect affects attributes, since attributeId and skillId properties are set to the same value by the engine). Maps to values in tes3.skill table. Returns : result (integer)","title":"tes3activeMagicEffect"},{"location":"types/tes3activeMagicEffect/#tes3activemagiceffect","text":"An active magic effect.","title":"tes3activeMagicEffect"},{"location":"types/tes3activeMagicEffect/#properties","text":"","title":"Properties"},{"location":"types/tes3activeMagicEffect/#attributeid","text":"Read-only . The attribute ID (note that this may be the skill ID if the effect affects skills, since attributeId and skillId properties are set to the same value by the engine). Maps to values from tes3.attribute table. Returns : result (integer)","title":"attributeId"},{"location":"types/tes3activeMagicEffect/#duration","text":"Read-only . The total duration of this specific effect. Returns : result (number)","title":"duration"},{"location":"types/tes3activeMagicEffect/#effectid","text":"Read-only . The magic effect ID. Maps to values from tes3.effect table. Returns : result (integer)","title":"effectId"},{"location":"types/tes3activeMagicEffect/#effectindex","text":"Read-only . The index of the effect inside the magic source instance. Returns : result (integer)","title":"effectIndex"},{"location":"types/tes3activeMagicEffect/#effectinstance","text":"Read-only . The magic effect instance for this effect. Returns : result ( tes3magicEffectInstance )","title":"effectInstance"},{"location":"types/tes3activeMagicEffect/#harmful","text":"Read-only . This flag that determines if this effect is counted as a hostile action. Returns : result (boolean)","title":"harmful"},{"location":"types/tes3activeMagicEffect/#instance","text":"Read-only . The magic source instance for this effect. Returns : result ( tes3magicSourceInstance )","title":"instance"},{"location":"types/tes3activeMagicEffect/#isbounditem","text":"Read-only . If this effect has summoned a bound item. Returns : result (boolean)","title":"isBoundItem"},{"location":"types/tes3activeMagicEffect/#isillegalsummon","text":"Read-only . If this effect has summoned a creature that has been declared illegal to summon. This is an otherwise unused flag in the game that is set for daedra and undead summon magic effects, but not for any other summon creature magic effects. Returns : result (boolean)","title":"isIllegalSummon"},{"location":"types/tes3activeMagicEffect/#issummon","text":"Read-only . If this effect has summoned a creature. Returns : result (boolean)","title":"isSummon"},{"location":"types/tes3activeMagicEffect/#magnitude","text":"Read-only . The unresisted magnitude of the magic effect, that is the magnitude before resistance attributes are applied. To find the actual effective magnitude after resistances are applied, you must check the magic effect instance. Returns : result (integer)","title":"magnitude"},{"location":"types/tes3activeMagicEffect/#magnitudemin","text":"Read-only . Deprecated. Returns : result (number)","title":"magnitudeMin"},{"location":"types/tes3activeMagicEffect/#mobile","text":"Read-only . The mobile affected by the magic effect. Returns : result ( tes3mobileCreature , tes3mobileNPC , tes3mobilePlayer )","title":"mobile"},{"location":"types/tes3activeMagicEffect/#next","text":"Read-only . Deprecated. Returns : result ( tes3activeMagicEffect )","title":"next"},{"location":"types/tes3activeMagicEffect/#previous","text":"Read-only . Deprecated. Returns : result ( tes3activeMagicEffect )","title":"previous"},{"location":"types/tes3activeMagicEffect/#serial","text":"Read-only . The magic source instance serial number. See the instance and effectInstance properties to easily access the magic and effect instances. Returns : result (integer)","title":"serial"},{"location":"types/tes3activeMagicEffect/#skillid","text":"Read-only . The skill ID (note that this may be the attribute ID if the effect affects attributes, since attributeId and skillId properties are set to the same value by the engine). Maps to values in tes3.skill table. Returns : result (integer)","title":"skillId"},{"location":"types/tes3actor/","text":"tes3actor \u2693\ufe0e An Actor (not to be confused with a Mobile Actor) is an object that can be cloned and that has an inventory. Creatures, NPCs, and containers are all considered actors. It is standard for creatures and NPCs to be composed of an actor and a mobile actor, linked together with a reference. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e actorFlags \u2693\ufe0e Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number) barterGold \u2693\ufe0e Friendly access to actor's barter gold amount. Returns : result (number) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) blood \u2693\ufe0e Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set. Returns : result (integer) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) cloneCount \u2693\ufe0e Read-only . The number of clones that exist of this actor. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) equipment \u2693\ufe0e Read-only . The items currently equipped to the actor. Returns : result ( tes3equipmentStack []) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) inventory \u2693\ufe0e Read-only . The items currently carried by the actor. Returns : result ( tes3inventory ) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) hasItemEquipped \u2693\ufe0e Checks if the actor has provided item equipped. local result = myObject : hasItemEquipped ( item , itemData ) Parameters : item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean) offersService \u2693\ufe0e Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = myObject : offersService ( service ) Parameters : service (number): Use one of the values in the tes3.merchantService.* table. Returns : result (boolean) onInventoryClose \u2693\ufe0e A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. myObject : onInventoryClose ( reference ) Parameters : reference ( tes3reference ) tradesItemType \u2693\ufe0e Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = myObject : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"Tes3actor"},{"location":"types/tes3actor/#tes3actor","text":"An Actor (not to be confused with a Mobile Actor) is an object that can be cloned and that has an inventory. Creatures, NPCs, and containers are all considered actors. It is standard for creatures and NPCs to be composed of an actor and a mobile actor, linked together with a reference. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject","title":"tes3actor"},{"location":"types/tes3actor/#properties","text":"","title":"Properties"},{"location":"types/tes3actor/#actorflags","text":"Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number)","title":"actorFlags"},{"location":"types/tes3actor/#bartergold","text":"Friendly access to actor's barter gold amount. Returns : result (number)","title":"barterGold"},{"location":"types/tes3actor/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3actor/#blood","text":"Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set. Returns : result (integer)","title":"blood"},{"location":"types/tes3actor/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3actor/#clonecount","text":"Read-only . The number of clones that exist of this actor. Returns : result (number)","title":"cloneCount"},{"location":"types/tes3actor/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3actor/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3actor/#equipment","text":"Read-only . The items currently equipped to the actor. Returns : result ( tes3equipmentStack [])","title":"equipment"},{"location":"types/tes3actor/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3actor/#inventory","text":"Read-only . The items currently carried by the actor. Returns : result ( tes3inventory )","title":"inventory"},{"location":"types/tes3actor/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3actor/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3actor/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3actor/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3actor/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3actor/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3actor/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3actor/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3actor/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3actor/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3actor/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3actor/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3actor/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3actor/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3actor/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3actor/#methods","text":"","title":"Methods"},{"location":"types/tes3actor/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3actor/#hasitemequipped","text":"Checks if the actor has provided item equipped. local result = myObject : hasItemEquipped ( item , itemData ) Parameters : item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean)","title":"hasItemEquipped"},{"location":"types/tes3actor/#offersservice","text":"Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = myObject : offersService ( service ) Parameters : service (number): Use one of the values in the tes3.merchantService.* table. Returns : result (boolean)","title":"offersService"},{"location":"types/tes3actor/#oninventoryclose","text":"A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. myObject : onInventoryClose ( reference ) Parameters : reference ( tes3reference )","title":"onInventoryClose"},{"location":"types/tes3actor/#tradesitemtype","text":"Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = myObject : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tradesItemType"},{"location":"types/tes3actorAnimationController/","text":"tes3actorAnimationController \u2693\ufe0e Works in conjuction with mobile AI to perform idle, movement, and attack animations. Holds data on the status of the current and next desired animation states for the different body sections that can be animated. Properties \u2693\ufe0e alphaProperty \u2693\ufe0e The alpha property applied to the actor. Controls the opacity/opaqueness of the actor. Returns : result ( niAlphaProperty ) animationData \u2693\ufe0e Access to the actor's animation data. Returns : result ( tes3animationData ) animGroupIdle \u2693\ufe0e The actor's idle animation. Maps to values in tes3.animationGroup table. Returns : result (integer) animGroupIdle2 \u2693\ufe0e Returns : result (integer) animGroupMovement \u2693\ufe0e The actor's movement animations group. Maps to values in tes3.animationGroup table. Returns : result (integer) attachTiming \u2693\ufe0e Returns : result (number) attackFollowTiming \u2693\ufe0e Returns : result (number) groundPlaneRotation \u2693\ufe0e The rotation of the actor around the up-down axis. When converted to euler angles, this axis corresponds to the z axis. The rotation range is [-PI, PI], where rotation of 0 corresponds to the game north. Returns : result ( tes3matrix33 ) hitTiming \u2693\ufe0e This it the time of the actor's attack animation in their .kf , played during the hit phase for fully charged attack. It's updated for the attacks from different directions. Returns : result (number) materialProperty \u2693\ufe0e The material property applied to the actor. Returns : result ( niMaterialProperty ) maxAttackTiming \u2693\ufe0e This it the time of the actor's attack animation in their .kf file, when the attack animation is fully charged. It's updated for the attacks from different directions. Returns : result (number) minAttackTiming \u2693\ufe0e This it the time of the actor's attack animation in their .kf file, at the earliest point the attack animation can end (when the attack button is just clicked and released). It's updated for the attacks from different directions. Returns : result (number) minHitTiming \u2693\ufe0e This it the time of the actor's attack animation in their .kf , played during the hit phase for the minimally charged attack. It's updated for the attacks from different directions. Returns : result (number) mobile \u2693\ufe0e Read-only . The mobile actor that this controller is responsible for. Returns : result ( tes3mobileActor ) patchedOverrideState \u2693\ufe0e Returns : result (integer) remainingBlockTime \u2693\ufe0e Returns : result (number) shouldJump \u2693\ufe0e Returns : result (integer) speedMultiplier \u2693\ufe0e This is the speed multiplier of the current animation. For example, it is used by the game engine to scale the speed of the turning animation whith the speed at which the player is rotating the view with the mouse. In that case the value range is [0.0, 1.5]. Returns : result (number) startTime \u2693\ufe0e This it the starting time of the actor's attack animation in their .kf file. It's updated for the attacks from different directions. Returns : result (number) strikeWhenAttackSwingReaches \u2693\ufe0e For NPCs this corresponds to how long the weapon was charged by the NPC after the attack landed. The value is in range [0.0, 1.0]. This property isn't used for the player character. Returns : result (number) vertexColorProperty \u2693\ufe0e The vertex color property applied to the actor. Returns : result ( niVertexColorProperty ) verticalRotation \u2693\ufe0e Only used for the player. When converted to euler angles, the rotation about x axis will correspond to the rotation obtained from looking up and down. The rotations around other axes are always zero. In degrees the rotations range from -89.95 degrees for looking up, and 89.95 for looking maximally down. Returns : result ( tes3matrix33 ) weaponSpeed \u2693\ufe0e The animation speed scaling of the weapon animations. This includes all weapon related idle, attack, and ready/unready animations. This value is reset at the starting frame of each weapon strike, normally equal to the the weapon speed. Therefore if you use this it should be changed after every strike, and reset after. Ready/unready actions do not change speed, but are affected by speed. Use by getting the animation controller from the mobile. e.g. mobile.animationController.weaponSpeed = 0.5 Returns : result (number) Methods \u2693\ufe0e calculateAttackSwing \u2693\ufe0e Calculates how much an attack is currently being charged. Returns a value ranging from 0.0 to 1.0 . A value of 1.0 indicates that the attack is fully charged. Will always return 0.0 when not currently charging an attack. local result = myObject : calculateAttackSwing () Returns : result (number)","title":"tes3actorAnimationController"},{"location":"types/tes3actorAnimationController/#tes3actoranimationcontroller","text":"Works in conjuction with mobile AI to perform idle, movement, and attack animations. Holds data on the status of the current and next desired animation states for the different body sections that can be animated.","title":"tes3actorAnimationController"},{"location":"types/tes3actorAnimationController/#properties","text":"","title":"Properties"},{"location":"types/tes3actorAnimationController/#alphaproperty","text":"The alpha property applied to the actor. Controls the opacity/opaqueness of the actor. Returns : result ( niAlphaProperty )","title":"alphaProperty"},{"location":"types/tes3actorAnimationController/#animationdata","text":"Access to the actor's animation data. Returns : result ( tes3animationData )","title":"animationData"},{"location":"types/tes3actorAnimationController/#animgroupidle","text":"The actor's idle animation. Maps to values in tes3.animationGroup table. Returns : result (integer)","title":"animGroupIdle"},{"location":"types/tes3actorAnimationController/#animgroupidle2","text":"Returns : result (integer)","title":"animGroupIdle2"},{"location":"types/tes3actorAnimationController/#animgroupmovement","text":"The actor's movement animations group. Maps to values in tes3.animationGroup table. Returns : result (integer)","title":"animGroupMovement"},{"location":"types/tes3actorAnimationController/#attachtiming","text":"Returns : result (number)","title":"attachTiming"},{"location":"types/tes3actorAnimationController/#attackfollowtiming","text":"Returns : result (number)","title":"attackFollowTiming"},{"location":"types/tes3actorAnimationController/#groundplanerotation","text":"The rotation of the actor around the up-down axis. When converted to euler angles, this axis corresponds to the z axis. The rotation range is [-PI, PI], where rotation of 0 corresponds to the game north. Returns : result ( tes3matrix33 )","title":"groundPlaneRotation"},{"location":"types/tes3actorAnimationController/#hittiming","text":"This it the time of the actor's attack animation in their .kf , played during the hit phase for fully charged attack. It's updated for the attacks from different directions. Returns : result (number)","title":"hitTiming"},{"location":"types/tes3actorAnimationController/#materialproperty","text":"The material property applied to the actor. Returns : result ( niMaterialProperty )","title":"materialProperty"},{"location":"types/tes3actorAnimationController/#maxattacktiming","text":"This it the time of the actor's attack animation in their .kf file, when the attack animation is fully charged. It's updated for the attacks from different directions. Returns : result (number)","title":"maxAttackTiming"},{"location":"types/tes3actorAnimationController/#minattacktiming","text":"This it the time of the actor's attack animation in their .kf file, at the earliest point the attack animation can end (when the attack button is just clicked and released). It's updated for the attacks from different directions. Returns : result (number)","title":"minAttackTiming"},{"location":"types/tes3actorAnimationController/#minhittiming","text":"This it the time of the actor's attack animation in their .kf , played during the hit phase for the minimally charged attack. It's updated for the attacks from different directions. Returns : result (number)","title":"minHitTiming"},{"location":"types/tes3actorAnimationController/#mobile","text":"Read-only . The mobile actor that this controller is responsible for. Returns : result ( tes3mobileActor )","title":"mobile"},{"location":"types/tes3actorAnimationController/#patchedoverridestate","text":"Returns : result (integer)","title":"patchedOverrideState"},{"location":"types/tes3actorAnimationController/#remainingblocktime","text":"Returns : result (number)","title":"remainingBlockTime"},{"location":"types/tes3actorAnimationController/#shouldjump","text":"Returns : result (integer)","title":"shouldJump"},{"location":"types/tes3actorAnimationController/#speedmultiplier","text":"This is the speed multiplier of the current animation. For example, it is used by the game engine to scale the speed of the turning animation whith the speed at which the player is rotating the view with the mouse. In that case the value range is [0.0, 1.5]. Returns : result (number)","title":"speedMultiplier"},{"location":"types/tes3actorAnimationController/#starttime","text":"This it the starting time of the actor's attack animation in their .kf file. It's updated for the attacks from different directions. Returns : result (number)","title":"startTime"},{"location":"types/tes3actorAnimationController/#strikewhenattackswingreaches","text":"For NPCs this corresponds to how long the weapon was charged by the NPC after the attack landed. The value is in range [0.0, 1.0]. This property isn't used for the player character. Returns : result (number)","title":"strikeWhenAttackSwingReaches"},{"location":"types/tes3actorAnimationController/#vertexcolorproperty","text":"The vertex color property applied to the actor. Returns : result ( niVertexColorProperty )","title":"vertexColorProperty"},{"location":"types/tes3actorAnimationController/#verticalrotation","text":"Only used for the player. When converted to euler angles, the rotation about x axis will correspond to the rotation obtained from looking up and down. The rotations around other axes are always zero. In degrees the rotations range from -89.95 degrees for looking up, and 89.95 for looking maximally down. Returns : result ( tes3matrix33 )","title":"verticalRotation"},{"location":"types/tes3actorAnimationController/#weaponspeed","text":"The animation speed scaling of the weapon animations. This includes all weapon related idle, attack, and ready/unready animations. This value is reset at the starting frame of each weapon strike, normally equal to the the weapon speed. Therefore if you use this it should be changed after every strike, and reset after. Ready/unready actions do not change speed, but are affected by speed. Use by getting the animation controller from the mobile. e.g. mobile.animationController.weaponSpeed = 0.5 Returns : result (number)","title":"weaponSpeed"},{"location":"types/tes3actorAnimationController/#methods","text":"","title":"Methods"},{"location":"types/tes3actorAnimationController/#calculateattackswing","text":"Calculates how much an attack is currently being charged. Returns a value ranging from 0.0 to 1.0 . A value of 1.0 indicates that the attack is fully charged. Will always return 0.0 when not currently charging an attack. local result = myObject : calculateAttackSwing () Returns : result (number)","title":"calculateAttackSwing"},{"location":"types/tes3aiConfig/","text":"tes3aiConfig \u2693\ufe0e A game object which contains AI configuration information for an actor. This includes: alarm, fight, flee, hello values, which services the actor provides, goods types the actor trades in, and possible destinations this actor can take the player to. Properties \u2693\ufe0e alarm \u2693\ufe0e Friendly access to actor's alarm value. Returns : result (number) bartersAlchemy \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in potions. Returns : result (boolean) bartersApparatus \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in alchemical apparati. Returns : result (boolean) bartersArmor \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in armor. Returns : result (boolean) bartersBooks \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in books. Returns : result (boolean) bartersClothing \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in clothing. Returns : result (boolean) bartersEnchantedItems \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in enchanted items. Returns : result (boolean) bartersIngredients \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in alchemical ingredients. Returns : result (boolean) bartersLights \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in lights. Returns : result (boolean) bartersLockpicks \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in lockpicks. Returns : result (boolean) bartersMiscItems \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in miscellaneous items. Returns : result (boolean) bartersProbes \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in probes. Returns : result (boolean) bartersRepairTools \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in repair hammers and prongs. Returns : result (boolean) bartersWeapons \u2693\ufe0e Friendly access to a flag that controls whether the actor barters in weapons. Returns : result (boolean) fight \u2693\ufe0e Friendly access to actor's fight value. Returns : result (number) flee \u2693\ufe0e Friendly access to actor's flee value. Returns : result (number) hello \u2693\ufe0e Friendly access to actor's hello value. Returns : result (number) merchantFlags \u2693\ufe0e Numeric access to all merchant flags. Shouldn't be used directly. Returns : result (number) offersEnchanting \u2693\ufe0e Friendly access to a flag that controls whether the actor offers enchanting services. Returns : result (boolean) offersRepairs \u2693\ufe0e Friendly access to a flag that controls whether the actor offers item repairs service. Returns : result (boolean) offersSpellmaking \u2693\ufe0e Friendly access to a flag that controls whether the actor offers spellmaking service. Returns : result (boolean) offersSpells \u2693\ufe0e Friendly access to a flag that controls whether the actor sells spells. Returns : result (boolean) offersTraining \u2693\ufe0e Friendly access to a flag that controls whether the actor offers training services. Returns : result (boolean) travelDestinations \u2693\ufe0e A table access to all tes3travelDestinationNode objects this actor can take the player to. Returns : result ( tes3travelDestinationNode [])","title":"tes3aiConfig"},{"location":"types/tes3aiConfig/#tes3aiconfig","text":"A game object which contains AI configuration information for an actor. This includes: alarm, fight, flee, hello values, which services the actor provides, goods types the actor trades in, and possible destinations this actor can take the player to.","title":"tes3aiConfig"},{"location":"types/tes3aiConfig/#properties","text":"","title":"Properties"},{"location":"types/tes3aiConfig/#alarm","text":"Friendly access to actor's alarm value. Returns : result (number)","title":"alarm"},{"location":"types/tes3aiConfig/#bartersalchemy","text":"Friendly access to a flag that controls whether the actor barters in potions. Returns : result (boolean)","title":"bartersAlchemy"},{"location":"types/tes3aiConfig/#bartersapparatus","text":"Friendly access to a flag that controls whether the actor barters in alchemical apparati. Returns : result (boolean)","title":"bartersApparatus"},{"location":"types/tes3aiConfig/#bartersarmor","text":"Friendly access to a flag that controls whether the actor barters in armor. Returns : result (boolean)","title":"bartersArmor"},{"location":"types/tes3aiConfig/#bartersbooks","text":"Friendly access to a flag that controls whether the actor barters in books. Returns : result (boolean)","title":"bartersBooks"},{"location":"types/tes3aiConfig/#bartersclothing","text":"Friendly access to a flag that controls whether the actor barters in clothing. Returns : result (boolean)","title":"bartersClothing"},{"location":"types/tes3aiConfig/#bartersenchanteditems","text":"Friendly access to a flag that controls whether the actor barters in enchanted items. Returns : result (boolean)","title":"bartersEnchantedItems"},{"location":"types/tes3aiConfig/#bartersingredients","text":"Friendly access to a flag that controls whether the actor barters in alchemical ingredients. Returns : result (boolean)","title":"bartersIngredients"},{"location":"types/tes3aiConfig/#barterslights","text":"Friendly access to a flag that controls whether the actor barters in lights. Returns : result (boolean)","title":"bartersLights"},{"location":"types/tes3aiConfig/#barterslockpicks","text":"Friendly access to a flag that controls whether the actor barters in lockpicks. Returns : result (boolean)","title":"bartersLockpicks"},{"location":"types/tes3aiConfig/#bartersmiscitems","text":"Friendly access to a flag that controls whether the actor barters in miscellaneous items. Returns : result (boolean)","title":"bartersMiscItems"},{"location":"types/tes3aiConfig/#bartersprobes","text":"Friendly access to a flag that controls whether the actor barters in probes. Returns : result (boolean)","title":"bartersProbes"},{"location":"types/tes3aiConfig/#bartersrepairtools","text":"Friendly access to a flag that controls whether the actor barters in repair hammers and prongs. Returns : result (boolean)","title":"bartersRepairTools"},{"location":"types/tes3aiConfig/#bartersweapons","text":"Friendly access to a flag that controls whether the actor barters in weapons. Returns : result (boolean)","title":"bartersWeapons"},{"location":"types/tes3aiConfig/#fight","text":"Friendly access to actor's fight value. Returns : result (number)","title":"fight"},{"location":"types/tes3aiConfig/#flee","text":"Friendly access to actor's flee value. Returns : result (number)","title":"flee"},{"location":"types/tes3aiConfig/#hello","text":"Friendly access to actor's hello value. Returns : result (number)","title":"hello"},{"location":"types/tes3aiConfig/#merchantflags","text":"Numeric access to all merchant flags. Shouldn't be used directly. Returns : result (number)","title":"merchantFlags"},{"location":"types/tes3aiConfig/#offersenchanting","text":"Friendly access to a flag that controls whether the actor offers enchanting services. Returns : result (boolean)","title":"offersEnchanting"},{"location":"types/tes3aiConfig/#offersrepairs","text":"Friendly access to a flag that controls whether the actor offers item repairs service. Returns : result (boolean)","title":"offersRepairs"},{"location":"types/tes3aiConfig/#offersspellmaking","text":"Friendly access to a flag that controls whether the actor offers spellmaking service. Returns : result (boolean)","title":"offersSpellmaking"},{"location":"types/tes3aiConfig/#offersspells","text":"Friendly access to a flag that controls whether the actor sells spells. Returns : result (boolean)","title":"offersSpells"},{"location":"types/tes3aiConfig/#offerstraining","text":"Friendly access to a flag that controls whether the actor offers training services. Returns : result (boolean)","title":"offersTraining"},{"location":"types/tes3aiConfig/#traveldestinations","text":"A table access to all tes3travelDestinationNode objects this actor can take the player to. Returns : result ( tes3travelDestinationNode [])","title":"travelDestinations"},{"location":"types/tes3aiPackage/","text":"tes3aiPackage \u2693\ufe0e An AI package game object. Properties \u2693\ufe0e destinationCell \u2693\ufe0e The destination cell for escort and follow AI packages. For wander package, this is the cell the actor wanders in. Returns : result ( tes3cell ) distance \u2693\ufe0e Determines the size of the area the actor with this wander AI package will walk around. Measured in the in-game units. Returns : result (number) duration \u2693\ufe0e This property represents the duration of the AI package. It is present for wander, escort and follow AI packages. Measured in the in-game hours. Returns : result (number) hourOfDay \u2693\ufe0e Returns : result (number) isDone \u2693\ufe0e Returns : result (boolean) isFinalized \u2693\ufe0e Returns : result (boolean) isMoving \u2693\ufe0e This property is true if the parent actor is moving. Returns : result (boolean) isReset \u2693\ufe0e Returns : result (boolean) isStarted \u2693\ufe0e Returns : result (boolean) mobile \u2693\ufe0e Access to the actor to whom this AI package belongs. Returns : result ( tes3mobileActor ) startGameHour \u2693\ufe0e The in-game hour at which this AI package started. Returns : result (number) targetActor \u2693\ufe0e The target actor for activate, follow and escort AI packages. Returns : result ( tes3mobileActor ) targetPosition \u2693\ufe0e The final position to be reached by the escort, follow, and travel AI packages. Returns : result ( tes3vector3 ) type \u2693\ufe0e Read-only . Maps to values in tes3.aiPackage namespace. Returns : result (number)","title":"tes3aiPackage"},{"location":"types/tes3aiPackage/#tes3aipackage","text":"An AI package game object.","title":"tes3aiPackage"},{"location":"types/tes3aiPackage/#properties","text":"","title":"Properties"},{"location":"types/tes3aiPackage/#destinationcell","text":"The destination cell for escort and follow AI packages. For wander package, this is the cell the actor wanders in. Returns : result ( tes3cell )","title":"destinationCell"},{"location":"types/tes3aiPackage/#distance","text":"Determines the size of the area the actor with this wander AI package will walk around. Measured in the in-game units. Returns : result (number)","title":"distance"},{"location":"types/tes3aiPackage/#duration","text":"This property represents the duration of the AI package. It is present for wander, escort and follow AI packages. Measured in the in-game hours. Returns : result (number)","title":"duration"},{"location":"types/tes3aiPackage/#hourofday","text":"Returns : result (number)","title":"hourOfDay"},{"location":"types/tes3aiPackage/#isdone","text":"Returns : result (boolean)","title":"isDone"},{"location":"types/tes3aiPackage/#isfinalized","text":"Returns : result (boolean)","title":"isFinalized"},{"location":"types/tes3aiPackage/#ismoving","text":"This property is true if the parent actor is moving. Returns : result (boolean)","title":"isMoving"},{"location":"types/tes3aiPackage/#isreset","text":"Returns : result (boolean)","title":"isReset"},{"location":"types/tes3aiPackage/#isstarted","text":"Returns : result (boolean)","title":"isStarted"},{"location":"types/tes3aiPackage/#mobile","text":"Access to the actor to whom this AI package belongs. Returns : result ( tes3mobileActor )","title":"mobile"},{"location":"types/tes3aiPackage/#startgamehour","text":"The in-game hour at which this AI package started. Returns : result (number)","title":"startGameHour"},{"location":"types/tes3aiPackage/#targetactor","text":"The target actor for activate, follow and escort AI packages. Returns : result ( tes3mobileActor )","title":"targetActor"},{"location":"types/tes3aiPackage/#targetposition","text":"The final position to be reached by the escort, follow, and travel AI packages. Returns : result ( tes3vector3 )","title":"targetPosition"},{"location":"types/tes3aiPackage/#type","text":"Read-only . Maps to values in tes3.aiPackage namespace. Returns : result (number)","title":"type"},{"location":"types/tes3aiPackageActivate/","text":"tes3aiPackageActivate \u2693\ufe0e An AI Activate package game object. Sets an actor to activate a reference. This type inherits the following: tes3aiPackage Properties \u2693\ufe0e activateTarget \u2693\ufe0e The reference this actor with this activate AI package is set to activate. Returns : result ( tes3reference ) destinationCell \u2693\ufe0e The destination cell for escort and follow AI packages. For wander package, this is the cell the actor wanders in. Returns : result ( tes3cell ) distance \u2693\ufe0e Determines the size of the area the actor with this wander AI package will walk around. Measured in the in-game units. Returns : result (number) duration \u2693\ufe0e This property represents the duration of the AI package. It is present for wander, escort and follow AI packages. Measured in the in-game hours. Returns : result (number) hourOfDay \u2693\ufe0e Returns : result (number) isDone \u2693\ufe0e Returns : result (boolean) isFinalized \u2693\ufe0e Returns : result (boolean) isMoving \u2693\ufe0e This property is true if the parent actor is moving. Returns : result (boolean) isReset \u2693\ufe0e Returns : result (boolean) isStarted \u2693\ufe0e Returns : result (boolean) mobile \u2693\ufe0e Access to the actor to whom this AI package belongs. Returns : result ( tes3mobileActor ) startGameHour \u2693\ufe0e The in-game hour at which this AI package started. Returns : result (number) targetActor \u2693\ufe0e The target actor for activate, follow and escort AI packages. Returns : result ( tes3mobileActor ) targetPosition \u2693\ufe0e The final position to be reached by the escort, follow, and travel AI packages. Returns : result ( tes3vector3 ) type \u2693\ufe0e Read-only . Maps to values in tes3.aiPackage namespace. Returns : result (number)","title":"tes3aiPackageActivate"},{"location":"types/tes3aiPackageActivate/#tes3aipackageactivate","text":"An AI Activate package game object. Sets an actor to activate a reference. This type inherits the following: tes3aiPackage","title":"tes3aiPackageActivate"},{"location":"types/tes3aiPackageActivate/#properties","text":"","title":"Properties"},{"location":"types/tes3aiPackageActivate/#activatetarget","text":"The reference this actor with this activate AI package is set to activate. Returns : result ( tes3reference )","title":"activateTarget"},{"location":"types/tes3aiPackageActivate/#destinationcell","text":"The destination cell for escort and follow AI packages. For wander package, this is the cell the actor wanders in. Returns : result ( tes3cell )","title":"destinationCell"},{"location":"types/tes3aiPackageActivate/#distance","text":"Determines the size of the area the actor with this wander AI package will walk around. Measured in the in-game units. Returns : result (number)","title":"distance"},{"location":"types/tes3aiPackageActivate/#duration","text":"This property represents the duration of the AI package. It is present for wander, escort and follow AI packages. Measured in the in-game hours. Returns : result (number)","title":"duration"},{"location":"types/tes3aiPackageActivate/#hourofday","text":"Returns : result (number)","title":"hourOfDay"},{"location":"types/tes3aiPackageActivate/#isdone","text":"Returns : result (boolean)","title":"isDone"},{"location":"types/tes3aiPackageActivate/#isfinalized","text":"Returns : result (boolean)","title":"isFinalized"},{"location":"types/tes3aiPackageActivate/#ismoving","text":"This property is true if the parent actor is moving. Returns : result (boolean)","title":"isMoving"},{"location":"types/tes3aiPackageActivate/#isreset","text":"Returns : result (boolean)","title":"isReset"},{"location":"types/tes3aiPackageActivate/#isstarted","text":"Returns : result (boolean)","title":"isStarted"},{"location":"types/tes3aiPackageActivate/#mobile","text":"Access to the actor to whom this AI package belongs. Returns : result ( tes3mobileActor )","title":"mobile"},{"location":"types/tes3aiPackageActivate/#startgamehour","text":"The in-game hour at which this AI package started. Returns : result (number)","title":"startGameHour"},{"location":"types/tes3aiPackageActivate/#targetactor","text":"The target actor for activate, follow and escort AI packages. Returns : result ( tes3mobileActor )","title":"targetActor"},{"location":"types/tes3aiPackageActivate/#targetposition","text":"The final position to be reached by the escort, follow, and travel AI packages. Returns : result ( tes3vector3 )","title":"targetPosition"},{"location":"types/tes3aiPackageActivate/#type","text":"Read-only . Maps to values in tes3.aiPackage namespace. Returns : result (number)","title":"type"},{"location":"types/tes3aiPackageEscort/","text":"tes3aiPackageEscort \u2693\ufe0e An AI Escort package game object. The actor with this package will escort the target actor to a certain destination. This type inherits the following: tes3aiPackage Properties \u2693\ufe0e destination \u2693\ufe0e The destination coordinates of this escort AI package. Returns : result ( tes3vector3 ) destinationCell \u2693\ufe0e The destination cell for escort and follow AI packages. For wander package, this is the cell the actor wanders in. Returns : result ( tes3cell ) distance \u2693\ufe0e Determines the size of the area the actor with this wander AI package will walk around. Measured in the in-game units. Returns : result (number) duration \u2693\ufe0e This property represents the duration of the AI package. It is present for wander, escort and follow AI packages. Measured in the in-game hours. Returns : result (number) hourOfDay \u2693\ufe0e Returns : result (number) isDone \u2693\ufe0e Returns : result (boolean) isFinalized \u2693\ufe0e Returns : result (boolean) isMoving \u2693\ufe0e This property is true if the parent actor is moving. Returns : result (boolean) isReset \u2693\ufe0e Returns : result (boolean) isStarted \u2693\ufe0e Returns : result (boolean) mobile \u2693\ufe0e Access to the actor to whom this AI package belongs. Returns : result ( tes3mobileActor ) startGameHour \u2693\ufe0e The in-game hour at which this AI package started. Returns : result (number) targetActor \u2693\ufe0e The actor to be escorted to the destination. Returns : result ( tes3mobileActor ) targetPosition \u2693\ufe0e The final position to be reached by the escort, follow, and travel AI packages. Returns : result ( tes3vector3 ) type \u2693\ufe0e Read-only . Maps to values in tes3.aiPackage namespace. Returns : result (number)","title":"tes3aiPackageEscort"},{"location":"types/tes3aiPackageEscort/#tes3aipackageescort","text":"An AI Escort package game object. The actor with this package will escort the target actor to a certain destination. This type inherits the following: tes3aiPackage","title":"tes3aiPackageEscort"},{"location":"types/tes3aiPackageEscort/#properties","text":"","title":"Properties"},{"location":"types/tes3aiPackageEscort/#destination","text":"The destination coordinates of this escort AI package. Returns : result ( tes3vector3 )","title":"destination"},{"location":"types/tes3aiPackageEscort/#destinationcell","text":"The destination cell for escort and follow AI packages. For wander package, this is the cell the actor wanders in. Returns : result ( tes3cell )","title":"destinationCell"},{"location":"types/tes3aiPackageEscort/#distance","text":"Determines the size of the area the actor with this wander AI package will walk around. Measured in the in-game units. Returns : result (number)","title":"distance"},{"location":"types/tes3aiPackageEscort/#duration","text":"This property represents the duration of the AI package. It is present for wander, escort and follow AI packages. Measured in the in-game hours. Returns : result (number)","title":"duration"},{"location":"types/tes3aiPackageEscort/#hourofday","text":"Returns : result (number)","title":"hourOfDay"},{"location":"types/tes3aiPackageEscort/#isdone","text":"Returns : result (boolean)","title":"isDone"},{"location":"types/tes3aiPackageEscort/#isfinalized","text":"Returns : result (boolean)","title":"isFinalized"},{"location":"types/tes3aiPackageEscort/#ismoving","text":"This property is true if the parent actor is moving. Returns : result (boolean)","title":"isMoving"},{"location":"types/tes3aiPackageEscort/#isreset","text":"Returns : result (boolean)","title":"isReset"},{"location":"types/tes3aiPackageEscort/#isstarted","text":"Returns : result (boolean)","title":"isStarted"},{"location":"types/tes3aiPackageEscort/#mobile","text":"Access to the actor to whom this AI package belongs. Returns : result ( tes3mobileActor )","title":"mobile"},{"location":"types/tes3aiPackageEscort/#startgamehour","text":"The in-game hour at which this AI package started. Returns : result (number)","title":"startGameHour"},{"location":"types/tes3aiPackageEscort/#targetactor","text":"The actor to be escorted to the destination. Returns : result ( tes3mobileActor )","title":"targetActor"},{"location":"types/tes3aiPackageEscort/#targetposition","text":"The final position to be reached by the escort, follow, and travel AI packages. Returns : result ( tes3vector3 )","title":"targetPosition"},{"location":"types/tes3aiPackageEscort/#type","text":"Read-only . Maps to values in tes3.aiPackage namespace. Returns : result (number)","title":"type"},{"location":"types/tes3aiPackageFollow/","text":"tes3aiPackageFollow \u2693\ufe0e An AI Follow package game object. Sets an actor to follow another actor at a certain distance. This type inherits the following: tes3aiPackage Properties \u2693\ufe0e destination \u2693\ufe0e This is the position at which the following actor will stop following their target. Returns : result ( tes3vector3 ) destinationCell \u2693\ufe0e The destination cell for escort and follow AI packages. For wander package, this is the cell the actor wanders in. Returns : result ( tes3cell ) distance \u2693\ufe0e Determines the size of the area the actor with this wander AI package will walk around. Measured in the in-game units. Returns : result (number) duration \u2693\ufe0e This property represents the duration of the AI package. It is present for wander, escort and follow AI packages. Measured in the in-game hours. Returns : result (number) followDistance \u2693\ufe0e The distance between the follower and their target in the in-game units. Returns : result (number) hourOfDay \u2693\ufe0e Returns : result (number) isDone \u2693\ufe0e Returns : result (boolean) isFinalized \u2693\ufe0e Returns : result (boolean) isMoving \u2693\ufe0e This property is true if the parent actor is moving. Returns : result (boolean) isReset \u2693\ufe0e Returns : result (boolean) isStarted \u2693\ufe0e Returns : result (boolean) mobile \u2693\ufe0e Access to the actor to whom this AI package belongs. Returns : result ( tes3mobileActor ) startGameHour \u2693\ufe0e The in-game hour at which this AI package started. Returns : result (number) targetActor \u2693\ufe0e The actor this follow AI package is set to follow. Returns : result ( tes3mobileActor ) targetPosition \u2693\ufe0e The final position to be reached by the escort, follow, and travel AI packages. Returns : result ( tes3vector3 ) type \u2693\ufe0e Read-only . Maps to values in tes3.aiPackage namespace. Returns : result (number)","title":"tes3aiPackageFollow"},{"location":"types/tes3aiPackageFollow/#tes3aipackagefollow","text":"An AI Follow package game object. Sets an actor to follow another actor at a certain distance. This type inherits the following: tes3aiPackage","title":"tes3aiPackageFollow"},{"location":"types/tes3aiPackageFollow/#properties","text":"","title":"Properties"},{"location":"types/tes3aiPackageFollow/#destination","text":"This is the position at which the following actor will stop following their target. Returns : result ( tes3vector3 )","title":"destination"},{"location":"types/tes3aiPackageFollow/#destinationcell","text":"The destination cell for escort and follow AI packages. For wander package, this is the cell the actor wanders in. Returns : result ( tes3cell )","title":"destinationCell"},{"location":"types/tes3aiPackageFollow/#distance","text":"Determines the size of the area the actor with this wander AI package will walk around. Measured in the in-game units. Returns : result (number)","title":"distance"},{"location":"types/tes3aiPackageFollow/#duration","text":"This property represents the duration of the AI package. It is present for wander, escort and follow AI packages. Measured in the in-game hours. Returns : result (number)","title":"duration"},{"location":"types/tes3aiPackageFollow/#followdistance","text":"The distance between the follower and their target in the in-game units. Returns : result (number)","title":"followDistance"},{"location":"types/tes3aiPackageFollow/#hourofday","text":"Returns : result (number)","title":"hourOfDay"},{"location":"types/tes3aiPackageFollow/#isdone","text":"Returns : result (boolean)","title":"isDone"},{"location":"types/tes3aiPackageFollow/#isfinalized","text":"Returns : result (boolean)","title":"isFinalized"},{"location":"types/tes3aiPackageFollow/#ismoving","text":"This property is true if the parent actor is moving. Returns : result (boolean)","title":"isMoving"},{"location":"types/tes3aiPackageFollow/#isreset","text":"Returns : result (boolean)","title":"isReset"},{"location":"types/tes3aiPackageFollow/#isstarted","text":"Returns : result (boolean)","title":"isStarted"},{"location":"types/tes3aiPackageFollow/#mobile","text":"Access to the actor to whom this AI package belongs. Returns : result ( tes3mobileActor )","title":"mobile"},{"location":"types/tes3aiPackageFollow/#startgamehour","text":"The in-game hour at which this AI package started. Returns : result (number)","title":"startGameHour"},{"location":"types/tes3aiPackageFollow/#targetactor","text":"The actor this follow AI package is set to follow. Returns : result ( tes3mobileActor )","title":"targetActor"},{"location":"types/tes3aiPackageFollow/#targetposition","text":"The final position to be reached by the escort, follow, and travel AI packages. Returns : result ( tes3vector3 )","title":"targetPosition"},{"location":"types/tes3aiPackageFollow/#type","text":"Read-only . Maps to values in tes3.aiPackage namespace. Returns : result (number)","title":"type"},{"location":"types/tes3aiPackageTravel/","text":"tes3aiPackageTravel \u2693\ufe0e An AI Travel package game object. Sets an actor to travel to a certain destination. This type inherits the following: tes3aiPackage Properties \u2693\ufe0e destination \u2693\ufe0e The destination coordinates of this travel AI package. Returns : result ( tes3vector3 ) destinationCell \u2693\ufe0e The destination cell for escort and follow AI packages. For wander package, this is the cell the actor wanders in. Returns : result ( tes3cell ) distance \u2693\ufe0e Determines the size of the area the actor with this wander AI package will walk around. Measured in the in-game units. Returns : result (number) duration \u2693\ufe0e This property represents the duration of the AI package. It is present for wander, escort and follow AI packages. Measured in the in-game hours. Returns : result (number) hourOfDay \u2693\ufe0e Returns : result (number) isDone \u2693\ufe0e Returns : result (boolean) isFinalized \u2693\ufe0e Returns : result (boolean) isMoving \u2693\ufe0e This property is true if the parent actor is moving. Returns : result (boolean) isReset \u2693\ufe0e Returns : result (boolean) isStarted \u2693\ufe0e Returns : result (boolean) mobile \u2693\ufe0e Access to the actor to whom this AI package belongs. Returns : result ( tes3mobileActor ) startGameHour \u2693\ufe0e The in-game hour at which this AI package started. Returns : result (number) targetActor \u2693\ufe0e The target actor for activate, follow and escort AI packages. Returns : result ( tes3mobileActor ) targetPosition \u2693\ufe0e The final position to be reached by the escort, follow, and travel AI packages. Returns : result ( tes3vector3 ) type \u2693\ufe0e Read-only . Maps to values in tes3.aiPackage namespace. Returns : result (number)","title":"tes3aiPackageTravel"},{"location":"types/tes3aiPackageTravel/#tes3aipackagetravel","text":"An AI Travel package game object. Sets an actor to travel to a certain destination. This type inherits the following: tes3aiPackage","title":"tes3aiPackageTravel"},{"location":"types/tes3aiPackageTravel/#properties","text":"","title":"Properties"},{"location":"types/tes3aiPackageTravel/#destination","text":"The destination coordinates of this travel AI package. Returns : result ( tes3vector3 )","title":"destination"},{"location":"types/tes3aiPackageTravel/#destinationcell","text":"The destination cell for escort and follow AI packages. For wander package, this is the cell the actor wanders in. Returns : result ( tes3cell )","title":"destinationCell"},{"location":"types/tes3aiPackageTravel/#distance","text":"Determines the size of the area the actor with this wander AI package will walk around. Measured in the in-game units. Returns : result (number)","title":"distance"},{"location":"types/tes3aiPackageTravel/#duration","text":"This property represents the duration of the AI package. It is present for wander, escort and follow AI packages. Measured in the in-game hours. Returns : result (number)","title":"duration"},{"location":"types/tes3aiPackageTravel/#hourofday","text":"Returns : result (number)","title":"hourOfDay"},{"location":"types/tes3aiPackageTravel/#isdone","text":"Returns : result (boolean)","title":"isDone"},{"location":"types/tes3aiPackageTravel/#isfinalized","text":"Returns : result (boolean)","title":"isFinalized"},{"location":"types/tes3aiPackageTravel/#ismoving","text":"This property is true if the parent actor is moving. Returns : result (boolean)","title":"isMoving"},{"location":"types/tes3aiPackageTravel/#isreset","text":"Returns : result (boolean)","title":"isReset"},{"location":"types/tes3aiPackageTravel/#isstarted","text":"Returns : result (boolean)","title":"isStarted"},{"location":"types/tes3aiPackageTravel/#mobile","text":"Access to the actor to whom this AI package belongs. Returns : result ( tes3mobileActor )","title":"mobile"},{"location":"types/tes3aiPackageTravel/#startgamehour","text":"The in-game hour at which this AI package started. Returns : result (number)","title":"startGameHour"},{"location":"types/tes3aiPackageTravel/#targetactor","text":"The target actor for activate, follow and escort AI packages. Returns : result ( tes3mobileActor )","title":"targetActor"},{"location":"types/tes3aiPackageTravel/#targetposition","text":"The final position to be reached by the escort, follow, and travel AI packages. Returns : result ( tes3vector3 )","title":"targetPosition"},{"location":"types/tes3aiPackageTravel/#type","text":"Read-only . Maps to values in tes3.aiPackage namespace. Returns : result (number)","title":"type"},{"location":"types/tes3aiPackageWander/","text":"tes3aiPackageWander \u2693\ufe0e Wander AI package causing an actor to move around at random. Actors will choose points to walk to based on the path grid of the cell they are in. Idle nodes represent the percentage chance the actor will stand still and perform the particular idle animation. Each idle is checked, and the one that passes with the highest roll is played. If no Idle passes the random roll, the actor will move (walk) This type inherits the following: tes3aiPackage Properties \u2693\ufe0e activationTarget \u2693\ufe0e Returns : result ( tes3reference ) destinationCell \u2693\ufe0e The destination cell for escort and follow AI packages. For wander package, this is the cell the actor wanders in. Returns : result ( tes3cell ) distance \u2693\ufe0e Determines the size of the area the actor with this wander AI package will walk around. Measured in the in-game units. Returns : result (number) duration \u2693\ufe0e This property represents the duration of the AI package. It is present for wander, escort and follow AI packages. Measured in the in-game hours. Returns : result (number) hourOfDay \u2693\ufe0e Returns : result (number) idles \u2693\ufe0e Read-only . This is a table with chances that the actor will play corresponding idle animation. Returns : result ( tes3aiPackageWanderIdleNode []) isDone \u2693\ufe0e Returns : result (boolean) isFinalized \u2693\ufe0e Returns : result (boolean) isMoving \u2693\ufe0e This property is true if the parent actor is moving. Returns : result (boolean) isReset \u2693\ufe0e Returns : result (boolean) isStarted \u2693\ufe0e Returns : result (boolean) mobile \u2693\ufe0e Access to the actor to whom this AI package belongs. Returns : result ( tes3mobileActor ) startGameHour \u2693\ufe0e The in-game hour at which this AI package started. Returns : result (number) targetActor \u2693\ufe0e The target actor for activate, follow and escort AI packages. Returns : result ( tes3mobileActor ) targetPosition \u2693\ufe0e The final position to be reached by the escort, follow, and travel AI packages. Returns : result ( tes3vector3 ) type \u2693\ufe0e Read-only . Maps to values in tes3.aiPackage namespace. Returns : result (number)","title":"tes3aiPackageWander"},{"location":"types/tes3aiPackageWander/#tes3aipackagewander","text":"Wander AI package causing an actor to move around at random. Actors will choose points to walk to based on the path grid of the cell they are in. Idle nodes represent the percentage chance the actor will stand still and perform the particular idle animation. Each idle is checked, and the one that passes with the highest roll is played. If no Idle passes the random roll, the actor will move (walk) This type inherits the following: tes3aiPackage","title":"tes3aiPackageWander"},{"location":"types/tes3aiPackageWander/#properties","text":"","title":"Properties"},{"location":"types/tes3aiPackageWander/#activationtarget","text":"Returns : result ( tes3reference )","title":"activationTarget"},{"location":"types/tes3aiPackageWander/#destinationcell","text":"The destination cell for escort and follow AI packages. For wander package, this is the cell the actor wanders in. Returns : result ( tes3cell )","title":"destinationCell"},{"location":"types/tes3aiPackageWander/#distance","text":"Determines the size of the area the actor with this wander AI package will walk around. Measured in the in-game units. Returns : result (number)","title":"distance"},{"location":"types/tes3aiPackageWander/#duration","text":"This property represents the duration of the AI package. It is present for wander, escort and follow AI packages. Measured in the in-game hours. Returns : result (number)","title":"duration"},{"location":"types/tes3aiPackageWander/#hourofday","text":"Returns : result (number)","title":"hourOfDay"},{"location":"types/tes3aiPackageWander/#idles","text":"Read-only . This is a table with chances that the actor will play corresponding idle animation. Returns : result ( tes3aiPackageWanderIdleNode [])","title":"idles"},{"location":"types/tes3aiPackageWander/#isdone","text":"Returns : result (boolean)","title":"isDone"},{"location":"types/tes3aiPackageWander/#isfinalized","text":"Returns : result (boolean)","title":"isFinalized"},{"location":"types/tes3aiPackageWander/#ismoving","text":"This property is true if the parent actor is moving. Returns : result (boolean)","title":"isMoving"},{"location":"types/tes3aiPackageWander/#isreset","text":"Returns : result (boolean)","title":"isReset"},{"location":"types/tes3aiPackageWander/#isstarted","text":"Returns : result (boolean)","title":"isStarted"},{"location":"types/tes3aiPackageWander/#mobile","text":"Access to the actor to whom this AI package belongs. Returns : result ( tes3mobileActor )","title":"mobile"},{"location":"types/tes3aiPackageWander/#startgamehour","text":"The in-game hour at which this AI package started. Returns : result (number)","title":"startGameHour"},{"location":"types/tes3aiPackageWander/#targetactor","text":"The target actor for activate, follow and escort AI packages. Returns : result ( tes3mobileActor )","title":"targetActor"},{"location":"types/tes3aiPackageWander/#targetposition","text":"The final position to be reached by the escort, follow, and travel AI packages. Returns : result ( tes3vector3 )","title":"targetPosition"},{"location":"types/tes3aiPackageWander/#type","text":"Read-only . Maps to values in tes3.aiPackage namespace. Returns : result (number)","title":"type"},{"location":"types/tes3aiPackageWanderIdleNode/","text":"tes3aiPackageWanderIdleNode \u2693\ufe0e An AI Wander package idle node game object. Contains information on the chance that the actor will wander at that idle node. Properties \u2693\ufe0e chance \u2693\ufe0e A chance that the actor will play corresponding idle animation while standing when parent tes3aiPackageWander is active. Returns : result (number) index \u2693\ufe0e The index of this idle node. Determines the chance that certain idle animation will be played. Index Animation description 1 Looking around 2 Looking behind 3 Scratching head and then shaking it 4 Shifting clothing or armor on shoulder 5 Yawn, strech, look around 6 Looks at fingers and then looks around furitevely 7 Puts right fist above heart and bows head 8 Reaches for the weapon Returns : result (number)","title":"tes3aiPackageWanderIdleNode"},{"location":"types/tes3aiPackageWanderIdleNode/#tes3aipackagewanderidlenode","text":"An AI Wander package idle node game object. Contains information on the chance that the actor will wander at that idle node.","title":"tes3aiPackageWanderIdleNode"},{"location":"types/tes3aiPackageWanderIdleNode/#properties","text":"","title":"Properties"},{"location":"types/tes3aiPackageWanderIdleNode/#chance","text":"A chance that the actor will play corresponding idle animation while standing when parent tes3aiPackageWander is active. Returns : result (number)","title":"chance"},{"location":"types/tes3aiPackageWanderIdleNode/#index","text":"The index of this idle node. Determines the chance that certain idle animation will be played. Index Animation description 1 Looking around 2 Looking behind 3 Scratching head and then shaking it 4 Shifting clothing or armor on shoulder 5 Yawn, strech, look around 6 Looks at fingers and then looks around furitevely 7 Puts right fist above heart and bows head 8 Reaches for the weapon Returns : result (number)","title":"index"},{"location":"types/tes3aiPlanner/","text":"tes3aiPlanner \u2693\ufe0e A game object which contains information on actor's current and assigned AI packages. Properties \u2693\ufe0e currentPackageIndex \u2693\ufe0e Read-only . Access to index of currently active AI package in packages table. Returns : result (number) mobile \u2693\ufe0e The access to mobile actor this tes3aiPlanner object works on. Returns : result ( tes3mobileActor ) nextOpenPackageIndex \u2693\ufe0e Read-only . This is the index in .packages table that represents the currently active AI package. Returns : result (number) packages \u2693\ufe0e Read-only . The table with tes3aiPackage objects assigned to this mobile actor. These packages are executed as instruction in the order they are defined. When the last one is executed, the cycle is repeated from the start. Has 32 entries, where any can be nil. Returns : result ( tes3aiPackage []) Methods \u2693\ufe0e getActivePackage \u2693\ufe0e Fetches currently active AI package. local result = myObject : getActivePackage () Returns : result ( tes3aiPackageActivate , tes3aiPackageEscort , tes3aiPackageFollow , tes3aiPackageTravel , tes3aiPackageWander )","title":"tes3aiPlanner"},{"location":"types/tes3aiPlanner/#tes3aiplanner","text":"A game object which contains information on actor's current and assigned AI packages.","title":"tes3aiPlanner"},{"location":"types/tes3aiPlanner/#properties","text":"","title":"Properties"},{"location":"types/tes3aiPlanner/#currentpackageindex","text":"Read-only . Access to index of currently active AI package in packages table. Returns : result (number)","title":"currentPackageIndex"},{"location":"types/tes3aiPlanner/#mobile","text":"The access to mobile actor this tes3aiPlanner object works on. Returns : result ( tes3mobileActor )","title":"mobile"},{"location":"types/tes3aiPlanner/#nextopenpackageindex","text":"Read-only . This is the index in .packages table that represents the currently active AI package. Returns : result (number)","title":"nextOpenPackageIndex"},{"location":"types/tes3aiPlanner/#packages","text":"Read-only . The table with tes3aiPackage objects assigned to this mobile actor. These packages are executed as instruction in the order they are defined. When the last one is executed, the cycle is repeated from the start. Has 32 entries, where any can be nil. Returns : result ( tes3aiPackage [])","title":"packages"},{"location":"types/tes3aiPlanner/#methods","text":"","title":"Methods"},{"location":"types/tes3aiPlanner/#getactivepackage","text":"Fetches currently active AI package. local result = myObject : getActivePackage () Returns : result ( tes3aiPackageActivate , tes3aiPackageEscort , tes3aiPackageFollow , tes3aiPackageTravel , tes3aiPackageWander )","title":"getActivePackage"},{"location":"types/tes3alchemy/","text":"tes3alchemy \u2693\ufe0e An alchemy game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e autoCalc \u2693\ufe0e If set, the value of the object is automatically calculated. Returns : result (boolean) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) effects \u2693\ufe0e Read-only . An array-style table of the tes3effect data on the object. Returns : result ( tes3effect []) Example: Determining if a potion is hostile The following function returns true if the spell contains at least one hostile effect. This criterion can be considered subjective, but that rule is also used by the game to determine if a use of the spell on an NPC is considered an offense. --- @param magicSource tes3spell|tes3enchantment|tes3alchemy local function isSpellHostile ( magicSource ) for _ , effect in ipairs ( magicSource . effects ) do if ( effect . object . isHarmful ) then -- If one of the spell's effects is harmful, then -- `true` is returned and function ends here. return true end end -- If no harmful effect was found then return `false`. return false end flags \u2693\ufe0e The alchemy item's flags. Returns : result (number) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e The value of the object. For this object type, its maximum value is 65535. Larger numbers will overflow. Returns : result (integer) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) createCopy \u2693\ufe0e Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3alchemy ) getActiveEffectCount \u2693\ufe0e Returns the amount of effects the tes3alchemy object has. local count = myObject : getActiveEffectCount () Returns : count (number) getFirstIndexOfEffect \u2693\ufe0e Returns the index of a first effect of a given effectId in the parent tes3alchemy object. local index = myObject : getFirstIndexOfEffect ( effectId ) Parameters : effectId (number): The effectId to perform a check for. Maps to tes3.effect constants. Returns : index (number)","title":"Tes3alchemy"},{"location":"types/tes3alchemy/#tes3alchemy","text":"An alchemy game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3alchemy"},{"location":"types/tes3alchemy/#properties","text":"","title":"Properties"},{"location":"types/tes3alchemy/#autocalc","text":"If set, the value of the object is automatically calculated. Returns : result (boolean)","title":"autoCalc"},{"location":"types/tes3alchemy/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3alchemy/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3alchemy/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3alchemy/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3alchemy/#effects","text":"Read-only . An array-style table of the tes3effect data on the object. Returns : result ( tes3effect []) Example: Determining if a potion is hostile The following function returns true if the spell contains at least one hostile effect. This criterion can be considered subjective, but that rule is also used by the game to determine if a use of the spell on an NPC is considered an offense. --- @param magicSource tes3spell|tes3enchantment|tes3alchemy local function isSpellHostile ( magicSource ) for _ , effect in ipairs ( magicSource . effects ) do if ( effect . object . isHarmful ) then -- If one of the spell's effects is harmful, then -- `true` is returned and function ends here. return true end end -- If no harmful effect was found then return `false`. return false end","title":"effects"},{"location":"types/tes3alchemy/#flags","text":"The alchemy item's flags. Returns : result (number)","title":"flags"},{"location":"types/tes3alchemy/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3alchemy/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3alchemy/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3alchemy/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3alchemy/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3alchemy/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3alchemy/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3alchemy/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3alchemy/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3alchemy/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3alchemy/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3alchemy/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3alchemy/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3alchemy/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3alchemy/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3alchemy/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3alchemy/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3alchemy/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3alchemy/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3alchemy/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3alchemy/#value","text":"The value of the object. For this object type, its maximum value is 65535. Larger numbers will overflow. Returns : result (integer)","title":"value"},{"location":"types/tes3alchemy/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3alchemy/#methods","text":"","title":"Methods"},{"location":"types/tes3alchemy/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3alchemy/#createcopy","text":"Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3alchemy )","title":"createCopy"},{"location":"types/tes3alchemy/#getactiveeffectcount","text":"Returns the amount of effects the tes3alchemy object has. local count = myObject : getActiveEffectCount () Returns : count (number)","title":"getActiveEffectCount"},{"location":"types/tes3alchemy/#getfirstindexofeffect","text":"Returns the index of a first effect of a given effectId in the parent tes3alchemy object. local index = myObject : getFirstIndexOfEffect ( effectId ) Parameters : effectId (number): The effectId to perform a check for. Maps to tes3.effect constants. Returns : index (number)","title":"getFirstIndexOfEffect"},{"location":"types/tes3animationData/","text":"tes3animationData \u2693\ufe0e A game object which contains information on actor's animations. Animations are divided into three layers. The layer 0 is the base layer containing all the base animations for every humanoid in the game, including the player (when in third person). These animations come from base_anim.nif . Layer 1 is for female animations. Any animations present in base_anim_female.nif override their male counterparts for humanoid races. For beast races, layer 1 animations come from base_anim_kna.nif . Layer 2 are the custom animations assigned to the actor. Properties \u2693\ufe0e actorNode \u2693\ufe0e Returns : result ( niNode ) animationGroups \u2693\ufe0e Read-only . The animation groups, indexed by the tes3.animationGroup namespace. Returns : result (tes3animationGroup[]) animationGroupSoundgenCounts \u2693\ufe0e Read-only . The number of sound generators for each of the animation groups, indexed by the tes3.animationGroup namespace. Returns : result (number[]) animGroupLayerIndicies \u2693\ufe0e Read-only . The layer from which each of the actor's animation groups come, indexed by the tes3.animationGroup namespace. Returns : result (number[]) approxRootTravelSpeeds \u2693\ufe0e Read-only . The approximate root node travel speed for each of the animation groups, indexed by the tes3.animationGroup namespace. Returns : result (number[]) currentAnimGroupLayers \u2693\ufe0e Read-only . Returns : result (number[]) currentAnimGroups \u2693\ufe0e Read-only . The currently playing animation group , on each of the body sections . Returns : result (number[]) currentNodeIndices \u2693\ufe0e Read-only . Returns : result (number[]) currentSoundgenIndices \u2693\ufe0e Read-only . The index of the currently used sound generator for each of the body sections . Returns : result (number[]) deltaTime \u2693\ufe0e The time in seconds since the last update. Returns : result (number) flags \u2693\ufe0e Returns : result (number) hasOverrideAnimations \u2693\ufe0e Read-only . Returns : result (boolean) headGeometry \u2693\ufe0e Returns : result ( niGeometry ) headNode \u2693\ufe0e Returns : result ( niNode ) keyframeLayers \u2693\ufe0e Read-only . Returns : result ( tes3animationDataSequenceGroup []) lipsyncLevel \u2693\ufe0e Returns : result (number) loopCounts \u2693\ufe0e Read-only . Returns : result (number[]) manager \u2693\ufe0e Returns : result (niKeyframeManager) modelRootNode \u2693\ufe0e Returns : result ( niNode ) movementSpeed \u2693\ufe0e Read-only . The animation speed multiplier of movement animations. This includes walking, running, crouching, swimming, turning, jumping and other movement related animations. Returns : result (number) nextLoopCounts \u2693\ufe0e Returns : result (number) positionDeltaModelRoot \u2693\ufe0e Returns : result ( tes3vector3 ) spine1Node \u2693\ufe0e Returns : result ( niNode ) spine2Node \u2693\ufe0e Returns : result ( niNode ) spineAngle \u2693\ufe0e Returns : result (number) timings \u2693\ufe0e The time in seconds indicating the current position within the animation for each individual body section, indexed by values in the tes3.animationBodySection table. Returns : result (number[]) weaponSpeed \u2693\ufe0e The animation speed multiplier of weapon animations. This includes all weapon related idle, attack, and ready/unready animations. Returns : result (number) Methods \u2693\ufe0e getReference \u2693\ufe0e This method fetches the reference of the actor to whom this animation data belongs. local result = myObject : getReference () Returns : result ( tes3reference ) playAnimationGroup \u2693\ufe0e This method plays an animation group on the related actor, invoking playGroup event. myObject : playAnimationGroup ( animationGroup , startFlag , loopCount ) Parameters : animationGroup (number): The animation group to play. A value from tes3.animationGroup namespace. startFlag (number): A flag for starting the group with, using tes3.animationStartFlag constants. loopCount (number): If provided, the animation will repeat its loop section a given number of times. To make an animation play through once, set loopCount = 0, while -1 is used for infinite looping. playAnimationGroupForIndex \u2693\ufe0e This method plays an animation group on the provided body section of related actor, invoking playGroup event. myObject : playAnimationGroupForIndex ( animationGroup , triIndex , startFlag , loopCount ) Parameters : animationGroup (number): The animation group to play. A value from tes3.animationGroup namespace. triIndex (number): The body section on which to play the animation. A value from tes3.animationBodySection namespace. startFlag (number): A flag for starting the group with, using tes3.animationStartFlag constants. loopCount (number): If provided, the animation will repeat its loop section a given number of times. To make an animation play through once, set loopCount = 0, while -1 is used for infinite looping. setHeadNode \u2693\ufe0e myObject : setHeadNode ( head ) Parameters : head ( niNode ): setOverrideLayerKeyframes \u2693\ufe0e local success = myObject : setOverrideLayerKeyframes ( kfData ) Parameters : kfData (tes3keyframeDefinition): Returns : success (boolean)","title":"tes3animationData"},{"location":"types/tes3animationData/#tes3animationdata","text":"A game object which contains information on actor's animations. Animations are divided into three layers. The layer 0 is the base layer containing all the base animations for every humanoid in the game, including the player (when in third person). These animations come from base_anim.nif . Layer 1 is for female animations. Any animations present in base_anim_female.nif override their male counterparts for humanoid races. For beast races, layer 1 animations come from base_anim_kna.nif . Layer 2 are the custom animations assigned to the actor.","title":"tes3animationData"},{"location":"types/tes3animationData/#properties","text":"","title":"Properties"},{"location":"types/tes3animationData/#actornode","text":"Returns : result ( niNode )","title":"actorNode"},{"location":"types/tes3animationData/#animationgroups","text":"Read-only . The animation groups, indexed by the tes3.animationGroup namespace. Returns : result (tes3animationGroup[])","title":"animationGroups"},{"location":"types/tes3animationData/#animationgroupsoundgencounts","text":"Read-only . The number of sound generators for each of the animation groups, indexed by the tes3.animationGroup namespace. Returns : result (number[])","title":"animationGroupSoundgenCounts"},{"location":"types/tes3animationData/#animgrouplayerindicies","text":"Read-only . The layer from which each of the actor's animation groups come, indexed by the tes3.animationGroup namespace. Returns : result (number[])","title":"animGroupLayerIndicies"},{"location":"types/tes3animationData/#approxroottravelspeeds","text":"Read-only . The approximate root node travel speed for each of the animation groups, indexed by the tes3.animationGroup namespace. Returns : result (number[])","title":"approxRootTravelSpeeds"},{"location":"types/tes3animationData/#currentanimgrouplayers","text":"Read-only . Returns : result (number[])","title":"currentAnimGroupLayers"},{"location":"types/tes3animationData/#currentanimgroups","text":"Read-only . The currently playing animation group , on each of the body sections . Returns : result (number[])","title":"currentAnimGroups"},{"location":"types/tes3animationData/#currentnodeindices","text":"Read-only . Returns : result (number[])","title":"currentNodeIndices"},{"location":"types/tes3animationData/#currentsoundgenindices","text":"Read-only . The index of the currently used sound generator for each of the body sections . Returns : result (number[])","title":"currentSoundgenIndices"},{"location":"types/tes3animationData/#deltatime","text":"The time in seconds since the last update. Returns : result (number)","title":"deltaTime"},{"location":"types/tes3animationData/#flags","text":"Returns : result (number)","title":"flags"},{"location":"types/tes3animationData/#hasoverrideanimations","text":"Read-only . Returns : result (boolean)","title":"hasOverrideAnimations"},{"location":"types/tes3animationData/#headgeometry","text":"Returns : result ( niGeometry )","title":"headGeometry"},{"location":"types/tes3animationData/#headnode","text":"Returns : result ( niNode )","title":"headNode"},{"location":"types/tes3animationData/#keyframelayers","text":"Read-only . Returns : result ( tes3animationDataSequenceGroup [])","title":"keyframeLayers"},{"location":"types/tes3animationData/#lipsynclevel","text":"Returns : result (number)","title":"lipsyncLevel"},{"location":"types/tes3animationData/#loopcounts","text":"Read-only . Returns : result (number[])","title":"loopCounts"},{"location":"types/tes3animationData/#manager","text":"Returns : result (niKeyframeManager)","title":"manager"},{"location":"types/tes3animationData/#modelrootnode","text":"Returns : result ( niNode )","title":"modelRootNode"},{"location":"types/tes3animationData/#movementspeed","text":"Read-only . The animation speed multiplier of movement animations. This includes walking, running, crouching, swimming, turning, jumping and other movement related animations. Returns : result (number)","title":"movementSpeed"},{"location":"types/tes3animationData/#nextloopcounts","text":"Returns : result (number)","title":"nextLoopCounts"},{"location":"types/tes3animationData/#positiondeltamodelroot","text":"Returns : result ( tes3vector3 )","title":"positionDeltaModelRoot"},{"location":"types/tes3animationData/#spine1node","text":"Returns : result ( niNode )","title":"spine1Node"},{"location":"types/tes3animationData/#spine2node","text":"Returns : result ( niNode )","title":"spine2Node"},{"location":"types/tes3animationData/#spineangle","text":"Returns : result (number)","title":"spineAngle"},{"location":"types/tes3animationData/#timings","text":"The time in seconds indicating the current position within the animation for each individual body section, indexed by values in the tes3.animationBodySection table. Returns : result (number[])","title":"timings"},{"location":"types/tes3animationData/#weaponspeed","text":"The animation speed multiplier of weapon animations. This includes all weapon related idle, attack, and ready/unready animations. Returns : result (number)","title":"weaponSpeed"},{"location":"types/tes3animationData/#methods","text":"","title":"Methods"},{"location":"types/tes3animationData/#getreference","text":"This method fetches the reference of the actor to whom this animation data belongs. local result = myObject : getReference () Returns : result ( tes3reference )","title":"getReference"},{"location":"types/tes3animationData/#playanimationgroup","text":"This method plays an animation group on the related actor, invoking playGroup event. myObject : playAnimationGroup ( animationGroup , startFlag , loopCount ) Parameters : animationGroup (number): The animation group to play. A value from tes3.animationGroup namespace. startFlag (number): A flag for starting the group with, using tes3.animationStartFlag constants. loopCount (number): If provided, the animation will repeat its loop section a given number of times. To make an animation play through once, set loopCount = 0, while -1 is used for infinite looping.","title":"playAnimationGroup"},{"location":"types/tes3animationData/#playanimationgroupforindex","text":"This method plays an animation group on the provided body section of related actor, invoking playGroup event. myObject : playAnimationGroupForIndex ( animationGroup , triIndex , startFlag , loopCount ) Parameters : animationGroup (number): The animation group to play. A value from tes3.animationGroup namespace. triIndex (number): The body section on which to play the animation. A value from tes3.animationBodySection namespace. startFlag (number): A flag for starting the group with, using tes3.animationStartFlag constants. loopCount (number): If provided, the animation will repeat its loop section a given number of times. To make an animation play through once, set loopCount = 0, while -1 is used for infinite looping.","title":"playAnimationGroupForIndex"},{"location":"types/tes3animationData/#setheadnode","text":"myObject : setHeadNode ( head ) Parameters : head ( niNode ):","title":"setHeadNode"},{"location":"types/tes3animationData/#setoverridelayerkeyframes","text":"local success = myObject : setOverrideLayerKeyframes ( kfData ) Parameters : kfData (tes3keyframeDefinition): Returns : success (boolean)","title":"setOverrideLayerKeyframes"},{"location":"types/tes3animationDataSequenceGroup/","text":"tes3animationDataSequenceGroup \u2693\ufe0e A game object which contains niSequence objects for each animation body section. Properties \u2693\ufe0e leftArm \u2693\ufe0e The niSequence object for the actor's left arm. Returns : result (niSequence) lower \u2693\ufe0e The niSequence object for the actor's legs. Returns : result (niSequence) upper \u2693\ufe0e The niSequence object for the actor's upper body. Returns : result (niSequence)","title":"tes3animationDataSequenceGroup"},{"location":"types/tes3animationDataSequenceGroup/#tes3animationdatasequencegroup","text":"A game object which contains niSequence objects for each animation body section.","title":"tes3animationDataSequenceGroup"},{"location":"types/tes3animationDataSequenceGroup/#properties","text":"","title":"Properties"},{"location":"types/tes3animationDataSequenceGroup/#leftarm","text":"The niSequence object for the actor's left arm. Returns : result (niSequence)","title":"leftArm"},{"location":"types/tes3animationDataSequenceGroup/#lower","text":"The niSequence object for the actor's legs. Returns : result (niSequence)","title":"lower"},{"location":"types/tes3animationDataSequenceGroup/#upper","text":"The niSequence object for the actor's upper body. Returns : result (niSequence)","title":"upper"},{"location":"types/tes3animationDataSoundGenKey/","text":"tes3animationDataSoundGenKey \u2693\ufe0e A game object which contains information that map actor sounds to animations. Properties \u2693\ufe0e pitch \u2693\ufe0e The pitch of the sound. Returns : result (number) sound \u2693\ufe0e The sound played at this sound generator key. Returns : result ( tes3sound ) startFrame \u2693\ufe0e The starting frame of animation at which the sound plays. Returns : result (number) startTime \u2693\ufe0e Returns : result (number) volume \u2693\ufe0e The sound's volume. Returns : result (number)","title":"tes3animationDataSoundGenKey"},{"location":"types/tes3animationDataSoundGenKey/#tes3animationdatasoundgenkey","text":"A game object which contains information that map actor sounds to animations.","title":"tes3animationDataSoundGenKey"},{"location":"types/tes3animationDataSoundGenKey/#properties","text":"","title":"Properties"},{"location":"types/tes3animationDataSoundGenKey/#pitch","text":"The pitch of the sound. Returns : result (number)","title":"pitch"},{"location":"types/tes3animationDataSoundGenKey/#sound","text":"The sound played at this sound generator key. Returns : result ( tes3sound )","title":"sound"},{"location":"types/tes3animationDataSoundGenKey/#startframe","text":"The starting frame of animation at which the sound plays. Returns : result (number)","title":"startFrame"},{"location":"types/tes3animationDataSoundGenKey/#starttime","text":"Returns : result (number)","title":"startTime"},{"location":"types/tes3animationDataSoundGenKey/#volume","text":"The sound's volume. Returns : result (number)","title":"volume"},{"location":"types/tes3apparatus/","text":"tes3apparatus \u2693\ufe0e An apparatus game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) quality \u2693\ufe0e The quality of the apparatus. Returns : result (number) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) type \u2693\ufe0e The type of the apparatus. Maps to values in tes3.apparatusType namespace. Returns : result (number) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"Tes3apparatus"},{"location":"types/tes3apparatus/#tes3apparatus","text":"An apparatus game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3apparatus"},{"location":"types/tes3apparatus/#properties","text":"","title":"Properties"},{"location":"types/tes3apparatus/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3apparatus/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3apparatus/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3apparatus/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3apparatus/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3apparatus/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3apparatus/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3apparatus/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3apparatus/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3apparatus/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3apparatus/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3apparatus/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3apparatus/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3apparatus/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3apparatus/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3apparatus/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3apparatus/#quality","text":"The quality of the apparatus. Returns : result (number)","title":"quality"},{"location":"types/tes3apparatus/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3apparatus/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3apparatus/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3apparatus/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3apparatus/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3apparatus/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3apparatus/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3apparatus/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3apparatus/#type","text":"The type of the apparatus. Maps to values in tes3.apparatusType namespace. Returns : result (number)","title":"type"},{"location":"types/tes3apparatus/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3apparatus/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3apparatus/#methods","text":"","title":"Methods"},{"location":"types/tes3apparatus/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3archive/","text":"tes3archive \u2693\ufe0e Loaded data from a BSA file. Properties \u2693\ufe0e fileCount \u2693\ufe0e Read-only . The number of file entries in the BSA. Returns : result (number) nextArchive \u2693\ufe0e Read-only . The next archive to access after this one. Returns : result ( tes3archive ) offsetToFileNameHashes \u2693\ufe0e Read-only . The offset in the BSA file where file name hashes can be found. Returns : result (number) path \u2693\ufe0e Read-only . The full path to the BSA, relative to the Morrowind installation directory. Returns : result (string) sizesAndOffsets \u2693\ufe0e Read-only . An array of sizes and offsets for entries in the archive. Returns : result ( tes3archiveOffsetSizeData []) Methods \u2693\ufe0e findFileIndex \u2693\ufe0e Searches for a file in the archive, and returns the index that it can be found in. local index = myObject : findFileIndex ( path ) Parameters : path (string): The path to the file held in the archive. Returns : index (number, nil): The index in the archive that the path was found at, or nil if no result was found.","title":"Tes3archive"},{"location":"types/tes3archive/#tes3archive","text":"Loaded data from a BSA file.","title":"tes3archive"},{"location":"types/tes3archive/#properties","text":"","title":"Properties"},{"location":"types/tes3archive/#filecount","text":"Read-only . The number of file entries in the BSA. Returns : result (number)","title":"fileCount"},{"location":"types/tes3archive/#nextarchive","text":"Read-only . The next archive to access after this one. Returns : result ( tes3archive )","title":"nextArchive"},{"location":"types/tes3archive/#offsettofilenamehashes","text":"Read-only . The offset in the BSA file where file name hashes can be found. Returns : result (number)","title":"offsetToFileNameHashes"},{"location":"types/tes3archive/#path","text":"Read-only . The full path to the BSA, relative to the Morrowind installation directory. Returns : result (string)","title":"path"},{"location":"types/tes3archive/#sizesandoffsets","text":"Read-only . An array of sizes and offsets for entries in the archive. Returns : result ( tes3archiveOffsetSizeData [])","title":"sizesAndOffsets"},{"location":"types/tes3archive/#methods","text":"","title":"Methods"},{"location":"types/tes3archive/#findfileindex","text":"Searches for a file in the archive, and returns the index that it can be found in. local index = myObject : findFileIndex ( path ) Parameters : path (string): The path to the file held in the archive. Returns : index (number, nil): The index in the archive that the path was found at, or nil if no result was found.","title":"findFileIndex"},{"location":"types/tes3archiveOffsetSizeData/","text":"tes3archiveOffsetSizeData \u2693\ufe0e A pair of size and offset data for an entry stored in a BSA file. Properties \u2693\ufe0e offset \u2693\ufe0e Read-only . The offset from the start of the BSA file that this file can be found at. Returns : result (number) size \u2693\ufe0e Read-only . The size of the file stored in the BSA. Returns : result (number)","title":"tes3archiveOffsetSizeData"},{"location":"types/tes3archiveOffsetSizeData/#tes3archiveoffsetsizedata","text":"A pair of size and offset data for an entry stored in a BSA file.","title":"tes3archiveOffsetSizeData"},{"location":"types/tes3archiveOffsetSizeData/#properties","text":"","title":"Properties"},{"location":"types/tes3archiveOffsetSizeData/#offset","text":"Read-only . The offset from the start of the BSA file that this file can be found at. Returns : result (number)","title":"offset"},{"location":"types/tes3archiveOffsetSizeData/#size","text":"Read-only . The size of the file stored in the BSA. Returns : result (number)","title":"size"},{"location":"types/tes3armor/","text":"tes3armor \u2693\ufe0e An armor game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e armorRating \u2693\ufe0e The armor's defensive rating. Returns : result (number) armorScalar \u2693\ufe0e Read-only . This is the maximal contribution to actor's total Armor Rating for this piece of armor. For vanilla armors, this is slot based. Cuirasses have armorScalar = 0.3 , helmets, pauldrons, greaves, boots and shields have 0.1 , while gauntlets and bracers have armorScalar = 0.05 . Returns : result (number) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) enchantCapacity \u2693\ufe0e The object's enchantment capacity. Returns : result (number) enchantment \u2693\ufe0e The enchantment used by the object. Returns : result ( tes3enchantment ) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLeftPart \u2693\ufe0e Determines if the armor is the left part of a pair. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) maxCondition \u2693\ufe0e The object's maximum condition. Returns : result (number) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) parts \u2693\ufe0e Read-only . An array-style table of the tes3wearablePart data on the object. Returns : result ( tes3wearablePart []) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) slot \u2693\ufe0e The slot used by the armor. Maps to tes3.armorSlot namespace. Returns : result (number) slotName \u2693\ufe0e Read-only . The name of the slot used by the armor. Returns : result (string) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) weightClass \u2693\ufe0e Read-only . The weight class of the armor. This value maps to tes3.armorWeightClass constants. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) calculateArmorRating \u2693\ufe0e Calculates what armor rating is provided for a given mobile actor. myObject : calculateArmorRating ( mobile ) Parameters : mobile ( tes3mobileActor ) createCopy \u2693\ufe0e Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3armor )","title":"Tes3armor"},{"location":"types/tes3armor/#tes3armor","text":"An armor game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3armor"},{"location":"types/tes3armor/#properties","text":"","title":"Properties"},{"location":"types/tes3armor/#armorrating","text":"The armor's defensive rating. Returns : result (number)","title":"armorRating"},{"location":"types/tes3armor/#armorscalar","text":"Read-only . This is the maximal contribution to actor's total Armor Rating for this piece of armor. For vanilla armors, this is slot based. Cuirasses have armorScalar = 0.3 , helmets, pauldrons, greaves, boots and shields have 0.1 , while gauntlets and bracers have armorScalar = 0.05 . Returns : result (number)","title":"armorScalar"},{"location":"types/tes3armor/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3armor/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3armor/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3armor/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3armor/#enchantcapacity","text":"The object's enchantment capacity. Returns : result (number)","title":"enchantCapacity"},{"location":"types/tes3armor/#enchantment","text":"The enchantment used by the object. Returns : result ( tes3enchantment )","title":"enchantment"},{"location":"types/tes3armor/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3armor/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3armor/#isleftpart","text":"Determines if the armor is the left part of a pair. Returns : result (boolean)","title":"isLeftPart"},{"location":"types/tes3armor/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3armor/#maxcondition","text":"The object's maximum condition. Returns : result (number)","title":"maxCondition"},{"location":"types/tes3armor/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3armor/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3armor/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3armor/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3armor/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3armor/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3armor/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3armor/#parts","text":"Read-only . An array-style table of the tes3wearablePart data on the object. Returns : result ( tes3wearablePart [])","title":"parts"},{"location":"types/tes3armor/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3armor/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3armor/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3armor/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3armor/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3armor/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3armor/#slot","text":"The slot used by the armor. Maps to tes3.armorSlot namespace. Returns : result (number)","title":"slot"},{"location":"types/tes3armor/#slotname","text":"Read-only . The name of the slot used by the armor. Returns : result (string)","title":"slotName"},{"location":"types/tes3armor/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3armor/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3armor/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3armor/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3armor/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3armor/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3armor/#weightclass","text":"Read-only . The weight class of the armor. This value maps to tes3.armorWeightClass constants. Returns : result (number)","title":"weightClass"},{"location":"types/tes3armor/#methods","text":"","title":"Methods"},{"location":"types/tes3armor/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3armor/#calculatearmorrating","text":"Calculates what armor rating is provided for a given mobile actor. myObject : calculateArmorRating ( mobile ) Parameters : mobile ( tes3mobileActor )","title":"calculateArmorRating"},{"location":"types/tes3armor/#createcopy","text":"Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3armor )","title":"createCopy"},{"location":"types/tes3audioController/","text":"tes3audioController \u2693\ufe0e A controller for audio. It holds data on the status of the current and next music tracks, volume settings and other related facilities. All the volumes are expressed in range [0, 1]. Properties \u2693\ufe0e currentMusicFilePath \u2693\ufe0e File path of the currently playing music track. The path can not be longer than 260 characters. Returns : result (string) disableAudio \u2693\ufe0e A flag which controls whether the audio is disabled or not. Returns : result (boolean) listenerPosition \u2693\ufe0e The sound listener position. Returns : result ( tes3vector3 ) musicDuration \u2693\ufe0e Read-only . The duration of the currently playing music track. Returns : result (number) musicFadeBeginTimestamp \u2693\ufe0e The timestamp at which currently playing music track started fading in. So, it's a timestamp at which currently playing music track started. Returns : result (number) musicNextTrackStartTimestamp \u2693\ufe0e Returns : result (number) musicNextTrackVolume \u2693\ufe0e The volume of the next track. Returns : result (number) musicPosition \u2693\ufe0e Current play time for currently playing music track. Returns : result (number) nextMusicFilePath \u2693\ufe0e File path of the music track which is to be played next. The path can not be longer than 260 characters. Returns : result (string) pitchAxis \u2693\ufe0e Approximated pitch axis in radians. Returns : result (number) volumeEffects \u2693\ufe0e Volume of the effects. Corresponds to the effects volume slider in Audio settings. Returns : result (number) volumeFootsteps \u2693\ufe0e Volume of the footsteps. Corresponds to the footsteps volume slider in Audio settings. Returns : result (number) volumeMaster \u2693\ufe0e Master volume. Corresponds to the master volume slider in Audio settings. Returns : result (number) volumeMusic \u2693\ufe0e Volume of the music. Corresponds to the music volume slider in Audio settings. Returns : result (number) volumeVoice \u2693\ufe0e Volume of the voices. Corresponds to the voice volume slider in Audio settings. Returns : result (number) yawAxis \u2693\ufe0e Approximated yaw axis in radians. Returns : result (number) Methods \u2693\ufe0e changeMusicTrack \u2693\ufe0e Changes currently playing music track according to provided parameters. myObject : changeMusicTrack ({ filename = ..., crossfade = ..., volume = ... }) Parameters : params (table) filename (string): File name of the new music track. crossfade (number): Default : 1000 . Duration of the crossfading between music tracks. Measured in miliseconds. volume (number): Default : 1 . Allows changing the volume of the music track. getMixVolume \u2693\ufe0e Final volume of a provided type of audio, after master volume and its own volume adjustments. Music volume is an exception since it isn't affected by master volume. local volume = myObject : getMixVolume ( mix ) Parameters : mix (number): The type of sound mix to perform a check for. Accepts values from tes3.soundMix namespace. Returns : volume (number)","title":"tes3audioController"},{"location":"types/tes3audioController/#tes3audiocontroller","text":"A controller for audio. It holds data on the status of the current and next music tracks, volume settings and other related facilities. All the volumes are expressed in range [0, 1].","title":"tes3audioController"},{"location":"types/tes3audioController/#properties","text":"","title":"Properties"},{"location":"types/tes3audioController/#currentmusicfilepath","text":"File path of the currently playing music track. The path can not be longer than 260 characters. Returns : result (string)","title":"currentMusicFilePath"},{"location":"types/tes3audioController/#disableaudio","text":"A flag which controls whether the audio is disabled or not. Returns : result (boolean)","title":"disableAudio"},{"location":"types/tes3audioController/#listenerposition","text":"The sound listener position. Returns : result ( tes3vector3 )","title":"listenerPosition"},{"location":"types/tes3audioController/#musicduration","text":"Read-only . The duration of the currently playing music track. Returns : result (number)","title":"musicDuration"},{"location":"types/tes3audioController/#musicfadebegintimestamp","text":"The timestamp at which currently playing music track started fading in. So, it's a timestamp at which currently playing music track started. Returns : result (number)","title":"musicFadeBeginTimestamp"},{"location":"types/tes3audioController/#musicnexttrackstarttimestamp","text":"Returns : result (number)","title":"musicNextTrackStartTimestamp"},{"location":"types/tes3audioController/#musicnexttrackvolume","text":"The volume of the next track. Returns : result (number)","title":"musicNextTrackVolume"},{"location":"types/tes3audioController/#musicposition","text":"Current play time for currently playing music track. Returns : result (number)","title":"musicPosition"},{"location":"types/tes3audioController/#nextmusicfilepath","text":"File path of the music track which is to be played next. The path can not be longer than 260 characters. Returns : result (string)","title":"nextMusicFilePath"},{"location":"types/tes3audioController/#pitchaxis","text":"Approximated pitch axis in radians. Returns : result (number)","title":"pitchAxis"},{"location":"types/tes3audioController/#volumeeffects","text":"Volume of the effects. Corresponds to the effects volume slider in Audio settings. Returns : result (number)","title":"volumeEffects"},{"location":"types/tes3audioController/#volumefootsteps","text":"Volume of the footsteps. Corresponds to the footsteps volume slider in Audio settings. Returns : result (number)","title":"volumeFootsteps"},{"location":"types/tes3audioController/#volumemaster","text":"Master volume. Corresponds to the master volume slider in Audio settings. Returns : result (number)","title":"volumeMaster"},{"location":"types/tes3audioController/#volumemusic","text":"Volume of the music. Corresponds to the music volume slider in Audio settings. Returns : result (number)","title":"volumeMusic"},{"location":"types/tes3audioController/#volumevoice","text":"Volume of the voices. Corresponds to the voice volume slider in Audio settings. Returns : result (number)","title":"volumeVoice"},{"location":"types/tes3audioController/#yawaxis","text":"Approximated yaw axis in radians. Returns : result (number)","title":"yawAxis"},{"location":"types/tes3audioController/#methods","text":"","title":"Methods"},{"location":"types/tes3audioController/#changemusictrack","text":"Changes currently playing music track according to provided parameters. myObject : changeMusicTrack ({ filename = ..., crossfade = ..., volume = ... }) Parameters : params (table) filename (string): File name of the new music track. crossfade (number): Default : 1000 . Duration of the crossfading between music tracks. Measured in miliseconds. volume (number): Default : 1 . Allows changing the volume of the music track.","title":"changeMusicTrack"},{"location":"types/tes3audioController/#getmixvolume","text":"Final volume of a provided type of audio, after master volume and its own volume adjustments. Music volume is an exception since it isn't affected by master volume. local volume = myObject : getMixVolume ( mix ) Parameters : mix (number): The type of sound mix to perform a check for. Accepts values from tes3.soundMix namespace. Returns : volume (number)","title":"getMixVolume"},{"location":"types/tes3baseObject/","text":"tes3baseObject \u2693\ufe0e Almost anything that can be represented in the Construction Set is based on this structure. Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"tes3baseObject"},{"location":"types/tes3baseObject/#tes3baseobject","text":"Almost anything that can be represented in the Construction Set is based on this structure.","title":"tes3baseObject"},{"location":"types/tes3baseObject/#properties","text":"","title":"Properties"},{"location":"types/tes3baseObject/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3baseObject/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3baseObject/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3baseObject/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3baseObject/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3baseObject/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3baseObject/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3baseObject/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3baseObject/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3baseObject/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3baseObject/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3baseObject/#methods","text":"","title":"Methods"},{"location":"types/tes3baseObject/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3birthsign/","text":"tes3birthsign \u2693\ufe0e An object representing a birthsign. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) description \u2693\ufe0e Read-only . Loads from disk and returns the description of the birthsign. Returns : result (string) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) spells \u2693\ufe0e Read-only . A list of spells granted by the birthsign. Returns : result ( tes3spellList ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) texturePath \u2693\ufe0e Path to the related image representing the birthsign. Returns : result (string) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"Tes3birthsign"},{"location":"types/tes3birthsign/#tes3birthsign","text":"An object representing a birthsign. This type inherits the following: tes3baseObject","title":"tes3birthsign"},{"location":"types/tes3birthsign/#properties","text":"","title":"Properties"},{"location":"types/tes3birthsign/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3birthsign/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3birthsign/#description","text":"Read-only . Loads from disk and returns the description of the birthsign. Returns : result (string)","title":"description"},{"location":"types/tes3birthsign/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3birthsign/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3birthsign/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3birthsign/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3birthsign/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3birthsign/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3birthsign/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3birthsign/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3birthsign/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3birthsign/#spells","text":"Read-only . A list of spells granted by the birthsign. Returns : result ( tes3spellList )","title":"spells"},{"location":"types/tes3birthsign/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3birthsign/#texturepath","text":"Path to the related image representing the birthsign. Returns : result (string)","title":"texturePath"},{"location":"types/tes3birthsign/#methods","text":"","title":"Methods"},{"location":"types/tes3birthsign/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3bodyPart/","text":"tes3bodyPart \u2693\ufe0e A body part game object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) female \u2693\ufe0e A flag that marks this body part as used for female actors. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) part \u2693\ufe0e The part of the body occupied. Maps to values in tes3.partIndex namespace. Returns : result (number) partType \u2693\ufe0e The layer the body part occupies. Maps to values in tes3.activeBodyPartLayer namespace. Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) playable \u2693\ufe0e A flag that marks this body part as selectable during character generation. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) raceName \u2693\ufe0e Read-only . The name of the race associated with this body part. Returns : result (string) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The NiNode-derived object for the object's loaded mesh. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) vampiric \u2693\ufe0e A flag that marks this body part as used for vampires. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"tes3bodyPart"},{"location":"types/tes3bodyPart/#tes3bodypart","text":"A body part game object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject","title":"tes3bodyPart"},{"location":"types/tes3bodyPart/#properties","text":"","title":"Properties"},{"location":"types/tes3bodyPart/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3bodyPart/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3bodyPart/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3bodyPart/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3bodyPart/#female","text":"A flag that marks this body part as used for female actors. Returns : result (boolean)","title":"female"},{"location":"types/tes3bodyPart/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3bodyPart/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3bodyPart/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3bodyPart/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3bodyPart/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3bodyPart/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3bodyPart/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3bodyPart/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3bodyPart/#part","text":"The part of the body occupied. Maps to values in tes3.partIndex namespace. Returns : result (number)","title":"part"},{"location":"types/tes3bodyPart/#parttype","text":"The layer the body part occupies. Maps to values in tes3.activeBodyPartLayer namespace. Returns : result (number)","title":"partType"},{"location":"types/tes3bodyPart/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3bodyPart/#playable","text":"A flag that marks this body part as selectable during character generation. Returns : result (boolean)","title":"playable"},{"location":"types/tes3bodyPart/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3bodyPart/#racename","text":"Read-only . The name of the race associated with this body part. Returns : result (string)","title":"raceName"},{"location":"types/tes3bodyPart/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3bodyPart/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3bodyPart/#scenenode","text":"The NiNode-derived object for the object's loaded mesh. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3bodyPart/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3bodyPart/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3bodyPart/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3bodyPart/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3bodyPart/#vampiric","text":"A flag that marks this body part as used for vampires. Returns : result (boolean)","title":"vampiric"},{"location":"types/tes3bodyPart/#methods","text":"","title":"Methods"},{"location":"types/tes3bodyPart/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3bodyPartManager/","text":"tes3bodyPartManager \u2693\ufe0e A game object which holds information about body parts. Properties \u2693\ufe0e activeBodyParts \u2693\ufe0e Read-only . The access to the reference's tes3bodyPartManagerActiveBodyPart objects. It's a 2-dimensional table, with first dimension index values from tes3.activeBodyPartLayer namespace, while its second dimension indexes are values from tes3.activeBodyPart namespace. Returns : result (table<integer, table<integer, tes3bodyPartManagerActiveBodyPart >>) animationPhase \u2693\ufe0e Read-only . Returns : result (number) attachNodes \u2693\ufe0e Read-only . The access to the reference's tes3bodyPartManagerAttachNode objects. Indexes of that table are values from tes3.bodyPartAttachment namespace. Returns : result ( tes3bodyPartManagerAttachNode []) reference \u2693\ufe0e Read-only . The access to the reference this body part manager operates for. Returns : result ( tes3reference ) Methods \u2693\ufe0e getActiveBodyPart \u2693\ufe0e The method fetches active body part of a actor at a given layer and position. local result = myObject : getActiveBodyPart ( layer , index ) Parameters : layer (number): A value from tes3.activeBodyPartLayer namespace. index (number): A value from tes3.activeBodyPart namespace. Returns : result ( tes3bodyPartManagerActiveBodyPart ) getActiveBodyPartForItem \u2693\ufe0e The method fetches active body part of a actor for the given item. local result = myObject : getActiveBodyPartForItem ( item ) Parameters : item ( tes3item ): The item to fetch the active body part for. Returns : result ( tes3bodyPartManagerActiveBodyPart ) getActiveBodyPartNode \u2693\ufe0e The method fetches the NiNode-derived object for the loaded mesh of an active body part at a given layer and position. local result = myObject : getActiveBodyPartNode ( layer , index ) Parameters : layer (number): A value from tes3.activeBodyPartLayer namespace. index (number): A value from tes3.activeBodyPart namespace. Returns : result ( niNode ) removeEquippedLayers \u2693\ufe0e The method removes all currently equipped layers from the actor. myObject : removeEquippedLayers () setActivePartData \u2693\ufe0e The method sets a niNode derived object as active body part at a given layer and position. myObject : setActivePartData ( layer , index , overwriteData , node ) Parameters : layer (number): A value from tes3.activeBodyPartLayer namespace. index (number): A value from tes3.activeBodyPart namespace. overwriteData (boolean): Default : true . A flag which controls whether the current data should be overwritten. node ( niNode ): Default : nil . setBodyPartByIdForObject \u2693\ufe0e The method sets a new body part for a given object. myObject : setBodyPartByIdForObject ( object , index , bodyPartId , isFirstPerson ) Parameters : object ( tes3physicalObject ): An object whose body part to set. index (number): A value from tes3.activeBodyPart namespace. bodyPartId (string): The unique ID of the tes3bodyPart object to set as a new body part for given object. isFirstPerson (boolean): Default : false . A flag which controls whether the body part is used in first person. setBodyPartForObject \u2693\ufe0e The method sets a new body part for a given object. Triggers bodyPart event. myObject : setBodyPartForObject ( object , index , bodyPart , isFirstPerson ) Parameters : object ( tes3physicalObject ): An object whose body part to set. index (number): A value from tes3.activeBodyPart namespace. bodyPart ( tes3bodyPart ): The tes3bodyPart object to set as a new body part for given object. isFirstPerson (boolean): Default : false . A flag which controls whether the body part is used in first person. updateForReference \u2693\ufe0e The method updates all body parts for a given reference. myObject : updateForReference ( reference ) Parameters : reference ( tes3reference ): The reference whose body parts to update.","title":"tes3bodyPartManager"},{"location":"types/tes3bodyPartManager/#tes3bodypartmanager","text":"A game object which holds information about body parts.","title":"tes3bodyPartManager"},{"location":"types/tes3bodyPartManager/#properties","text":"","title":"Properties"},{"location":"types/tes3bodyPartManager/#activebodyparts","text":"Read-only . The access to the reference's tes3bodyPartManagerActiveBodyPart objects. It's a 2-dimensional table, with first dimension index values from tes3.activeBodyPartLayer namespace, while its second dimension indexes are values from tes3.activeBodyPart namespace. Returns : result (table<integer, table<integer, tes3bodyPartManagerActiveBodyPart >>)","title":"activeBodyParts"},{"location":"types/tes3bodyPartManager/#animationphase","text":"Read-only . Returns : result (number)","title":"animationPhase"},{"location":"types/tes3bodyPartManager/#attachnodes","text":"Read-only . The access to the reference's tes3bodyPartManagerAttachNode objects. Indexes of that table are values from tes3.bodyPartAttachment namespace. Returns : result ( tes3bodyPartManagerAttachNode [])","title":"attachNodes"},{"location":"types/tes3bodyPartManager/#reference","text":"Read-only . The access to the reference this body part manager operates for. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3bodyPartManager/#methods","text":"","title":"Methods"},{"location":"types/tes3bodyPartManager/#getactivebodypart","text":"The method fetches active body part of a actor at a given layer and position. local result = myObject : getActiveBodyPart ( layer , index ) Parameters : layer (number): A value from tes3.activeBodyPartLayer namespace. index (number): A value from tes3.activeBodyPart namespace. Returns : result ( tes3bodyPartManagerActiveBodyPart )","title":"getActiveBodyPart"},{"location":"types/tes3bodyPartManager/#getactivebodypartforitem","text":"The method fetches active body part of a actor for the given item. local result = myObject : getActiveBodyPartForItem ( item ) Parameters : item ( tes3item ): The item to fetch the active body part for. Returns : result ( tes3bodyPartManagerActiveBodyPart )","title":"getActiveBodyPartForItem"},{"location":"types/tes3bodyPartManager/#getactivebodypartnode","text":"The method fetches the NiNode-derived object for the loaded mesh of an active body part at a given layer and position. local result = myObject : getActiveBodyPartNode ( layer , index ) Parameters : layer (number): A value from tes3.activeBodyPartLayer namespace. index (number): A value from tes3.activeBodyPart namespace. Returns : result ( niNode )","title":"getActiveBodyPartNode"},{"location":"types/tes3bodyPartManager/#removeequippedlayers","text":"The method removes all currently equipped layers from the actor. myObject : removeEquippedLayers ()","title":"removeEquippedLayers"},{"location":"types/tes3bodyPartManager/#setactivepartdata","text":"The method sets a niNode derived object as active body part at a given layer and position. myObject : setActivePartData ( layer , index , overwriteData , node ) Parameters : layer (number): A value from tes3.activeBodyPartLayer namespace. index (number): A value from tes3.activeBodyPart namespace. overwriteData (boolean): Default : true . A flag which controls whether the current data should be overwritten. node ( niNode ): Default : nil .","title":"setActivePartData"},{"location":"types/tes3bodyPartManager/#setbodypartbyidforobject","text":"The method sets a new body part for a given object. myObject : setBodyPartByIdForObject ( object , index , bodyPartId , isFirstPerson ) Parameters : object ( tes3physicalObject ): An object whose body part to set. index (number): A value from tes3.activeBodyPart namespace. bodyPartId (string): The unique ID of the tes3bodyPart object to set as a new body part for given object. isFirstPerson (boolean): Default : false . A flag which controls whether the body part is used in first person.","title":"setBodyPartByIdForObject"},{"location":"types/tes3bodyPartManager/#setbodypartforobject","text":"The method sets a new body part for a given object. Triggers bodyPart event. myObject : setBodyPartForObject ( object , index , bodyPart , isFirstPerson ) Parameters : object ( tes3physicalObject ): An object whose body part to set. index (number): A value from tes3.activeBodyPart namespace. bodyPart ( tes3bodyPart ): The tes3bodyPart object to set as a new body part for given object. isFirstPerson (boolean): Default : false . A flag which controls whether the body part is used in first person.","title":"setBodyPartForObject"},{"location":"types/tes3bodyPartManager/#updateforreference","text":"The method updates all body parts for a given reference. myObject : updateForReference ( reference ) Parameters : reference ( tes3reference ): The reference whose body parts to update.","title":"updateForReference"},{"location":"types/tes3bodyPartManagerActiveBodyPart/","text":"tes3bodyPartManagerActiveBodyPart \u2693\ufe0e A game object which holds information about an active body part, it's associated item and scene node. Properties \u2693\ufe0e bodyPart \u2693\ufe0e Access to the body part object. Returns : result ( tes3bodyPart ) flags \u2693\ufe0e The raw flags. Returns : result (number) item \u2693\ufe0e The raw item object this active body part pertains to. Returns : result ( tes3item ) node \u2693\ufe0e The NiNode-derived object for the object's loaded mesh. Returns : result ( niNode )","title":"tes3bodyPartManagerActiveBodyPart"},{"location":"types/tes3bodyPartManagerActiveBodyPart/#tes3bodypartmanageractivebodypart","text":"A game object which holds information about an active body part, it's associated item and scene node.","title":"tes3bodyPartManagerActiveBodyPart"},{"location":"types/tes3bodyPartManagerActiveBodyPart/#properties","text":"","title":"Properties"},{"location":"types/tes3bodyPartManagerActiveBodyPart/#bodypart","text":"Access to the body part object. Returns : result ( tes3bodyPart )","title":"bodyPart"},{"location":"types/tes3bodyPartManagerActiveBodyPart/#flags","text":"The raw flags. Returns : result (number)","title":"flags"},{"location":"types/tes3bodyPartManagerActiveBodyPart/#item","text":"The raw item object this active body part pertains to. Returns : result ( tes3item )","title":"item"},{"location":"types/tes3bodyPartManagerActiveBodyPart/#node","text":"The NiNode-derived object for the object's loaded mesh. Returns : result ( niNode )","title":"node"},{"location":"types/tes3bodyPartManagerAttachNode/","text":"tes3bodyPartManagerAttachNode \u2693\ufe0e A game object which holds information about equipment attachments to the actor's skeleton. Properties \u2693\ufe0e flags \u2693\ufe0e The raw flags. Returns : result (number) node \u2693\ufe0e The NiNode-derived object for the object's loaded mesh. Returns : result ( niNode ) rotation \u2693\ufe0e The rotation for this Attachment node. Returns : result ( tes3matrix33 ) translation \u2693\ufe0e The translation for this Attachment node. Returns : result ( tes3vector3 )","title":"tes3bodyPartManagerAttachNode"},{"location":"types/tes3bodyPartManagerAttachNode/#tes3bodypartmanagerattachnode","text":"A game object which holds information about equipment attachments to the actor's skeleton.","title":"tes3bodyPartManagerAttachNode"},{"location":"types/tes3bodyPartManagerAttachNode/#properties","text":"","title":"Properties"},{"location":"types/tes3bodyPartManagerAttachNode/#flags","text":"The raw flags. Returns : result (number)","title":"flags"},{"location":"types/tes3bodyPartManagerAttachNode/#node","text":"The NiNode-derived object for the object's loaded mesh. Returns : result ( niNode )","title":"node"},{"location":"types/tes3bodyPartManagerAttachNode/#rotation","text":"The rotation for this Attachment node. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/tes3bodyPartManagerAttachNode/#translation","text":"The translation for this Attachment node. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/tes3book/","text":"tes3book \u2693\ufe0e A book game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) enchantCapacity \u2693\ufe0e The object's enchantment capacity. Returns : result (number) enchantment \u2693\ufe0e The enchantment used by the object. Returns : result ( tes3enchantment ) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) skill \u2693\ufe0e The skill learned from the book (from tes3.skill table), or -1 if the book doesn't have one, or has already been read. Returns : result (integer) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) text \u2693\ufe0e Read-only . Loads and displays the text of the book. Returns : result (string) type \u2693\ufe0e The book type. Maps to values in tes3.bookType namespace. Returns : result (number) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"Tes3book"},{"location":"types/tes3book/#tes3book","text":"A book game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3book"},{"location":"types/tes3book/#properties","text":"","title":"Properties"},{"location":"types/tes3book/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3book/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3book/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3book/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3book/#enchantcapacity","text":"The object's enchantment capacity. Returns : result (number)","title":"enchantCapacity"},{"location":"types/tes3book/#enchantment","text":"The enchantment used by the object. Returns : result ( tes3enchantment )","title":"enchantment"},{"location":"types/tes3book/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3book/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3book/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3book/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3book/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3book/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3book/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3book/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3book/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3book/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3book/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3book/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3book/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3book/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3book/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3book/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3book/#skill","text":"The skill learned from the book (from tes3.skill table), or -1 if the book doesn't have one, or has already been read. Returns : result (integer)","title":"skill"},{"location":"types/tes3book/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3book/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3book/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3book/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3book/#text","text":"Read-only . Loads and displays the text of the book. Returns : result (string)","title":"text"},{"location":"types/tes3book/#type","text":"The book type. Maps to values in tes3.bookType namespace. Returns : result (number)","title":"type"},{"location":"types/tes3book/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3book/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3book/#methods","text":"","title":"Methods"},{"location":"types/tes3book/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3boundingBox/","text":"tes3boundingBox \u2693\ufe0e A pair of vectors marking a bounding box. Properties \u2693\ufe0e max \u2693\ufe0e The maximum bound of the box. Returns : result ( tes3vector3 ) min \u2693\ufe0e The minimum bound of the box. Returns : result ( tes3vector3 ) Methods \u2693\ufe0e copy \u2693\ufe0e Creates a copy of the bounding box. local result = myObject : copy () Returns : result ( tes3boundingBox ) vertices \u2693\ufe0e Returns a table containing the 8 vertices comprising this bounding box. local result = myObject : vertices () Returns : result ( tes3vector3 [])","title":"tes3boundingBox"},{"location":"types/tes3boundingBox/#tes3boundingbox","text":"A pair of vectors marking a bounding box.","title":"tes3boundingBox"},{"location":"types/tes3boundingBox/#properties","text":"","title":"Properties"},{"location":"types/tes3boundingBox/#max","text":"The maximum bound of the box. Returns : result ( tes3vector3 )","title":"max"},{"location":"types/tes3boundingBox/#min","text":"The minimum bound of the box. Returns : result ( tes3vector3 )","title":"min"},{"location":"types/tes3boundingBox/#methods","text":"","title":"Methods"},{"location":"types/tes3boundingBox/#copy","text":"Creates a copy of the bounding box. local result = myObject : copy () Returns : result ( tes3boundingBox )","title":"copy"},{"location":"types/tes3boundingBox/#vertices","text":"Returns a table containing the 8 vertices comprising this bounding box. local result = myObject : vertices () Returns : result ( tes3vector3 [])","title":"vertices"},{"location":"types/tes3bsaLoader/","text":"tes3bsaLoader \u2693\ufe0e A class responsible for handling the loading of BSA files. Properties \u2693\ufe0e archives \u2693\ufe0e Read-only . An array-style table of archive files. Returns : result ( tes3archive []) firstArchive \u2693\ufe0e Read-only . The start of the list of loaded archives. This is the last loaded archive, meaning first in priority. Returns : result ( tes3archive ) Methods \u2693\ufe0e findFile \u2693\ufe0e Searches for a file in the archive list, and returns the archive and index that it can be found in. local archive , index = myObject : findFile ( path ) Parameters : path (string): The path to the file held in the archive. Returns : archive ( tes3archive , nil): The found archive, or nil if no result was found. index (number, nil): The index in the archive that the path was found at, or nil if no result was found.","title":"tes3bsaLoader"},{"location":"types/tes3bsaLoader/#tes3bsaloader","text":"A class responsible for handling the loading of BSA files.","title":"tes3bsaLoader"},{"location":"types/tes3bsaLoader/#properties","text":"","title":"Properties"},{"location":"types/tes3bsaLoader/#archives","text":"Read-only . An array-style table of archive files. Returns : result ( tes3archive [])","title":"archives"},{"location":"types/tes3bsaLoader/#firstarchive","text":"Read-only . The start of the list of loaded archives. This is the last loaded archive, meaning first in priority. Returns : result ( tes3archive )","title":"firstArchive"},{"location":"types/tes3bsaLoader/#methods","text":"","title":"Methods"},{"location":"types/tes3bsaLoader/#findfile","text":"Searches for a file in the archive list, and returns the archive and index that it can be found in. local archive , index = myObject : findFile ( path ) Parameters : path (string): The path to the file held in the archive. Returns : archive ( tes3archive , nil): The found archive, or nil if no result was found. index (number, nil): The index in the archive that the path was found at, or nil if no result was found.","title":"findFile"},{"location":"types/tes3cell/","text":"tes3cell \u2693\ufe0e An exterior or interior game area. This type inherits the following: tes3baseObject Properties \u2693\ufe0e activators \u2693\ufe0e Read-only . One of the three reference collections for a cell. Returns : result ( tes3referenceList ) actors \u2693\ufe0e Read-only . One of the three reference collections for a cell. Returns : result ( tes3referenceList ) ambientColor \u2693\ufe0e The cell's ambient color. Only available on interior cells. Returns : result ( niPackedColor ) behavesAsExterior \u2693\ufe0e If true, the cell behaves as an exterior instead of an interior for certain properties. Only available on interior cells. Returns : result (boolean) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) cellFlags \u2693\ufe0e A numeric representation of the packed bit flags for the cell, typically accessed from other properties. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) displayName \u2693\ufe0e The name of the cell as displayed on the in-game UI. For exterior cells without an assigned name, this is the region name. Returns : result (string) editorName \u2693\ufe0e The name of the cell as displayed in the Construction Set. For exterior cells, this includes the cell coordinates. Returns : result (string) fogColor \u2693\ufe0e The cell's fog color. Only available on interior cells. Returns : result ( niPackedColor ) fogDensity \u2693\ufe0e The cell's fog density. Only available on interior cells. Returns : result (number) gridX \u2693\ufe0e The cell's X grid coordinate. Only available on exterior cells. Returns : result (number) gridY \u2693\ufe0e The cell's Y grid coordinate. Only available on exterior cells. Returns : result (number) hasMapMarker \u2693\ufe0e Read-only . If true, the cell will be marked on the player's map. This does not take into account if the player has been to that cell. Returns : result (boolean) hasWater \u2693\ufe0e If true, the cell has water. Only applies to interior cells. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isInterior \u2693\ufe0e If true, the cell is an interior. Returns : result (boolean) isOrBehavesAsExterior \u2693\ufe0e Read-only . true if the cell is not an interior or if it behaves as an exterior. Returns : result (boolean) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The name and id of the cell. See also displayName and editorName . Returns : result (string) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) pickObjectsRoot \u2693\ufe0e The scenegraph node containing player-interactable objects from this cell. Returns : result ( niNode ) region \u2693\ufe0e The region associated with the cell. Only available on exterior cells, or interior cells that behave as exterior cells. Returns : result ( tes3region ) restingIsIllegal \u2693\ufe0e If true, the player may not rest in the cell. Returns : result (boolean) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) staticObjectsRoot \u2693\ufe0e The scenegraph node containing static non-player-interactable objects from this cell. Returns : result ( niNode ) statics \u2693\ufe0e Read-only . One of the three reference collections for a cell. Returns : result ( tes3referenceList ) sunColor \u2693\ufe0e The cell's sun color. Only available on interior cells. Returns : result ( niPackedColor ) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) waterLevel \u2693\ufe0e The water level in the cell. Only available on interior cells. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) isPointInCell \u2693\ufe0e Determines if a given X/Y coordinate falls in the given cell. This will always be true for interior cells. local inCell = myObject : isPointInCell ( x , y ) Parameters : x (number): The X position to test. y (number): The Y position to test. Returns : inCell (boolean): true, if the point is found in the cell. iterateReferences \u2693\ufe0e Used in a for loop, iterates over objects in the cell. myObject : iterateReferences ( filter ) Parameters : filter (integer, integer[]): Optional . The TES3 object type to filter results by. Those are stored in tes3.objectType namespace.","title":"Tes3cell"},{"location":"types/tes3cell/#tes3cell","text":"An exterior or interior game area. This type inherits the following: tes3baseObject","title":"tes3cell"},{"location":"types/tes3cell/#properties","text":"","title":"Properties"},{"location":"types/tes3cell/#activators","text":"Read-only . One of the three reference collections for a cell. Returns : result ( tes3referenceList )","title":"activators"},{"location":"types/tes3cell/#actors","text":"Read-only . One of the three reference collections for a cell. Returns : result ( tes3referenceList )","title":"actors"},{"location":"types/tes3cell/#ambientcolor","text":"The cell's ambient color. Only available on interior cells. Returns : result ( niPackedColor )","title":"ambientColor"},{"location":"types/tes3cell/#behavesasexterior","text":"If true, the cell behaves as an exterior instead of an interior for certain properties. Only available on interior cells. Returns : result (boolean)","title":"behavesAsExterior"},{"location":"types/tes3cell/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3cell/#cellflags","text":"A numeric representation of the packed bit flags for the cell, typically accessed from other properties. Returns : result (number)","title":"cellFlags"},{"location":"types/tes3cell/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3cell/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3cell/#displayname","text":"The name of the cell as displayed on the in-game UI. For exterior cells without an assigned name, this is the region name. Returns : result (string)","title":"displayName"},{"location":"types/tes3cell/#editorname","text":"The name of the cell as displayed in the Construction Set. For exterior cells, this includes the cell coordinates. Returns : result (string)","title":"editorName"},{"location":"types/tes3cell/#fogcolor","text":"The cell's fog color. Only available on interior cells. Returns : result ( niPackedColor )","title":"fogColor"},{"location":"types/tes3cell/#fogdensity","text":"The cell's fog density. Only available on interior cells. Returns : result (number)","title":"fogDensity"},{"location":"types/tes3cell/#gridx","text":"The cell's X grid coordinate. Only available on exterior cells. Returns : result (number)","title":"gridX"},{"location":"types/tes3cell/#gridy","text":"The cell's Y grid coordinate. Only available on exterior cells. Returns : result (number)","title":"gridY"},{"location":"types/tes3cell/#hasmapmarker","text":"Read-only . If true, the cell will be marked on the player's map. This does not take into account if the player has been to that cell. Returns : result (boolean)","title":"hasMapMarker"},{"location":"types/tes3cell/#haswater","text":"If true, the cell has water. Only applies to interior cells. Returns : result (boolean)","title":"hasWater"},{"location":"types/tes3cell/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3cell/#isinterior","text":"If true, the cell is an interior. Returns : result (boolean)","title":"isInterior"},{"location":"types/tes3cell/#isorbehavesasexterior","text":"Read-only . true if the cell is not an interior or if it behaves as an exterior. Returns : result (boolean)","title":"isOrBehavesAsExterior"},{"location":"types/tes3cell/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3cell/#name","text":"The name and id of the cell. See also displayName and editorName . Returns : result (string)","title":"name"},{"location":"types/tes3cell/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3cell/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3cell/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3cell/#pickobjectsroot","text":"The scenegraph node containing player-interactable objects from this cell. Returns : result ( niNode )","title":"pickObjectsRoot"},{"location":"types/tes3cell/#region","text":"The region associated with the cell. Only available on exterior cells, or interior cells that behave as exterior cells. Returns : result ( tes3region )","title":"region"},{"location":"types/tes3cell/#restingisillegal","text":"If true, the player may not rest in the cell. Returns : result (boolean)","title":"restingIsIllegal"},{"location":"types/tes3cell/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3cell/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3cell/#staticobjectsroot","text":"The scenegraph node containing static non-player-interactable objects from this cell. Returns : result ( niNode )","title":"staticObjectsRoot"},{"location":"types/tes3cell/#statics","text":"Read-only . One of the three reference collections for a cell. Returns : result ( tes3referenceList )","title":"statics"},{"location":"types/tes3cell/#suncolor","text":"The cell's sun color. Only available on interior cells. Returns : result ( niPackedColor )","title":"sunColor"},{"location":"types/tes3cell/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3cell/#waterlevel","text":"The water level in the cell. Only available on interior cells. Returns : result (number)","title":"waterLevel"},{"location":"types/tes3cell/#methods","text":"","title":"Methods"},{"location":"types/tes3cell/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3cell/#ispointincell","text":"Determines if a given X/Y coordinate falls in the given cell. This will always be true for interior cells. local inCell = myObject : isPointInCell ( x , y ) Parameters : x (number): The X position to test. y (number): The Y position to test. Returns : inCell (boolean): true, if the point is found in the cell.","title":"isPointInCell"},{"location":"types/tes3cell/#iteratereferences","text":"Used in a for loop, iterates over objects in the cell. myObject : iterateReferences ( filter ) Parameters : filter (integer, integer[]): Optional . The TES3 object type to filter results by. Those are stored in tes3.objectType namespace.","title":"iterateReferences"},{"location":"types/tes3class/","text":"tes3class \u2693\ufe0e A core object representing a character class. This type inherits the following: tes3baseObject Properties \u2693\ufe0e attributes \u2693\ufe0e Read-only . An array-style table of the two attribute IDs associated with the class. Maps to values in tes3.attribute namespace. Returns : result (number[]) bartersAlchemy \u2693\ufe0e If true, the class will barter alchemy items. Returns : result (boolean) bartersApparatus \u2693\ufe0e If true, the class will barter apparatus items. Returns : result (boolean) bartersArmor \u2693\ufe0e If true, the class will barter armor items. Returns : result (boolean) bartersBooks \u2693\ufe0e If true, the class will barter book items. Returns : result (boolean) bartersClothing \u2693\ufe0e If true, the class will barter clothing items. Returns : result (boolean) bartersEnchantedItems \u2693\ufe0e If true, the class will barter enchanted items. Returns : result (boolean) bartersIngredients \u2693\ufe0e If true, the class will barter ingredient items. Returns : result (boolean) bartersLights \u2693\ufe0e If true, the class will barter light items. Returns : result (boolean) bartersLockpicks \u2693\ufe0e If true, the class will barter lockpick items. Returns : result (boolean) bartersMiscItems \u2693\ufe0e If true, the class will barter misc items. Returns : result (boolean) bartersProbes \u2693\ufe0e If true, the class will barter probe items. Returns : result (boolean) bartersRepairTools \u2693\ufe0e If true, the class will barter repair items. Returns : result (boolean) bartersWeapons \u2693\ufe0e If true, the class will barter weapon items. Returns : result (boolean) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) description \u2693\ufe0e Loads from disk and returns the description of the class. Returns : result (string) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) image \u2693\ufe0e The path used for the class selection/level up menus, where appropriate. Custom classes may not have their images shown in the level up menu. Returns : result (string) majorSkills \u2693\ufe0e Read-only . An array-style table of the 5 skills IDs associated with the class' major skills. Maps to values in tes3.skill namespace. Returns : result (number[]) minorSkills \u2693\ufe0e Read-only . An array-style table of the 5 skills IDs associated with the class' minor skills. Maps to values in tes3.skill namespace. Returns : result (number[]) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) offersEnchanting \u2693\ufe0e If true, the class will offer repair services. Returns : result (boolean) offersRepairs \u2693\ufe0e If true, the class will offer enchanting services. Returns : result (boolean) offersSpellmaking \u2693\ufe0e If true, the class will offer spellmaking services. Returns : result (boolean) offersSpells \u2693\ufe0e If true, the class will offer spell selling services. Returns : result (boolean) offersTraining \u2693\ufe0e If true, the class will offer training services. Returns : result (boolean) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) playable \u2693\ufe0e If true, the class is selectable at character generation. Returns : result (boolean) services \u2693\ufe0e The services offered by the class. This is a bit field, and its values should typically be accessed through values such as bartersAlchemy . Returns : result (number) skills \u2693\ufe0e Read-only . An array-style table of the 10 skills IDs associated with the class. For major or minor skills specifically, use the majorSkills and minorSkills properties. Maps to values in tes3.skill namespace. Returns : result (number[]) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) specialization \u2693\ufe0e The specialization for the class. Maps to values in the tes3.specialization table. Returns : result (number) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"Tes3class"},{"location":"types/tes3class/#tes3class","text":"A core object representing a character class. This type inherits the following: tes3baseObject","title":"tes3class"},{"location":"types/tes3class/#properties","text":"","title":"Properties"},{"location":"types/tes3class/#attributes","text":"Read-only . An array-style table of the two attribute IDs associated with the class. Maps to values in tes3.attribute namespace. Returns : result (number[])","title":"attributes"},{"location":"types/tes3class/#bartersalchemy","text":"If true, the class will barter alchemy items. Returns : result (boolean)","title":"bartersAlchemy"},{"location":"types/tes3class/#bartersapparatus","text":"If true, the class will barter apparatus items. Returns : result (boolean)","title":"bartersApparatus"},{"location":"types/tes3class/#bartersarmor","text":"If true, the class will barter armor items. Returns : result (boolean)","title":"bartersArmor"},{"location":"types/tes3class/#bartersbooks","text":"If true, the class will barter book items. Returns : result (boolean)","title":"bartersBooks"},{"location":"types/tes3class/#bartersclothing","text":"If true, the class will barter clothing items. Returns : result (boolean)","title":"bartersClothing"},{"location":"types/tes3class/#bartersenchanteditems","text":"If true, the class will barter enchanted items. Returns : result (boolean)","title":"bartersEnchantedItems"},{"location":"types/tes3class/#bartersingredients","text":"If true, the class will barter ingredient items. Returns : result (boolean)","title":"bartersIngredients"},{"location":"types/tes3class/#barterslights","text":"If true, the class will barter light items. Returns : result (boolean)","title":"bartersLights"},{"location":"types/tes3class/#barterslockpicks","text":"If true, the class will barter lockpick items. Returns : result (boolean)","title":"bartersLockpicks"},{"location":"types/tes3class/#bartersmiscitems","text":"If true, the class will barter misc items. Returns : result (boolean)","title":"bartersMiscItems"},{"location":"types/tes3class/#bartersprobes","text":"If true, the class will barter probe items. Returns : result (boolean)","title":"bartersProbes"},{"location":"types/tes3class/#bartersrepairtools","text":"If true, the class will barter repair items. Returns : result (boolean)","title":"bartersRepairTools"},{"location":"types/tes3class/#bartersweapons","text":"If true, the class will barter weapon items. Returns : result (boolean)","title":"bartersWeapons"},{"location":"types/tes3class/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3class/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3class/#description","text":"Loads from disk and returns the description of the class. Returns : result (string)","title":"description"},{"location":"types/tes3class/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3class/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3class/#image","text":"The path used for the class selection/level up menus, where appropriate. Custom classes may not have their images shown in the level up menu. Returns : result (string)","title":"image"},{"location":"types/tes3class/#majorskills","text":"Read-only . An array-style table of the 5 skills IDs associated with the class' major skills. Maps to values in tes3.skill namespace. Returns : result (number[])","title":"majorSkills"},{"location":"types/tes3class/#minorskills","text":"Read-only . An array-style table of the 5 skills IDs associated with the class' minor skills. Maps to values in tes3.skill namespace. Returns : result (number[])","title":"minorSkills"},{"location":"types/tes3class/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3class/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3class/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3class/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3class/#offersenchanting","text":"If true, the class will offer repair services. Returns : result (boolean)","title":"offersEnchanting"},{"location":"types/tes3class/#offersrepairs","text":"If true, the class will offer enchanting services. Returns : result (boolean)","title":"offersRepairs"},{"location":"types/tes3class/#offersspellmaking","text":"If true, the class will offer spellmaking services. Returns : result (boolean)","title":"offersSpellmaking"},{"location":"types/tes3class/#offersspells","text":"If true, the class will offer spell selling services. Returns : result (boolean)","title":"offersSpells"},{"location":"types/tes3class/#offerstraining","text":"If true, the class will offer training services. Returns : result (boolean)","title":"offersTraining"},{"location":"types/tes3class/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3class/#playable","text":"If true, the class is selectable at character generation. Returns : result (boolean)","title":"playable"},{"location":"types/tes3class/#services","text":"The services offered by the class. This is a bit field, and its values should typically be accessed through values such as bartersAlchemy . Returns : result (number)","title":"services"},{"location":"types/tes3class/#skills","text":"Read-only . An array-style table of the 10 skills IDs associated with the class. For major or minor skills specifically, use the majorSkills and minorSkills properties. Maps to values in tes3.skill namespace. Returns : result (number[])","title":"skills"},{"location":"types/tes3class/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3class/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3class/#specialization","text":"The specialization for the class. Maps to values in the tes3.specialization table. Returns : result (number)","title":"specialization"},{"location":"types/tes3class/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3class/#methods","text":"","title":"Methods"},{"location":"types/tes3class/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3clothing/","text":"tes3clothing \u2693\ufe0e A clothing game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) enchantCapacity \u2693\ufe0e The object's enchantment capacity. Returns : result (number) enchantment \u2693\ufe0e The enchantment used by the object. Returns : result ( tes3enchantment ) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLeftPart \u2693\ufe0e Determines if the armor is the left part of a pair. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) parts \u2693\ufe0e An array-style table of the tes3wearablePart data on the object. Returns : result ( tes3wearablePart []) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) slot \u2693\ufe0e The slot used by the clothing object. Maps to values in tes3.clothingSlot namespace. Returns : result (number) slotName \u2693\ufe0e The name of the slot used by the clothing object. Returns : result (string) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e The value of the object. For this object type, its maximum value is 65535. Larger numbers will overflow. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) createCopy \u2693\ufe0e Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3clothing )","title":"Tes3clothing"},{"location":"types/tes3clothing/#tes3clothing","text":"A clothing game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3clothing"},{"location":"types/tes3clothing/#properties","text":"","title":"Properties"},{"location":"types/tes3clothing/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3clothing/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3clothing/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3clothing/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3clothing/#enchantcapacity","text":"The object's enchantment capacity. Returns : result (number)","title":"enchantCapacity"},{"location":"types/tes3clothing/#enchantment","text":"The enchantment used by the object. Returns : result ( tes3enchantment )","title":"enchantment"},{"location":"types/tes3clothing/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3clothing/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3clothing/#isleftpart","text":"Determines if the armor is the left part of a pair. Returns : result (boolean)","title":"isLeftPart"},{"location":"types/tes3clothing/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3clothing/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3clothing/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3clothing/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3clothing/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3clothing/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3clothing/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3clothing/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3clothing/#parts","text":"An array-style table of the tes3wearablePart data on the object. Returns : result ( tes3wearablePart [])","title":"parts"},{"location":"types/tes3clothing/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3clothing/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3clothing/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3clothing/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3clothing/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3clothing/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3clothing/#slot","text":"The slot used by the clothing object. Maps to values in tes3.clothingSlot namespace. Returns : result (number)","title":"slot"},{"location":"types/tes3clothing/#slotname","text":"The name of the slot used by the clothing object. Returns : result (string)","title":"slotName"},{"location":"types/tes3clothing/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3clothing/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3clothing/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3clothing/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3clothing/#value","text":"The value of the object. For this object type, its maximum value is 65535. Larger numbers will overflow. Returns : result (number)","title":"value"},{"location":"types/tes3clothing/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3clothing/#methods","text":"","title":"Methods"},{"location":"types/tes3clothing/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3clothing/#createcopy","text":"Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3clothing )","title":"createCopy"},{"location":"types/tes3combatSession/","text":"tes3combatSession \u2693\ufe0e A structure that keeps track of combat session data. Properties \u2693\ufe0e alchemyPriority \u2693\ufe0e No description yet available. Returns : result (number) data \u2693\ufe0e A generic lua table that data can be written to, and synced to/from the save. All information stored must be valid for serialization to json. Returns : result (table) distance \u2693\ufe0e The combat distance. Returns : result (number) lastUseTimestamp \u2693\ufe0e No description yet available. Returns : result (number) mobile \u2693\ufe0e Read-only . Convenience access back to the associated actor. Returns : result ( tes3mobileActor ) potionUseFlag \u2693\ufe0e No description yet available. Returns : result (number) selectedAction \u2693\ufe0e The next action. From observed behavior, this roughly maps to: Value Behavior 0 Undecided 1 Use melee weapon 2 Use marksman weapon 3 Use hand to hand attacks 4 Use on-touch offensive spell 5 Use on-target offensive spell 6 Use summon spell 7 Flee 8 Cast on-self empowering spell (For example, Ancestor Guardian) 9 MaybeEquipUseItem? 10 Use enchanted item Returns : result (integer) selectedItem \u2693\ufe0e No description yet available. Returns : result ( tes3itemStack ) selectedShield \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3equipmentStack ) selectedSpell \u2693\ufe0e This field containg the spell the actor is currently casting. If not in casting state this field has nil value. Returns : result ( tes3spell ) selectedWeapon \u2693\ufe0e Read-only . The weapon the actor is using in this combat session. Returns : result ( tes3equipmentStack ) selectionPriority \u2693\ufe0e No description yet available. Returns : result (number) Methods \u2693\ufe0e changeEquipment \u2693\ufe0e This method equips an item to the mobile in this combat sesion. myObject : changeEquipment ( equipmentStack ) Parameters : equipmentStack ( tes3equipmentStack ): An item to equip. selectAlchemyWithEffect \u2693\ufe0e Selects the alchemy item with the greatest value, for a given effect ID and loads it into the selectedItem property. local result = myObject : selectAlchemyWithEffect ( id ) Parameters : id (integer) Returns : result (number)","title":"tes3combatSession"},{"location":"types/tes3combatSession/#tes3combatsession","text":"A structure that keeps track of combat session data.","title":"tes3combatSession"},{"location":"types/tes3combatSession/#properties","text":"","title":"Properties"},{"location":"types/tes3combatSession/#alchemypriority","text":"No description yet available. Returns : result (number)","title":"alchemyPriority"},{"location":"types/tes3combatSession/#data","text":"A generic lua table that data can be written to, and synced to/from the save. All information stored must be valid for serialization to json. Returns : result (table)","title":"data"},{"location":"types/tes3combatSession/#distance","text":"The combat distance. Returns : result (number)","title":"distance"},{"location":"types/tes3combatSession/#lastusetimestamp","text":"No description yet available. Returns : result (number)","title":"lastUseTimestamp"},{"location":"types/tes3combatSession/#mobile","text":"Read-only . Convenience access back to the associated actor. Returns : result ( tes3mobileActor )","title":"mobile"},{"location":"types/tes3combatSession/#potionuseflag","text":"No description yet available. Returns : result (number)","title":"potionUseFlag"},{"location":"types/tes3combatSession/#selectedaction","text":"The next action. From observed behavior, this roughly maps to: Value Behavior 0 Undecided 1 Use melee weapon 2 Use marksman weapon 3 Use hand to hand attacks 4 Use on-touch offensive spell 5 Use on-target offensive spell 6 Use summon spell 7 Flee 8 Cast on-self empowering spell (For example, Ancestor Guardian) 9 MaybeEquipUseItem? 10 Use enchanted item Returns : result (integer)","title":"selectedAction"},{"location":"types/tes3combatSession/#selecteditem","text":"No description yet available. Returns : result ( tes3itemStack )","title":"selectedItem"},{"location":"types/tes3combatSession/#selectedshield","text":"Read-only . No description yet available. Returns : result ( tes3equipmentStack )","title":"selectedShield"},{"location":"types/tes3combatSession/#selectedspell","text":"This field containg the spell the actor is currently casting. If not in casting state this field has nil value. Returns : result ( tes3spell )","title":"selectedSpell"},{"location":"types/tes3combatSession/#selectedweapon","text":"Read-only . The weapon the actor is using in this combat session. Returns : result ( tes3equipmentStack )","title":"selectedWeapon"},{"location":"types/tes3combatSession/#selectionpriority","text":"No description yet available. Returns : result (number)","title":"selectionPriority"},{"location":"types/tes3combatSession/#methods","text":"","title":"Methods"},{"location":"types/tes3combatSession/#changeequipment","text":"This method equips an item to the mobile in this combat sesion. myObject : changeEquipment ( equipmentStack ) Parameters : equipmentStack ( tes3equipmentStack ): An item to equip.","title":"changeEquipment"},{"location":"types/tes3combatSession/#selectalchemywitheffect","text":"Selects the alchemy item with the greatest value, for a given effect ID and loads it into the selectedItem property. local result = myObject : selectAlchemyWithEffect ( id ) Parameters : id (integer) Returns : result (number)","title":"selectAlchemyWithEffect"},{"location":"types/tes3container/","text":"tes3container \u2693\ufe0e A container object that has not been cloned. Typically represents the raw information edited in the construction set. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e actorFlags \u2693\ufe0e Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number) barterGold \u2693\ufe0e Friendly access to actor's barter gold amount. Returns : result (number) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) blood \u2693\ufe0e Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set. Returns : result (integer) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) capacity \u2693\ufe0e The amount of weight that the container can hold. Returns : result (number) cloneCount \u2693\ufe0e Read-only . The number of clones that exist of this actor. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) equipment \u2693\ufe0e Read-only . The items currently equipped to the actor. Returns : result ( tes3equipmentStack []) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) inventory \u2693\ufe0e Read-only . The items currently carried by the actor. Returns : result ( tes3inventory ) isInstance \u2693\ufe0e Always returns false. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) organic \u2693\ufe0e Determines if the container's organic flag is enabled. Returns : result (boolean) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) respawns \u2693\ufe0e Determines if the container's respawn flag is enabled. Returns : result (boolean) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) createCopy \u2693\ufe0e Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3container ) hasItemEquipped \u2693\ufe0e Checks if the actor has provided item equipped. local result = myObject : hasItemEquipped ( item , itemData ) Parameters : item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean) offersService \u2693\ufe0e Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = myObject : offersService ( service ) Parameters : service (number): Use one of the values in the tes3.merchantService.* table. Returns : result (boolean) onInventoryClose \u2693\ufe0e A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. myObject : onInventoryClose ( reference ) Parameters : reference ( tes3reference ) tradesItemType \u2693\ufe0e Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = myObject : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"Tes3container"},{"location":"types/tes3container/#tes3container","text":"A container object that has not been cloned. Typically represents the raw information edited in the construction set. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject","title":"tes3container"},{"location":"types/tes3container/#properties","text":"","title":"Properties"},{"location":"types/tes3container/#actorflags","text":"Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number)","title":"actorFlags"},{"location":"types/tes3container/#bartergold","text":"Friendly access to actor's barter gold amount. Returns : result (number)","title":"barterGold"},{"location":"types/tes3container/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3container/#blood","text":"Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set. Returns : result (integer)","title":"blood"},{"location":"types/tes3container/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3container/#capacity","text":"The amount of weight that the container can hold. Returns : result (number)","title":"capacity"},{"location":"types/tes3container/#clonecount","text":"Read-only . The number of clones that exist of this actor. Returns : result (number)","title":"cloneCount"},{"location":"types/tes3container/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3container/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3container/#equipment","text":"Read-only . The items currently equipped to the actor. Returns : result ( tes3equipmentStack [])","title":"equipment"},{"location":"types/tes3container/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3container/#inventory","text":"Read-only . The items currently carried by the actor. Returns : result ( tes3inventory )","title":"inventory"},{"location":"types/tes3container/#isinstance","text":"Always returns false. Returns : result (boolean)","title":"isInstance"},{"location":"types/tes3container/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3container/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3container/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3container/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3container/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3container/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3container/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3container/#organic","text":"Determines if the container's organic flag is enabled. Returns : result (boolean)","title":"organic"},{"location":"types/tes3container/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3container/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3container/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3container/#respawns","text":"Determines if the container's respawn flag is enabled. Returns : result (boolean)","title":"respawns"},{"location":"types/tes3container/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3container/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3container/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3container/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3container/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3container/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3container/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3container/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3container/#methods","text":"","title":"Methods"},{"location":"types/tes3container/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3container/#createcopy","text":"Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3container )","title":"createCopy"},{"location":"types/tes3container/#hasitemequipped","text":"Checks if the actor has provided item equipped. local result = myObject : hasItemEquipped ( item , itemData ) Parameters : item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean)","title":"hasItemEquipped"},{"location":"types/tes3container/#offersservice","text":"Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = myObject : offersService ( service ) Parameters : service (number): Use one of the values in the tes3.merchantService.* table. Returns : result (boolean)","title":"offersService"},{"location":"types/tes3container/#oninventoryclose","text":"A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. myObject : onInventoryClose ( reference ) Parameters : reference ( tes3reference )","title":"onInventoryClose"},{"location":"types/tes3container/#tradesitemtype","text":"Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = myObject : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tradesItemType"},{"location":"types/tes3containerInstance/","text":"tes3containerInstance \u2693\ufe0e A container object that has been cloned. Typically represents a container that has been instanced by being opened by the player. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e actorFlags \u2693\ufe0e Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number) barterGold \u2693\ufe0e Friendly access to actor's barter gold amount. Returns : result (number) baseObject \u2693\ufe0e Read-only . The base container object that the instance inherits from. Returns : result ( tes3object ) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) blood \u2693\ufe0e Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set. Returns : result (integer) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) cloneCount \u2693\ufe0e Read-only . The number of clones that exist of this actor. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) equipment \u2693\ufe0e Read-only . The items currently equipped to the actor. Returns : result ( tes3equipmentStack []) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) inventory \u2693\ufe0e Read-only . The items currently carried by the actor. Returns : result ( tes3inventory ) isInstance \u2693\ufe0e Always returns true. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) organic \u2693\ufe0e Determines if the container's organic flag is enabled. Returns : result (boolean) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) reference \u2693\ufe0e Read-only . The reference that the object is represented by. Returns : result ( tes3reference ) respawns \u2693\ufe0e Determines if the container's respawn flag is enabled. Returns : result (boolean) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) hasItemEquipped \u2693\ufe0e Checks if the actor has provided item equipped. local result = myObject : hasItemEquipped ( item , itemData ) Parameters : item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean) offersService \u2693\ufe0e Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = myObject : offersService ( service ) Parameters : service (number): Use one of the values in the tes3.merchantService.* table. Returns : result (boolean) onInventoryClose \u2693\ufe0e A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. myObject : onInventoryClose ( reference ) Parameters : reference ( tes3reference ) tradesItemType \u2693\ufe0e Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = myObject : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tes3containerInstance"},{"location":"types/tes3containerInstance/#tes3containerinstance","text":"A container object that has been cloned. Typically represents a container that has been instanced by being opened by the player. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject","title":"tes3containerInstance"},{"location":"types/tes3containerInstance/#properties","text":"","title":"Properties"},{"location":"types/tes3containerInstance/#actorflags","text":"Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number)","title":"actorFlags"},{"location":"types/tes3containerInstance/#bartergold","text":"Friendly access to actor's barter gold amount. Returns : result (number)","title":"barterGold"},{"location":"types/tes3containerInstance/#baseobject","text":"Read-only . The base container object that the instance inherits from. Returns : result ( tes3object )","title":"baseObject"},{"location":"types/tes3containerInstance/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3containerInstance/#blood","text":"Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set. Returns : result (integer)","title":"blood"},{"location":"types/tes3containerInstance/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3containerInstance/#clonecount","text":"Read-only . The number of clones that exist of this actor. Returns : result (number)","title":"cloneCount"},{"location":"types/tes3containerInstance/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3containerInstance/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3containerInstance/#equipment","text":"Read-only . The items currently equipped to the actor. Returns : result ( tes3equipmentStack [])","title":"equipment"},{"location":"types/tes3containerInstance/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3containerInstance/#inventory","text":"Read-only . The items currently carried by the actor. Returns : result ( tes3inventory )","title":"inventory"},{"location":"types/tes3containerInstance/#isinstance","text":"Always returns true. Returns : result (boolean)","title":"isInstance"},{"location":"types/tes3containerInstance/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3containerInstance/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3containerInstance/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3containerInstance/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3containerInstance/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3containerInstance/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3containerInstance/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3containerInstance/#organic","text":"Determines if the container's organic flag is enabled. Returns : result (boolean)","title":"organic"},{"location":"types/tes3containerInstance/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3containerInstance/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3containerInstance/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3containerInstance/#reference","text":"Read-only . The reference that the object is represented by. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3containerInstance/#respawns","text":"Determines if the container's respawn flag is enabled. Returns : result (boolean)","title":"respawns"},{"location":"types/tes3containerInstance/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3containerInstance/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3containerInstance/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3containerInstance/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3containerInstance/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3containerInstance/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3containerInstance/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3containerInstance/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3containerInstance/#methods","text":"","title":"Methods"},{"location":"types/tes3containerInstance/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3containerInstance/#hasitemequipped","text":"Checks if the actor has provided item equipped. local result = myObject : hasItemEquipped ( item , itemData ) Parameters : item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean)","title":"hasItemEquipped"},{"location":"types/tes3containerInstance/#offersservice","text":"Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = myObject : offersService ( service ) Parameters : service (number): Use one of the values in the tes3.merchantService.* table. Returns : result (boolean)","title":"offersService"},{"location":"types/tes3containerInstance/#oninventoryclose","text":"A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. myObject : onInventoryClose ( reference ) Parameters : reference ( tes3reference )","title":"onInventoryClose"},{"location":"types/tes3containerInstance/#tradesitemtype","text":"Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = myObject : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tradesItemType"},{"location":"types/tes3creature/","text":"tes3creature \u2693\ufe0e A creature object that has not been cloned. Typically represents the raw information edited in the construction set. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e actorFlags \u2693\ufe0e Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number) aiConfig \u2693\ufe0e Read-only . A substructure off of actors that contains information on the current AI configuration. Returns : result ( tes3aiConfig ) Example: Checking if a creature offers traveling service --- This function returns `true` if given NPC --- or creature offers traveling service. ---@param actor tes3npc|tes3npcInstance|tes3creature|tes3creatureInstance ---@return boolean local function offersTraveling ( actor ) local travelDestinations = actor . aiConfig . travelDestinations -- Actors that can't transport the player -- have travelDestinations equal to `nil` return travelDestinations ~= nil end attacks \u2693\ufe0e A table of three attacks, represented by a trio of tes3rangeInt . Returns : result ( tes3rangeInt []) attributes \u2693\ufe0e A table of eight numbers, representing the base values for the actor's attributes. Returns : result (number[]) barterGold \u2693\ufe0e Friendly access to actor's barter gold amount. Returns : result (number) biped \u2693\ufe0e Access to the creature's biped flag. Returns : result (boolean) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) blood \u2693\ufe0e Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set. Returns : result (integer) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) cloneCount \u2693\ufe0e Read-only . The number of clones that exist of this actor. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) equipment \u2693\ufe0e Read-only . The items currently equipped to the actor. Returns : result ( tes3equipmentStack []) fatigue \u2693\ufe0e Read-only . The actor's max fatigue. Returns : result (number) flies \u2693\ufe0e Access to the creature's flies flag. Returns : result (boolean) health \u2693\ufe0e Read-only . The actor's max health. Returns : result (number) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) inventory \u2693\ufe0e Read-only . The items currently carried by the actor. Returns : result ( tes3inventory ) isAttacked \u2693\ufe0e Read-only . If true, the actor's attacked flag is set. Returns : result (boolean) isEssential \u2693\ufe0e Read-only . If true, the actor's essential flag is set. Returns : result (boolean) isInstance \u2693\ufe0e Always returns false. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) isRespawn \u2693\ufe0e Read-only . If true, the actor's respawn flag is set. Returns : result (boolean) level \u2693\ufe0e Read-only . The base level of the creature. Returns : result (number) magicka \u2693\ufe0e Read-only . The actor's max magicka. Returns : result (number) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) respawns \u2693\ufe0e Access to the creature's respawns flag. Returns : result (boolean) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) skills \u2693\ufe0e A table of three numbers, representing the base values for the creature's combat, magic, and stealth skills. Returns : result (number[]) soul \u2693\ufe0e The amount of soul value that the creature provides. Returns : result (number) soundCreature \u2693\ufe0e A creature to use instead of this one for sound generation. Returns : result ( tes3creature ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) spells \u2693\ufe0e Read-only . A list of spells that the actor has access to. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, spell in pairs(creature.spells.iterator) do print(spell.name) end Returns : result ( tes3spellList ) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) swims \u2693\ufe0e Access to the creature's swims flag. Returns : result (boolean) type \u2693\ufe0e The type of the creature. Maps to tes3.creatureType constants. Returns : result (number) usesEquipment \u2693\ufe0e Access to the creature's usesEquipment flag. Returns : result (boolean) walks \u2693\ufe0e Access to the creature's walks flag. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) hasItemEquipped \u2693\ufe0e Checks if the actor has provided item equipped. local result = myObject : hasItemEquipped ( item , itemData ) Parameters : item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean) offersService \u2693\ufe0e Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = myObject : offersService ( service ) Parameters : service (number): Use one of the values in the tes3.merchantService.* table. Returns : result (boolean) onInventoryClose \u2693\ufe0e A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. myObject : onInventoryClose ( reference ) Parameters : reference ( tes3reference ) tradesItemType \u2693\ufe0e Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = myObject : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"Tes3creature"},{"location":"types/tes3creature/#tes3creature","text":"A creature object that has not been cloned. Typically represents the raw information edited in the construction set. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject","title":"tes3creature"},{"location":"types/tes3creature/#properties","text":"","title":"Properties"},{"location":"types/tes3creature/#actorflags","text":"Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number)","title":"actorFlags"},{"location":"types/tes3creature/#aiconfig","text":"Read-only . A substructure off of actors that contains information on the current AI configuration. Returns : result ( tes3aiConfig ) Example: Checking if a creature offers traveling service --- This function returns `true` if given NPC --- or creature offers traveling service. ---@param actor tes3npc|tes3npcInstance|tes3creature|tes3creatureInstance ---@return boolean local function offersTraveling ( actor ) local travelDestinations = actor . aiConfig . travelDestinations -- Actors that can't transport the player -- have travelDestinations equal to `nil` return travelDestinations ~= nil end","title":"aiConfig"},{"location":"types/tes3creature/#attacks","text":"A table of three attacks, represented by a trio of tes3rangeInt . Returns : result ( tes3rangeInt [])","title":"attacks"},{"location":"types/tes3creature/#attributes","text":"A table of eight numbers, representing the base values for the actor's attributes. Returns : result (number[])","title":"attributes"},{"location":"types/tes3creature/#bartergold","text":"Friendly access to actor's barter gold amount. Returns : result (number)","title":"barterGold"},{"location":"types/tes3creature/#biped","text":"Access to the creature's biped flag. Returns : result (boolean)","title":"biped"},{"location":"types/tes3creature/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3creature/#blood","text":"Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set. Returns : result (integer)","title":"blood"},{"location":"types/tes3creature/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3creature/#clonecount","text":"Read-only . The number of clones that exist of this actor. Returns : result (number)","title":"cloneCount"},{"location":"types/tes3creature/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3creature/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3creature/#equipment","text":"Read-only . The items currently equipped to the actor. Returns : result ( tes3equipmentStack [])","title":"equipment"},{"location":"types/tes3creature/#fatigue","text":"Read-only . The actor's max fatigue. Returns : result (number)","title":"fatigue"},{"location":"types/tes3creature/#flies","text":"Access to the creature's flies flag. Returns : result (boolean)","title":"flies"},{"location":"types/tes3creature/#health","text":"Read-only . The actor's max health. Returns : result (number)","title":"health"},{"location":"types/tes3creature/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3creature/#inventory","text":"Read-only . The items currently carried by the actor. Returns : result ( tes3inventory )","title":"inventory"},{"location":"types/tes3creature/#isattacked","text":"Read-only . If true, the actor's attacked flag is set. Returns : result (boolean)","title":"isAttacked"},{"location":"types/tes3creature/#isessential","text":"Read-only . If true, the actor's essential flag is set. Returns : result (boolean)","title":"isEssential"},{"location":"types/tes3creature/#isinstance","text":"Always returns false. Returns : result (boolean)","title":"isInstance"},{"location":"types/tes3creature/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3creature/#isrespawn","text":"Read-only . If true, the actor's respawn flag is set. Returns : result (boolean)","title":"isRespawn"},{"location":"types/tes3creature/#level","text":"Read-only . The base level of the creature. Returns : result (number)","title":"level"},{"location":"types/tes3creature/#magicka","text":"Read-only . The actor's max magicka. Returns : result (number)","title":"magicka"},{"location":"types/tes3creature/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3creature/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3creature/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3creature/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3creature/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3creature/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3creature/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3creature/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3creature/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3creature/#respawns","text":"Access to the creature's respawns flag. Returns : result (boolean)","title":"respawns"},{"location":"types/tes3creature/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3creature/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3creature/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3creature/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3creature/#skills","text":"A table of three numbers, representing the base values for the creature's combat, magic, and stealth skills. Returns : result (number[])","title":"skills"},{"location":"types/tes3creature/#soul","text":"The amount of soul value that the creature provides. Returns : result (number)","title":"soul"},{"location":"types/tes3creature/#soundcreature","text":"A creature to use instead of this one for sound generation. Returns : result ( tes3creature )","title":"soundCreature"},{"location":"types/tes3creature/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3creature/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3creature/#spells","text":"Read-only . A list of spells that the actor has access to. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, spell in pairs(creature.spells.iterator) do print(spell.name) end Returns : result ( tes3spellList )","title":"spells"},{"location":"types/tes3creature/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3creature/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3creature/#swims","text":"Access to the creature's swims flag. Returns : result (boolean)","title":"swims"},{"location":"types/tes3creature/#type","text":"The type of the creature. Maps to tes3.creatureType constants. Returns : result (number)","title":"type"},{"location":"types/tes3creature/#usesequipment","text":"Access to the creature's usesEquipment flag. Returns : result (boolean)","title":"usesEquipment"},{"location":"types/tes3creature/#walks","text":"Access to the creature's walks flag. Returns : result (boolean)","title":"walks"},{"location":"types/tes3creature/#methods","text":"","title":"Methods"},{"location":"types/tes3creature/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3creature/#hasitemequipped","text":"Checks if the actor has provided item equipped. local result = myObject : hasItemEquipped ( item , itemData ) Parameters : item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean)","title":"hasItemEquipped"},{"location":"types/tes3creature/#offersservice","text":"Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = myObject : offersService ( service ) Parameters : service (number): Use one of the values in the tes3.merchantService.* table. Returns : result (boolean)","title":"offersService"},{"location":"types/tes3creature/#oninventoryclose","text":"A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. myObject : onInventoryClose ( reference ) Parameters : reference ( tes3reference )","title":"onInventoryClose"},{"location":"types/tes3creature/#tradesitemtype","text":"Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = myObject : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tradesItemType"},{"location":"types/tes3creatureInstance/","text":"tes3creatureInstance \u2693\ufe0e A creature object that has been cloned. Typically represents a creature that has been instanced in the world. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e actorFlags \u2693\ufe0e Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number) aiConfig \u2693\ufe0e Read-only . Simplified access to the base creature's AI configuration. Returns : result ( tes3aiConfig ) Example: Checking if a creature offers traveling service --- This function returns `true` if given NPC --- or creature offers traveling service. ---@param actor tes3npc|tes3npcInstance|tes3creature|tes3creatureInstance ---@return boolean local function offersTraveling ( actor ) local travelDestinations = actor . aiConfig . travelDestinations -- Actors that can't transport the player -- have travelDestinations equal to `nil` return travelDestinations ~= nil end attacks \u2693\ufe0e Simplified access to the base creature's attacks. A table of three attacks, represented by a trio of tes3rangeInt . Returns : result ( tes3rangeInt []) attributes \u2693\ufe0e Simplified access to the base creature's attributes. A table of eight numbers, representing the base values for the creature's attributes. Returns : result (number[]) barterGold \u2693\ufe0e Friendly access to actor's barter gold amount. Returns : result (number) baseObject \u2693\ufe0e Access to creature that this one is instanced from. Returns : result ( tes3creature ) biped \u2693\ufe0e Access to the creature's biped flag. Returns : result (boolean) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) blood \u2693\ufe0e Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set. Returns : result (integer) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) cloneCount \u2693\ufe0e Read-only . The number of clones that exist of this actor. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) equipment \u2693\ufe0e Read-only . A collection that contains the currently equipped items. Returns : result ( tes3equipmentStack []) fatigue \u2693\ufe0e Read-only . The creature's current fatigue. Returns : result (number) flies \u2693\ufe0e Access to the creature's flies flag. Returns : result (boolean) health \u2693\ufe0e Read-only . The creature's current health. Returns : result (number) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) inventory \u2693\ufe0e Read-only . The items currently carried by the actor. Returns : result ( tes3inventory ) isAttacked \u2693\ufe0e Read-only . If true, the creature attacked flag is set. Returns : result (boolean) isEssential \u2693\ufe0e Read-only . If true, the creature essential flag is set. Returns : result (boolean) isInstance \u2693\ufe0e Always returns true. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) isRespawn \u2693\ufe0e Read-only . If true, the creature respawn flag is set. Returns : result (boolean) level \u2693\ufe0e Read-only . The base level of the creature. Returns : result (number) magicka \u2693\ufe0e Read-only . The creature's current magicka. Returns : result (number) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) mobile \u2693\ufe0e Read-only . The mobile that the object is represented by. Returns : result ( tes3mobileActor ) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) reference \u2693\ufe0e Read-only . The reference that the object is represented by. Returns : result ( tes3reference ) respawns \u2693\ufe0e Access to the creature's respawns flag. Returns : result (boolean) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) skills \u2693\ufe0e Simplified access to the base creature's skills. A table of three numbers, representing the base values for the creature's combat, magic, and stealth skills. Returns : result (number[]) soul \u2693\ufe0e Simplified access to the base creature's soul. The amount of soul value that the creature provides. Returns : result (number) soundCreature \u2693\ufe0e Simplified access to the base creature's sound generator. A creature to use instead of this one for sound generation. Returns : result ( tes3creature ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) spells \u2693\ufe0e Read-only . Quick access to the base creature's spell list. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, spell in pairs(creature.spells.iterator) do print(spell.name) end Returns : result ( tes3spellList ) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) swims \u2693\ufe0e Access to the creature's swims flag. Returns : result (boolean) type \u2693\ufe0e Simplified access to the base creature's type. The type of the creature, maps to values in tes3.creatureType namespace. Returns : result (number) usesEquipment \u2693\ufe0e Access to the creature's usesEquipment flag. Returns : result (boolean) walks \u2693\ufe0e Access to the creature's walks flag. Returns : result (boolean) weapon \u2693\ufe0e Read-only . The creature's currently equipped weapon. Returns : result ( tes3weapon ) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) hasItemEquipped \u2693\ufe0e Checks if the actor has provided item equipped. local result = myObject : hasItemEquipped ( item , itemData ) Parameters : item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean) offersService \u2693\ufe0e Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = myObject : offersService ( service ) Parameters : service (number): Use one of the values in the tes3.merchantService.* table. Returns : result (boolean) onInventoryClose \u2693\ufe0e A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. myObject : onInventoryClose ( reference ) Parameters : reference ( tes3reference ) reevaluateEquipment \u2693\ufe0e Causes the creature to reevaluate its equipment choices and equip the best available. myObject : reevaluateEquipment () tradesItemType \u2693\ufe0e Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = myObject : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tes3creatureInstance"},{"location":"types/tes3creatureInstance/#tes3creatureinstance","text":"A creature object that has been cloned. Typically represents a creature that has been instanced in the world. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject","title":"tes3creatureInstance"},{"location":"types/tes3creatureInstance/#properties","text":"","title":"Properties"},{"location":"types/tes3creatureInstance/#actorflags","text":"Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number)","title":"actorFlags"},{"location":"types/tes3creatureInstance/#aiconfig","text":"Read-only . Simplified access to the base creature's AI configuration. Returns : result ( tes3aiConfig ) Example: Checking if a creature offers traveling service --- This function returns `true` if given NPC --- or creature offers traveling service. ---@param actor tes3npc|tes3npcInstance|tes3creature|tes3creatureInstance ---@return boolean local function offersTraveling ( actor ) local travelDestinations = actor . aiConfig . travelDestinations -- Actors that can't transport the player -- have travelDestinations equal to `nil` return travelDestinations ~= nil end","title":"aiConfig"},{"location":"types/tes3creatureInstance/#attacks","text":"Simplified access to the base creature's attacks. A table of three attacks, represented by a trio of tes3rangeInt . Returns : result ( tes3rangeInt [])","title":"attacks"},{"location":"types/tes3creatureInstance/#attributes","text":"Simplified access to the base creature's attributes. A table of eight numbers, representing the base values for the creature's attributes. Returns : result (number[])","title":"attributes"},{"location":"types/tes3creatureInstance/#bartergold","text":"Friendly access to actor's barter gold amount. Returns : result (number)","title":"barterGold"},{"location":"types/tes3creatureInstance/#baseobject","text":"Access to creature that this one is instanced from. Returns : result ( tes3creature )","title":"baseObject"},{"location":"types/tes3creatureInstance/#biped","text":"Access to the creature's biped flag. Returns : result (boolean)","title":"biped"},{"location":"types/tes3creatureInstance/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3creatureInstance/#blood","text":"Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set. Returns : result (integer)","title":"blood"},{"location":"types/tes3creatureInstance/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3creatureInstance/#clonecount","text":"Read-only . The number of clones that exist of this actor. Returns : result (number)","title":"cloneCount"},{"location":"types/tes3creatureInstance/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3creatureInstance/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3creatureInstance/#equipment","text":"Read-only . A collection that contains the currently equipped items. Returns : result ( tes3equipmentStack [])","title":"equipment"},{"location":"types/tes3creatureInstance/#fatigue","text":"Read-only . The creature's current fatigue. Returns : result (number)","title":"fatigue"},{"location":"types/tes3creatureInstance/#flies","text":"Access to the creature's flies flag. Returns : result (boolean)","title":"flies"},{"location":"types/tes3creatureInstance/#health","text":"Read-only . The creature's current health. Returns : result (number)","title":"health"},{"location":"types/tes3creatureInstance/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3creatureInstance/#inventory","text":"Read-only . The items currently carried by the actor. Returns : result ( tes3inventory )","title":"inventory"},{"location":"types/tes3creatureInstance/#isattacked","text":"Read-only . If true, the creature attacked flag is set. Returns : result (boolean)","title":"isAttacked"},{"location":"types/tes3creatureInstance/#isessential","text":"Read-only . If true, the creature essential flag is set. Returns : result (boolean)","title":"isEssential"},{"location":"types/tes3creatureInstance/#isinstance","text":"Always returns true. Returns : result (boolean)","title":"isInstance"},{"location":"types/tes3creatureInstance/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3creatureInstance/#isrespawn","text":"Read-only . If true, the creature respawn flag is set. Returns : result (boolean)","title":"isRespawn"},{"location":"types/tes3creatureInstance/#level","text":"Read-only . The base level of the creature. Returns : result (number)","title":"level"},{"location":"types/tes3creatureInstance/#magicka","text":"Read-only . The creature's current magicka. Returns : result (number)","title":"magicka"},{"location":"types/tes3creatureInstance/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3creatureInstance/#mobile","text":"Read-only . The mobile that the object is represented by. Returns : result ( tes3mobileActor )","title":"mobile"},{"location":"types/tes3creatureInstance/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3creatureInstance/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3creatureInstance/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3creatureInstance/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3creatureInstance/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3creatureInstance/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3creatureInstance/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3creatureInstance/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3creatureInstance/#reference","text":"Read-only . The reference that the object is represented by. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3creatureInstance/#respawns","text":"Access to the creature's respawns flag. Returns : result (boolean)","title":"respawns"},{"location":"types/tes3creatureInstance/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3creatureInstance/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3creatureInstance/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3creatureInstance/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3creatureInstance/#skills","text":"Simplified access to the base creature's skills. A table of three numbers, representing the base values for the creature's combat, magic, and stealth skills. Returns : result (number[])","title":"skills"},{"location":"types/tes3creatureInstance/#soul","text":"Simplified access to the base creature's soul. The amount of soul value that the creature provides. Returns : result (number)","title":"soul"},{"location":"types/tes3creatureInstance/#soundcreature","text":"Simplified access to the base creature's sound generator. A creature to use instead of this one for sound generation. Returns : result ( tes3creature )","title":"soundCreature"},{"location":"types/tes3creatureInstance/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3creatureInstance/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3creatureInstance/#spells","text":"Read-only . Quick access to the base creature's spell list. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, spell in pairs(creature.spells.iterator) do print(spell.name) end Returns : result ( tes3spellList )","title":"spells"},{"location":"types/tes3creatureInstance/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3creatureInstance/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3creatureInstance/#swims","text":"Access to the creature's swims flag. Returns : result (boolean)","title":"swims"},{"location":"types/tes3creatureInstance/#type","text":"Simplified access to the base creature's type. The type of the creature, maps to values in tes3.creatureType namespace. Returns : result (number)","title":"type"},{"location":"types/tes3creatureInstance/#usesequipment","text":"Access to the creature's usesEquipment flag. Returns : result (boolean)","title":"usesEquipment"},{"location":"types/tes3creatureInstance/#walks","text":"Access to the creature's walks flag. Returns : result (boolean)","title":"walks"},{"location":"types/tes3creatureInstance/#weapon","text":"Read-only . The creature's currently equipped weapon. Returns : result ( tes3weapon )","title":"weapon"},{"location":"types/tes3creatureInstance/#methods","text":"","title":"Methods"},{"location":"types/tes3creatureInstance/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3creatureInstance/#hasitemequipped","text":"Checks if the actor has provided item equipped. local result = myObject : hasItemEquipped ( item , itemData ) Parameters : item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean)","title":"hasItemEquipped"},{"location":"types/tes3creatureInstance/#offersservice","text":"Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = myObject : offersService ( service ) Parameters : service (number): Use one of the values in the tes3.merchantService.* table. Returns : result (boolean)","title":"offersService"},{"location":"types/tes3creatureInstance/#oninventoryclose","text":"A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. myObject : onInventoryClose ( reference ) Parameters : reference ( tes3reference )","title":"onInventoryClose"},{"location":"types/tes3creatureInstance/#reevaluateequipment","text":"Causes the creature to reevaluate its equipment choices and equip the best available. myObject : reevaluateEquipment ()","title":"reevaluateEquipment"},{"location":"types/tes3creatureInstance/#tradesitemtype","text":"Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = myObject : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tradesItemType"},{"location":"types/tes3dataHandler/","text":"tes3dataHandler \u2693\ufe0e A core game object used for storing both active and non-dynamic gameplay data. Properties \u2693\ufe0e backgroundThread \u2693\ufe0e Read-only . A Windows handle to the background processing thread. Returns : result (number) backgroundThreadId \u2693\ufe0e Read-only . The thread ID for the background processing thread. Returns : result (number) backgroundThreadRunning \u2693\ufe0e Read-only . Access to the running state for the background processing thread. Returns : result (boolean) cellChanged \u2693\ufe0e Read-only . A flag set for the frame that the player has changed cells. Returns : result (boolean) centralGridX \u2693\ufe0e Read-only . The position of the origin horizontal grid coordinate. Returns : result (boolean) centralGridY \u2693\ufe0e Read-only . The position of the origin longitudinal grid coordinate. Returns : result (boolean) currentAmbientWaterSound \u2693\ufe0e Access to the current ambient water sound. Returns : result ( tes3sound ) currentCell \u2693\ufe0e Read-only . Access to the cell that the player is currently in. Returns : result ( tes3cell ) currentInteriorCell \u2693\ufe0e Read-only . Access to the current interior cell, if the player is in an interior. Returns : result ( tes3cell ) dontThreadLoad \u2693\ufe0e Access to dontThreadLoad setting. Returns : result (boolean) exteriorCells \u2693\ufe0e Read-only . A table of nine tes3cellExteriorData objects for all loaded exterior cells. Returns : result ( tes3dataHandlerExteriorCellData []) lastExteriorCell \u2693\ufe0e Read-only . Access to the last visited exterior cell. Returns : result ( tes3cell ) mainThread \u2693\ufe0e Read-only . A Windows handle to the main execution thread. Returns : result (number) mainThreadId \u2693\ufe0e Read-only . The thread ID for the main execution thread. Returns : result (number) nonDynamicData \u2693\ufe0e Read-only . A child structure where core game objects are held. Returns : result ( tes3nonDynamicData ) suppressThreadLoad \u2693\ufe0e Access to suppressThreadLoad setting. Returns : result (boolean) threadSleepTime \u2693\ufe0e Read-only . No description yet available. Returns : result (number) useCellTransitionFader \u2693\ufe0e An engine flag that controls if there is a fade in/out between cells. Returns : result (boolean) worldLandscapeRoot \u2693\ufe0e Read-only . Access to the root of the scene graph of all the currently loaded terrain. It's nine cells in total when the player is in exterior cell. While the player is in interior cell this node is culled. Returns : result ( niNode ) worldObjectRoot \u2693\ufe0e Read-only . Access to the root of the scene graph containing all the static objects, and lights that can't be picked up. In addition, the player's scene graph is a child node of this root node. Returns : result ( niNode ) worldPickObjectRoot \u2693\ufe0e Read-only . Access to the root of the scene graph containing all the objects that can be interacted with (NPCs, items, harvestable plants, activators, doors...), but also some objects that are only rendered in the Construction Set such as sound emmiting activator objects with EditorMarker.NIF mesh. Returns : result ( niNode ) Methods \u2693\ufe0e updateCollisionGroupsForActiveCells \u2693\ufe0e No description yet available. myObject : updateCollisionGroupsForActiveCells ({ force = ..., isResettingData = ..., resetCollisionGroups = ... }) Parameters : params (table) force (boolean): Default : true . isResettingData (boolean): Default : false . resetCollisionGroups (boolean): Default : true .","title":"tes3dataHandler"},{"location":"types/tes3dataHandler/#tes3datahandler","text":"A core game object used for storing both active and non-dynamic gameplay data.","title":"tes3dataHandler"},{"location":"types/tes3dataHandler/#properties","text":"","title":"Properties"},{"location":"types/tes3dataHandler/#backgroundthread","text":"Read-only . A Windows handle to the background processing thread. Returns : result (number)","title":"backgroundThread"},{"location":"types/tes3dataHandler/#backgroundthreadid","text":"Read-only . The thread ID for the background processing thread. Returns : result (number)","title":"backgroundThreadId"},{"location":"types/tes3dataHandler/#backgroundthreadrunning","text":"Read-only . Access to the running state for the background processing thread. Returns : result (boolean)","title":"backgroundThreadRunning"},{"location":"types/tes3dataHandler/#cellchanged","text":"Read-only . A flag set for the frame that the player has changed cells. Returns : result (boolean)","title":"cellChanged"},{"location":"types/tes3dataHandler/#centralgridx","text":"Read-only . The position of the origin horizontal grid coordinate. Returns : result (boolean)","title":"centralGridX"},{"location":"types/tes3dataHandler/#centralgridy","text":"Read-only . The position of the origin longitudinal grid coordinate. Returns : result (boolean)","title":"centralGridY"},{"location":"types/tes3dataHandler/#currentambientwatersound","text":"Access to the current ambient water sound. Returns : result ( tes3sound )","title":"currentAmbientWaterSound"},{"location":"types/tes3dataHandler/#currentcell","text":"Read-only . Access to the cell that the player is currently in. Returns : result ( tes3cell )","title":"currentCell"},{"location":"types/tes3dataHandler/#currentinteriorcell","text":"Read-only . Access to the current interior cell, if the player is in an interior. Returns : result ( tes3cell )","title":"currentInteriorCell"},{"location":"types/tes3dataHandler/#dontthreadload","text":"Access to dontThreadLoad setting. Returns : result (boolean)","title":"dontThreadLoad"},{"location":"types/tes3dataHandler/#exteriorcells","text":"Read-only . A table of nine tes3cellExteriorData objects for all loaded exterior cells. Returns : result ( tes3dataHandlerExteriorCellData [])","title":"exteriorCells"},{"location":"types/tes3dataHandler/#lastexteriorcell","text":"Read-only . Access to the last visited exterior cell. Returns : result ( tes3cell )","title":"lastExteriorCell"},{"location":"types/tes3dataHandler/#mainthread","text":"Read-only . A Windows handle to the main execution thread. Returns : result (number)","title":"mainThread"},{"location":"types/tes3dataHandler/#mainthreadid","text":"Read-only . The thread ID for the main execution thread. Returns : result (number)","title":"mainThreadId"},{"location":"types/tes3dataHandler/#nondynamicdata","text":"Read-only . A child structure where core game objects are held. Returns : result ( tes3nonDynamicData )","title":"nonDynamicData"},{"location":"types/tes3dataHandler/#suppressthreadload","text":"Access to suppressThreadLoad setting. Returns : result (boolean)","title":"suppressThreadLoad"},{"location":"types/tes3dataHandler/#threadsleeptime","text":"Read-only . No description yet available. Returns : result (number)","title":"threadSleepTime"},{"location":"types/tes3dataHandler/#usecelltransitionfader","text":"An engine flag that controls if there is a fade in/out between cells. Returns : result (boolean)","title":"useCellTransitionFader"},{"location":"types/tes3dataHandler/#worldlandscaperoot","text":"Read-only . Access to the root of the scene graph of all the currently loaded terrain. It's nine cells in total when the player is in exterior cell. While the player is in interior cell this node is culled. Returns : result ( niNode )","title":"worldLandscapeRoot"},{"location":"types/tes3dataHandler/#worldobjectroot","text":"Read-only . Access to the root of the scene graph containing all the static objects, and lights that can't be picked up. In addition, the player's scene graph is a child node of this root node. Returns : result ( niNode )","title":"worldObjectRoot"},{"location":"types/tes3dataHandler/#worldpickobjectroot","text":"Read-only . Access to the root of the scene graph containing all the objects that can be interacted with (NPCs, items, harvestable plants, activators, doors...), but also some objects that are only rendered in the Construction Set such as sound emmiting activator objects with EditorMarker.NIF mesh. Returns : result ( niNode )","title":"worldPickObjectRoot"},{"location":"types/tes3dataHandler/#methods","text":"","title":"Methods"},{"location":"types/tes3dataHandler/#updatecollisiongroupsforactivecells","text":"No description yet available. myObject : updateCollisionGroupsForActiveCells ({ force = ..., isResettingData = ..., resetCollisionGroups = ... }) Parameters : params (table) force (boolean): Default : true . isResettingData (boolean): Default : false . resetCollisionGroups (boolean): Default : true .","title":"updateCollisionGroupsForActiveCells"},{"location":"types/tes3dataHandlerExteriorCellData/","text":"tes3dataHandlerExteriorCellData \u2693\ufe0e A structure the data handler uses to track loaded exterior cell data. Properties \u2693\ufe0e cell \u2693\ufe0e Read-only . The exterior cell. Returns : result ( tes3cell ) loadingFlags \u2693\ufe0e Read-only . Direct access to cell load flags. Shouldn't be accessed directly. Returns : result (number)","title":"tes3dataHandlerExteriorCellData"},{"location":"types/tes3dataHandlerExteriorCellData/#tes3datahandlerexteriorcelldata","text":"A structure the data handler uses to track loaded exterior cell data.","title":"tes3dataHandlerExteriorCellData"},{"location":"types/tes3dataHandlerExteriorCellData/#properties","text":"","title":"Properties"},{"location":"types/tes3dataHandlerExteriorCellData/#cell","text":"Read-only . The exterior cell. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3dataHandlerExteriorCellData/#loadingflags","text":"Read-only . Direct access to cell load flags. Shouldn't be accessed directly. Returns : result (number)","title":"loadingFlags"},{"location":"types/tes3dialogue/","text":"tes3dialogue \u2693\ufe0e A parent-level dialogue, such as a topic, voice, greeting, persuasion response, or journal. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) info \u2693\ufe0e Read-only . A collection of individual entries in the dialogue. Returns : result ( tes3dialogueInfo []) journalIndex \u2693\ufe0e For journal dialogues, the currently active journal index. Returns : result (number, nil) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) type \u2693\ufe0e Read-only . The type of the dialogue. Maps to values in tes3.dialogueType namespace. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) addToJournal \u2693\ufe0e Adds the dialogue to the player's journal, if applicable, at a given index. local result = myObject : addToJournal ({ index = ..., actor = ... }) Parameters : params (table) index (number): Default : 0 . actor ( tes3mobileActor , tes3reference , string): Default : tes3.player . Returns : result (boolean) getInfo \u2693\ufe0e Fetches the info that a given actor would produce for the dialogue. local result = myObject : getInfo ({ actor = ... }) Parameters : params (table) actor ( tes3mobileActor , tes3reference , string) Returns : result ( tes3dialogueInfo ) getJournalInfo \u2693\ufe0e Retrieves the info object for a journal. By default this will return the info for the player's current journal index for this dialogue. An index can be provided to fetch a specific index's related info. local journalInfo = myObject : getJournalInfo ( index ) Parameters : index (number): Optional . The index of the journal to fetch the info for. If not provided, the current player's journal index is used. Returns : journalInfo ( tes3dialogueInfo ) loadQuestName \u2693\ufe0e This method finds the info that contains the quest name, then loads and returns its text. This method accesses the disk, and may be slow to operate. For dialogues that aren't journal-based, this will be nil . local questName = myObject : loadQuestName () Returns : questName (string, nil)","title":"Tes3dialogue"},{"location":"types/tes3dialogue/#tes3dialogue","text":"A parent-level dialogue, such as a topic, voice, greeting, persuasion response, or journal. This type inherits the following: tes3baseObject","title":"tes3dialogue"},{"location":"types/tes3dialogue/#properties","text":"","title":"Properties"},{"location":"types/tes3dialogue/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3dialogue/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3dialogue/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3dialogue/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3dialogue/#info","text":"Read-only . A collection of individual entries in the dialogue. Returns : result ( tes3dialogueInfo [])","title":"info"},{"location":"types/tes3dialogue/#journalindex","text":"For journal dialogues, the currently active journal index. Returns : result (number, nil)","title":"journalIndex"},{"location":"types/tes3dialogue/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3dialogue/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3dialogue/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3dialogue/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3dialogue/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3dialogue/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3dialogue/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3dialogue/#type","text":"Read-only . The type of the dialogue. Maps to values in tes3.dialogueType namespace. Returns : result (number)","title":"type"},{"location":"types/tes3dialogue/#methods","text":"","title":"Methods"},{"location":"types/tes3dialogue/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3dialogue/#addtojournal","text":"Adds the dialogue to the player's journal, if applicable, at a given index. local result = myObject : addToJournal ({ index = ..., actor = ... }) Parameters : params (table) index (number): Default : 0 . actor ( tes3mobileActor , tes3reference , string): Default : tes3.player . Returns : result (boolean)","title":"addToJournal"},{"location":"types/tes3dialogue/#getinfo","text":"Fetches the info that a given actor would produce for the dialogue. local result = myObject : getInfo ({ actor = ... }) Parameters : params (table) actor ( tes3mobileActor , tes3reference , string) Returns : result ( tes3dialogueInfo )","title":"getInfo"},{"location":"types/tes3dialogue/#getjournalinfo","text":"Retrieves the info object for a journal. By default this will return the info for the player's current journal index for this dialogue. An index can be provided to fetch a specific index's related info. local journalInfo = myObject : getJournalInfo ( index ) Parameters : index (number): Optional . The index of the journal to fetch the info for. If not provided, the current player's journal index is used. Returns : journalInfo ( tes3dialogueInfo )","title":"getJournalInfo"},{"location":"types/tes3dialogue/#loadquestname","text":"This method finds the info that contains the quest name, then loads and returns its text. This method accesses the disk, and may be slow to operate. For dialogues that aren't journal-based, this will be nil . local questName = myObject : loadQuestName () Returns : questName (string, nil)","title":"loadQuestName"},{"location":"types/tes3dialogueInfo/","text":"tes3dialogueInfo \u2693\ufe0e A child for a given dialogue. Whereas a dialogue may be a conversation topic, a tes3dialogueInfo would be an individual response. This type inherits the following: tes3baseObject Properties \u2693\ufe0e actor \u2693\ufe0e Read-only . The speaker's actor that the info is filtered for. Returns : result ( tes3actor ) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) cell \u2693\ufe0e Read-only . The speaker's current cell that the info is filtered for. Returns : result ( tes3cell ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) disposition \u2693\ufe0e The minimum disposition that the info is filtered for. For journal-based dialogues, this is the same as the journalIndex property, which should be used instead. Returns : result (number) firstHeardFrom \u2693\ufe0e The actor that the player first heard the info from. Returns : result ( tes3actor ) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isQuestFinished \u2693\ufe0e Quick access to the \"quest finished\" flag. For dialogues that aren't journal-based, this will be nil . Returns : result (boolean, nil) isQuestName \u2693\ufe0e Quick access to the \"quest name\" flag. If this is true, this info contains the name of the quest. For dialogues that aren't journal-based, this will be nil . Returns : result (boolean, nil) isQuestRestart \u2693\ufe0e Quick access to the \"quest restart\" flag. For dialogues that aren't journal-based, this will be nil . Returns : result (boolean, nil) journalIndex \u2693\ufe0e The current index for the quest. For dialogues that aren't journal-based, this will be nil . Returns : result (number, nil) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) npcClass \u2693\ufe0e Read-only . The speaker's class that the info is filtered for. Returns : result ( tes3class ) npcFaction \u2693\ufe0e Read-only . The speaker's faction that the info is filtered for. Returns : result ( tes3faction ) npcRace \u2693\ufe0e Read-only . The speaker's race that the info is filtered for. Returns : result ( tes3actor ) npcRank \u2693\ufe0e Read-only . The speaker's faction rank that the info is filtered for. Returns : result (number) npcSex \u2693\ufe0e Read-only . The speaker's sex that the info is filtered for. Returns : result (number) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) pcFaction \u2693\ufe0e Read-only . The player's joined faction that the info is filtered for. Returns : result (number) pcRank \u2693\ufe0e Read-only . The player's rank required rank in the speaker's faction. Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) text \u2693\ufe0e Read-only . String contents for the info. This is not kept in memory, and must be loaded from files for each call. Returns : result (string) type \u2693\ufe0e Read-only . The type of the info. Maps to values in tes3.dialogueType namespace. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) filter \u2693\ufe0e This method filters the associated dialogue info for given arguments and returns true if the dialogue info filtering passes. This method rises infoFilter event. local result = myObject : filter ( actor , reference , source , dialogue ) Parameters : actor ( tes3object ) reference ( tes3reference ) source (number) dialogue ( tes3dialogue ) Returns : result (boolean) findDialogue \u2693\ufe0e This method searches for the dialogue that this info belongs to. local dialogue = myObject : findDialogue () Returns : dialogue ( tes3dialogue ) runScript \u2693\ufe0e This method runs the dialogue info's associated script on a given reference. myObject : runScript ( reference ) Parameters : reference ( tes3reference ): The reference on which to run the script on.","title":"tes3dialogueInfo"},{"location":"types/tes3dialogueInfo/#tes3dialogueinfo","text":"A child for a given dialogue. Whereas a dialogue may be a conversation topic, a tes3dialogueInfo would be an individual response. This type inherits the following: tes3baseObject","title":"tes3dialogueInfo"},{"location":"types/tes3dialogueInfo/#properties","text":"","title":"Properties"},{"location":"types/tes3dialogueInfo/#actor","text":"Read-only . The speaker's actor that the info is filtered for. Returns : result ( tes3actor )","title":"actor"},{"location":"types/tes3dialogueInfo/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3dialogueInfo/#cell","text":"Read-only . The speaker's current cell that the info is filtered for. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3dialogueInfo/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3dialogueInfo/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3dialogueInfo/#disposition","text":"The minimum disposition that the info is filtered for. For journal-based dialogues, this is the same as the journalIndex property, which should be used instead. Returns : result (number)","title":"disposition"},{"location":"types/tes3dialogueInfo/#firstheardfrom","text":"The actor that the player first heard the info from. Returns : result ( tes3actor )","title":"firstHeardFrom"},{"location":"types/tes3dialogueInfo/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3dialogueInfo/#isquestfinished","text":"Quick access to the \"quest finished\" flag. For dialogues that aren't journal-based, this will be nil . Returns : result (boolean, nil)","title":"isQuestFinished"},{"location":"types/tes3dialogueInfo/#isquestname","text":"Quick access to the \"quest name\" flag. If this is true, this info contains the name of the quest. For dialogues that aren't journal-based, this will be nil . Returns : result (boolean, nil)","title":"isQuestName"},{"location":"types/tes3dialogueInfo/#isquestrestart","text":"Quick access to the \"quest restart\" flag. For dialogues that aren't journal-based, this will be nil . Returns : result (boolean, nil)","title":"isQuestRestart"},{"location":"types/tes3dialogueInfo/#journalindex","text":"The current index for the quest. For dialogues that aren't journal-based, this will be nil . Returns : result (number, nil)","title":"journalIndex"},{"location":"types/tes3dialogueInfo/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3dialogueInfo/#npcclass","text":"Read-only . The speaker's class that the info is filtered for. Returns : result ( tes3class )","title":"npcClass"},{"location":"types/tes3dialogueInfo/#npcfaction","text":"Read-only . The speaker's faction that the info is filtered for. Returns : result ( tes3faction )","title":"npcFaction"},{"location":"types/tes3dialogueInfo/#npcrace","text":"Read-only . The speaker's race that the info is filtered for. Returns : result ( tes3actor )","title":"npcRace"},{"location":"types/tes3dialogueInfo/#npcrank","text":"Read-only . The speaker's faction rank that the info is filtered for. Returns : result (number)","title":"npcRank"},{"location":"types/tes3dialogueInfo/#npcsex","text":"Read-only . The speaker's sex that the info is filtered for. Returns : result (number)","title":"npcSex"},{"location":"types/tes3dialogueInfo/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3dialogueInfo/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3dialogueInfo/#pcfaction","text":"Read-only . The player's joined faction that the info is filtered for. Returns : result (number)","title":"pcFaction"},{"location":"types/tes3dialogueInfo/#pcrank","text":"Read-only . The player's rank required rank in the speaker's faction. Returns : result (number)","title":"pcRank"},{"location":"types/tes3dialogueInfo/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3dialogueInfo/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3dialogueInfo/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3dialogueInfo/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3dialogueInfo/#text","text":"Read-only . String contents for the info. This is not kept in memory, and must be loaded from files for each call. Returns : result (string)","title":"text"},{"location":"types/tes3dialogueInfo/#type","text":"Read-only . The type of the info. Maps to values in tes3.dialogueType namespace. Returns : result (number)","title":"type"},{"location":"types/tes3dialogueInfo/#methods","text":"","title":"Methods"},{"location":"types/tes3dialogueInfo/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3dialogueInfo/#filter","text":"This method filters the associated dialogue info for given arguments and returns true if the dialogue info filtering passes. This method rises infoFilter event. local result = myObject : filter ( actor , reference , source , dialogue ) Parameters : actor ( tes3object ) reference ( tes3reference ) source (number) dialogue ( tes3dialogue ) Returns : result (boolean)","title":"filter"},{"location":"types/tes3dialogueInfo/#finddialogue","text":"This method searches for the dialogue that this info belongs to. local dialogue = myObject : findDialogue () Returns : dialogue ( tes3dialogue )","title":"findDialogue"},{"location":"types/tes3dialogueInfo/#runscript","text":"This method runs the dialogue info's associated script on a given reference. myObject : runScript ( reference ) Parameters : reference ( tes3reference ): The reference on which to run the script on.","title":"runScript"},{"location":"types/tes3directInputMouseState/","text":"tes3directInputMouseState \u2693\ufe0e A raw DirectInput mouse state. Properties \u2693\ufe0e buttons \u2693\ufe0e Read-only . The array-style access to 8 buttons states available on the mouse. Not all may be used. Returns : result (number[]) x \u2693\ufe0e A basic property of the mouse for the X-axis. Returns : result (number) y \u2693\ufe0e A basic property of the mouse for the Y-axis. Returns : result (number) z \u2693\ufe0e A basic property of the mouse for the Z-axis. This is typically the scroll wheel. Returns : result (number)","title":"tes3directInputMouseState"},{"location":"types/tes3directInputMouseState/#tes3directinputmousestate","text":"A raw DirectInput mouse state.","title":"tes3directInputMouseState"},{"location":"types/tes3directInputMouseState/#properties","text":"","title":"Properties"},{"location":"types/tes3directInputMouseState/#buttons","text":"Read-only . The array-style access to 8 buttons states available on the mouse. Not all may be used. Returns : result (number[])","title":"buttons"},{"location":"types/tes3directInputMouseState/#x","text":"A basic property of the mouse for the X-axis. Returns : result (number)","title":"x"},{"location":"types/tes3directInputMouseState/#y","text":"A basic property of the mouse for the Y-axis. Returns : result (number)","title":"y"},{"location":"types/tes3directInputMouseState/#z","text":"A basic property of the mouse for the Z-axis. This is typically the scroll wheel. Returns : result (number)","title":"z"},{"location":"types/tes3door/","text":"tes3door \u2693\ufe0e A door game object. Data specific to a single door is stored on the door reference as destination and lock attachments. See tes3reference for details. There is a special-case door with id PrisonMarker used for finding the nearest prison when the player is sent to jail. You should normally exclude this if you are iterating over all doors. Use the object.isLocationMarker property to detect these markers. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) closeSound \u2693\ufe0e The sound to be played when the door closes. Returns : result ( tes3sound ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) openSound \u2693\ufe0e The sound to be played when the door opens. Returns : result ( tes3sound ) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e Read-only . The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"Tes3door"},{"location":"types/tes3door/#tes3door","text":"A door game object. Data specific to a single door is stored on the door reference as destination and lock attachments. See tes3reference for details. There is a special-case door with id PrisonMarker used for finding the nearest prison when the player is sent to jail. You should normally exclude this if you are iterating over all doors. Use the object.isLocationMarker property to detect these markers. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject","title":"tes3door"},{"location":"types/tes3door/#properties","text":"","title":"Properties"},{"location":"types/tes3door/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3door/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3door/#closesound","text":"The sound to be played when the door closes. Returns : result ( tes3sound )","title":"closeSound"},{"location":"types/tes3door/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3door/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3door/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3door/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3door/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3door/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3door/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3door/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3door/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3door/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3door/#opensound","text":"The sound to be played when the door opens. Returns : result ( tes3sound )","title":"openSound"},{"location":"types/tes3door/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3door/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3door/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3door/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3door/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3door/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3door/#script","text":"Read-only . The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3door/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3door/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3door/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3door/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3door/#methods","text":"","title":"Methods"},{"location":"types/tes3door/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3effect/","text":"tes3effect \u2693\ufe0e A structure that defines information for an effect and its associated variables, typically found on spells, alchemy, and enchantments. Properties \u2693\ufe0e attribute \u2693\ufe0e The attribute associated with this effect, or nil if no attribute is used. Maps to values from tes3.attribute table. Returns : result (integer, nil) cost \u2693\ufe0e The base magicka cost of this effect. Returns : result (number) duration \u2693\ufe0e How long the effect should last. Returns : result (integer) id \u2693\ufe0e The base tes3magicEffect ID that the effect uses. Maps to values from tes3.effect table. Returns : result (integer) max \u2693\ufe0e The maximum magnitude of the effect. Returns : result (integer) min \u2693\ufe0e The minimum magnitude of the effect. Returns : result (integer) object \u2693\ufe0e Read-only . Fetches the tes3magicEffect for the given id used. Returns : result ( tes3magicEffect ) radius \u2693\ufe0e The radius of the effect. Returns : result (integer) rangeType \u2693\ufe0e Determines if the effect is self, touch, or target ranged. Maps to tes3.effectRange constants. Returns : result (integer) skill \u2693\ufe0e The skill associated with this effect, or nil if no skill is used. Maps to values from tes3.skill table. Returns : result (integer, nil)","title":"Tes3effect"},{"location":"types/tes3effect/#tes3effect","text":"A structure that defines information for an effect and its associated variables, typically found on spells, alchemy, and enchantments.","title":"tes3effect"},{"location":"types/tes3effect/#properties","text":"","title":"Properties"},{"location":"types/tes3effect/#attribute","text":"The attribute associated with this effect, or nil if no attribute is used. Maps to values from tes3.attribute table. Returns : result (integer, nil)","title":"attribute"},{"location":"types/tes3effect/#cost","text":"The base magicka cost of this effect. Returns : result (number)","title":"cost"},{"location":"types/tes3effect/#duration","text":"How long the effect should last. Returns : result (integer)","title":"duration"},{"location":"types/tes3effect/#id","text":"The base tes3magicEffect ID that the effect uses. Maps to values from tes3.effect table. Returns : result (integer)","title":"id"},{"location":"types/tes3effect/#max","text":"The maximum magnitude of the effect. Returns : result (integer)","title":"max"},{"location":"types/tes3effect/#min","text":"The minimum magnitude of the effect. Returns : result (integer)","title":"min"},{"location":"types/tes3effect/#object","text":"Read-only . Fetches the tes3magicEffect for the given id used. Returns : result ( tes3magicEffect )","title":"object"},{"location":"types/tes3effect/#radius","text":"The radius of the effect. Returns : result (integer)","title":"radius"},{"location":"types/tes3effect/#rangetype","text":"Determines if the effect is self, touch, or target ranged. Maps to tes3.effectRange constants. Returns : result (integer)","title":"rangeType"},{"location":"types/tes3effect/#skill","text":"The skill associated with this effect, or nil if no skill is used. Maps to values from tes3.skill table. Returns : result (integer, nil)","title":"skill"},{"location":"types/tes3enchantment/","text":"tes3enchantment \u2693\ufe0e An enchantment game object. This type inherits the following: tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) castType \u2693\ufe0e The enchantment's cast type. Maps to tes3.enchantmentType constants. Returns : result (number) chargeCost \u2693\ufe0e The cost of using the enchantment. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) effects \u2693\ufe0e Read-only . An array-style table of the tes3effect data on the object. Returns : result ( tes3effect []) Example: Determining if an enchantment is hostile The following function returns true if the enchantment contains at least one hostile effect. This criterion can be considered subjective, but that rule is also used by the game to determine if use of enchantment on an NPC is considered an offense. --- @param magicSource tes3spell|tes3enchantment|tes3alchemy local function isSpellHostile ( magicSource ) for _ , effect in ipairs ( magicSource . effects ) do if ( effect . object . isHarmful ) then -- If one of the spell's effects is harmful, then -- `true` is returned and function ends here. return true end end -- If no harmful effect was found then return `false`. return false end flags \u2693\ufe0e A bit field for the enchantment's flags. Returns : result (number) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) maxCharge \u2693\ufe0e The maximum charge for the associated enchantment. Returns : result (number) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) createCopy \u2693\ufe0e Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3enchantment ) getActiveEffectCount \u2693\ufe0e Returns the amount of effects the tes3enchantment object has. local count = myObject : getActiveEffectCount () Returns : count (number) getFirstIndexOfEffect \u2693\ufe0e Returns the index of a first effect of a given effectId in the parent tes3enchantment object. local index = myObject : getFirstIndexOfEffect ( effectId ) Parameters : effectId (number): The effectId to perform a check for. Maps to tes3.effect constants, including magic effects added with tes3.addMagicEffect() . Returns : index (number)","title":"Tes3enchantment"},{"location":"types/tes3enchantment/#tes3enchantment","text":"An enchantment game object. This type inherits the following: tes3object , tes3baseObject","title":"tes3enchantment"},{"location":"types/tes3enchantment/#properties","text":"","title":"Properties"},{"location":"types/tes3enchantment/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3enchantment/#casttype","text":"The enchantment's cast type. Maps to tes3.enchantmentType constants. Returns : result (number)","title":"castType"},{"location":"types/tes3enchantment/#chargecost","text":"The cost of using the enchantment. Returns : result (number)","title":"chargeCost"},{"location":"types/tes3enchantment/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3enchantment/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3enchantment/#effects","text":"Read-only . An array-style table of the tes3effect data on the object. Returns : result ( tes3effect []) Example: Determining if an enchantment is hostile The following function returns true if the enchantment contains at least one hostile effect. This criterion can be considered subjective, but that rule is also used by the game to determine if use of enchantment on an NPC is considered an offense. --- @param magicSource tes3spell|tes3enchantment|tes3alchemy local function isSpellHostile ( magicSource ) for _ , effect in ipairs ( magicSource . effects ) do if ( effect . object . isHarmful ) then -- If one of the spell's effects is harmful, then -- `true` is returned and function ends here. return true end end -- If no harmful effect was found then return `false`. return false end","title":"effects"},{"location":"types/tes3enchantment/#flags","text":"A bit field for the enchantment's flags. Returns : result (number)","title":"flags"},{"location":"types/tes3enchantment/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3enchantment/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3enchantment/#maxcharge","text":"The maximum charge for the associated enchantment. Returns : result (number)","title":"maxCharge"},{"location":"types/tes3enchantment/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3enchantment/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3enchantment/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3enchantment/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3enchantment/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3enchantment/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3enchantment/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3enchantment/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3enchantment/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3enchantment/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3enchantment/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3enchantment/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3enchantment/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3enchantment/#methods","text":"","title":"Methods"},{"location":"types/tes3enchantment/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3enchantment/#createcopy","text":"Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3enchantment )","title":"createCopy"},{"location":"types/tes3enchantment/#getactiveeffectcount","text":"Returns the amount of effects the tes3enchantment object has. local count = myObject : getActiveEffectCount () Returns : count (number)","title":"getActiveEffectCount"},{"location":"types/tes3enchantment/#getfirstindexofeffect","text":"Returns the index of a first effect of a given effectId in the parent tes3enchantment object. local index = myObject : getFirstIndexOfEffect ( effectId ) Parameters : effectId (number): The effectId to perform a check for. Maps to tes3.effect constants, including magic effects added with tes3.addMagicEffect() . Returns : index (number)","title":"getFirstIndexOfEffect"},{"location":"types/tes3equipmentStack/","text":"tes3equipmentStack \u2693\ufe0e A simple container that holds a relationship between an item, and any associated item data. Properties \u2693\ufe0e itemData \u2693\ufe0e Item data associated with the stack's object, if any. All equipped items except ammunition will have itemData. Returns : result ( tes3itemData ) object \u2693\ufe0e Read-only . The core game object that the stack represents. Returns : result ( tes3item )","title":"tes3equipmentStack"},{"location":"types/tes3equipmentStack/#tes3equipmentstack","text":"A simple container that holds a relationship between an item, and any associated item data.","title":"tes3equipmentStack"},{"location":"types/tes3equipmentStack/#properties","text":"","title":"Properties"},{"location":"types/tes3equipmentStack/#itemdata","text":"Item data associated with the stack's object, if any. All equipped items except ammunition will have itemData. Returns : result ( tes3itemData )","title":"itemData"},{"location":"types/tes3equipmentStack/#object","text":"Read-only . The core game object that the stack represents. Returns : result ( tes3item )","title":"object"},{"location":"types/tes3equipmentStackIterator/","text":"tes3equipmentStackIterator \u2693\ufe0e A collection that can be iterated over. Contains items in a simple linked list, and stores its head/tail. Properties \u2693\ufe0e count \u2693\ufe0e Returns the amount of items in the iterator. Returns : result (integer) current \u2693\ufe0e A reference for the currently iterated node. This is used by the core game engine, but should not be accessed from lua. Returns : result ( tes3equipmentStackIteratorNode ) head \u2693\ufe0e The first node in the collection. Returns : result ( tes3equipmentStackIteratorNode ) tail \u2693\ufe0e The last node in the collection. Returns : result ( tes3equipmentStackIteratorNode )","title":"tes3equipmentStackIterator"},{"location":"types/tes3equipmentStackIterator/#tes3equipmentstackiterator","text":"A collection that can be iterated over. Contains items in a simple linked list, and stores its head/tail.","title":"tes3equipmentStackIterator"},{"location":"types/tes3equipmentStackIterator/#properties","text":"","title":"Properties"},{"location":"types/tes3equipmentStackIterator/#count","text":"Returns the amount of items in the iterator. Returns : result (integer)","title":"count"},{"location":"types/tes3equipmentStackIterator/#current","text":"A reference for the currently iterated node. This is used by the core game engine, but should not be accessed from lua. Returns : result ( tes3equipmentStackIteratorNode )","title":"current"},{"location":"types/tes3equipmentStackIterator/#head","text":"The first node in the collection. Returns : result ( tes3equipmentStackIteratorNode )","title":"head"},{"location":"types/tes3equipmentStackIterator/#tail","text":"The last node in the collection. Returns : result ( tes3equipmentStackIteratorNode )","title":"tail"},{"location":"types/tes3equipmentStackIteratorNode/","text":"tes3equipmentStackIteratorNode \u2693\ufe0e A node from a collection, which has a link to the previous and next node, as well as its contained data. Properties \u2693\ufe0e nextNode \u2693\ufe0e The next node in the collection. Returns : result ( tes3equipmentStackIteratorNode ) nodeData \u2693\ufe0e The equipment stack object stored in the node. Returns : result ( tes3equipmentStack ) previousNode \u2693\ufe0e The previous node in the collection. Returns : result ( tes3equipmentStackIteratorNode )","title":"tes3equipmentStackIteratorNode"},{"location":"types/tes3equipmentStackIteratorNode/#tes3equipmentstackiteratornode","text":"A node from a collection, which has a link to the previous and next node, as well as its contained data.","title":"tes3equipmentStackIteratorNode"},{"location":"types/tes3equipmentStackIteratorNode/#properties","text":"","title":"Properties"},{"location":"types/tes3equipmentStackIteratorNode/#nextnode","text":"The next node in the collection. Returns : result ( tes3equipmentStackIteratorNode )","title":"nextNode"},{"location":"types/tes3equipmentStackIteratorNode/#nodedata","text":"The equipment stack object stored in the node. Returns : result ( tes3equipmentStack )","title":"nodeData"},{"location":"types/tes3equipmentStackIteratorNode/#previousnode","text":"The previous node in the collection. Returns : result ( tes3equipmentStackIteratorNode )","title":"previousNode"},{"location":"types/tes3faction/","text":"tes3faction \u2693\ufe0e A faction game object. This type inherits the following: tes3baseObject Properties \u2693\ufe0e attributes \u2693\ufe0e Read-only . An array-style table holding the two attributes that govern advancement. Maps to values in tes3.attribute namespace. Returns : result (number[]) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The faction's player-facing name. Returns : result (string) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) playerExpelled \u2693\ufe0e The player's expelled state in the faction. Returns : result (boolean) playerJoined \u2693\ufe0e The player's join state for the faction. Returns : result (boolean) playerRank \u2693\ufe0e The player's current rank in the faction. Returns : result (number) playerReputation \u2693\ufe0e The player's current reputation in the faction. Returns : result (number) ranks \u2693\ufe0e Read-only . An array-style table holding the ten related tes3factionRank s. Returns : result ( tes3factionRank []) reactions \u2693\ufe0e Read-only . A collection of tes3factionReaction s. Returns : result ( tes3factionReaction []) skills \u2693\ufe0e Read-only . An array-style table holding the seven skills that govern advancement. Maps to values in tes3.skill namespace. Returns : result (number[]) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) getLowestJoinedReaction \u2693\ufe0e For this faction, this function finds the worst reaction for another faction that the player has joined. It returns that reaction and its associated faction, or nil for both values if the no relationship is applicable. local reaction , faction = myObject : getLowestJoinedReaction () Returns : reaction (number, nil): The reaction, if any, that is worst for the player. faction ( tes3faction , nil): The faction association, if any, that is worst for the player. getRankName \u2693\ufe0e This function fetches the player-facing name of a rank in the faction. local result = myObject : getRankName ( rank ) Parameters : rank (number): A rank number in range [0, 9] inclusive. Returns : result (string) getReactionWithFaction \u2693\ufe0e Returns a reaction value for another faction, or nil if no relationship exists between the two factions. local reaction = myObject : getReactionWithFaction ( faction ) Parameters : faction ( tes3faction ): Another faction to get a reaction for. Returns : reaction (number, nil): The reaction, if any, with the other faction. setRankName \u2693\ufe0e This function changes the player-facing name of a given rank in the faction. myObject : setRankName ( rank , name ) Parameters : rank (number): A rank number in range [0, 9] inclusive. name (string): A new name to set.","title":"Tes3faction"},{"location":"types/tes3faction/#tes3faction","text":"A faction game object. This type inherits the following: tes3baseObject","title":"tes3faction"},{"location":"types/tes3faction/#properties","text":"","title":"Properties"},{"location":"types/tes3faction/#attributes","text":"Read-only . An array-style table holding the two attributes that govern advancement. Maps to values in tes3.attribute namespace. Returns : result (number[])","title":"attributes"},{"location":"types/tes3faction/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3faction/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3faction/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3faction/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3faction/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3faction/#name","text":"The faction's player-facing name. Returns : result (string)","title":"name"},{"location":"types/tes3faction/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3faction/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3faction/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3faction/#playerexpelled","text":"The player's expelled state in the faction. Returns : result (boolean)","title":"playerExpelled"},{"location":"types/tes3faction/#playerjoined","text":"The player's join state for the faction. Returns : result (boolean)","title":"playerJoined"},{"location":"types/tes3faction/#playerrank","text":"The player's current rank in the faction. Returns : result (number)","title":"playerRank"},{"location":"types/tes3faction/#playerreputation","text":"The player's current reputation in the faction. Returns : result (number)","title":"playerReputation"},{"location":"types/tes3faction/#ranks","text":"Read-only . An array-style table holding the ten related tes3factionRank s. Returns : result ( tes3factionRank [])","title":"ranks"},{"location":"types/tes3faction/#reactions","text":"Read-only . A collection of tes3factionReaction s. Returns : result ( tes3factionReaction [])","title":"reactions"},{"location":"types/tes3faction/#skills","text":"Read-only . An array-style table holding the seven skills that govern advancement. Maps to values in tes3.skill namespace. Returns : result (number[])","title":"skills"},{"location":"types/tes3faction/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3faction/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3faction/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3faction/#methods","text":"","title":"Methods"},{"location":"types/tes3faction/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3faction/#getlowestjoinedreaction","text":"For this faction, this function finds the worst reaction for another faction that the player has joined. It returns that reaction and its associated faction, or nil for both values if the no relationship is applicable. local reaction , faction = myObject : getLowestJoinedReaction () Returns : reaction (number, nil): The reaction, if any, that is worst for the player. faction ( tes3faction , nil): The faction association, if any, that is worst for the player.","title":"getLowestJoinedReaction"},{"location":"types/tes3faction/#getrankname","text":"This function fetches the player-facing name of a rank in the faction. local result = myObject : getRankName ( rank ) Parameters : rank (number): A rank number in range [0, 9] inclusive. Returns : result (string)","title":"getRankName"},{"location":"types/tes3faction/#getreactionwithfaction","text":"Returns a reaction value for another faction, or nil if no relationship exists between the two factions. local reaction = myObject : getReactionWithFaction ( faction ) Parameters : faction ( tes3faction ): Another faction to get a reaction for. Returns : reaction (number, nil): The reaction, if any, with the other faction.","title":"getReactionWithFaction"},{"location":"types/tes3faction/#setrankname","text":"This function changes the player-facing name of a given rank in the faction. myObject : setRankName ( rank , name ) Parameters : rank (number): A rank number in range [0, 9] inclusive. name (string): A new name to set.","title":"setRankName"},{"location":"types/tes3factionRank/","text":"tes3factionRank \u2693\ufe0e A container describing an individual rank inside a faction. In Morrowind, the player needs to meet all the requirements to advance to a rank in a faction. These include two of the faction's favored attributes, any two of the faction's favored skills and reputation requirement. Properties \u2693\ufe0e attributes \u2693\ufe0e Read-only . An array-style table holding the two attribute requirements. Returns : result (number[]) reputation \u2693\ufe0e The reputation requirement to advance to this rank. Returns : result (number) skills \u2693\ufe0e Read-only . An array-style table holding the two skill requirements. Returns : result (number[])","title":"tes3factionRank"},{"location":"types/tes3factionRank/#tes3factionrank","text":"A container describing an individual rank inside a faction. In Morrowind, the player needs to meet all the requirements to advance to a rank in a faction. These include two of the faction's favored attributes, any two of the faction's favored skills and reputation requirement.","title":"tes3factionRank"},{"location":"types/tes3factionRank/#properties","text":"","title":"Properties"},{"location":"types/tes3factionRank/#attributes","text":"Read-only . An array-style table holding the two attribute requirements. Returns : result (number[])","title":"attributes"},{"location":"types/tes3factionRank/#reputation","text":"The reputation requirement to advance to this rank. Returns : result (number)","title":"reputation"},{"location":"types/tes3factionRank/#skills","text":"Read-only . An array-style table holding the two skill requirements. Returns : result (number[])","title":"skills"},{"location":"types/tes3factionReaction/","text":"tes3factionReaction \u2693\ufe0e A container mapping a reputation for an associated faction. Properties \u2693\ufe0e faction \u2693\ufe0e Read-only . The faction whose reaction will be adjusted. Returns : result ( tes3faction ) reputation \u2693\ufe0e The reaction adjustment for the faction. Returns : result (number)","title":"tes3factionReaction"},{"location":"types/tes3factionReaction/#tes3factionreaction","text":"A container mapping a reputation for an associated faction.","title":"tes3factionReaction"},{"location":"types/tes3factionReaction/#properties","text":"","title":"Properties"},{"location":"types/tes3factionReaction/#faction","text":"Read-only . The faction whose reaction will be adjusted. Returns : result ( tes3faction )","title":"faction"},{"location":"types/tes3factionReaction/#reputation","text":"The reaction adjustment for the faction. Returns : result (number)","title":"reputation"},{"location":"types/tes3fader/","text":"tes3fader \u2693\ufe0e An object that applies a graphical effect on the screen, such as screen glare or damage coloring. For an example of how to set up a custom fader, see fadersCreated event. Properties \u2693\ufe0e active \u2693\ufe0e The activation state for the fader. Setting this effectively calls activate/deactivate. Returns : result (boolean) Methods \u2693\ufe0e activate \u2693\ufe0e Activates a deactivated fader. myObject : activate () deactivate \u2693\ufe0e Deactivates an activated fader. myObject : deactivate () fadeIn \u2693\ufe0e Transitions the fader to a value of 1 over a given duration. myObject : fadeIn ({ duration = ... }) Parameters : params (table) duration (number): Default : 1 . The time it takes to fade, in seconds. fadeOut \u2693\ufe0e Transitions the fader to a value of 0 over a given duration. myObject : fadeOut ({ duration = ... }) Parameters : params (table) duration (number): Default : 1 . The time it takes to fade, in seconds. fadeTo \u2693\ufe0e Transitions the fader to a value over a given duration. myObject : fadeTo ({ value = ..., duration = ... }) Parameters : params (table) value (number): Default : 1 . The value to fade to. duration (number): Default : 1 . The time it takes to fade, in seconds. setColor \u2693\ufe0e Applies a coloring effect to the fader. A fader without a texture will apply a colouring effect over the screen. The colour set here can completely change the color of the fader's texture. local result = myObject : setColor ({ color = ..., flag = ... }) Parameters : params (table) color ( tes3vector3 , table): The RGB values to set in [0.0, 1.0] range. flag (boolean): Default : false . Returns : result (boolean) setTexture \u2693\ufe0e This method allows changing the texture of the fader. myObject : setTexture ( path ) Parameters : path (string): A path for the texture that will be displayed on screen. update \u2693\ufe0e Updates the fader for the current frame. This method needs to be called each frame for fader to be present. myObject : update () updateMaterialProperty \u2693\ufe0e Updates the fader's alpha. The fader needs to be active. myObject : updateMaterialProperty ( value ) Parameters : value (number): The opacity of the fader in range [0.0, 1.0] Functions \u2693\ufe0e new \u2693\ufe0e Creates a new fader, and adds it to the fader system. local fader = tes3fader . new ( distance , unknownBool ) Parameters : distance (number): Optional . If no distance is provided, a distance will be calculated based on current amount of faders, tes3.worldController.projectionDistance and crosshair node's translation.y . unknownBool (boolean): Default : true . Returns : fader ( tes3fader ) Example: Creating a new fader -- This is a working example. You are encouraged to create a new file -- main.lua, paste this code and see the results in-game! -- Use `u` key to activate the fader. -- Use `l` and `k` keys to increase or decrease the fader's opacity. -- This variable is used to store our fader. local fader = nil local function createFader () fader = tes3fader . new () fader : setColor ({ -- This changes the color of our fader to green. -- The RGB values are in range [0.0, 1.0]. color = { 0.0 , 1.0 , 0.0 }, }) -- The fader needs to be updated every frame to be rendered correctly. -- You may notice that for this event we have registered a function with -- no name. That is an anonymous function. It works exactly the same as -- any other function. We have a need to register this function inside -- our createFader() function, since our `fader` variable is `nil` at start -- (look up). We can't call fader:update() if fader is `nil`. event . register ( tes3 . event . enterFrame , function () fader : update () end ) end -- The fader needs to be created during `fadersCreated` event, -- so our createFader() function is registered for that event. event . register ( tes3 . event . fadersCreated , createFader ) local opacity = 0.1 local function activateFader () -- The fader needs to be activated first to be visible. fader : activate () -- Now we change its visibility. fader : fadeTo ({ value = opacity , duration = 3 , }) tes3 . messageBox ( \"Welcome to the Fallout mode!\" ) end -- We registered our activateFader() function on keyDown event, filtered for `u` key. -- That makes our activateFader() function called only when `u` is pressed. event . register ( tes3 . event . keyDown , activateFader , { filter = tes3 . scanCode . u }) local function increaseOpacity () -- The fader's opacity is in [0.0, 1.0] range. -- Make sure we don't exceed it. if opacity <= 0.9 then opacity = opacity + 0.1 else return end -- This method sets the current opacity of our fader -- to the value of `opacity` variable fader : updateMaterialProperty ( opacity ) -- The \"\\n\" sign means insert a new line here. -- The \"%.1f\" code means insert the opacity's value in this text. -- The \".1\" part means show 1 decimal after the decimal point. tes3 . messageBox ( \"Fader opacity increased. \\n Current opacity: %.1f\" , opacity ) end event . register ( tes3 . event . keyDown , increaseOpacity , { filter = tes3 . scanCode . l }) local function decreaseOpacity () if opacity >= 0.1 then opacity = opacity - 0.1 else return end fader : updateMaterialProperty ( opacity ) tes3 . messageBox ( \"Fader opacity decreased. \\n Current opacity: %.1f\" , opacity ) end event . register ( tes3 . event . keyDown , decreaseOpacity , { filter = tes3 . scanCode . k })","title":"Tes3fader"},{"location":"types/tes3fader/#tes3fader","text":"An object that applies a graphical effect on the screen, such as screen glare or damage coloring. For an example of how to set up a custom fader, see fadersCreated event.","title":"tes3fader"},{"location":"types/tes3fader/#properties","text":"","title":"Properties"},{"location":"types/tes3fader/#active","text":"The activation state for the fader. Setting this effectively calls activate/deactivate. Returns : result (boolean)","title":"active"},{"location":"types/tes3fader/#methods","text":"","title":"Methods"},{"location":"types/tes3fader/#activate","text":"Activates a deactivated fader. myObject : activate ()","title":"activate"},{"location":"types/tes3fader/#deactivate","text":"Deactivates an activated fader. myObject : deactivate ()","title":"deactivate"},{"location":"types/tes3fader/#fadein","text":"Transitions the fader to a value of 1 over a given duration. myObject : fadeIn ({ duration = ... }) Parameters : params (table) duration (number): Default : 1 . The time it takes to fade, in seconds.","title":"fadeIn"},{"location":"types/tes3fader/#fadeout","text":"Transitions the fader to a value of 0 over a given duration. myObject : fadeOut ({ duration = ... }) Parameters : params (table) duration (number): Default : 1 . The time it takes to fade, in seconds.","title":"fadeOut"},{"location":"types/tes3fader/#fadeto","text":"Transitions the fader to a value over a given duration. myObject : fadeTo ({ value = ..., duration = ... }) Parameters : params (table) value (number): Default : 1 . The value to fade to. duration (number): Default : 1 . The time it takes to fade, in seconds.","title":"fadeTo"},{"location":"types/tes3fader/#setcolor","text":"Applies a coloring effect to the fader. A fader without a texture will apply a colouring effect over the screen. The colour set here can completely change the color of the fader's texture. local result = myObject : setColor ({ color = ..., flag = ... }) Parameters : params (table) color ( tes3vector3 , table): The RGB values to set in [0.0, 1.0] range. flag (boolean): Default : false . Returns : result (boolean)","title":"setColor"},{"location":"types/tes3fader/#settexture","text":"This method allows changing the texture of the fader. myObject : setTexture ( path ) Parameters : path (string): A path for the texture that will be displayed on screen.","title":"setTexture"},{"location":"types/tes3fader/#update","text":"Updates the fader for the current frame. This method needs to be called each frame for fader to be present. myObject : update ()","title":"update"},{"location":"types/tes3fader/#updatematerialproperty","text":"Updates the fader's alpha. The fader needs to be active. myObject : updateMaterialProperty ( value ) Parameters : value (number): The opacity of the fader in range [0.0, 1.0]","title":"updateMaterialProperty"},{"location":"types/tes3fader/#functions","text":"","title":"Functions"},{"location":"types/tes3fader/#new","text":"Creates a new fader, and adds it to the fader system. local fader = tes3fader . new ( distance , unknownBool ) Parameters : distance (number): Optional . If no distance is provided, a distance will be calculated based on current amount of faders, tes3.worldController.projectionDistance and crosshair node's translation.y . unknownBool (boolean): Default : true . Returns : fader ( tes3fader ) Example: Creating a new fader -- This is a working example. You are encouraged to create a new file -- main.lua, paste this code and see the results in-game! -- Use `u` key to activate the fader. -- Use `l` and `k` keys to increase or decrease the fader's opacity. -- This variable is used to store our fader. local fader = nil local function createFader () fader = tes3fader . new () fader : setColor ({ -- This changes the color of our fader to green. -- The RGB values are in range [0.0, 1.0]. color = { 0.0 , 1.0 , 0.0 }, }) -- The fader needs to be updated every frame to be rendered correctly. -- You may notice that for this event we have registered a function with -- no name. That is an anonymous function. It works exactly the same as -- any other function. We have a need to register this function inside -- our createFader() function, since our `fader` variable is `nil` at start -- (look up). We can't call fader:update() if fader is `nil`. event . register ( tes3 . event . enterFrame , function () fader : update () end ) end -- The fader needs to be created during `fadersCreated` event, -- so our createFader() function is registered for that event. event . register ( tes3 . event . fadersCreated , createFader ) local opacity = 0.1 local function activateFader () -- The fader needs to be activated first to be visible. fader : activate () -- Now we change its visibility. fader : fadeTo ({ value = opacity , duration = 3 , }) tes3 . messageBox ( \"Welcome to the Fallout mode!\" ) end -- We registered our activateFader() function on keyDown event, filtered for `u` key. -- That makes our activateFader() function called only when `u` is pressed. event . register ( tes3 . event . keyDown , activateFader , { filter = tes3 . scanCode . u }) local function increaseOpacity () -- The fader's opacity is in [0.0, 1.0] range. -- Make sure we don't exceed it. if opacity <= 0.9 then opacity = opacity + 0.1 else return end -- This method sets the current opacity of our fader -- to the value of `opacity` variable fader : updateMaterialProperty ( opacity ) -- The \"\\n\" sign means insert a new line here. -- The \"%.1f\" code means insert the opacity's value in this text. -- The \".1\" part means show 1 decimal after the decimal point. tes3 . messageBox ( \"Fader opacity increased. \\n Current opacity: %.1f\" , opacity ) end event . register ( tes3 . event . keyDown , increaseOpacity , { filter = tes3 . scanCode . l }) local function decreaseOpacity () if opacity >= 0.1 then opacity = opacity - 0.1 else return end fader : updateMaterialProperty ( opacity ) tes3 . messageBox ( \"Fader opacity decreased. \\n Current opacity: %.1f\" , opacity ) end event . register ( tes3 . event . keyDown , decreaseOpacity , { filter = tes3 . scanCode . k })","title":"new"},{"location":"types/tes3game/","text":"tes3game \u2693\ufe0e A core game object used for storing game settings. Properties \u2693\ufe0e activationAmbientLight \u2693\ufe0e Read-only . An ambiental light inside the worldObjectRoot . Returns : result ( niAmbientLight ) debugRoot \u2693\ufe0e Read-only . Access to the root of the scene graph of the Debug menu layer. Returns : result ( niNode ) fogProperty \u2693\ufe0e Read-only . No description yet available. Returns : result ( niFogProperty ) parentWindowHandle \u2693\ufe0e Read-only . The Windows HWND for the parent window. Returns : result (number) playerTarget \u2693\ufe0e Read-only . The current activation target. Returns : result ( tes3reference ) renderDistance \u2693\ufe0e The game's rendering distance. Returns : result (number) sceneGraphCollideString \u2693\ufe0e Read-only . No description yet available. Returns : result ( niNode ) sceneGraphGridString \u2693\ufe0e Read-only . No description yet available. Returns : result ( niNode ) sceneGraphTextureString \u2693\ufe0e Read-only . No description yet available. Returns : result ( niNode ) screenShotsEnabled \u2693\ufe0e State on if screenshots are enabled. Returns : result (boolean) screenX \u2693\ufe0e Read-only . The screen's horizontal position. Returns : result (number) screenY \u2693\ufe0e Read-only . The screen's vertical position. Returns : result (number) soundQuality \u2693\ufe0e Sound quality level. Returns : result (number) volumeEffect \u2693\ufe0e Mix volumes for effects. Returns : result (number) volumeFootsteps \u2693\ufe0e Mix volumes for footsteps. Returns : result (number) volumeMaster \u2693\ufe0e Mix volumes for all sounds. Returns : result (number) volumeMedia \u2693\ufe0e Mix volumes for music. Returns : result (number) volumeVoice \u2693\ufe0e Mix volumes for voices. Returns : result (number) windowHandle \u2693\ufe0e Read-only . The Windows HWND for the window. Returns : result (number) wireframeProperty \u2693\ufe0e Read-only . The reused wireframe property, applied when toggling wireframe rendering. Returns : result ( niProperty ) worldLandscapeRoot \u2693\ufe0e Read-only . Access to the root of the scene graph of all the currently loaded terrain. It's nine cells in total when the player is in exterior cell. While the player is in interior cell this node is culled. Returns : result ( niNode ) worldObjectRoot \u2693\ufe0e Read-only . Access to the root of the scene graph containing all the static objects, and lights that can't be picked up. In addition, the player's scene graph is a child node of this root node. Returns : result ( niNode ) worldPickRoot \u2693\ufe0e Read-only . Access to the root of the scene graph containing all the objects that can be interacted with (NPCs, items, harvestable plants, activators, doors...), but also some objects that are only rendered in the Construction Set such as sound emmiting activator objects with EditorMarker.NIF mesh. Returns : result ( niNode ) worldRoot \u2693\ufe0e Read-only . Access to the root of the world scene graph. Contains all the 3D geometry. All the other available world root nodes are child nodes of the world root. Returns : result ( niNode ) Methods \u2693\ufe0e clearTarget \u2693\ufe0e Clears data related to activation, resetting what the player can activate. myObject : clearTarget () setGamma \u2693\ufe0e This method allows changing gamma correction. myObject : setGamma ( value ) Parameters : value (number)","title":"Tes3game"},{"location":"types/tes3game/#tes3game","text":"A core game object used for storing game settings.","title":"tes3game"},{"location":"types/tes3game/#properties","text":"","title":"Properties"},{"location":"types/tes3game/#activationambientlight","text":"Read-only . An ambiental light inside the worldObjectRoot . Returns : result ( niAmbientLight )","title":"activationAmbientLight"},{"location":"types/tes3game/#debugroot","text":"Read-only . Access to the root of the scene graph of the Debug menu layer. Returns : result ( niNode )","title":"debugRoot"},{"location":"types/tes3game/#fogproperty","text":"Read-only . No description yet available. Returns : result ( niFogProperty )","title":"fogProperty"},{"location":"types/tes3game/#parentwindowhandle","text":"Read-only . The Windows HWND for the parent window. Returns : result (number)","title":"parentWindowHandle"},{"location":"types/tes3game/#playertarget","text":"Read-only . The current activation target. Returns : result ( tes3reference )","title":"playerTarget"},{"location":"types/tes3game/#renderdistance","text":"The game's rendering distance. Returns : result (number)","title":"renderDistance"},{"location":"types/tes3game/#scenegraphcollidestring","text":"Read-only . No description yet available. Returns : result ( niNode )","title":"sceneGraphCollideString"},{"location":"types/tes3game/#scenegraphgridstring","text":"Read-only . No description yet available. Returns : result ( niNode )","title":"sceneGraphGridString"},{"location":"types/tes3game/#scenegraphtexturestring","text":"Read-only . No description yet available. Returns : result ( niNode )","title":"sceneGraphTextureString"},{"location":"types/tes3game/#screenshotsenabled","text":"State on if screenshots are enabled. Returns : result (boolean)","title":"screenShotsEnabled"},{"location":"types/tes3game/#screenx","text":"Read-only . The screen's horizontal position. Returns : result (number)","title":"screenX"},{"location":"types/tes3game/#screeny","text":"Read-only . The screen's vertical position. Returns : result (number)","title":"screenY"},{"location":"types/tes3game/#soundquality","text":"Sound quality level. Returns : result (number)","title":"soundQuality"},{"location":"types/tes3game/#volumeeffect","text":"Mix volumes for effects. Returns : result (number)","title":"volumeEffect"},{"location":"types/tes3game/#volumefootsteps","text":"Mix volumes for footsteps. Returns : result (number)","title":"volumeFootsteps"},{"location":"types/tes3game/#volumemaster","text":"Mix volumes for all sounds. Returns : result (number)","title":"volumeMaster"},{"location":"types/tes3game/#volumemedia","text":"Mix volumes for music. Returns : result (number)","title":"volumeMedia"},{"location":"types/tes3game/#volumevoice","text":"Mix volumes for voices. Returns : result (number)","title":"volumeVoice"},{"location":"types/tes3game/#windowhandle","text":"Read-only . The Windows HWND for the window. Returns : result (number)","title":"windowHandle"},{"location":"types/tes3game/#wireframeproperty","text":"Read-only . The reused wireframe property, applied when toggling wireframe rendering. Returns : result ( niProperty )","title":"wireframeProperty"},{"location":"types/tes3game/#worldlandscaperoot","text":"Read-only . Access to the root of the scene graph of all the currently loaded terrain. It's nine cells in total when the player is in exterior cell. While the player is in interior cell this node is culled. Returns : result ( niNode )","title":"worldLandscapeRoot"},{"location":"types/tes3game/#worldobjectroot","text":"Read-only . Access to the root of the scene graph containing all the static objects, and lights that can't be picked up. In addition, the player's scene graph is a child node of this root node. Returns : result ( niNode )","title":"worldObjectRoot"},{"location":"types/tes3game/#worldpickroot","text":"Read-only . Access to the root of the scene graph containing all the objects that can be interacted with (NPCs, items, harvestable plants, activators, doors...), but also some objects that are only rendered in the Construction Set such as sound emmiting activator objects with EditorMarker.NIF mesh. Returns : result ( niNode )","title":"worldPickRoot"},{"location":"types/tes3game/#worldroot","text":"Read-only . Access to the root of the world scene graph. Contains all the 3D geometry. All the other available world root nodes are child nodes of the world root. Returns : result ( niNode )","title":"worldRoot"},{"location":"types/tes3game/#methods","text":"","title":"Methods"},{"location":"types/tes3game/#cleartarget","text":"Clears data related to activation, resetting what the player can activate. myObject : clearTarget ()","title":"clearTarget"},{"location":"types/tes3game/#setgamma","text":"This method allows changing gamma correction. myObject : setGamma ( value ) Parameters : value (number)","title":"setGamma"},{"location":"types/tes3gameFile/","text":"tes3gameFile \u2693\ufe0e Represents a loaded ESM, ESP, or ESS file. Properties \u2693\ufe0e author \u2693\ufe0e Read-only . The file's author. Returns : result (string) cellName \u2693\ufe0e Read-only . The current cell, from a save game. Returns : result (string) currentHealth \u2693\ufe0e Read-only . The player's health, from a save game. Returns : result (number) day \u2693\ufe0e Read-only . The current day, from a save game. Returns : result (number) daysPassed \u2693\ufe0e Read-only . The number of days passed, from a save game. Returns : result (number) description \u2693\ufe0e Read-only . The description of the file. Returns : result (string) filename \u2693\ufe0e Read-only . The simple filename. Returns : result (string) fileSize \u2693\ufe0e Read-only . The size of the file. Returns : result (number) gameHour \u2693\ufe0e Read-only . The current game hour, from a save game. Returns : result (number) highestFormID \u2693\ufe0e Read-only . No description yet available. Returns : result (number) masterFileSizes \u2693\ufe0e Read-only . An array-style table of strings containing the file sizes of masters. Returns : result (number[]) masterNames \u2693\ufe0e Read-only . An array-style table of strings containing the name of master files. Returns : result (string[]) masters \u2693\ufe0e Read-only . An array-style table of the tes3gameFiles that this is dependent upon. Returns : result ( tes3gameFile []) maxHealth \u2693\ufe0e Read-only . The player's maximum health, from a save game. Returns : result (number) modifiedTime \u2693\ufe0e Read-only . The timestamp that the file was modified. Returns : result (string) month \u2693\ufe0e Read-only . The current month, from a save game. Returns : result (number) path \u2693\ufe0e Read-only . The path to the file. Returns : result (string) playerName \u2693\ufe0e Read-only . The player's name, from a save game. Returns : result (string) year \u2693\ufe0e Read-only . The current year, from a save game. Returns : result (number) Methods \u2693\ufe0e deleteFile \u2693\ufe0e Deletes the file. myObject : deleteFile ()","title":"tes3gameFile"},{"location":"types/tes3gameFile/#tes3gamefile","text":"Represents a loaded ESM, ESP, or ESS file.","title":"tes3gameFile"},{"location":"types/tes3gameFile/#properties","text":"","title":"Properties"},{"location":"types/tes3gameFile/#author","text":"Read-only . The file's author. Returns : result (string)","title":"author"},{"location":"types/tes3gameFile/#cellname","text":"Read-only . The current cell, from a save game. Returns : result (string)","title":"cellName"},{"location":"types/tes3gameFile/#currenthealth","text":"Read-only . The player's health, from a save game. Returns : result (number)","title":"currentHealth"},{"location":"types/tes3gameFile/#day","text":"Read-only . The current day, from a save game. Returns : result (number)","title":"day"},{"location":"types/tes3gameFile/#dayspassed","text":"Read-only . The number of days passed, from a save game. Returns : result (number)","title":"daysPassed"},{"location":"types/tes3gameFile/#description","text":"Read-only . The description of the file. Returns : result (string)","title":"description"},{"location":"types/tes3gameFile/#filename","text":"Read-only . The simple filename. Returns : result (string)","title":"filename"},{"location":"types/tes3gameFile/#filesize","text":"Read-only . The size of the file. Returns : result (number)","title":"fileSize"},{"location":"types/tes3gameFile/#gamehour","text":"Read-only . The current game hour, from a save game. Returns : result (number)","title":"gameHour"},{"location":"types/tes3gameFile/#highestformid","text":"Read-only . No description yet available. Returns : result (number)","title":"highestFormID"},{"location":"types/tes3gameFile/#masterfilesizes","text":"Read-only . An array-style table of strings containing the file sizes of masters. Returns : result (number[])","title":"masterFileSizes"},{"location":"types/tes3gameFile/#masternames","text":"Read-only . An array-style table of strings containing the name of master files. Returns : result (string[])","title":"masterNames"},{"location":"types/tes3gameFile/#masters","text":"Read-only . An array-style table of the tes3gameFiles that this is dependent upon. Returns : result ( tes3gameFile [])","title":"masters"},{"location":"types/tes3gameFile/#maxhealth","text":"Read-only . The player's maximum health, from a save game. Returns : result (number)","title":"maxHealth"},{"location":"types/tes3gameFile/#modifiedtime","text":"Read-only . The timestamp that the file was modified. Returns : result (string)","title":"modifiedTime"},{"location":"types/tes3gameFile/#month","text":"Read-only . The current month, from a save game. Returns : result (number)","title":"month"},{"location":"types/tes3gameFile/#path","text":"Read-only . The path to the file. Returns : result (string)","title":"path"},{"location":"types/tes3gameFile/#playername","text":"Read-only . The player's name, from a save game. Returns : result (string)","title":"playerName"},{"location":"types/tes3gameFile/#year","text":"Read-only . The current year, from a save game. Returns : result (number)","title":"year"},{"location":"types/tes3gameFile/#methods","text":"","title":"Methods"},{"location":"types/tes3gameFile/#deletefile","text":"Deletes the file. myObject : deleteFile ()","title":"deleteFile"},{"location":"types/tes3gameSetting/","text":"tes3gameSetting \u2693\ufe0e A GMST game object. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) defaultValue \u2693\ufe0e Read-only . The default value of the GMST, if no master defines the value. Returns : result (number, string) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) index \u2693\ufe0e Read-only . The array index for the GMST. Returns : result (number) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) rawValue \u2693\ufe0e The base value of the game setting, as stored in memory. Prefer to use .value unless you know what you're doing. Returns : result (number) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) type \u2693\ufe0e Read-only . The type of the variable, either i , f , or s . Returns : result (string) value \u2693\ufe0e The value of the GMST. Returns : result (number, string) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"tes3gameSetting"},{"location":"types/tes3gameSetting/#tes3gamesetting","text":"A GMST game object. This type inherits the following: tes3baseObject","title":"tes3gameSetting"},{"location":"types/tes3gameSetting/#properties","text":"","title":"Properties"},{"location":"types/tes3gameSetting/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3gameSetting/#defaultvalue","text":"Read-only . The default value of the GMST, if no master defines the value. Returns : result (number, string)","title":"defaultValue"},{"location":"types/tes3gameSetting/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3gameSetting/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3gameSetting/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3gameSetting/#index","text":"Read-only . The array index for the GMST. Returns : result (number)","title":"index"},{"location":"types/tes3gameSetting/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3gameSetting/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3gameSetting/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3gameSetting/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3gameSetting/#rawvalue","text":"The base value of the game setting, as stored in memory. Prefer to use .value unless you know what you're doing. Returns : result (number)","title":"rawValue"},{"location":"types/tes3gameSetting/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3gameSetting/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3gameSetting/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3gameSetting/#type","text":"Read-only . The type of the variable, either i , f , or s . Returns : result (string)","title":"type"},{"location":"types/tes3gameSetting/#value","text":"The value of the GMST. Returns : result (number, string)","title":"value"},{"location":"types/tes3gameSetting/#methods","text":"","title":"Methods"},{"location":"types/tes3gameSetting/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3globalScript/","text":"tes3globalScript \u2693\ufe0e A global script object. Any script (in mwscript) that is not attached to any object is a global script. Properties \u2693\ufe0e context \u2693\ufe0e Read-only . A special context used for getting and setting script's variables. Returns : result ( tes3scriptContext ) reference \u2693\ufe0e Read-only . A reference this global script is tied to, if any. If the reference field isn't empty, then the global script in question is a Targeted script (a name given to it in Morrowind Scripting for Dummies). Returns : result ( tes3reference , nil) script \u2693\ufe0e Read-only . Access to global script object's associated script. Returns : result ( tes3script )","title":"tes3globalScript"},{"location":"types/tes3globalScript/#tes3globalscript","text":"A global script object. Any script (in mwscript) that is not attached to any object is a global script.","title":"tes3globalScript"},{"location":"types/tes3globalScript/#properties","text":"","title":"Properties"},{"location":"types/tes3globalScript/#context","text":"Read-only . A special context used for getting and setting script's variables. Returns : result ( tes3scriptContext )","title":"context"},{"location":"types/tes3globalScript/#reference","text":"Read-only . A reference this global script is tied to, if any. If the reference field isn't empty, then the global script in question is a Targeted script (a name given to it in Morrowind Scripting for Dummies). Returns : result ( tes3reference , nil)","title":"reference"},{"location":"types/tes3globalScript/#script","text":"Read-only . Access to global script object's associated script. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3globalVariable/","text":"tes3globalVariable \u2693\ufe0e A global variable game object. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e The value of the variable. Unlike GMSTs, globals are always numbers. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"tes3globalVariable"},{"location":"types/tes3globalVariable/#tes3globalvariable","text":"A global variable game object. This type inherits the following: tes3baseObject","title":"tes3globalVariable"},{"location":"types/tes3globalVariable/#properties","text":"","title":"Properties"},{"location":"types/tes3globalVariable/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3globalVariable/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3globalVariable/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3globalVariable/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3globalVariable/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3globalVariable/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3globalVariable/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3globalVariable/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3globalVariable/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3globalVariable/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3globalVariable/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3globalVariable/#value","text":"The value of the variable. Unlike GMSTs, globals are always numbers. Returns : result (number)","title":"value"},{"location":"types/tes3globalVariable/#methods","text":"","title":"Methods"},{"location":"types/tes3globalVariable/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3ingredient/","text":"tes3ingredient \u2693\ufe0e An ingredient game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) effectAttributeIds \u2693\ufe0e Read-only . An array-style table access the attributes associated with the effects. Returns : result (number[]) effects \u2693\ufe0e Read-only . An array-style table access to the four ingredient effects. Unlike alchemy or enchanting objects, these are simple numbers representing the effect ID (the values map to tes3.effect table). Returns : result (number[]) effectSkillIds \u2693\ufe0e Read-only . An array-style table access the skills associated with the effects. Returns : result (number[]) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"Tes3ingredient"},{"location":"types/tes3ingredient/#tes3ingredient","text":"An ingredient game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3ingredient"},{"location":"types/tes3ingredient/#properties","text":"","title":"Properties"},{"location":"types/tes3ingredient/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3ingredient/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3ingredient/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3ingredient/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3ingredient/#effectattributeids","text":"Read-only . An array-style table access the attributes associated with the effects. Returns : result (number[])","title":"effectAttributeIds"},{"location":"types/tes3ingredient/#effects","text":"Read-only . An array-style table access to the four ingredient effects. Unlike alchemy or enchanting objects, these are simple numbers representing the effect ID (the values map to tes3.effect table). Returns : result (number[])","title":"effects"},{"location":"types/tes3ingredient/#effectskillids","text":"Read-only . An array-style table access the skills associated with the effects. Returns : result (number[])","title":"effectSkillIds"},{"location":"types/tes3ingredient/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3ingredient/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3ingredient/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3ingredient/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3ingredient/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3ingredient/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3ingredient/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3ingredient/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3ingredient/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3ingredient/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3ingredient/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3ingredient/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3ingredient/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3ingredient/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3ingredient/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3ingredient/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3ingredient/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3ingredient/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3ingredient/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3ingredient/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3ingredient/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3ingredient/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3ingredient/#methods","text":"","title":"Methods"},{"location":"types/tes3ingredient/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3inputConfig/","text":"tes3inputConfig \u2693\ufe0e A structure that represents a configured key binding. Properties \u2693\ufe0e code \u2693\ufe0e The scan or input button code for the binding. Device specific. For keyboards, this is a scan code. Returns : result (number) device \u2693\ufe0e The index of the device used in the keybinding, such as keyboard, mouse, joystick, or gamepad. Returns : result (number)","title":"tes3inputConfig"},{"location":"types/tes3inputConfig/#tes3inputconfig","text":"A structure that represents a configured key binding.","title":"tes3inputConfig"},{"location":"types/tes3inputConfig/#properties","text":"","title":"Properties"},{"location":"types/tes3inputConfig/#code","text":"The scan or input button code for the binding. Device specific. For keyboards, this is a scan code. Returns : result (number)","title":"code"},{"location":"types/tes3inputConfig/#device","text":"The index of the device used in the keybinding, such as keyboard, mouse, joystick, or gamepad. Returns : result (number)","title":"device"},{"location":"types/tes3inputController/","text":"tes3inputController \u2693\ufe0e A data structure, off of the world controller, that handles input. Properties \u2693\ufe0e creationFlags \u2693\ufe0e Read-only . A bit field representing device capabilities and settings. Returns : result (number) inputMaps \u2693\ufe0e Read-only . The array-style access to input bindings ( tes3inputConfig objects). Returns : result ( tes3inputConfig []) keyboardState \u2693\ufe0e Read-only . The array-style access to raw key states. Returns : result (number[]) mouseState \u2693\ufe0e Read-only . The raw DirectInput mouse state. Returns : result ( tes3directInputMouseState ) previousKeyboardState \u2693\ufe0e Read-only . The array-style access to the previous frame's raw key states. Returns : result (number[]) previousMouseState \u2693\ufe0e Read-only . The raw DirectInput mouse state for the previous state. Returns : result ( tes3directInputMouseState ) Methods \u2693\ufe0e isAltDown \u2693\ufe0e Returns true if either alt modifier key is pressed. local isPressed = myObject : isAltDown () Returns : isPressed (boolean): True if either alt key is pressed. isCapsLockActive \u2693\ufe0e Returns true if the caps lock mode is active. local isPressed = myObject : isCapsLockActive () Returns : isPressed (boolean): True if caps lock is active. isControlDown \u2693\ufe0e Returns true if either control modifier key is pressed. local isPressed = myObject : isControlDown () Returns : isPressed (boolean): True if either control key is pressed. isKeyDown \u2693\ufe0e Performs a key down test for a given scan key code. local result = myObject : isKeyDown ( key ) Parameters : key (number): The scan code to test. Constants available through tes3.scanCode . Returns : result (boolean) isKeyPressedThisFrame \u2693\ufe0e Checks to see if a given scan code is pressed, and wasn't pressed last frame. local result = myObject : isKeyPressedThisFrame ( key ) Parameters : key (number): The scan code to test. Constants available through tes3.scanCode . Returns : result (boolean) isKeyReleasedThisFrame \u2693\ufe0e Checks to see if a given scan code is released, and was pressed last frame. local result = myObject : isKeyReleasedThisFrame ( key ) Parameters : key (number): The scan code to test. Constants available through tes3.scanCode . Returns : result (boolean) isMouseButtonDown \u2693\ufe0e Returns the mouse down state for a given mouse button. local result = myObject : isMouseButtonDown ( button ) Parameters : button (number): The mouse button to test. Must be between 0 and 7 . Left mouse button is 0 , right is 1 , and middle is 2 . Returns : result (boolean) isMouseButtonPressedThisFrame \u2693\ufe0e Returns true if a mouse button was up last frame, and down this frame. local result = myObject : isMouseButtonPressedThisFrame ( button ) Parameters : button (number): The mouse button to test. Must be between 0 and 7 . Left mouse button is 0 , right is 1 , and middle is 2 . Returns : result (boolean) isMouseButtonReleasedThisFrame \u2693\ufe0e Returns true if a mouse button was down last frame, and up this frame. local result = myObject : isMouseButtonReleasedThisFrame ( button ) Parameters : button (number): The mouse button to test. Must be between 0 and 7 . Left mouse button is 0 , right is 1 , and middle is 2 . Returns : result (boolean) isShiftDown \u2693\ufe0e Returns true if either shift modifier key is pressed. It does not take into account caps lock. local isPressed = myObject : isShiftDown () Returns : isPressed (boolean): True if either shift key is pressed. isSuperDown \u2693\ufe0e Returns true if either super/windows modifier key is pressed. local isPressed = myObject : isSuperDown () Returns : isPressed (boolean): True if either super/windows key is pressed. keybindTest \u2693\ufe0e Performs a test for a given keybind, and optionally a transition state. local result = myObject : keybindTest ( key , transition ) Parameters : key (number): The keybind to test. Constants available through tes3.keybind . transition (number): Optional . Transition state, e.g. down, or up. Constants available through tes3.keyTransition . Returns : result (boolean)","title":"tes3inputController"},{"location":"types/tes3inputController/#tes3inputcontroller","text":"A data structure, off of the world controller, that handles input.","title":"tes3inputController"},{"location":"types/tes3inputController/#properties","text":"","title":"Properties"},{"location":"types/tes3inputController/#creationflags","text":"Read-only . A bit field representing device capabilities and settings. Returns : result (number)","title":"creationFlags"},{"location":"types/tes3inputController/#inputmaps","text":"Read-only . The array-style access to input bindings ( tes3inputConfig objects). Returns : result ( tes3inputConfig [])","title":"inputMaps"},{"location":"types/tes3inputController/#keyboardstate","text":"Read-only . The array-style access to raw key states. Returns : result (number[])","title":"keyboardState"},{"location":"types/tes3inputController/#mousestate","text":"Read-only . The raw DirectInput mouse state. Returns : result ( tes3directInputMouseState )","title":"mouseState"},{"location":"types/tes3inputController/#previouskeyboardstate","text":"Read-only . The array-style access to the previous frame's raw key states. Returns : result (number[])","title":"previousKeyboardState"},{"location":"types/tes3inputController/#previousmousestate","text":"Read-only . The raw DirectInput mouse state for the previous state. Returns : result ( tes3directInputMouseState )","title":"previousMouseState"},{"location":"types/tes3inputController/#methods","text":"","title":"Methods"},{"location":"types/tes3inputController/#isaltdown","text":"Returns true if either alt modifier key is pressed. local isPressed = myObject : isAltDown () Returns : isPressed (boolean): True if either alt key is pressed.","title":"isAltDown"},{"location":"types/tes3inputController/#iscapslockactive","text":"Returns true if the caps lock mode is active. local isPressed = myObject : isCapsLockActive () Returns : isPressed (boolean): True if caps lock is active.","title":"isCapsLockActive"},{"location":"types/tes3inputController/#iscontroldown","text":"Returns true if either control modifier key is pressed. local isPressed = myObject : isControlDown () Returns : isPressed (boolean): True if either control key is pressed.","title":"isControlDown"},{"location":"types/tes3inputController/#iskeydown","text":"Performs a key down test for a given scan key code. local result = myObject : isKeyDown ( key ) Parameters : key (number): The scan code to test. Constants available through tes3.scanCode . Returns : result (boolean)","title":"isKeyDown"},{"location":"types/tes3inputController/#iskeypressedthisframe","text":"Checks to see if a given scan code is pressed, and wasn't pressed last frame. local result = myObject : isKeyPressedThisFrame ( key ) Parameters : key (number): The scan code to test. Constants available through tes3.scanCode . Returns : result (boolean)","title":"isKeyPressedThisFrame"},{"location":"types/tes3inputController/#iskeyreleasedthisframe","text":"Checks to see if a given scan code is released, and was pressed last frame. local result = myObject : isKeyReleasedThisFrame ( key ) Parameters : key (number): The scan code to test. Constants available through tes3.scanCode . Returns : result (boolean)","title":"isKeyReleasedThisFrame"},{"location":"types/tes3inputController/#ismousebuttondown","text":"Returns the mouse down state for a given mouse button. local result = myObject : isMouseButtonDown ( button ) Parameters : button (number): The mouse button to test. Must be between 0 and 7 . Left mouse button is 0 , right is 1 , and middle is 2 . Returns : result (boolean)","title":"isMouseButtonDown"},{"location":"types/tes3inputController/#ismousebuttonpressedthisframe","text":"Returns true if a mouse button was up last frame, and down this frame. local result = myObject : isMouseButtonPressedThisFrame ( button ) Parameters : button (number): The mouse button to test. Must be between 0 and 7 . Left mouse button is 0 , right is 1 , and middle is 2 . Returns : result (boolean)","title":"isMouseButtonPressedThisFrame"},{"location":"types/tes3inputController/#ismousebuttonreleasedthisframe","text":"Returns true if a mouse button was down last frame, and up this frame. local result = myObject : isMouseButtonReleasedThisFrame ( button ) Parameters : button (number): The mouse button to test. Must be between 0 and 7 . Left mouse button is 0 , right is 1 , and middle is 2 . Returns : result (boolean)","title":"isMouseButtonReleasedThisFrame"},{"location":"types/tes3inputController/#isshiftdown","text":"Returns true if either shift modifier key is pressed. It does not take into account caps lock. local isPressed = myObject : isShiftDown () Returns : isPressed (boolean): True if either shift key is pressed.","title":"isShiftDown"},{"location":"types/tes3inputController/#issuperdown","text":"Returns true if either super/windows modifier key is pressed. local isPressed = myObject : isSuperDown () Returns : isPressed (boolean): True if either super/windows key is pressed.","title":"isSuperDown"},{"location":"types/tes3inputController/#keybindtest","text":"Performs a test for a given keybind, and optionally a transition state. local result = myObject : keybindTest ( key , transition ) Parameters : key (number): The keybind to test. Constants available through tes3.keybind . transition (number): Optional . Transition state, e.g. down, or up. Constants available through tes3.keyTransition . Returns : result (boolean)","title":"keybindTest"},{"location":"types/tes3inventory/","text":"tes3inventory \u2693\ufe0e An inventory composes of an iterator, and flags caching the state of the inventory. Properties \u2693\ufe0e flags \u2693\ufe0e Read-only . Raw bit-based flags. Returns : result (number) items \u2693\ufe0e Read-only . Direct acces to the container that holds the inventory's items. Returns : result ( tes3itemStack []) Methods \u2693\ufe0e addItem \u2693\ufe0e Adds an item into the inventory directly. This should not be used, in favor of the tes3.addItem() function. myObject : addItem ({ mobile = ..., item = ..., itemData = ..., count = ... }) Parameters : params (table) mobile ( tes3mobileActor , tes3reference , string): Optional . The mobile actor whose stats will be updated. item ( tes3item ): The item to add. itemData ( tes3itemData ): Optional . Any associated item data to add. count (number): Default : 1 . The number of items to add. calculateWeight \u2693\ufe0e Calculates the weight of all items in the container. local result = myObject : calculateWeight () Returns : result (number) contains \u2693\ufe0e Checks to see if the inventory contains an item. local result = myObject : contains ( item , itemData ) Parameters : item ( tes3item , string): The item to check for. itemData ( tes3itemData ): Optional . If provided, it will check for the specific data as well. Returns : result (boolean) dropItem \u2693\ufe0e Checks to see if the inventory contains an item. This should not be used, instead use the tes3.dropItem() function. myObject : dropItem ( mobile , item , itemData , count , position , orientation , ignoreItemData ) Parameters : mobile ( tes3mobileActor , tes3reference , string): The mobile actor whose stats will be updated. item ( tes3item , string): The item to drop. itemData ( tes3itemData ): If provided, it will check for the specific data to drop it. count (number): The number of items to drop. position ( tes3vector3 ): A vector determining placement location. orientation ( tes3vector3 ): A vector determining placement rotation. ignoreItemData (boolean) findItemStack \u2693\ufe0e Searches for an item stack in the inventory. local result = myObject : findItemStack ( item , itemData ) Parameters : item ( tes3item , string): The item to search for. itemData ( tes3itemData ): Optional . If provided, it will check for the specific data as well. Returns : result ( tes3itemStack ) removeItem \u2693\ufe0e Removes an item from the inventory directly. This should not be used, in favor of the tes3.removeItem() function. myObject : removeItem ({ mobile = ..., item = ..., itemData = ..., count = ..., deleteItemData = ... }) Parameters : params (table) mobile ( tes3mobileActor , tes3reference , string): Optional . The mobile actor whose stats will be updated. item ( tes3item ): The item to add. itemData ( tes3itemData ): Optional . Any associated item data to add. count (number): Default : 1 . The number of items to add. deleteItemData (boolean): Default : false . If set, the itemData will be deleted after being removed. resolveLeveledItems \u2693\ufe0e Resolves all contained leveled lists and adds the randomized items to the inventory. This should generally not be called directly. myObject : resolveLeveledItems ( mobile ) Parameters : mobile ( tes3mobileActor ): Optional . The mobile actor whose stats will be updated.","title":"Tes3inventory"},{"location":"types/tes3inventory/#tes3inventory","text":"An inventory composes of an iterator, and flags caching the state of the inventory.","title":"tes3inventory"},{"location":"types/tes3inventory/#properties","text":"","title":"Properties"},{"location":"types/tes3inventory/#flags","text":"Read-only . Raw bit-based flags. Returns : result (number)","title":"flags"},{"location":"types/tes3inventory/#items","text":"Read-only . Direct acces to the container that holds the inventory's items. Returns : result ( tes3itemStack [])","title":"items"},{"location":"types/tes3inventory/#methods","text":"","title":"Methods"},{"location":"types/tes3inventory/#additem","text":"Adds an item into the inventory directly. This should not be used, in favor of the tes3.addItem() function. myObject : addItem ({ mobile = ..., item = ..., itemData = ..., count = ... }) Parameters : params (table) mobile ( tes3mobileActor , tes3reference , string): Optional . The mobile actor whose stats will be updated. item ( tes3item ): The item to add. itemData ( tes3itemData ): Optional . Any associated item data to add. count (number): Default : 1 . The number of items to add.","title":"addItem"},{"location":"types/tes3inventory/#calculateweight","text":"Calculates the weight of all items in the container. local result = myObject : calculateWeight () Returns : result (number)","title":"calculateWeight"},{"location":"types/tes3inventory/#contains","text":"Checks to see if the inventory contains an item. local result = myObject : contains ( item , itemData ) Parameters : item ( tes3item , string): The item to check for. itemData ( tes3itemData ): Optional . If provided, it will check for the specific data as well. Returns : result (boolean)","title":"contains"},{"location":"types/tes3inventory/#dropitem","text":"Checks to see if the inventory contains an item. This should not be used, instead use the tes3.dropItem() function. myObject : dropItem ( mobile , item , itemData , count , position , orientation , ignoreItemData ) Parameters : mobile ( tes3mobileActor , tes3reference , string): The mobile actor whose stats will be updated. item ( tes3item , string): The item to drop. itemData ( tes3itemData ): If provided, it will check for the specific data to drop it. count (number): The number of items to drop. position ( tes3vector3 ): A vector determining placement location. orientation ( tes3vector3 ): A vector determining placement rotation. ignoreItemData (boolean)","title":"dropItem"},{"location":"types/tes3inventory/#finditemstack","text":"Searches for an item stack in the inventory. local result = myObject : findItemStack ( item , itemData ) Parameters : item ( tes3item , string): The item to search for. itemData ( tes3itemData ): Optional . If provided, it will check for the specific data as well. Returns : result ( tes3itemStack )","title":"findItemStack"},{"location":"types/tes3inventory/#removeitem","text":"Removes an item from the inventory directly. This should not be used, in favor of the tes3.removeItem() function. myObject : removeItem ({ mobile = ..., item = ..., itemData = ..., count = ..., deleteItemData = ... }) Parameters : params (table) mobile ( tes3mobileActor , tes3reference , string): Optional . The mobile actor whose stats will be updated. item ( tes3item ): The item to add. itemData ( tes3itemData ): Optional . Any associated item data to add. count (number): Default : 1 . The number of items to add. deleteItemData (boolean): Default : false . If set, the itemData will be deleted after being removed.","title":"removeItem"},{"location":"types/tes3inventory/#resolveleveleditems","text":"Resolves all contained leveled lists and adds the randomized items to the inventory. This should generally not be called directly. myObject : resolveLeveledItems ( mobile ) Parameters : mobile ( tes3mobileActor ): Optional . The mobile actor whose stats will be updated.","title":"resolveLeveledItems"},{"location":"types/tes3inventoryTile/","text":"tes3inventoryTile \u2693\ufe0e An inventory tile, connecting an item, its data, and various related UI elements. Properties \u2693\ufe0e count \u2693\ufe0e Read-only . The number of items that the tile represents. Returns : result (number) element \u2693\ufe0e Read-only . The UI element associated with the tile. Returns : result ( tes3uiElement ) flags \u2693\ufe0e Read-only . Direct access to the tile's flags. Use .isBartered , .isBoundItem , or .isEquipped to access individual flags. Returns : result (number) isBartered \u2693\ufe0e If true , the tile represents an item being bartered. Returns : result (boolean) isBoundItem \u2693\ufe0e Read-only . If true , the tile represents a bound item. Returns : result (boolean) isEquipped \u2693\ufe0e If true , the tile represents an item that is equipped. Returns : result (boolean) item \u2693\ufe0e Read-only . The item the tile represents. Returns : result ( tes3item ) itemData \u2693\ufe0e Read-only . The item data associated with this tile. Returns : result ( tes3itemData ) type \u2693\ufe0e Read-only . The type of tile represented. Maps to values in tes3.inventoryTileType namespace. Returns : result (number)","title":"tes3inventoryTile"},{"location":"types/tes3inventoryTile/#tes3inventorytile","text":"An inventory tile, connecting an item, its data, and various related UI elements.","title":"tes3inventoryTile"},{"location":"types/tes3inventoryTile/#properties","text":"","title":"Properties"},{"location":"types/tes3inventoryTile/#count","text":"Read-only . The number of items that the tile represents. Returns : result (number)","title":"count"},{"location":"types/tes3inventoryTile/#element","text":"Read-only . The UI element associated with the tile. Returns : result ( tes3uiElement )","title":"element"},{"location":"types/tes3inventoryTile/#flags","text":"Read-only . Direct access to the tile's flags. Use .isBartered , .isBoundItem , or .isEquipped to access individual flags. Returns : result (number)","title":"flags"},{"location":"types/tes3inventoryTile/#isbartered","text":"If true , the tile represents an item being bartered. Returns : result (boolean)","title":"isBartered"},{"location":"types/tes3inventoryTile/#isbounditem","text":"Read-only . If true , the tile represents a bound item. Returns : result (boolean)","title":"isBoundItem"},{"location":"types/tes3inventoryTile/#isequipped","text":"If true , the tile represents an item that is equipped. Returns : result (boolean)","title":"isEquipped"},{"location":"types/tes3inventoryTile/#item","text":"Read-only . The item the tile represents. Returns : result ( tes3item )","title":"item"},{"location":"types/tes3inventoryTile/#itemdata","text":"Read-only . The item data associated with this tile. Returns : result ( tes3itemData )","title":"itemData"},{"location":"types/tes3inventoryTile/#type","text":"Read-only . The type of tile represented. Maps to values in tes3.inventoryTileType namespace. Returns : result (number)","title":"type"},{"location":"types/tes3item/","text":"tes3item \u2693\ufe0e An item object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"Tes3item"},{"location":"types/tes3item/#tes3item","text":"An item object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject","title":"tes3item"},{"location":"types/tes3item/#properties","text":"","title":"Properties"},{"location":"types/tes3item/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3item/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3item/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3item/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3item/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3item/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3item/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3item/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3item/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3item/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3item/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3item/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3item/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3item/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3item/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3item/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3item/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3item/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3item/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3item/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3item/#methods","text":"","title":"Methods"},{"location":"types/tes3item/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3itemData/","text":"tes3itemData \u2693\ufe0e A set of variables that differentiates one item from another. Properties \u2693\ufe0e charge \u2693\ufe0e The charge of the item. Provides incorrect values on misc items, which instead have a soul actor. Returns : result (number) condition \u2693\ufe0e The condition/health of the item. Provides incorrect values on light items, which instead have a timeLeft property. Returns : result (number) context \u2693\ufe0e Returns an ease of use script context for variable access. Returns : result ( tes3scriptContext ) count \u2693\ufe0e The total number of identical items represented by this data. Reserved for use by in-world references. It should always be 1 for items in inventories. Inventories utilize the stack count in tes3itemStack object. Returns : result (number) data \u2693\ufe0e A generic lua table that data can be written to, and synced to/from the save. All information stored must be valid for serialization to json. For data that doesn't persist, use tempData . Returns : result (table) owner \u2693\ufe0e The owner of the associated item. An item can have an owner or it can be faction-owned. Returns : result ( tes3npc , tes3faction , nil) requirement \u2693\ufe0e A requirement, typically associated with ownership and when the player may freely interact with an object. The type depends on the owner. Faction owners provide a required rank as a number, while NPCs provide a global variable to check. Returns : result ( tes3globalVariable , number, nil) script \u2693\ufe0e Read-only . The script associated with the scriptVariables. Returns : result ( tes3script ) scriptVariables \u2693\ufe0e Access to the structure where individual mwscript data is stored. Returns : result (tes3scriptVariables) soul \u2693\ufe0e Only available on misc items. The actor that is stored inside the soul gem. Returns : result ( tes3actor ) tempData \u2693\ufe0e A generic lua table that data can be written to, but is not synced to/from a save. Returns : result (table) timeLeft \u2693\ufe0e The time remaining on a light. Provides incorrect values on non-light items, which instead have a condition property. Returns : result (number)","title":"tes3itemData"},{"location":"types/tes3itemData/#tes3itemdata","text":"A set of variables that differentiates one item from another.","title":"tes3itemData"},{"location":"types/tes3itemData/#properties","text":"","title":"Properties"},{"location":"types/tes3itemData/#charge","text":"The charge of the item. Provides incorrect values on misc items, which instead have a soul actor. Returns : result (number)","title":"charge"},{"location":"types/tes3itemData/#condition","text":"The condition/health of the item. Provides incorrect values on light items, which instead have a timeLeft property. Returns : result (number)","title":"condition"},{"location":"types/tes3itemData/#context","text":"Returns an ease of use script context for variable access. Returns : result ( tes3scriptContext )","title":"context"},{"location":"types/tes3itemData/#count","text":"The total number of identical items represented by this data. Reserved for use by in-world references. It should always be 1 for items in inventories. Inventories utilize the stack count in tes3itemStack object. Returns : result (number)","title":"count"},{"location":"types/tes3itemData/#data","text":"A generic lua table that data can be written to, and synced to/from the save. All information stored must be valid for serialization to json. For data that doesn't persist, use tempData . Returns : result (table)","title":"data"},{"location":"types/tes3itemData/#owner","text":"The owner of the associated item. An item can have an owner or it can be faction-owned. Returns : result ( tes3npc , tes3faction , nil)","title":"owner"},{"location":"types/tes3itemData/#requirement","text":"A requirement, typically associated with ownership and when the player may freely interact with an object. The type depends on the owner. Faction owners provide a required rank as a number, while NPCs provide a global variable to check. Returns : result ( tes3globalVariable , number, nil)","title":"requirement"},{"location":"types/tes3itemData/#script","text":"Read-only . The script associated with the scriptVariables. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3itemData/#scriptvariables","text":"Access to the structure where individual mwscript data is stored. Returns : result (tes3scriptVariables)","title":"scriptVariables"},{"location":"types/tes3itemData/#soul","text":"Only available on misc items. The actor that is stored inside the soul gem. Returns : result ( tes3actor )","title":"soul"},{"location":"types/tes3itemData/#tempdata","text":"A generic lua table that data can be written to, but is not synced to/from a save. Returns : result (table)","title":"tempData"},{"location":"types/tes3itemData/#timeleft","text":"The time remaining on a light. Provides incorrect values on non-light items, which instead have a condition property. Returns : result (number)","title":"timeLeft"},{"location":"types/tes3itemStack/","text":"tes3itemStack \u2693\ufe0e A complex container that holds a relationship between an item, and zero or more associated item datas. Properties \u2693\ufe0e count \u2693\ufe0e The total number of items in the stack. Returns : result (integer) object \u2693\ufe0e Read-only . The core game object that the stack represents. Returns : result ( tes3item ) variables \u2693\ufe0e A collection of variables that are associated with the stack's object, or nil if there aren't any. Returns : result ( tes3itemData [])","title":"tes3itemStack"},{"location":"types/tes3itemStack/#tes3itemstack","text":"A complex container that holds a relationship between an item, and zero or more associated item datas.","title":"tes3itemStack"},{"location":"types/tes3itemStack/#properties","text":"","title":"Properties"},{"location":"types/tes3itemStack/#count","text":"The total number of items in the stack. Returns : result (integer)","title":"count"},{"location":"types/tes3itemStack/#object","text":"Read-only . The core game object that the stack represents. Returns : result ( tes3item )","title":"object"},{"location":"types/tes3itemStack/#variables","text":"A collection of variables that are associated with the stack's object, or nil if there aren't any. Returns : result ( tes3itemData [])","title":"variables"},{"location":"types/tes3iterator/","text":"tes3iterator \u2693\ufe0e A collection that can be iterated over. Contains items in a simple linked list, and stores its head/tail. Properties \u2693\ufe0e current \u2693\ufe0e Read-only . A reference for the currently iterated node. This is used by the core game engine, but should not be accessed from lua. Returns : result ( tes3iteratorNode ) head \u2693\ufe0e Read-only . The first node in the collection. Returns : result ( tes3iteratorNode ) tail \u2693\ufe0e Read-only . The last node in the collection. Returns : result ( tes3iteratorNode ) Methods \u2693\ufe0e size \u2693\ufe0e Read-only . Returns the amount of items in the iterator. local result = myObject : size () Returns : result (number) Example: Iterating Lists In this example, a list is iterated using the pairs iterator function. The node can be used directly. -- Check player equipment. Equipment list contains only equipped items. for _ , stack in pairs ( tes3 . player . object . equipment ) do -- stack is type tes3equipmentStack, as tes3.player.object.equipment is a list of tes3equipmentStack objects. mwse . log ( \"Equipment object ID: %s\" , stack . object . id ) end -- This will iterate over all the items in player's inventory including equipped items. for _ , itemStack in pairs ( tes3 . player . object . inventory ) do -- itemStack is of tes3itemStack type local item = itemStack . object mwse . log ( \"The player has %s of %s in inventory.\" , itemStack . count , item . id ) end -- tes3.player.object.spells is a tes3spellList with helper functions. -- The actual list is spells.iterator. for _ , spell in pairs ( tes3 . player . object . spells . iterator ) do -- spell is type tes3spell, as tes3.player.object.spells.iterator is a list of tes3spell objects. mwse . log ( \"Spell %s, cost %d\" , spell . name , spell . magickaCost ) end","title":"Tes3iterator"},{"location":"types/tes3iterator/#tes3iterator","text":"A collection that can be iterated over. Contains items in a simple linked list, and stores its head/tail.","title":"tes3iterator"},{"location":"types/tes3iterator/#properties","text":"","title":"Properties"},{"location":"types/tes3iterator/#current","text":"Read-only . A reference for the currently iterated node. This is used by the core game engine, but should not be accessed from lua. Returns : result ( tes3iteratorNode )","title":"current"},{"location":"types/tes3iterator/#head","text":"Read-only . The first node in the collection. Returns : result ( tes3iteratorNode )","title":"head"},{"location":"types/tes3iterator/#tail","text":"Read-only . The last node in the collection. Returns : result ( tes3iteratorNode )","title":"tail"},{"location":"types/tes3iterator/#methods","text":"","title":"Methods"},{"location":"types/tes3iterator/#size","text":"Read-only . Returns the amount of items in the iterator. local result = myObject : size () Returns : result (number) Example: Iterating Lists In this example, a list is iterated using the pairs iterator function. The node can be used directly. -- Check player equipment. Equipment list contains only equipped items. for _ , stack in pairs ( tes3 . player . object . equipment ) do -- stack is type tes3equipmentStack, as tes3.player.object.equipment is a list of tes3equipmentStack objects. mwse . log ( \"Equipment object ID: %s\" , stack . object . id ) end -- This will iterate over all the items in player's inventory including equipped items. for _ , itemStack in pairs ( tes3 . player . object . inventory ) do -- itemStack is of tes3itemStack type local item = itemStack . object mwse . log ( \"The player has %s of %s in inventory.\" , itemStack . count , item . id ) end -- tes3.player.object.spells is a tes3spellList with helper functions. -- The actual list is spells.iterator. for _ , spell in pairs ( tes3 . player . object . spells . iterator ) do -- spell is type tes3spell, as tes3.player.object.spells.iterator is a list of tes3spell objects. mwse . log ( \"Spell %s, cost %d\" , spell . name , spell . magickaCost ) end","title":"size"},{"location":"types/tes3iteratorNode/","text":"tes3iteratorNode \u2693\ufe0e A node from a collection, which has a link to the previous and next node, as well as its contained data. Properties \u2693\ufe0e data \u2693\ufe0e Read-only . The data stored in the node. Its type depends on the specific collection. head \u2693\ufe0e Read-only . The previous node in the collection. Returns : result ( tes3iteratorNode ) tail \u2693\ufe0e Read-only . The next node in the collection. Returns : result ( tes3iteratorNode )","title":"tes3iteratorNode"},{"location":"types/tes3iteratorNode/#tes3iteratornode","text":"A node from a collection, which has a link to the previous and next node, as well as its contained data.","title":"tes3iteratorNode"},{"location":"types/tes3iteratorNode/#properties","text":"","title":"Properties"},{"location":"types/tes3iteratorNode/#data","text":"Read-only . The data stored in the node. Its type depends on the specific collection.","title":"data"},{"location":"types/tes3iteratorNode/#head","text":"Read-only . The previous node in the collection. Returns : result ( tes3iteratorNode )","title":"head"},{"location":"types/tes3iteratorNode/#tail","text":"Read-only . The next node in the collection. Returns : result ( tes3iteratorNode )","title":"tail"},{"location":"types/tes3leveledCreature/","text":"tes3leveledCreature \u2693\ufe0e A leveled creature game object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) calculateFromAllLevels \u2693\ufe0e If true , the leveled list is picked from the entire level range, instead of just the highest. Returns : result (boolean) chanceForNothing \u2693\ufe0e The percent chance, from 0 to 100 , for no object to be chosen. Returns : result (number) count \u2693\ufe0e Read-only . The number of possible options in the leveled object container. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) flags \u2693\ufe0e A numerical representation of bit flags for the object. Returns : result (number) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) list \u2693\ufe0e Read-only . The collection that contains tes3leveledListNode s. Returns : result ( tes3leveledListNode []) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) insert \u2693\ufe0e This function inserts given creature in the creature leveled list. Returns true if the operation was successful. local result = myObject : insert ( entry , level ) Parameters : entry ( tes3baseObject ): A creature to insert. level (number): At which player level the creature can be resolved from the leveled list. Returns : result (boolean) pickFrom \u2693\ufe0e Chooses a random item from the list, based on the player's level. local result = myObject : pickFrom () Returns : result ( tes3creature ) remove \u2693\ufe0e This function removes a creature from the creature leveled list. Returns true if the operation was successful. local result = myObject : remove ( entry , level ) Parameters : entry ( tes3baseObject ): A creature to remove. level (number): At which player level the creature could be resolved from the leveled list. Returns : result (boolean)","title":"tes3leveledCreature"},{"location":"types/tes3leveledCreature/#tes3leveledcreature","text":"A leveled creature game object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject","title":"tes3leveledCreature"},{"location":"types/tes3leveledCreature/#properties","text":"","title":"Properties"},{"location":"types/tes3leveledCreature/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3leveledCreature/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3leveledCreature/#calculatefromalllevels","text":"If true , the leveled list is picked from the entire level range, instead of just the highest. Returns : result (boolean)","title":"calculateFromAllLevels"},{"location":"types/tes3leveledCreature/#chancefornothing","text":"The percent chance, from 0 to 100 , for no object to be chosen. Returns : result (number)","title":"chanceForNothing"},{"location":"types/tes3leveledCreature/#count","text":"Read-only . The number of possible options in the leveled object container. Returns : result (number)","title":"count"},{"location":"types/tes3leveledCreature/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3leveledCreature/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3leveledCreature/#flags","text":"A numerical representation of bit flags for the object. Returns : result (number)","title":"flags"},{"location":"types/tes3leveledCreature/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3leveledCreature/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3leveledCreature/#list","text":"Read-only . The collection that contains tes3leveledListNode s. Returns : result ( tes3leveledListNode [])","title":"list"},{"location":"types/tes3leveledCreature/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3leveledCreature/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3leveledCreature/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3leveledCreature/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3leveledCreature/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3leveledCreature/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3leveledCreature/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3leveledCreature/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3leveledCreature/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3leveledCreature/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3leveledCreature/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3leveledCreature/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3leveledCreature/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3leveledCreature/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3leveledCreature/#methods","text":"","title":"Methods"},{"location":"types/tes3leveledCreature/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3leveledCreature/#insert","text":"This function inserts given creature in the creature leveled list. Returns true if the operation was successful. local result = myObject : insert ( entry , level ) Parameters : entry ( tes3baseObject ): A creature to insert. level (number): At which player level the creature can be resolved from the leveled list. Returns : result (boolean)","title":"insert"},{"location":"types/tes3leveledCreature/#pickfrom","text":"Chooses a random item from the list, based on the player's level. local result = myObject : pickFrom () Returns : result ( tes3creature )","title":"pickFrom"},{"location":"types/tes3leveledCreature/#remove","text":"This function removes a creature from the creature leveled list. Returns true if the operation was successful. local result = myObject : remove ( entry , level ) Parameters : entry ( tes3baseObject ): A creature to remove. level (number): At which player level the creature could be resolved from the leveled list. Returns : result (boolean)","title":"remove"},{"location":"types/tes3leveledItem/","text":"tes3leveledItem \u2693\ufe0e A leveled creature game object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) calculateForEachItem \u2693\ufe0e If true , each entry is rolled in the leveled list when resolving items. This can result in multiple items from one list being added. Returns : result (boolean) calculateFromAllLevels \u2693\ufe0e If true , the leveled list is picked from the entire level range, instead of just the highest. Returns : result (boolean) chanceForNothing \u2693\ufe0e The percent chance, from 0 to 100 , for no object to be chosen. Returns : result (number) count \u2693\ufe0e Read-only . The number of possible options in the leveled object container. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) flags \u2693\ufe0e A numerical representation of bit flags for the object. Returns : result (number) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) list \u2693\ufe0e Read-only . The collection that contains tes3leveledListNode s. Returns : result ( tes3leveledListNode []) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) insert \u2693\ufe0e This function inserts given item in the leveled list. Returns true if the operation was successful. local result = myObject : insert ( entry , level ) Parameters : entry ( tes3baseObject ): An item to insert. level (number): At which player level the item can be resolved from the leveled list. Returns : result (boolean) pickFrom \u2693\ufe0e Chooses a random item from the list, based on the player's level. local result = myObject : pickFrom () Returns : result ( tes3item ) remove \u2693\ufe0e This function removes an item from the leveled list. Returns true if the operation was successful. local result = myObject : remove ( entry , level ) Parameters : entry ( tes3baseObject ): An item to remove. level (number): At which player level the item could be resolved from the leveled list. Returns : result (boolean)","title":"tes3leveledItem"},{"location":"types/tes3leveledItem/#tes3leveleditem","text":"A leveled creature game object. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject","title":"tes3leveledItem"},{"location":"types/tes3leveledItem/#properties","text":"","title":"Properties"},{"location":"types/tes3leveledItem/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3leveledItem/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3leveledItem/#calculateforeachitem","text":"If true , each entry is rolled in the leveled list when resolving items. This can result in multiple items from one list being added. Returns : result (boolean)","title":"calculateForEachItem"},{"location":"types/tes3leveledItem/#calculatefromalllevels","text":"If true , the leveled list is picked from the entire level range, instead of just the highest. Returns : result (boolean)","title":"calculateFromAllLevels"},{"location":"types/tes3leveledItem/#chancefornothing","text":"The percent chance, from 0 to 100 , for no object to be chosen. Returns : result (number)","title":"chanceForNothing"},{"location":"types/tes3leveledItem/#count","text":"Read-only . The number of possible options in the leveled object container. Returns : result (number)","title":"count"},{"location":"types/tes3leveledItem/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3leveledItem/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3leveledItem/#flags","text":"A numerical representation of bit flags for the object. Returns : result (number)","title":"flags"},{"location":"types/tes3leveledItem/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3leveledItem/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3leveledItem/#list","text":"Read-only . The collection that contains tes3leveledListNode s. Returns : result ( tes3leveledListNode [])","title":"list"},{"location":"types/tes3leveledItem/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3leveledItem/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3leveledItem/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3leveledItem/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3leveledItem/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3leveledItem/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3leveledItem/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3leveledItem/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3leveledItem/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3leveledItem/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3leveledItem/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3leveledItem/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3leveledItem/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3leveledItem/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3leveledItem/#methods","text":"","title":"Methods"},{"location":"types/tes3leveledItem/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3leveledItem/#insert","text":"This function inserts given item in the leveled list. Returns true if the operation was successful. local result = myObject : insert ( entry , level ) Parameters : entry ( tes3baseObject ): An item to insert. level (number): At which player level the item can be resolved from the leveled list. Returns : result (boolean)","title":"insert"},{"location":"types/tes3leveledItem/#pickfrom","text":"Chooses a random item from the list, based on the player's level. local result = myObject : pickFrom () Returns : result ( tes3item )","title":"pickFrom"},{"location":"types/tes3leveledItem/#remove","text":"This function removes an item from the leveled list. Returns true if the operation was successful. local result = myObject : remove ( entry , level ) Parameters : entry ( tes3baseObject ): An item to remove. level (number): At which player level the item could be resolved from the leveled list. Returns : result (boolean)","title":"remove"},{"location":"types/tes3leveledListNode/","text":"tes3leveledListNode \u2693\ufe0e A simple collection that maps an object in a leveled list to a level required for that object to spawn. Properties \u2693\ufe0e levelRequired \u2693\ufe0e The minimum level the player must meet before the node can be used. Returns : result (number) object \u2693\ufe0e The item or creature that can be resolved. Returns : result ( tes3physicalObject )","title":"tes3leveledListNode"},{"location":"types/tes3leveledListNode/#tes3leveledlistnode","text":"A simple collection that maps an object in a leveled list to a level required for that object to spawn.","title":"tes3leveledListNode"},{"location":"types/tes3leveledListNode/#properties","text":"","title":"Properties"},{"location":"types/tes3leveledListNode/#levelrequired","text":"The minimum level the player must meet before the node can be used. Returns : result (number)","title":"levelRequired"},{"location":"types/tes3leveledListNode/#object","text":"The item or creature that can be resolved. Returns : result ( tes3physicalObject )","title":"object"},{"location":"types/tes3light/","text":"tes3light \u2693\ufe0e A core light object. This isn't actually a light in the rendering engine, but something like a lamp or torch. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) canCarry \u2693\ufe0e Access to the light's flags, determining if the light can be carried. Returns : result (boolean) color \u2693\ufe0e Read-only . Access to the light's base colors, in an array-style table of four values. The values can range from 0 to 255. Returns : result (number[]) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) flickers \u2693\ufe0e Access to the light's flags, determining if the light attenuation flickers. Returns : result (boolean) flickersSlowly \u2693\ufe0e Access to the light's flags, determining if the light attenuation flickers slowly. Returns : result (boolean) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isDynamic \u2693\ufe0e Access to the light's flags, determining if the light affects dynamically moving objects. Returns : result (boolean) isFire \u2693\ufe0e Access to the light's flags, determining if the light represents flame. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) isNegative \u2693\ufe0e Access to the light's flags, determining if the object creates darkness. Returns : result (boolean) isOffByDefault \u2693\ufe0e Access to the light's flags, determining if the light won't be active initially. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) pulses \u2693\ufe0e Access to the light's flags, determining if the light attenuation pulses. Returns : result (boolean) pulsesSlowly \u2693\ufe0e Access to the light's flags, determining if the light attenuation pulses slowly. Returns : result (boolean) radius \u2693\ufe0e The base radius of the light. Returns : result (number) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e Read-only . The script that runs on the object. Returns : result ( tes3script ) sound \u2693\ufe0e Read-only . The sound that runs on the object. Returns : result ( tes3sound ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) time \u2693\ufe0e The amount of time that the light will last. Returns : result (number) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) getTimeLeft \u2693\ufe0e Gets the time remaining for a light, given a tes3itemData , tes3reference , or tes3equipmentStack . local result = myObject : getTimeLeft ( data ) Parameters : data ( tes3reference , tes3itemData , tes3equipmentStack ) Returns : result (number)","title":"Tes3light"},{"location":"types/tes3light/#tes3light","text":"A core light object. This isn't actually a light in the rendering engine, but something like a lamp or torch. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3light"},{"location":"types/tes3light/#properties","text":"","title":"Properties"},{"location":"types/tes3light/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3light/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3light/#cancarry","text":"Access to the light's flags, determining if the light can be carried. Returns : result (boolean)","title":"canCarry"},{"location":"types/tes3light/#color","text":"Read-only . Access to the light's base colors, in an array-style table of four values. The values can range from 0 to 255. Returns : result (number[])","title":"color"},{"location":"types/tes3light/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3light/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3light/#flickers","text":"Access to the light's flags, determining if the light attenuation flickers. Returns : result (boolean)","title":"flickers"},{"location":"types/tes3light/#flickersslowly","text":"Access to the light's flags, determining if the light attenuation flickers slowly. Returns : result (boolean)","title":"flickersSlowly"},{"location":"types/tes3light/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3light/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3light/#isdynamic","text":"Access to the light's flags, determining if the light affects dynamically moving objects. Returns : result (boolean)","title":"isDynamic"},{"location":"types/tes3light/#isfire","text":"Access to the light's flags, determining if the light represents flame. Returns : result (boolean)","title":"isFire"},{"location":"types/tes3light/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3light/#isnegative","text":"Access to the light's flags, determining if the object creates darkness. Returns : result (boolean)","title":"isNegative"},{"location":"types/tes3light/#isoffbydefault","text":"Access to the light's flags, determining if the light won't be active initially. Returns : result (boolean)","title":"isOffByDefault"},{"location":"types/tes3light/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3light/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3light/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3light/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3light/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3light/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3light/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3light/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3light/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3light/#pulses","text":"Access to the light's flags, determining if the light attenuation pulses. Returns : result (boolean)","title":"pulses"},{"location":"types/tes3light/#pulsesslowly","text":"Access to the light's flags, determining if the light attenuation pulses slowly. Returns : result (boolean)","title":"pulsesSlowly"},{"location":"types/tes3light/#radius","text":"The base radius of the light. Returns : result (number)","title":"radius"},{"location":"types/tes3light/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3light/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3light/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3light/#script","text":"Read-only . The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3light/#sound","text":"Read-only . The sound that runs on the object. Returns : result ( tes3sound )","title":"sound"},{"location":"types/tes3light/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3light/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3light/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3light/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3light/#time","text":"The amount of time that the light will last. Returns : result (number)","title":"time"},{"location":"types/tes3light/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3light/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3light/#methods","text":"","title":"Methods"},{"location":"types/tes3light/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3light/#gettimeleft","text":"Gets the time remaining for a light, given a tes3itemData , tes3reference , or tes3equipmentStack . local result = myObject : getTimeLeft ( data ) Parameters : data ( tes3reference , tes3itemData , tes3equipmentStack ) Returns : result (number)","title":"getTimeLeft"},{"location":"types/tes3lightNode/","text":"tes3lightNode \u2693\ufe0e An attachment-capable structure that maintains dynamic lights. Properties \u2693\ufe0e light \u2693\ufe0e Access to the niLight object mantained by this tes3lightNode object. Returns : result ( niLight ) value \u2693\ufe0e The flicker phase of the light. Returns : result (number)","title":"tes3lightNode"},{"location":"types/tes3lightNode/#tes3lightnode","text":"An attachment-capable structure that maintains dynamic lights.","title":"tes3lightNode"},{"location":"types/tes3lightNode/#properties","text":"","title":"Properties"},{"location":"types/tes3lightNode/#light","text":"Access to the niLight object mantained by this tes3lightNode object. Returns : result ( niLight )","title":"light"},{"location":"types/tes3lightNode/#value","text":"The flicker phase of the light. Returns : result (number)","title":"value"},{"location":"types/tes3lockNode/","text":"tes3lockNode \u2693\ufe0e An attachment-capable structure that maintains lock and trap data. Properties \u2693\ufe0e key \u2693\ufe0e The key that will open this door. Returns : result ( tes3misc ) level \u2693\ufe0e The level of the lock. Returns : result (number) locked \u2693\ufe0e The locked state. Returns : result (boolean) trap \u2693\ufe0e The trap associated with the object. Returns : result ( tes3spell )","title":"tes3lockNode"},{"location":"types/tes3lockNode/#tes3locknode","text":"An attachment-capable structure that maintains lock and trap data.","title":"tes3lockNode"},{"location":"types/tes3lockNode/#properties","text":"","title":"Properties"},{"location":"types/tes3lockNode/#key","text":"The key that will open this door. Returns : result ( tes3misc )","title":"key"},{"location":"types/tes3lockNode/#level","text":"The level of the lock. Returns : result (number)","title":"level"},{"location":"types/tes3lockNode/#locked","text":"The locked state. Returns : result (boolean)","title":"locked"},{"location":"types/tes3lockNode/#trap","text":"The trap associated with the object. Returns : result ( tes3spell )","title":"trap"},{"location":"types/tes3lockpick/","text":"tes3lockpick \u2693\ufe0e A core lockpick object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) maxCondition \u2693\ufe0e The maximum condition/health of the lockpick object. Returns : result (number) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) quality \u2693\ufe0e The quality of the object, with how much of a bonus it has. Returns : result (number) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e Read-only . The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"Tes3lockpick"},{"location":"types/tes3lockpick/#tes3lockpick","text":"A core lockpick object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3lockpick"},{"location":"types/tes3lockpick/#properties","text":"","title":"Properties"},{"location":"types/tes3lockpick/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3lockpick/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3lockpick/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3lockpick/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3lockpick/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3lockpick/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3lockpick/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3lockpick/#maxcondition","text":"The maximum condition/health of the lockpick object. Returns : result (number)","title":"maxCondition"},{"location":"types/tes3lockpick/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3lockpick/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3lockpick/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3lockpick/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3lockpick/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3lockpick/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3lockpick/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3lockpick/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3lockpick/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3lockpick/#quality","text":"The quality of the object, with how much of a bonus it has. Returns : result (number)","title":"quality"},{"location":"types/tes3lockpick/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3lockpick/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3lockpick/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3lockpick/#script","text":"Read-only . The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3lockpick/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3lockpick/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3lockpick/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3lockpick/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3lockpick/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3lockpick/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3lockpick/#methods","text":"","title":"Methods"},{"location":"types/tes3lockpick/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3magicEffect/","text":"tes3magicEffect \u2693\ufe0e A core magic effect definition. Properties \u2693\ufe0e allowEnchanting \u2693\ufe0e Access to the flag that determines if this effect can be used in enchanting. Returns : result (boolean) allowSpellmaking \u2693\ufe0e Access to the flag that determines if this effect can be used with spellmaking. Returns : result (boolean) appliesOnce \u2693\ufe0e Access to the base flag that determines if this effect is applied only once. Returns : result (boolean) areaSoundEffect \u2693\ufe0e The sound effect that plays on area of effect impacts. Can be set to nil to use the default sound effect for the magic school. Returns : result ( tes3sound ) areaVisualEffect \u2693\ufe0e The visual played when a spell with this effect, with area of effect hits something. Returns : result ( tes3physicalObject ) baseFlags \u2693\ufe0e No description yet available. Returns : result (number) baseMagickaCost \u2693\ufe0e The base magicka cost to use in calculations. Returns : result (number) bigIcon \u2693\ufe0e The path to the large icon to use for the effect. This is derived from the base icon path. Returns : result (string) boltSoundEffect \u2693\ufe0e The sound effect that plays for magic projectiles. Can be set to nil to use the default sound effect for the magic school. Returns : result ( tes3sound ) boltVisualEffect \u2693\ufe0e The visual played when a spell with this effect is in flight. Returns : result ( tes3physicalObject ) canCastSelf \u2693\ufe0e Access to the base flag that determines if this effect can be used with a range of self. Returns : result (boolean) canCastTarget \u2693\ufe0e Access to the base flag that determines if this effect can be used with a range of target. Returns : result (boolean) canCastTouch \u2693\ufe0e Access to the base flag that determines if this effect can be used with a range of touch. Returns : result (boolean) casterLinked \u2693\ufe0e Access to the base flag that determines if this effect must end if caster is dead, or not an NPC/creature. Not allowed in container or door trap spells. Note that this property is hidden in the Construction Set. Returns : result (boolean) castSoundEffect \u2693\ufe0e The sound effect that plays when casting. Can be set to nil to use the default sound effect for the magic school. Returns : result ( tes3sound ) castVisualEffect \u2693\ufe0e The visual played when a spell with this effect is cast. Returns : result ( tes3physicalObject ) description \u2693\ufe0e Player-facing description of the effect. Returns : result (string) flags \u2693\ufe0e Raw access to the numerical representation of flags. Typically shouldn't be used. Returns : result (number) hasContinuousVFX \u2693\ufe0e Access to the base flag that determines if this effect's VFX continuously plays for the full duration of the spell, rather than occuring once on hit. Returns : result (boolean) hasNoDuration \u2693\ufe0e Access to the base flag that determines if this effect doesn't use a duration. Returns : result (boolean) hasNoMagnitude \u2693\ufe0e Access to the base flag that determines if this effect doesn't make use of its magnitude. Returns : result (boolean) hitSoundEffect \u2693\ufe0e The sound effect that plays when the effect hits a target. Can be set to nil to use the default sound effect for the magic school. Returns : result ( tes3sound ) hitVisualEffect \u2693\ufe0e The visual played when a spell with this effect hits something. Returns : result ( tes3physicalObject ) icon \u2693\ufe0e The path to the icon to use for the effect. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the magic effect. Maps to values in tes3.effect . Values not defined in tes3.effect are also possible for magic effects added by mods that don't use tes3.claimSpellEffectId() to register their id. Returns : result (number) illegalDaedra \u2693\ufe0e Access to the base flag that determines if this effect summons an illegal daedra. This flag isn't used. Returns : result (boolean) isHarmful \u2693\ufe0e Access to the base flag that determines if this effect is counted as a hostile action. Returns : result (boolean) lightingBlue \u2693\ufe0e The amount of blue lighting to use when lighting projectiles. Returns : result (number) lightingGreen \u2693\ufe0e The amount of green lighting to use when lighting projectiles. Returns : result (number) lightingRed \u2693\ufe0e The amount of red lighting to use when lighting projectiles. Returns : result (number) name \u2693\ufe0e Read-only . Player-facing name of the effect. Returns : result (string) nonRecastable \u2693\ufe0e Access to the base flag that determines if this effect can be refreshed by recasting. Returns : result (boolean) particleTexture \u2693\ufe0e Read-only . The path to use for the particle effect texture. Returns : result (boolean) school \u2693\ufe0e The school that the effect is associated with. Maps to tes3.magicSchool constants. Returns : result (number) size \u2693\ufe0e Controls how much the visual effect scales with its magnitude. Returns : result (number) sizeCap \u2693\ufe0e The maximum possible size of the spell projectile with this effect. Returns : result (number) skill \u2693\ufe0e Read-only . The skill for the associated school that the effect is associated with. This skill is used when calculating experience gain per skill after a spell with this effect is cast. Maps to values in tes3.skill namespace. Returns : result (number) speed \u2693\ufe0e No description yet available. Returns : result (number) spellFailureSoundEffect \u2693\ufe0e Read-only . The sound effect that plays when a spell fails to cast, and when magic is resisted. This is determined only by the spell school. Returns : result ( tes3sound ) targetsAttributes \u2693\ufe0e Access to the base flag that determines if this effect makes use of attributes. Returns : result (boolean) targetsSkills \u2693\ufe0e Access to the base flag that determines if this effect makes use of skills. Returns : result (boolean) unreflectable \u2693\ufe0e Access to the base flag that determines if this effect can't be reflected. Returns : result (boolean) usesNegativeLighting \u2693\ufe0e Access to the base flag that determines if this effect provides negative lighting. Returns : result (boolean)","title":"tes3magicEffect"},{"location":"types/tes3magicEffect/#tes3magiceffect","text":"A core magic effect definition.","title":"tes3magicEffect"},{"location":"types/tes3magicEffect/#properties","text":"","title":"Properties"},{"location":"types/tes3magicEffect/#allowenchanting","text":"Access to the flag that determines if this effect can be used in enchanting. Returns : result (boolean)","title":"allowEnchanting"},{"location":"types/tes3magicEffect/#allowspellmaking","text":"Access to the flag that determines if this effect can be used with spellmaking. Returns : result (boolean)","title":"allowSpellmaking"},{"location":"types/tes3magicEffect/#appliesonce","text":"Access to the base flag that determines if this effect is applied only once. Returns : result (boolean)","title":"appliesOnce"},{"location":"types/tes3magicEffect/#areasoundeffect","text":"The sound effect that plays on area of effect impacts. Can be set to nil to use the default sound effect for the magic school. Returns : result ( tes3sound )","title":"areaSoundEffect"},{"location":"types/tes3magicEffect/#areavisualeffect","text":"The visual played when a spell with this effect, with area of effect hits something. Returns : result ( tes3physicalObject )","title":"areaVisualEffect"},{"location":"types/tes3magicEffect/#baseflags","text":"No description yet available. Returns : result (number)","title":"baseFlags"},{"location":"types/tes3magicEffect/#basemagickacost","text":"The base magicka cost to use in calculations. Returns : result (number)","title":"baseMagickaCost"},{"location":"types/tes3magicEffect/#bigicon","text":"The path to the large icon to use for the effect. This is derived from the base icon path. Returns : result (string)","title":"bigIcon"},{"location":"types/tes3magicEffect/#boltsoundeffect","text":"The sound effect that plays for magic projectiles. Can be set to nil to use the default sound effect for the magic school. Returns : result ( tes3sound )","title":"boltSoundEffect"},{"location":"types/tes3magicEffect/#boltvisualeffect","text":"The visual played when a spell with this effect is in flight. Returns : result ( tes3physicalObject )","title":"boltVisualEffect"},{"location":"types/tes3magicEffect/#cancastself","text":"Access to the base flag that determines if this effect can be used with a range of self. Returns : result (boolean)","title":"canCastSelf"},{"location":"types/tes3magicEffect/#cancasttarget","text":"Access to the base flag that determines if this effect can be used with a range of target. Returns : result (boolean)","title":"canCastTarget"},{"location":"types/tes3magicEffect/#cancasttouch","text":"Access to the base flag that determines if this effect can be used with a range of touch. Returns : result (boolean)","title":"canCastTouch"},{"location":"types/tes3magicEffect/#casterlinked","text":"Access to the base flag that determines if this effect must end if caster is dead, or not an NPC/creature. Not allowed in container or door trap spells. Note that this property is hidden in the Construction Set. Returns : result (boolean)","title":"casterLinked"},{"location":"types/tes3magicEffect/#castsoundeffect","text":"The sound effect that plays when casting. Can be set to nil to use the default sound effect for the magic school. Returns : result ( tes3sound )","title":"castSoundEffect"},{"location":"types/tes3magicEffect/#castvisualeffect","text":"The visual played when a spell with this effect is cast. Returns : result ( tes3physicalObject )","title":"castVisualEffect"},{"location":"types/tes3magicEffect/#description","text":"Player-facing description of the effect. Returns : result (string)","title":"description"},{"location":"types/tes3magicEffect/#flags","text":"Raw access to the numerical representation of flags. Typically shouldn't be used. Returns : result (number)","title":"flags"},{"location":"types/tes3magicEffect/#hascontinuousvfx","text":"Access to the base flag that determines if this effect's VFX continuously plays for the full duration of the spell, rather than occuring once on hit. Returns : result (boolean)","title":"hasContinuousVFX"},{"location":"types/tes3magicEffect/#hasnoduration","text":"Access to the base flag that determines if this effect doesn't use a duration. Returns : result (boolean)","title":"hasNoDuration"},{"location":"types/tes3magicEffect/#hasnomagnitude","text":"Access to the base flag that determines if this effect doesn't make use of its magnitude. Returns : result (boolean)","title":"hasNoMagnitude"},{"location":"types/tes3magicEffect/#hitsoundeffect","text":"The sound effect that plays when the effect hits a target. Can be set to nil to use the default sound effect for the magic school. Returns : result ( tes3sound )","title":"hitSoundEffect"},{"location":"types/tes3magicEffect/#hitvisualeffect","text":"The visual played when a spell with this effect hits something. Returns : result ( tes3physicalObject )","title":"hitVisualEffect"},{"location":"types/tes3magicEffect/#icon","text":"The path to the icon to use for the effect. Returns : result (string)","title":"icon"},{"location":"types/tes3magicEffect/#id","text":"Read-only . The unique identifier for the magic effect. Maps to values in tes3.effect . Values not defined in tes3.effect are also possible for magic effects added by mods that don't use tes3.claimSpellEffectId() to register their id. Returns : result (number)","title":"id"},{"location":"types/tes3magicEffect/#illegaldaedra","text":"Access to the base flag that determines if this effect summons an illegal daedra. This flag isn't used. Returns : result (boolean)","title":"illegalDaedra"},{"location":"types/tes3magicEffect/#isharmful","text":"Access to the base flag that determines if this effect is counted as a hostile action. Returns : result (boolean)","title":"isHarmful"},{"location":"types/tes3magicEffect/#lightingblue","text":"The amount of blue lighting to use when lighting projectiles. Returns : result (number)","title":"lightingBlue"},{"location":"types/tes3magicEffect/#lightinggreen","text":"The amount of green lighting to use when lighting projectiles. Returns : result (number)","title":"lightingGreen"},{"location":"types/tes3magicEffect/#lightingred","text":"The amount of red lighting to use when lighting projectiles. Returns : result (number)","title":"lightingRed"},{"location":"types/tes3magicEffect/#name","text":"Read-only . Player-facing name of the effect. Returns : result (string)","title":"name"},{"location":"types/tes3magicEffect/#nonrecastable","text":"Access to the base flag that determines if this effect can be refreshed by recasting. Returns : result (boolean)","title":"nonRecastable"},{"location":"types/tes3magicEffect/#particletexture","text":"Read-only . The path to use for the particle effect texture. Returns : result (boolean)","title":"particleTexture"},{"location":"types/tes3magicEffect/#school","text":"The school that the effect is associated with. Maps to tes3.magicSchool constants. Returns : result (number)","title":"school"},{"location":"types/tes3magicEffect/#size","text":"Controls how much the visual effect scales with its magnitude. Returns : result (number)","title":"size"},{"location":"types/tes3magicEffect/#sizecap","text":"The maximum possible size of the spell projectile with this effect. Returns : result (number)","title":"sizeCap"},{"location":"types/tes3magicEffect/#skill","text":"Read-only . The skill for the associated school that the effect is associated with. This skill is used when calculating experience gain per skill after a spell with this effect is cast. Maps to values in tes3.skill namespace. Returns : result (number)","title":"skill"},{"location":"types/tes3magicEffect/#speed","text":"No description yet available. Returns : result (number)","title":"speed"},{"location":"types/tes3magicEffect/#spellfailuresoundeffect","text":"Read-only . The sound effect that plays when a spell fails to cast, and when magic is resisted. This is determined only by the spell school. Returns : result ( tes3sound )","title":"spellFailureSoundEffect"},{"location":"types/tes3magicEffect/#targetsattributes","text":"Access to the base flag that determines if this effect makes use of attributes. Returns : result (boolean)","title":"targetsAttributes"},{"location":"types/tes3magicEffect/#targetsskills","text":"Access to the base flag that determines if this effect makes use of skills. Returns : result (boolean)","title":"targetsSkills"},{"location":"types/tes3magicEffect/#unreflectable","text":"Access to the base flag that determines if this effect can't be reflected. Returns : result (boolean)","title":"unreflectable"},{"location":"types/tes3magicEffect/#usesnegativelighting","text":"Access to the base flag that determines if this effect provides negative lighting. Returns : result (boolean)","title":"usesNegativeLighting"},{"location":"types/tes3magicEffectInstance/","text":"tes3magicEffectInstance \u2693\ufe0e Represents an individual instance of a magic effect being applied to a reference. Properties \u2693\ufe0e createdData \u2693\ufe0e Read-only . The bound or summoned data associated with the instance, for summoned creatures or items. The stack's object will be a reference in the case of summoned creatures. Returns : result ( tes3equipmentStack ) cumulativeMagnitude \u2693\ufe0e No description yet available. Returns : result (number) effectiveMagnitude \u2693\ufe0e The effective magnitude of the effect, after all resistances are applied. Returns : result (number) isBoundItem \u2693\ufe0e Read-only . If this effect has summoned a bound item. Returns : result (boolean) isSummon \u2693\ufe0e Read-only . If this effect has summoned a creature. Returns : result (boolean) lastUsedArmor \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3equipmentStack ) lastUsedEnchItem \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3equipmentStack ) lastUsedLight \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3equipmentStack ) lastUsedShield \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3equipmentStack ) lastUsedWeapon \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3equipmentStack ) magnitude \u2693\ufe0e The magnitude of the effect, before any resistances are applied. Returns : result (number) resistedPercent \u2693\ufe0e The percentage of the magic effect that has been resisted. A value of 100 indicates that the magic effect has been completely resisted, whereas a value of 0 indicates it has not been resisted and is applied with its full magnitude. Values over 100 cause the magic effect to heal the actor instead of harming it, if it is a damaging magic effect. Returns : result (number) state \u2693\ufe0e The state of this magic effect instance. Maps to tes3.spellState constants. Returns : result (number) target \u2693\ufe0e No description yet available. Returns : result ( tes3reference ) timeActive \u2693\ufe0e The time since the effect started affecting its target in seconds. Returns : result (number) visual \u2693\ufe0e The associated visual effect. Returns : result ( tes3vfx )","title":"tes3magicEffectInstance"},{"location":"types/tes3magicEffectInstance/#tes3magiceffectinstance","text":"Represents an individual instance of a magic effect being applied to a reference.","title":"tes3magicEffectInstance"},{"location":"types/tes3magicEffectInstance/#properties","text":"","title":"Properties"},{"location":"types/tes3magicEffectInstance/#createddata","text":"Read-only . The bound or summoned data associated with the instance, for summoned creatures or items. The stack's object will be a reference in the case of summoned creatures. Returns : result ( tes3equipmentStack )","title":"createdData"},{"location":"types/tes3magicEffectInstance/#cumulativemagnitude","text":"No description yet available. Returns : result (number)","title":"cumulativeMagnitude"},{"location":"types/tes3magicEffectInstance/#effectivemagnitude","text":"The effective magnitude of the effect, after all resistances are applied. Returns : result (number)","title":"effectiveMagnitude"},{"location":"types/tes3magicEffectInstance/#isbounditem","text":"Read-only . If this effect has summoned a bound item. Returns : result (boolean)","title":"isBoundItem"},{"location":"types/tes3magicEffectInstance/#issummon","text":"Read-only . If this effect has summoned a creature. Returns : result (boolean)","title":"isSummon"},{"location":"types/tes3magicEffectInstance/#lastusedarmor","text":"Read-only . No description yet available. Returns : result ( tes3equipmentStack )","title":"lastUsedArmor"},{"location":"types/tes3magicEffectInstance/#lastusedenchitem","text":"Read-only . No description yet available. Returns : result ( tes3equipmentStack )","title":"lastUsedEnchItem"},{"location":"types/tes3magicEffectInstance/#lastusedlight","text":"Read-only . No description yet available. Returns : result ( tes3equipmentStack )","title":"lastUsedLight"},{"location":"types/tes3magicEffectInstance/#lastusedshield","text":"Read-only . No description yet available. Returns : result ( tes3equipmentStack )","title":"lastUsedShield"},{"location":"types/tes3magicEffectInstance/#lastusedweapon","text":"Read-only . No description yet available. Returns : result ( tes3equipmentStack )","title":"lastUsedWeapon"},{"location":"types/tes3magicEffectInstance/#magnitude","text":"The magnitude of the effect, before any resistances are applied. Returns : result (number)","title":"magnitude"},{"location":"types/tes3magicEffectInstance/#resistedpercent","text":"The percentage of the magic effect that has been resisted. A value of 100 indicates that the magic effect has been completely resisted, whereas a value of 0 indicates it has not been resisted and is applied with its full magnitude. Values over 100 cause the magic effect to heal the actor instead of harming it, if it is a damaging magic effect. Returns : result (number)","title":"resistedPercent"},{"location":"types/tes3magicEffectInstance/#state","text":"The state of this magic effect instance. Maps to tes3.spellState constants. Returns : result (number)","title":"state"},{"location":"types/tes3magicEffectInstance/#target","text":"No description yet available. Returns : result ( tes3reference )","title":"target"},{"location":"types/tes3magicEffectInstance/#timeactive","text":"The time since the effect started affecting its target in seconds. Returns : result (number)","title":"timeActive"},{"location":"types/tes3magicEffectInstance/#visual","text":"The associated visual effect. Returns : result ( tes3vfx )","title":"visual"},{"location":"types/tes3magicSourceInstance/","text":"tes3magicSourceInstance \u2693\ufe0e A game structure that keeps track of a magic source on an object. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) castChanceOverride \u2693\ufe0e No description yet available. Returns : result (number) caster \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3reference ) corprusHoursSinceLastWorsen \u2693\ufe0e The number of hours passed since the player's corprus state last worsened. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) item \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3item ) itemData \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3itemData ) itemID \u2693\ufe0e Read-only . No description yet available. Returns : result (string) magicID \u2693\ufe0e Read-only . For spells created in the Contruction Set, this is the id of the spell defined there. For spells created during play, with spellmaking, this is a number. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) projectile \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3mobileProjectile ) serialNumber \u2693\ufe0e Read-only . Unique indentifier for just this magic source. Returns : result (number) source \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3alchemy , tes3enchantment , tes3spell ) sourceEffects \u2693\ufe0e Read-only . An array-style table holding spell effects this magic source has. Returns : result ( tes3effect []) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) sourceType \u2693\ufe0e Read-only . The type of this magic source. Maps to tes3.magicSourceType constants. Returns : result (number) state \u2693\ufe0e Shows if the state is pre-cast, cast, beginning, working, ending, retired, etc. Maps to tes3.spellState constants. Returns : result (number) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) target \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3reference ) timestampCastBegin \u2693\ufe0e The timestamp at which this magic source was cast. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) getEffectInstance \u2693\ufe0e Gets the magic effect instance for a given effect index and target reference. Effect instances may not all be active on a target, due to reflect, absorption, dispels, different durations and other factors. local result = myObject : getEffectInstance ( index , target ) Parameters : index (number): The index in the effect list to fetch, between 0 and 7 . target ( tes3reference ): The target actor for the effect. Returns : result ( tes3magicEffectInstance ) getMagnitudeForIndex \u2693\ufe0e Gets the magnitude from the casting source for a given effect index. local result = myObject : getMagnitudeForIndex ( index ) Parameters : index (number): The index in the effect list to fetch, between 0 and 7 . Returns : result (number) playVisualEffect \u2693\ufe0e This function plays an animation for an effect from the tes3magicSourceInstance object. myObject : playVisualEffect ({ effectIndex = ..., position = ..., visual = ..., scale = ..., reference = ... }) Parameters : params (table) effectIndex (number): The index in the effect whose visual will be played, a number in range [0, 7]. position ( tes3vector3 , table): A table or a tes3vector3 holding x , y and z coordinates at which the visual effect will be played. visual ( tes3physicalObject , string): The visual effect to be played. scale (number): Default : 1 . The scale of the effect. Only applies to effects that are designed to be scaled. reference ( tes3reference , string): A reference on which the visual effect will be played. Example: Plays the soul trap effect if the player kills a target that is affected by vampirism. local function onDamaged ( e ) -- Check if we killed our target with this damage. if e . killingBlow then -- Iterate through the killed target's active magic effects. for _ , activeMagicEffect in pairs ( e . mobile . activeMagicEffectList ) do -- Check if the target is a vampire. if activeMagicEffect . effectId == tes3 . effect . vampirism then -- Play the soul trap visual effect at the position of the target. activeMagicEffect . instance : playVisualEffect { effectIndex = 0 , position = e . mobile . position , visual = \"VFX_Soul_Trap\" } break end end end end event . register ( tes3 . event . damaged , onDamaged )","title":"tes3magicSourceInstance"},{"location":"types/tes3magicSourceInstance/#tes3magicsourceinstance","text":"A game structure that keeps track of a magic source on an object. This type inherits the following: tes3baseObject","title":"tes3magicSourceInstance"},{"location":"types/tes3magicSourceInstance/#properties","text":"","title":"Properties"},{"location":"types/tes3magicSourceInstance/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3magicSourceInstance/#castchanceoverride","text":"No description yet available. Returns : result (number)","title":"castChanceOverride"},{"location":"types/tes3magicSourceInstance/#caster","text":"Read-only . No description yet available. Returns : result ( tes3reference )","title":"caster"},{"location":"types/tes3magicSourceInstance/#corprushourssincelastworsen","text":"The number of hours passed since the player's corprus state last worsened. Returns : result (number)","title":"corprusHoursSinceLastWorsen"},{"location":"types/tes3magicSourceInstance/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3magicSourceInstance/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3magicSourceInstance/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3magicSourceInstance/#item","text":"Read-only . No description yet available. Returns : result ( tes3item )","title":"item"},{"location":"types/tes3magicSourceInstance/#itemdata","text":"Read-only . No description yet available. Returns : result ( tes3itemData )","title":"itemData"},{"location":"types/tes3magicSourceInstance/#itemid","text":"Read-only . No description yet available. Returns : result (string)","title":"itemID"},{"location":"types/tes3magicSourceInstance/#magicid","text":"Read-only . For spells created in the Contruction Set, this is the id of the spell defined there. For spells created during play, with spellmaking, this is a number. Returns : result (string)","title":"magicID"},{"location":"types/tes3magicSourceInstance/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3magicSourceInstance/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3magicSourceInstance/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3magicSourceInstance/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3magicSourceInstance/#projectile","text":"Read-only . No description yet available. Returns : result ( tes3mobileProjectile )","title":"projectile"},{"location":"types/tes3magicSourceInstance/#serialnumber","text":"Read-only . Unique indentifier for just this magic source. Returns : result (number)","title":"serialNumber"},{"location":"types/tes3magicSourceInstance/#source","text":"Read-only . No description yet available. Returns : result ( tes3alchemy , tes3enchantment , tes3spell )","title":"source"},{"location":"types/tes3magicSourceInstance/#sourceeffects","text":"Read-only . An array-style table holding spell effects this magic source has. Returns : result ( tes3effect [])","title":"sourceEffects"},{"location":"types/tes3magicSourceInstance/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3magicSourceInstance/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3magicSourceInstance/#sourcetype","text":"Read-only . The type of this magic source. Maps to tes3.magicSourceType constants. Returns : result (number)","title":"sourceType"},{"location":"types/tes3magicSourceInstance/#state","text":"Shows if the state is pre-cast, cast, beginning, working, ending, retired, etc. Maps to tes3.spellState constants. Returns : result (number)","title":"state"},{"location":"types/tes3magicSourceInstance/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3magicSourceInstance/#target","text":"Read-only . No description yet available. Returns : result ( tes3reference )","title":"target"},{"location":"types/tes3magicSourceInstance/#timestampcastbegin","text":"The timestamp at which this magic source was cast. Returns : result (number)","title":"timestampCastBegin"},{"location":"types/tes3magicSourceInstance/#methods","text":"","title":"Methods"},{"location":"types/tes3magicSourceInstance/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3magicSourceInstance/#geteffectinstance","text":"Gets the magic effect instance for a given effect index and target reference. Effect instances may not all be active on a target, due to reflect, absorption, dispels, different durations and other factors. local result = myObject : getEffectInstance ( index , target ) Parameters : index (number): The index in the effect list to fetch, between 0 and 7 . target ( tes3reference ): The target actor for the effect. Returns : result ( tes3magicEffectInstance )","title":"getEffectInstance"},{"location":"types/tes3magicSourceInstance/#getmagnitudeforindex","text":"Gets the magnitude from the casting source for a given effect index. local result = myObject : getMagnitudeForIndex ( index ) Parameters : index (number): The index in the effect list to fetch, between 0 and 7 . Returns : result (number)","title":"getMagnitudeForIndex"},{"location":"types/tes3magicSourceInstance/#playvisualeffect","text":"This function plays an animation for an effect from the tes3magicSourceInstance object. myObject : playVisualEffect ({ effectIndex = ..., position = ..., visual = ..., scale = ..., reference = ... }) Parameters : params (table) effectIndex (number): The index in the effect whose visual will be played, a number in range [0, 7]. position ( tes3vector3 , table): A table or a tes3vector3 holding x , y and z coordinates at which the visual effect will be played. visual ( tes3physicalObject , string): The visual effect to be played. scale (number): Default : 1 . The scale of the effect. Only applies to effects that are designed to be scaled. reference ( tes3reference , string): A reference on which the visual effect will be played. Example: Plays the soul trap effect if the player kills a target that is affected by vampirism. local function onDamaged ( e ) -- Check if we killed our target with this damage. if e . killingBlow then -- Iterate through the killed target's active magic effects. for _ , activeMagicEffect in pairs ( e . mobile . activeMagicEffectList ) do -- Check if the target is a vampire. if activeMagicEffect . effectId == tes3 . effect . vampirism then -- Play the soul trap visual effect at the position of the target. activeMagicEffect . instance : playVisualEffect { effectIndex = 0 , position = e . mobile . position , visual = \"VFX_Soul_Trap\" } break end end end end event . register ( tes3 . event . damaged , onDamaged )","title":"playVisualEffect"},{"location":"types/tes3markData/","text":"tes3markData \u2693\ufe0e A simple structure to hold mark/recall data. Properties \u2693\ufe0e cell \u2693\ufe0e Read-only . The cell to recall to. Returns : result ( tes3cell ) position \u2693\ufe0e The position to recall to. Returns : result ( tes3vector3 ) rotation \u2693\ufe0e The rotation to use when recalling. It's the Euler rotation around the Z axis in Radians. Returns : result (number)","title":"tes3markData"},{"location":"types/tes3markData/#tes3markdata","text":"A simple structure to hold mark/recall data.","title":"tes3markData"},{"location":"types/tes3markData/#properties","text":"","title":"Properties"},{"location":"types/tes3markData/#cell","text":"Read-only . The cell to recall to. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3markData/#position","text":"The position to recall to. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3markData/#rotation","text":"The rotation to use when recalling. It's the Euler rotation around the Z axis in Radians. Returns : result (number)","title":"rotation"},{"location":"types/tes3matrix33/","text":"tes3matrix33 \u2693\ufe0e A 3 by 3 matrix. You can perform following arithmetic with this type: == . Properties \u2693\ufe0e x \u2693\ufe0e The first row of the matrix. Returns : result ( tes3vector3 ) y \u2693\ufe0e The second row of the matrix. Returns : result ( tes3vector3 ) z \u2693\ufe0e The third row of the matrix. Returns : result ( tes3vector3 ) Methods \u2693\ufe0e copy \u2693\ufe0e Creates a copy of the matrix. local result = myObject : copy () Returns : result ( tes3matrix33 ) fromEulerXYZ \u2693\ufe0e Fills the matrix with values from euler coordinates. myObject : fromEulerXYZ ( x , y , z ) Parameters : x (number) y (number) z (number) fromEulerZYX \u2693\ufe0e Fills the matrix with values from euler coordinates. myObject : fromEulerZYX ( z , y , x ) Parameters : z (number) y (number) x (number) fromQuaternion \u2693\ufe0e Fill the matrix by converting a quaternion. myObject : fromQuaternion ( quaternion ) Parameters : quaternion ( niQuaternion ) invert \u2693\ufe0e Inverts the matrix. local matrix , valid = myObject : invert () Returns : matrix ( tes3matrix33 ) valid (boolean) reorthogonalize \u2693\ufe0e Reorthogonalizes the matrix. local result = myObject : reorthogonalize () Returns : result (boolean) toEulerXYZ \u2693\ufe0e Converts the matrix to series of rotations along each axis. local vector3 , isUnique = myObject : toEulerXYZ () Returns : vector3 ( tes3vector3 ) isUnique (boolean) toEulerZYX \u2693\ufe0e Converts the matrix to series of rotations along each axis. local vector3 , isUnique = myObject : toEulerZYX () Returns : vector3 ( tes3vector3 ) isUnique (boolean) toIdentity \u2693\ufe0e Converts the matrix to the identity matrix's values. myObject : toIdentity () toQuaternion \u2693\ufe0e Convert the matrix into a quaternion. local result = myObject : toQuaternion () Returns : result ( niQuaternion ) toRotation \u2693\ufe0e Makes this matrix a rotation matrix with provided axis-angle rotation parameters. myObject : toRotation ( angle , x , y , z ) Parameters : angle (number) x (number) y (number) z (number) toRotationX \u2693\ufe0e Fills this matrix with the values needed to rotate a 3-by-1 vector or 3-by-N matrix of vectors around the X axis by x radians. For the rotation matrix A and vector v, the rotated vector is given by A * v. myObject : toRotationX ( x ) Parameters : x (number): In radians. toRotationY \u2693\ufe0e Fills this matrix with the values needed to rotate a 3-by-1 vector or 3-by-N matrix of vectors around the Y axis by y radians. For the rotation matrix A and vector v, the rotated vector is given by A * v. myObject : toRotationY ( y ) Parameters : y (number): In radians. toRotationZ \u2693\ufe0e Fills this matrix with the values needed to rotate a 3-by-1 vector or 3-by-N matrix of vectors around the Z axis by z radians. For the rotation matrix A and vector v, the rotated vector is given by A * v. myObject : toRotationZ ( z ) Parameters : z (number): In radians. toZero \u2693\ufe0e Zeroes out all values in the matrix. myObject : toZero () transpose \u2693\ufe0e No description yet available. local result = myObject : transpose () Returns : result ( tes3matrix33 ) Functions \u2693\ufe0e new \u2693\ufe0e Creates a new 3 by 3 matrix from 3 provided vectors or 9 numbers. Creates an empty matrix if nothing is provided. local matrix = tes3matrix33 . new ( x0 , y0 , z0 , x1 , y1 , z1 , x2 , y2 , z2 , x , y , z ) Parameters : x0 (number): Default : 0 . y0 (number): Default : 0 . z0 (number): Default : 0 . x1 (number): Default : 0 . y1 (number): Default : 0 . z1 (number): Default : 0 . x2 (number): Default : 0 . y2 (number): Default : 0 . z2 (number): Default : 0 . x ( tes3vector3 ): Optional . y ( tes3vector3 ): Optional . z ( tes3vector3 ): Optional . Returns : matrix ( tes3matrix33 ) Math Operations \u2693\ufe0e Addition ( + ) \u2693\ufe0e Left operand type Right operand type Result type Description tes3matrix33 tes3matrix33 tes3matrix33 The matrix addition. Multiplication ( * ) \u2693\ufe0e Left operand type Right operand type Result type Description tes3matrix33 tes3matrix33 tes3matrix33 The matrix multiplication. Geometrically, this will concatenate the transformations of both matrices in the resulting matrix. tes3matrix33 tes3vector3 tes3vector3 Multiplies the matrix by a vector. The resulting vector is staring vector with the matrix' transformations applied. tes3matrix33 number tes3matrix33 Multiplies the matrix by a scalar. Subtraction ( - ) \u2693\ufe0e Left operand type Right operand type Result type Description tes3matrix33 tes3matrix33 tes3matrix33 The matrix subtraction.","title":"Tes3matrix33"},{"location":"types/tes3matrix33/#tes3matrix33","text":"A 3 by 3 matrix. You can perform following arithmetic with this type: == .","title":"tes3matrix33"},{"location":"types/tes3matrix33/#properties","text":"","title":"Properties"},{"location":"types/tes3matrix33/#x","text":"The first row of the matrix. Returns : result ( tes3vector3 )","title":"x"},{"location":"types/tes3matrix33/#y","text":"The second row of the matrix. Returns : result ( tes3vector3 )","title":"y"},{"location":"types/tes3matrix33/#z","text":"The third row of the matrix. Returns : result ( tes3vector3 )","title":"z"},{"location":"types/tes3matrix33/#methods","text":"","title":"Methods"},{"location":"types/tes3matrix33/#copy","text":"Creates a copy of the matrix. local result = myObject : copy () Returns : result ( tes3matrix33 )","title":"copy"},{"location":"types/tes3matrix33/#fromeulerxyz","text":"Fills the matrix with values from euler coordinates. myObject : fromEulerXYZ ( x , y , z ) Parameters : x (number) y (number) z (number)","title":"fromEulerXYZ"},{"location":"types/tes3matrix33/#fromeulerzyx","text":"Fills the matrix with values from euler coordinates. myObject : fromEulerZYX ( z , y , x ) Parameters : z (number) y (number) x (number)","title":"fromEulerZYX"},{"location":"types/tes3matrix33/#fromquaternion","text":"Fill the matrix by converting a quaternion. myObject : fromQuaternion ( quaternion ) Parameters : quaternion ( niQuaternion )","title":"fromQuaternion"},{"location":"types/tes3matrix33/#invert","text":"Inverts the matrix. local matrix , valid = myObject : invert () Returns : matrix ( tes3matrix33 ) valid (boolean)","title":"invert"},{"location":"types/tes3matrix33/#reorthogonalize","text":"Reorthogonalizes the matrix. local result = myObject : reorthogonalize () Returns : result (boolean)","title":"reorthogonalize"},{"location":"types/tes3matrix33/#toeulerxyz","text":"Converts the matrix to series of rotations along each axis. local vector3 , isUnique = myObject : toEulerXYZ () Returns : vector3 ( tes3vector3 ) isUnique (boolean)","title":"toEulerXYZ"},{"location":"types/tes3matrix33/#toeulerzyx","text":"Converts the matrix to series of rotations along each axis. local vector3 , isUnique = myObject : toEulerZYX () Returns : vector3 ( tes3vector3 ) isUnique (boolean)","title":"toEulerZYX"},{"location":"types/tes3matrix33/#toidentity","text":"Converts the matrix to the identity matrix's values. myObject : toIdentity ()","title":"toIdentity"},{"location":"types/tes3matrix33/#toquaternion","text":"Convert the matrix into a quaternion. local result = myObject : toQuaternion () Returns : result ( niQuaternion )","title":"toQuaternion"},{"location":"types/tes3matrix33/#torotation","text":"Makes this matrix a rotation matrix with provided axis-angle rotation parameters. myObject : toRotation ( angle , x , y , z ) Parameters : angle (number) x (number) y (number) z (number)","title":"toRotation"},{"location":"types/tes3matrix33/#torotationx","text":"Fills this matrix with the values needed to rotate a 3-by-1 vector or 3-by-N matrix of vectors around the X axis by x radians. For the rotation matrix A and vector v, the rotated vector is given by A * v. myObject : toRotationX ( x ) Parameters : x (number): In radians.","title":"toRotationX"},{"location":"types/tes3matrix33/#torotationy","text":"Fills this matrix with the values needed to rotate a 3-by-1 vector or 3-by-N matrix of vectors around the Y axis by y radians. For the rotation matrix A and vector v, the rotated vector is given by A * v. myObject : toRotationY ( y ) Parameters : y (number): In radians.","title":"toRotationY"},{"location":"types/tes3matrix33/#torotationz","text":"Fills this matrix with the values needed to rotate a 3-by-1 vector or 3-by-N matrix of vectors around the Z axis by z radians. For the rotation matrix A and vector v, the rotated vector is given by A * v. myObject : toRotationZ ( z ) Parameters : z (number): In radians.","title":"toRotationZ"},{"location":"types/tes3matrix33/#tozero","text":"Zeroes out all values in the matrix. myObject : toZero ()","title":"toZero"},{"location":"types/tes3matrix33/#transpose","text":"No description yet available. local result = myObject : transpose () Returns : result ( tes3matrix33 )","title":"transpose"},{"location":"types/tes3matrix33/#functions","text":"","title":"Functions"},{"location":"types/tes3matrix33/#new","text":"Creates a new 3 by 3 matrix from 3 provided vectors or 9 numbers. Creates an empty matrix if nothing is provided. local matrix = tes3matrix33 . new ( x0 , y0 , z0 , x1 , y1 , z1 , x2 , y2 , z2 , x , y , z ) Parameters : x0 (number): Default : 0 . y0 (number): Default : 0 . z0 (number): Default : 0 . x1 (number): Default : 0 . y1 (number): Default : 0 . z1 (number): Default : 0 . x2 (number): Default : 0 . y2 (number): Default : 0 . z2 (number): Default : 0 . x ( tes3vector3 ): Optional . y ( tes3vector3 ): Optional . z ( tes3vector3 ): Optional . Returns : matrix ( tes3matrix33 )","title":"new"},{"location":"types/tes3matrix33/#math-operations","text":"","title":"Math Operations"},{"location":"types/tes3matrix33/#addition","text":"Left operand type Right operand type Result type Description tes3matrix33 tes3matrix33 tes3matrix33 The matrix addition.","title":"Addition (+)"},{"location":"types/tes3matrix33/#multiplication","text":"Left operand type Right operand type Result type Description tes3matrix33 tes3matrix33 tes3matrix33 The matrix multiplication. Geometrically, this will concatenate the transformations of both matrices in the resulting matrix. tes3matrix33 tes3vector3 tes3vector3 Multiplies the matrix by a vector. The resulting vector is staring vector with the matrix' transformations applied. tes3matrix33 number tes3matrix33 Multiplies the matrix by a scalar.","title":"Multiplication (*)"},{"location":"types/tes3matrix33/#subtraction-","text":"Left operand type Right operand type Result type Description tes3matrix33 tes3matrix33 tes3matrix33 The matrix subtraction.","title":"Subtraction (-)"},{"location":"types/tes3matrix44/","text":"tes3matrix44 \u2693\ufe0e A 4 by 4 matrix. You can perform following arithmetic with this type: == . Properties \u2693\ufe0e w \u2693\ufe0e The 1st row of the matrix. Returns : result ( tes3vector4 ) x \u2693\ufe0e The 2nd row of the matrix. Returns : result ( tes3vector4 ) y \u2693\ufe0e The 3rd row of the matrix. Returns : result ( tes3vector4 ) z \u2693\ufe0e The 4th row of the matrix. Returns : result ( tes3vector4 ) Methods \u2693\ufe0e copy \u2693\ufe0e Creates a copy of the matrix. local result = myObject : copy () Returns : result ( tes3matrix44 ) toZero \u2693\ufe0e Zeroes out all values in the matrix. myObject : toZero () Functions \u2693\ufe0e new \u2693\ufe0e Creates a new 4 by 4 matrix from 4 provided vectors or 16 numbers. Creates an empty matrix if nothing is provided. local matrix = tes3matrix44 . new ( w0 , x0 , y0 , z0 , w1 , x1 , y1 , z1 , w2 , x2 , y2 , z2 , w3 , x3 , y3 , z3 , w , x , y , z ) Parameters : w0 (number): Default : 0 . x0 (number): Default : 0 . y0 (number): Default : 0 . z0 (number): Default : 0 . w1 (number): Default : 0 . x1 (number): Default : 0 . y1 (number): Default : 0 . z1 (number): Default : 0 . w2 (number): Default : 0 . x2 (number): Default : 0 . y2 (number): Default : 0 . z2 (number): Default : 0 . w3 (number): Default : 0 . x3 (number): Default : 0 . y3 (number): Default : 0 . z3 (number): Default : 0 . w ( tes3vector4 ): Optional . x ( tes3vector4 ): Optional . y ( tes3vector4 ): Optional . z ( tes3vector4 ): Optional . Returns : matrix ( tes3matrix44 ) Math Operations \u2693\ufe0e Addition ( + ) \u2693\ufe0e Left operand type Right operand type Result type Description tes3matrix44 tes3matrix44 tes3matrix44 The matrix addition. Multiplication ( * ) \u2693\ufe0e Left operand type Right operand type Result type Description tes3matrix44 tes3matrix44 tes3matrix44 The matrix multiplication. Geometrically, this will concatenate the transformations of both matrices in the resulting matrix. tes3matrix44 number tes3matrix44 Multiplies the matrix by a scalar. Subtraction ( - ) \u2693\ufe0e Left operand type Right operand type Result type Description tes3matrix44 tes3matrix44 tes3matrix44 The matrix subtraction.","title":"Tes3matrix44"},{"location":"types/tes3matrix44/#tes3matrix44","text":"A 4 by 4 matrix. You can perform following arithmetic with this type: == .","title":"tes3matrix44"},{"location":"types/tes3matrix44/#properties","text":"","title":"Properties"},{"location":"types/tes3matrix44/#w","text":"The 1st row of the matrix. Returns : result ( tes3vector4 )","title":"w"},{"location":"types/tes3matrix44/#x","text":"The 2nd row of the matrix. Returns : result ( tes3vector4 )","title":"x"},{"location":"types/tes3matrix44/#y","text":"The 3rd row of the matrix. Returns : result ( tes3vector4 )","title":"y"},{"location":"types/tes3matrix44/#z","text":"The 4th row of the matrix. Returns : result ( tes3vector4 )","title":"z"},{"location":"types/tes3matrix44/#methods","text":"","title":"Methods"},{"location":"types/tes3matrix44/#copy","text":"Creates a copy of the matrix. local result = myObject : copy () Returns : result ( tes3matrix44 )","title":"copy"},{"location":"types/tes3matrix44/#tozero","text":"Zeroes out all values in the matrix. myObject : toZero ()","title":"toZero"},{"location":"types/tes3matrix44/#functions","text":"","title":"Functions"},{"location":"types/tes3matrix44/#new","text":"Creates a new 4 by 4 matrix from 4 provided vectors or 16 numbers. Creates an empty matrix if nothing is provided. local matrix = tes3matrix44 . new ( w0 , x0 , y0 , z0 , w1 , x1 , y1 , z1 , w2 , x2 , y2 , z2 , w3 , x3 , y3 , z3 , w , x , y , z ) Parameters : w0 (number): Default : 0 . x0 (number): Default : 0 . y0 (number): Default : 0 . z0 (number): Default : 0 . w1 (number): Default : 0 . x1 (number): Default : 0 . y1 (number): Default : 0 . z1 (number): Default : 0 . w2 (number): Default : 0 . x2 (number): Default : 0 . y2 (number): Default : 0 . z2 (number): Default : 0 . w3 (number): Default : 0 . x3 (number): Default : 0 . y3 (number): Default : 0 . z3 (number): Default : 0 . w ( tes3vector4 ): Optional . x ( tes3vector4 ): Optional . y ( tes3vector4 ): Optional . z ( tes3vector4 ): Optional . Returns : matrix ( tes3matrix44 )","title":"new"},{"location":"types/tes3matrix44/#math-operations","text":"","title":"Math Operations"},{"location":"types/tes3matrix44/#addition","text":"Left operand type Right operand type Result type Description tes3matrix44 tes3matrix44 tes3matrix44 The matrix addition.","title":"Addition (+)"},{"location":"types/tes3matrix44/#multiplication","text":"Left operand type Right operand type Result type Description tes3matrix44 tes3matrix44 tes3matrix44 The matrix multiplication. Geometrically, this will concatenate the transformations of both matrices in the resulting matrix. tes3matrix44 number tes3matrix44 Multiplies the matrix by a scalar.","title":"Multiplication (*)"},{"location":"types/tes3matrix44/#subtraction-","text":"Left operand type Right operand type Result type Description tes3matrix44 tes3matrix44 tes3matrix44 The matrix subtraction.","title":"Subtraction (-)"},{"location":"types/tes3misc/","text":"tes3misc \u2693\ufe0e A core miscellaneous object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isGold \u2693\ufe0e True if the misc item is a valid form of gold. Returns : result (boolean) isKey \u2693\ufe0e Access to the flag determining if this item is recognized as a key. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) isSoulGem \u2693\ufe0e Read-only . Determines if this item is a soul gem. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e Read-only . The script that runs on the object. Returns : result ( tes3script ) soulGemCapacity \u2693\ufe0e Read-only . Fetches capacity of the soul gem, if this item is a soul gem. Returns : result (number) soulGemData \u2693\ufe0e Read-only . Fetches related soul gem data, if this item is a soul gem. Returns : result ( tes3soulGemData ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) createCopy \u2693\ufe0e Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3misc )","title":"Tes3misc"},{"location":"types/tes3misc/#tes3misc","text":"A core miscellaneous object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3misc"},{"location":"types/tes3misc/#properties","text":"","title":"Properties"},{"location":"types/tes3misc/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3misc/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3misc/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3misc/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3misc/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3misc/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3misc/#isgold","text":"True if the misc item is a valid form of gold. Returns : result (boolean)","title":"isGold"},{"location":"types/tes3misc/#iskey","text":"Access to the flag determining if this item is recognized as a key. Returns : result (boolean)","title":"isKey"},{"location":"types/tes3misc/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3misc/#issoulgem","text":"Read-only . Determines if this item is a soul gem. Returns : result (boolean)","title":"isSoulGem"},{"location":"types/tes3misc/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3misc/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3misc/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3misc/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3misc/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3misc/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3misc/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3misc/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3misc/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3misc/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3misc/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3misc/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3misc/#script","text":"Read-only . The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3misc/#soulgemcapacity","text":"Read-only . Fetches capacity of the soul gem, if this item is a soul gem. Returns : result (number)","title":"soulGemCapacity"},{"location":"types/tes3misc/#soulgemdata","text":"Read-only . Fetches related soul gem data, if this item is a soul gem. Returns : result ( tes3soulGemData )","title":"soulGemData"},{"location":"types/tes3misc/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3misc/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3misc/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3misc/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3misc/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3misc/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3misc/#methods","text":"","title":"Methods"},{"location":"types/tes3misc/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3misc/#createcopy","text":"Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3misc )","title":"createCopy"},{"location":"types/tes3mobManager/","text":"tes3mobManager \u2693\ufe0e The manager responsible for mobile objects and collision. Properties \u2693\ufe0e gravity \u2693\ufe0e The gravity applied to all actors. Has a default value of {0.0, 0.0, -627.2} . Returns : result ( tes3vector3 ) mobCollisionGroup \u2693\ufe0e Read-only . !!! warning This part of the API isn't fully understood yet and thus is considered experimental. That means that there can be breaking changes requiring the code using this part of the API to be rewritten. The MWSE team will not make any effort to keep backward compatibility with the mods using experimental APIs. Access to the collision group used by the game engine. Returns : result ( niCollisionGroup ) movingProps \u2693\ufe0e Read-only . !!! warning This part of the API isn't fully understood yet and thus is considered experimental. That means that there can be breaking changes requiring the code using this part of the API to be rewritten. The MWSE team will not make any effort to keep backward compatibility with the mods using experimental APIs. Returns : result ( tes3reference []) processManager \u2693\ufe0e Read-only . Access to the process manager. Returns : result ( tes3processManager ) projectileManager \u2693\ufe0e Read-only . Access to the projectile manager. Returns : result ( tes3projectileManager ) terminalVelocity \u2693\ufe0e The maximum velocity that actors can reach through the application of gravity. Has a default value of {0.0, 0.0, -4005.5} . Returns : result ( tes3vector3 )","title":"tes3mobManager"},{"location":"types/tes3mobManager/#tes3mobmanager","text":"The manager responsible for mobile objects and collision.","title":"tes3mobManager"},{"location":"types/tes3mobManager/#properties","text":"","title":"Properties"},{"location":"types/tes3mobManager/#gravity","text":"The gravity applied to all actors. Has a default value of {0.0, 0.0, -627.2} . Returns : result ( tes3vector3 )","title":"gravity"},{"location":"types/tes3mobManager/#mobcollisiongroup","text":"Read-only . !!! warning This part of the API isn't fully understood yet and thus is considered experimental. That means that there can be breaking changes requiring the code using this part of the API to be rewritten. The MWSE team will not make any effort to keep backward compatibility with the mods using experimental APIs. Access to the collision group used by the game engine. Returns : result ( niCollisionGroup )","title":"mobCollisionGroup"},{"location":"types/tes3mobManager/#movingprops","text":"Read-only . !!! warning This part of the API isn't fully understood yet and thus is considered experimental. That means that there can be breaking changes requiring the code using this part of the API to be rewritten. The MWSE team will not make any effort to keep backward compatibility with the mods using experimental APIs. Returns : result ( tes3reference [])","title":"movingProps"},{"location":"types/tes3mobManager/#processmanager","text":"Read-only . Access to the process manager. Returns : result ( tes3processManager )","title":"processManager"},{"location":"types/tes3mobManager/#projectilemanager","text":"Read-only . Access to the projectile manager. Returns : result ( tes3projectileManager )","title":"projectileManager"},{"location":"types/tes3mobManager/#terminalvelocity","text":"The maximum velocity that actors can reach through the application of gravity. Has a default value of {0.0, 0.0, -4005.5} . Returns : result ( tes3vector3 )","title":"terminalVelocity"},{"location":"types/tes3mobileActor/","text":"tes3mobileActor \u2693\ufe0e A mobile object for a creature, NPC, or the player. This type inherits the following: tes3mobileObject Properties \u2693\ufe0e actionBeforeCombat \u2693\ufe0e Read-only . Action data stored before the actor entered combat. Returns : result ( tes3actionData ) actionData \u2693\ufe0e Read-only . Current action data. Pre-combat action data is stored in the actionBeforeCombat property. Returns : result ( tes3actionData ) activeAI \u2693\ufe0e Friendly access to the actor's flag that controls if AI is active. Returns : result (boolean) activeMagicEffectList \u2693\ufe0e Read-only . The active magic effects on the actor, from which all others can be accessed. A table with tes3activeMagicEffect items. Returns : result ( tes3activeMagicEffect []) actorType \u2693\ufe0e Read-only . The type of the mobile actor. Maps to values in tes3.actorType namespace. Returns : result (number) agility \u2693\ufe0e Read-only . Direct access to the actor's agility attribute statistic. Returns : result ( tes3statistic ) aiPlanner \u2693\ufe0e Read-only . Access to the mobile's AI planner and AI package information. Doesn't exist on the player mobile. Returns : result ( tes3aiPlanner , nil) alarm \u2693\ufe0e The actor's alarm AI value. Returns : result (number) animationController \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3actorAnimationController ) armorRating \u2693\ufe0e Read-only . The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the applyDamage function. Armour mitigation calculation: x = damage / (damage + target.armorRating) damage *= max(fCombatArmorMinMult, x) if damage < 1 then damage = 1 end Returns : result (number) attackBonus \u2693\ufe0e Direct access to the actor's attack bonus effect attribute. Returns : result (number) attacked \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor has been attacked. Returns : result (boolean) attributes \u2693\ufe0e Read-only . Access to a table of 8 tes3statistic objects for the actor's attributes. Returns : result ( tes3statistic []) barterGold \u2693\ufe0e The current amount of gold that the actor has access to for bartering. Returns : result (number) blind \u2693\ufe0e Direct access to the actor's blind effect attribute. Returns : result (number) boundSize \u2693\ufe0e A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 ) boundSize2D \u2693\ufe0e A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 ) canAct \u2693\ufe0e Read-only . If true , the actor is able to freely execute actions like attacking or casting magic. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, drawing/sheathing their weapon, attacking, casting magic or using a lockpick or probe. Returns : result (boolean) canJump \u2693\ufe0e Read-only . If true , the actor is currently able to jump. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, jumping, falling, swimming or flying. Returns : result (boolean) canJumpMidair \u2693\ufe0e Read-only . If true , the actor is currently able to jump midair. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, swimming or flying. For more information on midair jumping see tes3mobileActor:doJump() . Returns : result (boolean) cell \u2693\ufe0e Read-only . Fetches the cell that the actor is in. Returns : result ( tes3cell ) cellX \u2693\ufe0e Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number) cellY \u2693\ufe0e Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number) chameleon \u2693\ufe0e Direct access to the actor's chameleon effect attribute. Returns : result (number) collidingReference \u2693\ufe0e Read-only . The reference that the mobile has collided with this frame. Doesn't include actors and terrain. Returns : result ( tes3reference , nil) combatSession \u2693\ufe0e Read-only . Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Doesn't exist on the player's mobile. Returns : result ( tes3combatSession , nil) corpseHourstamp \u2693\ufe0e This is the time measured in hours from the beginning of the game when the actor died. Returns a UNIX-style timestamp based on in-world simulation time since the start of the era. For living actors this field has value a of 0 . Returns : result (number) currentEnchantedItem \u2693\ufe0e Read-only . The currently equipped enchanted item that the actor will use. Returns : result ( tes3equipmentStack , nil) currentSpell \u2693\ufe0e Read-only . The currently equipped spell that the actor will use. Returns : result ( tes3spell ) effectAttributes \u2693\ufe0e Read-only . Access to a table of 24 numbers for the actor's effect attributes. In order those are: attackBonus , sanctuary , resistMagicka , resistFire , resistFrost , resistShock , resistCommonDisease , resistBlightDisease , resistCorprus , resistPoison , resistParalysis , chameleon , resistNormalWeapons , waterBreathing , waterWalking , swiftSwim , jump , levitate , shield , sound , silence , blind , paralyze , and invisibility . Each of those can be accessed individually. For example, tes3mobileActor.chameleon . Returns : result (number[]) encumbrance \u2693\ufe0e Read-only . Access to the actor's encumbrance statistic. Returns : result ( tes3statistic ) endurance \u2693\ufe0e Read-only . Direct access to the actor's endurance attribute statistic. Returns : result ( tes3statistic ) facing \u2693\ufe0e Read-only . The facing of the actor, in radians. It corresponds to the mobile.reference.orientation.z . Facing of 0 corresponds to the in game North, facing of PI corresponds to the game South. It's in clockwise direction. Returns : result (number) fatigue \u2693\ufe0e Read-only . Access to the actor's fatigue statistic. Returns : result ( tes3statistic ) fight \u2693\ufe0e The actor's fight AI value. Returns : result (number) flags \u2693\ufe0e Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (integer) flee \u2693\ufe0e The actor's flee AI value. Returns : result (number) friendlyActors \u2693\ufe0e Read-only . A collection of other tes3mobileActor s that this actor considers friendly. Returns : result ( tes3mobileActor []) greetDuration \u2693\ufe0e No description yet available. Returns : result (number) greetTimer \u2693\ufe0e Read-only . No description yet available. Returns : result (number) hasFreeAction \u2693\ufe0e Read-only . If true, the actor isn't knocked down or knocked out. Returns : result (boolean) health \u2693\ufe0e Read-only . Access to the actor's health statistic. Returns : result ( tes3statistic ) height \u2693\ufe0e The height of the mobile above the ground. Returns : result (number) hello \u2693\ufe0e The actor's hello AI value. Returns : result (number) holdBreathTime \u2693\ufe0e This is the time the actor can stay underwater without taking drowning damage, measured in seconds. It's starting value is fHoldBreathTime (GMST) seconds by default. Once the actor is underwater, this value is decreasing based on the time passed while underwater. The actor will start taking drowning damage once this time is below 0. During drowning this time will have more and more negative values based on the duration of the drowning. Changing this allows manipulating for how long the actor can stay underwater without drowning. Note that player's Breath HUD element won't show values larger than fHoldBreathTime . Returns : result (number) hostileActors \u2693\ufe0e Read-only . A collection of other tes3mobileActor s that this actor considers hostile. Returns : result ( tes3mobileActor []) idleAnim \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is using their idle animation. Returns : result (boolean) impulseVelocity \u2693\ufe0e A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 ) inCombat \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is in combat. Returns : result (boolean) intelligence \u2693\ufe0e Read-only . Direct access to the actor's intelligence attribute statistic. Returns : result ( tes3statistic ) inventory \u2693\ufe0e Read-only . Access to the items the mobile object has in its inventory. Returns : result ( tes3itemStack []) invisibility \u2693\ufe0e Direct access to the actor's invisibility effect attribute. Returns : result (number) isAffectedByGravity \u2693\ufe0e If true , the mobile is affected by gravity. Does not have any effect on spell projectiles. Returns : result (boolean) isAttackingOrCasting \u2693\ufe0e Read-only . If true , the actor is attacking, casting magic or using a lockpick or probe. Returns : result (boolean) isCrittable \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor can be critically hit. Returns : result (boolean) isDead \u2693\ufe0e Read-only . True if the actor is dead. Returns : result (boolean) isDiseased \u2693\ufe0e Read-only . True if the actor is has a disease effect. This counts normal, blight, and corprus effects. Returns : result (boolean) isFalling \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge. Returns : result (boolean) isFlying \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is flying. Returns : result (boolean) isJumping \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is jumping. Returns : result (boolean) isKnockedDown \u2693\ufe0e Read-only . If true , the actor is knocked down. An actor can be knocked down after being attacked or falling. Returns : result (boolean) isKnockedOut \u2693\ufe0e Read-only . If true , the actor is knocked out. An actor can be knocked out if their fatigue has been reduced below zero. Returns : result (boolean) isMovingBack \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving backwards. Returns : result (boolean) isMovingForward \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving forwards. Returns : result (boolean) isMovingLeft \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving left. Returns : result (boolean) isMovingRight \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving right. Returns : result (boolean) isParalyzed \u2693\ufe0e Read-only . If true , the actor is affected by the magic effect paralyze. Returns : result (boolean) isPlayerDetected \u2693\ufe0e Direct access to the actor's flag showing the player was detected on the last detection check. Returns : result (boolean) isPlayerHidden \u2693\ufe0e Direct access to the actor's flag showing the player was hidden on the last detection check. Returns : result (boolean) isReadyingWeapon \u2693\ufe0e Read-only . If true , the actor is drawing or sheathing their weapon. Returns : result (boolean) isRunning \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is running. Returns : result (boolean) isSneaking \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is sneaking. Returns : result (boolean) isSwimming \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is swimming. Returns : result (boolean) isTurningLeft \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is turning left. Returns : result (boolean) isTurningRight \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is turning right. Returns : result (boolean) isWalking \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is walking. Returns : result (boolean) jump \u2693\ufe0e Direct access to the actor's jump effect attribute. Returns : result (number) lastGroundZ \u2693\ufe0e This has a large negative value if the actor is on the ground. When the actor jumps, this will have a positive value. During jump event this value is still negative. A split second after, it will have the value of the .z coordinate when the actor was on the ground. Beware that this value changes after some amount of time while the actors is in the air. Returns : result (number) levitate \u2693\ufe0e Direct access to the actor's levitate effect attribute. Returns : result (number) luck \u2693\ufe0e Read-only . Direct access to the actor's luck attribute statistic. Returns : result ( tes3statistic ) magicka \u2693\ufe0e Read-only . Access to the actor's magicka statistic. Returns : result ( tes3statistic ) magickaMultiplier \u2693\ufe0e Read-only . Access to the actor's magicka multiplier statistic. Returns : result ( tes3statistic ) mobToMobCollision \u2693\ufe0e Allows modifying if this actor will collide with other actors. When true (default), the actor cannot move through other actors. When false , the actor is allowed to move through other actors, and other actors can move through it. May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor. Returns : result (boolean) movementCollision \u2693\ufe0e Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean) movementFlags \u2693\ufe0e Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (integer) nextActionWeight \u2693\ufe0e Read-only . No description yet available. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number) paralyze \u2693\ufe0e Direct access to the actor's paralyze effect attribute. Returns : result (number) personality \u2693\ufe0e Read-only . Direct access to the actor's personality attribute statistic. Returns : result ( tes3statistic ) playerDistance \u2693\ufe0e The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number) position \u2693\ufe0e A vector that represents the 3D position of the object. Returns : result ( tes3vector3 ) prevMovementFlags \u2693\ufe0e Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (integer) readiedAmmo \u2693\ufe0e The currently equipped ammo, if any. Returns : result ( tes3equipmentStack , nil) readiedAmmoCount \u2693\ufe0e The number of ammo equipped for the readied ammo. Returns : result (integer) readiedShield \u2693\ufe0e The currently equipped shield, if any. Returns : result ( tes3equipmentStack , nil) readiedWeapon \u2693\ufe0e The currently equipped weapon, if any. Returns : result ( tes3equipmentStack , nil) reference \u2693\ufe0e Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference ) resistBlightDisease \u2693\ufe0e Direct access to the actor's blight disease resistance effect attribute. Returns : result (number) resistCommonDisease \u2693\ufe0e Direct access to the actor's common disease resistance effect attribute. Returns : result (number) resistCorprus \u2693\ufe0e Direct access to the actor's corprus disease resistance effect attribute. Returns : result (number) resistFire \u2693\ufe0e Direct access to the actor's fire resistance effect attribute. Returns : result (number) resistFrost \u2693\ufe0e Direct access to the actor's frost resistance effect attribute. Returns : result (number) resistMagicka \u2693\ufe0e Direct access to the actor's magicka resistance effect attribute. Returns : result (number) resistNormalWeapons \u2693\ufe0e Direct access to the actor's normal weapon resistance effect attribute. Returns : result (number) resistParalysis \u2693\ufe0e Direct access to the actor's paralysis resistance effect attribute. Returns : result (number) resistPoison \u2693\ufe0e Direct access to the actor's poison resistance effect attribute. Returns : result (number) resistShock \u2693\ufe0e Direct access to the actor's shock resistance effect attribute. Returns : result (number) sanctuary \u2693\ufe0e Direct access to the actor's sanctuary effect attribute. Returns : result (number) scanInterval \u2693\ufe0e The time interval in seconds between specific actor AI checks. These checks include checking for hostile actors and engaging combat, as well as checking if the actor should equip a light source if it is too dark. The specified time in seconds will always be increased by one second when checking, therefore a value of 0.0 will actually cause the actor AI checks to occur every second instead of every frame. Setting this to lower values than the default increases the impact on performance. The default value for a newly created actor depends on the total amount of all currently active tes3aiPlanner , meaning the checks will be executed at different intervals for each actor. Returns : result (number) scanTimer \u2693\ufe0e Read-only . The time in seconds since the last time the checks specified in scanInterval were executed. Returns : result (number) shield \u2693\ufe0e Direct access to the actor's shield effect attribute. Returns : result (number) silence \u2693\ufe0e Direct access to the actor's silence effect attribute. Returns : result (number) sound \u2693\ufe0e Direct access to the actor's sound effect attribute. Returns : result (number) speed \u2693\ufe0e Read-only . Direct access to the actor's speed attribute statistic. Returns : result ( tes3statistic ) spellReadied \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor has a spell readied. Returns : result (boolean) strength \u2693\ufe0e Read-only . Direct access to the actor's strength attribute statistic. Returns : result ( tes3statistic ) swiftSwim \u2693\ufe0e Direct access to the actor's swift swim effect attribute. Returns : result (number) talkedTo \u2693\ufe0e Direct access to the actor's flag that shows it was recently talked to. Returns : result (boolean) torchSlot \u2693\ufe0e The currently equipped light. Returns : result ( tes3equipmentStack ) underwater \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is under water. Returns : result (boolean) velocity \u2693\ufe0e A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 ) waterBreathing \u2693\ufe0e Direct access to the actor's water breathing effect attribute. Returns : result (number) waterWalking \u2693\ufe0e Direct access to the actor's water walking effect attribute. Returns : result (number) weaponDrawn \u2693\ufe0e Read-only . Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again. Returns : result (boolean) weaponReady \u2693\ufe0e A flag for if the actor has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the actor to take out their weapon. Setting it to false will cause the actor to put it away. Returns : result (boolean) werewolf \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor in werewolf form. Returns : result (boolean) width \u2693\ufe0e Read-only . No description yet available. Returns : result (number) willpower \u2693\ufe0e Read-only . Direct access to the actor's willpower attribute statistic. Returns : result ( tes3statistic ) Methods \u2693\ufe0e applyDamage \u2693\ufe0e Damages the actor, with options to control mitigation and difficulty scaling. Invokes the damage and damaged events, with tes3.damageSource.script source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = myObject : applyDamage ({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Default : false . If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. applyDifficulty (boolean): Default : false . If the game difficulty modifier should be applied. Must be used with the playerAttack argument to apply the correct modifier. playerAttack (boolean): Optional . If the attack came from the player. Used for difficulty calculation. doNotChangeHealth (boolean): Default : false . If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit. Returns : result (number) applyFatigueDamage \u2693\ufe0e Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the damageHandToHand and damagedHandToHand events, with tes3.damageSource.script source. Returns the actual fatigue damage done. local result = myObject : applyFatigueDamage ( fatigueDamage , swing , alwaysPlayHitVoice ) Parameters : fatigueDamage (number): The amount of fatigue damage to apply. swing (number): Optional . The attack swing magnitude, range 0-1. Only modifies hit volume. alwaysPlayHitVoice (boolean): Optional . Always play the hit reaction voiceover. Returns : result (number) applyJumpFatigueCost \u2693\ufe0e Reduces the actor's current fatigue by the amount a regular jump would currently cost. myObject : applyJumpFatigueCost () calcEffectiveDamage \u2693\ufe0e Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = myObject : calcEffectiveDamage ({ damage = ..., applyArmor = ..., resistAttribute = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Default : false . If armor should mitigate the incoming damage. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. Returns : result (number) calculateJumpVelocity \u2693\ufe0e Calculates the starting velocity of a jump. local result = myObject : calculateJumpVelocity ({ direction = ... }) Parameters : params (table): Optional . direction ( tes3vector2 ): Optional . The ground direction vector used to calculate the velocity. If not specified, a zero-length direction vector for a regular jump without movement will be used. Returns : result ( tes3vector3 ) doJump \u2693\ufe0e Forces the actor to jump. If velocity or other parameters with non-default values are specified it will be treated as a non-default jump during the jump event. Returns false if the actor is currently unable to jump or the jump has been cancelled, otherwise returns true . local result = myObject : doJump ({ velocity = ..., applyFatigueCost = ..., allowMidairJumping = ... }) Parameters : params (table): Optional . velocity ( tes3vector3 ): Optional . The initial velocity of the jump. If not specified, the velocity of a regular jump without movement will be used. applyFatigueCost (boolean): Default : true . If true , reduces the actor's current fatigue by the amount a regular jump would currently cost. Will not reduce fatigue if false . allowMidairJumping (boolean): Default : false . If true , enables the jump to be performed while already jumping or falling. Does not work during levitation or other methods of flying. Returns : result (boolean) equip \u2693\ufe0e Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return true . local itemEquipped = myObject : equip ({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... }) Parameters : params (table) item ( tes3item , string): The item to equip. itemData ( tes3itemData ): Optional . The item data of the specific item to equip. addItem (boolean): Default : false . If true , the item will be added to the actor's inventory if needed. selectBestCondition (boolean): Default : false . If true , the item in the inventory with the best condition and best charge will be selected. selectWorstCondition (boolean): Default : false . If true , the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools. Returns : itemEquipped (boolean) equipMagic \u2693\ufe0e Equips a spell or enchantment, optionally equipping the enchanted item if needed. Returns false if the item could not be equipped. local result = myObject : equipMagic ({ source = ..., itemData = ..., equipItem = ..., updateGUI = ... }) Parameters : params (table) source ( tes3spell , tes3item , string): The source of the magic to equip. Spells must be castable. Castable spells have a castType of tes3.spellType.spell or tes3.spellType.power . The actor is not required to know this spell. Items must have a castable enchantment. Castable enchantments have a castType of tes3.enchantmentType.onUse or tes3.enchantmentType.castOnce . The actor is not required to have this item in their inventory, unless equipItem is true . itemData ( tes3itemData ): Optional . Only valid if an item has been assigned to source . The item data of the specific item to equip. equipItem (boolean): Default : false . Only valid if an item has been assigned to source . If true , the item assigned to source will be equipped. Requires the actor to have the item in their inventory. If false , itemData must not be nil. updateGUI (boolean): Default : true . Only valid if this actor is the player. If false , the player GUI will not be updated to reflect the change to equipped magic. Returns : result (boolean) getActiveMagicEffects \u2693\ufe0e Fetches a filtered list of the active magic effects on the actor. local result = myObject : getActiveMagicEffects ({ effect = ..., serial = ... }) Parameters : params (table): Optional . effect (integer): Optional . The magic effect ID to search for, from tes3.effect table. serial (integer): Optional . The magic instance serial to search for. Returns : result ( tes3activeMagicEffect []) getBootsWeight \u2693\ufe0e Read-only . Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped. local result = myObject : getBootsWeight () Returns : result (number) getFatigueTerm \u2693\ufe0e Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base)) local result = myObject : getFatigueTerm () Returns : result (number) getPowerUseTimestamp \u2693\ufe0e Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . local timestamp = myObject : getPowerUseTimestamp ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : timestamp (number) getSkillStatistic \u2693\ufe0e Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = myObject : getSkillStatistic ( skillId ) Parameters : skillId (number): The index of the skill statistic to fetch. Maps to values in tes3.skill namespace. Returns : result ( tes3statisticSkill ) getSkillValue \u2693\ufe0e Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = myObject : getSkillValue ( skillId ) Parameters : skillId (number): The index of the skill statistic's value to fetch. Maps to values in tes3.skill namespace. Returns : result (number) getViewToActor \u2693\ufe0e Returns the angle between provided actor and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right. local angle = myObject : getViewToActor ( mobile ) Parameters : mobile ( tes3mobileActor ): The target actor to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees. getViewToPoint \u2693\ufe0e Returns the angle between provided point in space and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right. local angle = myObject : getViewToPoint ( point ) Parameters : point ( tes3vector3 ): The target point to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees. getViewToPointWithFacing \u2693\ufe0e Returns the angle between provided point in space and the actor's current position with provided facing (which effectively overrides the actor's facing used in other getViewTo methods). The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the provided facing angle with the origin in actor's position. local angle = myObject : getViewToPointWithFacing ( facing , point ) Parameters : facing (number): The facing angle in radians. The values should be in [0, PI] interval. point ( tes3vector3 ): The target point to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees. getWeaponSpeed \u2693\ufe0e Fetches the weapon speed of the actor's currently equipped weapon, or 1.0 if no weapon is equipped. local result = myObject : getWeaponSpeed () Returns : result (number) hasUsedPower \u2693\ufe0e Check if a power has been used and is recharging. local result = myObject : hasUsedPower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean) isAffectedByObject \u2693\ufe0e Determines if the actor is currently being affected by a given alchemy, enchantment, or spell. local result = myObject : isAffectedByObject ( object ) Parameters : object ( tes3alchemy , tes3enchantment , tes3spell ): The magic to check for. Returns : result (boolean) kill \u2693\ufe0e Kills the actor by setting its health to 0. myObject : kill () rechargePower \u2693\ufe0e Makes a power immediately available for casting again. local result = myObject : rechargePower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean) setPowerUseTimestamp \u2693\ufe0e Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. myObject : setPowerUseTimestamp ( power , timestamp ) Parameters : power ( tes3spell ): The spell object for the power. timestamp (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . startCombat \u2693\ufe0e Forces the actor into combat with another actor. myObject : startCombat ( target ) Parameters : target ( tes3mobileActor ) startDialogue \u2693\ufe0e Starts dialogue with this actor for the player. myObject : startDialogue () stopCombat \u2693\ufe0e Ends combat for the actor. myObject : stopCombat ( force ) Parameters : force (boolean): If false , the function won't stop combat if the actor has other valid hostile targets. unequip \u2693\ufe0e Unequips one or more items from the actor. local itemUnequipped = myObject : unequip ({ item = ..., type = ..., armorSlot = ..., clothingSlot = ... }) Parameters : params (table) item ( tes3item , string): Optional . The item to unequip. type (number): Optional . The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from tes3.objectType can be passed here. armorSlot (number): Optional . The armor slot to unequip. Maps to values in tes3.armorSlot namespace. clothingSlot (number): Optional . The clothing slot to unequip. Maps to values in tes3.clothingSlot namespace Returns : itemUnequipped (boolean) unequipMagic \u2693\ufe0e Unequips the currently equipped magic, optionally unequipping the enchanted item if needed. myObject : unequipMagic ({ unequipItem = ..., updateGUI = ... }) Parameters : params (table): Optional . unequipItem (boolean): Default : false . Only valid if the currently equipped magic is from an equippable item enchantment. If true , the item containing the enchantment will be unequipped. updateGUI (boolean): Default : true . Only valid if this actor is the player. If false , the player GUI will not be updated to reflect the change to equipped magic. updateDerivedStatistics \u2693\ufe0e Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use tes3.modStatistic() . myObject : updateDerivedStatistics ( attribute ) Parameters : attribute ( tes3statistic ): Optional . Limits the update to statistics derived from this attribute. e.g. mobile:updateDerivedStatistics(mobile.strength) . If not present, all derived statistics will be updated. updateOpacity \u2693\ufe0e Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects. myObject : updateOpacity ()","title":"tes3mobileActor"},{"location":"types/tes3mobileActor/#tes3mobileactor","text":"A mobile object for a creature, NPC, or the player. This type inherits the following: tes3mobileObject","title":"tes3mobileActor"},{"location":"types/tes3mobileActor/#properties","text":"","title":"Properties"},{"location":"types/tes3mobileActor/#actionbeforecombat","text":"Read-only . Action data stored before the actor entered combat. Returns : result ( tes3actionData )","title":"actionBeforeCombat"},{"location":"types/tes3mobileActor/#actiondata","text":"Read-only . Current action data. Pre-combat action data is stored in the actionBeforeCombat property. Returns : result ( tes3actionData )","title":"actionData"},{"location":"types/tes3mobileActor/#activeai","text":"Friendly access to the actor's flag that controls if AI is active. Returns : result (boolean)","title":"activeAI"},{"location":"types/tes3mobileActor/#activemagiceffectlist","text":"Read-only . The active magic effects on the actor, from which all others can be accessed. A table with tes3activeMagicEffect items. Returns : result ( tes3activeMagicEffect [])","title":"activeMagicEffectList"},{"location":"types/tes3mobileActor/#actortype","text":"Read-only . The type of the mobile actor. Maps to values in tes3.actorType namespace. Returns : result (number)","title":"actorType"},{"location":"types/tes3mobileActor/#agility","text":"Read-only . Direct access to the actor's agility attribute statistic. Returns : result ( tes3statistic )","title":"agility"},{"location":"types/tes3mobileActor/#aiplanner","text":"Read-only . Access to the mobile's AI planner and AI package information. Doesn't exist on the player mobile. Returns : result ( tes3aiPlanner , nil)","title":"aiPlanner"},{"location":"types/tes3mobileActor/#alarm","text":"The actor's alarm AI value. Returns : result (number)","title":"alarm"},{"location":"types/tes3mobileActor/#animationcontroller","text":"Read-only . No description yet available. Returns : result ( tes3actorAnimationController )","title":"animationController"},{"location":"types/tes3mobileActor/#armorrating","text":"Read-only . The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the applyDamage function. Armour mitigation calculation: x = damage / (damage + target.armorRating) damage *= max(fCombatArmorMinMult, x) if damage < 1 then damage = 1 end Returns : result (number)","title":"armorRating"},{"location":"types/tes3mobileActor/#attackbonus","text":"Direct access to the actor's attack bonus effect attribute. Returns : result (number)","title":"attackBonus"},{"location":"types/tes3mobileActor/#attacked","text":"Read-only . Friendly access to the actor's flag that controls if the actor has been attacked. Returns : result (boolean)","title":"attacked"},{"location":"types/tes3mobileActor/#attributes","text":"Read-only . Access to a table of 8 tes3statistic objects for the actor's attributes. Returns : result ( tes3statistic [])","title":"attributes"},{"location":"types/tes3mobileActor/#bartergold","text":"The current amount of gold that the actor has access to for bartering. Returns : result (number)","title":"barterGold"},{"location":"types/tes3mobileActor/#blind","text":"Direct access to the actor's blind effect attribute. Returns : result (number)","title":"blind"},{"location":"types/tes3mobileActor/#boundsize","text":"A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 )","title":"boundSize"},{"location":"types/tes3mobileActor/#boundsize2d","text":"A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 )","title":"boundSize2D"},{"location":"types/tes3mobileActor/#canact","text":"Read-only . If true , the actor is able to freely execute actions like attacking or casting magic. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, drawing/sheathing their weapon, attacking, casting magic or using a lockpick or probe. Returns : result (boolean)","title":"canAct"},{"location":"types/tes3mobileActor/#canjump","text":"Read-only . If true , the actor is currently able to jump. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, jumping, falling, swimming or flying. Returns : result (boolean)","title":"canJump"},{"location":"types/tes3mobileActor/#canjumpmidair","text":"Read-only . If true , the actor is currently able to jump midair. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, swimming or flying. For more information on midair jumping see tes3mobileActor:doJump() . Returns : result (boolean)","title":"canJumpMidair"},{"location":"types/tes3mobileActor/#cell","text":"Read-only . Fetches the cell that the actor is in. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3mobileActor/#cellx","text":"Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellX"},{"location":"types/tes3mobileActor/#celly","text":"Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellY"},{"location":"types/tes3mobileActor/#chameleon","text":"Direct access to the actor's chameleon effect attribute. Returns : result (number)","title":"chameleon"},{"location":"types/tes3mobileActor/#collidingreference","text":"Read-only . The reference that the mobile has collided with this frame. Doesn't include actors and terrain. Returns : result ( tes3reference , nil)","title":"collidingReference"},{"location":"types/tes3mobileActor/#combatsession","text":"Read-only . Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Doesn't exist on the player's mobile. Returns : result ( tes3combatSession , nil)","title":"combatSession"},{"location":"types/tes3mobileActor/#corpsehourstamp","text":"This is the time measured in hours from the beginning of the game when the actor died. Returns a UNIX-style timestamp based on in-world simulation time since the start of the era. For living actors this field has value a of 0 . Returns : result (number)","title":"corpseHourstamp"},{"location":"types/tes3mobileActor/#currentenchanteditem","text":"Read-only . The currently equipped enchanted item that the actor will use. Returns : result ( tes3equipmentStack , nil)","title":"currentEnchantedItem"},{"location":"types/tes3mobileActor/#currentspell","text":"Read-only . The currently equipped spell that the actor will use. Returns : result ( tes3spell )","title":"currentSpell"},{"location":"types/tes3mobileActor/#effectattributes","text":"Read-only . Access to a table of 24 numbers for the actor's effect attributes. In order those are: attackBonus , sanctuary , resistMagicka , resistFire , resistFrost , resistShock , resistCommonDisease , resistBlightDisease , resistCorprus , resistPoison , resistParalysis , chameleon , resistNormalWeapons , waterBreathing , waterWalking , swiftSwim , jump , levitate , shield , sound , silence , blind , paralyze , and invisibility . Each of those can be accessed individually. For example, tes3mobileActor.chameleon . Returns : result (number[])","title":"effectAttributes"},{"location":"types/tes3mobileActor/#encumbrance","text":"Read-only . Access to the actor's encumbrance statistic. Returns : result ( tes3statistic )","title":"encumbrance"},{"location":"types/tes3mobileActor/#endurance","text":"Read-only . Direct access to the actor's endurance attribute statistic. Returns : result ( tes3statistic )","title":"endurance"},{"location":"types/tes3mobileActor/#facing","text":"Read-only . The facing of the actor, in radians. It corresponds to the mobile.reference.orientation.z . Facing of 0 corresponds to the in game North, facing of PI corresponds to the game South. It's in clockwise direction. Returns : result (number)","title":"facing"},{"location":"types/tes3mobileActor/#fatigue","text":"Read-only . Access to the actor's fatigue statistic. Returns : result ( tes3statistic )","title":"fatigue"},{"location":"types/tes3mobileActor/#fight","text":"The actor's fight AI value. Returns : result (number)","title":"fight"},{"location":"types/tes3mobileActor/#flags","text":"Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"flags"},{"location":"types/tes3mobileActor/#flee","text":"The actor's flee AI value. Returns : result (number)","title":"flee"},{"location":"types/tes3mobileActor/#friendlyactors","text":"Read-only . A collection of other tes3mobileActor s that this actor considers friendly. Returns : result ( tes3mobileActor [])","title":"friendlyActors"},{"location":"types/tes3mobileActor/#greetduration","text":"No description yet available. Returns : result (number)","title":"greetDuration"},{"location":"types/tes3mobileActor/#greettimer","text":"Read-only . No description yet available. Returns : result (number)","title":"greetTimer"},{"location":"types/tes3mobileActor/#hasfreeaction","text":"Read-only . If true, the actor isn't knocked down or knocked out. Returns : result (boolean)","title":"hasFreeAction"},{"location":"types/tes3mobileActor/#health","text":"Read-only . Access to the actor's health statistic. Returns : result ( tes3statistic )","title":"health"},{"location":"types/tes3mobileActor/#height","text":"The height of the mobile above the ground. Returns : result (number)","title":"height"},{"location":"types/tes3mobileActor/#hello","text":"The actor's hello AI value. Returns : result (number)","title":"hello"},{"location":"types/tes3mobileActor/#holdbreathtime","text":"This is the time the actor can stay underwater without taking drowning damage, measured in seconds. It's starting value is fHoldBreathTime (GMST) seconds by default. Once the actor is underwater, this value is decreasing based on the time passed while underwater. The actor will start taking drowning damage once this time is below 0. During drowning this time will have more and more negative values based on the duration of the drowning. Changing this allows manipulating for how long the actor can stay underwater without drowning. Note that player's Breath HUD element won't show values larger than fHoldBreathTime . Returns : result (number)","title":"holdBreathTime"},{"location":"types/tes3mobileActor/#hostileactors","text":"Read-only . A collection of other tes3mobileActor s that this actor considers hostile. Returns : result ( tes3mobileActor [])","title":"hostileActors"},{"location":"types/tes3mobileActor/#idleanim","text":"Read-only . Friendly access to the actor's flag that controls if the actor is using their idle animation. Returns : result (boolean)","title":"idleAnim"},{"location":"types/tes3mobileActor/#impulsevelocity","text":"A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 )","title":"impulseVelocity"},{"location":"types/tes3mobileActor/#incombat","text":"Read-only . Friendly access to the actor's flag that controls if the actor is in combat. Returns : result (boolean)","title":"inCombat"},{"location":"types/tes3mobileActor/#intelligence","text":"Read-only . Direct access to the actor's intelligence attribute statistic. Returns : result ( tes3statistic )","title":"intelligence"},{"location":"types/tes3mobileActor/#inventory","text":"Read-only . Access to the items the mobile object has in its inventory. Returns : result ( tes3itemStack [])","title":"inventory"},{"location":"types/tes3mobileActor/#invisibility","text":"Direct access to the actor's invisibility effect attribute. Returns : result (number)","title":"invisibility"},{"location":"types/tes3mobileActor/#isaffectedbygravity","text":"If true , the mobile is affected by gravity. Does not have any effect on spell projectiles. Returns : result (boolean)","title":"isAffectedByGravity"},{"location":"types/tes3mobileActor/#isattackingorcasting","text":"Read-only . If true , the actor is attacking, casting magic or using a lockpick or probe. Returns : result (boolean)","title":"isAttackingOrCasting"},{"location":"types/tes3mobileActor/#iscrittable","text":"Read-only . Friendly access to the actor's flag that controls if the actor can be critically hit. Returns : result (boolean)","title":"isCrittable"},{"location":"types/tes3mobileActor/#isdead","text":"Read-only . True if the actor is dead. Returns : result (boolean)","title":"isDead"},{"location":"types/tes3mobileActor/#isdiseased","text":"Read-only . True if the actor is has a disease effect. This counts normal, blight, and corprus effects. Returns : result (boolean)","title":"isDiseased"},{"location":"types/tes3mobileActor/#isfalling","text":"Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge. Returns : result (boolean)","title":"isFalling"},{"location":"types/tes3mobileActor/#isflying","text":"Direct access to the actor's current movement flags, showing if the actor is flying. Returns : result (boolean)","title":"isFlying"},{"location":"types/tes3mobileActor/#isjumping","text":"Direct access to the actor's current movement flags, showing if the actor is jumping. Returns : result (boolean)","title":"isJumping"},{"location":"types/tes3mobileActor/#isknockeddown","text":"Read-only . If true , the actor is knocked down. An actor can be knocked down after being attacked or falling. Returns : result (boolean)","title":"isKnockedDown"},{"location":"types/tes3mobileActor/#isknockedout","text":"Read-only . If true , the actor is knocked out. An actor can be knocked out if their fatigue has been reduced below zero. Returns : result (boolean)","title":"isKnockedOut"},{"location":"types/tes3mobileActor/#ismovingback","text":"Direct access to the actor's current movement flags, showing if the actor is moving backwards. Returns : result (boolean)","title":"isMovingBack"},{"location":"types/tes3mobileActor/#ismovingforward","text":"Direct access to the actor's current movement flags, showing if the actor is moving forwards. Returns : result (boolean)","title":"isMovingForward"},{"location":"types/tes3mobileActor/#ismovingleft","text":"Direct access to the actor's current movement flags, showing if the actor is moving left. Returns : result (boolean)","title":"isMovingLeft"},{"location":"types/tes3mobileActor/#ismovingright","text":"Direct access to the actor's current movement flags, showing if the actor is moving right. Returns : result (boolean)","title":"isMovingRight"},{"location":"types/tes3mobileActor/#isparalyzed","text":"Read-only . If true , the actor is affected by the magic effect paralyze. Returns : result (boolean)","title":"isParalyzed"},{"location":"types/tes3mobileActor/#isplayerdetected","text":"Direct access to the actor's flag showing the player was detected on the last detection check. Returns : result (boolean)","title":"isPlayerDetected"},{"location":"types/tes3mobileActor/#isplayerhidden","text":"Direct access to the actor's flag showing the player was hidden on the last detection check. Returns : result (boolean)","title":"isPlayerHidden"},{"location":"types/tes3mobileActor/#isreadyingweapon","text":"Read-only . If true , the actor is drawing or sheathing their weapon. Returns : result (boolean)","title":"isReadyingWeapon"},{"location":"types/tes3mobileActor/#isrunning","text":"Direct access to the actor's current movement flags, showing if the actor is running. Returns : result (boolean)","title":"isRunning"},{"location":"types/tes3mobileActor/#issneaking","text":"Direct access to the actor's current movement flags, showing if the actor is sneaking. Returns : result (boolean)","title":"isSneaking"},{"location":"types/tes3mobileActor/#isswimming","text":"Direct access to the actor's current movement flags, showing if the actor is swimming. Returns : result (boolean)","title":"isSwimming"},{"location":"types/tes3mobileActor/#isturningleft","text":"Direct access to the actor's current movement flags, showing if the actor is turning left. Returns : result (boolean)","title":"isTurningLeft"},{"location":"types/tes3mobileActor/#isturningright","text":"Direct access to the actor's current movement flags, showing if the actor is turning right. Returns : result (boolean)","title":"isTurningRight"},{"location":"types/tes3mobileActor/#iswalking","text":"Direct access to the actor's current movement flags, showing if the actor is walking. Returns : result (boolean)","title":"isWalking"},{"location":"types/tes3mobileActor/#jump","text":"Direct access to the actor's jump effect attribute. Returns : result (number)","title":"jump"},{"location":"types/tes3mobileActor/#lastgroundz","text":"This has a large negative value if the actor is on the ground. When the actor jumps, this will have a positive value. During jump event this value is still negative. A split second after, it will have the value of the .z coordinate when the actor was on the ground. Beware that this value changes after some amount of time while the actors is in the air. Returns : result (number)","title":"lastGroundZ"},{"location":"types/tes3mobileActor/#levitate","text":"Direct access to the actor's levitate effect attribute. Returns : result (number)","title":"levitate"},{"location":"types/tes3mobileActor/#luck","text":"Read-only . Direct access to the actor's luck attribute statistic. Returns : result ( tes3statistic )","title":"luck"},{"location":"types/tes3mobileActor/#magicka","text":"Read-only . Access to the actor's magicka statistic. Returns : result ( tes3statistic )","title":"magicka"},{"location":"types/tes3mobileActor/#magickamultiplier","text":"Read-only . Access to the actor's magicka multiplier statistic. Returns : result ( tes3statistic )","title":"magickaMultiplier"},{"location":"types/tes3mobileActor/#mobtomobcollision","text":"Allows modifying if this actor will collide with other actors. When true (default), the actor cannot move through other actors. When false , the actor is allowed to move through other actors, and other actors can move through it. May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor. Returns : result (boolean)","title":"mobToMobCollision"},{"location":"types/tes3mobileActor/#movementcollision","text":"Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean)","title":"movementCollision"},{"location":"types/tes3mobileActor/#movementflags","text":"Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"movementFlags"},{"location":"types/tes3mobileActor/#nextactionweight","text":"Read-only . No description yet available. Returns : result (number)","title":"nextActionWeight"},{"location":"types/tes3mobileActor/#objecttype","text":"Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number)","title":"objectType"},{"location":"types/tes3mobileActor/#paralyze","text":"Direct access to the actor's paralyze effect attribute. Returns : result (number)","title":"paralyze"},{"location":"types/tes3mobileActor/#personality","text":"Read-only . Direct access to the actor's personality attribute statistic. Returns : result ( tes3statistic )","title":"personality"},{"location":"types/tes3mobileActor/#playerdistance","text":"The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number)","title":"playerDistance"},{"location":"types/tes3mobileActor/#position","text":"A vector that represents the 3D position of the object. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3mobileActor/#prevmovementflags","text":"Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"prevMovementFlags"},{"location":"types/tes3mobileActor/#readiedammo","text":"The currently equipped ammo, if any. Returns : result ( tes3equipmentStack , nil)","title":"readiedAmmo"},{"location":"types/tes3mobileActor/#readiedammocount","text":"The number of ammo equipped for the readied ammo. Returns : result (integer)","title":"readiedAmmoCount"},{"location":"types/tes3mobileActor/#readiedshield","text":"The currently equipped shield, if any. Returns : result ( tes3equipmentStack , nil)","title":"readiedShield"},{"location":"types/tes3mobileActor/#readiedweapon","text":"The currently equipped weapon, if any. Returns : result ( tes3equipmentStack , nil)","title":"readiedWeapon"},{"location":"types/tes3mobileActor/#reference","text":"Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3mobileActor/#resistblightdisease","text":"Direct access to the actor's blight disease resistance effect attribute. Returns : result (number)","title":"resistBlightDisease"},{"location":"types/tes3mobileActor/#resistcommondisease","text":"Direct access to the actor's common disease resistance effect attribute. Returns : result (number)","title":"resistCommonDisease"},{"location":"types/tes3mobileActor/#resistcorprus","text":"Direct access to the actor's corprus disease resistance effect attribute. Returns : result (number)","title":"resistCorprus"},{"location":"types/tes3mobileActor/#resistfire","text":"Direct access to the actor's fire resistance effect attribute. Returns : result (number)","title":"resistFire"},{"location":"types/tes3mobileActor/#resistfrost","text":"Direct access to the actor's frost resistance effect attribute. Returns : result (number)","title":"resistFrost"},{"location":"types/tes3mobileActor/#resistmagicka","text":"Direct access to the actor's magicka resistance effect attribute. Returns : result (number)","title":"resistMagicka"},{"location":"types/tes3mobileActor/#resistnormalweapons","text":"Direct access to the actor's normal weapon resistance effect attribute. Returns : result (number)","title":"resistNormalWeapons"},{"location":"types/tes3mobileActor/#resistparalysis","text":"Direct access to the actor's paralysis resistance effect attribute. Returns : result (number)","title":"resistParalysis"},{"location":"types/tes3mobileActor/#resistpoison","text":"Direct access to the actor's poison resistance effect attribute. Returns : result (number)","title":"resistPoison"},{"location":"types/tes3mobileActor/#resistshock","text":"Direct access to the actor's shock resistance effect attribute. Returns : result (number)","title":"resistShock"},{"location":"types/tes3mobileActor/#sanctuary","text":"Direct access to the actor's sanctuary effect attribute. Returns : result (number)","title":"sanctuary"},{"location":"types/tes3mobileActor/#scaninterval","text":"The time interval in seconds between specific actor AI checks. These checks include checking for hostile actors and engaging combat, as well as checking if the actor should equip a light source if it is too dark. The specified time in seconds will always be increased by one second when checking, therefore a value of 0.0 will actually cause the actor AI checks to occur every second instead of every frame. Setting this to lower values than the default increases the impact on performance. The default value for a newly created actor depends on the total amount of all currently active tes3aiPlanner , meaning the checks will be executed at different intervals for each actor. Returns : result (number)","title":"scanInterval"},{"location":"types/tes3mobileActor/#scantimer","text":"Read-only . The time in seconds since the last time the checks specified in scanInterval were executed. Returns : result (number)","title":"scanTimer"},{"location":"types/tes3mobileActor/#shield","text":"Direct access to the actor's shield effect attribute. Returns : result (number)","title":"shield"},{"location":"types/tes3mobileActor/#silence","text":"Direct access to the actor's silence effect attribute. Returns : result (number)","title":"silence"},{"location":"types/tes3mobileActor/#sound","text":"Direct access to the actor's sound effect attribute. Returns : result (number)","title":"sound"},{"location":"types/tes3mobileActor/#speed","text":"Read-only . Direct access to the actor's speed attribute statistic. Returns : result ( tes3statistic )","title":"speed"},{"location":"types/tes3mobileActor/#spellreadied","text":"Read-only . Friendly access to the actor's flag that controls if the actor has a spell readied. Returns : result (boolean)","title":"spellReadied"},{"location":"types/tes3mobileActor/#strength","text":"Read-only . Direct access to the actor's strength attribute statistic. Returns : result ( tes3statistic )","title":"strength"},{"location":"types/tes3mobileActor/#swiftswim","text":"Direct access to the actor's swift swim effect attribute. Returns : result (number)","title":"swiftSwim"},{"location":"types/tes3mobileActor/#talkedto","text":"Direct access to the actor's flag that shows it was recently talked to. Returns : result (boolean)","title":"talkedTo"},{"location":"types/tes3mobileActor/#torchslot","text":"The currently equipped light. Returns : result ( tes3equipmentStack )","title":"torchSlot"},{"location":"types/tes3mobileActor/#underwater","text":"Read-only . Friendly access to the actor's flag that controls if the actor is under water. Returns : result (boolean)","title":"underwater"},{"location":"types/tes3mobileActor/#velocity","text":"A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/tes3mobileActor/#waterbreathing","text":"Direct access to the actor's water breathing effect attribute. Returns : result (number)","title":"waterBreathing"},{"location":"types/tes3mobileActor/#waterwalking","text":"Direct access to the actor's water walking effect attribute. Returns : result (number)","title":"waterWalking"},{"location":"types/tes3mobileActor/#weapondrawn","text":"Read-only . Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again. Returns : result (boolean)","title":"weaponDrawn"},{"location":"types/tes3mobileActor/#weaponready","text":"A flag for if the actor has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the actor to take out their weapon. Setting it to false will cause the actor to put it away. Returns : result (boolean)","title":"weaponReady"},{"location":"types/tes3mobileActor/#werewolf","text":"Read-only . Friendly access to the actor's flag that controls if the actor in werewolf form. Returns : result (boolean)","title":"werewolf"},{"location":"types/tes3mobileActor/#width","text":"Read-only . No description yet available. Returns : result (number)","title":"width"},{"location":"types/tes3mobileActor/#willpower","text":"Read-only . Direct access to the actor's willpower attribute statistic. Returns : result ( tes3statistic )","title":"willpower"},{"location":"types/tes3mobileActor/#methods","text":"","title":"Methods"},{"location":"types/tes3mobileActor/#applydamage","text":"Damages the actor, with options to control mitigation and difficulty scaling. Invokes the damage and damaged events, with tes3.damageSource.script source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = myObject : applyDamage ({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Default : false . If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. applyDifficulty (boolean): Default : false . If the game difficulty modifier should be applied. Must be used with the playerAttack argument to apply the correct modifier. playerAttack (boolean): Optional . If the attack came from the player. Used for difficulty calculation. doNotChangeHealth (boolean): Default : false . If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit. Returns : result (number)","title":"applyDamage"},{"location":"types/tes3mobileActor/#applyfatiguedamage","text":"Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the damageHandToHand and damagedHandToHand events, with tes3.damageSource.script source. Returns the actual fatigue damage done. local result = myObject : applyFatigueDamage ( fatigueDamage , swing , alwaysPlayHitVoice ) Parameters : fatigueDamage (number): The amount of fatigue damage to apply. swing (number): Optional . The attack swing magnitude, range 0-1. Only modifies hit volume. alwaysPlayHitVoice (boolean): Optional . Always play the hit reaction voiceover. Returns : result (number)","title":"applyFatigueDamage"},{"location":"types/tes3mobileActor/#applyjumpfatiguecost","text":"Reduces the actor's current fatigue by the amount a regular jump would currently cost. myObject : applyJumpFatigueCost ()","title":"applyJumpFatigueCost"},{"location":"types/tes3mobileActor/#calceffectivedamage","text":"Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = myObject : calcEffectiveDamage ({ damage = ..., applyArmor = ..., resistAttribute = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Default : false . If armor should mitigate the incoming damage. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. Returns : result (number)","title":"calcEffectiveDamage"},{"location":"types/tes3mobileActor/#calculatejumpvelocity","text":"Calculates the starting velocity of a jump. local result = myObject : calculateJumpVelocity ({ direction = ... }) Parameters : params (table): Optional . direction ( tes3vector2 ): Optional . The ground direction vector used to calculate the velocity. If not specified, a zero-length direction vector for a regular jump without movement will be used. Returns : result ( tes3vector3 )","title":"calculateJumpVelocity"},{"location":"types/tes3mobileActor/#dojump","text":"Forces the actor to jump. If velocity or other parameters with non-default values are specified it will be treated as a non-default jump during the jump event. Returns false if the actor is currently unable to jump or the jump has been cancelled, otherwise returns true . local result = myObject : doJump ({ velocity = ..., applyFatigueCost = ..., allowMidairJumping = ... }) Parameters : params (table): Optional . velocity ( tes3vector3 ): Optional . The initial velocity of the jump. If not specified, the velocity of a regular jump without movement will be used. applyFatigueCost (boolean): Default : true . If true , reduces the actor's current fatigue by the amount a regular jump would currently cost. Will not reduce fatigue if false . allowMidairJumping (boolean): Default : false . If true , enables the jump to be performed while already jumping or falling. Does not work during levitation or other methods of flying. Returns : result (boolean)","title":"doJump"},{"location":"types/tes3mobileActor/#equip","text":"Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return true . local itemEquipped = myObject : equip ({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... }) Parameters : params (table) item ( tes3item , string): The item to equip. itemData ( tes3itemData ): Optional . The item data of the specific item to equip. addItem (boolean): Default : false . If true , the item will be added to the actor's inventory if needed. selectBestCondition (boolean): Default : false . If true , the item in the inventory with the best condition and best charge will be selected. selectWorstCondition (boolean): Default : false . If true , the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools. Returns : itemEquipped (boolean)","title":"equip"},{"location":"types/tes3mobileActor/#equipmagic","text":"Equips a spell or enchantment, optionally equipping the enchanted item if needed. Returns false if the item could not be equipped. local result = myObject : equipMagic ({ source = ..., itemData = ..., equipItem = ..., updateGUI = ... }) Parameters : params (table) source ( tes3spell , tes3item , string): The source of the magic to equip. Spells must be castable. Castable spells have a castType of tes3.spellType.spell or tes3.spellType.power . The actor is not required to know this spell. Items must have a castable enchantment. Castable enchantments have a castType of tes3.enchantmentType.onUse or tes3.enchantmentType.castOnce . The actor is not required to have this item in their inventory, unless equipItem is true . itemData ( tes3itemData ): Optional . Only valid if an item has been assigned to source . The item data of the specific item to equip. equipItem (boolean): Default : false . Only valid if an item has been assigned to source . If true , the item assigned to source will be equipped. Requires the actor to have the item in their inventory. If false , itemData must not be nil. updateGUI (boolean): Default : true . Only valid if this actor is the player. If false , the player GUI will not be updated to reflect the change to equipped magic. Returns : result (boolean)","title":"equipMagic"},{"location":"types/tes3mobileActor/#getactivemagiceffects","text":"Fetches a filtered list of the active magic effects on the actor. local result = myObject : getActiveMagicEffects ({ effect = ..., serial = ... }) Parameters : params (table): Optional . effect (integer): Optional . The magic effect ID to search for, from tes3.effect table. serial (integer): Optional . The magic instance serial to search for. Returns : result ( tes3activeMagicEffect [])","title":"getActiveMagicEffects"},{"location":"types/tes3mobileActor/#getbootsweight","text":"Read-only . Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped. local result = myObject : getBootsWeight () Returns : result (number)","title":"getBootsWeight"},{"location":"types/tes3mobileActor/#getfatigueterm","text":"Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base)) local result = myObject : getFatigueTerm () Returns : result (number)","title":"getFatigueTerm"},{"location":"types/tes3mobileActor/#getpowerusetimestamp","text":"Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . local timestamp = myObject : getPowerUseTimestamp ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : timestamp (number)","title":"getPowerUseTimestamp"},{"location":"types/tes3mobileActor/#getskillstatistic","text":"Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = myObject : getSkillStatistic ( skillId ) Parameters : skillId (number): The index of the skill statistic to fetch. Maps to values in tes3.skill namespace. Returns : result ( tes3statisticSkill )","title":"getSkillStatistic"},{"location":"types/tes3mobileActor/#getskillvalue","text":"Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = myObject : getSkillValue ( skillId ) Parameters : skillId (number): The index of the skill statistic's value to fetch. Maps to values in tes3.skill namespace. Returns : result (number)","title":"getSkillValue"},{"location":"types/tes3mobileActor/#getviewtoactor","text":"Returns the angle between provided actor and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right. local angle = myObject : getViewToActor ( mobile ) Parameters : mobile ( tes3mobileActor ): The target actor to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees.","title":"getViewToActor"},{"location":"types/tes3mobileActor/#getviewtopoint","text":"Returns the angle between provided point in space and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right. local angle = myObject : getViewToPoint ( point ) Parameters : point ( tes3vector3 ): The target point to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees.","title":"getViewToPoint"},{"location":"types/tes3mobileActor/#getviewtopointwithfacing","text":"Returns the angle between provided point in space and the actor's current position with provided facing (which effectively overrides the actor's facing used in other getViewTo methods). The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the provided facing angle with the origin in actor's position. local angle = myObject : getViewToPointWithFacing ( facing , point ) Parameters : facing (number): The facing angle in radians. The values should be in [0, PI] interval. point ( tes3vector3 ): The target point to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees.","title":"getViewToPointWithFacing"},{"location":"types/tes3mobileActor/#getweaponspeed","text":"Fetches the weapon speed of the actor's currently equipped weapon, or 1.0 if no weapon is equipped. local result = myObject : getWeaponSpeed () Returns : result (number)","title":"getWeaponSpeed"},{"location":"types/tes3mobileActor/#hasusedpower","text":"Check if a power has been used and is recharging. local result = myObject : hasUsedPower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean)","title":"hasUsedPower"},{"location":"types/tes3mobileActor/#isaffectedbyobject","text":"Determines if the actor is currently being affected by a given alchemy, enchantment, or spell. local result = myObject : isAffectedByObject ( object ) Parameters : object ( tes3alchemy , tes3enchantment , tes3spell ): The magic to check for. Returns : result (boolean)","title":"isAffectedByObject"},{"location":"types/tes3mobileActor/#kill","text":"Kills the actor by setting its health to 0. myObject : kill ()","title":"kill"},{"location":"types/tes3mobileActor/#rechargepower","text":"Makes a power immediately available for casting again. local result = myObject : rechargePower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean)","title":"rechargePower"},{"location":"types/tes3mobileActor/#setpowerusetimestamp","text":"Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. myObject : setPowerUseTimestamp ( power , timestamp ) Parameters : power ( tes3spell ): The spell object for the power. timestamp (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() .","title":"setPowerUseTimestamp"},{"location":"types/tes3mobileActor/#startcombat","text":"Forces the actor into combat with another actor. myObject : startCombat ( target ) Parameters : target ( tes3mobileActor )","title":"startCombat"},{"location":"types/tes3mobileActor/#startdialogue","text":"Starts dialogue with this actor for the player. myObject : startDialogue ()","title":"startDialogue"},{"location":"types/tes3mobileActor/#stopcombat","text":"Ends combat for the actor. myObject : stopCombat ( force ) Parameters : force (boolean): If false , the function won't stop combat if the actor has other valid hostile targets.","title":"stopCombat"},{"location":"types/tes3mobileActor/#unequip","text":"Unequips one or more items from the actor. local itemUnequipped = myObject : unequip ({ item = ..., type = ..., armorSlot = ..., clothingSlot = ... }) Parameters : params (table) item ( tes3item , string): Optional . The item to unequip. type (number): Optional . The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from tes3.objectType can be passed here. armorSlot (number): Optional . The armor slot to unequip. Maps to values in tes3.armorSlot namespace. clothingSlot (number): Optional . The clothing slot to unequip. Maps to values in tes3.clothingSlot namespace Returns : itemUnequipped (boolean)","title":"unequip"},{"location":"types/tes3mobileActor/#unequipmagic","text":"Unequips the currently equipped magic, optionally unequipping the enchanted item if needed. myObject : unequipMagic ({ unequipItem = ..., updateGUI = ... }) Parameters : params (table): Optional . unequipItem (boolean): Default : false . Only valid if the currently equipped magic is from an equippable item enchantment. If true , the item containing the enchantment will be unequipped. updateGUI (boolean): Default : true . Only valid if this actor is the player. If false , the player GUI will not be updated to reflect the change to equipped magic.","title":"unequipMagic"},{"location":"types/tes3mobileActor/#updatederivedstatistics","text":"Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use tes3.modStatistic() . myObject : updateDerivedStatistics ( attribute ) Parameters : attribute ( tes3statistic ): Optional . Limits the update to statistics derived from this attribute. e.g. mobile:updateDerivedStatistics(mobile.strength) . If not present, all derived statistics will be updated.","title":"updateDerivedStatistics"},{"location":"types/tes3mobileActor/#updateopacity","text":"Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects. myObject : updateOpacity ()","title":"updateOpacity"},{"location":"types/tes3mobileCreature/","text":"tes3mobileCreature \u2693\ufe0e A mobile object for a creature. This type inherits the following: tes3mobileActor , tes3mobileObject Properties \u2693\ufe0e actionBeforeCombat \u2693\ufe0e Read-only . Action data stored before the actor entered combat. Returns : result ( tes3actionData ) actionData \u2693\ufe0e Read-only . Current action data. Pre-combat action data is stored in the actionBeforeCombat property. Returns : result ( tes3actionData ) activeAI \u2693\ufe0e Friendly access to the actor's flag that controls if AI is active. Returns : result (boolean) activeMagicEffectList \u2693\ufe0e Read-only . The active magic effects on the actor, from which all others can be accessed. A table with tes3activeMagicEffect items. Returns : result ( tes3activeMagicEffect []) actorType \u2693\ufe0e Read-only . The type of the mobile actor. Maps to values in tes3.actorType namespace. Returns : result (number) agility \u2693\ufe0e Read-only . Direct access to the actor's agility attribute statistic. Returns : result ( tes3statistic ) aiPlanner \u2693\ufe0e Read-only . Access to the mobile's AI planner and AI package information. Doesn't exist on the player mobile. Returns : result ( tes3aiPlanner , nil) alarm \u2693\ufe0e The actor's alarm AI value. Returns : result (number) animationController \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3actorAnimationController ) armorRating \u2693\ufe0e Read-only . The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the applyDamage function. Armour mitigation calculation: x = damage / (damage + target.armorRating) damage *= max(fCombatArmorMinMult, x) if damage < 1 then damage = 1 end Returns : result (number) attackBonus \u2693\ufe0e Direct access to the actor's attack bonus effect attribute. Returns : result (number) attacked \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor has been attacked. Returns : result (boolean) attributes \u2693\ufe0e Read-only . Access to a table of 8 tes3statistic objects for the actor's attributes. Returns : result ( tes3statistic []) barterGold \u2693\ufe0e The current amount of gold that the actor has access to for bartering. Returns : result (number) blind \u2693\ufe0e Direct access to the actor's blind effect attribute. Returns : result (number) boundSize \u2693\ufe0e A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 ) boundSize2D \u2693\ufe0e A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 ) canAct \u2693\ufe0e Read-only . If true , the actor is able to freely execute actions like attacking or casting magic. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, drawing/sheathing their weapon, attacking, casting magic or using a lockpick or probe. Returns : result (boolean) canJump \u2693\ufe0e Read-only . If true , the actor is currently able to jump. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, jumping, falling, swimming or flying. Returns : result (boolean) canJumpMidair \u2693\ufe0e Read-only . If true , the actor is currently able to jump midair. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, swimming or flying. For more information on midair jumping see tes3mobileActor:doJump() . Returns : result (boolean) cell \u2693\ufe0e Read-only . Fetches the cell that the actor is in. Returns : result ( tes3cell ) cellX \u2693\ufe0e Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number) cellY \u2693\ufe0e Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number) chameleon \u2693\ufe0e Direct access to the actor's chameleon effect attribute. Returns : result (number) collidingReference \u2693\ufe0e Read-only . The reference that the mobile has collided with this frame. Doesn't include actors and terrain. Returns : result ( tes3reference , nil) combat \u2693\ufe0e Read-only . Direct access to the creature's combat statistic. This is a creature-specific generalization of skills, where this statistic is used in place of all combat skills. To get an individual skill value by skill ID, see the getSkillValue or getSkillStatistic methods. Returns : result ( tes3statistic ) combatSession \u2693\ufe0e Read-only . Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Doesn't exist on the player's mobile. Returns : result ( tes3combatSession , nil) corpseHourstamp \u2693\ufe0e This is the time measured in hours from the beginning of the game when the actor died. Returns a UNIX-style timestamp based on in-world simulation time since the start of the era. For living actors this field has value a of 0 . Returns : result (number) currentEnchantedItem \u2693\ufe0e Read-only . The currently equipped enchanted item that the actor will use. Returns : result ( tes3equipmentStack , nil) currentSpell \u2693\ufe0e Read-only . The currently equipped spell that the actor will use. Returns : result ( tes3spell ) effectAttributes \u2693\ufe0e Read-only . Access to a table of 24 numbers for the actor's effect attributes. In order those are: attackBonus , sanctuary , resistMagicka , resistFire , resistFrost , resistShock , resistCommonDisease , resistBlightDisease , resistCorprus , resistPoison , resistParalysis , chameleon , resistNormalWeapons , waterBreathing , waterWalking , swiftSwim , jump , levitate , shield , sound , silence , blind , paralyze , and invisibility . Each of those can be accessed individually. For example, tes3mobileActor.chameleon . Returns : result (number[]) encumbrance \u2693\ufe0e Read-only . Access to the actor's encumbrance statistic. Returns : result ( tes3statistic ) endurance \u2693\ufe0e Read-only . Direct access to the actor's endurance attribute statistic. Returns : result ( tes3statistic ) facing \u2693\ufe0e Read-only . The facing of the actor, in radians. It corresponds to the mobile.reference.orientation.z . Facing of 0 corresponds to the in game North, facing of PI corresponds to the game South. It's in clockwise direction. Returns : result (number) fatigue \u2693\ufe0e Read-only . Access to the actor's fatigue statistic. Returns : result ( tes3statistic ) fight \u2693\ufe0e The actor's fight AI value. Returns : result (number) flags \u2693\ufe0e Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (integer) flee \u2693\ufe0e The actor's flee AI value. Returns : result (number) flySpeed \u2693\ufe0e Read-only . The calculated fly movement speed. Returns : result (number) friendlyActors \u2693\ufe0e Read-only . A collection of other tes3mobileActor s that this actor considers friendly. Returns : result ( tes3mobileActor []) greetDuration \u2693\ufe0e No description yet available. Returns : result (number) greetTimer \u2693\ufe0e Read-only . No description yet available. Returns : result (number) hasFreeAction \u2693\ufe0e Read-only . If true, the actor isn't knocked down or knocked out. Returns : result (boolean) health \u2693\ufe0e Read-only . Access to the actor's health statistic. Returns : result ( tes3statistic ) height \u2693\ufe0e The height of the mobile above the ground. Returns : result (number) hello \u2693\ufe0e The actor's hello AI value. Returns : result (number) holdBreathTime \u2693\ufe0e This is the time the actor can stay underwater without taking drowning damage, measured in seconds. It's starting value is fHoldBreathTime (GMST) seconds by default. Once the actor is underwater, this value is decreasing based on the time passed while underwater. The actor will start taking drowning damage once this time is below 0. During drowning this time will have more and more negative values based on the duration of the drowning. Changing this allows manipulating for how long the actor can stay underwater without drowning. Note that player's Breath HUD element won't show values larger than fHoldBreathTime . Returns : result (number) hostileActors \u2693\ufe0e Read-only . A collection of other tes3mobileActor s that this actor considers hostile. Returns : result ( tes3mobileActor []) idleAnim \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is using their idle animation. Returns : result (boolean) impulseVelocity \u2693\ufe0e A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 ) inCombat \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is in combat. Returns : result (boolean) intelligence \u2693\ufe0e Read-only . Direct access to the actor's intelligence attribute statistic. Returns : result ( tes3statistic ) inventory \u2693\ufe0e Read-only . Access to the items the mobile object has in its inventory. Returns : result ( tes3itemStack []) invisibility \u2693\ufe0e Direct access to the actor's invisibility effect attribute. Returns : result (number) isAffectedByGravity \u2693\ufe0e If true , the mobile is affected by gravity. Does not have any effect on spell projectiles. Returns : result (boolean) isAttackingOrCasting \u2693\ufe0e Read-only . If true , the actor is attacking, casting magic or using a lockpick or probe. Returns : result (boolean) isCrittable \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor can be critically hit. Returns : result (boolean) isDead \u2693\ufe0e Read-only . True if the actor is dead. Returns : result (boolean) isDiseased \u2693\ufe0e Read-only . True if the actor is has a disease effect. This counts normal, blight, and corprus effects. Returns : result (boolean) isFalling \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge. Returns : result (boolean) isFlying \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is flying. Returns : result (boolean) isJumping \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is jumping. Returns : result (boolean) isKnockedDown \u2693\ufe0e Read-only . If true , the actor is knocked down. An actor can be knocked down after being attacked or falling. Returns : result (boolean) isKnockedOut \u2693\ufe0e Read-only . If true , the actor is knocked out. An actor can be knocked out if their fatigue has been reduced below zero. Returns : result (boolean) isMovingBack \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving backwards. Returns : result (boolean) isMovingForward \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving forwards. Returns : result (boolean) isMovingLeft \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving left. Returns : result (boolean) isMovingRight \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving right. Returns : result (boolean) isParalyzed \u2693\ufe0e Read-only . If true , the actor is affected by the magic effect paralyze. Returns : result (boolean) isPlayerDetected \u2693\ufe0e Direct access to the actor's flag showing the player was detected on the last detection check. Returns : result (boolean) isPlayerHidden \u2693\ufe0e Direct access to the actor's flag showing the player was hidden on the last detection check. Returns : result (boolean) isReadyingWeapon \u2693\ufe0e Read-only . If true , the actor is drawing or sheathing their weapon. Returns : result (boolean) isRunning \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is running. Returns : result (boolean) isSneaking \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is sneaking. Returns : result (boolean) isSwimming \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is swimming. Returns : result (boolean) isTurningLeft \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is turning left. Returns : result (boolean) isTurningRight \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is turning right. Returns : result (boolean) isWalking \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is walking. Returns : result (boolean) jump \u2693\ufe0e Direct access to the actor's jump effect attribute. Returns : result (number) lastGroundZ \u2693\ufe0e This has a large negative value if the actor is on the ground. When the actor jumps, this will have a positive value. During jump event this value is still negative. A split second after, it will have the value of the .z coordinate when the actor was on the ground. Beware that this value changes after some amount of time while the actors is in the air. Returns : result (number) levitate \u2693\ufe0e Direct access to the actor's levitate effect attribute. Returns : result (number) luck \u2693\ufe0e Read-only . Direct access to the actor's luck attribute statistic. Returns : result ( tes3statistic ) magic \u2693\ufe0e Read-only . Direct access to the creature's magic statistic. This is a creature-specific generalization of skills, where this statistic is used in place of all magic skills. To get an individual skill value by skill ID, see the getSkillValue or getSkillStatistic methods. Returns : result ( tes3statistic ) magicka \u2693\ufe0e Read-only . Access to the actor's magicka statistic. Returns : result ( tes3statistic ) magickaMultiplier \u2693\ufe0e Read-only . Access to the actor's magicka multiplier statistic. Returns : result ( tes3statistic ) mobToMobCollision \u2693\ufe0e Allows modifying if this actor will collide with other actors. When true (default), the actor cannot move through other actors. When false , the actor is allowed to move through other actors, and other actors can move through it. May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor. Returns : result (boolean) movementCollision \u2693\ufe0e Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean) movementFlags \u2693\ufe0e Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (integer) moveSpeed \u2693\ufe0e Read-only . The calculated base movement speed. Returns : result (number) nextActionWeight \u2693\ufe0e Read-only . No description yet available. Returns : result (number) object \u2693\ufe0e Read-only . The actor object that maps to this mobile. Returns : result ( tes3creatureInstance ) objectType \u2693\ufe0e Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number) paralyze \u2693\ufe0e Direct access to the actor's paralyze effect attribute. Returns : result (number) personality \u2693\ufe0e Read-only . Direct access to the actor's personality attribute statistic. Returns : result ( tes3statistic ) playerDistance \u2693\ufe0e The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number) position \u2693\ufe0e A vector that represents the 3D position of the object. Returns : result ( tes3vector3 ) prevMovementFlags \u2693\ufe0e Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (integer) readiedAmmo \u2693\ufe0e The currently equipped ammo, if any. Returns : result ( tes3equipmentStack , nil) readiedAmmoCount \u2693\ufe0e The number of ammo equipped for the readied ammo. Returns : result (integer) readiedShield \u2693\ufe0e The currently equipped shield, if any. Returns : result ( tes3equipmentStack , nil) readiedWeapon \u2693\ufe0e The currently equipped weapon, if any. Returns : result ( tes3equipmentStack , nil) reference \u2693\ufe0e Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference ) resistBlightDisease \u2693\ufe0e Direct access to the actor's blight disease resistance effect attribute. Returns : result (number) resistCommonDisease \u2693\ufe0e Direct access to the actor's common disease resistance effect attribute. Returns : result (number) resistCorprus \u2693\ufe0e Direct access to the actor's corprus disease resistance effect attribute. Returns : result (number) resistFire \u2693\ufe0e Direct access to the actor's fire resistance effect attribute. Returns : result (number) resistFrost \u2693\ufe0e Direct access to the actor's frost resistance effect attribute. Returns : result (number) resistMagicka \u2693\ufe0e Direct access to the actor's magicka resistance effect attribute. Returns : result (number) resistNormalWeapons \u2693\ufe0e Direct access to the actor's normal weapon resistance effect attribute. Returns : result (number) resistParalysis \u2693\ufe0e Direct access to the actor's paralysis resistance effect attribute. Returns : result (number) resistPoison \u2693\ufe0e Direct access to the actor's poison resistance effect attribute. Returns : result (number) resistShock \u2693\ufe0e Direct access to the actor's shock resistance effect attribute. Returns : result (number) runSpeed \u2693\ufe0e Read-only . The calculated run movement speed. Returns : result (number) sanctuary \u2693\ufe0e Direct access to the actor's sanctuary effect attribute. Returns : result (number) scanInterval \u2693\ufe0e The time interval in seconds between specific actor AI checks. These checks include checking for hostile actors and engaging combat, as well as checking if the actor should equip a light source if it is too dark. The specified time in seconds will always be increased by one second when checking, therefore a value of 0.0 will actually cause the actor AI checks to occur every second instead of every frame. Setting this to lower values than the default increases the impact on performance. The default value for a newly created actor depends on the total amount of all currently active tes3aiPlanner , meaning the checks will be executed at different intervals for each actor. Returns : result (number) scanTimer \u2693\ufe0e Read-only . The time in seconds since the last time the checks specified in scanInterval were executed. Returns : result (number) shield \u2693\ufe0e Direct access to the actor's shield effect attribute. Returns : result (number) silence \u2693\ufe0e Direct access to the actor's silence effect attribute. Returns : result (number) skills \u2693\ufe0e Read-only . An array-style table with access to the three creature skill statistics. Returns : result ( tes3statistic []) sound \u2693\ufe0e Direct access to the actor's sound effect attribute. Returns : result (number) speed \u2693\ufe0e Read-only . Direct access to the actor's speed attribute statistic. Returns : result ( tes3statistic ) spellReadied \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor has a spell readied. Returns : result (boolean) stealth \u2693\ufe0e Read-only . Direct access to the creature's stealth statistic. This is a creature-specific generalization of skills, where this statistic is used in place of all stealth skills. To get an individual skill value by skill ID, see the getSkillValue or getSkillStatistic methods. Returns : result ( tes3statistic ) strength \u2693\ufe0e Read-only . Direct access to the actor's strength attribute statistic. Returns : result ( tes3statistic ) swiftSwim \u2693\ufe0e Direct access to the actor's swift swim effect attribute. Returns : result (number) swimRunSpeed \u2693\ufe0e Read-only . The calculated swim movement speed while running. Returns : result (number) swimSpeed \u2693\ufe0e Read-only . The calculated swim movement speed. Returns : result (number) talkedTo \u2693\ufe0e Direct access to the actor's flag that shows it was recently talked to. Returns : result (boolean) torchSlot \u2693\ufe0e The currently equipped light. Returns : result ( tes3equipmentStack ) underwater \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is under water. Returns : result (boolean) velocity \u2693\ufe0e A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 ) walkSpeed \u2693\ufe0e Read-only . The calculated walk movement speed. Returns : result (number) waterBreathing \u2693\ufe0e Direct access to the actor's water breathing effect attribute. Returns : result (number) waterWalking \u2693\ufe0e Direct access to the actor's water walking effect attribute. Returns : result (number) weaponDrawn \u2693\ufe0e Read-only . Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again. Returns : result (boolean) weaponReady \u2693\ufe0e A flag for if the actor has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the actor to take out their weapon. Setting it to false will cause the actor to put it away. Returns : result (boolean) werewolf \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor in werewolf form. Returns : result (boolean) width \u2693\ufe0e Read-only . No description yet available. Returns : result (number) willpower \u2693\ufe0e Read-only . Direct access to the actor's willpower attribute statistic. Returns : result ( tes3statistic ) Methods \u2693\ufe0e applyDamage \u2693\ufe0e Damages the actor, with options to control mitigation and difficulty scaling. Invokes the damage and damaged events, with tes3.damageSource.script source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = myObject : applyDamage ({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Default : false . If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. applyDifficulty (boolean): Default : false . If the game difficulty modifier should be applied. Must be used with the playerAttack argument to apply the correct modifier. playerAttack (boolean): Optional . If the attack came from the player. Used for difficulty calculation. doNotChangeHealth (boolean): Default : false . If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit. Returns : result (number) applyFatigueDamage \u2693\ufe0e Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the damageHandToHand and damagedHandToHand events, with tes3.damageSource.script source. Returns the actual fatigue damage done. local result = myObject : applyFatigueDamage ( fatigueDamage , swing , alwaysPlayHitVoice ) Parameters : fatigueDamage (number): The amount of fatigue damage to apply. swing (number): Optional . The attack swing magnitude, range 0-1. Only modifies hit volume. alwaysPlayHitVoice (boolean): Optional . Always play the hit reaction voiceover. Returns : result (number) applyJumpFatigueCost \u2693\ufe0e Reduces the actor's current fatigue by the amount a regular jump would currently cost. myObject : applyJumpFatigueCost () calcEffectiveDamage \u2693\ufe0e Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = myObject : calcEffectiveDamage ({ damage = ..., applyArmor = ..., resistAttribute = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Default : false . If armor should mitigate the incoming damage. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. Returns : result (number) calculateJumpVelocity \u2693\ufe0e Calculates the starting velocity of a jump. local result = myObject : calculateJumpVelocity ({ direction = ... }) Parameters : params (table): Optional . direction ( tes3vector2 ): Optional . The ground direction vector used to calculate the velocity. If not specified, a zero-length direction vector for a regular jump without movement will be used. Returns : result ( tes3vector3 ) doJump \u2693\ufe0e Forces the actor to jump. If velocity or other parameters with non-default values are specified it will be treated as a non-default jump during the jump event. Returns false if the actor is currently unable to jump or the jump has been cancelled, otherwise returns true . local result = myObject : doJump ({ velocity = ..., applyFatigueCost = ..., allowMidairJumping = ... }) Parameters : params (table): Optional . velocity ( tes3vector3 ): Optional . The initial velocity of the jump. If not specified, the velocity of a regular jump without movement will be used. applyFatigueCost (boolean): Default : true . If true , reduces the actor's current fatigue by the amount a regular jump would currently cost. Will not reduce fatigue if false . allowMidairJumping (boolean): Default : false . If true , enables the jump to be performed while already jumping or falling. Does not work during levitation or other methods of flying. Returns : result (boolean) equip \u2693\ufe0e Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return true . local itemEquipped = myObject : equip ({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... }) Parameters : params (table) item ( tes3item , string): The item to equip. itemData ( tes3itemData ): Optional . The item data of the specific item to equip. addItem (boolean): Default : false . If true , the item will be added to the actor's inventory if needed. selectBestCondition (boolean): Default : false . If true , the item in the inventory with the best condition and best charge will be selected. selectWorstCondition (boolean): Default : false . If true , the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools. Returns : itemEquipped (boolean) equipMagic \u2693\ufe0e Equips a spell or enchantment, optionally equipping the enchanted item if needed. Returns false if the item could not be equipped. local result = myObject : equipMagic ({ source = ..., itemData = ..., equipItem = ..., updateGUI = ... }) Parameters : params (table) source ( tes3spell , tes3item , string): The source of the magic to equip. Spells must be castable. Castable spells have a castType of tes3.spellType.spell or tes3.spellType.power . The actor is not required to know this spell. Items must have a castable enchantment. Castable enchantments have a castType of tes3.enchantmentType.onUse or tes3.enchantmentType.castOnce . The actor is not required to have this item in their inventory, unless equipItem is true . itemData ( tes3itemData ): Optional . Only valid if an item has been assigned to source . The item data of the specific item to equip. equipItem (boolean): Default : false . Only valid if an item has been assigned to source . If true , the item assigned to source will be equipped. Requires the actor to have the item in their inventory. If false , itemData must not be nil. updateGUI (boolean): Default : true . Only valid if this actor is the player. If false , the player GUI will not be updated to reflect the change to equipped magic. Returns : result (boolean) getActiveMagicEffects \u2693\ufe0e Fetches a filtered list of the active magic effects on the actor. local result = myObject : getActiveMagicEffects ({ effect = ..., serial = ... }) Parameters : params (table): Optional . effect (integer): Optional . The magic effect ID to search for, from tes3.effect table. serial (integer): Optional . The magic instance serial to search for. Returns : result ( tes3activeMagicEffect []) getBootsWeight \u2693\ufe0e Read-only . Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped. local result = myObject : getBootsWeight () Returns : result (number) getFatigueTerm \u2693\ufe0e Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base)) local result = myObject : getFatigueTerm () Returns : result (number) getPowerUseTimestamp \u2693\ufe0e Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . local timestamp = myObject : getPowerUseTimestamp ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : timestamp (number) getSkillStatistic \u2693\ufe0e Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = myObject : getSkillStatistic ( skillId ) Parameters : skillId (number): The index of the skill statistic to fetch. Maps to values in tes3.skill namespace. Returns : result ( tes3statisticSkill ) getSkillValue \u2693\ufe0e Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = myObject : getSkillValue ( skillId ) Parameters : skillId (number): The index of the skill statistic's value to fetch. Maps to values in tes3.skill namespace. Returns : result (number) getViewToActor \u2693\ufe0e Returns the angle between provided actor and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right. local angle = myObject : getViewToActor ( mobile ) Parameters : mobile ( tes3mobileActor ): The target actor to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees. getViewToPoint \u2693\ufe0e Returns the angle between provided point in space and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right. local angle = myObject : getViewToPoint ( point ) Parameters : point ( tes3vector3 ): The target point to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees. getViewToPointWithFacing \u2693\ufe0e Returns the angle between provided point in space and the actor's current position with provided facing (which effectively overrides the actor's facing used in other getViewTo methods). The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the provided facing angle with the origin in actor's position. local angle = myObject : getViewToPointWithFacing ( facing , point ) Parameters : facing (number): The facing angle in radians. The values should be in [0, PI] interval. point ( tes3vector3 ): The target point to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees. getWeaponSpeed \u2693\ufe0e Fetches the weapon speed of the actor's currently equipped weapon, or 1.0 if no weapon is equipped. local result = myObject : getWeaponSpeed () Returns : result (number) hasUsedPower \u2693\ufe0e Check if a power has been used and is recharging. local result = myObject : hasUsedPower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean) isAffectedByObject \u2693\ufe0e Determines if the actor is currently being affected by a given alchemy, enchantment, or spell. local result = myObject : isAffectedByObject ( object ) Parameters : object ( tes3alchemy , tes3enchantment , tes3spell ): The magic to check for. Returns : result (boolean) kill \u2693\ufe0e Kills the actor by setting its health to 0. myObject : kill () rechargePower \u2693\ufe0e Makes a power immediately available for casting again. local result = myObject : rechargePower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean) setPowerUseTimestamp \u2693\ufe0e Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. myObject : setPowerUseTimestamp ( power , timestamp ) Parameters : power ( tes3spell ): The spell object for the power. timestamp (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . startCombat \u2693\ufe0e Forces the actor into combat with another actor. myObject : startCombat ( target ) Parameters : target ( tes3mobileActor ) startDialogue \u2693\ufe0e Starts dialogue with this actor for the player. myObject : startDialogue () stopCombat \u2693\ufe0e Ends combat for the actor. myObject : stopCombat ( force ) Parameters : force (boolean): If false , the function won't stop combat if the actor has other valid hostile targets. unequip \u2693\ufe0e Unequips one or more items from the actor. local itemUnequipped = myObject : unequip ({ item = ..., type = ..., armorSlot = ..., clothingSlot = ... }) Parameters : params (table) item ( tes3item , string): Optional . The item to unequip. type (number): Optional . The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from tes3.objectType can be passed here. armorSlot (number): Optional . The armor slot to unequip. Maps to values in tes3.armorSlot namespace. clothingSlot (number): Optional . The clothing slot to unequip. Maps to values in tes3.clothingSlot namespace Returns : itemUnequipped (boolean) unequipMagic \u2693\ufe0e Unequips the currently equipped magic, optionally unequipping the enchanted item if needed. myObject : unequipMagic ({ unequipItem = ..., updateGUI = ... }) Parameters : params (table): Optional . unequipItem (boolean): Default : false . Only valid if the currently equipped magic is from an equippable item enchantment. If true , the item containing the enchantment will be unequipped. updateGUI (boolean): Default : true . Only valid if this actor is the player. If false , the player GUI will not be updated to reflect the change to equipped magic. updateDerivedStatistics \u2693\ufe0e Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use tes3.modStatistic() . myObject : updateDerivedStatistics ( attribute ) Parameters : attribute ( tes3statistic ): Optional . Limits the update to statistics derived from this attribute. e.g. mobile:updateDerivedStatistics(mobile.strength) . If not present, all derived statistics will be updated. updateOpacity \u2693\ufe0e Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects. myObject : updateOpacity ()","title":"tes3mobileCreature"},{"location":"types/tes3mobileCreature/#tes3mobilecreature","text":"A mobile object for a creature. This type inherits the following: tes3mobileActor , tes3mobileObject","title":"tes3mobileCreature"},{"location":"types/tes3mobileCreature/#properties","text":"","title":"Properties"},{"location":"types/tes3mobileCreature/#actionbeforecombat","text":"Read-only . Action data stored before the actor entered combat. Returns : result ( tes3actionData )","title":"actionBeforeCombat"},{"location":"types/tes3mobileCreature/#actiondata","text":"Read-only . Current action data. Pre-combat action data is stored in the actionBeforeCombat property. Returns : result ( tes3actionData )","title":"actionData"},{"location":"types/tes3mobileCreature/#activeai","text":"Friendly access to the actor's flag that controls if AI is active. Returns : result (boolean)","title":"activeAI"},{"location":"types/tes3mobileCreature/#activemagiceffectlist","text":"Read-only . The active magic effects on the actor, from which all others can be accessed. A table with tes3activeMagicEffect items. Returns : result ( tes3activeMagicEffect [])","title":"activeMagicEffectList"},{"location":"types/tes3mobileCreature/#actortype","text":"Read-only . The type of the mobile actor. Maps to values in tes3.actorType namespace. Returns : result (number)","title":"actorType"},{"location":"types/tes3mobileCreature/#agility","text":"Read-only . Direct access to the actor's agility attribute statistic. Returns : result ( tes3statistic )","title":"agility"},{"location":"types/tes3mobileCreature/#aiplanner","text":"Read-only . Access to the mobile's AI planner and AI package information. Doesn't exist on the player mobile. Returns : result ( tes3aiPlanner , nil)","title":"aiPlanner"},{"location":"types/tes3mobileCreature/#alarm","text":"The actor's alarm AI value. Returns : result (number)","title":"alarm"},{"location":"types/tes3mobileCreature/#animationcontroller","text":"Read-only . No description yet available. Returns : result ( tes3actorAnimationController )","title":"animationController"},{"location":"types/tes3mobileCreature/#armorrating","text":"Read-only . The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the applyDamage function. Armour mitigation calculation: x = damage / (damage + target.armorRating) damage *= max(fCombatArmorMinMult, x) if damage < 1 then damage = 1 end Returns : result (number)","title":"armorRating"},{"location":"types/tes3mobileCreature/#attackbonus","text":"Direct access to the actor's attack bonus effect attribute. Returns : result (number)","title":"attackBonus"},{"location":"types/tes3mobileCreature/#attacked","text":"Read-only . Friendly access to the actor's flag that controls if the actor has been attacked. Returns : result (boolean)","title":"attacked"},{"location":"types/tes3mobileCreature/#attributes","text":"Read-only . Access to a table of 8 tes3statistic objects for the actor's attributes. Returns : result ( tes3statistic [])","title":"attributes"},{"location":"types/tes3mobileCreature/#bartergold","text":"The current amount of gold that the actor has access to for bartering. Returns : result (number)","title":"barterGold"},{"location":"types/tes3mobileCreature/#blind","text":"Direct access to the actor's blind effect attribute. Returns : result (number)","title":"blind"},{"location":"types/tes3mobileCreature/#boundsize","text":"A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 )","title":"boundSize"},{"location":"types/tes3mobileCreature/#boundsize2d","text":"A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 )","title":"boundSize2D"},{"location":"types/tes3mobileCreature/#canact","text":"Read-only . If true , the actor is able to freely execute actions like attacking or casting magic. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, drawing/sheathing their weapon, attacking, casting magic or using a lockpick or probe. Returns : result (boolean)","title":"canAct"},{"location":"types/tes3mobileCreature/#canjump","text":"Read-only . If true , the actor is currently able to jump. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, jumping, falling, swimming or flying. Returns : result (boolean)","title":"canJump"},{"location":"types/tes3mobileCreature/#canjumpmidair","text":"Read-only . If true , the actor is currently able to jump midair. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, swimming or flying. For more information on midair jumping see tes3mobileActor:doJump() . Returns : result (boolean)","title":"canJumpMidair"},{"location":"types/tes3mobileCreature/#cell","text":"Read-only . Fetches the cell that the actor is in. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3mobileCreature/#cellx","text":"Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellX"},{"location":"types/tes3mobileCreature/#celly","text":"Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellY"},{"location":"types/tes3mobileCreature/#chameleon","text":"Direct access to the actor's chameleon effect attribute. Returns : result (number)","title":"chameleon"},{"location":"types/tes3mobileCreature/#collidingreference","text":"Read-only . The reference that the mobile has collided with this frame. Doesn't include actors and terrain. Returns : result ( tes3reference , nil)","title":"collidingReference"},{"location":"types/tes3mobileCreature/#combat","text":"Read-only . Direct access to the creature's combat statistic. This is a creature-specific generalization of skills, where this statistic is used in place of all combat skills. To get an individual skill value by skill ID, see the getSkillValue or getSkillStatistic methods. Returns : result ( tes3statistic )","title":"combat"},{"location":"types/tes3mobileCreature/#combatsession","text":"Read-only . Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Doesn't exist on the player's mobile. Returns : result ( tes3combatSession , nil)","title":"combatSession"},{"location":"types/tes3mobileCreature/#corpsehourstamp","text":"This is the time measured in hours from the beginning of the game when the actor died. Returns a UNIX-style timestamp based on in-world simulation time since the start of the era. For living actors this field has value a of 0 . Returns : result (number)","title":"corpseHourstamp"},{"location":"types/tes3mobileCreature/#currentenchanteditem","text":"Read-only . The currently equipped enchanted item that the actor will use. Returns : result ( tes3equipmentStack , nil)","title":"currentEnchantedItem"},{"location":"types/tes3mobileCreature/#currentspell","text":"Read-only . The currently equipped spell that the actor will use. Returns : result ( tes3spell )","title":"currentSpell"},{"location":"types/tes3mobileCreature/#effectattributes","text":"Read-only . Access to a table of 24 numbers for the actor's effect attributes. In order those are: attackBonus , sanctuary , resistMagicka , resistFire , resistFrost , resistShock , resistCommonDisease , resistBlightDisease , resistCorprus , resistPoison , resistParalysis , chameleon , resistNormalWeapons , waterBreathing , waterWalking , swiftSwim , jump , levitate , shield , sound , silence , blind , paralyze , and invisibility . Each of those can be accessed individually. For example, tes3mobileActor.chameleon . Returns : result (number[])","title":"effectAttributes"},{"location":"types/tes3mobileCreature/#encumbrance","text":"Read-only . Access to the actor's encumbrance statistic. Returns : result ( tes3statistic )","title":"encumbrance"},{"location":"types/tes3mobileCreature/#endurance","text":"Read-only . Direct access to the actor's endurance attribute statistic. Returns : result ( tes3statistic )","title":"endurance"},{"location":"types/tes3mobileCreature/#facing","text":"Read-only . The facing of the actor, in radians. It corresponds to the mobile.reference.orientation.z . Facing of 0 corresponds to the in game North, facing of PI corresponds to the game South. It's in clockwise direction. Returns : result (number)","title":"facing"},{"location":"types/tes3mobileCreature/#fatigue","text":"Read-only . Access to the actor's fatigue statistic. Returns : result ( tes3statistic )","title":"fatigue"},{"location":"types/tes3mobileCreature/#fight","text":"The actor's fight AI value. Returns : result (number)","title":"fight"},{"location":"types/tes3mobileCreature/#flags","text":"Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"flags"},{"location":"types/tes3mobileCreature/#flee","text":"The actor's flee AI value. Returns : result (number)","title":"flee"},{"location":"types/tes3mobileCreature/#flyspeed","text":"Read-only . The calculated fly movement speed. Returns : result (number)","title":"flySpeed"},{"location":"types/tes3mobileCreature/#friendlyactors","text":"Read-only . A collection of other tes3mobileActor s that this actor considers friendly. Returns : result ( tes3mobileActor [])","title":"friendlyActors"},{"location":"types/tes3mobileCreature/#greetduration","text":"No description yet available. Returns : result (number)","title":"greetDuration"},{"location":"types/tes3mobileCreature/#greettimer","text":"Read-only . No description yet available. Returns : result (number)","title":"greetTimer"},{"location":"types/tes3mobileCreature/#hasfreeaction","text":"Read-only . If true, the actor isn't knocked down or knocked out. Returns : result (boolean)","title":"hasFreeAction"},{"location":"types/tes3mobileCreature/#health","text":"Read-only . Access to the actor's health statistic. Returns : result ( tes3statistic )","title":"health"},{"location":"types/tes3mobileCreature/#height","text":"The height of the mobile above the ground. Returns : result (number)","title":"height"},{"location":"types/tes3mobileCreature/#hello","text":"The actor's hello AI value. Returns : result (number)","title":"hello"},{"location":"types/tes3mobileCreature/#holdbreathtime","text":"This is the time the actor can stay underwater without taking drowning damage, measured in seconds. It's starting value is fHoldBreathTime (GMST) seconds by default. Once the actor is underwater, this value is decreasing based on the time passed while underwater. The actor will start taking drowning damage once this time is below 0. During drowning this time will have more and more negative values based on the duration of the drowning. Changing this allows manipulating for how long the actor can stay underwater without drowning. Note that player's Breath HUD element won't show values larger than fHoldBreathTime . Returns : result (number)","title":"holdBreathTime"},{"location":"types/tes3mobileCreature/#hostileactors","text":"Read-only . A collection of other tes3mobileActor s that this actor considers hostile. Returns : result ( tes3mobileActor [])","title":"hostileActors"},{"location":"types/tes3mobileCreature/#idleanim","text":"Read-only . Friendly access to the actor's flag that controls if the actor is using their idle animation. Returns : result (boolean)","title":"idleAnim"},{"location":"types/tes3mobileCreature/#impulsevelocity","text":"A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 )","title":"impulseVelocity"},{"location":"types/tes3mobileCreature/#incombat","text":"Read-only . Friendly access to the actor's flag that controls if the actor is in combat. Returns : result (boolean)","title":"inCombat"},{"location":"types/tes3mobileCreature/#intelligence","text":"Read-only . Direct access to the actor's intelligence attribute statistic. Returns : result ( tes3statistic )","title":"intelligence"},{"location":"types/tes3mobileCreature/#inventory","text":"Read-only . Access to the items the mobile object has in its inventory. Returns : result ( tes3itemStack [])","title":"inventory"},{"location":"types/tes3mobileCreature/#invisibility","text":"Direct access to the actor's invisibility effect attribute. Returns : result (number)","title":"invisibility"},{"location":"types/tes3mobileCreature/#isaffectedbygravity","text":"If true , the mobile is affected by gravity. Does not have any effect on spell projectiles. Returns : result (boolean)","title":"isAffectedByGravity"},{"location":"types/tes3mobileCreature/#isattackingorcasting","text":"Read-only . If true , the actor is attacking, casting magic or using a lockpick or probe. Returns : result (boolean)","title":"isAttackingOrCasting"},{"location":"types/tes3mobileCreature/#iscrittable","text":"Read-only . Friendly access to the actor's flag that controls if the actor can be critically hit. Returns : result (boolean)","title":"isCrittable"},{"location":"types/tes3mobileCreature/#isdead","text":"Read-only . True if the actor is dead. Returns : result (boolean)","title":"isDead"},{"location":"types/tes3mobileCreature/#isdiseased","text":"Read-only . True if the actor is has a disease effect. This counts normal, blight, and corprus effects. Returns : result (boolean)","title":"isDiseased"},{"location":"types/tes3mobileCreature/#isfalling","text":"Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge. Returns : result (boolean)","title":"isFalling"},{"location":"types/tes3mobileCreature/#isflying","text":"Direct access to the actor's current movement flags, showing if the actor is flying. Returns : result (boolean)","title":"isFlying"},{"location":"types/tes3mobileCreature/#isjumping","text":"Direct access to the actor's current movement flags, showing if the actor is jumping. Returns : result (boolean)","title":"isJumping"},{"location":"types/tes3mobileCreature/#isknockeddown","text":"Read-only . If true , the actor is knocked down. An actor can be knocked down after being attacked or falling. Returns : result (boolean)","title":"isKnockedDown"},{"location":"types/tes3mobileCreature/#isknockedout","text":"Read-only . If true , the actor is knocked out. An actor can be knocked out if their fatigue has been reduced below zero. Returns : result (boolean)","title":"isKnockedOut"},{"location":"types/tes3mobileCreature/#ismovingback","text":"Direct access to the actor's current movement flags, showing if the actor is moving backwards. Returns : result (boolean)","title":"isMovingBack"},{"location":"types/tes3mobileCreature/#ismovingforward","text":"Direct access to the actor's current movement flags, showing if the actor is moving forwards. Returns : result (boolean)","title":"isMovingForward"},{"location":"types/tes3mobileCreature/#ismovingleft","text":"Direct access to the actor's current movement flags, showing if the actor is moving left. Returns : result (boolean)","title":"isMovingLeft"},{"location":"types/tes3mobileCreature/#ismovingright","text":"Direct access to the actor's current movement flags, showing if the actor is moving right. Returns : result (boolean)","title":"isMovingRight"},{"location":"types/tes3mobileCreature/#isparalyzed","text":"Read-only . If true , the actor is affected by the magic effect paralyze. Returns : result (boolean)","title":"isParalyzed"},{"location":"types/tes3mobileCreature/#isplayerdetected","text":"Direct access to the actor's flag showing the player was detected on the last detection check. Returns : result (boolean)","title":"isPlayerDetected"},{"location":"types/tes3mobileCreature/#isplayerhidden","text":"Direct access to the actor's flag showing the player was hidden on the last detection check. Returns : result (boolean)","title":"isPlayerHidden"},{"location":"types/tes3mobileCreature/#isreadyingweapon","text":"Read-only . If true , the actor is drawing or sheathing their weapon. Returns : result (boolean)","title":"isReadyingWeapon"},{"location":"types/tes3mobileCreature/#isrunning","text":"Direct access to the actor's current movement flags, showing if the actor is running. Returns : result (boolean)","title":"isRunning"},{"location":"types/tes3mobileCreature/#issneaking","text":"Direct access to the actor's current movement flags, showing if the actor is sneaking. Returns : result (boolean)","title":"isSneaking"},{"location":"types/tes3mobileCreature/#isswimming","text":"Direct access to the actor's current movement flags, showing if the actor is swimming. Returns : result (boolean)","title":"isSwimming"},{"location":"types/tes3mobileCreature/#isturningleft","text":"Direct access to the actor's current movement flags, showing if the actor is turning left. Returns : result (boolean)","title":"isTurningLeft"},{"location":"types/tes3mobileCreature/#isturningright","text":"Direct access to the actor's current movement flags, showing if the actor is turning right. Returns : result (boolean)","title":"isTurningRight"},{"location":"types/tes3mobileCreature/#iswalking","text":"Direct access to the actor's current movement flags, showing if the actor is walking. Returns : result (boolean)","title":"isWalking"},{"location":"types/tes3mobileCreature/#jump","text":"Direct access to the actor's jump effect attribute. Returns : result (number)","title":"jump"},{"location":"types/tes3mobileCreature/#lastgroundz","text":"This has a large negative value if the actor is on the ground. When the actor jumps, this will have a positive value. During jump event this value is still negative. A split second after, it will have the value of the .z coordinate when the actor was on the ground. Beware that this value changes after some amount of time while the actors is in the air. Returns : result (number)","title":"lastGroundZ"},{"location":"types/tes3mobileCreature/#levitate","text":"Direct access to the actor's levitate effect attribute. Returns : result (number)","title":"levitate"},{"location":"types/tes3mobileCreature/#luck","text":"Read-only . Direct access to the actor's luck attribute statistic. Returns : result ( tes3statistic )","title":"luck"},{"location":"types/tes3mobileCreature/#magic","text":"Read-only . Direct access to the creature's magic statistic. This is a creature-specific generalization of skills, where this statistic is used in place of all magic skills. To get an individual skill value by skill ID, see the getSkillValue or getSkillStatistic methods. Returns : result ( tes3statistic )","title":"magic"},{"location":"types/tes3mobileCreature/#magicka","text":"Read-only . Access to the actor's magicka statistic. Returns : result ( tes3statistic )","title":"magicka"},{"location":"types/tes3mobileCreature/#magickamultiplier","text":"Read-only . Access to the actor's magicka multiplier statistic. Returns : result ( tes3statistic )","title":"magickaMultiplier"},{"location":"types/tes3mobileCreature/#mobtomobcollision","text":"Allows modifying if this actor will collide with other actors. When true (default), the actor cannot move through other actors. When false , the actor is allowed to move through other actors, and other actors can move through it. May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor. Returns : result (boolean)","title":"mobToMobCollision"},{"location":"types/tes3mobileCreature/#movementcollision","text":"Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean)","title":"movementCollision"},{"location":"types/tes3mobileCreature/#movementflags","text":"Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"movementFlags"},{"location":"types/tes3mobileCreature/#movespeed","text":"Read-only . The calculated base movement speed. Returns : result (number)","title":"moveSpeed"},{"location":"types/tes3mobileCreature/#nextactionweight","text":"Read-only . No description yet available. Returns : result (number)","title":"nextActionWeight"},{"location":"types/tes3mobileCreature/#object","text":"Read-only . The actor object that maps to this mobile. Returns : result ( tes3creatureInstance )","title":"object"},{"location":"types/tes3mobileCreature/#objecttype","text":"Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number)","title":"objectType"},{"location":"types/tes3mobileCreature/#paralyze","text":"Direct access to the actor's paralyze effect attribute. Returns : result (number)","title":"paralyze"},{"location":"types/tes3mobileCreature/#personality","text":"Read-only . Direct access to the actor's personality attribute statistic. Returns : result ( tes3statistic )","title":"personality"},{"location":"types/tes3mobileCreature/#playerdistance","text":"The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number)","title":"playerDistance"},{"location":"types/tes3mobileCreature/#position","text":"A vector that represents the 3D position of the object. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3mobileCreature/#prevmovementflags","text":"Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"prevMovementFlags"},{"location":"types/tes3mobileCreature/#readiedammo","text":"The currently equipped ammo, if any. Returns : result ( tes3equipmentStack , nil)","title":"readiedAmmo"},{"location":"types/tes3mobileCreature/#readiedammocount","text":"The number of ammo equipped for the readied ammo. Returns : result (integer)","title":"readiedAmmoCount"},{"location":"types/tes3mobileCreature/#readiedshield","text":"The currently equipped shield, if any. Returns : result ( tes3equipmentStack , nil)","title":"readiedShield"},{"location":"types/tes3mobileCreature/#readiedweapon","text":"The currently equipped weapon, if any. Returns : result ( tes3equipmentStack , nil)","title":"readiedWeapon"},{"location":"types/tes3mobileCreature/#reference","text":"Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3mobileCreature/#resistblightdisease","text":"Direct access to the actor's blight disease resistance effect attribute. Returns : result (number)","title":"resistBlightDisease"},{"location":"types/tes3mobileCreature/#resistcommondisease","text":"Direct access to the actor's common disease resistance effect attribute. Returns : result (number)","title":"resistCommonDisease"},{"location":"types/tes3mobileCreature/#resistcorprus","text":"Direct access to the actor's corprus disease resistance effect attribute. Returns : result (number)","title":"resistCorprus"},{"location":"types/tes3mobileCreature/#resistfire","text":"Direct access to the actor's fire resistance effect attribute. Returns : result (number)","title":"resistFire"},{"location":"types/tes3mobileCreature/#resistfrost","text":"Direct access to the actor's frost resistance effect attribute. Returns : result (number)","title":"resistFrost"},{"location":"types/tes3mobileCreature/#resistmagicka","text":"Direct access to the actor's magicka resistance effect attribute. Returns : result (number)","title":"resistMagicka"},{"location":"types/tes3mobileCreature/#resistnormalweapons","text":"Direct access to the actor's normal weapon resistance effect attribute. Returns : result (number)","title":"resistNormalWeapons"},{"location":"types/tes3mobileCreature/#resistparalysis","text":"Direct access to the actor's paralysis resistance effect attribute. Returns : result (number)","title":"resistParalysis"},{"location":"types/tes3mobileCreature/#resistpoison","text":"Direct access to the actor's poison resistance effect attribute. Returns : result (number)","title":"resistPoison"},{"location":"types/tes3mobileCreature/#resistshock","text":"Direct access to the actor's shock resistance effect attribute. Returns : result (number)","title":"resistShock"},{"location":"types/tes3mobileCreature/#runspeed","text":"Read-only . The calculated run movement speed. Returns : result (number)","title":"runSpeed"},{"location":"types/tes3mobileCreature/#sanctuary","text":"Direct access to the actor's sanctuary effect attribute. Returns : result (number)","title":"sanctuary"},{"location":"types/tes3mobileCreature/#scaninterval","text":"The time interval in seconds between specific actor AI checks. These checks include checking for hostile actors and engaging combat, as well as checking if the actor should equip a light source if it is too dark. The specified time in seconds will always be increased by one second when checking, therefore a value of 0.0 will actually cause the actor AI checks to occur every second instead of every frame. Setting this to lower values than the default increases the impact on performance. The default value for a newly created actor depends on the total amount of all currently active tes3aiPlanner , meaning the checks will be executed at different intervals for each actor. Returns : result (number)","title":"scanInterval"},{"location":"types/tes3mobileCreature/#scantimer","text":"Read-only . The time in seconds since the last time the checks specified in scanInterval were executed. Returns : result (number)","title":"scanTimer"},{"location":"types/tes3mobileCreature/#shield","text":"Direct access to the actor's shield effect attribute. Returns : result (number)","title":"shield"},{"location":"types/tes3mobileCreature/#silence","text":"Direct access to the actor's silence effect attribute. Returns : result (number)","title":"silence"},{"location":"types/tes3mobileCreature/#skills","text":"Read-only . An array-style table with access to the three creature skill statistics. Returns : result ( tes3statistic [])","title":"skills"},{"location":"types/tes3mobileCreature/#sound","text":"Direct access to the actor's sound effect attribute. Returns : result (number)","title":"sound"},{"location":"types/tes3mobileCreature/#speed","text":"Read-only . Direct access to the actor's speed attribute statistic. Returns : result ( tes3statistic )","title":"speed"},{"location":"types/tes3mobileCreature/#spellreadied","text":"Read-only . Friendly access to the actor's flag that controls if the actor has a spell readied. Returns : result (boolean)","title":"spellReadied"},{"location":"types/tes3mobileCreature/#stealth","text":"Read-only . Direct access to the creature's stealth statistic. This is a creature-specific generalization of skills, where this statistic is used in place of all stealth skills. To get an individual skill value by skill ID, see the getSkillValue or getSkillStatistic methods. Returns : result ( tes3statistic )","title":"stealth"},{"location":"types/tes3mobileCreature/#strength","text":"Read-only . Direct access to the actor's strength attribute statistic. Returns : result ( tes3statistic )","title":"strength"},{"location":"types/tes3mobileCreature/#swiftswim","text":"Direct access to the actor's swift swim effect attribute. Returns : result (number)","title":"swiftSwim"},{"location":"types/tes3mobileCreature/#swimrunspeed","text":"Read-only . The calculated swim movement speed while running. Returns : result (number)","title":"swimRunSpeed"},{"location":"types/tes3mobileCreature/#swimspeed","text":"Read-only . The calculated swim movement speed. Returns : result (number)","title":"swimSpeed"},{"location":"types/tes3mobileCreature/#talkedto","text":"Direct access to the actor's flag that shows it was recently talked to. Returns : result (boolean)","title":"talkedTo"},{"location":"types/tes3mobileCreature/#torchslot","text":"The currently equipped light. Returns : result ( tes3equipmentStack )","title":"torchSlot"},{"location":"types/tes3mobileCreature/#underwater","text":"Read-only . Friendly access to the actor's flag that controls if the actor is under water. Returns : result (boolean)","title":"underwater"},{"location":"types/tes3mobileCreature/#velocity","text":"A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/tes3mobileCreature/#walkspeed","text":"Read-only . The calculated walk movement speed. Returns : result (number)","title":"walkSpeed"},{"location":"types/tes3mobileCreature/#waterbreathing","text":"Direct access to the actor's water breathing effect attribute. Returns : result (number)","title":"waterBreathing"},{"location":"types/tes3mobileCreature/#waterwalking","text":"Direct access to the actor's water walking effect attribute. Returns : result (number)","title":"waterWalking"},{"location":"types/tes3mobileCreature/#weapondrawn","text":"Read-only . Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again. Returns : result (boolean)","title":"weaponDrawn"},{"location":"types/tes3mobileCreature/#weaponready","text":"A flag for if the actor has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the actor to take out their weapon. Setting it to false will cause the actor to put it away. Returns : result (boolean)","title":"weaponReady"},{"location":"types/tes3mobileCreature/#werewolf","text":"Read-only . Friendly access to the actor's flag that controls if the actor in werewolf form. Returns : result (boolean)","title":"werewolf"},{"location":"types/tes3mobileCreature/#width","text":"Read-only . No description yet available. Returns : result (number)","title":"width"},{"location":"types/tes3mobileCreature/#willpower","text":"Read-only . Direct access to the actor's willpower attribute statistic. Returns : result ( tes3statistic )","title":"willpower"},{"location":"types/tes3mobileCreature/#methods","text":"","title":"Methods"},{"location":"types/tes3mobileCreature/#applydamage","text":"Damages the actor, with options to control mitigation and difficulty scaling. Invokes the damage and damaged events, with tes3.damageSource.script source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = myObject : applyDamage ({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Default : false . If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. applyDifficulty (boolean): Default : false . If the game difficulty modifier should be applied. Must be used with the playerAttack argument to apply the correct modifier. playerAttack (boolean): Optional . If the attack came from the player. Used for difficulty calculation. doNotChangeHealth (boolean): Default : false . If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit. Returns : result (number)","title":"applyDamage"},{"location":"types/tes3mobileCreature/#applyfatiguedamage","text":"Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the damageHandToHand and damagedHandToHand events, with tes3.damageSource.script source. Returns the actual fatigue damage done. local result = myObject : applyFatigueDamage ( fatigueDamage , swing , alwaysPlayHitVoice ) Parameters : fatigueDamage (number): The amount of fatigue damage to apply. swing (number): Optional . The attack swing magnitude, range 0-1. Only modifies hit volume. alwaysPlayHitVoice (boolean): Optional . Always play the hit reaction voiceover. Returns : result (number)","title":"applyFatigueDamage"},{"location":"types/tes3mobileCreature/#applyjumpfatiguecost","text":"Reduces the actor's current fatigue by the amount a regular jump would currently cost. myObject : applyJumpFatigueCost ()","title":"applyJumpFatigueCost"},{"location":"types/tes3mobileCreature/#calceffectivedamage","text":"Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = myObject : calcEffectiveDamage ({ damage = ..., applyArmor = ..., resistAttribute = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Default : false . If armor should mitigate the incoming damage. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. Returns : result (number)","title":"calcEffectiveDamage"},{"location":"types/tes3mobileCreature/#calculatejumpvelocity","text":"Calculates the starting velocity of a jump. local result = myObject : calculateJumpVelocity ({ direction = ... }) Parameters : params (table): Optional . direction ( tes3vector2 ): Optional . The ground direction vector used to calculate the velocity. If not specified, a zero-length direction vector for a regular jump without movement will be used. Returns : result ( tes3vector3 )","title":"calculateJumpVelocity"},{"location":"types/tes3mobileCreature/#dojump","text":"Forces the actor to jump. If velocity or other parameters with non-default values are specified it will be treated as a non-default jump during the jump event. Returns false if the actor is currently unable to jump or the jump has been cancelled, otherwise returns true . local result = myObject : doJump ({ velocity = ..., applyFatigueCost = ..., allowMidairJumping = ... }) Parameters : params (table): Optional . velocity ( tes3vector3 ): Optional . The initial velocity of the jump. If not specified, the velocity of a regular jump without movement will be used. applyFatigueCost (boolean): Default : true . If true , reduces the actor's current fatigue by the amount a regular jump would currently cost. Will not reduce fatigue if false . allowMidairJumping (boolean): Default : false . If true , enables the jump to be performed while already jumping or falling. Does not work during levitation or other methods of flying. Returns : result (boolean)","title":"doJump"},{"location":"types/tes3mobileCreature/#equip","text":"Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return true . local itemEquipped = myObject : equip ({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... }) Parameters : params (table) item ( tes3item , string): The item to equip. itemData ( tes3itemData ): Optional . The item data of the specific item to equip. addItem (boolean): Default : false . If true , the item will be added to the actor's inventory if needed. selectBestCondition (boolean): Default : false . If true , the item in the inventory with the best condition and best charge will be selected. selectWorstCondition (boolean): Default : false . If true , the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools. Returns : itemEquipped (boolean)","title":"equip"},{"location":"types/tes3mobileCreature/#equipmagic","text":"Equips a spell or enchantment, optionally equipping the enchanted item if needed. Returns false if the item could not be equipped. local result = myObject : equipMagic ({ source = ..., itemData = ..., equipItem = ..., updateGUI = ... }) Parameters : params (table) source ( tes3spell , tes3item , string): The source of the magic to equip. Spells must be castable. Castable spells have a castType of tes3.spellType.spell or tes3.spellType.power . The actor is not required to know this spell. Items must have a castable enchantment. Castable enchantments have a castType of tes3.enchantmentType.onUse or tes3.enchantmentType.castOnce . The actor is not required to have this item in their inventory, unless equipItem is true . itemData ( tes3itemData ): Optional . Only valid if an item has been assigned to source . The item data of the specific item to equip. equipItem (boolean): Default : false . Only valid if an item has been assigned to source . If true , the item assigned to source will be equipped. Requires the actor to have the item in their inventory. If false , itemData must not be nil. updateGUI (boolean): Default : true . Only valid if this actor is the player. If false , the player GUI will not be updated to reflect the change to equipped magic. Returns : result (boolean)","title":"equipMagic"},{"location":"types/tes3mobileCreature/#getactivemagiceffects","text":"Fetches a filtered list of the active magic effects on the actor. local result = myObject : getActiveMagicEffects ({ effect = ..., serial = ... }) Parameters : params (table): Optional . effect (integer): Optional . The magic effect ID to search for, from tes3.effect table. serial (integer): Optional . The magic instance serial to search for. Returns : result ( tes3activeMagicEffect [])","title":"getActiveMagicEffects"},{"location":"types/tes3mobileCreature/#getbootsweight","text":"Read-only . Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped. local result = myObject : getBootsWeight () Returns : result (number)","title":"getBootsWeight"},{"location":"types/tes3mobileCreature/#getfatigueterm","text":"Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base)) local result = myObject : getFatigueTerm () Returns : result (number)","title":"getFatigueTerm"},{"location":"types/tes3mobileCreature/#getpowerusetimestamp","text":"Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . local timestamp = myObject : getPowerUseTimestamp ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : timestamp (number)","title":"getPowerUseTimestamp"},{"location":"types/tes3mobileCreature/#getskillstatistic","text":"Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = myObject : getSkillStatistic ( skillId ) Parameters : skillId (number): The index of the skill statistic to fetch. Maps to values in tes3.skill namespace. Returns : result ( tes3statisticSkill )","title":"getSkillStatistic"},{"location":"types/tes3mobileCreature/#getskillvalue","text":"Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = myObject : getSkillValue ( skillId ) Parameters : skillId (number): The index of the skill statistic's value to fetch. Maps to values in tes3.skill namespace. Returns : result (number)","title":"getSkillValue"},{"location":"types/tes3mobileCreature/#getviewtoactor","text":"Returns the angle between provided actor and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right. local angle = myObject : getViewToActor ( mobile ) Parameters : mobile ( tes3mobileActor ): The target actor to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees.","title":"getViewToActor"},{"location":"types/tes3mobileCreature/#getviewtopoint","text":"Returns the angle between provided point in space and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right. local angle = myObject : getViewToPoint ( point ) Parameters : point ( tes3vector3 ): The target point to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees.","title":"getViewToPoint"},{"location":"types/tes3mobileCreature/#getviewtopointwithfacing","text":"Returns the angle between provided point in space and the actor's current position with provided facing (which effectively overrides the actor's facing used in other getViewTo methods). The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the provided facing angle with the origin in actor's position. local angle = myObject : getViewToPointWithFacing ( facing , point ) Parameters : facing (number): The facing angle in radians. The values should be in [0, PI] interval. point ( tes3vector3 ): The target point to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees.","title":"getViewToPointWithFacing"},{"location":"types/tes3mobileCreature/#getweaponspeed","text":"Fetches the weapon speed of the actor's currently equipped weapon, or 1.0 if no weapon is equipped. local result = myObject : getWeaponSpeed () Returns : result (number)","title":"getWeaponSpeed"},{"location":"types/tes3mobileCreature/#hasusedpower","text":"Check if a power has been used and is recharging. local result = myObject : hasUsedPower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean)","title":"hasUsedPower"},{"location":"types/tes3mobileCreature/#isaffectedbyobject","text":"Determines if the actor is currently being affected by a given alchemy, enchantment, or spell. local result = myObject : isAffectedByObject ( object ) Parameters : object ( tes3alchemy , tes3enchantment , tes3spell ): The magic to check for. Returns : result (boolean)","title":"isAffectedByObject"},{"location":"types/tes3mobileCreature/#kill","text":"Kills the actor by setting its health to 0. myObject : kill ()","title":"kill"},{"location":"types/tes3mobileCreature/#rechargepower","text":"Makes a power immediately available for casting again. local result = myObject : rechargePower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean)","title":"rechargePower"},{"location":"types/tes3mobileCreature/#setpowerusetimestamp","text":"Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. myObject : setPowerUseTimestamp ( power , timestamp ) Parameters : power ( tes3spell ): The spell object for the power. timestamp (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() .","title":"setPowerUseTimestamp"},{"location":"types/tes3mobileCreature/#startcombat","text":"Forces the actor into combat with another actor. myObject : startCombat ( target ) Parameters : target ( tes3mobileActor )","title":"startCombat"},{"location":"types/tes3mobileCreature/#startdialogue","text":"Starts dialogue with this actor for the player. myObject : startDialogue ()","title":"startDialogue"},{"location":"types/tes3mobileCreature/#stopcombat","text":"Ends combat for the actor. myObject : stopCombat ( force ) Parameters : force (boolean): If false , the function won't stop combat if the actor has other valid hostile targets.","title":"stopCombat"},{"location":"types/tes3mobileCreature/#unequip","text":"Unequips one or more items from the actor. local itemUnequipped = myObject : unequip ({ item = ..., type = ..., armorSlot = ..., clothingSlot = ... }) Parameters : params (table) item ( tes3item , string): Optional . The item to unequip. type (number): Optional . The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from tes3.objectType can be passed here. armorSlot (number): Optional . The armor slot to unequip. Maps to values in tes3.armorSlot namespace. clothingSlot (number): Optional . The clothing slot to unequip. Maps to values in tes3.clothingSlot namespace Returns : itemUnequipped (boolean)","title":"unequip"},{"location":"types/tes3mobileCreature/#unequipmagic","text":"Unequips the currently equipped magic, optionally unequipping the enchanted item if needed. myObject : unequipMagic ({ unequipItem = ..., updateGUI = ... }) Parameters : params (table): Optional . unequipItem (boolean): Default : false . Only valid if the currently equipped magic is from an equippable item enchantment. If true , the item containing the enchantment will be unequipped. updateGUI (boolean): Default : true . Only valid if this actor is the player. If false , the player GUI will not be updated to reflect the change to equipped magic.","title":"unequipMagic"},{"location":"types/tes3mobileCreature/#updatederivedstatistics","text":"Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use tes3.modStatistic() . myObject : updateDerivedStatistics ( attribute ) Parameters : attribute ( tes3statistic ): Optional . Limits the update to statistics derived from this attribute. e.g. mobile:updateDerivedStatistics(mobile.strength) . If not present, all derived statistics will be updated.","title":"updateDerivedStatistics"},{"location":"types/tes3mobileCreature/#updateopacity","text":"Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects. myObject : updateOpacity ()","title":"updateOpacity"},{"location":"types/tes3mobileNPC/","text":"tes3mobileNPC \u2693\ufe0e A mobile object for an NPC. This type inherits the following: tes3mobileActor , tes3mobileObject Properties \u2693\ufe0e acrobatics \u2693\ufe0e Read-only . Direct access to the NPC's acrobatics skill statistic. Returns : result ( tes3statisticSkill ) actionBeforeCombat \u2693\ufe0e Read-only . Action data stored before the actor entered combat. Returns : result ( tes3actionData ) actionData \u2693\ufe0e Read-only . Current action data. Pre-combat action data is stored in the actionBeforeCombat property. Returns : result ( tes3actionData ) activeAI \u2693\ufe0e Friendly access to the actor's flag that controls if AI is active. Returns : result (boolean) activeMagicEffectList \u2693\ufe0e Read-only . The active magic effects on the actor, from which all others can be accessed. A table with tes3activeMagicEffect items. Returns : result ( tes3activeMagicEffect []) actorType \u2693\ufe0e Read-only . The type of the mobile actor. Maps to values in tes3.actorType namespace. Returns : result (number) agility \u2693\ufe0e Read-only . Direct access to the actor's agility attribute statistic. Returns : result ( tes3statistic ) aiPlanner \u2693\ufe0e Read-only . Access to the mobile's AI planner and AI package information. Doesn't exist on the player mobile. Returns : result ( tes3aiPlanner , nil) alarm \u2693\ufe0e The actor's alarm AI value. Returns : result (number) alchemy \u2693\ufe0e Read-only . Direct access to the NPC's alchemy skill statistic. Returns : result ( tes3statisticSkill ) alteration \u2693\ufe0e Read-only . Direct access to the NPC's alteration skill statistic. Returns : result ( tes3statisticSkill ) animationController \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3actorAnimationController ) armorer \u2693\ufe0e Read-only . Direct access to the NPC's armorer skill statistic. Returns : result ( tes3statisticSkill ) armorRating \u2693\ufe0e Read-only . The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the applyDamage function. Armour mitigation calculation: x = damage / (damage + target.armorRating) damage *= max(fCombatArmorMinMult, x) if damage < 1 then damage = 1 end Returns : result (number) athletics \u2693\ufe0e Read-only . Direct access to the NPC's athletics skill statistic. Returns : result ( tes3statisticSkill ) attackBonus \u2693\ufe0e Direct access to the actor's attack bonus effect attribute. Returns : result (number) attacked \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor has been attacked. Returns : result (boolean) attributes \u2693\ufe0e Read-only . Access to a table of 8 tes3statistic objects for the actor's attributes. Returns : result ( tes3statistic []) axe \u2693\ufe0e Read-only . Direct access to the NPC's axe skill statistic. Returns : result ( tes3statisticSkill ) barterGold \u2693\ufe0e The current amount of gold that the actor has access to for bartering. Returns : result (number) blind \u2693\ufe0e Direct access to the actor's blind effect attribute. Returns : result (number) block \u2693\ufe0e Read-only . Direct access to the NPC's block skill statistic. Returns : result ( tes3statisticSkill ) bluntWeapon \u2693\ufe0e Read-only . Direct access to the NPC's blunt weapon skill statistic. Returns : result ( tes3statisticSkill ) boundSize \u2693\ufe0e A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 ) boundSize2D \u2693\ufe0e A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 ) canAct \u2693\ufe0e Read-only . If true , the actor is able to freely execute actions like attacking or casting magic. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, drawing/sheathing their weapon, attacking, casting magic or using a lockpick or probe. Returns : result (boolean) canJump \u2693\ufe0e Read-only . If true , the actor is currently able to jump. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, jumping, falling, swimming or flying. Returns : result (boolean) canJumpMidair \u2693\ufe0e Read-only . If true , the actor is currently able to jump midair. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, swimming or flying. For more information on midair jumping see tes3mobileActor:doJump() . Returns : result (boolean) cell \u2693\ufe0e Read-only . Fetches the cell that the actor is in. Returns : result ( tes3cell ) cellX \u2693\ufe0e Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number) cellY \u2693\ufe0e Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number) chameleon \u2693\ufe0e Direct access to the actor's chameleon effect attribute. Returns : result (number) collidingReference \u2693\ufe0e Read-only . The reference that the mobile has collided with this frame. Doesn't include actors and terrain. Returns : result ( tes3reference , nil) combatSession \u2693\ufe0e Read-only . Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Doesn't exist on the player's mobile. Returns : result ( tes3combatSession , nil) conjuration \u2693\ufe0e Read-only . Direct access to the NPC's conjuration skill statistic. Returns : result ( tes3statisticSkill ) corpseHourstamp \u2693\ufe0e This is the time measured in hours from the beginning of the game when the actor died. Returns a UNIX-style timestamp based on in-world simulation time since the start of the era. For living actors this field has value a of 0 . Returns : result (number) currentEnchantedItem \u2693\ufe0e Read-only . The currently equipped enchanted item that the actor will use. Returns : result ( tes3equipmentStack , nil) currentSpell \u2693\ufe0e Read-only . The currently equipped spell that the actor will use. Returns : result ( tes3spell ) destruction \u2693\ufe0e Read-only . Direct access to the NPC's destruction skill statistic. Returns : result ( tes3statisticSkill ) effectAttributes \u2693\ufe0e Read-only . Access to a table of 24 numbers for the actor's effect attributes. In order those are: attackBonus , sanctuary , resistMagicka , resistFire , resistFrost , resistShock , resistCommonDisease , resistBlightDisease , resistCorprus , resistPoison , resistParalysis , chameleon , resistNormalWeapons , waterBreathing , waterWalking , swiftSwim , jump , levitate , shield , sound , silence , blind , paralyze , and invisibility . Each of those can be accessed individually. For example, tes3mobileActor.chameleon . Returns : result (number[]) enchant \u2693\ufe0e Read-only . Direct access to the NPC's enchant skill statistic. Returns : result ( tes3statisticSkill ) encumbrance \u2693\ufe0e Read-only . Access to the actor's encumbrance statistic. Returns : result ( tes3statistic ) endurance \u2693\ufe0e Read-only . Direct access to the actor's endurance attribute statistic. Returns : result ( tes3statistic ) facing \u2693\ufe0e Read-only . The facing of the actor, in radians. It corresponds to the mobile.reference.orientation.z . Facing of 0 corresponds to the in game North, facing of PI corresponds to the game South. It's in clockwise direction. Returns : result (number) fatigue \u2693\ufe0e Read-only . Access to the actor's fatigue statistic. Returns : result ( tes3statistic ) fight \u2693\ufe0e The actor's fight AI value. Returns : result (number) flags \u2693\ufe0e Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (integer) flee \u2693\ufe0e The actor's flee AI value. Returns : result (number) flySpeed \u2693\ufe0e Read-only . The calculated fly movement speed. Returns : result (number) forceJump \u2693\ufe0e Toggle flag for if the NPC jumps. Returns : result (boolean) forceMoveJump \u2693\ufe0e Toggle flag for if the NPC moves and jumps. Returns : result (boolean) forceRun \u2693\ufe0e Toggle flag for if the NPC runs. Returns : result (boolean) forceSneak \u2693\ufe0e Toggle flag for if the NPC sneaks. Returns : result (boolean) friendlyActors \u2693\ufe0e Read-only . A collection of other tes3mobileActor s that this actor considers friendly. Returns : result ( tes3mobileActor []) greetDuration \u2693\ufe0e No description yet available. Returns : result (number) greetTimer \u2693\ufe0e Read-only . No description yet available. Returns : result (number) handToHand \u2693\ufe0e Read-only . Direct access to the NPC's hand to hand skill statistic. Returns : result ( tes3statisticSkill ) hasFreeAction \u2693\ufe0e Read-only . If true, the actor isn't knocked down or knocked out. Returns : result (boolean) health \u2693\ufe0e Read-only . Access to the actor's health statistic. Returns : result ( tes3statistic ) heavyArmor \u2693\ufe0e Read-only . Direct access to the NPC's heavy armor skill statistic. Returns : result ( tes3statisticSkill ) height \u2693\ufe0e The height of the mobile above the ground. Returns : result (number) hello \u2693\ufe0e The actor's hello AI value. Returns : result (number) holdBreathTime \u2693\ufe0e This is the time the actor can stay underwater without taking drowning damage, measured in seconds. It's starting value is fHoldBreathTime (GMST) seconds by default. Once the actor is underwater, this value is decreasing based on the time passed while underwater. The actor will start taking drowning damage once this time is below 0. During drowning this time will have more and more negative values based on the duration of the drowning. Changing this allows manipulating for how long the actor can stay underwater without drowning. Note that player's Breath HUD element won't show values larger than fHoldBreathTime . Returns : result (number) hostileActors \u2693\ufe0e Read-only . A collection of other tes3mobileActor s that this actor considers hostile. Returns : result ( tes3mobileActor []) idleAnim \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is using their idle animation. Returns : result (boolean) illusion \u2693\ufe0e Read-only . Direct access to the NPC's illusion skill statistic. Returns : result ( tes3statisticSkill ) impulseVelocity \u2693\ufe0e A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 ) inCombat \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is in combat. Returns : result (boolean) intelligence \u2693\ufe0e Read-only . Direct access to the actor's intelligence attribute statistic. Returns : result ( tes3statistic ) inventory \u2693\ufe0e Read-only . Access to the items the mobile object has in its inventory. Returns : result ( tes3itemStack []) invisibility \u2693\ufe0e Direct access to the actor's invisibility effect attribute. Returns : result (number) isAffectedByGravity \u2693\ufe0e If true , the mobile is affected by gravity. Does not have any effect on spell projectiles. Returns : result (boolean) isAttackingOrCasting \u2693\ufe0e Read-only . If true , the actor is attacking, casting magic or using a lockpick or probe. Returns : result (boolean) isCrittable \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor can be critically hit. Returns : result (boolean) isDead \u2693\ufe0e Read-only . True if the actor is dead. Returns : result (boolean) isDiseased \u2693\ufe0e Read-only . True if the actor is has a disease effect. This counts normal, blight, and corprus effects. Returns : result (boolean) isFalling \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge. Returns : result (boolean) isFlying \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is flying. Returns : result (boolean) isJumping \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is jumping. Returns : result (boolean) isKnockedDown \u2693\ufe0e Read-only . If true , the actor is knocked down. An actor can be knocked down after being attacked or falling. Returns : result (boolean) isKnockedOut \u2693\ufe0e Read-only . If true , the actor is knocked out. An actor can be knocked out if their fatigue has been reduced below zero. Returns : result (boolean) isMovingBack \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving backwards. Returns : result (boolean) isMovingForward \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving forwards. Returns : result (boolean) isMovingLeft \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving left. Returns : result (boolean) isMovingRight \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving right. Returns : result (boolean) isParalyzed \u2693\ufe0e Read-only . If true , the actor is affected by the magic effect paralyze. Returns : result (boolean) isPlayerDetected \u2693\ufe0e Direct access to the actor's flag showing the player was detected on the last detection check. Returns : result (boolean) isPlayerHidden \u2693\ufe0e Direct access to the actor's flag showing the player was hidden on the last detection check. Returns : result (boolean) isReadyingWeapon \u2693\ufe0e Read-only . If true , the actor is drawing or sheathing their weapon. Returns : result (boolean) isRunning \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is running. Returns : result (boolean) isSneaking \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is sneaking. Returns : result (boolean) isSwimming \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is swimming. Returns : result (boolean) isTurningLeft \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is turning left. Returns : result (boolean) isTurningRight \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is turning right. Returns : result (boolean) isWalking \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is walking. Returns : result (boolean) jump \u2693\ufe0e Direct access to the actor's jump effect attribute. Returns : result (number) lastGroundZ \u2693\ufe0e This has a large negative value if the actor is on the ground. When the actor jumps, this will have a positive value. During jump event this value is still negative. A split second after, it will have the value of the .z coordinate when the actor was on the ground. Beware that this value changes after some amount of time while the actors is in the air. Returns : result (number) levitate \u2693\ufe0e Direct access to the actor's levitate effect attribute. Returns : result (number) lightArmor \u2693\ufe0e Read-only . Direct access to the NPC's light armor skill statistic. Returns : result ( tes3statisticSkill ) longBlade \u2693\ufe0e Read-only . Direct access to the NPC's long blade skill statistic. Returns : result ( tes3statisticSkill ) luck \u2693\ufe0e Read-only . Direct access to the actor's luck attribute statistic. Returns : result ( tes3statistic ) magicka \u2693\ufe0e Read-only . Access to the actor's magicka statistic. Returns : result ( tes3statistic ) magickaMultiplier \u2693\ufe0e Read-only . Access to the actor's magicka multiplier statistic. Returns : result ( tes3statistic ) marksman \u2693\ufe0e Read-only . Direct access to the NPC's marksman skill statistic. Returns : result ( tes3statisticSkill ) mediumArmor \u2693\ufe0e Read-only . Direct access to the NPC's medium armor skill statistic. Returns : result ( tes3statisticSkill ) mercantile \u2693\ufe0e Read-only . Direct access to the NPC's mercantile skill statistic. Returns : result ( tes3statisticSkill ) mobToMobCollision \u2693\ufe0e Allows modifying if this actor will collide with other actors. When true (default), the actor cannot move through other actors. When false , the actor is allowed to move through other actors, and other actors can move through it. May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor. Returns : result (boolean) movementCollision \u2693\ufe0e Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean) movementFlags \u2693\ufe0e Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (integer) moveSpeed \u2693\ufe0e Read-only . The calculated base movement speed. Returns : result (number) mysticism \u2693\ufe0e Read-only . Direct access to the NPC's mysticism skill statistic. Returns : result ( tes3statisticSkill ) nextActionWeight \u2693\ufe0e Read-only . No description yet available. Returns : result (number) object \u2693\ufe0e Read-only . The actor object that maps to this mobile. Returns : result ( tes3npcInstance ) objectType \u2693\ufe0e Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number) paralyze \u2693\ufe0e Direct access to the actor's paralyze effect attribute. Returns : result (number) personality \u2693\ufe0e Read-only . Direct access to the actor's personality attribute statistic. Returns : result ( tes3statistic ) playerDistance \u2693\ufe0e The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number) position \u2693\ufe0e A vector that represents the 3D position of the object. Returns : result ( tes3vector3 ) prevMovementFlags \u2693\ufe0e Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (integer) readiedAmmo \u2693\ufe0e The currently equipped ammo, if any. Returns : result ( tes3equipmentStack , nil) readiedAmmoCount \u2693\ufe0e The number of ammo equipped for the readied ammo. Returns : result (integer) readiedShield \u2693\ufe0e The currently equipped shield, if any. Returns : result ( tes3equipmentStack , nil) readiedWeapon \u2693\ufe0e The currently equipped weapon, if any. Returns : result ( tes3equipmentStack , nil) reference \u2693\ufe0e Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference ) resistBlightDisease \u2693\ufe0e Direct access to the actor's blight disease resistance effect attribute. Returns : result (number) resistCommonDisease \u2693\ufe0e Direct access to the actor's common disease resistance effect attribute. Returns : result (number) resistCorprus \u2693\ufe0e Direct access to the actor's corprus disease resistance effect attribute. Returns : result (number) resistFire \u2693\ufe0e Direct access to the actor's fire resistance effect attribute. Returns : result (number) resistFrost \u2693\ufe0e Direct access to the actor's frost resistance effect attribute. Returns : result (number) resistMagicka \u2693\ufe0e Direct access to the actor's magicka resistance effect attribute. Returns : result (number) resistNormalWeapons \u2693\ufe0e Direct access to the actor's normal weapon resistance effect attribute. Returns : result (number) resistParalysis \u2693\ufe0e Direct access to the actor's paralysis resistance effect attribute. Returns : result (number) resistPoison \u2693\ufe0e Direct access to the actor's poison resistance effect attribute. Returns : result (number) resistShock \u2693\ufe0e Direct access to the actor's shock resistance effect attribute. Returns : result (number) restoration \u2693\ufe0e Read-only . Direct access to the NPC's restoration skill statistic. Returns : result ( tes3statisticSkill ) runSpeed \u2693\ufe0e Read-only . The calculated run movement speed. Returns : result (number) sanctuary \u2693\ufe0e Direct access to the actor's sanctuary effect attribute. Returns : result (number) scanInterval \u2693\ufe0e The time interval in seconds between specific actor AI checks. These checks include checking for hostile actors and engaging combat, as well as checking if the actor should equip a light source if it is too dark. The specified time in seconds will always be increased by one second when checking, therefore a value of 0.0 will actually cause the actor AI checks to occur every second instead of every frame. Setting this to lower values than the default increases the impact on performance. The default value for a newly created actor depends on the total amount of all currently active tes3aiPlanner , meaning the checks will be executed at different intervals for each actor. Returns : result (number) scanTimer \u2693\ufe0e Read-only . The time in seconds since the last time the checks specified in scanInterval were executed. Returns : result (number) security \u2693\ufe0e Read-only . Direct access to the NPC's security skill statistic. Returns : result ( tes3statisticSkill ) shield \u2693\ufe0e Direct access to the actor's shield effect attribute. Returns : result (number) shortBlade \u2693\ufe0e Read-only . Direct access to the NPC's short blade skill statistic. Returns : result ( tes3statisticSkill ) silence \u2693\ufe0e Direct access to the actor's silence effect attribute. Returns : result (number) skills \u2693\ufe0e Read-only . An array-style table with access to the twenty seven NPC skill statistics ( tes3statisticSkill ). Returns : result ( tes3statisticSkill []) sneak \u2693\ufe0e Read-only . Direct access to the NPC's sneak skill statistic. Returns : result ( tes3statisticSkill ) sound \u2693\ufe0e Direct access to the actor's sound effect attribute. Returns : result (number) spear \u2693\ufe0e Read-only . Direct access to the NPC's spear skill statistic. Returns : result ( tes3statisticSkill ) speechcraft \u2693\ufe0e Read-only . Direct access to the NPC's speechcraft skill statistic. Returns : result ( tes3statisticSkill ) speed \u2693\ufe0e Read-only . Direct access to the actor's speed attribute statistic. Returns : result ( tes3statistic ) spellReadied \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor has a spell readied. Returns : result (boolean) strength \u2693\ufe0e Read-only . Direct access to the actor's strength attribute statistic. Returns : result ( tes3statistic ) swiftSwim \u2693\ufe0e Direct access to the actor's swift swim effect attribute. Returns : result (number) swimRunSpeed \u2693\ufe0e Read-only . The calculated swim movement speed while running. Returns : result (number) swimSpeed \u2693\ufe0e Read-only . The calculated swim movement speed. Returns : result (number) talkedTo \u2693\ufe0e Direct access to the actor's flag that shows it was recently talked to. Returns : result (boolean) torchSlot \u2693\ufe0e The currently equipped light. Returns : result ( tes3equipmentStack ) unarmored \u2693\ufe0e Read-only . Direct access to the NPC's unarmored skill statistic. Returns : result ( tes3statisticSkill ) underwater \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is under water. Returns : result (boolean) velocity \u2693\ufe0e A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 ) walkSpeed \u2693\ufe0e Read-only . The calculated walk movement speed. Returns : result (number) waterBreathing \u2693\ufe0e Direct access to the actor's water breathing effect attribute. Returns : result (number) waterWalking \u2693\ufe0e Direct access to the actor's water walking effect attribute. Returns : result (number) weaponDrawn \u2693\ufe0e Read-only . Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again. Returns : result (boolean) weaponReady \u2693\ufe0e A flag for if the actor has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the actor to take out their weapon. Setting it to false will cause the actor to put it away. Returns : result (boolean) werewolf \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor in werewolf form. Returns : result (boolean) width \u2693\ufe0e Read-only . No description yet available. Returns : result (number) willpower \u2693\ufe0e Read-only . Direct access to the actor's willpower attribute statistic. Returns : result ( tes3statistic ) Methods \u2693\ufe0e applyDamage \u2693\ufe0e Damages the actor, with options to control mitigation and difficulty scaling. Invokes the damage and damaged events, with tes3.damageSource.script source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = myObject : applyDamage ({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Default : false . If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. applyDifficulty (boolean): Default : false . If the game difficulty modifier should be applied. Must be used with the playerAttack argument to apply the correct modifier. playerAttack (boolean): Optional . If the attack came from the player. Used for difficulty calculation. doNotChangeHealth (boolean): Default : false . If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit. Returns : result (number) applyFatigueDamage \u2693\ufe0e Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the damageHandToHand and damagedHandToHand events, with tes3.damageSource.script source. Returns the actual fatigue damage done. local result = myObject : applyFatigueDamage ( fatigueDamage , swing , alwaysPlayHitVoice ) Parameters : fatigueDamage (number): The amount of fatigue damage to apply. swing (number): Optional . The attack swing magnitude, range 0-1. Only modifies hit volume. alwaysPlayHitVoice (boolean): Optional . Always play the hit reaction voiceover. Returns : result (number) applyJumpFatigueCost \u2693\ufe0e Reduces the actor's current fatigue by the amount a regular jump would currently cost. myObject : applyJumpFatigueCost () calcEffectiveDamage \u2693\ufe0e Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = myObject : calcEffectiveDamage ({ damage = ..., applyArmor = ..., resistAttribute = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Default : false . If armor should mitigate the incoming damage. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. Returns : result (number) calculateJumpVelocity \u2693\ufe0e Calculates the starting velocity of a jump. local result = myObject : calculateJumpVelocity ({ direction = ... }) Parameters : params (table): Optional . direction ( tes3vector2 ): Optional . The ground direction vector used to calculate the velocity. If not specified, a zero-length direction vector for a regular jump without movement will be used. Returns : result ( tes3vector3 ) doJump \u2693\ufe0e Forces the actor to jump. If velocity or other parameters with non-default values are specified it will be treated as a non-default jump during the jump event. Returns false if the actor is currently unable to jump or the jump has been cancelled, otherwise returns true . local result = myObject : doJump ({ velocity = ..., applyFatigueCost = ..., allowMidairJumping = ... }) Parameters : params (table): Optional . velocity ( tes3vector3 ): Optional . The initial velocity of the jump. If not specified, the velocity of a regular jump without movement will be used. applyFatigueCost (boolean): Default : true . If true , reduces the actor's current fatigue by the amount a regular jump would currently cost. Will not reduce fatigue if false . allowMidairJumping (boolean): Default : false . If true , enables the jump to be performed while already jumping or falling. Does not work during levitation or other methods of flying. Returns : result (boolean) equip \u2693\ufe0e Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return true . local itemEquipped = myObject : equip ({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... }) Parameters : params (table) item ( tes3item , string): The item to equip. itemData ( tes3itemData ): Optional . The item data of the specific item to equip. addItem (boolean): Default : false . If true , the item will be added to the actor's inventory if needed. selectBestCondition (boolean): Default : false . If true , the item in the inventory with the best condition and best charge will be selected. selectWorstCondition (boolean): Default : false . If true , the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools. Returns : itemEquipped (boolean) equipMagic \u2693\ufe0e Equips a spell or enchantment, optionally equipping the enchanted item if needed. Returns false if the item could not be equipped. local result = myObject : equipMagic ({ source = ..., itemData = ..., equipItem = ..., updateGUI = ... }) Parameters : params (table) source ( tes3spell , tes3item , string): The source of the magic to equip. Spells must be castable. Castable spells have a castType of tes3.spellType.spell or tes3.spellType.power . The actor is not required to know this spell. Items must have a castable enchantment. Castable enchantments have a castType of tes3.enchantmentType.onUse or tes3.enchantmentType.castOnce . The actor is not required to have this item in their inventory, unless equipItem is true . itemData ( tes3itemData ): Optional . Only valid if an item has been assigned to source . The item data of the specific item to equip. equipItem (boolean): Default : false . Only valid if an item has been assigned to source . If true , the item assigned to source will be equipped. Requires the actor to have the item in their inventory. If false , itemData must not be nil. updateGUI (boolean): Default : true . Only valid if this actor is the player. If false , the player GUI will not be updated to reflect the change to equipped magic. Returns : result (boolean) getActiveMagicEffects \u2693\ufe0e Fetches a filtered list of the active magic effects on the actor. local result = myObject : getActiveMagicEffects ({ effect = ..., serial = ... }) Parameters : params (table): Optional . effect (integer): Optional . The magic effect ID to search for, from tes3.effect table. serial (integer): Optional . The magic instance serial to search for. Returns : result ( tes3activeMagicEffect []) getBootsWeight \u2693\ufe0e Read-only . Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped. local result = myObject : getBootsWeight () Returns : result (number) getFatigueTerm \u2693\ufe0e Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base)) local result = myObject : getFatigueTerm () Returns : result (number) getPowerUseTimestamp \u2693\ufe0e Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . local timestamp = myObject : getPowerUseTimestamp ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : timestamp (number) getSkillStatistic \u2693\ufe0e Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = myObject : getSkillStatistic ( skillId ) Parameters : skillId (number): The index of the skill statistic to fetch. Maps to values in tes3.skill namespace. Returns : result ( tes3statisticSkill ) getSkillValue \u2693\ufe0e Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = myObject : getSkillValue ( skillId ) Parameters : skillId (number): The index of the skill statistic's value to fetch. Maps to values in tes3.skill namespace. Returns : result (number) getViewToActor \u2693\ufe0e Returns the angle between provided actor and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right. local angle = myObject : getViewToActor ( mobile ) Parameters : mobile ( tes3mobileActor ): The target actor to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees. getViewToPoint \u2693\ufe0e Returns the angle between provided point in space and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right. local angle = myObject : getViewToPoint ( point ) Parameters : point ( tes3vector3 ): The target point to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees. getViewToPointWithFacing \u2693\ufe0e Returns the angle between provided point in space and the actor's current position with provided facing (which effectively overrides the actor's facing used in other getViewTo methods). The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the provided facing angle with the origin in actor's position. local angle = myObject : getViewToPointWithFacing ( facing , point ) Parameters : facing (number): The facing angle in radians. The values should be in [0, PI] interval. point ( tes3vector3 ): The target point to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees. getWeaponSpeed \u2693\ufe0e Fetches the weapon speed of the actor's currently equipped weapon, or 1.0 if no weapon is equipped. local result = myObject : getWeaponSpeed () Returns : result (number) hasUsedPower \u2693\ufe0e Check if a power has been used and is recharging. local result = myObject : hasUsedPower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean) isAffectedByObject \u2693\ufe0e Determines if the actor is currently being affected by a given alchemy, enchantment, or spell. local result = myObject : isAffectedByObject ( object ) Parameters : object ( tes3alchemy , tes3enchantment , tes3spell ): The magic to check for. Returns : result (boolean) kill \u2693\ufe0e Kills the actor by setting its health to 0. myObject : kill () rechargePower \u2693\ufe0e Makes a power immediately available for casting again. local result = myObject : rechargePower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean) setPowerUseTimestamp \u2693\ufe0e Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. myObject : setPowerUseTimestamp ( power , timestamp ) Parameters : power ( tes3spell ): The spell object for the power. timestamp (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . startCombat \u2693\ufe0e Forces the actor into combat with another actor. myObject : startCombat ( target ) Parameters : target ( tes3mobileActor ) startDialogue \u2693\ufe0e Starts dialogue with this actor for the player. myObject : startDialogue () stopCombat \u2693\ufe0e Ends combat for the actor. myObject : stopCombat ( force ) Parameters : force (boolean): If false , the function won't stop combat if the actor has other valid hostile targets. unequip \u2693\ufe0e Unequips one or more items from the actor. local itemUnequipped = myObject : unequip ({ item = ..., type = ..., armorSlot = ..., clothingSlot = ... }) Parameters : params (table) item ( tes3item , string): Optional . The item to unequip. type (number): Optional . The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from tes3.objectType can be passed here. armorSlot (number): Optional . The armor slot to unequip. Maps to values in tes3.armorSlot namespace. clothingSlot (number): Optional . The clothing slot to unequip. Maps to values in tes3.clothingSlot namespace Returns : itemUnequipped (boolean) unequipMagic \u2693\ufe0e Unequips the currently equipped magic, optionally unequipping the enchanted item if needed. myObject : unequipMagic ({ unequipItem = ..., updateGUI = ... }) Parameters : params (table): Optional . unequipItem (boolean): Default : false . Only valid if the currently equipped magic is from an equippable item enchantment. If true , the item containing the enchantment will be unequipped. updateGUI (boolean): Default : true . Only valid if this actor is the player. If false , the player GUI will not be updated to reflect the change to equipped magic. updateDerivedStatistics \u2693\ufe0e Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use tes3.modStatistic() . myObject : updateDerivedStatistics ( attribute ) Parameters : attribute ( tes3statistic ): Optional . Limits the update to statistics derived from this attribute. e.g. mobile:updateDerivedStatistics(mobile.strength) . If not present, all derived statistics will be updated. updateOpacity \u2693\ufe0e Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects. myObject : updateOpacity ()","title":"tes3mobileNPC"},{"location":"types/tes3mobileNPC/#tes3mobilenpc","text":"A mobile object for an NPC. This type inherits the following: tes3mobileActor , tes3mobileObject","title":"tes3mobileNPC"},{"location":"types/tes3mobileNPC/#properties","text":"","title":"Properties"},{"location":"types/tes3mobileNPC/#acrobatics","text":"Read-only . Direct access to the NPC's acrobatics skill statistic. Returns : result ( tes3statisticSkill )","title":"acrobatics"},{"location":"types/tes3mobileNPC/#actionbeforecombat","text":"Read-only . Action data stored before the actor entered combat. Returns : result ( tes3actionData )","title":"actionBeforeCombat"},{"location":"types/tes3mobileNPC/#actiondata","text":"Read-only . Current action data. Pre-combat action data is stored in the actionBeforeCombat property. Returns : result ( tes3actionData )","title":"actionData"},{"location":"types/tes3mobileNPC/#activeai","text":"Friendly access to the actor's flag that controls if AI is active. Returns : result (boolean)","title":"activeAI"},{"location":"types/tes3mobileNPC/#activemagiceffectlist","text":"Read-only . The active magic effects on the actor, from which all others can be accessed. A table with tes3activeMagicEffect items. Returns : result ( tes3activeMagicEffect [])","title":"activeMagicEffectList"},{"location":"types/tes3mobileNPC/#actortype","text":"Read-only . The type of the mobile actor. Maps to values in tes3.actorType namespace. Returns : result (number)","title":"actorType"},{"location":"types/tes3mobileNPC/#agility","text":"Read-only . Direct access to the actor's agility attribute statistic. Returns : result ( tes3statistic )","title":"agility"},{"location":"types/tes3mobileNPC/#aiplanner","text":"Read-only . Access to the mobile's AI planner and AI package information. Doesn't exist on the player mobile. Returns : result ( tes3aiPlanner , nil)","title":"aiPlanner"},{"location":"types/tes3mobileNPC/#alarm","text":"The actor's alarm AI value. Returns : result (number)","title":"alarm"},{"location":"types/tes3mobileNPC/#alchemy","text":"Read-only . Direct access to the NPC's alchemy skill statistic. Returns : result ( tes3statisticSkill )","title":"alchemy"},{"location":"types/tes3mobileNPC/#alteration","text":"Read-only . Direct access to the NPC's alteration skill statistic. Returns : result ( tes3statisticSkill )","title":"alteration"},{"location":"types/tes3mobileNPC/#animationcontroller","text":"Read-only . No description yet available. Returns : result ( tes3actorAnimationController )","title":"animationController"},{"location":"types/tes3mobileNPC/#armorer","text":"Read-only . Direct access to the NPC's armorer skill statistic. Returns : result ( tes3statisticSkill )","title":"armorer"},{"location":"types/tes3mobileNPC/#armorrating","text":"Read-only . The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the applyDamage function. Armour mitigation calculation: x = damage / (damage + target.armorRating) damage *= max(fCombatArmorMinMult, x) if damage < 1 then damage = 1 end Returns : result (number)","title":"armorRating"},{"location":"types/tes3mobileNPC/#athletics","text":"Read-only . Direct access to the NPC's athletics skill statistic. Returns : result ( tes3statisticSkill )","title":"athletics"},{"location":"types/tes3mobileNPC/#attackbonus","text":"Direct access to the actor's attack bonus effect attribute. Returns : result (number)","title":"attackBonus"},{"location":"types/tes3mobileNPC/#attacked","text":"Read-only . Friendly access to the actor's flag that controls if the actor has been attacked. Returns : result (boolean)","title":"attacked"},{"location":"types/tes3mobileNPC/#attributes","text":"Read-only . Access to a table of 8 tes3statistic objects for the actor's attributes. Returns : result ( tes3statistic [])","title":"attributes"},{"location":"types/tes3mobileNPC/#axe","text":"Read-only . Direct access to the NPC's axe skill statistic. Returns : result ( tes3statisticSkill )","title":"axe"},{"location":"types/tes3mobileNPC/#bartergold","text":"The current amount of gold that the actor has access to for bartering. Returns : result (number)","title":"barterGold"},{"location":"types/tes3mobileNPC/#blind","text":"Direct access to the actor's blind effect attribute. Returns : result (number)","title":"blind"},{"location":"types/tes3mobileNPC/#block","text":"Read-only . Direct access to the NPC's block skill statistic. Returns : result ( tes3statisticSkill )","title":"block"},{"location":"types/tes3mobileNPC/#bluntweapon","text":"Read-only . Direct access to the NPC's blunt weapon skill statistic. Returns : result ( tes3statisticSkill )","title":"bluntWeapon"},{"location":"types/tes3mobileNPC/#boundsize","text":"A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 )","title":"boundSize"},{"location":"types/tes3mobileNPC/#boundsize2d","text":"A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 )","title":"boundSize2D"},{"location":"types/tes3mobileNPC/#canact","text":"Read-only . If true , the actor is able to freely execute actions like attacking or casting magic. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, drawing/sheathing their weapon, attacking, casting magic or using a lockpick or probe. Returns : result (boolean)","title":"canAct"},{"location":"types/tes3mobileNPC/#canjump","text":"Read-only . If true , the actor is currently able to jump. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, jumping, falling, swimming or flying. Returns : result (boolean)","title":"canJump"},{"location":"types/tes3mobileNPC/#canjumpmidair","text":"Read-only . If true , the actor is currently able to jump midair. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, swimming or flying. For more information on midair jumping see tes3mobileActor:doJump() . Returns : result (boolean)","title":"canJumpMidair"},{"location":"types/tes3mobileNPC/#cell","text":"Read-only . Fetches the cell that the actor is in. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3mobileNPC/#cellx","text":"Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellX"},{"location":"types/tes3mobileNPC/#celly","text":"Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellY"},{"location":"types/tes3mobileNPC/#chameleon","text":"Direct access to the actor's chameleon effect attribute. Returns : result (number)","title":"chameleon"},{"location":"types/tes3mobileNPC/#collidingreference","text":"Read-only . The reference that the mobile has collided with this frame. Doesn't include actors and terrain. Returns : result ( tes3reference , nil)","title":"collidingReference"},{"location":"types/tes3mobileNPC/#combatsession","text":"Read-only . Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Doesn't exist on the player's mobile. Returns : result ( tes3combatSession , nil)","title":"combatSession"},{"location":"types/tes3mobileNPC/#conjuration","text":"Read-only . Direct access to the NPC's conjuration skill statistic. Returns : result ( tes3statisticSkill )","title":"conjuration"},{"location":"types/tes3mobileNPC/#corpsehourstamp","text":"This is the time measured in hours from the beginning of the game when the actor died. Returns a UNIX-style timestamp based on in-world simulation time since the start of the era. For living actors this field has value a of 0 . Returns : result (number)","title":"corpseHourstamp"},{"location":"types/tes3mobileNPC/#currentenchanteditem","text":"Read-only . The currently equipped enchanted item that the actor will use. Returns : result ( tes3equipmentStack , nil)","title":"currentEnchantedItem"},{"location":"types/tes3mobileNPC/#currentspell","text":"Read-only . The currently equipped spell that the actor will use. Returns : result ( tes3spell )","title":"currentSpell"},{"location":"types/tes3mobileNPC/#destruction","text":"Read-only . Direct access to the NPC's destruction skill statistic. Returns : result ( tes3statisticSkill )","title":"destruction"},{"location":"types/tes3mobileNPC/#effectattributes","text":"Read-only . Access to a table of 24 numbers for the actor's effect attributes. In order those are: attackBonus , sanctuary , resistMagicka , resistFire , resistFrost , resistShock , resistCommonDisease , resistBlightDisease , resistCorprus , resistPoison , resistParalysis , chameleon , resistNormalWeapons , waterBreathing , waterWalking , swiftSwim , jump , levitate , shield , sound , silence , blind , paralyze , and invisibility . Each of those can be accessed individually. For example, tes3mobileActor.chameleon . Returns : result (number[])","title":"effectAttributes"},{"location":"types/tes3mobileNPC/#enchant","text":"Read-only . Direct access to the NPC's enchant skill statistic. Returns : result ( tes3statisticSkill )","title":"enchant"},{"location":"types/tes3mobileNPC/#encumbrance","text":"Read-only . Access to the actor's encumbrance statistic. Returns : result ( tes3statistic )","title":"encumbrance"},{"location":"types/tes3mobileNPC/#endurance","text":"Read-only . Direct access to the actor's endurance attribute statistic. Returns : result ( tes3statistic )","title":"endurance"},{"location":"types/tes3mobileNPC/#facing","text":"Read-only . The facing of the actor, in radians. It corresponds to the mobile.reference.orientation.z . Facing of 0 corresponds to the in game North, facing of PI corresponds to the game South. It's in clockwise direction. Returns : result (number)","title":"facing"},{"location":"types/tes3mobileNPC/#fatigue","text":"Read-only . Access to the actor's fatigue statistic. Returns : result ( tes3statistic )","title":"fatigue"},{"location":"types/tes3mobileNPC/#fight","text":"The actor's fight AI value. Returns : result (number)","title":"fight"},{"location":"types/tes3mobileNPC/#flags","text":"Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"flags"},{"location":"types/tes3mobileNPC/#flee","text":"The actor's flee AI value. Returns : result (number)","title":"flee"},{"location":"types/tes3mobileNPC/#flyspeed","text":"Read-only . The calculated fly movement speed. Returns : result (number)","title":"flySpeed"},{"location":"types/tes3mobileNPC/#forcejump","text":"Toggle flag for if the NPC jumps. Returns : result (boolean)","title":"forceJump"},{"location":"types/tes3mobileNPC/#forcemovejump","text":"Toggle flag for if the NPC moves and jumps. Returns : result (boolean)","title":"forceMoveJump"},{"location":"types/tes3mobileNPC/#forcerun","text":"Toggle flag for if the NPC runs. Returns : result (boolean)","title":"forceRun"},{"location":"types/tes3mobileNPC/#forcesneak","text":"Toggle flag for if the NPC sneaks. Returns : result (boolean)","title":"forceSneak"},{"location":"types/tes3mobileNPC/#friendlyactors","text":"Read-only . A collection of other tes3mobileActor s that this actor considers friendly. Returns : result ( tes3mobileActor [])","title":"friendlyActors"},{"location":"types/tes3mobileNPC/#greetduration","text":"No description yet available. Returns : result (number)","title":"greetDuration"},{"location":"types/tes3mobileNPC/#greettimer","text":"Read-only . No description yet available. Returns : result (number)","title":"greetTimer"},{"location":"types/tes3mobileNPC/#handtohand","text":"Read-only . Direct access to the NPC's hand to hand skill statistic. Returns : result ( tes3statisticSkill )","title":"handToHand"},{"location":"types/tes3mobileNPC/#hasfreeaction","text":"Read-only . If true, the actor isn't knocked down or knocked out. Returns : result (boolean)","title":"hasFreeAction"},{"location":"types/tes3mobileNPC/#health","text":"Read-only . Access to the actor's health statistic. Returns : result ( tes3statistic )","title":"health"},{"location":"types/tes3mobileNPC/#heavyarmor","text":"Read-only . Direct access to the NPC's heavy armor skill statistic. Returns : result ( tes3statisticSkill )","title":"heavyArmor"},{"location":"types/tes3mobileNPC/#height","text":"The height of the mobile above the ground. Returns : result (number)","title":"height"},{"location":"types/tes3mobileNPC/#hello","text":"The actor's hello AI value. Returns : result (number)","title":"hello"},{"location":"types/tes3mobileNPC/#holdbreathtime","text":"This is the time the actor can stay underwater without taking drowning damage, measured in seconds. It's starting value is fHoldBreathTime (GMST) seconds by default. Once the actor is underwater, this value is decreasing based on the time passed while underwater. The actor will start taking drowning damage once this time is below 0. During drowning this time will have more and more negative values based on the duration of the drowning. Changing this allows manipulating for how long the actor can stay underwater without drowning. Note that player's Breath HUD element won't show values larger than fHoldBreathTime . Returns : result (number)","title":"holdBreathTime"},{"location":"types/tes3mobileNPC/#hostileactors","text":"Read-only . A collection of other tes3mobileActor s that this actor considers hostile. Returns : result ( tes3mobileActor [])","title":"hostileActors"},{"location":"types/tes3mobileNPC/#idleanim","text":"Read-only . Friendly access to the actor's flag that controls if the actor is using their idle animation. Returns : result (boolean)","title":"idleAnim"},{"location":"types/tes3mobileNPC/#illusion","text":"Read-only . Direct access to the NPC's illusion skill statistic. Returns : result ( tes3statisticSkill )","title":"illusion"},{"location":"types/tes3mobileNPC/#impulsevelocity","text":"A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 )","title":"impulseVelocity"},{"location":"types/tes3mobileNPC/#incombat","text":"Read-only . Friendly access to the actor's flag that controls if the actor is in combat. Returns : result (boolean)","title":"inCombat"},{"location":"types/tes3mobileNPC/#intelligence","text":"Read-only . Direct access to the actor's intelligence attribute statistic. Returns : result ( tes3statistic )","title":"intelligence"},{"location":"types/tes3mobileNPC/#inventory","text":"Read-only . Access to the items the mobile object has in its inventory. Returns : result ( tes3itemStack [])","title":"inventory"},{"location":"types/tes3mobileNPC/#invisibility","text":"Direct access to the actor's invisibility effect attribute. Returns : result (number)","title":"invisibility"},{"location":"types/tes3mobileNPC/#isaffectedbygravity","text":"If true , the mobile is affected by gravity. Does not have any effect on spell projectiles. Returns : result (boolean)","title":"isAffectedByGravity"},{"location":"types/tes3mobileNPC/#isattackingorcasting","text":"Read-only . If true , the actor is attacking, casting magic or using a lockpick or probe. Returns : result (boolean)","title":"isAttackingOrCasting"},{"location":"types/tes3mobileNPC/#iscrittable","text":"Read-only . Friendly access to the actor's flag that controls if the actor can be critically hit. Returns : result (boolean)","title":"isCrittable"},{"location":"types/tes3mobileNPC/#isdead","text":"Read-only . True if the actor is dead. Returns : result (boolean)","title":"isDead"},{"location":"types/tes3mobileNPC/#isdiseased","text":"Read-only . True if the actor is has a disease effect. This counts normal, blight, and corprus effects. Returns : result (boolean)","title":"isDiseased"},{"location":"types/tes3mobileNPC/#isfalling","text":"Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge. Returns : result (boolean)","title":"isFalling"},{"location":"types/tes3mobileNPC/#isflying","text":"Direct access to the actor's current movement flags, showing if the actor is flying. Returns : result (boolean)","title":"isFlying"},{"location":"types/tes3mobileNPC/#isjumping","text":"Direct access to the actor's current movement flags, showing if the actor is jumping. Returns : result (boolean)","title":"isJumping"},{"location":"types/tes3mobileNPC/#isknockeddown","text":"Read-only . If true , the actor is knocked down. An actor can be knocked down after being attacked or falling. Returns : result (boolean)","title":"isKnockedDown"},{"location":"types/tes3mobileNPC/#isknockedout","text":"Read-only . If true , the actor is knocked out. An actor can be knocked out if their fatigue has been reduced below zero. Returns : result (boolean)","title":"isKnockedOut"},{"location":"types/tes3mobileNPC/#ismovingback","text":"Direct access to the actor's current movement flags, showing if the actor is moving backwards. Returns : result (boolean)","title":"isMovingBack"},{"location":"types/tes3mobileNPC/#ismovingforward","text":"Direct access to the actor's current movement flags, showing if the actor is moving forwards. Returns : result (boolean)","title":"isMovingForward"},{"location":"types/tes3mobileNPC/#ismovingleft","text":"Direct access to the actor's current movement flags, showing if the actor is moving left. Returns : result (boolean)","title":"isMovingLeft"},{"location":"types/tes3mobileNPC/#ismovingright","text":"Direct access to the actor's current movement flags, showing if the actor is moving right. Returns : result (boolean)","title":"isMovingRight"},{"location":"types/tes3mobileNPC/#isparalyzed","text":"Read-only . If true , the actor is affected by the magic effect paralyze. Returns : result (boolean)","title":"isParalyzed"},{"location":"types/tes3mobileNPC/#isplayerdetected","text":"Direct access to the actor's flag showing the player was detected on the last detection check. Returns : result (boolean)","title":"isPlayerDetected"},{"location":"types/tes3mobileNPC/#isplayerhidden","text":"Direct access to the actor's flag showing the player was hidden on the last detection check. Returns : result (boolean)","title":"isPlayerHidden"},{"location":"types/tes3mobileNPC/#isreadyingweapon","text":"Read-only . If true , the actor is drawing or sheathing their weapon. Returns : result (boolean)","title":"isReadyingWeapon"},{"location":"types/tes3mobileNPC/#isrunning","text":"Direct access to the actor's current movement flags, showing if the actor is running. Returns : result (boolean)","title":"isRunning"},{"location":"types/tes3mobileNPC/#issneaking","text":"Direct access to the actor's current movement flags, showing if the actor is sneaking. Returns : result (boolean)","title":"isSneaking"},{"location":"types/tes3mobileNPC/#isswimming","text":"Direct access to the actor's current movement flags, showing if the actor is swimming. Returns : result (boolean)","title":"isSwimming"},{"location":"types/tes3mobileNPC/#isturningleft","text":"Direct access to the actor's current movement flags, showing if the actor is turning left. Returns : result (boolean)","title":"isTurningLeft"},{"location":"types/tes3mobileNPC/#isturningright","text":"Direct access to the actor's current movement flags, showing if the actor is turning right. Returns : result (boolean)","title":"isTurningRight"},{"location":"types/tes3mobileNPC/#iswalking","text":"Direct access to the actor's current movement flags, showing if the actor is walking. Returns : result (boolean)","title":"isWalking"},{"location":"types/tes3mobileNPC/#jump","text":"Direct access to the actor's jump effect attribute. Returns : result (number)","title":"jump"},{"location":"types/tes3mobileNPC/#lastgroundz","text":"This has a large negative value if the actor is on the ground. When the actor jumps, this will have a positive value. During jump event this value is still negative. A split second after, it will have the value of the .z coordinate when the actor was on the ground. Beware that this value changes after some amount of time while the actors is in the air. Returns : result (number)","title":"lastGroundZ"},{"location":"types/tes3mobileNPC/#levitate","text":"Direct access to the actor's levitate effect attribute. Returns : result (number)","title":"levitate"},{"location":"types/tes3mobileNPC/#lightarmor","text":"Read-only . Direct access to the NPC's light armor skill statistic. Returns : result ( tes3statisticSkill )","title":"lightArmor"},{"location":"types/tes3mobileNPC/#longblade","text":"Read-only . Direct access to the NPC's long blade skill statistic. Returns : result ( tes3statisticSkill )","title":"longBlade"},{"location":"types/tes3mobileNPC/#luck","text":"Read-only . Direct access to the actor's luck attribute statistic. Returns : result ( tes3statistic )","title":"luck"},{"location":"types/tes3mobileNPC/#magicka","text":"Read-only . Access to the actor's magicka statistic. Returns : result ( tes3statistic )","title":"magicka"},{"location":"types/tes3mobileNPC/#magickamultiplier","text":"Read-only . Access to the actor's magicka multiplier statistic. Returns : result ( tes3statistic )","title":"magickaMultiplier"},{"location":"types/tes3mobileNPC/#marksman","text":"Read-only . Direct access to the NPC's marksman skill statistic. Returns : result ( tes3statisticSkill )","title":"marksman"},{"location":"types/tes3mobileNPC/#mediumarmor","text":"Read-only . Direct access to the NPC's medium armor skill statistic. Returns : result ( tes3statisticSkill )","title":"mediumArmor"},{"location":"types/tes3mobileNPC/#mercantile","text":"Read-only . Direct access to the NPC's mercantile skill statistic. Returns : result ( tes3statisticSkill )","title":"mercantile"},{"location":"types/tes3mobileNPC/#mobtomobcollision","text":"Allows modifying if this actor will collide with other actors. When true (default), the actor cannot move through other actors. When false , the actor is allowed to move through other actors, and other actors can move through it. May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor. Returns : result (boolean)","title":"mobToMobCollision"},{"location":"types/tes3mobileNPC/#movementcollision","text":"Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean)","title":"movementCollision"},{"location":"types/tes3mobileNPC/#movementflags","text":"Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"movementFlags"},{"location":"types/tes3mobileNPC/#movespeed","text":"Read-only . The calculated base movement speed. Returns : result (number)","title":"moveSpeed"},{"location":"types/tes3mobileNPC/#mysticism","text":"Read-only . Direct access to the NPC's mysticism skill statistic. Returns : result ( tes3statisticSkill )","title":"mysticism"},{"location":"types/tes3mobileNPC/#nextactionweight","text":"Read-only . No description yet available. Returns : result (number)","title":"nextActionWeight"},{"location":"types/tes3mobileNPC/#object","text":"Read-only . The actor object that maps to this mobile. Returns : result ( tes3npcInstance )","title":"object"},{"location":"types/tes3mobileNPC/#objecttype","text":"Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number)","title":"objectType"},{"location":"types/tes3mobileNPC/#paralyze","text":"Direct access to the actor's paralyze effect attribute. Returns : result (number)","title":"paralyze"},{"location":"types/tes3mobileNPC/#personality","text":"Read-only . Direct access to the actor's personality attribute statistic. Returns : result ( tes3statistic )","title":"personality"},{"location":"types/tes3mobileNPC/#playerdistance","text":"The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number)","title":"playerDistance"},{"location":"types/tes3mobileNPC/#position","text":"A vector that represents the 3D position of the object. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3mobileNPC/#prevmovementflags","text":"Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"prevMovementFlags"},{"location":"types/tes3mobileNPC/#readiedammo","text":"The currently equipped ammo, if any. Returns : result ( tes3equipmentStack , nil)","title":"readiedAmmo"},{"location":"types/tes3mobileNPC/#readiedammocount","text":"The number of ammo equipped for the readied ammo. Returns : result (integer)","title":"readiedAmmoCount"},{"location":"types/tes3mobileNPC/#readiedshield","text":"The currently equipped shield, if any. Returns : result ( tes3equipmentStack , nil)","title":"readiedShield"},{"location":"types/tes3mobileNPC/#readiedweapon","text":"The currently equipped weapon, if any. Returns : result ( tes3equipmentStack , nil)","title":"readiedWeapon"},{"location":"types/tes3mobileNPC/#reference","text":"Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3mobileNPC/#resistblightdisease","text":"Direct access to the actor's blight disease resistance effect attribute. Returns : result (number)","title":"resistBlightDisease"},{"location":"types/tes3mobileNPC/#resistcommondisease","text":"Direct access to the actor's common disease resistance effect attribute. Returns : result (number)","title":"resistCommonDisease"},{"location":"types/tes3mobileNPC/#resistcorprus","text":"Direct access to the actor's corprus disease resistance effect attribute. Returns : result (number)","title":"resistCorprus"},{"location":"types/tes3mobileNPC/#resistfire","text":"Direct access to the actor's fire resistance effect attribute. Returns : result (number)","title":"resistFire"},{"location":"types/tes3mobileNPC/#resistfrost","text":"Direct access to the actor's frost resistance effect attribute. Returns : result (number)","title":"resistFrost"},{"location":"types/tes3mobileNPC/#resistmagicka","text":"Direct access to the actor's magicka resistance effect attribute. Returns : result (number)","title":"resistMagicka"},{"location":"types/tes3mobileNPC/#resistnormalweapons","text":"Direct access to the actor's normal weapon resistance effect attribute. Returns : result (number)","title":"resistNormalWeapons"},{"location":"types/tes3mobileNPC/#resistparalysis","text":"Direct access to the actor's paralysis resistance effect attribute. Returns : result (number)","title":"resistParalysis"},{"location":"types/tes3mobileNPC/#resistpoison","text":"Direct access to the actor's poison resistance effect attribute. Returns : result (number)","title":"resistPoison"},{"location":"types/tes3mobileNPC/#resistshock","text":"Direct access to the actor's shock resistance effect attribute. Returns : result (number)","title":"resistShock"},{"location":"types/tes3mobileNPC/#restoration","text":"Read-only . Direct access to the NPC's restoration skill statistic. Returns : result ( tes3statisticSkill )","title":"restoration"},{"location":"types/tes3mobileNPC/#runspeed","text":"Read-only . The calculated run movement speed. Returns : result (number)","title":"runSpeed"},{"location":"types/tes3mobileNPC/#sanctuary","text":"Direct access to the actor's sanctuary effect attribute. Returns : result (number)","title":"sanctuary"},{"location":"types/tes3mobileNPC/#scaninterval","text":"The time interval in seconds between specific actor AI checks. These checks include checking for hostile actors and engaging combat, as well as checking if the actor should equip a light source if it is too dark. The specified time in seconds will always be increased by one second when checking, therefore a value of 0.0 will actually cause the actor AI checks to occur every second instead of every frame. Setting this to lower values than the default increases the impact on performance. The default value for a newly created actor depends on the total amount of all currently active tes3aiPlanner , meaning the checks will be executed at different intervals for each actor. Returns : result (number)","title":"scanInterval"},{"location":"types/tes3mobileNPC/#scantimer","text":"Read-only . The time in seconds since the last time the checks specified in scanInterval were executed. Returns : result (number)","title":"scanTimer"},{"location":"types/tes3mobileNPC/#security","text":"Read-only . Direct access to the NPC's security skill statistic. Returns : result ( tes3statisticSkill )","title":"security"},{"location":"types/tes3mobileNPC/#shield","text":"Direct access to the actor's shield effect attribute. Returns : result (number)","title":"shield"},{"location":"types/tes3mobileNPC/#shortblade","text":"Read-only . Direct access to the NPC's short blade skill statistic. Returns : result ( tes3statisticSkill )","title":"shortBlade"},{"location":"types/tes3mobileNPC/#silence","text":"Direct access to the actor's silence effect attribute. Returns : result (number)","title":"silence"},{"location":"types/tes3mobileNPC/#skills","text":"Read-only . An array-style table with access to the twenty seven NPC skill statistics ( tes3statisticSkill ). Returns : result ( tes3statisticSkill [])","title":"skills"},{"location":"types/tes3mobileNPC/#sneak","text":"Read-only . Direct access to the NPC's sneak skill statistic. Returns : result ( tes3statisticSkill )","title":"sneak"},{"location":"types/tes3mobileNPC/#sound","text":"Direct access to the actor's sound effect attribute. Returns : result (number)","title":"sound"},{"location":"types/tes3mobileNPC/#spear","text":"Read-only . Direct access to the NPC's spear skill statistic. Returns : result ( tes3statisticSkill )","title":"spear"},{"location":"types/tes3mobileNPC/#speechcraft","text":"Read-only . Direct access to the NPC's speechcraft skill statistic. Returns : result ( tes3statisticSkill )","title":"speechcraft"},{"location":"types/tes3mobileNPC/#speed","text":"Read-only . Direct access to the actor's speed attribute statistic. Returns : result ( tes3statistic )","title":"speed"},{"location":"types/tes3mobileNPC/#spellreadied","text":"Read-only . Friendly access to the actor's flag that controls if the actor has a spell readied. Returns : result (boolean)","title":"spellReadied"},{"location":"types/tes3mobileNPC/#strength","text":"Read-only . Direct access to the actor's strength attribute statistic. Returns : result ( tes3statistic )","title":"strength"},{"location":"types/tes3mobileNPC/#swiftswim","text":"Direct access to the actor's swift swim effect attribute. Returns : result (number)","title":"swiftSwim"},{"location":"types/tes3mobileNPC/#swimrunspeed","text":"Read-only . The calculated swim movement speed while running. Returns : result (number)","title":"swimRunSpeed"},{"location":"types/tes3mobileNPC/#swimspeed","text":"Read-only . The calculated swim movement speed. Returns : result (number)","title":"swimSpeed"},{"location":"types/tes3mobileNPC/#talkedto","text":"Direct access to the actor's flag that shows it was recently talked to. Returns : result (boolean)","title":"talkedTo"},{"location":"types/tes3mobileNPC/#torchslot","text":"The currently equipped light. Returns : result ( tes3equipmentStack )","title":"torchSlot"},{"location":"types/tes3mobileNPC/#unarmored","text":"Read-only . Direct access to the NPC's unarmored skill statistic. Returns : result ( tes3statisticSkill )","title":"unarmored"},{"location":"types/tes3mobileNPC/#underwater","text":"Read-only . Friendly access to the actor's flag that controls if the actor is under water. Returns : result (boolean)","title":"underwater"},{"location":"types/tes3mobileNPC/#velocity","text":"A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/tes3mobileNPC/#walkspeed","text":"Read-only . The calculated walk movement speed. Returns : result (number)","title":"walkSpeed"},{"location":"types/tes3mobileNPC/#waterbreathing","text":"Direct access to the actor's water breathing effect attribute. Returns : result (number)","title":"waterBreathing"},{"location":"types/tes3mobileNPC/#waterwalking","text":"Direct access to the actor's water walking effect attribute. Returns : result (number)","title":"waterWalking"},{"location":"types/tes3mobileNPC/#weapondrawn","text":"Read-only . Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again. Returns : result (boolean)","title":"weaponDrawn"},{"location":"types/tes3mobileNPC/#weaponready","text":"A flag for if the actor has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the actor to take out their weapon. Setting it to false will cause the actor to put it away. Returns : result (boolean)","title":"weaponReady"},{"location":"types/tes3mobileNPC/#werewolf","text":"Read-only . Friendly access to the actor's flag that controls if the actor in werewolf form. Returns : result (boolean)","title":"werewolf"},{"location":"types/tes3mobileNPC/#width","text":"Read-only . No description yet available. Returns : result (number)","title":"width"},{"location":"types/tes3mobileNPC/#willpower","text":"Read-only . Direct access to the actor's willpower attribute statistic. Returns : result ( tes3statistic )","title":"willpower"},{"location":"types/tes3mobileNPC/#methods","text":"","title":"Methods"},{"location":"types/tes3mobileNPC/#applydamage","text":"Damages the actor, with options to control mitigation and difficulty scaling. Invokes the damage and damaged events, with tes3.damageSource.script source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = myObject : applyDamage ({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Default : false . If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. applyDifficulty (boolean): Default : false . If the game difficulty modifier should be applied. Must be used with the playerAttack argument to apply the correct modifier. playerAttack (boolean): Optional . If the attack came from the player. Used for difficulty calculation. doNotChangeHealth (boolean): Default : false . If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit. Returns : result (number)","title":"applyDamage"},{"location":"types/tes3mobileNPC/#applyfatiguedamage","text":"Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the damageHandToHand and damagedHandToHand events, with tes3.damageSource.script source. Returns the actual fatigue damage done. local result = myObject : applyFatigueDamage ( fatigueDamage , swing , alwaysPlayHitVoice ) Parameters : fatigueDamage (number): The amount of fatigue damage to apply. swing (number): Optional . The attack swing magnitude, range 0-1. Only modifies hit volume. alwaysPlayHitVoice (boolean): Optional . Always play the hit reaction voiceover. Returns : result (number)","title":"applyFatigueDamage"},{"location":"types/tes3mobileNPC/#applyjumpfatiguecost","text":"Reduces the actor's current fatigue by the amount a regular jump would currently cost. myObject : applyJumpFatigueCost ()","title":"applyJumpFatigueCost"},{"location":"types/tes3mobileNPC/#calceffectivedamage","text":"Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = myObject : calcEffectiveDamage ({ damage = ..., applyArmor = ..., resistAttribute = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Default : false . If armor should mitigate the incoming damage. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. Returns : result (number)","title":"calcEffectiveDamage"},{"location":"types/tes3mobileNPC/#calculatejumpvelocity","text":"Calculates the starting velocity of a jump. local result = myObject : calculateJumpVelocity ({ direction = ... }) Parameters : params (table): Optional . direction ( tes3vector2 ): Optional . The ground direction vector used to calculate the velocity. If not specified, a zero-length direction vector for a regular jump without movement will be used. Returns : result ( tes3vector3 )","title":"calculateJumpVelocity"},{"location":"types/tes3mobileNPC/#dojump","text":"Forces the actor to jump. If velocity or other parameters with non-default values are specified it will be treated as a non-default jump during the jump event. Returns false if the actor is currently unable to jump or the jump has been cancelled, otherwise returns true . local result = myObject : doJump ({ velocity = ..., applyFatigueCost = ..., allowMidairJumping = ... }) Parameters : params (table): Optional . velocity ( tes3vector3 ): Optional . The initial velocity of the jump. If not specified, the velocity of a regular jump without movement will be used. applyFatigueCost (boolean): Default : true . If true , reduces the actor's current fatigue by the amount a regular jump would currently cost. Will not reduce fatigue if false . allowMidairJumping (boolean): Default : false . If true , enables the jump to be performed while already jumping or falling. Does not work during levitation or other methods of flying. Returns : result (boolean)","title":"doJump"},{"location":"types/tes3mobileNPC/#equip","text":"Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return true . local itemEquipped = myObject : equip ({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... }) Parameters : params (table) item ( tes3item , string): The item to equip. itemData ( tes3itemData ): Optional . The item data of the specific item to equip. addItem (boolean): Default : false . If true , the item will be added to the actor's inventory if needed. selectBestCondition (boolean): Default : false . If true , the item in the inventory with the best condition and best charge will be selected. selectWorstCondition (boolean): Default : false . If true , the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools. Returns : itemEquipped (boolean)","title":"equip"},{"location":"types/tes3mobileNPC/#equipmagic","text":"Equips a spell or enchantment, optionally equipping the enchanted item if needed. Returns false if the item could not be equipped. local result = myObject : equipMagic ({ source = ..., itemData = ..., equipItem = ..., updateGUI = ... }) Parameters : params (table) source ( tes3spell , tes3item , string): The source of the magic to equip. Spells must be castable. Castable spells have a castType of tes3.spellType.spell or tes3.spellType.power . The actor is not required to know this spell. Items must have a castable enchantment. Castable enchantments have a castType of tes3.enchantmentType.onUse or tes3.enchantmentType.castOnce . The actor is not required to have this item in their inventory, unless equipItem is true . itemData ( tes3itemData ): Optional . Only valid if an item has been assigned to source . The item data of the specific item to equip. equipItem (boolean): Default : false . Only valid if an item has been assigned to source . If true , the item assigned to source will be equipped. Requires the actor to have the item in their inventory. If false , itemData must not be nil. updateGUI (boolean): Default : true . Only valid if this actor is the player. If false , the player GUI will not be updated to reflect the change to equipped magic. Returns : result (boolean)","title":"equipMagic"},{"location":"types/tes3mobileNPC/#getactivemagiceffects","text":"Fetches a filtered list of the active magic effects on the actor. local result = myObject : getActiveMagicEffects ({ effect = ..., serial = ... }) Parameters : params (table): Optional . effect (integer): Optional . The magic effect ID to search for, from tes3.effect table. serial (integer): Optional . The magic instance serial to search for. Returns : result ( tes3activeMagicEffect [])","title":"getActiveMagicEffects"},{"location":"types/tes3mobileNPC/#getbootsweight","text":"Read-only . Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped. local result = myObject : getBootsWeight () Returns : result (number)","title":"getBootsWeight"},{"location":"types/tes3mobileNPC/#getfatigueterm","text":"Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base)) local result = myObject : getFatigueTerm () Returns : result (number)","title":"getFatigueTerm"},{"location":"types/tes3mobileNPC/#getpowerusetimestamp","text":"Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . local timestamp = myObject : getPowerUseTimestamp ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : timestamp (number)","title":"getPowerUseTimestamp"},{"location":"types/tes3mobileNPC/#getskillstatistic","text":"Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = myObject : getSkillStatistic ( skillId ) Parameters : skillId (number): The index of the skill statistic to fetch. Maps to values in tes3.skill namespace. Returns : result ( tes3statisticSkill )","title":"getSkillStatistic"},{"location":"types/tes3mobileNPC/#getskillvalue","text":"Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = myObject : getSkillValue ( skillId ) Parameters : skillId (number): The index of the skill statistic's value to fetch. Maps to values in tes3.skill namespace. Returns : result (number)","title":"getSkillValue"},{"location":"types/tes3mobileNPC/#getviewtoactor","text":"Returns the angle between provided actor and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right. local angle = myObject : getViewToActor ( mobile ) Parameters : mobile ( tes3mobileActor ): The target actor to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees.","title":"getViewToActor"},{"location":"types/tes3mobileNPC/#getviewtopoint","text":"Returns the angle between provided point in space and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right. local angle = myObject : getViewToPoint ( point ) Parameters : point ( tes3vector3 ): The target point to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees.","title":"getViewToPoint"},{"location":"types/tes3mobileNPC/#getviewtopointwithfacing","text":"Returns the angle between provided point in space and the actor's current position with provided facing (which effectively overrides the actor's facing used in other getViewTo methods). The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the provided facing angle with the origin in actor's position. local angle = myObject : getViewToPointWithFacing ( facing , point ) Parameters : facing (number): The facing angle in radians. The values should be in [0, PI] interval. point ( tes3vector3 ): The target point to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees.","title":"getViewToPointWithFacing"},{"location":"types/tes3mobileNPC/#getweaponspeed","text":"Fetches the weapon speed of the actor's currently equipped weapon, or 1.0 if no weapon is equipped. local result = myObject : getWeaponSpeed () Returns : result (number)","title":"getWeaponSpeed"},{"location":"types/tes3mobileNPC/#hasusedpower","text":"Check if a power has been used and is recharging. local result = myObject : hasUsedPower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean)","title":"hasUsedPower"},{"location":"types/tes3mobileNPC/#isaffectedbyobject","text":"Determines if the actor is currently being affected by a given alchemy, enchantment, or spell. local result = myObject : isAffectedByObject ( object ) Parameters : object ( tes3alchemy , tes3enchantment , tes3spell ): The magic to check for. Returns : result (boolean)","title":"isAffectedByObject"},{"location":"types/tes3mobileNPC/#kill","text":"Kills the actor by setting its health to 0. myObject : kill ()","title":"kill"},{"location":"types/tes3mobileNPC/#rechargepower","text":"Makes a power immediately available for casting again. local result = myObject : rechargePower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean)","title":"rechargePower"},{"location":"types/tes3mobileNPC/#setpowerusetimestamp","text":"Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. myObject : setPowerUseTimestamp ( power , timestamp ) Parameters : power ( tes3spell ): The spell object for the power. timestamp (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() .","title":"setPowerUseTimestamp"},{"location":"types/tes3mobileNPC/#startcombat","text":"Forces the actor into combat with another actor. myObject : startCombat ( target ) Parameters : target ( tes3mobileActor )","title":"startCombat"},{"location":"types/tes3mobileNPC/#startdialogue","text":"Starts dialogue with this actor for the player. myObject : startDialogue ()","title":"startDialogue"},{"location":"types/tes3mobileNPC/#stopcombat","text":"Ends combat for the actor. myObject : stopCombat ( force ) Parameters : force (boolean): If false , the function won't stop combat if the actor has other valid hostile targets.","title":"stopCombat"},{"location":"types/tes3mobileNPC/#unequip","text":"Unequips one or more items from the actor. local itemUnequipped = myObject : unequip ({ item = ..., type = ..., armorSlot = ..., clothingSlot = ... }) Parameters : params (table) item ( tes3item , string): Optional . The item to unequip. type (number): Optional . The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from tes3.objectType can be passed here. armorSlot (number): Optional . The armor slot to unequip. Maps to values in tes3.armorSlot namespace. clothingSlot (number): Optional . The clothing slot to unequip. Maps to values in tes3.clothingSlot namespace Returns : itemUnequipped (boolean)","title":"unequip"},{"location":"types/tes3mobileNPC/#unequipmagic","text":"Unequips the currently equipped magic, optionally unequipping the enchanted item if needed. myObject : unequipMagic ({ unequipItem = ..., updateGUI = ... }) Parameters : params (table): Optional . unequipItem (boolean): Default : false . Only valid if the currently equipped magic is from an equippable item enchantment. If true , the item containing the enchantment will be unequipped. updateGUI (boolean): Default : true . Only valid if this actor is the player. If false , the player GUI will not be updated to reflect the change to equipped magic.","title":"unequipMagic"},{"location":"types/tes3mobileNPC/#updatederivedstatistics","text":"Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use tes3.modStatistic() . myObject : updateDerivedStatistics ( attribute ) Parameters : attribute ( tes3statistic ): Optional . Limits the update to statistics derived from this attribute. e.g. mobile:updateDerivedStatistics(mobile.strength) . If not present, all derived statistics will be updated.","title":"updateDerivedStatistics"},{"location":"types/tes3mobileNPC/#updateopacity","text":"Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects. myObject : updateOpacity ()","title":"updateOpacity"},{"location":"types/tes3mobileObject/","text":"tes3mobileObject \u2693\ufe0e The base object from which all other mobiles (AI/movement using) structures derive. Properties \u2693\ufe0e boundSize \u2693\ufe0e A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 ) boundSize2D \u2693\ufe0e A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 ) cellX \u2693\ufe0e Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number) cellY \u2693\ufe0e Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number) flags \u2693\ufe0e Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (integer) height \u2693\ufe0e The height of the mobile above the ground. Returns : result (number) impulseVelocity \u2693\ufe0e A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 ) inventory \u2693\ufe0e Read-only . Access to the items the mobile object has in its inventory. Returns : result ( tes3itemStack []) isAffectedByGravity \u2693\ufe0e If true , the mobile is affected by gravity. Does not have any effect on spell projectiles. Returns : result (boolean) movementCollision \u2693\ufe0e Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean) movementFlags \u2693\ufe0e Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (integer) objectType \u2693\ufe0e Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number) playerDistance \u2693\ufe0e The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number) position \u2693\ufe0e A vector that represents the 3D position of the object. Returns : result ( tes3vector3 ) prevMovementFlags \u2693\ufe0e Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (integer) reference \u2693\ufe0e Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference ) velocity \u2693\ufe0e A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 )","title":"tes3mobileObject"},{"location":"types/tes3mobileObject/#tes3mobileobject","text":"The base object from which all other mobiles (AI/movement using) structures derive.","title":"tes3mobileObject"},{"location":"types/tes3mobileObject/#properties","text":"","title":"Properties"},{"location":"types/tes3mobileObject/#boundsize","text":"A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 )","title":"boundSize"},{"location":"types/tes3mobileObject/#boundsize2d","text":"A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 )","title":"boundSize2D"},{"location":"types/tes3mobileObject/#cellx","text":"Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellX"},{"location":"types/tes3mobileObject/#celly","text":"Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellY"},{"location":"types/tes3mobileObject/#flags","text":"Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"flags"},{"location":"types/tes3mobileObject/#height","text":"The height of the mobile above the ground. Returns : result (number)","title":"height"},{"location":"types/tes3mobileObject/#impulsevelocity","text":"A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 )","title":"impulseVelocity"},{"location":"types/tes3mobileObject/#inventory","text":"Read-only . Access to the items the mobile object has in its inventory. Returns : result ( tes3itemStack [])","title":"inventory"},{"location":"types/tes3mobileObject/#isaffectedbygravity","text":"If true , the mobile is affected by gravity. Does not have any effect on spell projectiles. Returns : result (boolean)","title":"isAffectedByGravity"},{"location":"types/tes3mobileObject/#movementcollision","text":"Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean)","title":"movementCollision"},{"location":"types/tes3mobileObject/#movementflags","text":"Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"movementFlags"},{"location":"types/tes3mobileObject/#objecttype","text":"Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number)","title":"objectType"},{"location":"types/tes3mobileObject/#playerdistance","text":"The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number)","title":"playerDistance"},{"location":"types/tes3mobileObject/#position","text":"A vector that represents the 3D position of the object. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3mobileObject/#prevmovementflags","text":"Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"prevMovementFlags"},{"location":"types/tes3mobileObject/#reference","text":"Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3mobileObject/#velocity","text":"A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/tes3mobileObjectCollision/","text":"tes3mobileObjectCollision \u2693\ufe0e The base object holding the information of a collision. Properties \u2693\ufe0e colliderRef \u2693\ufe0e Read-only . Access to the reference of the colliding object. Returns : result ( tes3reference ) colliderRoot \u2693\ufe0e Read-only . The collider's root scene graph node. Returns : result ( niNode ) collisionType \u2693\ufe0e Read-only . The collision type. Value Collsion type 0 Actor 1 Static 2 Terrain 3 Water 4 Activator 5 staticAvoidNode 6 none Returns : result (integer) normal \u2693\ufe0e Read-only . The normal vector at the collision point. Returns : result ( tes3vector3 ) objectPosAtCollision \u2693\ufe0e Read-only . The location of the mobile object at the moment of collision. Returns : result ( tes3vector3 ) point \u2693\ufe0e Read-only . The point of contact. Returns : result ( tes3vector3 ) time \u2693\ufe0e Read-only . No description yet available. Returns : result (number) valid \u2693\ufe0e Read-only . No description yet available. Returns : result (boolean) velocity \u2693\ufe0e Read-only . The velocity of the associated mobile object at the point of collision. Returns : result ( tes3vector3 )","title":"tes3mobileObjectCollision"},{"location":"types/tes3mobileObjectCollision/#tes3mobileobjectcollision","text":"The base object holding the information of a collision.","title":"tes3mobileObjectCollision"},{"location":"types/tes3mobileObjectCollision/#properties","text":"","title":"Properties"},{"location":"types/tes3mobileObjectCollision/#colliderref","text":"Read-only . Access to the reference of the colliding object. Returns : result ( tes3reference )","title":"colliderRef"},{"location":"types/tes3mobileObjectCollision/#colliderroot","text":"Read-only . The collider's root scene graph node. Returns : result ( niNode )","title":"colliderRoot"},{"location":"types/tes3mobileObjectCollision/#collisiontype","text":"Read-only . The collision type. Value Collsion type 0 Actor 1 Static 2 Terrain 3 Water 4 Activator 5 staticAvoidNode 6 none Returns : result (integer)","title":"collisionType"},{"location":"types/tes3mobileObjectCollision/#normal","text":"Read-only . The normal vector at the collision point. Returns : result ( tes3vector3 )","title":"normal"},{"location":"types/tes3mobileObjectCollision/#objectposatcollision","text":"Read-only . The location of the mobile object at the moment of collision. Returns : result ( tes3vector3 )","title":"objectPosAtCollision"},{"location":"types/tes3mobileObjectCollision/#point","text":"Read-only . The point of contact. Returns : result ( tes3vector3 )","title":"point"},{"location":"types/tes3mobileObjectCollision/#time","text":"Read-only . No description yet available. Returns : result (number)","title":"time"},{"location":"types/tes3mobileObjectCollision/#valid","text":"Read-only . No description yet available. Returns : result (boolean)","title":"valid"},{"location":"types/tes3mobileObjectCollision/#velocity","text":"Read-only . The velocity of the associated mobile object at the point of collision. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/tes3mobilePlayer/","text":"tes3mobilePlayer \u2693\ufe0e A mobile object for a the player. This type inherits the following: tes3mobileNPC , tes3mobileActor , tes3mobileObject Properties \u2693\ufe0e acrobatics \u2693\ufe0e Read-only . Direct access to the NPC's acrobatics skill statistic. Returns : result ( tes3statisticSkill ) actionBeforeCombat \u2693\ufe0e Read-only . Action data stored before the actor entered combat. Returns : result ( tes3actionData ) actionData \u2693\ufe0e Read-only . Current action data. Pre-combat action data is stored in the actionBeforeCombat property. Returns : result ( tes3actionData ) activeAI \u2693\ufe0e Friendly access to the actor's flag that controls if AI is active. Returns : result (boolean) activeMagicEffectList \u2693\ufe0e Read-only . The active magic effects on the actor, from which all others can be accessed. A table with tes3activeMagicEffect items. Returns : result ( tes3activeMagicEffect []) actorType \u2693\ufe0e Read-only . The type of the mobile actor. Maps to values in tes3.actorType namespace. Returns : result (number) agility \u2693\ufe0e Read-only . Direct access to the actor's agility attribute statistic. Returns : result ( tes3statistic ) aiPlanner \u2693\ufe0e Read-only . Access to the mobile's AI planner and AI package information. Doesn't exist on the player mobile. Returns : result ( tes3aiPlanner , nil) alarm \u2693\ufe0e The actor's alarm AI value. Returns : result (number) alchemy \u2693\ufe0e Read-only . Direct access to the NPC's alchemy skill statistic. Returns : result ( tes3statisticSkill ) alteration \u2693\ufe0e Read-only . Direct access to the NPC's alteration skill statistic. Returns : result ( tes3statisticSkill ) alwaysRun \u2693\ufe0e Toggle flag for if the player should always run. Returns : result (boolean) animationController \u2693\ufe0e Read-only . Access to the player's animation controller. Returns : result ( tes3playerAnimationController ) armorer \u2693\ufe0e Read-only . Direct access to the NPC's armorer skill statistic. Returns : result ( tes3statisticSkill ) armorRating \u2693\ufe0e Read-only . The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the applyDamage function. Armour mitigation calculation: x = damage / (damage + target.armorRating) damage *= max(fCombatArmorMinMult, x) if damage < 1 then damage = 1 end Returns : result (number) athletics \u2693\ufe0e Read-only . Direct access to the NPC's athletics skill statistic. Returns : result ( tes3statisticSkill ) attackBonus \u2693\ufe0e Direct access to the actor's attack bonus effect attribute. Returns : result (number) attackDisabled \u2693\ufe0e Toggle flag for if the player can attack. Returns : result (boolean) attacked \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor has been attacked. Returns : result (boolean) attributes \u2693\ufe0e Read-only . Access to a table of 8 tes3statistic objects for the actor's attributes. Returns : result ( tes3statistic []) autoRun \u2693\ufe0e Toggle flag for if the player should constantly run forward. Returns : result (boolean) axe \u2693\ufe0e Read-only . Direct access to the NPC's axe skill statistic. Returns : result ( tes3statisticSkill ) barterGold \u2693\ufe0e The current amount of gold that the actor has access to for bartering. Returns : result (number) birthsign \u2693\ufe0e Read-only . The player's birthsign. Returns : result ( tes3birthsign ) blind \u2693\ufe0e Direct access to the actor's blind effect attribute. Returns : result (number) block \u2693\ufe0e Read-only . Direct access to the NPC's block skill statistic. Returns : result ( tes3statisticSkill ) bluntWeapon \u2693\ufe0e Read-only . Direct access to the NPC's blunt weapon skill statistic. Returns : result ( tes3statisticSkill ) boundSize \u2693\ufe0e A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 ) boundSize2D \u2693\ufe0e A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 ) bounty \u2693\ufe0e The player's current bounty. Returns : result (number) cameraHeight \u2693\ufe0e Access to the player camera height, used for both the first person and third person camera (specifically the orbit centre). It is normally placed at head height by the game, on loading, or when a race is selected. The camera height can be reset to its regular value by setting this property to nil . Returns : result (number) Example: Adjust the camera to match shrunken player scale local function shrink () -- Shrink player. tes3 . player . scale = 0.5 -- Reset camera height to default value. tes3 . mobilePlayer . cameraHeight = nil -- Modify camera height to match scale. tes3 . mobilePlayer . cameraHeight = tes3 . player . scale * tes3 . mobilePlayer . cameraHeight end local function unshrink () tes3 . player . scale = 1 tes3 . mobilePlayer . cameraHeight = nil end canAct \u2693\ufe0e Read-only . If true , the actor is able to freely execute actions like attacking or casting magic. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, drawing/sheathing their weapon, attacking, casting magic or using a lockpick or probe. Returns : result (boolean) canJump \u2693\ufe0e Read-only . If true , the actor is currently able to jump. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, jumping, falling, swimming or flying. Returns : result (boolean) canJumpMidair \u2693\ufe0e Read-only . If true , the actor is currently able to jump midair. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, swimming or flying. For more information on midair jumping see tes3mobileActor:doJump() . Returns : result (boolean) castReady \u2693\ufe0e Toggle flag for if the player has casting ready. Returns : result (boolean) cell \u2693\ufe0e Read-only . Fetches the cell that the actor is in. Returns : result ( tes3cell ) cellX \u2693\ufe0e Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number) cellY \u2693\ufe0e Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number) chameleon \u2693\ufe0e Direct access to the actor's chameleon effect attribute. Returns : result (number) clawMultiplier \u2693\ufe0e Read-only . Quick access to the ClawMultiplier global variable. Returns : result ( tes3globalVariable ) collidingReference \u2693\ufe0e Read-only . The reference that the mobile has collided with this frame. Doesn't include actors and terrain. Returns : result ( tes3reference , nil) combatSession \u2693\ufe0e Read-only . Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Doesn't exist on the player's mobile. Returns : result ( tes3combatSession , nil) conjuration \u2693\ufe0e Read-only . Direct access to the NPC's conjuration skill statistic. Returns : result ( tes3statisticSkill ) controlsDisabled \u2693\ufe0e Toggle flag for if the player's controls are disabled. Returns : result (boolean) corpseHourstamp \u2693\ufe0e This is the time measured in hours from the beginning of the game when the actor died. Returns a UNIX-style timestamp based on in-world simulation time since the start of the era. For living actors this field has value a of 0 . Returns : result (number) currentEnchantedItem \u2693\ufe0e Read-only . The currently equipped enchanted item that the actor will use. Returns : result ( tes3equipmentStack , nil) currentSpell \u2693\ufe0e Read-only . The currently equipped spell that the actor will use. Returns : result ( tes3spell ) destruction \u2693\ufe0e Read-only . Direct access to the NPC's destruction skill statistic. Returns : result ( tes3statisticSkill ) dialogueList \u2693\ufe0e Read-only . Access to the collection that holds what dialogue topics the player has access to. Returns : result ( tes3dialogue []) effectAttributes \u2693\ufe0e Read-only . Access to a table of 24 numbers for the actor's effect attributes. In order those are: attackBonus , sanctuary , resistMagicka , resistFire , resistFrost , resistShock , resistCommonDisease , resistBlightDisease , resistCorprus , resistPoison , resistParalysis , chameleon , resistNormalWeapons , waterBreathing , waterWalking , swiftSwim , jump , levitate , shield , sound , silence , blind , paralyze , and invisibility . Each of those can be accessed individually. For example, tes3mobileActor.chameleon . Returns : result (number[]) enchant \u2693\ufe0e Read-only . Direct access to the NPC's enchant skill statistic. Returns : result ( tes3statisticSkill ) encumbrance \u2693\ufe0e Read-only . Access to the actor's encumbrance statistic. Returns : result ( tes3statistic ) endurance \u2693\ufe0e Read-only . Direct access to the actor's endurance attribute statistic. Returns : result ( tes3statistic ) facing \u2693\ufe0e Read-only . The facing of the actor, in radians. It corresponds to the mobile.reference.orientation.z . Facing of 0 corresponds to the in game North, facing of PI corresponds to the game South. It's in clockwise direction. Returns : result (number) fatigue \u2693\ufe0e Read-only . Access to the actor's fatigue statistic. Returns : result ( tes3statistic ) fight \u2693\ufe0e The actor's fight AI value. Returns : result (number) firstPerson \u2693\ufe0e Read-only . Quick access to the first person NPC. Returns : result ( tes3npc ) firstPersonReference \u2693\ufe0e Read-only . Quick access to the first person NPC's reference. Returns : result ( tes3reference ) flags \u2693\ufe0e Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (integer) flee \u2693\ufe0e The actor's flee AI value. Returns : result (number) flySpeed \u2693\ufe0e Read-only . The calculated fly movement speed. Returns : result (number) forceJump \u2693\ufe0e Toggle flag for if the NPC jumps. Returns : result (boolean) forceMoveJump \u2693\ufe0e Toggle flag for if the NPC moves and jumps. Returns : result (boolean) forceRun \u2693\ufe0e Toggle flag for if the NPC runs. Returns : result (boolean) forceSneak \u2693\ufe0e Toggle flag for if the NPC sneaks. Returns : result (boolean) friendlyActors \u2693\ufe0e Read-only . A collection of other tes3mobileActor s that this actor considers friendly. Returns : result ( tes3mobileActor []) greetDuration \u2693\ufe0e No description yet available. Returns : result (number) greetTimer \u2693\ufe0e Read-only . No description yet available. Returns : result (number) handToHand \u2693\ufe0e Read-only . Direct access to the NPC's hand to hand skill statistic. Returns : result ( tes3statisticSkill ) hasFreeAction \u2693\ufe0e Read-only . If true, the actor isn't knocked down or knocked out. Returns : result (boolean) health \u2693\ufe0e Read-only . Access to the actor's health statistic. Returns : result ( tes3statistic ) heavyArmor \u2693\ufe0e Read-only . Direct access to the NPC's heavy armor skill statistic. Returns : result ( tes3statisticSkill ) height \u2693\ufe0e The height of the mobile above the ground. Returns : result (number) hello \u2693\ufe0e The actor's hello AI value. Returns : result (number) holdBreathTime \u2693\ufe0e This is the time the actor can stay underwater without taking drowning damage, measured in seconds. It's starting value is fHoldBreathTime (GMST) seconds by default. Once the actor is underwater, this value is decreasing based on the time passed while underwater. The actor will start taking drowning damage once this time is below 0. During drowning this time will have more and more negative values based on the duration of the drowning. Changing this allows manipulating for how long the actor can stay underwater without drowning. Note that player's Breath HUD element won't show values larger than fHoldBreathTime . Returns : result (number) hostileActors \u2693\ufe0e Read-only . A collection of other tes3mobileActor s that this actor considers hostile. Returns : result ( tes3mobileActor []) idleAnim \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is using their idle animation. Returns : result (boolean) illusion \u2693\ufe0e Read-only . Direct access to the NPC's illusion skill statistic. Returns : result ( tes3statisticSkill ) impulseVelocity \u2693\ufe0e A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 ) inactivityTime \u2693\ufe0e The time that the player has spent inactive. Returns : result (number) inCombat \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is in combat. Returns : result (boolean) inJail \u2693\ufe0e Toggle flag for if the player is currently in jail. Returns : result (boolean) intelligence \u2693\ufe0e Read-only . Direct access to the actor's intelligence attribute statistic. Returns : result ( tes3statistic ) inventory \u2693\ufe0e Read-only . Access to the items the mobile object has in its inventory. Returns : result ( tes3itemStack []) invisibility \u2693\ufe0e Direct access to the actor's invisibility effect attribute. Returns : result (number) is3rdPerson \u2693\ufe0e Read-only . Shows if the player's camera is currently in 3rd person view. Returns : result (boolean) isAffectedByGravity \u2693\ufe0e If true , the mobile is affected by gravity. Does not have any effect on spell projectiles. Returns : result (boolean) isAttackingOrCasting \u2693\ufe0e Read-only . If true , the actor is attacking, casting magic or using a lockpick or probe. Returns : result (boolean) isCrittable \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor can be critically hit. Returns : result (boolean) isDead \u2693\ufe0e Read-only . True if the actor is dead. Returns : result (boolean) isDiseased \u2693\ufe0e Read-only . True if the actor is has a disease effect. This counts normal, blight, and corprus effects. Returns : result (boolean) isFalling \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge. Returns : result (boolean) isFlying \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is flying. Returns : result (boolean) isJumping \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is jumping. Returns : result (boolean) isKnockedDown \u2693\ufe0e Read-only . If true , the actor is knocked down. An actor can be knocked down after being attacked or falling. Returns : result (boolean) isKnockedOut \u2693\ufe0e Read-only . If true , the actor is knocked out. An actor can be knocked out if their fatigue has been reduced below zero. Returns : result (boolean) isMovingBack \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving backwards. Returns : result (boolean) isMovingForward \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving forwards. Returns : result (boolean) isMovingLeft \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving left. Returns : result (boolean) isMovingRight \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is moving right. Returns : result (boolean) isParalyzed \u2693\ufe0e Read-only . If true , the actor is affected by the magic effect paralyze. Returns : result (boolean) isPlayerDetected \u2693\ufe0e Direct access to the actor's flag showing the player was detected on the last detection check. Returns : result (boolean) isPlayerHidden \u2693\ufe0e Direct access to the actor's flag showing the player was hidden on the last detection check. Returns : result (boolean) isReadyingWeapon \u2693\ufe0e Read-only . If true , the actor is drawing or sheathing their weapon. Returns : result (boolean) isRunning \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is running. Returns : result (boolean) isSneaking \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is sneaking. Returns : result (boolean) isSwimming \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is swimming. Returns : result (boolean) isTurningLeft \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is turning left. Returns : result (boolean) isTurningRight \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is turning right. Returns : result (boolean) isWalking \u2693\ufe0e Direct access to the actor's current movement flags, showing if the actor is walking. Returns : result (boolean) jump \u2693\ufe0e Direct access to the actor's jump effect attribute. Returns : result (number) jumpingDisabled \u2693\ufe0e Toggle flag for if the player can jump. Returns : result (boolean) knownWerewolf \u2693\ufe0e Read-only . Quick access to the KnownWerewolf global variable. Returns : result ( tes3globalVariable ) lastGroundZ \u2693\ufe0e This has a large negative value if the actor is on the ground. When the actor jumps, this will have a positive value. During jump event this value is still negative. A split second after, it will have the value of the .z coordinate when the actor was on the ground. Beware that this value changes after some amount of time while the actors is in the air. Returns : result (number) lastUsedAlembic \u2693\ufe0e Read-only . The last used alchemy alembic. Returns : result ( tes3apparatus ) lastUsedAmmoCount \u2693\ufe0e The amount of ammo for the ranged weapon that that was last equipped. Returns : result (number) lastUsedCalcinator \u2693\ufe0e Read-only . The last used alchemy calcinator. Returns : result ( tes3apparatus ) lastUsedMortar \u2693\ufe0e Read-only . The last used alchemy mortar. Returns : result ( tes3apparatus ) lastUsedRetort \u2693\ufe0e Read-only . The last used alchemy retort. Returns : result ( tes3apparatus ) levelupPerSpecialization \u2693\ufe0e Read-only . Array-style table access to how many skill levels there have been for each of the 3 specializations. Returns : result (number[]) levelUpProgress \u2693\ufe0e The progress the player has made towards leveling up. Equal to the total amount of Minor and Major skill increases during the current level. This value can be larger than 10. Returns : result (integer) levelupsPerAttribute \u2693\ufe0e Read-only . Array-style table access to how many skill levels there have been for each of the 8 attributes. Returns : result (number[]) levitate \u2693\ufe0e Direct access to the actor's levitate effect attribute. Returns : result (number) lightArmor \u2693\ufe0e Read-only . Direct access to the NPC's light armor skill statistic. Returns : result ( tes3statisticSkill ) longBlade \u2693\ufe0e Read-only . Direct access to the NPC's long blade skill statistic. Returns : result ( tes3statisticSkill ) luck \u2693\ufe0e Read-only . Direct access to the actor's luck attribute statistic. Returns : result ( tes3statistic ) magicDisabled \u2693\ufe0e Toggle flag for if the player can use magic. Returns : result (boolean) magicka \u2693\ufe0e Read-only . Access to the actor's magicka statistic. Returns : result ( tes3statistic ) magickaMultiplier \u2693\ufe0e Read-only . Access to the actor's magicka multiplier statistic. Returns : result ( tes3statistic ) markLocation \u2693\ufe0e Read-only . Access to the structure that holds the player's current mark/recall location. Returns : result ( tes3markData ) marksman \u2693\ufe0e Read-only . Direct access to the NPC's marksman skill statistic. Returns : result ( tes3statisticSkill ) mediumArmor \u2693\ufe0e Read-only . Direct access to the NPC's medium armor skill statistic. Returns : result ( tes3statisticSkill ) mercantile \u2693\ufe0e Read-only . Direct access to the NPC's mercantile skill statistic. Returns : result ( tes3statisticSkill ) mobToMobCollision \u2693\ufe0e Allows modifying if this actor will collide with other actors. When true (default), the actor cannot move through other actors. When false , the actor is allowed to move through other actors, and other actors can move through it. May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor. Returns : result (boolean) mouseLookDisabled \u2693\ufe0e Toggle flag for if the player's mouse look controls are disabled. Returns : result (boolean) movementCollision \u2693\ufe0e Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean) movementFlags \u2693\ufe0e Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (integer) moveSpeed \u2693\ufe0e Read-only . The calculated base movement speed. Returns : result (number) mysticism \u2693\ufe0e Read-only . Direct access to the NPC's mysticism skill statistic. Returns : result ( tes3statisticSkill ) nextActionWeight \u2693\ufe0e Read-only . No description yet available. Returns : result (number) object \u2693\ufe0e Read-only . The actor object that maps to this mobile. Returns : result ( tes3npcInstance ) objectType \u2693\ufe0e Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number) paralyze \u2693\ufe0e Direct access to the actor's paralyze effect attribute. Returns : result (number) personality \u2693\ufe0e Read-only . Direct access to the actor's personality attribute statistic. Returns : result ( tes3statistic ) playerDistance \u2693\ufe0e The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number) position \u2693\ufe0e A vector that represents the 3D position of the object. Returns : result ( tes3vector3 ) prevMovementFlags \u2693\ufe0e Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (integer) readiedAmmo \u2693\ufe0e The currently equipped ammo, if any. Returns : result ( tes3equipmentStack , nil) readiedAmmoCount \u2693\ufe0e The number of ammo equipped for the readied ammo. Returns : result (integer) readiedShield \u2693\ufe0e The currently equipped shield, if any. Returns : result ( tes3equipmentStack , nil) readiedWeapon \u2693\ufe0e The currently equipped weapon, if any. Returns : result ( tes3equipmentStack , nil) reference \u2693\ufe0e Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference ) resistBlightDisease \u2693\ufe0e Direct access to the actor's blight disease resistance effect attribute. Returns : result (number) resistCommonDisease \u2693\ufe0e Direct access to the actor's common disease resistance effect attribute. Returns : result (number) resistCorprus \u2693\ufe0e Direct access to the actor's corprus disease resistance effect attribute. Returns : result (number) resistFire \u2693\ufe0e Direct access to the actor's fire resistance effect attribute. Returns : result (number) resistFrost \u2693\ufe0e Direct access to the actor's frost resistance effect attribute. Returns : result (number) resistMagicka \u2693\ufe0e Direct access to the actor's magicka resistance effect attribute. Returns : result (number) resistNormalWeapons \u2693\ufe0e Direct access to the actor's normal weapon resistance effect attribute. Returns : result (number) resistParalysis \u2693\ufe0e Direct access to the actor's paralysis resistance effect attribute. Returns : result (number) resistPoison \u2693\ufe0e Direct access to the actor's poison resistance effect attribute. Returns : result (number) resistShock \u2693\ufe0e Direct access to the actor's shock resistance effect attribute. Returns : result (number) restHoursRemaining \u2693\ufe0e How many hours are left while resting. Returns : result (integer) restoration \u2693\ufe0e Read-only . Direct access to the NPC's restoration skill statistic. Returns : result ( tes3statisticSkill ) runSpeed \u2693\ufe0e Read-only . The calculated run movement speed. Returns : result (number) sanctuary \u2693\ufe0e Direct access to the actor's sanctuary effect attribute. Returns : result (number) scanInterval \u2693\ufe0e The time interval in seconds between specific actor AI checks. These checks include checking for hostile actors and engaging combat, as well as checking if the actor should equip a light source if it is too dark. The specified time in seconds will always be increased by one second when checking, therefore a value of 0.0 will actually cause the actor AI checks to occur every second instead of every frame. Setting this to lower values than the default increases the impact on performance. The default value for a newly created actor depends on the total amount of all currently active tes3aiPlanner , meaning the checks will be executed at different intervals for each actor. Returns : result (number) scanTimer \u2693\ufe0e Read-only . The time in seconds since the last time the checks specified in scanInterval were executed. Returns : result (number) security \u2693\ufe0e Read-only . Direct access to the NPC's security skill statistic. Returns : result ( tes3statisticSkill ) shield \u2693\ufe0e Direct access to the actor's shield effect attribute. Returns : result (number) shortBlade \u2693\ufe0e Read-only . Direct access to the NPC's short blade skill statistic. Returns : result ( tes3statisticSkill ) silence \u2693\ufe0e Direct access to the actor's silence effect attribute. Returns : result (number) skillProgress \u2693\ufe0e Read-only . Array-style table access to skill progress for each of the 27 skills. Attention The first index in the array is 1, but skill indices in tes3.skill table start from 0. Returns : result (number[]) skills \u2693\ufe0e Read-only . An array-style table with access to the twenty seven NPC skill statistics ( tes3statisticSkill ). Returns : result ( tes3statisticSkill []) sleeping \u2693\ufe0e Toggle flag for if the player is currently sleeping. Returns : result (boolean) sneak \u2693\ufe0e Read-only . Direct access to the NPC's sneak skill statistic. Returns : result ( tes3statisticSkill ) sound \u2693\ufe0e Direct access to the actor's sound effect attribute. Returns : result (number) spear \u2693\ufe0e Read-only . Direct access to the NPC's spear skill statistic. Returns : result ( tes3statisticSkill ) speechcraft \u2693\ufe0e Read-only . Direct access to the NPC's speechcraft skill statistic. Returns : result ( tes3statisticSkill ) speed \u2693\ufe0e Read-only . Direct access to the actor's speed attribute statistic. Returns : result ( tes3statistic ) spellReadied \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor has a spell readied. Returns : result (boolean) strength \u2693\ufe0e Read-only . Direct access to the actor's strength attribute statistic. Returns : result ( tes3statistic ) swiftSwim \u2693\ufe0e Direct access to the actor's swift swim effect attribute. Returns : result (number) swimRunSpeed \u2693\ufe0e Read-only . The calculated swim movement speed while running. Returns : result (number) swimSpeed \u2693\ufe0e Read-only . The calculated swim movement speed. Returns : result (number) talkedTo \u2693\ufe0e Direct access to the actor's flag that shows it was recently talked to. Returns : result (boolean) telekinesis \u2693\ufe0e Direct access to the player's telekinesis effect attribute. Returns : result (number) torchSlot \u2693\ufe0e The currently equipped light. Returns : result ( tes3equipmentStack ) traveling \u2693\ufe0e Toggle flag for if the player is currently travelling. Returns : result (boolean) unarmored \u2693\ufe0e Read-only . Direct access to the NPC's unarmored skill statistic. Returns : result ( tes3statisticSkill ) underwater \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor is under water. Returns : result (boolean) vanityDisabled \u2693\ufe0e Toggle flag for if the player's vanity camera is disabled. Returns : result (boolean) velocity \u2693\ufe0e A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 ) viewSwitchDisabled \u2693\ufe0e Toggle flag for if the player can switch between first person and vanity cameras. Returns : result (boolean) visionBonus \u2693\ufe0e Direct access to the player's vision bonus effect attribute. Returns : result (number) waiting \u2693\ufe0e Toggle flag for if the player is currently waiting. Returns : result (boolean) walkSpeed \u2693\ufe0e Read-only . The calculated walk movement speed. Returns : result (number) waterBreathing \u2693\ufe0e Direct access to the actor's water breathing effect attribute. Returns : result (number) waterWalking \u2693\ufe0e Direct access to the actor's water walking effect attribute. Returns : result (number) weaponDrawn \u2693\ufe0e Read-only . Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again. Returns : result (boolean) weaponReady \u2693\ufe0e A flag for if the player has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the player to take out their weapon. Setting it to false will cause the player to put it away. Returns : result (boolean) werewolf \u2693\ufe0e Read-only . Friendly access to the actor's flag that controls if the actor in werewolf form. Returns : result (boolean) width \u2693\ufe0e Read-only . No description yet available. Returns : result (number) willpower \u2693\ufe0e Read-only . Direct access to the actor's willpower attribute statistic. Returns : result ( tes3statistic ) Methods \u2693\ufe0e applyDamage \u2693\ufe0e Damages the actor, with options to control mitigation and difficulty scaling. Invokes the damage and damaged events, with tes3.damageSource.script source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = myObject : applyDamage ({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Default : false . If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. applyDifficulty (boolean): Default : false . If the game difficulty modifier should be applied. Must be used with the playerAttack argument to apply the correct modifier. playerAttack (boolean): Optional . If the attack came from the player. Used for difficulty calculation. doNotChangeHealth (boolean): Default : false . If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit. Returns : result (number) applyFatigueDamage \u2693\ufe0e Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the damageHandToHand and damagedHandToHand events, with tes3.damageSource.script source. Returns the actual fatigue damage done. local result = myObject : applyFatigueDamage ( fatigueDamage , swing , alwaysPlayHitVoice ) Parameters : fatigueDamage (number): The amount of fatigue damage to apply. swing (number): Optional . The attack swing magnitude, range 0-1. Only modifies hit volume. alwaysPlayHitVoice (boolean): Optional . Always play the hit reaction voiceover. Returns : result (number) applyJumpFatigueCost \u2693\ufe0e Reduces the actor's current fatigue by the amount a regular jump would currently cost. myObject : applyJumpFatigueCost () calcEffectiveDamage \u2693\ufe0e Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = myObject : calcEffectiveDamage ({ damage = ..., applyArmor = ..., resistAttribute = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Default : false . If armor should mitigate the incoming damage. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. Returns : result (number) calculateJumpVelocity \u2693\ufe0e Calculates the starting velocity of a jump. local result = myObject : calculateJumpVelocity ({ direction = ... }) Parameters : params (table): Optional . direction ( tes3vector2 ): Optional . The ground direction vector used to calculate the velocity. If not specified, a zero-length direction vector for a regular jump without movement will be used. Returns : result ( tes3vector3 ) doJump \u2693\ufe0e Forces the actor to jump. If velocity or other parameters with non-default values are specified it will be treated as a non-default jump during the jump event. Returns false if the actor is currently unable to jump or the jump has been cancelled, otherwise returns true . local result = myObject : doJump ({ velocity = ..., applyFatigueCost = ..., allowMidairJumping = ... }) Parameters : params (table): Optional . velocity ( tes3vector3 ): Optional . The initial velocity of the jump. If not specified, the velocity of a regular jump without movement will be used. applyFatigueCost (boolean): Default : true . If true , reduces the actor's current fatigue by the amount a regular jump would currently cost. Will not reduce fatigue if false . allowMidairJumping (boolean): Default : false . If true , enables the jump to be performed while already jumping or falling. Does not work during levitation or other methods of flying. Returns : result (boolean) equip \u2693\ufe0e Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return true . local itemEquipped = myObject : equip ({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... }) Parameters : params (table) item ( tes3item , string): The item to equip. itemData ( tes3itemData ): Optional . The item data of the specific item to equip. addItem (boolean): Default : false . If true , the item will be added to the actor's inventory if needed. selectBestCondition (boolean): Default : false . If true , the item in the inventory with the best condition and best charge will be selected. selectWorstCondition (boolean): Default : false . If true , the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools. Returns : itemEquipped (boolean) equipMagic \u2693\ufe0e Equips a spell or enchantment, optionally equipping the enchanted item if needed. Returns false if the item could not be equipped. local result = myObject : equipMagic ({ source = ..., itemData = ..., equipItem = ..., updateGUI = ... }) Parameters : params (table) source ( tes3spell , tes3item , string): The source of the magic to equip. Spells must be castable. Castable spells have a castType of tes3.spellType.spell or tes3.spellType.power . The actor is not required to know this spell. Items must have a castable enchantment. Castable enchantments have a castType of tes3.enchantmentType.onUse or tes3.enchantmentType.castOnce . The actor is not required to have this item in their inventory, unless equipItem is true . itemData ( tes3itemData ): Optional . Only valid if an item has been assigned to source . The item data of the specific item to equip. equipItem (boolean): Default : false . Only valid if an item has been assigned to source . If true , the item assigned to source will be equipped. Requires the actor to have the item in their inventory. If false , itemData must not be nil. updateGUI (boolean): Default : true . Only valid if this actor is the player. If false , the player GUI will not be updated to reflect the change to equipped magic. Returns : result (boolean) exerciseSkill \u2693\ufe0e Exercises a skill, providing experience in it. Invokes exerciseSkill event. myObject : exerciseSkill ( skill , progress ) Parameters : skill (integer): The skill index to give experience to. Maps to values from tes3.skill table. progress (number): The amount of experience to grant. getActiveMagicEffects \u2693\ufe0e Fetches a filtered list of the active magic effects on the actor. local result = myObject : getActiveMagicEffects ({ effect = ..., serial = ... }) Parameters : params (table): Optional . effect (integer): Optional . The magic effect ID to search for, from tes3.effect table. serial (integer): Optional . The magic instance serial to search for. Returns : result ( tes3activeMagicEffect []) getBootsWeight \u2693\ufe0e Read-only . Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped. local result = myObject : getBootsWeight () Returns : result (number) getFatigueTerm \u2693\ufe0e Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base)) local result = myObject : getFatigueTerm () Returns : result (number) getPowerUseTimestamp \u2693\ufe0e Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . local timestamp = myObject : getPowerUseTimestamp ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : timestamp (number) getSkillProgressRequirement \u2693\ufe0e Returns the total progress needed to progress the skill to the next level. The actual amount of progress needed is the floor of the value returned by this function. local progressNeeded = myObject : getSkillProgressRequirement ( skill ) Parameters : skill (integer): The skill index to check. Maps to values from tes3.skill table. Returns : progressNeeded (number) getSkillStatistic \u2693\ufe0e Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = myObject : getSkillStatistic ( skillId ) Parameters : skillId (number): The index of the skill statistic to fetch. Maps to values in tes3.skill namespace. Returns : result ( tes3statisticSkill ) getSkillValue \u2693\ufe0e Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = myObject : getSkillValue ( skillId ) Parameters : skillId (number): The index of the skill statistic's value to fetch. Maps to values in tes3.skill namespace. Returns : result (number) getViewToActor \u2693\ufe0e Returns the angle between provided actor and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right. local angle = myObject : getViewToActor ( mobile ) Parameters : mobile ( tes3mobileActor ): The target actor to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees. getViewToPoint \u2693\ufe0e Returns the angle between provided point in space and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right. local angle = myObject : getViewToPoint ( point ) Parameters : point ( tes3vector3 ): The target point to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees. getViewToPointWithFacing \u2693\ufe0e Returns the angle between provided point in space and the actor's current position with provided facing (which effectively overrides the actor's facing used in other getViewTo methods). The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the provided facing angle with the origin in actor's position. local angle = myObject : getViewToPointWithFacing ( facing , point ) Parameters : facing (number): The facing angle in radians. The values should be in [0, PI] interval. point ( tes3vector3 ): The target point to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees. getWeaponSpeed \u2693\ufe0e Fetches the weapon speed of the actor's currently equipped weapon, or 1.0 if no weapon is equipped. local result = myObject : getWeaponSpeed () Returns : result (number) hasUsedPower \u2693\ufe0e Check if a power has been used and is recharging. local result = myObject : hasUsedPower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean) isAffectedByObject \u2693\ufe0e Determines if the actor is currently being affected by a given alchemy, enchantment, or spell. local result = myObject : isAffectedByObject ( object ) Parameters : object ( tes3alchemy , tes3enchantment , tes3spell ): The magic to check for. Returns : result (boolean) kill \u2693\ufe0e Kills the actor by setting its health to 0. myObject : kill () progressSkillLevelIfRequirementsMet \u2693\ufe0e Checks to see if a skill is ready to be leveled up, and performs any levelup logic. myObject : progressSkillLevelIfRequirementsMet ( skill ) Parameters : skill (integer): The skill index to check for leveling. Maps to values from tes3.skill table. progressSkillToNextLevel \u2693\ufe0e Increments the player's skill to the next level, while respecting all level up mechanics. local newLevel = myObject : progressSkillToNextLevel ( skill ) Parameters : skill (integer): The skill index to increase. Maps to values from tes3.skill table. Returns : newLevel (integer) rechargePower \u2693\ufe0e Makes a power immediately available for casting again. local result = myObject : rechargePower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean) setPowerUseTimestamp \u2693\ufe0e Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. myObject : setPowerUseTimestamp ( power , timestamp ) Parameters : power ( tes3spell ): The spell object for the power. timestamp (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . startCombat \u2693\ufe0e Forces the actor into combat with another actor. myObject : startCombat ( target ) Parameters : target ( tes3mobileActor ) startDialogue \u2693\ufe0e Starts dialogue with this actor for the player. myObject : startDialogue () stopCombat \u2693\ufe0e Ends combat for the actor. myObject : stopCombat ( force ) Parameters : force (boolean): If false , the function won't stop combat if the actor has other valid hostile targets. unequip \u2693\ufe0e Unequips one or more items from the actor. local itemUnequipped = myObject : unequip ({ item = ..., type = ..., armorSlot = ..., clothingSlot = ... }) Parameters : params (table) item ( tes3item , string): Optional . The item to unequip. type (number): Optional . The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from tes3.objectType can be passed here. armorSlot (number): Optional . The armor slot to unequip. Maps to values in tes3.armorSlot namespace. clothingSlot (number): Optional . The clothing slot to unequip. Maps to values in tes3.clothingSlot namespace Returns : itemUnequipped (boolean) unequipMagic \u2693\ufe0e Unequips the currently equipped magic, optionally unequipping the enchanted item if needed. myObject : unequipMagic ({ unequipItem = ..., updateGUI = ... }) Parameters : params (table): Optional . unequipItem (boolean): Default : false . Only valid if the currently equipped magic is from an equippable item enchantment. If true , the item containing the enchantment will be unequipped. updateGUI (boolean): Default : true . Only valid if this actor is the player. If false , the player GUI will not be updated to reflect the change to equipped magic. updateDerivedStatistics \u2693\ufe0e Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use tes3.modStatistic() . myObject : updateDerivedStatistics ( attribute ) Parameters : attribute ( tes3statistic ): Optional . Limits the update to statistics derived from this attribute. e.g. mobile:updateDerivedStatistics(mobile.strength) . If not present, all derived statistics will be updated. updateOpacity \u2693\ufe0e Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects. myObject : updateOpacity ()","title":"tes3mobilePlayer"},{"location":"types/tes3mobilePlayer/#tes3mobileplayer","text":"A mobile object for a the player. This type inherits the following: tes3mobileNPC , tes3mobileActor , tes3mobileObject","title":"tes3mobilePlayer"},{"location":"types/tes3mobilePlayer/#properties","text":"","title":"Properties"},{"location":"types/tes3mobilePlayer/#acrobatics","text":"Read-only . Direct access to the NPC's acrobatics skill statistic. Returns : result ( tes3statisticSkill )","title":"acrobatics"},{"location":"types/tes3mobilePlayer/#actionbeforecombat","text":"Read-only . Action data stored before the actor entered combat. Returns : result ( tes3actionData )","title":"actionBeforeCombat"},{"location":"types/tes3mobilePlayer/#actiondata","text":"Read-only . Current action data. Pre-combat action data is stored in the actionBeforeCombat property. Returns : result ( tes3actionData )","title":"actionData"},{"location":"types/tes3mobilePlayer/#activeai","text":"Friendly access to the actor's flag that controls if AI is active. Returns : result (boolean)","title":"activeAI"},{"location":"types/tes3mobilePlayer/#activemagiceffectlist","text":"Read-only . The active magic effects on the actor, from which all others can be accessed. A table with tes3activeMagicEffect items. Returns : result ( tes3activeMagicEffect [])","title":"activeMagicEffectList"},{"location":"types/tes3mobilePlayer/#actortype","text":"Read-only . The type of the mobile actor. Maps to values in tes3.actorType namespace. Returns : result (number)","title":"actorType"},{"location":"types/tes3mobilePlayer/#agility","text":"Read-only . Direct access to the actor's agility attribute statistic. Returns : result ( tes3statistic )","title":"agility"},{"location":"types/tes3mobilePlayer/#aiplanner","text":"Read-only . Access to the mobile's AI planner and AI package information. Doesn't exist on the player mobile. Returns : result ( tes3aiPlanner , nil)","title":"aiPlanner"},{"location":"types/tes3mobilePlayer/#alarm","text":"The actor's alarm AI value. Returns : result (number)","title":"alarm"},{"location":"types/tes3mobilePlayer/#alchemy","text":"Read-only . Direct access to the NPC's alchemy skill statistic. Returns : result ( tes3statisticSkill )","title":"alchemy"},{"location":"types/tes3mobilePlayer/#alteration","text":"Read-only . Direct access to the NPC's alteration skill statistic. Returns : result ( tes3statisticSkill )","title":"alteration"},{"location":"types/tes3mobilePlayer/#alwaysrun","text":"Toggle flag for if the player should always run. Returns : result (boolean)","title":"alwaysRun"},{"location":"types/tes3mobilePlayer/#animationcontroller","text":"Read-only . Access to the player's animation controller. Returns : result ( tes3playerAnimationController )","title":"animationController"},{"location":"types/tes3mobilePlayer/#armorer","text":"Read-only . Direct access to the NPC's armorer skill statistic. Returns : result ( tes3statisticSkill )","title":"armorer"},{"location":"types/tes3mobilePlayer/#armorrating","text":"Read-only . The actor's current armour rating, taking equipment condition into account. Armour mitigation can be automatically applied to damage by using the applyDamage function. Armour mitigation calculation: x = damage / (damage + target.armorRating) damage *= max(fCombatArmorMinMult, x) if damage < 1 then damage = 1 end Returns : result (number)","title":"armorRating"},{"location":"types/tes3mobilePlayer/#athletics","text":"Read-only . Direct access to the NPC's athletics skill statistic. Returns : result ( tes3statisticSkill )","title":"athletics"},{"location":"types/tes3mobilePlayer/#attackbonus","text":"Direct access to the actor's attack bonus effect attribute. Returns : result (number)","title":"attackBonus"},{"location":"types/tes3mobilePlayer/#attackdisabled","text":"Toggle flag for if the player can attack. Returns : result (boolean)","title":"attackDisabled"},{"location":"types/tes3mobilePlayer/#attacked","text":"Read-only . Friendly access to the actor's flag that controls if the actor has been attacked. Returns : result (boolean)","title":"attacked"},{"location":"types/tes3mobilePlayer/#attributes","text":"Read-only . Access to a table of 8 tes3statistic objects for the actor's attributes. Returns : result ( tes3statistic [])","title":"attributes"},{"location":"types/tes3mobilePlayer/#autorun","text":"Toggle flag for if the player should constantly run forward. Returns : result (boolean)","title":"autoRun"},{"location":"types/tes3mobilePlayer/#axe","text":"Read-only . Direct access to the NPC's axe skill statistic. Returns : result ( tes3statisticSkill )","title":"axe"},{"location":"types/tes3mobilePlayer/#bartergold","text":"The current amount of gold that the actor has access to for bartering. Returns : result (number)","title":"barterGold"},{"location":"types/tes3mobilePlayer/#birthsign","text":"Read-only . The player's birthsign. Returns : result ( tes3birthsign )","title":"birthsign"},{"location":"types/tes3mobilePlayer/#blind","text":"Direct access to the actor's blind effect attribute. Returns : result (number)","title":"blind"},{"location":"types/tes3mobilePlayer/#block","text":"Read-only . Direct access to the NPC's block skill statistic. Returns : result ( tes3statisticSkill )","title":"block"},{"location":"types/tes3mobilePlayer/#bluntweapon","text":"Read-only . Direct access to the NPC's blunt weapon skill statistic. Returns : result ( tes3statisticSkill )","title":"bluntWeapon"},{"location":"types/tes3mobilePlayer/#boundsize","text":"A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 )","title":"boundSize"},{"location":"types/tes3mobilePlayer/#boundsize2d","text":"A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 )","title":"boundSize2D"},{"location":"types/tes3mobilePlayer/#bounty","text":"The player's current bounty. Returns : result (number)","title":"bounty"},{"location":"types/tes3mobilePlayer/#cameraheight","text":"Access to the player camera height, used for both the first person and third person camera (specifically the orbit centre). It is normally placed at head height by the game, on loading, or when a race is selected. The camera height can be reset to its regular value by setting this property to nil . Returns : result (number) Example: Adjust the camera to match shrunken player scale local function shrink () -- Shrink player. tes3 . player . scale = 0.5 -- Reset camera height to default value. tes3 . mobilePlayer . cameraHeight = nil -- Modify camera height to match scale. tes3 . mobilePlayer . cameraHeight = tes3 . player . scale * tes3 . mobilePlayer . cameraHeight end local function unshrink () tes3 . player . scale = 1 tes3 . mobilePlayer . cameraHeight = nil end","title":"cameraHeight"},{"location":"types/tes3mobilePlayer/#canact","text":"Read-only . If true , the actor is able to freely execute actions like attacking or casting magic. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, drawing/sheathing their weapon, attacking, casting magic or using a lockpick or probe. Returns : result (boolean)","title":"canAct"},{"location":"types/tes3mobilePlayer/#canjump","text":"Read-only . If true , the actor is currently able to jump. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, jumping, falling, swimming or flying. Returns : result (boolean)","title":"canJump"},{"location":"types/tes3mobilePlayer/#canjumpmidair","text":"Read-only . If true , the actor is currently able to jump midair. This is equal to checking if the actor is not dead, knocked down, knocked out, paralyzed, swimming or flying. For more information on midair jumping see tes3mobileActor:doJump() . Returns : result (boolean)","title":"canJumpMidair"},{"location":"types/tes3mobilePlayer/#castready","text":"Toggle flag for if the player has casting ready. Returns : result (boolean)","title":"castReady"},{"location":"types/tes3mobilePlayer/#cell","text":"Read-only . Fetches the cell that the actor is in. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3mobilePlayer/#cellx","text":"Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellX"},{"location":"types/tes3mobilePlayer/#celly","text":"Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellY"},{"location":"types/tes3mobilePlayer/#chameleon","text":"Direct access to the actor's chameleon effect attribute. Returns : result (number)","title":"chameleon"},{"location":"types/tes3mobilePlayer/#clawmultiplier","text":"Read-only . Quick access to the ClawMultiplier global variable. Returns : result ( tes3globalVariable )","title":"clawMultiplier"},{"location":"types/tes3mobilePlayer/#collidingreference","text":"Read-only . The reference that the mobile has collided with this frame. Doesn't include actors and terrain. Returns : result ( tes3reference , nil)","title":"collidingReference"},{"location":"types/tes3mobilePlayer/#combatsession","text":"Read-only . Combat session data. This exists while the actor is in combat to provide memory for AI combat decisions. Doesn't exist on the player's mobile. Returns : result ( tes3combatSession , nil)","title":"combatSession"},{"location":"types/tes3mobilePlayer/#conjuration","text":"Read-only . Direct access to the NPC's conjuration skill statistic. Returns : result ( tes3statisticSkill )","title":"conjuration"},{"location":"types/tes3mobilePlayer/#controlsdisabled","text":"Toggle flag for if the player's controls are disabled. Returns : result (boolean)","title":"controlsDisabled"},{"location":"types/tes3mobilePlayer/#corpsehourstamp","text":"This is the time measured in hours from the beginning of the game when the actor died. Returns a UNIX-style timestamp based on in-world simulation time since the start of the era. For living actors this field has value a of 0 . Returns : result (number)","title":"corpseHourstamp"},{"location":"types/tes3mobilePlayer/#currentenchanteditem","text":"Read-only . The currently equipped enchanted item that the actor will use. Returns : result ( tes3equipmentStack , nil)","title":"currentEnchantedItem"},{"location":"types/tes3mobilePlayer/#currentspell","text":"Read-only . The currently equipped spell that the actor will use. Returns : result ( tes3spell )","title":"currentSpell"},{"location":"types/tes3mobilePlayer/#destruction","text":"Read-only . Direct access to the NPC's destruction skill statistic. Returns : result ( tes3statisticSkill )","title":"destruction"},{"location":"types/tes3mobilePlayer/#dialoguelist","text":"Read-only . Access to the collection that holds what dialogue topics the player has access to. Returns : result ( tes3dialogue [])","title":"dialogueList"},{"location":"types/tes3mobilePlayer/#effectattributes","text":"Read-only . Access to a table of 24 numbers for the actor's effect attributes. In order those are: attackBonus , sanctuary , resistMagicka , resistFire , resistFrost , resistShock , resistCommonDisease , resistBlightDisease , resistCorprus , resistPoison , resistParalysis , chameleon , resistNormalWeapons , waterBreathing , waterWalking , swiftSwim , jump , levitate , shield , sound , silence , blind , paralyze , and invisibility . Each of those can be accessed individually. For example, tes3mobileActor.chameleon . Returns : result (number[])","title":"effectAttributes"},{"location":"types/tes3mobilePlayer/#enchant","text":"Read-only . Direct access to the NPC's enchant skill statistic. Returns : result ( tes3statisticSkill )","title":"enchant"},{"location":"types/tes3mobilePlayer/#encumbrance","text":"Read-only . Access to the actor's encumbrance statistic. Returns : result ( tes3statistic )","title":"encumbrance"},{"location":"types/tes3mobilePlayer/#endurance","text":"Read-only . Direct access to the actor's endurance attribute statistic. Returns : result ( tes3statistic )","title":"endurance"},{"location":"types/tes3mobilePlayer/#facing","text":"Read-only . The facing of the actor, in radians. It corresponds to the mobile.reference.orientation.z . Facing of 0 corresponds to the in game North, facing of PI corresponds to the game South. It's in clockwise direction. Returns : result (number)","title":"facing"},{"location":"types/tes3mobilePlayer/#fatigue","text":"Read-only . Access to the actor's fatigue statistic. Returns : result ( tes3statistic )","title":"fatigue"},{"location":"types/tes3mobilePlayer/#fight","text":"The actor's fight AI value. Returns : result (number)","title":"fight"},{"location":"types/tes3mobilePlayer/#firstperson","text":"Read-only . Quick access to the first person NPC. Returns : result ( tes3npc )","title":"firstPerson"},{"location":"types/tes3mobilePlayer/#firstpersonreference","text":"Read-only . Quick access to the first person NPC's reference. Returns : result ( tes3reference )","title":"firstPersonReference"},{"location":"types/tes3mobilePlayer/#flags","text":"Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"flags"},{"location":"types/tes3mobilePlayer/#flee","text":"The actor's flee AI value. Returns : result (number)","title":"flee"},{"location":"types/tes3mobilePlayer/#flyspeed","text":"Read-only . The calculated fly movement speed. Returns : result (number)","title":"flySpeed"},{"location":"types/tes3mobilePlayer/#forcejump","text":"Toggle flag for if the NPC jumps. Returns : result (boolean)","title":"forceJump"},{"location":"types/tes3mobilePlayer/#forcemovejump","text":"Toggle flag for if the NPC moves and jumps. Returns : result (boolean)","title":"forceMoveJump"},{"location":"types/tes3mobilePlayer/#forcerun","text":"Toggle flag for if the NPC runs. Returns : result (boolean)","title":"forceRun"},{"location":"types/tes3mobilePlayer/#forcesneak","text":"Toggle flag for if the NPC sneaks. Returns : result (boolean)","title":"forceSneak"},{"location":"types/tes3mobilePlayer/#friendlyactors","text":"Read-only . A collection of other tes3mobileActor s that this actor considers friendly. Returns : result ( tes3mobileActor [])","title":"friendlyActors"},{"location":"types/tes3mobilePlayer/#greetduration","text":"No description yet available. Returns : result (number)","title":"greetDuration"},{"location":"types/tes3mobilePlayer/#greettimer","text":"Read-only . No description yet available. Returns : result (number)","title":"greetTimer"},{"location":"types/tes3mobilePlayer/#handtohand","text":"Read-only . Direct access to the NPC's hand to hand skill statistic. Returns : result ( tes3statisticSkill )","title":"handToHand"},{"location":"types/tes3mobilePlayer/#hasfreeaction","text":"Read-only . If true, the actor isn't knocked down or knocked out. Returns : result (boolean)","title":"hasFreeAction"},{"location":"types/tes3mobilePlayer/#health","text":"Read-only . Access to the actor's health statistic. Returns : result ( tes3statistic )","title":"health"},{"location":"types/tes3mobilePlayer/#heavyarmor","text":"Read-only . Direct access to the NPC's heavy armor skill statistic. Returns : result ( tes3statisticSkill )","title":"heavyArmor"},{"location":"types/tes3mobilePlayer/#height","text":"The height of the mobile above the ground. Returns : result (number)","title":"height"},{"location":"types/tes3mobilePlayer/#hello","text":"The actor's hello AI value. Returns : result (number)","title":"hello"},{"location":"types/tes3mobilePlayer/#holdbreathtime","text":"This is the time the actor can stay underwater without taking drowning damage, measured in seconds. It's starting value is fHoldBreathTime (GMST) seconds by default. Once the actor is underwater, this value is decreasing based on the time passed while underwater. The actor will start taking drowning damage once this time is below 0. During drowning this time will have more and more negative values based on the duration of the drowning. Changing this allows manipulating for how long the actor can stay underwater without drowning. Note that player's Breath HUD element won't show values larger than fHoldBreathTime . Returns : result (number)","title":"holdBreathTime"},{"location":"types/tes3mobilePlayer/#hostileactors","text":"Read-only . A collection of other tes3mobileActor s that this actor considers hostile. Returns : result ( tes3mobileActor [])","title":"hostileActors"},{"location":"types/tes3mobilePlayer/#idleanim","text":"Read-only . Friendly access to the actor's flag that controls if the actor is using their idle animation. Returns : result (boolean)","title":"idleAnim"},{"location":"types/tes3mobilePlayer/#illusion","text":"Read-only . Direct access to the NPC's illusion skill statistic. Returns : result ( tes3statisticSkill )","title":"illusion"},{"location":"types/tes3mobilePlayer/#impulsevelocity","text":"A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 )","title":"impulseVelocity"},{"location":"types/tes3mobilePlayer/#inactivitytime","text":"The time that the player has spent inactive. Returns : result (number)","title":"inactivityTime"},{"location":"types/tes3mobilePlayer/#incombat","text":"Read-only . Friendly access to the actor's flag that controls if the actor is in combat. Returns : result (boolean)","title":"inCombat"},{"location":"types/tes3mobilePlayer/#injail","text":"Toggle flag for if the player is currently in jail. Returns : result (boolean)","title":"inJail"},{"location":"types/tes3mobilePlayer/#intelligence","text":"Read-only . Direct access to the actor's intelligence attribute statistic. Returns : result ( tes3statistic )","title":"intelligence"},{"location":"types/tes3mobilePlayer/#inventory","text":"Read-only . Access to the items the mobile object has in its inventory. Returns : result ( tes3itemStack [])","title":"inventory"},{"location":"types/tes3mobilePlayer/#invisibility","text":"Direct access to the actor's invisibility effect attribute. Returns : result (number)","title":"invisibility"},{"location":"types/tes3mobilePlayer/#is3rdperson","text":"Read-only . Shows if the player's camera is currently in 3rd person view. Returns : result (boolean)","title":"is3rdPerson"},{"location":"types/tes3mobilePlayer/#isaffectedbygravity","text":"If true , the mobile is affected by gravity. Does not have any effect on spell projectiles. Returns : result (boolean)","title":"isAffectedByGravity"},{"location":"types/tes3mobilePlayer/#isattackingorcasting","text":"Read-only . If true , the actor is attacking, casting magic or using a lockpick or probe. Returns : result (boolean)","title":"isAttackingOrCasting"},{"location":"types/tes3mobilePlayer/#iscrittable","text":"Read-only . Friendly access to the actor's flag that controls if the actor can be critically hit. Returns : result (boolean)","title":"isCrittable"},{"location":"types/tes3mobilePlayer/#isdead","text":"Read-only . True if the actor is dead. Returns : result (boolean)","title":"isDead"},{"location":"types/tes3mobilePlayer/#isdiseased","text":"Read-only . True if the actor is has a disease effect. This counts normal, blight, and corprus effects. Returns : result (boolean)","title":"isDiseased"},{"location":"types/tes3mobilePlayer/#isfalling","text":"Direct access to the actor's current movement flags, showing if the actor is falling. This is when the actor is falling without having jumped, e.g. if they walked off a ledge. Returns : result (boolean)","title":"isFalling"},{"location":"types/tes3mobilePlayer/#isflying","text":"Direct access to the actor's current movement flags, showing if the actor is flying. Returns : result (boolean)","title":"isFlying"},{"location":"types/tes3mobilePlayer/#isjumping","text":"Direct access to the actor's current movement flags, showing if the actor is jumping. Returns : result (boolean)","title":"isJumping"},{"location":"types/tes3mobilePlayer/#isknockeddown","text":"Read-only . If true , the actor is knocked down. An actor can be knocked down after being attacked or falling. Returns : result (boolean)","title":"isKnockedDown"},{"location":"types/tes3mobilePlayer/#isknockedout","text":"Read-only . If true , the actor is knocked out. An actor can be knocked out if their fatigue has been reduced below zero. Returns : result (boolean)","title":"isKnockedOut"},{"location":"types/tes3mobilePlayer/#ismovingback","text":"Direct access to the actor's current movement flags, showing if the actor is moving backwards. Returns : result (boolean)","title":"isMovingBack"},{"location":"types/tes3mobilePlayer/#ismovingforward","text":"Direct access to the actor's current movement flags, showing if the actor is moving forwards. Returns : result (boolean)","title":"isMovingForward"},{"location":"types/tes3mobilePlayer/#ismovingleft","text":"Direct access to the actor's current movement flags, showing if the actor is moving left. Returns : result (boolean)","title":"isMovingLeft"},{"location":"types/tes3mobilePlayer/#ismovingright","text":"Direct access to the actor's current movement flags, showing if the actor is moving right. Returns : result (boolean)","title":"isMovingRight"},{"location":"types/tes3mobilePlayer/#isparalyzed","text":"Read-only . If true , the actor is affected by the magic effect paralyze. Returns : result (boolean)","title":"isParalyzed"},{"location":"types/tes3mobilePlayer/#isplayerdetected","text":"Direct access to the actor's flag showing the player was detected on the last detection check. Returns : result (boolean)","title":"isPlayerDetected"},{"location":"types/tes3mobilePlayer/#isplayerhidden","text":"Direct access to the actor's flag showing the player was hidden on the last detection check. Returns : result (boolean)","title":"isPlayerHidden"},{"location":"types/tes3mobilePlayer/#isreadyingweapon","text":"Read-only . If true , the actor is drawing or sheathing their weapon. Returns : result (boolean)","title":"isReadyingWeapon"},{"location":"types/tes3mobilePlayer/#isrunning","text":"Direct access to the actor's current movement flags, showing if the actor is running. Returns : result (boolean)","title":"isRunning"},{"location":"types/tes3mobilePlayer/#issneaking","text":"Direct access to the actor's current movement flags, showing if the actor is sneaking. Returns : result (boolean)","title":"isSneaking"},{"location":"types/tes3mobilePlayer/#isswimming","text":"Direct access to the actor's current movement flags, showing if the actor is swimming. Returns : result (boolean)","title":"isSwimming"},{"location":"types/tes3mobilePlayer/#isturningleft","text":"Direct access to the actor's current movement flags, showing if the actor is turning left. Returns : result (boolean)","title":"isTurningLeft"},{"location":"types/tes3mobilePlayer/#isturningright","text":"Direct access to the actor's current movement flags, showing if the actor is turning right. Returns : result (boolean)","title":"isTurningRight"},{"location":"types/tes3mobilePlayer/#iswalking","text":"Direct access to the actor's current movement flags, showing if the actor is walking. Returns : result (boolean)","title":"isWalking"},{"location":"types/tes3mobilePlayer/#jump","text":"Direct access to the actor's jump effect attribute. Returns : result (number)","title":"jump"},{"location":"types/tes3mobilePlayer/#jumpingdisabled","text":"Toggle flag for if the player can jump. Returns : result (boolean)","title":"jumpingDisabled"},{"location":"types/tes3mobilePlayer/#knownwerewolf","text":"Read-only . Quick access to the KnownWerewolf global variable. Returns : result ( tes3globalVariable )","title":"knownWerewolf"},{"location":"types/tes3mobilePlayer/#lastgroundz","text":"This has a large negative value if the actor is on the ground. When the actor jumps, this will have a positive value. During jump event this value is still negative. A split second after, it will have the value of the .z coordinate when the actor was on the ground. Beware that this value changes after some amount of time while the actors is in the air. Returns : result (number)","title":"lastGroundZ"},{"location":"types/tes3mobilePlayer/#lastusedalembic","text":"Read-only . The last used alchemy alembic. Returns : result ( tes3apparatus )","title":"lastUsedAlembic"},{"location":"types/tes3mobilePlayer/#lastusedammocount","text":"The amount of ammo for the ranged weapon that that was last equipped. Returns : result (number)","title":"lastUsedAmmoCount"},{"location":"types/tes3mobilePlayer/#lastusedcalcinator","text":"Read-only . The last used alchemy calcinator. Returns : result ( tes3apparatus )","title":"lastUsedCalcinator"},{"location":"types/tes3mobilePlayer/#lastusedmortar","text":"Read-only . The last used alchemy mortar. Returns : result ( tes3apparatus )","title":"lastUsedMortar"},{"location":"types/tes3mobilePlayer/#lastusedretort","text":"Read-only . The last used alchemy retort. Returns : result ( tes3apparatus )","title":"lastUsedRetort"},{"location":"types/tes3mobilePlayer/#levelupperspecialization","text":"Read-only . Array-style table access to how many skill levels there have been for each of the 3 specializations. Returns : result (number[])","title":"levelupPerSpecialization"},{"location":"types/tes3mobilePlayer/#levelupprogress","text":"The progress the player has made towards leveling up. Equal to the total amount of Minor and Major skill increases during the current level. This value can be larger than 10. Returns : result (integer)","title":"levelUpProgress"},{"location":"types/tes3mobilePlayer/#levelupsperattribute","text":"Read-only . Array-style table access to how many skill levels there have been for each of the 8 attributes. Returns : result (number[])","title":"levelupsPerAttribute"},{"location":"types/tes3mobilePlayer/#levitate","text":"Direct access to the actor's levitate effect attribute. Returns : result (number)","title":"levitate"},{"location":"types/tes3mobilePlayer/#lightarmor","text":"Read-only . Direct access to the NPC's light armor skill statistic. Returns : result ( tes3statisticSkill )","title":"lightArmor"},{"location":"types/tes3mobilePlayer/#longblade","text":"Read-only . Direct access to the NPC's long blade skill statistic. Returns : result ( tes3statisticSkill )","title":"longBlade"},{"location":"types/tes3mobilePlayer/#luck","text":"Read-only . Direct access to the actor's luck attribute statistic. Returns : result ( tes3statistic )","title":"luck"},{"location":"types/tes3mobilePlayer/#magicdisabled","text":"Toggle flag for if the player can use magic. Returns : result (boolean)","title":"magicDisabled"},{"location":"types/tes3mobilePlayer/#magicka","text":"Read-only . Access to the actor's magicka statistic. Returns : result ( tes3statistic )","title":"magicka"},{"location":"types/tes3mobilePlayer/#magickamultiplier","text":"Read-only . Access to the actor's magicka multiplier statistic. Returns : result ( tes3statistic )","title":"magickaMultiplier"},{"location":"types/tes3mobilePlayer/#marklocation","text":"Read-only . Access to the structure that holds the player's current mark/recall location. Returns : result ( tes3markData )","title":"markLocation"},{"location":"types/tes3mobilePlayer/#marksman","text":"Read-only . Direct access to the NPC's marksman skill statistic. Returns : result ( tes3statisticSkill )","title":"marksman"},{"location":"types/tes3mobilePlayer/#mediumarmor","text":"Read-only . Direct access to the NPC's medium armor skill statistic. Returns : result ( tes3statisticSkill )","title":"mediumArmor"},{"location":"types/tes3mobilePlayer/#mercantile","text":"Read-only . Direct access to the NPC's mercantile skill statistic. Returns : result ( tes3statisticSkill )","title":"mercantile"},{"location":"types/tes3mobilePlayer/#mobtomobcollision","text":"Allows modifying if this actor will collide with other actors. When true (default), the actor cannot move through other actors. When false , the actor is allowed to move through other actors, and other actors can move through it. May be useful when free movement is required in crowded situations, or to temporarily let the player move past an actor. Returns : result (boolean)","title":"mobToMobCollision"},{"location":"types/tes3mobilePlayer/#mouselookdisabled","text":"Toggle flag for if the player's mouse look controls are disabled. Returns : result (boolean)","title":"mouseLookDisabled"},{"location":"types/tes3mobilePlayer/#movementcollision","text":"Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean)","title":"movementCollision"},{"location":"types/tes3mobilePlayer/#movementflags","text":"Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"movementFlags"},{"location":"types/tes3mobilePlayer/#movespeed","text":"Read-only . The calculated base movement speed. Returns : result (number)","title":"moveSpeed"},{"location":"types/tes3mobilePlayer/#mysticism","text":"Read-only . Direct access to the NPC's mysticism skill statistic. Returns : result ( tes3statisticSkill )","title":"mysticism"},{"location":"types/tes3mobilePlayer/#nextactionweight","text":"Read-only . No description yet available. Returns : result (number)","title":"nextActionWeight"},{"location":"types/tes3mobilePlayer/#object","text":"Read-only . The actor object that maps to this mobile. Returns : result ( tes3npcInstance )","title":"object"},{"location":"types/tes3mobilePlayer/#objecttype","text":"Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number)","title":"objectType"},{"location":"types/tes3mobilePlayer/#paralyze","text":"Direct access to the actor's paralyze effect attribute. Returns : result (number)","title":"paralyze"},{"location":"types/tes3mobilePlayer/#personality","text":"Read-only . Direct access to the actor's personality attribute statistic. Returns : result ( tes3statistic )","title":"personality"},{"location":"types/tes3mobilePlayer/#playerdistance","text":"The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number)","title":"playerDistance"},{"location":"types/tes3mobilePlayer/#position","text":"A vector that represents the 3D position of the object. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3mobilePlayer/#prevmovementflags","text":"Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"prevMovementFlags"},{"location":"types/tes3mobilePlayer/#readiedammo","text":"The currently equipped ammo, if any. Returns : result ( tes3equipmentStack , nil)","title":"readiedAmmo"},{"location":"types/tes3mobilePlayer/#readiedammocount","text":"The number of ammo equipped for the readied ammo. Returns : result (integer)","title":"readiedAmmoCount"},{"location":"types/tes3mobilePlayer/#readiedshield","text":"The currently equipped shield, if any. Returns : result ( tes3equipmentStack , nil)","title":"readiedShield"},{"location":"types/tes3mobilePlayer/#readiedweapon","text":"The currently equipped weapon, if any. Returns : result ( tes3equipmentStack , nil)","title":"readiedWeapon"},{"location":"types/tes3mobilePlayer/#reference","text":"Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3mobilePlayer/#resistblightdisease","text":"Direct access to the actor's blight disease resistance effect attribute. Returns : result (number)","title":"resistBlightDisease"},{"location":"types/tes3mobilePlayer/#resistcommondisease","text":"Direct access to the actor's common disease resistance effect attribute. Returns : result (number)","title":"resistCommonDisease"},{"location":"types/tes3mobilePlayer/#resistcorprus","text":"Direct access to the actor's corprus disease resistance effect attribute. Returns : result (number)","title":"resistCorprus"},{"location":"types/tes3mobilePlayer/#resistfire","text":"Direct access to the actor's fire resistance effect attribute. Returns : result (number)","title":"resistFire"},{"location":"types/tes3mobilePlayer/#resistfrost","text":"Direct access to the actor's frost resistance effect attribute. Returns : result (number)","title":"resistFrost"},{"location":"types/tes3mobilePlayer/#resistmagicka","text":"Direct access to the actor's magicka resistance effect attribute. Returns : result (number)","title":"resistMagicka"},{"location":"types/tes3mobilePlayer/#resistnormalweapons","text":"Direct access to the actor's normal weapon resistance effect attribute. Returns : result (number)","title":"resistNormalWeapons"},{"location":"types/tes3mobilePlayer/#resistparalysis","text":"Direct access to the actor's paralysis resistance effect attribute. Returns : result (number)","title":"resistParalysis"},{"location":"types/tes3mobilePlayer/#resistpoison","text":"Direct access to the actor's poison resistance effect attribute. Returns : result (number)","title":"resistPoison"},{"location":"types/tes3mobilePlayer/#resistshock","text":"Direct access to the actor's shock resistance effect attribute. Returns : result (number)","title":"resistShock"},{"location":"types/tes3mobilePlayer/#resthoursremaining","text":"How many hours are left while resting. Returns : result (integer)","title":"restHoursRemaining"},{"location":"types/tes3mobilePlayer/#restoration","text":"Read-only . Direct access to the NPC's restoration skill statistic. Returns : result ( tes3statisticSkill )","title":"restoration"},{"location":"types/tes3mobilePlayer/#runspeed","text":"Read-only . The calculated run movement speed. Returns : result (number)","title":"runSpeed"},{"location":"types/tes3mobilePlayer/#sanctuary","text":"Direct access to the actor's sanctuary effect attribute. Returns : result (number)","title":"sanctuary"},{"location":"types/tes3mobilePlayer/#scaninterval","text":"The time interval in seconds between specific actor AI checks. These checks include checking for hostile actors and engaging combat, as well as checking if the actor should equip a light source if it is too dark. The specified time in seconds will always be increased by one second when checking, therefore a value of 0.0 will actually cause the actor AI checks to occur every second instead of every frame. Setting this to lower values than the default increases the impact on performance. The default value for a newly created actor depends on the total amount of all currently active tes3aiPlanner , meaning the checks will be executed at different intervals for each actor. Returns : result (number)","title":"scanInterval"},{"location":"types/tes3mobilePlayer/#scantimer","text":"Read-only . The time in seconds since the last time the checks specified in scanInterval were executed. Returns : result (number)","title":"scanTimer"},{"location":"types/tes3mobilePlayer/#security","text":"Read-only . Direct access to the NPC's security skill statistic. Returns : result ( tes3statisticSkill )","title":"security"},{"location":"types/tes3mobilePlayer/#shield","text":"Direct access to the actor's shield effect attribute. Returns : result (number)","title":"shield"},{"location":"types/tes3mobilePlayer/#shortblade","text":"Read-only . Direct access to the NPC's short blade skill statistic. Returns : result ( tes3statisticSkill )","title":"shortBlade"},{"location":"types/tes3mobilePlayer/#silence","text":"Direct access to the actor's silence effect attribute. Returns : result (number)","title":"silence"},{"location":"types/tes3mobilePlayer/#skillprogress","text":"Read-only . Array-style table access to skill progress for each of the 27 skills. Attention The first index in the array is 1, but skill indices in tes3.skill table start from 0. Returns : result (number[])","title":"skillProgress"},{"location":"types/tes3mobilePlayer/#skills","text":"Read-only . An array-style table with access to the twenty seven NPC skill statistics ( tes3statisticSkill ). Returns : result ( tes3statisticSkill [])","title":"skills"},{"location":"types/tes3mobilePlayer/#sleeping","text":"Toggle flag for if the player is currently sleeping. Returns : result (boolean)","title":"sleeping"},{"location":"types/tes3mobilePlayer/#sneak","text":"Read-only . Direct access to the NPC's sneak skill statistic. Returns : result ( tes3statisticSkill )","title":"sneak"},{"location":"types/tes3mobilePlayer/#sound","text":"Direct access to the actor's sound effect attribute. Returns : result (number)","title":"sound"},{"location":"types/tes3mobilePlayer/#spear","text":"Read-only . Direct access to the NPC's spear skill statistic. Returns : result ( tes3statisticSkill )","title":"spear"},{"location":"types/tes3mobilePlayer/#speechcraft","text":"Read-only . Direct access to the NPC's speechcraft skill statistic. Returns : result ( tes3statisticSkill )","title":"speechcraft"},{"location":"types/tes3mobilePlayer/#speed","text":"Read-only . Direct access to the actor's speed attribute statistic. Returns : result ( tes3statistic )","title":"speed"},{"location":"types/tes3mobilePlayer/#spellreadied","text":"Read-only . Friendly access to the actor's flag that controls if the actor has a spell readied. Returns : result (boolean)","title":"spellReadied"},{"location":"types/tes3mobilePlayer/#strength","text":"Read-only . Direct access to the actor's strength attribute statistic. Returns : result ( tes3statistic )","title":"strength"},{"location":"types/tes3mobilePlayer/#swiftswim","text":"Direct access to the actor's swift swim effect attribute. Returns : result (number)","title":"swiftSwim"},{"location":"types/tes3mobilePlayer/#swimrunspeed","text":"Read-only . The calculated swim movement speed while running. Returns : result (number)","title":"swimRunSpeed"},{"location":"types/tes3mobilePlayer/#swimspeed","text":"Read-only . The calculated swim movement speed. Returns : result (number)","title":"swimSpeed"},{"location":"types/tes3mobilePlayer/#talkedto","text":"Direct access to the actor's flag that shows it was recently talked to. Returns : result (boolean)","title":"talkedTo"},{"location":"types/tes3mobilePlayer/#telekinesis","text":"Direct access to the player's telekinesis effect attribute. Returns : result (number)","title":"telekinesis"},{"location":"types/tes3mobilePlayer/#torchslot","text":"The currently equipped light. Returns : result ( tes3equipmentStack )","title":"torchSlot"},{"location":"types/tes3mobilePlayer/#traveling","text":"Toggle flag for if the player is currently travelling. Returns : result (boolean)","title":"traveling"},{"location":"types/tes3mobilePlayer/#unarmored","text":"Read-only . Direct access to the NPC's unarmored skill statistic. Returns : result ( tes3statisticSkill )","title":"unarmored"},{"location":"types/tes3mobilePlayer/#underwater","text":"Read-only . Friendly access to the actor's flag that controls if the actor is under water. Returns : result (boolean)","title":"underwater"},{"location":"types/tes3mobilePlayer/#vanitydisabled","text":"Toggle flag for if the player's vanity camera is disabled. Returns : result (boolean)","title":"vanityDisabled"},{"location":"types/tes3mobilePlayer/#velocity","text":"A vector that represents the 3D velocity of the object. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/tes3mobilePlayer/#viewswitchdisabled","text":"Toggle flag for if the player can switch between first person and vanity cameras. Returns : result (boolean)","title":"viewSwitchDisabled"},{"location":"types/tes3mobilePlayer/#visionbonus","text":"Direct access to the player's vision bonus effect attribute. Returns : result (number)","title":"visionBonus"},{"location":"types/tes3mobilePlayer/#waiting","text":"Toggle flag for if the player is currently waiting. Returns : result (boolean)","title":"waiting"},{"location":"types/tes3mobilePlayer/#walkspeed","text":"Read-only . The calculated walk movement speed. Returns : result (number)","title":"walkSpeed"},{"location":"types/tes3mobilePlayer/#waterbreathing","text":"Direct access to the actor's water breathing effect attribute. Returns : result (number)","title":"waterBreathing"},{"location":"types/tes3mobilePlayer/#waterwalking","text":"Direct access to the actor's water walking effect attribute. Returns : result (number)","title":"waterWalking"},{"location":"types/tes3mobilePlayer/#weapondrawn","text":"Read-only . Friendly access to the actor's flag that shows if the weapon model is visible. When readying a weapon, there is a short period of time at the start of the animation, where the weapon is not visible yet. This flag will only be set after this initial stage is done. This flag is still set with hand-to-hand even though it doesn't use a model. Setting this to false while a weapon is drawn will normally cause the actor to play its weapon draw animation again. Returns : result (boolean)","title":"weaponDrawn"},{"location":"types/tes3mobilePlayer/#weaponready","text":"A flag for if the player has a weapon ready or being readied (visible and held in the hand). Setting it to true will cause the player to take out their weapon. Setting it to false will cause the player to put it away. Returns : result (boolean)","title":"weaponReady"},{"location":"types/tes3mobilePlayer/#werewolf","text":"Read-only . Friendly access to the actor's flag that controls if the actor in werewolf form. Returns : result (boolean)","title":"werewolf"},{"location":"types/tes3mobilePlayer/#width","text":"Read-only . No description yet available. Returns : result (number)","title":"width"},{"location":"types/tes3mobilePlayer/#willpower","text":"Read-only . Direct access to the actor's willpower attribute statistic. Returns : result ( tes3statistic )","title":"willpower"},{"location":"types/tes3mobilePlayer/#methods","text":"","title":"Methods"},{"location":"types/tes3mobilePlayer/#applydamage","text":"Damages the actor, with options to control mitigation and difficulty scaling. Invokes the damage and damaged events, with tes3.damageSource.script source. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = myObject : applyDamage ({ damage = ..., applyArmor = ..., resistAttribute = ..., applyDifficulty = ..., playerAttack = ..., doNotChangeHealth = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Default : false . If armor should mitigate the incoming damage. If the player is the target, armor experience will be gained. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. applyDifficulty (boolean): Default : false . If the game difficulty modifier should be applied. Must be used with the playerAttack argument to apply the correct modifier. playerAttack (boolean): Optional . If the attack came from the player. Used for difficulty calculation. doNotChangeHealth (boolean): Default : false . If all armor effects except the health change should be applied. These include hit sounds, armor condition damage, and player experience gain from being hit. Returns : result (number)","title":"applyDamage"},{"location":"types/tes3mobilePlayer/#applyfatiguedamage","text":"Damages the actor's fatigue, with accompanying reaction from the reciever. Invokes the damageHandToHand and damagedHandToHand events, with tes3.damageSource.script source. Returns the actual fatigue damage done. local result = myObject : applyFatigueDamage ( fatigueDamage , swing , alwaysPlayHitVoice ) Parameters : fatigueDamage (number): The amount of fatigue damage to apply. swing (number): Optional . The attack swing magnitude, range 0-1. Only modifies hit volume. alwaysPlayHitVoice (boolean): Optional . Always play the hit reaction voiceover. Returns : result (number)","title":"applyFatigueDamage"},{"location":"types/tes3mobilePlayer/#applyjumpfatiguecost","text":"Reduces the actor's current fatigue by the amount a regular jump would currently cost. myObject : applyJumpFatigueCost ()","title":"applyJumpFatigueCost"},{"location":"types/tes3mobilePlayer/#calceffectivedamage","text":"Calculates the damage that would be inflicted to an actor after armor and/or resistance. Returns the actual damage done after armor mitigation and resistance, but before difficulty scaling. local result = myObject : calcEffectiveDamage ({ damage = ..., applyArmor = ..., resistAttribute = ... }) Parameters : params (table) damage (number): The amount of damage to apply. applyArmor (boolean): Default : false . If armor should mitigate the incoming damage. resistAttribute (number): Optional . The resistance attribute that is applied to the damage. It can reduce damage or exploit weakness. Uses values from tes3.effectAttribute namespace. Returns : result (number)","title":"calcEffectiveDamage"},{"location":"types/tes3mobilePlayer/#calculatejumpvelocity","text":"Calculates the starting velocity of a jump. local result = myObject : calculateJumpVelocity ({ direction = ... }) Parameters : params (table): Optional . direction ( tes3vector2 ): Optional . The ground direction vector used to calculate the velocity. If not specified, a zero-length direction vector for a regular jump without movement will be used. Returns : result ( tes3vector3 )","title":"calculateJumpVelocity"},{"location":"types/tes3mobilePlayer/#dojump","text":"Forces the actor to jump. If velocity or other parameters with non-default values are specified it will be treated as a non-default jump during the jump event. Returns false if the actor is currently unable to jump or the jump has been cancelled, otherwise returns true . local result = myObject : doJump ({ velocity = ..., applyFatigueCost = ..., allowMidairJumping = ... }) Parameters : params (table): Optional . velocity ( tes3vector3 ): Optional . The initial velocity of the jump. If not specified, the velocity of a regular jump without movement will be used. applyFatigueCost (boolean): Default : true . If true , reduces the actor's current fatigue by the amount a regular jump would currently cost. Will not reduce fatigue if false . allowMidairJumping (boolean): Default : false . If true , enables the jump to be performed while already jumping or falling. Does not work during levitation or other methods of flying. Returns : result (boolean)","title":"doJump"},{"location":"types/tes3mobilePlayer/#equip","text":"Equips an item, optionally adding the item if needed. If the best match is already equipped, it does not perform an unequip-equip cycle, but does return true . local itemEquipped = myObject : equip ({ item = ..., itemData = ..., addItem = ..., selectBestCondition = ..., selectWorstCondition = ... }) Parameters : params (table) item ( tes3item , string): The item to equip. itemData ( tes3itemData ): Optional . The item data of the specific item to equip. addItem (boolean): Default : false . If true , the item will be added to the actor's inventory if needed. selectBestCondition (boolean): Default : false . If true , the item in the inventory with the best condition and best charge will be selected. selectWorstCondition (boolean): Default : false . If true , the item in the inventory with the worst condition and worst charge will be selected. Can be useful for selecting tools. Returns : itemEquipped (boolean)","title":"equip"},{"location":"types/tes3mobilePlayer/#equipmagic","text":"Equips a spell or enchantment, optionally equipping the enchanted item if needed. Returns false if the item could not be equipped. local result = myObject : equipMagic ({ source = ..., itemData = ..., equipItem = ..., updateGUI = ... }) Parameters : params (table) source ( tes3spell , tes3item , string): The source of the magic to equip. Spells must be castable. Castable spells have a castType of tes3.spellType.spell or tes3.spellType.power . The actor is not required to know this spell. Items must have a castable enchantment. Castable enchantments have a castType of tes3.enchantmentType.onUse or tes3.enchantmentType.castOnce . The actor is not required to have this item in their inventory, unless equipItem is true . itemData ( tes3itemData ): Optional . Only valid if an item has been assigned to source . The item data of the specific item to equip. equipItem (boolean): Default : false . Only valid if an item has been assigned to source . If true , the item assigned to source will be equipped. Requires the actor to have the item in their inventory. If false , itemData must not be nil. updateGUI (boolean): Default : true . Only valid if this actor is the player. If false , the player GUI will not be updated to reflect the change to equipped magic. Returns : result (boolean)","title":"equipMagic"},{"location":"types/tes3mobilePlayer/#exerciseskill","text":"Exercises a skill, providing experience in it. Invokes exerciseSkill event. myObject : exerciseSkill ( skill , progress ) Parameters : skill (integer): The skill index to give experience to. Maps to values from tes3.skill table. progress (number): The amount of experience to grant.","title":"exerciseSkill"},{"location":"types/tes3mobilePlayer/#getactivemagiceffects","text":"Fetches a filtered list of the active magic effects on the actor. local result = myObject : getActiveMagicEffects ({ effect = ..., serial = ... }) Parameters : params (table): Optional . effect (integer): Optional . The magic effect ID to search for, from tes3.effect table. serial (integer): Optional . The magic instance serial to search for. Returns : result ( tes3activeMagicEffect [])","title":"getActiveMagicEffects"},{"location":"types/tes3mobilePlayer/#getbootsweight","text":"Read-only . Gets the weight of the boots equipped on the actor, or 0 if no boots are equipped. local result = myObject : getBootsWeight () Returns : result (number)","title":"getBootsWeight"},{"location":"types/tes3mobilePlayer/#getfatigueterm","text":"Gets the fatigue-based skill scaling term used by many game mechanics, based on the actor's current and maximum fatigue. It is equal to max(0, fFatigueBase - fFatigueMult * max(0, 1 - fatigue.current/fatigue.base)) local result = myObject : getFatigueTerm () Returns : result (number)","title":"getFatigueTerm"},{"location":"types/tes3mobilePlayer/#getpowerusetimestamp","text":"Finds the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() . local timestamp = myObject : getPowerUseTimestamp ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : timestamp (number)","title":"getPowerUseTimestamp"},{"location":"types/tes3mobilePlayer/#getskillprogressrequirement","text":"Returns the total progress needed to progress the skill to the next level. The actual amount of progress needed is the floor of the value returned by this function. local progressNeeded = myObject : getSkillProgressRequirement ( skill ) Parameters : skill (integer): The skill index to check. Maps to values from tes3.skill table. Returns : progressNeeded (number)","title":"getSkillProgressRequirement"},{"location":"types/tes3mobilePlayer/#getskillstatistic","text":"Fetches the statistic object of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = myObject : getSkillStatistic ( skillId ) Parameters : skillId (number): The index of the skill statistic to fetch. Maps to values in tes3.skill namespace. Returns : result ( tes3statisticSkill )","title":"getSkillStatistic"},{"location":"types/tes3mobilePlayer/#getskillvalue","text":"Fetches the current value of a skill with a given index. This is the way to access skills for any type of actor, as creatures have a limited version of the skill system. Note that creatures share a statistic between multiple skills (they only have combat, magic, and stealth stats), so many values will be the same. local result = myObject : getSkillValue ( skillId ) Parameters : skillId (number): The index of the skill statistic's value to fetch. Maps to values in tes3.skill namespace. Returns : result (number)","title":"getSkillValue"},{"location":"types/tes3mobilePlayer/#getviewtoactor","text":"Returns the angle between provided actor and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right. local angle = myObject : getViewToActor ( mobile ) Parameters : mobile ( tes3mobileActor ): The target actor to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees.","title":"getViewToActor"},{"location":"types/tes3mobilePlayer/#getviewtopoint","text":"Returns the angle between provided point in space and the front side of the actor on whom the method was called. The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the actor, the negative values are on the actor's left side, and positive values on the actor's right. local angle = myObject : getViewToPoint ( point ) Parameters : point ( tes3vector3 ): The target point to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees.","title":"getViewToPoint"},{"location":"types/tes3mobilePlayer/#getviewtopointwithfacing","text":"Returns the angle between provided point in space and the actor's current position with provided facing (which effectively overrides the actor's facing used in other getViewTo methods). The returned angle is in degress in range [-180, 180], where 0 degrees is directly in front of the provided facing angle with the origin in actor's position. local angle = myObject : getViewToPointWithFacing ( facing , point ) Parameters : facing (number): The facing angle in radians. The values should be in [0, PI] interval. point ( tes3vector3 ): The target point to calculate the facing angle. Returns : angle (number): In range of [-180, 180] in degrees.","title":"getViewToPointWithFacing"},{"location":"types/tes3mobilePlayer/#getweaponspeed","text":"Fetches the weapon speed of the actor's currently equipped weapon, or 1.0 if no weapon is equipped. local result = myObject : getWeaponSpeed () Returns : result (number)","title":"getWeaponSpeed"},{"location":"types/tes3mobilePlayer/#hasusedpower","text":"Check if a power has been used and is recharging. local result = myObject : hasUsedPower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean)","title":"hasUsedPower"},{"location":"types/tes3mobilePlayer/#isaffectedbyobject","text":"Determines if the actor is currently being affected by a given alchemy, enchantment, or spell. local result = myObject : isAffectedByObject ( object ) Parameters : object ( tes3alchemy , tes3enchantment , tes3spell ): The magic to check for. Returns : result (boolean)","title":"isAffectedByObject"},{"location":"types/tes3mobilePlayer/#kill","text":"Kills the actor by setting its health to 0. myObject : kill ()","title":"kill"},{"location":"types/tes3mobilePlayer/#progressskilllevelifrequirementsmet","text":"Checks to see if a skill is ready to be leveled up, and performs any levelup logic. myObject : progressSkillLevelIfRequirementsMet ( skill ) Parameters : skill (integer): The skill index to check for leveling. Maps to values from tes3.skill table.","title":"progressSkillLevelIfRequirementsMet"},{"location":"types/tes3mobilePlayer/#progressskilltonextlevel","text":"Increments the player's skill to the next level, while respecting all level up mechanics. local newLevel = myObject : progressSkillToNextLevel ( skill ) Parameters : skill (integer): The skill index to increase. Maps to values from tes3.skill table. Returns : newLevel (integer)","title":"progressSkillToNextLevel"},{"location":"types/tes3mobilePlayer/#rechargepower","text":"Makes a power immediately available for casting again. local result = myObject : rechargePower ( power ) Parameters : power ( tes3spell ): The spell object for the power. Returns : result (boolean)","title":"rechargePower"},{"location":"types/tes3mobilePlayer/#setpowerusetimestamp","text":"Sets the timestamp a recharging power was used. Powers recharge 24 hours after this timestamp. myObject : setPowerUseTimestamp ( power , timestamp ) Parameters : power ( tes3spell ): The spell object for the power. timestamp (number): The timestamp of the moment the power was casted, or 24 hours before the recharge point. The timestamp units are hours. The current time as a timestamp can be accessed at tes3.getSimulationTimestamp() .","title":"setPowerUseTimestamp"},{"location":"types/tes3mobilePlayer/#startcombat","text":"Forces the actor into combat with another actor. myObject : startCombat ( target ) Parameters : target ( tes3mobileActor )","title":"startCombat"},{"location":"types/tes3mobilePlayer/#startdialogue","text":"Starts dialogue with this actor for the player. myObject : startDialogue ()","title":"startDialogue"},{"location":"types/tes3mobilePlayer/#stopcombat","text":"Ends combat for the actor. myObject : stopCombat ( force ) Parameters : force (boolean): If false , the function won't stop combat if the actor has other valid hostile targets.","title":"stopCombat"},{"location":"types/tes3mobilePlayer/#unequip","text":"Unequips one or more items from the actor. local itemUnequipped = myObject : unequip ({ item = ..., type = ..., armorSlot = ..., clothingSlot = ... }) Parameters : params (table) item ( tes3item , string): Optional . The item to unequip. type (number): Optional . The item type to unequip. Only used if no other parameter is provided. Only values pertaining to equipment from tes3.objectType can be passed here. armorSlot (number): Optional . The armor slot to unequip. Maps to values in tes3.armorSlot namespace. clothingSlot (number): Optional . The clothing slot to unequip. Maps to values in tes3.clothingSlot namespace Returns : itemUnequipped (boolean)","title":"unequip"},{"location":"types/tes3mobilePlayer/#unequipmagic","text":"Unequips the currently equipped magic, optionally unequipping the enchanted item if needed. myObject : unequipMagic ({ unequipItem = ..., updateGUI = ... }) Parameters : params (table): Optional . unequipItem (boolean): Default : false . Only valid if the currently equipped magic is from an equippable item enchantment. If true , the item containing the enchantment will be unequipped. updateGUI (boolean): Default : true . Only valid if this actor is the player. If false , the player GUI will not be updated to reflect the change to equipped magic.","title":"unequipMagic"},{"location":"types/tes3mobilePlayer/#updatederivedstatistics","text":"Updates statistics derived from attributes, which are magicka, fatigue, and encumbrance. Will also update the UI if used on the player. Normally handled automatically when you use tes3.modStatistic() . myObject : updateDerivedStatistics ( attribute ) Parameters : attribute ( tes3statistic ): Optional . Limits the update to statistics derived from this attribute. e.g. mobile:updateDerivedStatistics(mobile.strength) . If not present, all derived statistics will be updated.","title":"updateDerivedStatistics"},{"location":"types/tes3mobilePlayer/#updateopacity","text":"Updates the actor's visual opacity. Used after modifying applied chameleon or invisiblity effects. myObject : updateOpacity ()","title":"updateOpacity"},{"location":"types/tes3mobileProjectile/","text":"tes3mobileProjectile \u2693\ufe0e A mobile object for a physical projectile. This type inherits the following: tes3mobileObject Properties \u2693\ufe0e animTime \u2693\ufe0e The time index for the projectile model's animation controllers. Returns : result (number) attackSwing \u2693\ufe0e The attack swing value of the attacker at the time of releasing the projectile. Returns : result (number) boundSize \u2693\ufe0e A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 ) boundSize2D \u2693\ufe0e A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 ) cellX \u2693\ufe0e Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number) cellY \u2693\ufe0e Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number) damage \u2693\ufe0e Access to the raw damage that this projectile will inflict. Returns : result (number) expire \u2693\ufe0e A flag that causes the projectile to expire when set to 1 . Returns : result (number) firingMobile \u2693\ufe0e Read-only . The mobile that fired this projectile. Returns : result ( tes3mobileActor ) firingWeapon \u2693\ufe0e Read-only . The weapon that fired this projectile. Returns : result ( tes3weapon ) flags \u2693\ufe0e Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (integer) height \u2693\ufe0e The height of the mobile above the ground. Returns : result (number) impulseVelocity \u2693\ufe0e A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 ) initialSpeed \u2693\ufe0e Read-only . The initial speed that the projectile was launched at. Returns : result (number) inventory \u2693\ufe0e Read-only . Access to the items the mobile object has in its inventory. Returns : result ( tes3itemStack []) isAffectedByGravity \u2693\ufe0e If true , the mobile is affected by gravity. Does not have any effect on spell projectiles. Returns : result (boolean) movementCollision \u2693\ufe0e Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean) movementFlags \u2693\ufe0e Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (integer) objectType \u2693\ufe0e Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number) playerDistance \u2693\ufe0e The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number) position \u2693\ufe0e A vector that represents the 3D position of the object. Returns : result ( tes3vector3 ) prevMovementFlags \u2693\ufe0e Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (integer) reference \u2693\ufe0e Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference ) spellInstance \u2693\ufe0e A quick access to tes3magicSourceInstance object of this tes3mobileProjectile if aplicable. Returns : result ( tes3magicSourceInstance ) velocity \u2693\ufe0e Access to the current velocity of the projectile. Returns : result ( tes3vector3 )","title":"tes3mobileProjectile"},{"location":"types/tes3mobileProjectile/#tes3mobileprojectile","text":"A mobile object for a physical projectile. This type inherits the following: tes3mobileObject","title":"tes3mobileProjectile"},{"location":"types/tes3mobileProjectile/#properties","text":"","title":"Properties"},{"location":"types/tes3mobileProjectile/#animtime","text":"The time index for the projectile model's animation controllers. Returns : result (number)","title":"animTime"},{"location":"types/tes3mobileProjectile/#attackswing","text":"The attack swing value of the attacker at the time of releasing the projectile. Returns : result (number)","title":"attackSwing"},{"location":"types/tes3mobileProjectile/#boundsize","text":"A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 )","title":"boundSize"},{"location":"types/tes3mobileProjectile/#boundsize2d","text":"A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 )","title":"boundSize2D"},{"location":"types/tes3mobileProjectile/#cellx","text":"Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellX"},{"location":"types/tes3mobileProjectile/#celly","text":"Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellY"},{"location":"types/tes3mobileProjectile/#damage","text":"Access to the raw damage that this projectile will inflict. Returns : result (number)","title":"damage"},{"location":"types/tes3mobileProjectile/#expire","text":"A flag that causes the projectile to expire when set to 1 . Returns : result (number)","title":"expire"},{"location":"types/tes3mobileProjectile/#firingmobile","text":"Read-only . The mobile that fired this projectile. Returns : result ( tes3mobileActor )","title":"firingMobile"},{"location":"types/tes3mobileProjectile/#firingweapon","text":"Read-only . The weapon that fired this projectile. Returns : result ( tes3weapon )","title":"firingWeapon"},{"location":"types/tes3mobileProjectile/#flags","text":"Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"flags"},{"location":"types/tes3mobileProjectile/#height","text":"The height of the mobile above the ground. Returns : result (number)","title":"height"},{"location":"types/tes3mobileProjectile/#impulsevelocity","text":"A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 )","title":"impulseVelocity"},{"location":"types/tes3mobileProjectile/#initialspeed","text":"Read-only . The initial speed that the projectile was launched at. Returns : result (number)","title":"initialSpeed"},{"location":"types/tes3mobileProjectile/#inventory","text":"Read-only . Access to the items the mobile object has in its inventory. Returns : result ( tes3itemStack [])","title":"inventory"},{"location":"types/tes3mobileProjectile/#isaffectedbygravity","text":"If true , the mobile is affected by gravity. Does not have any effect on spell projectiles. Returns : result (boolean)","title":"isAffectedByGravity"},{"location":"types/tes3mobileProjectile/#movementcollision","text":"Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean)","title":"movementCollision"},{"location":"types/tes3mobileProjectile/#movementflags","text":"Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"movementFlags"},{"location":"types/tes3mobileProjectile/#objecttype","text":"Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number)","title":"objectType"},{"location":"types/tes3mobileProjectile/#playerdistance","text":"The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number)","title":"playerDistance"},{"location":"types/tes3mobileProjectile/#position","text":"A vector that represents the 3D position of the object. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3mobileProjectile/#prevmovementflags","text":"Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"prevMovementFlags"},{"location":"types/tes3mobileProjectile/#reference","text":"Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3mobileProjectile/#spellinstance","text":"A quick access to tes3magicSourceInstance object of this tes3mobileProjectile if aplicable. Returns : result ( tes3magicSourceInstance )","title":"spellInstance"},{"location":"types/tes3mobileProjectile/#velocity","text":"Access to the current velocity of the projectile. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/tes3mobileSpellProjectile/","text":"tes3mobileSpellProjectile \u2693\ufe0e A mobile object for a spell projectile. This type inherits the following: tes3mobileProjectile , tes3mobileObject Properties \u2693\ufe0e animTime \u2693\ufe0e The time index for the projectile model's animation controllers. Returns : result (number) attackSwing \u2693\ufe0e The attack swing value of the attacker at the time of releasing the projectile. Returns : result (number) boundSize \u2693\ufe0e A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 ) boundSize2D \u2693\ufe0e A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 ) cellX \u2693\ufe0e Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number) cellY \u2693\ufe0e Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number) damage \u2693\ufe0e Access to the raw damage that this projectile will inflict. Returns : result (number) expire \u2693\ufe0e A flag that causes the projectile to expire when set to 1 . Returns : result (number) firingMobile \u2693\ufe0e Read-only . The mobile that fired this projectile. Returns : result ( tes3mobileActor ) firingWeapon \u2693\ufe0e Read-only . The weapon that fired this projectile. Returns : result ( tes3weapon ) flags \u2693\ufe0e Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (integer) height \u2693\ufe0e The height of the mobile above the ground. Returns : result (number) impulseVelocity \u2693\ufe0e A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 ) initialSpeed \u2693\ufe0e Read-only . The initial speed that the projectile was launched at. Returns : result (number) inventory \u2693\ufe0e Read-only . Access to the items the mobile object has in its inventory. Returns : result ( tes3itemStack []) isAffectedByGravity \u2693\ufe0e If true , the mobile is affected by gravity. Does not have any effect on spell projectiles. Returns : result (boolean) movementCollision \u2693\ufe0e Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean) movementFlags \u2693\ufe0e Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (integer) objectType \u2693\ufe0e Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number) playerDistance \u2693\ufe0e The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number) position \u2693\ufe0e A vector that represents the 3D position of the object. Returns : result ( tes3vector3 ) prevMovementFlags \u2693\ufe0e Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (integer) reference \u2693\ufe0e Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference ) rotationSpeed \u2693\ufe0e The angular speed that the projectile rotates around its local Y axis. Returns : result (number) spellInstance \u2693\ufe0e Access to the magic source instance of the object. Returns : result ( tes3magicSourceInstance ) spellInstanceSerial \u2693\ufe0e Unique indentifier for just this magic source. Returns : result (number) velocity \u2693\ufe0e Access to the current velocity of the projectile. Returns : result ( tes3vector3 ) Methods \u2693\ufe0e explode \u2693\ufe0e Detonates the projectile, as if it hit a static object. The effects of detonation are not applied immediately, but later in the frame, at the same time as projectile collisions. This ensures consistent behaviour of the magic system. myObject : explode ()","title":"tes3mobileSpellProjectile"},{"location":"types/tes3mobileSpellProjectile/#tes3mobilespellprojectile","text":"A mobile object for a spell projectile. This type inherits the following: tes3mobileProjectile , tes3mobileObject","title":"tes3mobileSpellProjectile"},{"location":"types/tes3mobileSpellProjectile/#properties","text":"","title":"Properties"},{"location":"types/tes3mobileSpellProjectile/#animtime","text":"The time index for the projectile model's animation controllers. Returns : result (number)","title":"animTime"},{"location":"types/tes3mobileSpellProjectile/#attackswing","text":"The attack swing value of the attacker at the time of releasing the projectile. Returns : result (number)","title":"attackSwing"},{"location":"types/tes3mobileSpellProjectile/#boundsize","text":"A vector that shows the size of the bounding box in each direction. Note that this is a convenience feature, and delivers the x and y values from boundSize2D with the z value of the mobile's height . Editing the values of the returned vector will not change the values that they came from, though setting the property itself will work. Returns : result ( tes3vector3 )","title":"boundSize"},{"location":"types/tes3mobileSpellProjectile/#boundsize2d","text":"A vector that shows the size of the bounding box in X and Y directions. boundSize is a convenience property that exposes the bounding in 3 dimensions. Returns : result ( tes3vector2 )","title":"boundSize2D"},{"location":"types/tes3mobileSpellProjectile/#cellx","text":"Read-only . The X grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellX"},{"location":"types/tes3mobileSpellProjectile/#celly","text":"Read-only . The Y grid coordinate of the cell the mobile is in. Returns : result (number)","title":"cellY"},{"location":"types/tes3mobileSpellProjectile/#damage","text":"Access to the raw damage that this projectile will inflict. Returns : result (number)","title":"damage"},{"location":"types/tes3mobileSpellProjectile/#expire","text":"A flag that causes the projectile to expire when set to 1 . Returns : result (number)","title":"expire"},{"location":"types/tes3mobileSpellProjectile/#firingmobile","text":"Read-only . The mobile that fired this projectile. Returns : result ( tes3mobileActor )","title":"firingMobile"},{"location":"types/tes3mobileSpellProjectile/#firingweapon","text":"Read-only . The weapon that fired this projectile. Returns : result ( tes3weapon )","title":"firingWeapon"},{"location":"types/tes3mobileSpellProjectile/#flags","text":"Access to the root mobile object flags, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"flags"},{"location":"types/tes3mobileSpellProjectile/#height","text":"The height of the mobile above the ground. Returns : result (number)","title":"height"},{"location":"types/tes3mobileSpellProjectile/#impulsevelocity","text":"A vector that represents the 3D acceleration of the object. Returns : result ( tes3vector3 )","title":"impulseVelocity"},{"location":"types/tes3mobileSpellProjectile/#initialspeed","text":"Read-only . The initial speed that the projectile was launched at. Returns : result (number)","title":"initialSpeed"},{"location":"types/tes3mobileSpellProjectile/#inventory","text":"Read-only . Access to the items the mobile object has in its inventory. Returns : result ( tes3itemStack [])","title":"inventory"},{"location":"types/tes3mobileSpellProjectile/#isaffectedbygravity","text":"If true , the mobile is affected by gravity. Does not have any effect on spell projectiles. Returns : result (boolean)","title":"isAffectedByGravity"},{"location":"types/tes3mobileSpellProjectile/#movementcollision","text":"Controls if the mobile has movement collision active. When false, the mobile can move through any object, but can still block other mobiles, and can still be hit in combat. Actors will still follow pathgrids, ramps and stairs when navigating. Returns : result (boolean)","title":"movementCollision"},{"location":"types/tes3mobileSpellProjectile/#movementflags","text":"Access to the root mobile object movement flags, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"movementFlags"},{"location":"types/tes3mobileSpellProjectile/#objecttype","text":"Read-only . The type of mobile object. Maps to values in tes3.objectType namespace. Returns : result (number)","title":"objectType"},{"location":"types/tes3mobileSpellProjectile/#playerdistance","text":"The distance to the player. Updated every frame when the mobile is in an active cell. Returns : result (number)","title":"playerDistance"},{"location":"types/tes3mobileSpellProjectile/#position","text":"A vector that represents the 3D position of the object. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3mobileSpellProjectile/#prevmovementflags","text":"Access to the root mobile object movement flags from the previous frame, represented as an integer. Should not be accessed directly. Returns : result (integer)","title":"prevMovementFlags"},{"location":"types/tes3mobileSpellProjectile/#reference","text":"Read-only . Access to the reference object for the mobile, if any. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3mobileSpellProjectile/#rotationspeed","text":"The angular speed that the projectile rotates around its local Y axis. Returns : result (number)","title":"rotationSpeed"},{"location":"types/tes3mobileSpellProjectile/#spellinstance","text":"Access to the magic source instance of the object. Returns : result ( tes3magicSourceInstance )","title":"spellInstance"},{"location":"types/tes3mobileSpellProjectile/#spellinstanceserial","text":"Unique indentifier for just this magic source. Returns : result (number)","title":"spellInstanceSerial"},{"location":"types/tes3mobileSpellProjectile/#velocity","text":"Access to the current velocity of the projectile. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/tes3mobileSpellProjectile/#methods","text":"","title":"Methods"},{"location":"types/tes3mobileSpellProjectile/#explode","text":"Detonates the projectile, as if it hit a static object. The effects of detonation are not applied immediately, but later in the frame, at the same time as projectile collisions. This ensures consistent behaviour of the magic system. myObject : explode ()","title":"explode"},{"location":"types/tes3moon/","text":"tes3moon \u2693\ufe0e A structure that keeps track of information related two the game's two moons. Moon move in an arc shape along the sky. The arc's start is at in-game North and ends in the South. The arc's plane can be rotated from North-South axis, by axisOffset property. If moons overlap, Secunda is always rendered in front of Masser, so the Masser is covered by Secunda. Each moon has 8 phases, which differ by the amount of the moon that is visible and the part covered in black. During waxing the moon appears in the sky during the first part of the night, before midnight. After the full phase, the moons usually rise during the later part of the night, after midnight. Much like the Earth's moon. Absolutely the first moment the moon can appear is controlled by fadeInStart property, while the latest moment the moon sets is controlled by fadeOutFinish property. Most of the properties exposed here correspond to the setting of the same name in [Moons] section of the Morrowind.ini file. Properties \u2693\ufe0e axisOffset \u2693\ufe0e The rotation of the moon's path arc from the North-South axis, in degrees. Returns : result (number) dailyIncrement \u2693\ufe0e Looks like this property controls when the moon raises during each phase of its cycle. Also seems to impact the progression of moon phases. The units of this property are most likely game hours. Returns : result (number) fadeEndAngle \u2693\ufe0e This angle represents the angle from the water plane, in degrees. If a moon arrives at that point in the sky it will start disappearing. A moon can disappear even before its fadeOutStart hour if it reaches this angle. Returns : result (number) fadeInFinish \u2693\ufe0e The game hour at which the moon finishes fading in. Returns : result (number) fadeInStart \u2693\ufe0e The game hour at which the moon starts to be visible in the sky. Returns : result (number) fadeOutFinish \u2693\ufe0e The game hour at which has completely faded out. Returns : result (number) fadeOutStart \u2693\ufe0e The game hour at which the moon starts fading out. Returns : result (number) fadeStartAngle \u2693\ufe0e The angle, in degrees, from the water plane at which the moon first appears in the sky. Returns : result (number) index \u2693\ufe0e Read-only . The index of the moon, 0 for Masser, 1 for Secunda. Returns : result (number) isRed \u2693\ufe0e Determines if the moon is red, typically during the events of Bloodmoon. Returns : result (boolean) phase \u2693\ufe0e The moon's current phase. The phase controls which of the moon's textures is currently being used. Moon's phase Used texture's suffix 0 _new 1 _one_wax 2 _half_wax 3 _three_wax 4 _full 5 _three_wan 6 _half_wan 7 _one_wan Returns : result (number) shadowEarlyFadeAngle \u2693\ufe0e No description yet available. Returns : result (number) speed \u2693\ufe0e Controls the speed of the moons across the sky. This corresponds to the setting of the same name in [Moons] section of the Morrowind.ini file. Returns : result (number) texture \u2693\ufe0e Read-only . The texture to use for the moon. These look like \"Textures\\tx_masser\". The actual texture that is used is determined by the current moon phase. Returns : result (string) weatherController \u2693\ufe0e Read-only . Quick access back to the weather controller structure. Returns : result ( tes3weatherController )","title":"Tes3moon"},{"location":"types/tes3moon/#tes3moon","text":"A structure that keeps track of information related two the game's two moons. Moon move in an arc shape along the sky. The arc's start is at in-game North and ends in the South. The arc's plane can be rotated from North-South axis, by axisOffset property. If moons overlap, Secunda is always rendered in front of Masser, so the Masser is covered by Secunda. Each moon has 8 phases, which differ by the amount of the moon that is visible and the part covered in black. During waxing the moon appears in the sky during the first part of the night, before midnight. After the full phase, the moons usually rise during the later part of the night, after midnight. Much like the Earth's moon. Absolutely the first moment the moon can appear is controlled by fadeInStart property, while the latest moment the moon sets is controlled by fadeOutFinish property. Most of the properties exposed here correspond to the setting of the same name in [Moons] section of the Morrowind.ini file.","title":"tes3moon"},{"location":"types/tes3moon/#properties","text":"","title":"Properties"},{"location":"types/tes3moon/#axisoffset","text":"The rotation of the moon's path arc from the North-South axis, in degrees. Returns : result (number)","title":"axisOffset"},{"location":"types/tes3moon/#dailyincrement","text":"Looks like this property controls when the moon raises during each phase of its cycle. Also seems to impact the progression of moon phases. The units of this property are most likely game hours. Returns : result (number)","title":"dailyIncrement"},{"location":"types/tes3moon/#fadeendangle","text":"This angle represents the angle from the water plane, in degrees. If a moon arrives at that point in the sky it will start disappearing. A moon can disappear even before its fadeOutStart hour if it reaches this angle. Returns : result (number)","title":"fadeEndAngle"},{"location":"types/tes3moon/#fadeinfinish","text":"The game hour at which the moon finishes fading in. Returns : result (number)","title":"fadeInFinish"},{"location":"types/tes3moon/#fadeinstart","text":"The game hour at which the moon starts to be visible in the sky. Returns : result (number)","title":"fadeInStart"},{"location":"types/tes3moon/#fadeoutfinish","text":"The game hour at which has completely faded out. Returns : result (number)","title":"fadeOutFinish"},{"location":"types/tes3moon/#fadeoutstart","text":"The game hour at which the moon starts fading out. Returns : result (number)","title":"fadeOutStart"},{"location":"types/tes3moon/#fadestartangle","text":"The angle, in degrees, from the water plane at which the moon first appears in the sky. Returns : result (number)","title":"fadeStartAngle"},{"location":"types/tes3moon/#index","text":"Read-only . The index of the moon, 0 for Masser, 1 for Secunda. Returns : result (number)","title":"index"},{"location":"types/tes3moon/#isred","text":"Determines if the moon is red, typically during the events of Bloodmoon. Returns : result (boolean)","title":"isRed"},{"location":"types/tes3moon/#phase","text":"The moon's current phase. The phase controls which of the moon's textures is currently being used. Moon's phase Used texture's suffix 0 _new 1 _one_wax 2 _half_wax 3 _three_wax 4 _full 5 _three_wan 6 _half_wan 7 _one_wan Returns : result (number)","title":"phase"},{"location":"types/tes3moon/#shadowearlyfadeangle","text":"No description yet available. Returns : result (number)","title":"shadowEarlyFadeAngle"},{"location":"types/tes3moon/#speed","text":"Controls the speed of the moons across the sky. This corresponds to the setting of the same name in [Moons] section of the Morrowind.ini file. Returns : result (number)","title":"speed"},{"location":"types/tes3moon/#texture","text":"Read-only . The texture to use for the moon. These look like \"Textures\\tx_masser\". The actual texture that is used is determined by the current moon phase. Returns : result (string)","title":"texture"},{"location":"types/tes3moon/#weathercontroller","text":"Read-only . Quick access back to the weather controller structure. Returns : result ( tes3weatherController )","title":"weatherController"},{"location":"types/tes3nonDynamicData/","text":"tes3nonDynamicData \u2693\ufe0e A child container from tes3dataHandler , where game data is stored. Properties \u2693\ufe0e activeMods \u2693\ufe0e Read-only . A collection of all actively loaded mods. Returns : result ( tes3gameFile []) birthsigns \u2693\ufe0e Read-only . A collection of all birthsign objects. Returns : result ( tes3birthsign []) cells \u2693\ufe0e Read-only . A collection of all cell objects. Returns : result ( tes3cell []) classes \u2693\ufe0e Read-only . A collection of all class objects. Returns : result ( tes3class []) dialogues \u2693\ufe0e Read-only . A collection of all dialogue objects. Returns : result ( tes3dialogue []) factions \u2693\ufe0e Read-only . A collection of all faction objects. Returns : result ( tes3faction []) globals \u2693\ufe0e Read-only . A collection of all global variable objects. Returns : result ( tes3iterator ) isSavingOrLoading \u2693\ufe0e Read-only . True when in the process of saving or loading the game. Returns : result (boolean) lastLoadedFile \u2693\ufe0e Read-only . The last loaded savegame file. Returns : result ( tes3gameFile ) magicEffects \u2693\ufe0e Read-only . A table of references to all magic effects. This is a dictionary, as the effect list may have gaps. Returns : result (table<integer, tes3magicEffect >) mapTexture \u2693\ufe0e Access to the World map texture. Returns : result ( niSourceTexture ) objects \u2693\ufe0e Read-only . A collection of all other game objects. Returns : result ( tes3object []) races \u2693\ufe0e Read-only . A collection of all race objects. Returns : result ( tes3race []) regions \u2693\ufe0e Read-only . A collection of all region objects. Returns : result ( tes3region []) scripts \u2693\ufe0e Read-only . A collection of all script objects. Returns : result ( tes3script []) skills \u2693\ufe0e Read-only . A table of references to all 27 skills. Returns : result ( tes3skill []) soundGenerators \u2693\ufe0e Read-only . A collection of all sound generator objects. Returns : result ( tes3soundGenerator []) sounds \u2693\ufe0e Read-only . A collection of all sound objects. Returns : result ( tes3sound []) spells \u2693\ufe0e Read-only . A collection of all spell objects. Returns : result ( tes3spell []) startScripts \u2693\ufe0e Read-only . A collection of all start script objects. Returns : result ( tes3startScript []) Methods \u2693\ufe0e addNewObject \u2693\ufe0e Inserts a newly created object into the proper collections. local result = myObject : addNewObject ( object ) Parameters : object ( tes3baseObject ) Returns : result (boolean) deleteObject \u2693\ufe0e Removes an object from the proper collections. myObject : deleteObject ( object ) Parameters : object ( tes3baseObject ) drawCellMapMarker \u2693\ufe0e Draws a map marker box for an exterior cell onto the world map. myObject : drawCellMapMarker ( cell ) Parameters : cell ( tes3cell ) findDialogue \u2693\ufe0e Locates a dialogue for a given ID. local result = myObject : findDialogue ( id ) Parameters : id (string) Returns : result ( tes3dialogue ) findFirstCloneOfActor \u2693\ufe0e Locates the first reference for a given object ID. local result = myObject : findFirstCloneOfActor ( id ) Parameters : id (string) Returns : result ( tes3reference ) findGlobalVariable \u2693\ufe0e Locates a global variable for a given ID. local result = myObject : findGlobalVariable ( id ) Parameters : id (string) Returns : result ( tes3globalVariable ) findScript \u2693\ufe0e Locates a script for a given ID. local result = myObject : findScript ( id ) Parameters : id (string) Returns : result ( tes3script ) findSound \u2693\ufe0e Locates a sound for a given ID. local result = myObject : findSound ( id ) Parameters : id (string) Returns : result ( tes3sound ) resolveObject \u2693\ufe0e Locates a general object for a given ID. local result = myObject : resolveObject ( id ) Parameters : id (string) Returns : result ( tes3baseObject ) showLocationOnMap \u2693\ufe0e Draws map marker boxes onto the world map for all cells with names starting with the prefix. e.g. showLocationOnMap(\"Vivec\") draws boxes for all cells in Vivec, because the cell names \"Vivec, Arena\", \"Vivec, Temple\", etc. matches. myObject : showLocationOnMap ( cellNamePrefix ) Parameters : cellNamePrefix (string)","title":"tes3nonDynamicData"},{"location":"types/tes3nonDynamicData/#tes3nondynamicdata","text":"A child container from tes3dataHandler , where game data is stored.","title":"tes3nonDynamicData"},{"location":"types/tes3nonDynamicData/#properties","text":"","title":"Properties"},{"location":"types/tes3nonDynamicData/#activemods","text":"Read-only . A collection of all actively loaded mods. Returns : result ( tes3gameFile [])","title":"activeMods"},{"location":"types/tes3nonDynamicData/#birthsigns","text":"Read-only . A collection of all birthsign objects. Returns : result ( tes3birthsign [])","title":"birthsigns"},{"location":"types/tes3nonDynamicData/#cells","text":"Read-only . A collection of all cell objects. Returns : result ( tes3cell [])","title":"cells"},{"location":"types/tes3nonDynamicData/#classes","text":"Read-only . A collection of all class objects. Returns : result ( tes3class [])","title":"classes"},{"location":"types/tes3nonDynamicData/#dialogues","text":"Read-only . A collection of all dialogue objects. Returns : result ( tes3dialogue [])","title":"dialogues"},{"location":"types/tes3nonDynamicData/#factions","text":"Read-only . A collection of all faction objects. Returns : result ( tes3faction [])","title":"factions"},{"location":"types/tes3nonDynamicData/#globals","text":"Read-only . A collection of all global variable objects. Returns : result ( tes3iterator )","title":"globals"},{"location":"types/tes3nonDynamicData/#issavingorloading","text":"Read-only . True when in the process of saving or loading the game. Returns : result (boolean)","title":"isSavingOrLoading"},{"location":"types/tes3nonDynamicData/#lastloadedfile","text":"Read-only . The last loaded savegame file. Returns : result ( tes3gameFile )","title":"lastLoadedFile"},{"location":"types/tes3nonDynamicData/#magiceffects","text":"Read-only . A table of references to all magic effects. This is a dictionary, as the effect list may have gaps. Returns : result (table<integer, tes3magicEffect >)","title":"magicEffects"},{"location":"types/tes3nonDynamicData/#maptexture","text":"Access to the World map texture. Returns : result ( niSourceTexture )","title":"mapTexture"},{"location":"types/tes3nonDynamicData/#objects","text":"Read-only . A collection of all other game objects. Returns : result ( tes3object [])","title":"objects"},{"location":"types/tes3nonDynamicData/#races","text":"Read-only . A collection of all race objects. Returns : result ( tes3race [])","title":"races"},{"location":"types/tes3nonDynamicData/#regions","text":"Read-only . A collection of all region objects. Returns : result ( tes3region [])","title":"regions"},{"location":"types/tes3nonDynamicData/#scripts","text":"Read-only . A collection of all script objects. Returns : result ( tes3script [])","title":"scripts"},{"location":"types/tes3nonDynamicData/#skills","text":"Read-only . A table of references to all 27 skills. Returns : result ( tes3skill [])","title":"skills"},{"location":"types/tes3nonDynamicData/#soundgenerators","text":"Read-only . A collection of all sound generator objects. Returns : result ( tes3soundGenerator [])","title":"soundGenerators"},{"location":"types/tes3nonDynamicData/#sounds","text":"Read-only . A collection of all sound objects. Returns : result ( tes3sound [])","title":"sounds"},{"location":"types/tes3nonDynamicData/#spells","text":"Read-only . A collection of all spell objects. Returns : result ( tes3spell [])","title":"spells"},{"location":"types/tes3nonDynamicData/#startscripts","text":"Read-only . A collection of all start script objects. Returns : result ( tes3startScript [])","title":"startScripts"},{"location":"types/tes3nonDynamicData/#methods","text":"","title":"Methods"},{"location":"types/tes3nonDynamicData/#addnewobject","text":"Inserts a newly created object into the proper collections. local result = myObject : addNewObject ( object ) Parameters : object ( tes3baseObject ) Returns : result (boolean)","title":"addNewObject"},{"location":"types/tes3nonDynamicData/#deleteobject","text":"Removes an object from the proper collections. myObject : deleteObject ( object ) Parameters : object ( tes3baseObject )","title":"deleteObject"},{"location":"types/tes3nonDynamicData/#drawcellmapmarker","text":"Draws a map marker box for an exterior cell onto the world map. myObject : drawCellMapMarker ( cell ) Parameters : cell ( tes3cell )","title":"drawCellMapMarker"},{"location":"types/tes3nonDynamicData/#finddialogue","text":"Locates a dialogue for a given ID. local result = myObject : findDialogue ( id ) Parameters : id (string) Returns : result ( tes3dialogue )","title":"findDialogue"},{"location":"types/tes3nonDynamicData/#findfirstcloneofactor","text":"Locates the first reference for a given object ID. local result = myObject : findFirstCloneOfActor ( id ) Parameters : id (string) Returns : result ( tes3reference )","title":"findFirstCloneOfActor"},{"location":"types/tes3nonDynamicData/#findglobalvariable","text":"Locates a global variable for a given ID. local result = myObject : findGlobalVariable ( id ) Parameters : id (string) Returns : result ( tes3globalVariable )","title":"findGlobalVariable"},{"location":"types/tes3nonDynamicData/#findscript","text":"Locates a script for a given ID. local result = myObject : findScript ( id ) Parameters : id (string) Returns : result ( tes3script )","title":"findScript"},{"location":"types/tes3nonDynamicData/#findsound","text":"Locates a sound for a given ID. local result = myObject : findSound ( id ) Parameters : id (string) Returns : result ( tes3sound )","title":"findSound"},{"location":"types/tes3nonDynamicData/#resolveobject","text":"Locates a general object for a given ID. local result = myObject : resolveObject ( id ) Parameters : id (string) Returns : result ( tes3baseObject )","title":"resolveObject"},{"location":"types/tes3nonDynamicData/#showlocationonmap","text":"Draws map marker boxes onto the world map for all cells with names starting with the prefix. e.g. showLocationOnMap(\"Vivec\") draws boxes for all cells in Vivec, because the cell names \"Vivec, Arena\", \"Vivec, Temple\", etc. matches. myObject : showLocationOnMap ( cellNamePrefix ) Parameters : cellNamePrefix (string)","title":"showLocationOnMap"},{"location":"types/tes3npc/","text":"tes3npc \u2693\ufe0e An NPC object that has not been cloned. Typically represents the raw information edited in the construction set. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e actorFlags \u2693\ufe0e Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number) aiConfig \u2693\ufe0e Read-only . A substructure off of actors that contains information on the current AI configuration. Returns : result ( tes3aiConfig ) Example: Checking if an NPC offers traveling service --- This function returns `true` if given NPC --- or creature offers traveling service. ---@param actor tes3npc|tes3npcInstance|tes3creature|tes3creatureInstance ---@return boolean local function offersTraveling ( actor ) local travelDestinations = actor . aiConfig . travelDestinations -- Actors that can't transport the player -- have travelDestinations equal to `nil` return travelDestinations ~= nil end attributes \u2693\ufe0e A table of eight numbers, representing the base values for the actor's attributes. Returns : result (number[]) autoCalc \u2693\ufe0e Direct access to the actor autocalc flag. Returns : result (boolean) barterGold \u2693\ufe0e Friendly access to actor's barter gold amount. Returns : result (number) baseDisposition \u2693\ufe0e The actor's base disposition. Returns : result (number) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) blood \u2693\ufe0e Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set. Returns : result (integer) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) class \u2693\ufe0e Read-only . The class that the NPC uses. Returns : result ( tes3class ) cloneCount \u2693\ufe0e Read-only . The number of clones that exist of this actor. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) equipment \u2693\ufe0e Read-only . The items currently equipped to the actor. Returns : result ( tes3equipmentStack []) faction \u2693\ufe0e Read-only . The class that the NPC is joined to. Returns : result ( tes3faction ) factionIndex \u2693\ufe0e Deprecated. Use reputation instead. Returns : result (number) factionRank \u2693\ufe0e The NPC's rank in their faction. Returns : result (number) fatigue \u2693\ufe0e The actor's max fatigue. Returns : result (number) female \u2693\ufe0e Direct access to the actor female flag. Returns : result (boolean) hair \u2693\ufe0e The hair body part that the NPC will use. Returns : result ( tes3bodyPart ) head \u2693\ufe0e The head body part that the NPC will use. Returns : result ( tes3bodyPart ) health \u2693\ufe0e The actor's max health. Returns : result (number) height \u2693\ufe0e Read-only . Convenience access to the NPCs (race) height. Returns : result (number) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) inventory \u2693\ufe0e Read-only . The items currently carried by the actor. Returns : result ( tes3inventory ) isAttacked \u2693\ufe0e Read-only . If true, the actor's attacked flag is set. Returns : result (boolean) isEssential \u2693\ufe0e Read-only . If true, the actor's essential flag is set. Returns : result (boolean) isInstance \u2693\ufe0e Always returns false. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) isRespawn \u2693\ufe0e Read-only . If true, the actor's respawn flag is set. Returns : result (boolean) level \u2693\ufe0e The actor's level. Returns : result (number) magicka \u2693\ufe0e The actor's max magicka. Returns : result (number) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) race \u2693\ufe0e Read-only . The race that the NPC uses. Returns : result ( tes3race ) reputation \u2693\ufe0e The actor's reputation. Returns : result (number) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e The script that runs on the object. Returns : result ( tes3script ) skills \u2693\ufe0e A table of twenty seven numbers, representing the base values for the NPC's skills. Returns : result (number[]) soul \u2693\ufe0e The soul value for this NPC. This is typically nil , unless the calcSouLValue event provides one for this actor. Returns : result (number, nil) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) spells \u2693\ufe0e Read-only . A list of spells that the actor has access to. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, spell in pairs(npc.spells.iterator) do print(spell.name) end Returns : result ( tes3spellList ) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) weight \u2693\ufe0e Read-only . Convenience access to the NPCs (race) weight. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) hasItemEquipped \u2693\ufe0e Checks if the actor has provided item equipped. local result = myObject : hasItemEquipped ( item , itemData ) Parameters : item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean) offersService \u2693\ufe0e Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = myObject : offersService ( service ) Parameters : service (number): Use one of the values in the tes3.merchantService.* table. Returns : result (boolean) onInventoryClose \u2693\ufe0e A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. myObject : onInventoryClose ( reference ) Parameters : reference ( tes3reference ) tradesItemType \u2693\ufe0e Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = myObject : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"Tes3npc"},{"location":"types/tes3npc/#tes3npc","text":"An NPC object that has not been cloned. Typically represents the raw information edited in the construction set. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject","title":"tes3npc"},{"location":"types/tes3npc/#properties","text":"","title":"Properties"},{"location":"types/tes3npc/#actorflags","text":"Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number)","title":"actorFlags"},{"location":"types/tes3npc/#aiconfig","text":"Read-only . A substructure off of actors that contains information on the current AI configuration. Returns : result ( tes3aiConfig ) Example: Checking if an NPC offers traveling service --- This function returns `true` if given NPC --- or creature offers traveling service. ---@param actor tes3npc|tes3npcInstance|tes3creature|tes3creatureInstance ---@return boolean local function offersTraveling ( actor ) local travelDestinations = actor . aiConfig . travelDestinations -- Actors that can't transport the player -- have travelDestinations equal to `nil` return travelDestinations ~= nil end","title":"aiConfig"},{"location":"types/tes3npc/#attributes","text":"A table of eight numbers, representing the base values for the actor's attributes. Returns : result (number[])","title":"attributes"},{"location":"types/tes3npc/#autocalc","text":"Direct access to the actor autocalc flag. Returns : result (boolean)","title":"autoCalc"},{"location":"types/tes3npc/#bartergold","text":"Friendly access to actor's barter gold amount. Returns : result (number)","title":"barterGold"},{"location":"types/tes3npc/#basedisposition","text":"The actor's base disposition. Returns : result (number)","title":"baseDisposition"},{"location":"types/tes3npc/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3npc/#blood","text":"Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set. Returns : result (integer)","title":"blood"},{"location":"types/tes3npc/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3npc/#class","text":"Read-only . The class that the NPC uses. Returns : result ( tes3class )","title":"class"},{"location":"types/tes3npc/#clonecount","text":"Read-only . The number of clones that exist of this actor. Returns : result (number)","title":"cloneCount"},{"location":"types/tes3npc/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3npc/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3npc/#equipment","text":"Read-only . The items currently equipped to the actor. Returns : result ( tes3equipmentStack [])","title":"equipment"},{"location":"types/tes3npc/#faction","text":"Read-only . The class that the NPC is joined to. Returns : result ( tes3faction )","title":"faction"},{"location":"types/tes3npc/#factionindex","text":"Deprecated. Use reputation instead. Returns : result (number)","title":"factionIndex"},{"location":"types/tes3npc/#factionrank","text":"The NPC's rank in their faction. Returns : result (number)","title":"factionRank"},{"location":"types/tes3npc/#fatigue","text":"The actor's max fatigue. Returns : result (number)","title":"fatigue"},{"location":"types/tes3npc/#female","text":"Direct access to the actor female flag. Returns : result (boolean)","title":"female"},{"location":"types/tes3npc/#hair","text":"The hair body part that the NPC will use. Returns : result ( tes3bodyPart )","title":"hair"},{"location":"types/tes3npc/#head","text":"The head body part that the NPC will use. Returns : result ( tes3bodyPart )","title":"head"},{"location":"types/tes3npc/#health","text":"The actor's max health. Returns : result (number)","title":"health"},{"location":"types/tes3npc/#height","text":"Read-only . Convenience access to the NPCs (race) height. Returns : result (number)","title":"height"},{"location":"types/tes3npc/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3npc/#inventory","text":"Read-only . The items currently carried by the actor. Returns : result ( tes3inventory )","title":"inventory"},{"location":"types/tes3npc/#isattacked","text":"Read-only . If true, the actor's attacked flag is set. Returns : result (boolean)","title":"isAttacked"},{"location":"types/tes3npc/#isessential","text":"Read-only . If true, the actor's essential flag is set. Returns : result (boolean)","title":"isEssential"},{"location":"types/tes3npc/#isinstance","text":"Always returns false. Returns : result (boolean)","title":"isInstance"},{"location":"types/tes3npc/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3npc/#isrespawn","text":"Read-only . If true, the actor's respawn flag is set. Returns : result (boolean)","title":"isRespawn"},{"location":"types/tes3npc/#level","text":"The actor's level. Returns : result (number)","title":"level"},{"location":"types/tes3npc/#magicka","text":"The actor's max magicka. Returns : result (number)","title":"magicka"},{"location":"types/tes3npc/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3npc/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3npc/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3npc/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3npc/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3npc/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3npc/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3npc/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3npc/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3npc/#race","text":"Read-only . The race that the NPC uses. Returns : result ( tes3race )","title":"race"},{"location":"types/tes3npc/#reputation","text":"The actor's reputation. Returns : result (number)","title":"reputation"},{"location":"types/tes3npc/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3npc/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3npc/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3npc/#script","text":"The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3npc/#skills","text":"A table of twenty seven numbers, representing the base values for the NPC's skills. Returns : result (number[])","title":"skills"},{"location":"types/tes3npc/#soul","text":"The soul value for this NPC. This is typically nil , unless the calcSouLValue event provides one for this actor. Returns : result (number, nil)","title":"soul"},{"location":"types/tes3npc/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3npc/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3npc/#spells","text":"Read-only . A list of spells that the actor has access to. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, spell in pairs(npc.spells.iterator) do print(spell.name) end Returns : result ( tes3spellList )","title":"spells"},{"location":"types/tes3npc/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3npc/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3npc/#weight","text":"Read-only . Convenience access to the NPCs (race) weight. Returns : result (number)","title":"weight"},{"location":"types/tes3npc/#methods","text":"","title":"Methods"},{"location":"types/tes3npc/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3npc/#hasitemequipped","text":"Checks if the actor has provided item equipped. local result = myObject : hasItemEquipped ( item , itemData ) Parameters : item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean)","title":"hasItemEquipped"},{"location":"types/tes3npc/#offersservice","text":"Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = myObject : offersService ( service ) Parameters : service (number): Use one of the values in the tes3.merchantService.* table. Returns : result (boolean)","title":"offersService"},{"location":"types/tes3npc/#oninventoryclose","text":"A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. myObject : onInventoryClose ( reference ) Parameters : reference ( tes3reference )","title":"onInventoryClose"},{"location":"types/tes3npc/#tradesitemtype","text":"Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = myObject : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tradesItemType"},{"location":"types/tes3npcInstance/","text":"tes3npcInstance \u2693\ufe0e An NPC object that has been cloned. Typically represents an NPC that has been instanced in the world. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e actorFlags \u2693\ufe0e Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number) aiConfig \u2693\ufe0e Read-only . A substructure off of actors that contains information on the current AI configuration. Returns : result ( tes3aiConfig ) Example: Checking if an NPC offers traveling service --- This function returns `true` if given NPC --- or creature offers traveling service. ---@param actor tes3npc|tes3npcInstance|tes3creature|tes3creatureInstance ---@return boolean local function offersTraveling ( actor ) local travelDestinations = actor . aiConfig . travelDestinations -- Actors that can't transport the player -- have travelDestinations equal to `nil` return travelDestinations ~= nil end attributes \u2693\ufe0e Quick access to the base NPC's attributes. Returns : result (number[]) autoCalc \u2693\ufe0e Direct access to the actor autocalc flag. Returns : result (boolean) barterGold \u2693\ufe0e Friendly access to actor's barter gold amount. Returns : result (number) baseDisposition \u2693\ufe0e The actor's base disposition. Returns : result (number) baseObject \u2693\ufe0e Read-only . Access to the base NPC object. Returns : result ( tes3npc ) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) blood \u2693\ufe0e Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set. Returns : result (integer) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) class \u2693\ufe0e Read-only . Quick access to the base NPC's class. Returns : result ( tes3class ) cloneCount \u2693\ufe0e Read-only . The number of clones that exist of this actor. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) disposition \u2693\ufe0e Read-only . The actor's effective disposition, with all modifiers applied. Returns : result (number) equipment \u2693\ufe0e Read-only . The items currently equipped to the actor. Returns : result ( tes3equipmentStack []) faction \u2693\ufe0e Read-only . Quick access to the base NPC's faction. Returns : result ( tes3faction ) factionIndex \u2693\ufe0e Deprecated. Use reputation instead. Returns : result (number) fatigue \u2693\ufe0e Read-only . Quick access to the base NPC's fatigue. Returns : result (number) female \u2693\ufe0e Direct access to the actor female flag. Returns : result (boolean) health \u2693\ufe0e Read-only . Quick access to the base NPC's health. Returns : result (number) height \u2693\ufe0e Read-only . Convenience access to the NPCs (race) height. Returns : result (number) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) inventory \u2693\ufe0e Read-only . The items currently carried by the actor. Returns : result ( tes3inventory ) isAttacked \u2693\ufe0e Read-only . If true, the actor's attacked flag is set. Returns : result (boolean) isEssential \u2693\ufe0e Read-only . If true, the actor's essential flag is set. Returns : result (boolean) isGuard \u2693\ufe0e Read-only . If true, the actor is a guard. Returns : result (boolean) isInstance \u2693\ufe0e Always returns true. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) isRespawn \u2693\ufe0e Read-only . If true, the actor's respawn flag is set. Returns : result (boolean) level \u2693\ufe0e Read-only . Quick access to the base NPC's level. Returns : result (number) magicka \u2693\ufe0e Read-only . Quick access to the base NPC's magicka. Returns : result (number) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) mobile \u2693\ufe0e Read-only . The mobile that the object is represented by. Returns : result ( tes3mobileActor ) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e Quick access to the base NPC's name. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) race \u2693\ufe0e Read-only . Quick access to the base NPC's race. Returns : result ( tes3race ) reference \u2693\ufe0e Read-only . The reference that the object is represented by. Returns : result ( tes3reference ) reputation \u2693\ufe0e The actor's reputation. Returns : result (number) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e Read-only . Quick access to the base NPC's script. Returns : result ( tes3script ) skills \u2693\ufe0e Quick access to the base NPC's skills. Returns : result (number[]) soul \u2693\ufe0e The soul value for this NPC's base object. This is typically nil , unless the calcSouLValue event provides one for the base actor. Returns : result (number, nil) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) spells \u2693\ufe0e Read-only . Quick access to the base NPC's spell list. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, spell in pairs(npc.spells.iterator) do print(spell.name) end Returns : result ( tes3spellList ) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) weight \u2693\ufe0e Read-only . Convenience access to the NPCs (race) weight. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) hasItemEquipped \u2693\ufe0e Checks if the actor has provided item equipped. local result = myObject : hasItemEquipped ( item , itemData ) Parameters : item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean) offersService \u2693\ufe0e Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = myObject : offersService ( service ) Parameters : service (number): Use one of the values in the tes3.merchantService.* table. Returns : result (boolean) onInventoryClose \u2693\ufe0e A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. myObject : onInventoryClose ( reference ) Parameters : reference ( tes3reference ) reevaluateEquipment \u2693\ufe0e Causes the NPC to reevaluate his/hers equipment choices and equip the best available. myObject : reevaluateEquipment () tradesItemType \u2693\ufe0e Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = myObject : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tes3npcInstance"},{"location":"types/tes3npcInstance/#tes3npcinstance","text":"An NPC object that has been cloned. Typically represents an NPC that has been instanced in the world. This type inherits the following: tes3actor , tes3physicalObject , tes3object , tes3baseObject","title":"tes3npcInstance"},{"location":"types/tes3npcInstance/#properties","text":"","title":"Properties"},{"location":"types/tes3npcInstance/#actorflags","text":"Read-only . A number representing the actor flags. Truly a bit field. Returns : result (number)","title":"actorFlags"},{"location":"types/tes3npcInstance/#aiconfig","text":"Read-only . A substructure off of actors that contains information on the current AI configuration. Returns : result ( tes3aiConfig ) Example: Checking if an NPC offers traveling service --- This function returns `true` if given NPC --- or creature offers traveling service. ---@param actor tes3npc|tes3npcInstance|tes3creature|tes3creatureInstance ---@return boolean local function offersTraveling ( actor ) local travelDestinations = actor . aiConfig . travelDestinations -- Actors that can't transport the player -- have travelDestinations equal to `nil` return travelDestinations ~= nil end","title":"aiConfig"},{"location":"types/tes3npcInstance/#attributes","text":"Quick access to the base NPC's attributes. Returns : result (number[])","title":"attributes"},{"location":"types/tes3npcInstance/#autocalc","text":"Direct access to the actor autocalc flag. Returns : result (boolean)","title":"autoCalc"},{"location":"types/tes3npcInstance/#bartergold","text":"Friendly access to actor's barter gold amount. Returns : result (number)","title":"barterGold"},{"location":"types/tes3npcInstance/#basedisposition","text":"The actor's base disposition. Returns : result (number)","title":"baseDisposition"},{"location":"types/tes3npcInstance/#baseobject","text":"Read-only . Access to the base NPC object. Returns : result ( tes3npc )","title":"baseObject"},{"location":"types/tes3npcInstance/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3npcInstance/#blood","text":"Friendly access to actor's blood type, in [0, 7] range. The available blood types are defined in the Morrowind.ini file, and assigned to the actor via the Construction Set. Returns : result (integer)","title":"blood"},{"location":"types/tes3npcInstance/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3npcInstance/#class","text":"Read-only . Quick access to the base NPC's class. Returns : result ( tes3class )","title":"class"},{"location":"types/tes3npcInstance/#clonecount","text":"Read-only . The number of clones that exist of this actor. Returns : result (number)","title":"cloneCount"},{"location":"types/tes3npcInstance/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3npcInstance/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3npcInstance/#disposition","text":"Read-only . The actor's effective disposition, with all modifiers applied. Returns : result (number)","title":"disposition"},{"location":"types/tes3npcInstance/#equipment","text":"Read-only . The items currently equipped to the actor. Returns : result ( tes3equipmentStack [])","title":"equipment"},{"location":"types/tes3npcInstance/#faction","text":"Read-only . Quick access to the base NPC's faction. Returns : result ( tes3faction )","title":"faction"},{"location":"types/tes3npcInstance/#factionindex","text":"Deprecated. Use reputation instead. Returns : result (number)","title":"factionIndex"},{"location":"types/tes3npcInstance/#fatigue","text":"Read-only . Quick access to the base NPC's fatigue. Returns : result (number)","title":"fatigue"},{"location":"types/tes3npcInstance/#female","text":"Direct access to the actor female flag. Returns : result (boolean)","title":"female"},{"location":"types/tes3npcInstance/#health","text":"Read-only . Quick access to the base NPC's health. Returns : result (number)","title":"health"},{"location":"types/tes3npcInstance/#height","text":"Read-only . Convenience access to the NPCs (race) height. Returns : result (number)","title":"height"},{"location":"types/tes3npcInstance/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3npcInstance/#inventory","text":"Read-only . The items currently carried by the actor. Returns : result ( tes3inventory )","title":"inventory"},{"location":"types/tes3npcInstance/#isattacked","text":"Read-only . If true, the actor's attacked flag is set. Returns : result (boolean)","title":"isAttacked"},{"location":"types/tes3npcInstance/#isessential","text":"Read-only . If true, the actor's essential flag is set. Returns : result (boolean)","title":"isEssential"},{"location":"types/tes3npcInstance/#isguard","text":"Read-only . If true, the actor is a guard. Returns : result (boolean)","title":"isGuard"},{"location":"types/tes3npcInstance/#isinstance","text":"Always returns true. Returns : result (boolean)","title":"isInstance"},{"location":"types/tes3npcInstance/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3npcInstance/#isrespawn","text":"Read-only . If true, the actor's respawn flag is set. Returns : result (boolean)","title":"isRespawn"},{"location":"types/tes3npcInstance/#level","text":"Read-only . Quick access to the base NPC's level. Returns : result (number)","title":"level"},{"location":"types/tes3npcInstance/#magicka","text":"Read-only . Quick access to the base NPC's magicka. Returns : result (number)","title":"magicka"},{"location":"types/tes3npcInstance/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3npcInstance/#mobile","text":"Read-only . The mobile that the object is represented by. Returns : result ( tes3mobileActor )","title":"mobile"},{"location":"types/tes3npcInstance/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3npcInstance/#name","text":"Quick access to the base NPC's name. Returns : result (string)","title":"name"},{"location":"types/tes3npcInstance/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3npcInstance/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3npcInstance/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3npcInstance/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3npcInstance/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3npcInstance/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3npcInstance/#race","text":"Read-only . Quick access to the base NPC's race. Returns : result ( tes3race )","title":"race"},{"location":"types/tes3npcInstance/#reference","text":"Read-only . The reference that the object is represented by. Returns : result ( tes3reference )","title":"reference"},{"location":"types/tes3npcInstance/#reputation","text":"The actor's reputation. Returns : result (number)","title":"reputation"},{"location":"types/tes3npcInstance/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3npcInstance/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3npcInstance/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3npcInstance/#script","text":"Read-only . Quick access to the base NPC's script. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3npcInstance/#skills","text":"Quick access to the base NPC's skills. Returns : result (number[])","title":"skills"},{"location":"types/tes3npcInstance/#soul","text":"The soul value for this NPC's base object. This is typically nil , unless the calcSouLValue event provides one for the base actor. Returns : result (number, nil)","title":"soul"},{"location":"types/tes3npcInstance/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3npcInstance/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3npcInstance/#spells","text":"Read-only . Quick access to the base NPC's spell list. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, spell in pairs(npc.spells.iterator) do print(spell.name) end Returns : result ( tes3spellList )","title":"spells"},{"location":"types/tes3npcInstance/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3npcInstance/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3npcInstance/#weight","text":"Read-only . Convenience access to the NPCs (race) weight. Returns : result (number)","title":"weight"},{"location":"types/tes3npcInstance/#methods","text":"","title":"Methods"},{"location":"types/tes3npcInstance/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3npcInstance/#hasitemequipped","text":"Checks if the actor has provided item equipped. local result = myObject : hasItemEquipped ( item , itemData ) Parameters : item ( tes3item , string): The item to perform a check for. itemData ( tes3itemData ): Optional . Returns : result (boolean)","title":"hasItemEquipped"},{"location":"types/tes3npcInstance/#offersservice","text":"Checks if the actor will offer a service in dialogue. This an offer and may still be refused by dialogue checks. To also get the result of dialogue checks, use tes3.checkMerchantOffersService() . local result = myObject : offersService ( service ) Parameters : service (number): Use one of the values in the tes3.merchantService.* table. Returns : result (boolean)","title":"offersService"},{"location":"types/tes3npcInstance/#oninventoryclose","text":"A callback function invoked when an inventory is closed. Typically not used outside of specific purposes. You may find tes3.reference 's onCloseInventory() to be more convenient to use. myObject : onInventoryClose ( reference ) Parameters : reference ( tes3reference )","title":"onInventoryClose"},{"location":"types/tes3npcInstance/#reevaluateequipment","text":"Causes the NPC to reevaluate his/hers equipment choices and equip the best available. myObject : reevaluateEquipment ()","title":"reevaluateEquipment"},{"location":"types/tes3npcInstance/#tradesitemtype","text":"Checks if the actor will buy and sell items of a given object type. e.g. actor:tradesItemType(tes3.objectType.repairItem) local result = myObject : tradesItemType ( objectType ) Parameters : objectType (number): Accepts values from tes3.objectType namespace. Returns : result (boolean)","title":"tradesItemType"},{"location":"types/tes3object/","text":"tes3object \u2693\ufe0e Almost anything that can be represented in the Construction Set is based on this structure. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"Tes3object"},{"location":"types/tes3object/#tes3object","text":"Almost anything that can be represented in the Construction Set is based on this structure. This type inherits the following: tes3baseObject","title":"tes3object"},{"location":"types/tes3object/#properties","text":"","title":"Properties"},{"location":"types/tes3object/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3object/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3object/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3object/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3object/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3object/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3object/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3object/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3object/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3object/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3object/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3object/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3object/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3object/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3object/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3object/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3object/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3object/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3object/#methods","text":"","title":"Methods"},{"location":"types/tes3object/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3packedColor/","text":"tes3packedColor \u2693\ufe0e A densely packed structure for single-byte red, green, blue and alpha values. The values are from 0 to 255. Properties \u2693\ufe0e a \u2693\ufe0e The alpha color value. Returns : result (number) alpha \u2693\ufe0e The alpha color value. Another alias for a. Returns : result (number) b \u2693\ufe0e The blue color value. Returns : result (number) blue \u2693\ufe0e The blue color value. Another alias for b. Returns : result (number) g \u2693\ufe0e The green color value. Returns : result (number) green \u2693\ufe0e The green color value. Another alias for g. Returns : result (number) r \u2693\ufe0e The red color value. Returns : result (number) red \u2693\ufe0e The red color value. Another alias for r. Returns : result (number)","title":"tes3packedColor"},{"location":"types/tes3packedColor/#tes3packedcolor","text":"A densely packed structure for single-byte red, green, blue and alpha values. The values are from 0 to 255.","title":"tes3packedColor"},{"location":"types/tes3packedColor/#properties","text":"","title":"Properties"},{"location":"types/tes3packedColor/#a","text":"The alpha color value. Returns : result (number)","title":"a"},{"location":"types/tes3packedColor/#alpha","text":"The alpha color value. Another alias for a. Returns : result (number)","title":"alpha"},{"location":"types/tes3packedColor/#b","text":"The blue color value. Returns : result (number)","title":"b"},{"location":"types/tes3packedColor/#blue","text":"The blue color value. Another alias for b. Returns : result (number)","title":"blue"},{"location":"types/tes3packedColor/#g","text":"The green color value. Returns : result (number)","title":"g"},{"location":"types/tes3packedColor/#green","text":"The green color value. Another alias for g. Returns : result (number)","title":"green"},{"location":"types/tes3packedColor/#r","text":"The red color value. Returns : result (number)","title":"r"},{"location":"types/tes3packedColor/#red","text":"The red color value. Another alias for r. Returns : result (number)","title":"red"},{"location":"types/tes3physicalObject/","text":"tes3physicalObject \u2693\ufe0e Almost anything that can be represented in the Construction Set is based on this structure. This type inherits the following: tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"tes3physicalObject"},{"location":"types/tes3physicalObject/#tes3physicalobject","text":"Almost anything that can be represented in the Construction Set is based on this structure. This type inherits the following: tes3object , tes3baseObject","title":"tes3physicalObject"},{"location":"types/tes3physicalObject/#properties","text":"","title":"Properties"},{"location":"types/tes3physicalObject/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3physicalObject/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3physicalObject/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3physicalObject/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3physicalObject/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3physicalObject/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3physicalObject/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3physicalObject/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3physicalObject/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3physicalObject/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3physicalObject/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3physicalObject/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3physicalObject/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3physicalObject/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3physicalObject/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3physicalObject/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3physicalObject/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3physicalObject/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3physicalObject/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3physicalObject/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3physicalObject/#methods","text":"","title":"Methods"},{"location":"types/tes3physicalObject/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3playerAnimationController/","text":"tes3playerAnimationController \u2693\ufe0e Works in conjuction with mobile AI to perform idle, movement, and attack animations. Holds data on the status of the current and next desired animation states for the different body sections that can be animated. This type inherits the following: tes3actorAnimationController Properties \u2693\ufe0e allowVerticalAirControl \u2693\ufe0e Read-only . Returns : result (boolean) alphaProperty \u2693\ufe0e The alpha property applied to the actor. Controls the opacity/opaqueness of the actor. Returns : result ( niAlphaProperty ) animationData \u2693\ufe0e Access to the actor's animation data. Returns : result ( tes3animationData ) animGroupIdle \u2693\ufe0e The actor's idle animation. Maps to values in tes3.animationGroup table. Returns : result (integer) animGroupIdle2 \u2693\ufe0e Returns : result (integer) animGroupMovement \u2693\ufe0e The actor's movement animations group. Maps to values in tes3.animationGroup table. Returns : result (integer) attachTiming \u2693\ufe0e Returns : result (number) attackFollowTiming \u2693\ufe0e Returns : result (number) cameraOffset \u2693\ufe0e Read-only . Additional offset applied to the camera's position during the third person. Returns : result ( tes3vector3 ) firstPersonHeadCameraNode \u2693\ufe0e Read-only . This is the camera used while in first person. Switching from first person to third person point of view doesn't affect this camera. Returns : result ( niCamera ) groundPlaneRotation \u2693\ufe0e The rotation of the actor around the up-down axis. When converted to euler angles, this axis corresponds to the z axis. The rotation range is [-PI, PI], where rotation of 0 corresponds to the game north. Returns : result ( tes3matrix33 ) hitTiming \u2693\ufe0e This it the time of the actor's attack animation in their .kf , played during the hit phase for fully charged attack. It's updated for the attacks from different directions. Returns : result (number) is3rdPerson \u2693\ufe0e Read-only . This flag is set to true when the player's view is in third person. To change the player's POV, you can use tes3.force1stPerson and tes3.force3rdPerson . Returns : result (boolean) materialProperty \u2693\ufe0e The material property applied to the actor. Returns : result ( niMaterialProperty ) maxAttackTiming \u2693\ufe0e This it the time of the actor's attack animation in their .kf file, when the attack animation is fully charged. It's updated for the attacks from different directions. Returns : result (number) minAttackTiming \u2693\ufe0e This it the time of the actor's attack animation in their .kf file, at the earliest point the attack animation can end (when the attack button is just clicked and released). It's updated for the attacks from different directions. Returns : result (number) minHitTiming \u2693\ufe0e This it the time of the actor's attack animation in their .kf , played during the hit phase for the minimally charged attack. It's updated for the attacks from different directions. Returns : result (number) mobile \u2693\ufe0e Read-only . The mobile actor that this controller is responsible for. Returns : result ( tes3mobileActor ) patchedOverrideState \u2693\ufe0e Returns : result (integer) pickData \u2693\ufe0e Read-only . Returns : result ( niPick ) remainingBlockTime \u2693\ufe0e Returns : result (number) shadowCameraMatrix \u2693\ufe0e Read-only . The local rotation matrix of the shadow camera. Returns : result ( tes3matrix33 ) shouldJump \u2693\ufe0e Returns : result (integer) speedMultiplier \u2693\ufe0e This is the speed multiplier of the current animation. For example, it is used by the game engine to scale the speed of the turning animation whith the speed at which the player is rotating the view with the mouse. In that case the value range is [0.0, 1.5]. Returns : result (number) startTime \u2693\ufe0e This it the starting time of the actor's attack animation in their .kf file. It's updated for the attacks from different directions. Returns : result (number) strikeWhenAttackSwingReaches \u2693\ufe0e For NPCs this corresponds to how long the weapon was charged by the NPC after the attack landed. The value is in range [0.0, 1.0]. This property isn't used for the player character. Returns : result (number) togglePOV \u2693\ufe0e Read-only . This property is set to true for one frame to change the point of view. Since this property is read-only, you can use tes3.force1stPerson and tes3.force3rdPerson . Returns : result (boolean) useThirdPersonAfterVanityCameraDone \u2693\ufe0e Read-only . This flag is set to true if vanity mode was entered from third person view. If vanity mode was entered from first person view, this flag is set to false . Returns : result (boolean) vanityCamera \u2693\ufe0e Read-only . Returns : result ( niCamera ) vanityCameraDistance \u2693\ufe0e Read-only . The orbiting radius of the camera during vanity mode in game units . Measured from the center of the player's head. Returns : result (integer) vanityCameraEnabled \u2693\ufe0e Read-only . The value of this property is 1 during vanity camera mode, and 0 otherwise. Returns : result (integer) vanityCameraZ \u2693\ufe0e Read-only . The offset on up-down (world z) axis of the camera in third person or during vanity mode from the player's head height in game units . Returns : result (number) vertexColorProperty \u2693\ufe0e The vertex color property applied to the actor. Returns : result ( niVertexColorProperty ) verticalRotation \u2693\ufe0e Only used for the player. When converted to euler angles, the rotation about x axis will correspond to the rotation obtained from looking up and down. The rotations around other axes are always zero. In degrees the rotations range from -89.95 degrees for looking up, and 89.95 for looking maximally down. Returns : result ( tes3matrix33 ) weaponSpeed \u2693\ufe0e The animation speed scaling of the weapon animations. This includes all weapon related idle, attack, and ready/unready animations. This value is reset at the starting frame of each weapon strike, normally equal to the the weapon speed. Therefore if you use this it should be changed after every strike, and reset after. Ready/unready actions do not change speed, but are affected by speed. Use by getting the animation controller from the mobile. e.g. mobile.animationController.weaponSpeed = 0.5 Returns : result (number) Methods \u2693\ufe0e calculateAttackSwing \u2693\ufe0e Calculates how much an attack is currently being charged. Returns a value ranging from 0.0 to 1.0 . A value of 1.0 indicates that the attack is fully charged. Will always return 0.0 when not currently charging an attack. local result = myObject : calculateAttackSwing () Returns : result (number)","title":"tes3playerAnimationController"},{"location":"types/tes3playerAnimationController/#tes3playeranimationcontroller","text":"Works in conjuction with mobile AI to perform idle, movement, and attack animations. Holds data on the status of the current and next desired animation states for the different body sections that can be animated. This type inherits the following: tes3actorAnimationController","title":"tes3playerAnimationController"},{"location":"types/tes3playerAnimationController/#properties","text":"","title":"Properties"},{"location":"types/tes3playerAnimationController/#allowverticalaircontrol","text":"Read-only . Returns : result (boolean)","title":"allowVerticalAirControl"},{"location":"types/tes3playerAnimationController/#alphaproperty","text":"The alpha property applied to the actor. Controls the opacity/opaqueness of the actor. Returns : result ( niAlphaProperty )","title":"alphaProperty"},{"location":"types/tes3playerAnimationController/#animationdata","text":"Access to the actor's animation data. Returns : result ( tes3animationData )","title":"animationData"},{"location":"types/tes3playerAnimationController/#animgroupidle","text":"The actor's idle animation. Maps to values in tes3.animationGroup table. Returns : result (integer)","title":"animGroupIdle"},{"location":"types/tes3playerAnimationController/#animgroupidle2","text":"Returns : result (integer)","title":"animGroupIdle2"},{"location":"types/tes3playerAnimationController/#animgroupmovement","text":"The actor's movement animations group. Maps to values in tes3.animationGroup table. Returns : result (integer)","title":"animGroupMovement"},{"location":"types/tes3playerAnimationController/#attachtiming","text":"Returns : result (number)","title":"attachTiming"},{"location":"types/tes3playerAnimationController/#attackfollowtiming","text":"Returns : result (number)","title":"attackFollowTiming"},{"location":"types/tes3playerAnimationController/#cameraoffset","text":"Read-only . Additional offset applied to the camera's position during the third person. Returns : result ( tes3vector3 )","title":"cameraOffset"},{"location":"types/tes3playerAnimationController/#firstpersonheadcameranode","text":"Read-only . This is the camera used while in first person. Switching from first person to third person point of view doesn't affect this camera. Returns : result ( niCamera )","title":"firstPersonHeadCameraNode"},{"location":"types/tes3playerAnimationController/#groundplanerotation","text":"The rotation of the actor around the up-down axis. When converted to euler angles, this axis corresponds to the z axis. The rotation range is [-PI, PI], where rotation of 0 corresponds to the game north. Returns : result ( tes3matrix33 )","title":"groundPlaneRotation"},{"location":"types/tes3playerAnimationController/#hittiming","text":"This it the time of the actor's attack animation in their .kf , played during the hit phase for fully charged attack. It's updated for the attacks from different directions. Returns : result (number)","title":"hitTiming"},{"location":"types/tes3playerAnimationController/#is3rdperson","text":"Read-only . This flag is set to true when the player's view is in third person. To change the player's POV, you can use tes3.force1stPerson and tes3.force3rdPerson . Returns : result (boolean)","title":"is3rdPerson"},{"location":"types/tes3playerAnimationController/#materialproperty","text":"The material property applied to the actor. Returns : result ( niMaterialProperty )","title":"materialProperty"},{"location":"types/tes3playerAnimationController/#maxattacktiming","text":"This it the time of the actor's attack animation in their .kf file, when the attack animation is fully charged. It's updated for the attacks from different directions. Returns : result (number)","title":"maxAttackTiming"},{"location":"types/tes3playerAnimationController/#minattacktiming","text":"This it the time of the actor's attack animation in their .kf file, at the earliest point the attack animation can end (when the attack button is just clicked and released). It's updated for the attacks from different directions. Returns : result (number)","title":"minAttackTiming"},{"location":"types/tes3playerAnimationController/#minhittiming","text":"This it the time of the actor's attack animation in their .kf , played during the hit phase for the minimally charged attack. It's updated for the attacks from different directions. Returns : result (number)","title":"minHitTiming"},{"location":"types/tes3playerAnimationController/#mobile","text":"Read-only . The mobile actor that this controller is responsible for. Returns : result ( tes3mobileActor )","title":"mobile"},{"location":"types/tes3playerAnimationController/#patchedoverridestate","text":"Returns : result (integer)","title":"patchedOverrideState"},{"location":"types/tes3playerAnimationController/#pickdata","text":"Read-only . Returns : result ( niPick )","title":"pickData"},{"location":"types/tes3playerAnimationController/#remainingblocktime","text":"Returns : result (number)","title":"remainingBlockTime"},{"location":"types/tes3playerAnimationController/#shadowcameramatrix","text":"Read-only . The local rotation matrix of the shadow camera. Returns : result ( tes3matrix33 )","title":"shadowCameraMatrix"},{"location":"types/tes3playerAnimationController/#shouldjump","text":"Returns : result (integer)","title":"shouldJump"},{"location":"types/tes3playerAnimationController/#speedmultiplier","text":"This is the speed multiplier of the current animation. For example, it is used by the game engine to scale the speed of the turning animation whith the speed at which the player is rotating the view with the mouse. In that case the value range is [0.0, 1.5]. Returns : result (number)","title":"speedMultiplier"},{"location":"types/tes3playerAnimationController/#starttime","text":"This it the starting time of the actor's attack animation in their .kf file. It's updated for the attacks from different directions. Returns : result (number)","title":"startTime"},{"location":"types/tes3playerAnimationController/#strikewhenattackswingreaches","text":"For NPCs this corresponds to how long the weapon was charged by the NPC after the attack landed. The value is in range [0.0, 1.0]. This property isn't used for the player character. Returns : result (number)","title":"strikeWhenAttackSwingReaches"},{"location":"types/tes3playerAnimationController/#togglepov","text":"Read-only . This property is set to true for one frame to change the point of view. Since this property is read-only, you can use tes3.force1stPerson and tes3.force3rdPerson . Returns : result (boolean)","title":"togglePOV"},{"location":"types/tes3playerAnimationController/#usethirdpersonaftervanitycameradone","text":"Read-only . This flag is set to true if vanity mode was entered from third person view. If vanity mode was entered from first person view, this flag is set to false . Returns : result (boolean)","title":"useThirdPersonAfterVanityCameraDone"},{"location":"types/tes3playerAnimationController/#vanitycamera","text":"Read-only . Returns : result ( niCamera )","title":"vanityCamera"},{"location":"types/tes3playerAnimationController/#vanitycameradistance","text":"Read-only . The orbiting radius of the camera during vanity mode in game units . Measured from the center of the player's head. Returns : result (integer)","title":"vanityCameraDistance"},{"location":"types/tes3playerAnimationController/#vanitycameraenabled","text":"Read-only . The value of this property is 1 during vanity camera mode, and 0 otherwise. Returns : result (integer)","title":"vanityCameraEnabled"},{"location":"types/tes3playerAnimationController/#vanitycameraz","text":"Read-only . The offset on up-down (world z) axis of the camera in third person or during vanity mode from the player's head height in game units . Returns : result (number)","title":"vanityCameraZ"},{"location":"types/tes3playerAnimationController/#vertexcolorproperty","text":"The vertex color property applied to the actor. Returns : result ( niVertexColorProperty )","title":"vertexColorProperty"},{"location":"types/tes3playerAnimationController/#verticalrotation","text":"Only used for the player. When converted to euler angles, the rotation about x axis will correspond to the rotation obtained from looking up and down. The rotations around other axes are always zero. In degrees the rotations range from -89.95 degrees for looking up, and 89.95 for looking maximally down. Returns : result ( tes3matrix33 )","title":"verticalRotation"},{"location":"types/tes3playerAnimationController/#weaponspeed","text":"The animation speed scaling of the weapon animations. This includes all weapon related idle, attack, and ready/unready animations. This value is reset at the starting frame of each weapon strike, normally equal to the the weapon speed. Therefore if you use this it should be changed after every strike, and reset after. Ready/unready actions do not change speed, but are affected by speed. Use by getting the animation controller from the mobile. e.g. mobile.animationController.weaponSpeed = 0.5 Returns : result (number)","title":"weaponSpeed"},{"location":"types/tes3playerAnimationController/#methods","text":"","title":"Methods"},{"location":"types/tes3playerAnimationController/#calculateattackswing","text":"Calculates how much an attack is currently being charged. Returns a value ranging from 0.0 to 1.0 . A value of 1.0 indicates that the attack is fully charged. Will always return 0.0 when not currently charging an attack. local result = myObject : calculateAttackSwing () Returns : result (number)","title":"calculateAttackSwing"},{"location":"types/tes3probe/","text":"tes3probe \u2693\ufe0e A core lockpick object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) maxCondition \u2693\ufe0e The maximum condition/health of the object. Returns : result (number) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) quality \u2693\ufe0e The quality of the object, with how much of a bonus it has. Returns : result (number) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e Read-only . The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"Tes3probe"},{"location":"types/tes3probe/#tes3probe","text":"A core lockpick object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3probe"},{"location":"types/tes3probe/#properties","text":"","title":"Properties"},{"location":"types/tes3probe/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3probe/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3probe/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3probe/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3probe/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3probe/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3probe/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3probe/#maxcondition","text":"The maximum condition/health of the object. Returns : result (number)","title":"maxCondition"},{"location":"types/tes3probe/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3probe/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3probe/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3probe/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3probe/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3probe/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3probe/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3probe/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3probe/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3probe/#quality","text":"The quality of the object, with how much of a bonus it has. Returns : result (number)","title":"quality"},{"location":"types/tes3probe/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3probe/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3probe/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3probe/#script","text":"Read-only . The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3probe/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3probe/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3probe/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3probe/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3probe/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3probe/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3probe/#methods","text":"","title":"Methods"},{"location":"types/tes3probe/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3processManager/","text":"tes3processManager \u2693\ufe0e Properties \u2693\ufe0e aiDistance \u2693\ufe0e A value which controls how far the game AI is processed, measured in game distance units. Corresponds to AI Distance slider in Options menu. Returns : result (number) aiDistanceScale \u2693\ufe0e A value which controls how far the game AI is processed. Corresponds to AI Distance slider in Options menu. This scale is in range [0, 1]. Where 0 means the minimal AI processing range, while 1 means maximal AI processing range. Returns : result (number) Methods \u2693\ufe0e checkAlarmRadius \u2693\ufe0e myObject : checkAlarmRadius ({ actor = ..., container = ... }) Parameters : params (table) actor ( tes3mobileActor ): The actor to perform a check for. container ( tes3iterator ): Container is a actor's AI planner e.g. mobile.aiPlanner . checkNearbyEnemiesAllowRest \u2693\ufe0e Performs a check whether any potential nearby enemies allow the player to rest. local result = myObject : checkNearbyEnemiesAllowRest () Returns : result (boolean) checkPlayerDistance \u2693\ufe0e Forces a new distance check for actor AI behaviour. myObject : checkPlayerDistance () detectPresence \u2693\ufe0e This function performs a check for presence of a given mobile actor. myObject : detectPresence ({ actor = ..., unknown = ... }) Parameters : params (table) actor ( tes3mobileActor ): The actor to perform a check for. unknown (boolean) detectSneak \u2693\ufe0e This function performs a check whether a detector can detect another actor sneaking. local isDetected = myObject : detectSneak ({ detector = ..., target = ..., unknown = ... }) Parameters : params (table) detector ( tes3mobileActor ): The detector actor to perform a check for. target ( tes3mobileActor ): The target actor to perform a check for. unknown (boolean) Returns : isDetected (boolean)","title":"tes3processManager"},{"location":"types/tes3processManager/#tes3processmanager","text":"","title":"tes3processManager"},{"location":"types/tes3processManager/#properties","text":"","title":"Properties"},{"location":"types/tes3processManager/#aidistance","text":"A value which controls how far the game AI is processed, measured in game distance units. Corresponds to AI Distance slider in Options menu. Returns : result (number)","title":"aiDistance"},{"location":"types/tes3processManager/#aidistancescale","text":"A value which controls how far the game AI is processed. Corresponds to AI Distance slider in Options menu. This scale is in range [0, 1]. Where 0 means the minimal AI processing range, while 1 means maximal AI processing range. Returns : result (number)","title":"aiDistanceScale"},{"location":"types/tes3processManager/#methods","text":"","title":"Methods"},{"location":"types/tes3processManager/#checkalarmradius","text":"myObject : checkAlarmRadius ({ actor = ..., container = ... }) Parameters : params (table) actor ( tes3mobileActor ): The actor to perform a check for. container ( tes3iterator ): Container is a actor's AI planner e.g. mobile.aiPlanner .","title":"checkAlarmRadius"},{"location":"types/tes3processManager/#checknearbyenemiesallowrest","text":"Performs a check whether any potential nearby enemies allow the player to rest. local result = myObject : checkNearbyEnemiesAllowRest () Returns : result (boolean)","title":"checkNearbyEnemiesAllowRest"},{"location":"types/tes3processManager/#checkplayerdistance","text":"Forces a new distance check for actor AI behaviour. myObject : checkPlayerDistance ()","title":"checkPlayerDistance"},{"location":"types/tes3processManager/#detectpresence","text":"This function performs a check for presence of a given mobile actor. myObject : detectPresence ({ actor = ..., unknown = ... }) Parameters : params (table) actor ( tes3mobileActor ): The actor to perform a check for. unknown (boolean)","title":"detectPresence"},{"location":"types/tes3processManager/#detectsneak","text":"This function performs a check whether a detector can detect another actor sneaking. local isDetected = myObject : detectSneak ({ detector = ..., target = ..., unknown = ... }) Parameters : params (table) detector ( tes3mobileActor ): The detector actor to perform a check for. target ( tes3mobileActor ): The target actor to perform a check for. unknown (boolean) Returns : isDetected (boolean)","title":"detectSneak"},{"location":"types/tes3projectileManager/","text":"tes3projectileManager \u2693\ufe0e A game structure which holds all active projectiles. Properties \u2693\ufe0e projectiles \u2693\ufe0e Read-only . A list of all currently active projectiles ( tes3mobileProjectile ). Returns : result ( tes3mobileProjectile [])","title":"tes3projectileManager"},{"location":"types/tes3projectileManager/#tes3projectilemanager","text":"A game structure which holds all active projectiles.","title":"tes3projectileManager"},{"location":"types/tes3projectileManager/#properties","text":"","title":"Properties"},{"location":"types/tes3projectileManager/#projectiles","text":"Read-only . A list of all currently active projectiles ( tes3mobileProjectile ). Returns : result ( tes3mobileProjectile [])","title":"projectiles"},{"location":"types/tes3quest/","text":"tes3quest \u2693\ufe0e A representation of a quest, with associated dialogue and info. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) dialogue \u2693\ufe0e Read-only . A collection of dialogues associated with the quest. Returns : result ( tes3dialogue []) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) info \u2693\ufe0e Read-only . A collection of dialogue info associated with the quest. Returns : result ( tes3dialogueInfo []) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"Tes3quest"},{"location":"types/tes3quest/#tes3quest","text":"A representation of a quest, with associated dialogue and info. This type inherits the following: tes3baseObject","title":"tes3quest"},{"location":"types/tes3quest/#properties","text":"","title":"Properties"},{"location":"types/tes3quest/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3quest/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3quest/#dialogue","text":"Read-only . A collection of dialogues associated with the quest. Returns : result ( tes3dialogue [])","title":"dialogue"},{"location":"types/tes3quest/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3quest/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3quest/#info","text":"Read-only . A collection of dialogue info associated with the quest. Returns : result ( tes3dialogueInfo [])","title":"info"},{"location":"types/tes3quest/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3quest/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3quest/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3quest/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3quest/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3quest/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3quest/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3quest/#methods","text":"","title":"Methods"},{"location":"types/tes3quest/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3quickKey/","text":"tes3quickKey \u2693\ufe0e A configuration detailing a quick key. Properties \u2693\ufe0e item \u2693\ufe0e Read-only . The raw item bound to the quick key. To change its value, use either the setItem or setMagic methods. Returns : result ( tes3item ) itemData \u2693\ufe0e Read-only . The raw item data bound to the quick key. To change its value, use either the setItem or setMagic methods. Returns : result ( tes3itemData ) spell \u2693\ufe0e Read-only . The raw spell bound to the quick key. To change its value, use the setMagic method. Returns : result ( tes3spell ) type \u2693\ufe0e Read-only . The type of the quick key, with the numeric value matching tes3.quickKeyType constants. Returns : result (number) Methods \u2693\ufe0e clear \u2693\ufe0e Unbinds the quick key, removing any data in it. myObject : clear () getItem \u2693\ufe0e Gets the item associated with the given quick key. If the quick key is not marked as an item, this will return nil . This is equivalent to fetching the item and itemData properties, after checking to make sure the type is set to item. local source , data = myObject : getItem () Returns : source ( tes3item , nil): The item bound to the quick key. data ( tes3itemData , nil): Any associated item data bound to the quick key getMagic \u2693\ufe0e Gets the magic associated with the given quick key. If the quick key is not marked as magic, this will return nil . This is equivalent to fetching either the spell or item properties and the itemData property, after checking to make sure the type is set to magic. local source , data = myObject : getMagic () Returns : source ( tes3spell , tes3item , nil): The castable source bound to the quick key. data ( tes3itemData , nil): Any associated item data bound to the quick key setItem \u2693\ufe0e Sets the binding of the quick key to a given item source. myObject : setItem ( source , data ) Parameters : source ( tes3item ): The item to be bound to the quick key. data ( tes3itemData , nil): The optional item data to be paired with the binding. setMagic \u2693\ufe0e Sets the binding of the quick key to a given magic source. This must be a spell, or an item with an on-use enchantment. myObject : setMagic ( source , data ) Parameters : source ( tes3spell , tes3item ): The castable source to be bound to the quick key. data ( tes3itemData , nil): If given an item as the source, the optional item data to be paired with the binding.","title":"tes3quickKey"},{"location":"types/tes3quickKey/#tes3quickkey","text":"A configuration detailing a quick key.","title":"tes3quickKey"},{"location":"types/tes3quickKey/#properties","text":"","title":"Properties"},{"location":"types/tes3quickKey/#item","text":"Read-only . The raw item bound to the quick key. To change its value, use either the setItem or setMagic methods. Returns : result ( tes3item )","title":"item"},{"location":"types/tes3quickKey/#itemdata","text":"Read-only . The raw item data bound to the quick key. To change its value, use either the setItem or setMagic methods. Returns : result ( tes3itemData )","title":"itemData"},{"location":"types/tes3quickKey/#spell","text":"Read-only . The raw spell bound to the quick key. To change its value, use the setMagic method. Returns : result ( tes3spell )","title":"spell"},{"location":"types/tes3quickKey/#type","text":"Read-only . The type of the quick key, with the numeric value matching tes3.quickKeyType constants. Returns : result (number)","title":"type"},{"location":"types/tes3quickKey/#methods","text":"","title":"Methods"},{"location":"types/tes3quickKey/#clear","text":"Unbinds the quick key, removing any data in it. myObject : clear ()","title":"clear"},{"location":"types/tes3quickKey/#getitem","text":"Gets the item associated with the given quick key. If the quick key is not marked as an item, this will return nil . This is equivalent to fetching the item and itemData properties, after checking to make sure the type is set to item. local source , data = myObject : getItem () Returns : source ( tes3item , nil): The item bound to the quick key. data ( tes3itemData , nil): Any associated item data bound to the quick key","title":"getItem"},{"location":"types/tes3quickKey/#getmagic","text":"Gets the magic associated with the given quick key. If the quick key is not marked as magic, this will return nil . This is equivalent to fetching either the spell or item properties and the itemData property, after checking to make sure the type is set to magic. local source , data = myObject : getMagic () Returns : source ( tes3spell , tes3item , nil): The castable source bound to the quick key. data ( tes3itemData , nil): Any associated item data bound to the quick key","title":"getMagic"},{"location":"types/tes3quickKey/#setitem","text":"Sets the binding of the quick key to a given item source. myObject : setItem ( source , data ) Parameters : source ( tes3item ): The item to be bound to the quick key. data ( tes3itemData , nil): The optional item data to be paired with the binding.","title":"setItem"},{"location":"types/tes3quickKey/#setmagic","text":"Sets the binding of the quick key to a given magic source. This must be a spell, or an item with an on-use enchantment. myObject : setMagic ( source , data ) Parameters : source ( tes3spell , tes3item ): The castable source to be bound to the quick key. data ( tes3itemData , nil): If given an item as the source, the optional item data to be paired with the binding.","title":"setMagic"},{"location":"types/tes3race/","text":"tes3race \u2693\ufe0e A core object representing a character race. This type inherits the following: tes3baseObject Properties \u2693\ufe0e abilities \u2693\ufe0e Read-only . A list of abilities that NPCs of that race have access to. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, ability in pairs(race.abilities.iterator) do print(ability.name) end Returns : result ( tes3spellList ) baseAttributes \u2693\ufe0e Read-only . Array-style table access to base 8 attributes for the race. Each element in the array is a tes3raceBaseAttribute . Returns : result ( tes3raceBaseAttribute []) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) description \u2693\ufe0e Read-only . Loads from disk and returns the description of the race. Returns : result (string) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) femaleBody \u2693\ufe0e Read-only . Access to all the body parts that will be used for female actors of this race. Returns : result ( tes3raceBodyParts ) flags \u2693\ufe0e Raw bit-based flags. Returns : result (number) height \u2693\ufe0e Read-only . Access to the the height pair for males/females of the race. Returns : result ( tes3raceHeightWeight ) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isBeast \u2693\ufe0e Access to the beast race flag. Returns : result (boolean) isPlayable \u2693\ufe0e Access to the playable race flag. Returns : result (boolean) maleBody \u2693\ufe0e Read-only . Access to all the body parts that will be used for male actors of this race. Returns : result ( tes3raceBodyParts ) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e Read-only . The player-facing name for the object. Returns : result (string) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) skillBonuses \u2693\ufe0e Read-only . Array-style table access for 7 skill bonuses for the race. Each element in the array is a tes3raceSkillBonus . Returns : result ( tes3raceSkillBonus []) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) weight \u2693\ufe0e Read-only . Access to the the height pair for males/females of the race. Returns : result ( tes3raceHeightWeight ) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"Tes3race"},{"location":"types/tes3race/#tes3race","text":"A core object representing a character race. This type inherits the following: tes3baseObject","title":"tes3race"},{"location":"types/tes3race/#properties","text":"","title":"Properties"},{"location":"types/tes3race/#abilities","text":"Read-only . A list of abilities that NPCs of that race have access to. It is a tes3spellList , which is a list wrapper with helper functions. The actual list is accessed with .iterator . e.g. for _, ability in pairs(race.abilities.iterator) do print(ability.name) end Returns : result ( tes3spellList )","title":"abilities"},{"location":"types/tes3race/#baseattributes","text":"Read-only . Array-style table access to base 8 attributes for the race. Each element in the array is a tes3raceBaseAttribute . Returns : result ( tes3raceBaseAttribute [])","title":"baseAttributes"},{"location":"types/tes3race/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3race/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3race/#description","text":"Read-only . Loads from disk and returns the description of the race. Returns : result (string)","title":"description"},{"location":"types/tes3race/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3race/#femalebody","text":"Read-only . Access to all the body parts that will be used for female actors of this race. Returns : result ( tes3raceBodyParts )","title":"femaleBody"},{"location":"types/tes3race/#flags","text":"Raw bit-based flags. Returns : result (number)","title":"flags"},{"location":"types/tes3race/#height","text":"Read-only . Access to the the height pair for males/females of the race. Returns : result ( tes3raceHeightWeight )","title":"height"},{"location":"types/tes3race/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3race/#isbeast","text":"Access to the beast race flag. Returns : result (boolean)","title":"isBeast"},{"location":"types/tes3race/#isplayable","text":"Access to the playable race flag. Returns : result (boolean)","title":"isPlayable"},{"location":"types/tes3race/#malebody","text":"Read-only . Access to all the body parts that will be used for male actors of this race. Returns : result ( tes3raceBodyParts )","title":"maleBody"},{"location":"types/tes3race/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3race/#name","text":"Read-only . The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3race/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3race/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3race/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3race/#skillbonuses","text":"Read-only . Array-style table access for 7 skill bonuses for the race. Each element in the array is a tes3raceSkillBonus . Returns : result ( tes3raceSkillBonus [])","title":"skillBonuses"},{"location":"types/tes3race/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3race/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3race/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3race/#weight","text":"Read-only . Access to the the height pair for males/females of the race. Returns : result ( tes3raceHeightWeight )","title":"weight"},{"location":"types/tes3race/#methods","text":"","title":"Methods"},{"location":"types/tes3race/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3raceBaseAttribute/","text":"tes3raceBaseAttribute \u2693\ufe0e A substructure for a race, storing a base attribute value for male and female actors. Properties \u2693\ufe0e female \u2693\ufe0e The base attribute for female actors. Returns : result (number) male \u2693\ufe0e The base attribute for male actors. Returns : result (number)","title":"tes3raceBaseAttribute"},{"location":"types/tes3raceBaseAttribute/#tes3racebaseattribute","text":"A substructure for a race, storing a base attribute value for male and female actors.","title":"tes3raceBaseAttribute"},{"location":"types/tes3raceBaseAttribute/#properties","text":"","title":"Properties"},{"location":"types/tes3raceBaseAttribute/#female","text":"The base attribute for female actors. Returns : result (number)","title":"female"},{"location":"types/tes3raceBaseAttribute/#male","text":"The base attribute for male actors. Returns : result (number)","title":"male"},{"location":"types/tes3raceBodyParts/","text":"tes3raceBodyParts \u2693\ufe0e A substructure for a race, storing the used body parts for a given sex. Properties \u2693\ufe0e ankle \u2693\ufe0e The ankle that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) chest \u2693\ufe0e The chest that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) clavicle \u2693\ufe0e The clavicle that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) foot \u2693\ufe0e The foot that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) forearm \u2693\ufe0e The forearm that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) groin \u2693\ufe0e The groin that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) hair \u2693\ufe0e The base hair that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) hands \u2693\ufe0e The hands that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) head \u2693\ufe0e The head that an actor of this race and sex will use. If the actor is a vampire, the .vampireHead part will be used instead. Returns : result ( tes3bodyPart ) knee \u2693\ufe0e The knee that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) neck \u2693\ufe0e The neck that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) tail \u2693\ufe0e The tail that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) upperArm \u2693\ufe0e The upper arm that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) upperLeg \u2693\ufe0e The upper leg that an actor of this race and sex will use. Returns : result ( tes3bodyPart ) vampireHead \u2693\ufe0e The head that an actor of this race and sex will use when they are a vampire. Returns : result ( tes3bodyPart ) wrist \u2693\ufe0e The wrist that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"tes3raceBodyParts"},{"location":"types/tes3raceBodyParts/#tes3racebodyparts","text":"A substructure for a race, storing the used body parts for a given sex.","title":"tes3raceBodyParts"},{"location":"types/tes3raceBodyParts/#properties","text":"","title":"Properties"},{"location":"types/tes3raceBodyParts/#ankle","text":"The ankle that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"ankle"},{"location":"types/tes3raceBodyParts/#chest","text":"The chest that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"chest"},{"location":"types/tes3raceBodyParts/#clavicle","text":"The clavicle that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"clavicle"},{"location":"types/tes3raceBodyParts/#foot","text":"The foot that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"foot"},{"location":"types/tes3raceBodyParts/#forearm","text":"The forearm that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"forearm"},{"location":"types/tes3raceBodyParts/#groin","text":"The groin that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"groin"},{"location":"types/tes3raceBodyParts/#hair","text":"The base hair that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"hair"},{"location":"types/tes3raceBodyParts/#hands","text":"The hands that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"hands"},{"location":"types/tes3raceBodyParts/#head","text":"The head that an actor of this race and sex will use. If the actor is a vampire, the .vampireHead part will be used instead. Returns : result ( tes3bodyPart )","title":"head"},{"location":"types/tes3raceBodyParts/#knee","text":"The knee that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"knee"},{"location":"types/tes3raceBodyParts/#neck","text":"The neck that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"neck"},{"location":"types/tes3raceBodyParts/#tail","text":"The tail that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"tail"},{"location":"types/tes3raceBodyParts/#upperarm","text":"The upper arm that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"upperArm"},{"location":"types/tes3raceBodyParts/#upperleg","text":"The upper leg that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"upperLeg"},{"location":"types/tes3raceBodyParts/#vampirehead","text":"The head that an actor of this race and sex will use when they are a vampire. Returns : result ( tes3bodyPart )","title":"vampireHead"},{"location":"types/tes3raceBodyParts/#wrist","text":"The wrist that an actor of this race and sex will use. Returns : result ( tes3bodyPart )","title":"wrist"},{"location":"types/tes3raceHeightWeight/","text":"tes3raceHeightWeight \u2693\ufe0e A substructure for a race, storing a height or weight for male and female actors. Properties \u2693\ufe0e female \u2693\ufe0e The height or weight for female actors. Returns : result (number) male \u2693\ufe0e The height or weight for male actors. Returns : result (number)","title":"tes3raceHeightWeight"},{"location":"types/tes3raceHeightWeight/#tes3raceheightweight","text":"A substructure for a race, storing a height or weight for male and female actors.","title":"tes3raceHeightWeight"},{"location":"types/tes3raceHeightWeight/#properties","text":"","title":"Properties"},{"location":"types/tes3raceHeightWeight/#female","text":"The height or weight for female actors. Returns : result (number)","title":"female"},{"location":"types/tes3raceHeightWeight/#male","text":"The height or weight for male actors. Returns : result (number)","title":"male"},{"location":"types/tes3raceSkillBonus/","text":"tes3raceSkillBonus \u2693\ufe0e A substructure for a race, storing up to 7 skill bonuses. Properties \u2693\ufe0e bonus \u2693\ufe0e The value to modify the skill with. Returns : result (number) skill \u2693\ufe0e The skill id to modify. Maps to values in tes3.skill namespace. Returns : result (number)","title":"tes3raceSkillBonus"},{"location":"types/tes3raceSkillBonus/#tes3raceskillbonus","text":"A substructure for a race, storing up to 7 skill bonuses.","title":"tes3raceSkillBonus"},{"location":"types/tes3raceSkillBonus/#properties","text":"","title":"Properties"},{"location":"types/tes3raceSkillBonus/#bonus","text":"The value to modify the skill with. Returns : result (number)","title":"bonus"},{"location":"types/tes3raceSkillBonus/#skill","text":"The skill id to modify. Maps to values in tes3.skill namespace. Returns : result (number)","title":"skill"},{"location":"types/tes3rangeInt/","text":"tes3rangeInt \u2693\ufe0e A simple pair of integers, typically used to define a range. Properties \u2693\ufe0e max \u2693\ufe0e The maximum value in the range. Returns : result (number) min \u2693\ufe0e The minimum value in the range. Returns : result (number)","title":"tes3rangeInt"},{"location":"types/tes3rangeInt/#tes3rangeint","text":"A simple pair of integers, typically used to define a range.","title":"tes3rangeInt"},{"location":"types/tes3rangeInt/#properties","text":"","title":"Properties"},{"location":"types/tes3rangeInt/#max","text":"The maximum value in the range. Returns : result (number)","title":"max"},{"location":"types/tes3rangeInt/#min","text":"The minimum value in the range. Returns : result (number)","title":"min"},{"location":"types/tes3rechargingItem/","text":"tes3rechargingItem \u2693\ufe0e Data for a recharging item. Not necessarily an item owned by the player. Properties \u2693\ufe0e enchantment \u2693\ufe0e Read-only . The enchantment of the recharging item. Returns : result ( tes3enchantment ) itemData \u2693\ufe0e Read-only . The specific item data being recharged. Returns : result ( tes3itemData ) object \u2693\ufe0e Read-only . The item being recharged. Returns : result ( tes3item )","title":"tes3rechargingItem"},{"location":"types/tes3rechargingItem/#tes3rechargingitem","text":"Data for a recharging item. Not necessarily an item owned by the player.","title":"tes3rechargingItem"},{"location":"types/tes3rechargingItem/#properties","text":"","title":"Properties"},{"location":"types/tes3rechargingItem/#enchantment","text":"Read-only . The enchantment of the recharging item. Returns : result ( tes3enchantment )","title":"enchantment"},{"location":"types/tes3rechargingItem/#itemdata","text":"Read-only . The specific item data being recharged. Returns : result ( tes3itemData )","title":"itemData"},{"location":"types/tes3rechargingItem/#object","text":"Read-only . The item being recharged. Returns : result ( tes3item )","title":"object"},{"location":"types/tes3reference/","text":"tes3reference \u2693\ufe0e A reference is a sort of container structure for objects. It holds a base object, as well as various variables associated with that object that make it unique. For example, many doors may share the same base object. However, each door reference might have a different owner, different lock/trap statuses, etc. that make the object unique. This type inherits the following: tes3object , tes3baseObject Properties \u2693\ufe0e activationReference \u2693\ufe0e The current reference, if any, that this reference will activate. Returns : result ( tes3reference ) attachments \u2693\ufe0e Read-only . A table with friendly named access to all supported attachments. Returns : result (table<string, tes3bodyPartManager | tes3itemData | tes3lightNode | tes3lockNode | tes3mobileActor | tes3reference | tes3travelDestinationNode | tes3animationData >) baseObject \u2693\ufe0e Read-only . This is similar to the object field, but is guaranteed to provide the base-most object. If object is an actor clone, the base actor will be given instead. Returns : result ( tes3physicalObject ) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) bodyPartManager \u2693\ufe0e Read-only . Access to the reference's body part manager, if available. Typically this is only available on NPC references. Returns : result ( tes3bodyPartManager , nil) cell \u2693\ufe0e Read-only . The cell that the reference is currently in. Returns : result ( tes3cell ) context \u2693\ufe0e Read-only . Access to the script context for this reference and its associated script. Returns : result ( tes3scriptContext ) Example: Checking reference's script variables Companions usually have a mwscript script with variable named companion set to 1. This can be used to determine if a reference is player's companion or not. --- This function returns `true` if the reference --- has a variable companion set to 1 in its script. ---@param reference tes3reference ---@return boolean local function hasCompanionShare ( reference ) -- This shows that we can read any variable inside -- `tes3scriptContext` objects as if it was normal Lua table -- (`reference.context` is of `tes3scriptContext` type) local companion = reference . context [ \"companion\" ] return companion and companion == 1 end data \u2693\ufe0e A generic lua table that data can be written to, and synced to/from the save. All information stored must be valid for serialization to json. For item references, this is the same table as on the tes3itemData structure. To store data that doesn't get serialized to/from the save, use tempData . Returns : result (table) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) destination \u2693\ufe0e Read-only . Returns the travel destination node for this reference, or nil . This can be used to determine where a given door links to. Returns : result ( tes3travelDestinationNode , nil) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) facing \u2693\ufe0e Convenient access to the z-component of the reference's orientation. Setting the facing sets the reference as modified. Returns : result (number) forwardDirection \u2693\ufe0e Read-only . The normalized forward or Y direction vector of the reference. Returns : result ( tes3vector3 ) hasNoCollision \u2693\ufe0e Sets the no-collision flag on this reference, and recalculates collision groups. Use the setNoCollisionFlag() function to manage collision group recalculation instead. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isDead \u2693\ufe0e Read-only . Returns true if the object is dead, false if they are alive, or nil if that couldn't be determined. Returns : result (boolean, nil) isEmpty \u2693\ufe0e Friendly access onto the reference's empty inventory flag. Returns : result (boolean) isLeveledSpawn \u2693\ufe0e Read-only . If true, this reference was created as a result of a leveled spawn. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) isRespawn \u2693\ufe0e Read-only . If true, the references respawn flag is set. Returns : result (boolean) itemData \u2693\ufe0e Gets or sets the attached itemData for this reference. If set to nil , the item data will be unhooked but not deleted. Returns : result ( tes3itemData ) leveledBaseReference \u2693\ufe0e Read-only . If this reference is a leveled spawn, this is the leveled creature spawn reference. If this reference wasn't the result of a leveled spawn, the value is nil . Returns : result ( tes3reference , nil) light \u2693\ufe0e Read-only . Direct access to the scene graph light, if a dynamic light is set. Returns : result ( niPointLight ) lockNode \u2693\ufe0e Read-only . Quick access to the reference's lock node, if any. Returns : result ( tes3lockNode ) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) mobile \u2693\ufe0e Read-only . Access to the attached mobile object, if applicable. Returns : result ( tes3mobileCreature , tes3mobileNPC , tes3mobilePlayer , tes3mobileProjectile , tes3mobileSpellProjectile , nil) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) nextNode \u2693\ufe0e Read-only . The next reference in the parent reference list. Returns : result ( tes3reference ) nodeData \u2693\ufe0e Read-only . Redundant access to this object, for iterating over a tes3referenceList. Returns : result ( tes3reference ) object \u2693\ufe0e Read-only . The object that the reference is for, such as a weapon, armor, or actor. Returns : result ( tes3physicalObject ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) orientation \u2693\ufe0e Access to the reference's orientation, in XYZ Euler angles in Radians. Changing the orientation marks the reference as modified. Returns : result ( tes3vector3 ) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) position \u2693\ufe0e Access to the reference's position. Setting the position sets the reference as modified. For actors, the axes are: X right - left(+) Y front - back(+) Z down - up(+) Returns : result ( tes3vector3 ) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) previousNode \u2693\ufe0e Read-only . The previous reference in the parent reference list. Returns : result ( tes3reference ) rightDirection \u2693\ufe0e Read-only . The normalized right or X direction vector of the reference. Returns : result ( tes3vector3 ) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e Read-only . The scene graph node that the reference uses for rendering. Returns : result ( niNode ) sourceFormId \u2693\ufe0e No description yet available. Returns : result (number) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) sourceModId \u2693\ufe0e No description yet available. Returns : result (number) stackSize \u2693\ufe0e Access to the size of a stack, if the reference represents one or more items. Returns : result (number) startingOrientation \u2693\ufe0e Read-only . Access to the reference's original orientation. Note that this value is invalid for NPCs and creatures. Returns : result ( tes3vector3 ) startingPosition \u2693\ufe0e Read-only . Access to the reference's original position. Note that this value is invalid for NPCs and creatures. Returns : result ( tes3vector3 ) supportsLuaData \u2693\ufe0e If true, this reference can store temporary or persistent lua data. Returns : result (boolean) targetFormId \u2693\ufe0e No description yet available. Returns : result (number) targetModId \u2693\ufe0e No description yet available. Returns : result (number) tempData \u2693\ufe0e As with the data field, a generic lua table that data can be written to. No information in this table will persist into saves. For item references, this is the same table as on the tes3itemData structure. Returns : result (table) upDirection \u2693\ufe0e Read-only . The normalized up or Z direction vector of the reference. Returns : result ( tes3vector3 ) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) activate \u2693\ufe0e Causes this reference to activate another. This will lead them to go through doors, pick up items, etc. myObject : activate ( reference ) Parameters : reference ( tes3reference ): The other reference to activate. clearActionFlag \u2693\ufe0e Unsets a bit in the reference's action data attachment myObject : clearActionFlag ( flagIndex ) Parameters : flagIndex (integer): The action flag to clear. Maps to values in tes3.actionFlag namespace. clone \u2693\ufe0e Clones a reference for a base actor into a reference to an instance of that actor. For example, this will force a container to resolve its leveled items and have its own unique inventory. local result = myObject : clone () Returns : result (boolean) delete \u2693\ufe0e Disables the reference, removes all its attachments, resets its scale, and sets the reference to be deleted. myObject : delete () deleteDynamicLightAttachment \u2693\ufe0e Deletes the dynamic light attachment, if it exists. This will automatically detach the dynamic light from affected nodes. myObject : deleteDynamicLightAttachment ( removeLightFromParent ) Parameters : removeLightFromParent (boolean): Default : false . If true , the dynamic light is removed from its parent node as well. detachDynamicLightFromAffectedNodes \u2693\ufe0e Removes the dynamic light from any affected scene graph nodes, but will not delete the associated attachment. myObject : detachDynamicLightFromAffectedNodes () disable \u2693\ufe0e Hides the reference, detaches all dynamic lights and sounds, and stops any mobile simulation. Sets the reference as modified implicitly. local success = myObject : disable () Returns : success (boolean): If true , the reference was successfully disabled. enable \u2693\ufe0e Shows the reference, reattaches all dynamic lights and sounds, and restarts any mobile simulation if the player is close enough. Sets the reference as modified implicitly. local success = myObject : enable () Returns : success (boolean): If true , the reference was successfully enabled. getAngleTo \u2693\ufe0e Calculates the angle from this reference's current facing to the target reference. local angle = myObject : getAngleTo ( reference ) Parameters : reference ( tes3reference ): The reference to calculate the angle to. Returns : angle (number): The angle to the given reference in radians. getAttachedDynamicLight \u2693\ufe0e Fetches the dynamic light attachment. local result = myObject : getAttachedDynamicLight () Returns : result ( tes3lightNode ) getOrCreateAttachedDynamicLight \u2693\ufe0e Fetches the dynamic light attachment. If there isn't one, a new one will be created with the given light and value. If no light is supplied as an argument, a point light of radius 512 will be automatically created. If the light is not attached to any part of the scene graph yet, the point light will be placed as a child of the \"attachLight\" subnode of the model, or a child of the model if \"attachLight\" is not found. local result = myObject : getOrCreateAttachedDynamicLight ( light , phase ) Parameters : light ( niPointLight ): Optional . phase (number): Optional . Returns : result ( tes3lightNode ) onCloseInventory \u2693\ufe0e A function that tells the game that an inventory has been closed, if you are simulating inventory operations. It has the capability of un-cloning an inventory if it has not been modified. Typically not used outside of specific purposes. local result = myObject : onCloseInventory () Returns : result (boolean) setActionFlag \u2693\ufe0e Sets a bit in the reference's action data attachment. myObject : setActionFlag ( flagIndex ) Parameters : flagIndex (integer): The action flag to clear. Maps to values in tes3.actionFlag namespace. setDynamicLighting \u2693\ufe0e Sets the dynamic lighting state of the reference using the global data handler. myObject : setDynamicLighting () setNoCollisionFlag \u2693\ufe0e Sets if this reference has active collision. This is preferable to changing the hasNoCollision property, if you are manipulating multiple objects at once and do not want to constantly recalculate collision groups. myObject : setNoCollisionFlag ( hasNoCollision , updateCollisions ) Parameters : hasNoCollision (boolean): If true , the reference no longer has collision. updateCollisions (boolean): Default : true . If true , collision groups for the active cells are recalculated. testActionFlag \u2693\ufe0e Returns the flag's value in the reference's action data attachment. local result = myObject : testActionFlag ( flagIndex ) Parameters : flagIndex (integer): The action flag to test. Maps to values in tes3.actionFlag namespace. Returns : result (boolean) updateEquipment \u2693\ufe0e Causes the reference, if of an actor, to update the reference's bodyparts with the currently equipped ones. myObject : updateEquipment () updateLighting \u2693\ufe0e Updates the lighting of the reference using the global data handler. myObject : updateLighting () updateSceneGraph \u2693\ufe0e Updates the reference's local rotation matrix, propagates position changes to the scene graph, and sets the reference's modified flag. You need to call this if the orientation or position was manually modified. myObject : updateSceneGraph ()","title":"Tes3reference"},{"location":"types/tes3reference/#tes3reference","text":"A reference is a sort of container structure for objects. It holds a base object, as well as various variables associated with that object that make it unique. For example, many doors may share the same base object. However, each door reference might have a different owner, different lock/trap statuses, etc. that make the object unique. This type inherits the following: tes3object , tes3baseObject","title":"tes3reference"},{"location":"types/tes3reference/#properties","text":"","title":"Properties"},{"location":"types/tes3reference/#activationreference","text":"The current reference, if any, that this reference will activate. Returns : result ( tes3reference )","title":"activationReference"},{"location":"types/tes3reference/#attachments","text":"Read-only . A table with friendly named access to all supported attachments. Returns : result (table<string, tes3bodyPartManager | tes3itemData | tes3lightNode | tes3lockNode | tes3mobileActor | tes3reference | tes3travelDestinationNode | tes3animationData >)","title":"attachments"},{"location":"types/tes3reference/#baseobject","text":"Read-only . This is similar to the object field, but is guaranteed to provide the base-most object. If object is an actor clone, the base actor will be given instead. Returns : result ( tes3physicalObject )","title":"baseObject"},{"location":"types/tes3reference/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3reference/#bodypartmanager","text":"Read-only . Access to the reference's body part manager, if available. Typically this is only available on NPC references. Returns : result ( tes3bodyPartManager , nil)","title":"bodyPartManager"},{"location":"types/tes3reference/#cell","text":"Read-only . The cell that the reference is currently in. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3reference/#context","text":"Read-only . Access to the script context for this reference and its associated script. Returns : result ( tes3scriptContext ) Example: Checking reference's script variables Companions usually have a mwscript script with variable named companion set to 1. This can be used to determine if a reference is player's companion or not. --- This function returns `true` if the reference --- has a variable companion set to 1 in its script. ---@param reference tes3reference ---@return boolean local function hasCompanionShare ( reference ) -- This shows that we can read any variable inside -- `tes3scriptContext` objects as if it was normal Lua table -- (`reference.context` is of `tes3scriptContext` type) local companion = reference . context [ \"companion\" ] return companion and companion == 1 end","title":"context"},{"location":"types/tes3reference/#data","text":"A generic lua table that data can be written to, and synced to/from the save. All information stored must be valid for serialization to json. For item references, this is the same table as on the tes3itemData structure. To store data that doesn't get serialized to/from the save, use tempData . Returns : result (table)","title":"data"},{"location":"types/tes3reference/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3reference/#destination","text":"Read-only . Returns the travel destination node for this reference, or nil . This can be used to determine where a given door links to. Returns : result ( tes3travelDestinationNode , nil)","title":"destination"},{"location":"types/tes3reference/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3reference/#facing","text":"Convenient access to the z-component of the reference's orientation. Setting the facing sets the reference as modified. Returns : result (number)","title":"facing"},{"location":"types/tes3reference/#forwarddirection","text":"Read-only . The normalized forward or Y direction vector of the reference. Returns : result ( tes3vector3 )","title":"forwardDirection"},{"location":"types/tes3reference/#hasnocollision","text":"Sets the no-collision flag on this reference, and recalculates collision groups. Use the setNoCollisionFlag() function to manage collision group recalculation instead. Returns : result (boolean)","title":"hasNoCollision"},{"location":"types/tes3reference/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3reference/#isdead","text":"Read-only . Returns true if the object is dead, false if they are alive, or nil if that couldn't be determined. Returns : result (boolean, nil)","title":"isDead"},{"location":"types/tes3reference/#isempty","text":"Friendly access onto the reference's empty inventory flag. Returns : result (boolean)","title":"isEmpty"},{"location":"types/tes3reference/#isleveledspawn","text":"Read-only . If true, this reference was created as a result of a leveled spawn. Returns : result (boolean)","title":"isLeveledSpawn"},{"location":"types/tes3reference/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3reference/#isrespawn","text":"Read-only . If true, the references respawn flag is set. Returns : result (boolean)","title":"isRespawn"},{"location":"types/tes3reference/#itemdata","text":"Gets or sets the attached itemData for this reference. If set to nil , the item data will be unhooked but not deleted. Returns : result ( tes3itemData )","title":"itemData"},{"location":"types/tes3reference/#leveledbasereference","text":"Read-only . If this reference is a leveled spawn, this is the leveled creature spawn reference. If this reference wasn't the result of a leveled spawn, the value is nil . Returns : result ( tes3reference , nil)","title":"leveledBaseReference"},{"location":"types/tes3reference/#light","text":"Read-only . Direct access to the scene graph light, if a dynamic light is set. Returns : result ( niPointLight )","title":"light"},{"location":"types/tes3reference/#locknode","text":"Read-only . Quick access to the reference's lock node, if any. Returns : result ( tes3lockNode )","title":"lockNode"},{"location":"types/tes3reference/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3reference/#mobile","text":"Read-only . Access to the attached mobile object, if applicable. Returns : result ( tes3mobileCreature , tes3mobileNPC , tes3mobilePlayer , tes3mobileProjectile , tes3mobileSpellProjectile , nil)","title":"mobile"},{"location":"types/tes3reference/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3reference/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3reference/#nextnode","text":"Read-only . The next reference in the parent reference list. Returns : result ( tes3reference )","title":"nextNode"},{"location":"types/tes3reference/#nodedata","text":"Read-only . Redundant access to this object, for iterating over a tes3referenceList. Returns : result ( tes3reference )","title":"nodeData"},{"location":"types/tes3reference/#object","text":"Read-only . The object that the reference is for, such as a weapon, armor, or actor. Returns : result ( tes3physicalObject )","title":"object"},{"location":"types/tes3reference/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3reference/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3reference/#orientation","text":"Access to the reference's orientation, in XYZ Euler angles in Radians. Changing the orientation marks the reference as modified. Returns : result ( tes3vector3 )","title":"orientation"},{"location":"types/tes3reference/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3reference/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3reference/#position","text":"Access to the reference's position. Setting the position sets the reference as modified. For actors, the axes are: X right - left(+) Y front - back(+) Z down - up(+) Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3reference/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3reference/#previousnode","text":"Read-only . The previous reference in the parent reference list. Returns : result ( tes3reference )","title":"previousNode"},{"location":"types/tes3reference/#rightdirection","text":"Read-only . The normalized right or X direction vector of the reference. Returns : result ( tes3vector3 )","title":"rightDirection"},{"location":"types/tes3reference/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3reference/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3reference/#scenenode","text":"Read-only . The scene graph node that the reference uses for rendering. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3reference/#sourceformid","text":"No description yet available. Returns : result (number)","title":"sourceFormId"},{"location":"types/tes3reference/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3reference/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3reference/#sourcemodid","text":"No description yet available. Returns : result (number)","title":"sourceModId"},{"location":"types/tes3reference/#stacksize","text":"Access to the size of a stack, if the reference represents one or more items. Returns : result (number)","title":"stackSize"},{"location":"types/tes3reference/#startingorientation","text":"Read-only . Access to the reference's original orientation. Note that this value is invalid for NPCs and creatures. Returns : result ( tes3vector3 )","title":"startingOrientation"},{"location":"types/tes3reference/#startingposition","text":"Read-only . Access to the reference's original position. Note that this value is invalid for NPCs and creatures. Returns : result ( tes3vector3 )","title":"startingPosition"},{"location":"types/tes3reference/#supportsluadata","text":"If true, this reference can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3reference/#targetformid","text":"No description yet available. Returns : result (number)","title":"targetFormId"},{"location":"types/tes3reference/#targetmodid","text":"No description yet available. Returns : result (number)","title":"targetModId"},{"location":"types/tes3reference/#tempdata","text":"As with the data field, a generic lua table that data can be written to. No information in this table will persist into saves. For item references, this is the same table as on the tes3itemData structure. Returns : result (table)","title":"tempData"},{"location":"types/tes3reference/#updirection","text":"Read-only . The normalized up or Z direction vector of the reference. Returns : result ( tes3vector3 )","title":"upDirection"},{"location":"types/tes3reference/#methods","text":"","title":"Methods"},{"location":"types/tes3reference/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3reference/#activate","text":"Causes this reference to activate another. This will lead them to go through doors, pick up items, etc. myObject : activate ( reference ) Parameters : reference ( tes3reference ): The other reference to activate.","title":"activate"},{"location":"types/tes3reference/#clearactionflag","text":"Unsets a bit in the reference's action data attachment myObject : clearActionFlag ( flagIndex ) Parameters : flagIndex (integer): The action flag to clear. Maps to values in tes3.actionFlag namespace.","title":"clearActionFlag"},{"location":"types/tes3reference/#clone","text":"Clones a reference for a base actor into a reference to an instance of that actor. For example, this will force a container to resolve its leveled items and have its own unique inventory. local result = myObject : clone () Returns : result (boolean)","title":"clone"},{"location":"types/tes3reference/#delete","text":"Disables the reference, removes all its attachments, resets its scale, and sets the reference to be deleted. myObject : delete ()","title":"delete"},{"location":"types/tes3reference/#deletedynamiclightattachment","text":"Deletes the dynamic light attachment, if it exists. This will automatically detach the dynamic light from affected nodes. myObject : deleteDynamicLightAttachment ( removeLightFromParent ) Parameters : removeLightFromParent (boolean): Default : false . If true , the dynamic light is removed from its parent node as well.","title":"deleteDynamicLightAttachment"},{"location":"types/tes3reference/#detachdynamiclightfromaffectednodes","text":"Removes the dynamic light from any affected scene graph nodes, but will not delete the associated attachment. myObject : detachDynamicLightFromAffectedNodes ()","title":"detachDynamicLightFromAffectedNodes"},{"location":"types/tes3reference/#disable","text":"Hides the reference, detaches all dynamic lights and sounds, and stops any mobile simulation. Sets the reference as modified implicitly. local success = myObject : disable () Returns : success (boolean): If true , the reference was successfully disabled.","title":"disable"},{"location":"types/tes3reference/#enable","text":"Shows the reference, reattaches all dynamic lights and sounds, and restarts any mobile simulation if the player is close enough. Sets the reference as modified implicitly. local success = myObject : enable () Returns : success (boolean): If true , the reference was successfully enabled.","title":"enable"},{"location":"types/tes3reference/#getangleto","text":"Calculates the angle from this reference's current facing to the target reference. local angle = myObject : getAngleTo ( reference ) Parameters : reference ( tes3reference ): The reference to calculate the angle to. Returns : angle (number): The angle to the given reference in radians.","title":"getAngleTo"},{"location":"types/tes3reference/#getattacheddynamiclight","text":"Fetches the dynamic light attachment. local result = myObject : getAttachedDynamicLight () Returns : result ( tes3lightNode )","title":"getAttachedDynamicLight"},{"location":"types/tes3reference/#getorcreateattacheddynamiclight","text":"Fetches the dynamic light attachment. If there isn't one, a new one will be created with the given light and value. If no light is supplied as an argument, a point light of radius 512 will be automatically created. If the light is not attached to any part of the scene graph yet, the point light will be placed as a child of the \"attachLight\" subnode of the model, or a child of the model if \"attachLight\" is not found. local result = myObject : getOrCreateAttachedDynamicLight ( light , phase ) Parameters : light ( niPointLight ): Optional . phase (number): Optional . Returns : result ( tes3lightNode )","title":"getOrCreateAttachedDynamicLight"},{"location":"types/tes3reference/#oncloseinventory","text":"A function that tells the game that an inventory has been closed, if you are simulating inventory operations. It has the capability of un-cloning an inventory if it has not been modified. Typically not used outside of specific purposes. local result = myObject : onCloseInventory () Returns : result (boolean)","title":"onCloseInventory"},{"location":"types/tes3reference/#setactionflag","text":"Sets a bit in the reference's action data attachment. myObject : setActionFlag ( flagIndex ) Parameters : flagIndex (integer): The action flag to clear. Maps to values in tes3.actionFlag namespace.","title":"setActionFlag"},{"location":"types/tes3reference/#setdynamiclighting","text":"Sets the dynamic lighting state of the reference using the global data handler. myObject : setDynamicLighting ()","title":"setDynamicLighting"},{"location":"types/tes3reference/#setnocollisionflag","text":"Sets if this reference has active collision. This is preferable to changing the hasNoCollision property, if you are manipulating multiple objects at once and do not want to constantly recalculate collision groups. myObject : setNoCollisionFlag ( hasNoCollision , updateCollisions ) Parameters : hasNoCollision (boolean): If true , the reference no longer has collision. updateCollisions (boolean): Default : true . If true , collision groups for the active cells are recalculated.","title":"setNoCollisionFlag"},{"location":"types/tes3reference/#testactionflag","text":"Returns the flag's value in the reference's action data attachment. local result = myObject : testActionFlag ( flagIndex ) Parameters : flagIndex (integer): The action flag to test. Maps to values in tes3.actionFlag namespace. Returns : result (boolean)","title":"testActionFlag"},{"location":"types/tes3reference/#updateequipment","text":"Causes the reference, if of an actor, to update the reference's bodyparts with the currently equipped ones. myObject : updateEquipment ()","title":"updateEquipment"},{"location":"types/tes3reference/#updatelighting","text":"Updates the lighting of the reference using the global data handler. myObject : updateLighting ()","title":"updateLighting"},{"location":"types/tes3reference/#updatescenegraph","text":"Updates the reference's local rotation matrix, propagates position changes to the scene graph, and sets the reference's modified flag. You need to call this if the orientation or position was manually modified. myObject : updateSceneGraph ()","title":"updateSceneGraph"},{"location":"types/tes3referenceList/","text":"tes3referenceList \u2693\ufe0e A collection for references, holding a cell and a linked list of references contained in the cell. Properties \u2693\ufe0e cell \u2693\ufe0e Read-only . The cell for the collection. Returns : result ( tes3cell ) head \u2693\ufe0e Read-only . The first reference in the collection. Returns : result ( tes3reference ) size \u2693\ufe0e Read-only . The number of references in the collection. Returns : result ( tes3reference ) tail \u2693\ufe0e Read-only . The last reference in the collection. Returns : result ( tes3reference )","title":"tes3referenceList"},{"location":"types/tes3referenceList/#tes3referencelist","text":"A collection for references, holding a cell and a linked list of references contained in the cell.","title":"tes3referenceList"},{"location":"types/tes3referenceList/#properties","text":"","title":"Properties"},{"location":"types/tes3referenceList/#cell","text":"Read-only . The cell for the collection. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3referenceList/#head","text":"Read-only . The first reference in the collection. Returns : result ( tes3reference )","title":"head"},{"location":"types/tes3referenceList/#size","text":"Read-only . The number of references in the collection. Returns : result ( tes3reference )","title":"size"},{"location":"types/tes3referenceList/#tail","text":"Read-only . The last reference in the collection. Returns : result ( tes3reference )","title":"tail"},{"location":"types/tes3region/","text":"tes3region \u2693\ufe0e A structure that contains region information. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The region's name. It must be a string less than 32 characters long. Returns : result (string) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sleepCreature \u2693\ufe0e Read-only . The region's leveled creature that can be spawned while the player is sleeping. Returns : result ( tes3leveledCreature ) sounds \u2693\ufe0e Read-only . Array-style table for the different region sounds. Each object in the table is a tes3regionSound . Returns : result ( tes3regionSound []) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) weather \u2693\ufe0e The region's current weather. Returns : result ( tes3weather ) weatherChanceAsh \u2693\ufe0e The chance the Ash weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer) weatherChanceBlight \u2693\ufe0e The chance the Blight weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer) weatherChanceBlizzard \u2693\ufe0e The chance the Blizzard weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer) weatherChanceClear \u2693\ufe0e The chance the Clear weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer) weatherChanceCloudy \u2693\ufe0e The chance the Cloudy weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer) weatherChanceFoggy \u2693\ufe0e The chance the Foggy weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer) weatherChanceOvercast \u2693\ufe0e The chance the Overcast weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer) weatherChanceRain \u2693\ufe0e The chance the Rain weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer) weatherChances \u2693\ufe0e Read-only . Array-style table for the different weather chances. Each object in the table is a number, between 1 - 100. The index of the table is the weather type. Returns : result (number[]) weatherChanceSnow \u2693\ufe0e The chance the Snow weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer) weatherChanceThunder \u2693\ufe0e The chance the Thunder weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) changeWeather \u2693\ufe0e Changes the current weather for the region to the provided weather-type parameter. myObject : changeWeather ( weatherId ) Parameters : weatherId (number): Maps to values in the tes3.weather table. randomizeWeather \u2693\ufe0e Changes the weather to a random weather type. myObject : randomizeWeather () Parameters :","title":"Tes3region"},{"location":"types/tes3region/#tes3region","text":"A structure that contains region information. This type inherits the following: tes3baseObject","title":"tes3region"},{"location":"types/tes3region/#properties","text":"","title":"Properties"},{"location":"types/tes3region/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3region/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3region/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3region/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3region/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3region/#name","text":"The region's name. It must be a string less than 32 characters long. Returns : result (string)","title":"name"},{"location":"types/tes3region/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3region/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3region/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3region/#sleepcreature","text":"Read-only . The region's leveled creature that can be spawned while the player is sleeping. Returns : result ( tes3leveledCreature )","title":"sleepCreature"},{"location":"types/tes3region/#sounds","text":"Read-only . Array-style table for the different region sounds. Each object in the table is a tes3regionSound . Returns : result ( tes3regionSound [])","title":"sounds"},{"location":"types/tes3region/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3region/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3region/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3region/#weather","text":"The region's current weather. Returns : result ( tes3weather )","title":"weather"},{"location":"types/tes3region/#weatherchanceash","text":"The chance the Ash weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer)","title":"weatherChanceAsh"},{"location":"types/tes3region/#weatherchanceblight","text":"The chance the Blight weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer)","title":"weatherChanceBlight"},{"location":"types/tes3region/#weatherchanceblizzard","text":"The chance the Blizzard weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer)","title":"weatherChanceBlizzard"},{"location":"types/tes3region/#weatherchanceclear","text":"The chance the Clear weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer)","title":"weatherChanceClear"},{"location":"types/tes3region/#weatherchancecloudy","text":"The chance the Cloudy weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer)","title":"weatherChanceCloudy"},{"location":"types/tes3region/#weatherchancefoggy","text":"The chance the Foggy weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer)","title":"weatherChanceFoggy"},{"location":"types/tes3region/#weatherchanceovercast","text":"The chance the Overcast weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer)","title":"weatherChanceOvercast"},{"location":"types/tes3region/#weatherchancerain","text":"The chance the Rain weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer)","title":"weatherChanceRain"},{"location":"types/tes3region/#weatherchances","text":"Read-only . Array-style table for the different weather chances. Each object in the table is a number, between 1 - 100. The index of the table is the weather type. Returns : result (number[])","title":"weatherChances"},{"location":"types/tes3region/#weatherchancesnow","text":"The chance the Snow weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer)","title":"weatherChanceSnow"},{"location":"types/tes3region/#weatherchancethunder","text":"The chance the Thunder weather-type will be used. Must be an integer between 0 and 100 . Returns : result (integer)","title":"weatherChanceThunder"},{"location":"types/tes3region/#methods","text":"","title":"Methods"},{"location":"types/tes3region/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3region/#changeweather","text":"Changes the current weather for the region to the provided weather-type parameter. myObject : changeWeather ( weatherId ) Parameters : weatherId (number): Maps to values in the tes3.weather table.","title":"changeWeather"},{"location":"types/tes3region/#randomizeweather","text":"Changes the weather to a random weather type. myObject : randomizeWeather () Parameters :","title":"randomizeWeather"},{"location":"types/tes3regionSound/","text":"tes3regionSound \u2693\ufe0e A structure that contains region sound information. Properties \u2693\ufe0e chance \u2693\ufe0e The chance the region sound will be used. Must be an integer between 0 and 100 . Returns : result (integer) sound \u2693\ufe0e The access to object's associated sound. Returns : result ( tes3sound )","title":"tes3regionSound"},{"location":"types/tes3regionSound/#tes3regionsound","text":"A structure that contains region sound information.","title":"tes3regionSound"},{"location":"types/tes3regionSound/#properties","text":"","title":"Properties"},{"location":"types/tes3regionSound/#chance","text":"The chance the region sound will be used. Must be an integer between 0 and 100 . Returns : result (integer)","title":"chance"},{"location":"types/tes3regionSound/#sound","text":"The access to object's associated sound. Returns : result ( tes3sound )","title":"sound"},{"location":"types/tes3repairTool/","text":"tes3repairTool \u2693\ufe0e A core repair tool object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) maxCondition \u2693\ufe0e The maximum condition/health of the object. Returns : result (number) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) quality \u2693\ufe0e The quality of the object, with how much of a bonus it has. Returns : result (number) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e Read-only . The script that runs on the object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"tes3repairTool"},{"location":"types/tes3repairTool/#tes3repairtool","text":"A core repair tool object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3repairTool"},{"location":"types/tes3repairTool/#properties","text":"","title":"Properties"},{"location":"types/tes3repairTool/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3repairTool/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3repairTool/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3repairTool/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3repairTool/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3repairTool/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3repairTool/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3repairTool/#maxcondition","text":"The maximum condition/health of the object. Returns : result (number)","title":"maxCondition"},{"location":"types/tes3repairTool/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3repairTool/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3repairTool/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3repairTool/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3repairTool/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3repairTool/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3repairTool/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3repairTool/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3repairTool/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3repairTool/#quality","text":"The quality of the object, with how much of a bonus it has. Returns : result (number)","title":"quality"},{"location":"types/tes3repairTool/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3repairTool/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3repairTool/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3repairTool/#script","text":"Read-only . The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3repairTool/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3repairTool/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3repairTool/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3repairTool/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3repairTool/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3repairTool/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3repairTool/#methods","text":"","title":"Methods"},{"location":"types/tes3repairTool/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3script/","text":"tes3script \u2693\ufe0e A script object. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) context \u2693\ufe0e Read-only . A special context used for getting and setting script's variables. Returns : result ( tes3scriptContext ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) floatVariableCount \u2693\ufe0e Read-only . The number of variables of float type in the script. Returns : result (number) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) longVariableCount \u2693\ufe0e Read-only . The number of variables of long type in the script. Returns : result (number) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) shortVariableCount \u2693\ufe0e Read-only . The number of variables of short type in the script. Returns : result (number) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) getVariableData \u2693\ufe0e This method fetches all of the script's variables as a table. local results = myObject : getVariableData () Returns : results (table): The table with all of script's variable names as keys. Each entry has the following fields: type - s , f or l , which stand for short , float , and long index - the order of occurrence of the variable in the script, starting from 0 value - this can have nil value","title":"Tes3script"},{"location":"types/tes3script/#tes3script","text":"A script object. This type inherits the following: tes3baseObject","title":"tes3script"},{"location":"types/tes3script/#properties","text":"","title":"Properties"},{"location":"types/tes3script/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3script/#context","text":"Read-only . A special context used for getting and setting script's variables. Returns : result ( tes3scriptContext )","title":"context"},{"location":"types/tes3script/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3script/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3script/#floatvariablecount","text":"Read-only . The number of variables of float type in the script. Returns : result (number)","title":"floatVariableCount"},{"location":"types/tes3script/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3script/#longvariablecount","text":"Read-only . The number of variables of long type in the script. Returns : result (number)","title":"longVariableCount"},{"location":"types/tes3script/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3script/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3script/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3script/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3script/#shortvariablecount","text":"Read-only . The number of variables of short type in the script. Returns : result (number)","title":"shortVariableCount"},{"location":"types/tes3script/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3script/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3script/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3script/#methods","text":"","title":"Methods"},{"location":"types/tes3script/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3script/#getvariabledata","text":"This method fetches all of the script's variables as a table. local results = myObject : getVariableData () Returns : results (table): The table with all of script's variable names as keys. Each entry has the following fields: type - s , f or l , which stand for short , float , and long index - the order of occurrence of the variable in the script, starting from 0 value - this can have nil value","title":"getVariableData"},{"location":"types/tes3scriptContext/","text":"tes3scriptContext \u2693\ufe0e A script context object, which allows variables to be get/set using the variable name. Methods \u2693\ufe0e getVariableData \u2693\ufe0e This method fetches all of the script's variables as a table. local results = myObject : getVariableData () Returns : results (table<string, table>): The table with all of script's variable names as keys. Each entry has following fields: type - s , f or l , which stand for short , float , and long index - the order of occurance of the variable in the script, starting from 0 value - this can have nil value Math Operations \u2693\ufe0e Length ( # ) \u2693\ufe0e Result type Description number Returns the total amount of variables in this tes3scriptContext. Example: An example of indexing local script variables inside tes3scriptContext objects Companions usually have a mwscript script with variable named companion set to 1. This can be used to determine if a reference is player's companion or not. --- This function returns `true` if the reference --- has a variable companion set to 1 in its script. ---@param reference tes3reference ---@return boolean local function hasCompanionShare ( reference ) -- This shows that we can read any variable inside -- `tes3scriptContext` objects as if it was normal Lua table -- (`reference.context` is of `tes3scriptContext` type) local companion = reference . context [ \"companion\" ] return companion and companion == 1 end","title":"tes3scriptContext"},{"location":"types/tes3scriptContext/#tes3scriptcontext","text":"A script context object, which allows variables to be get/set using the variable name.","title":"tes3scriptContext"},{"location":"types/tes3scriptContext/#methods","text":"","title":"Methods"},{"location":"types/tes3scriptContext/#getvariabledata","text":"This method fetches all of the script's variables as a table. local results = myObject : getVariableData () Returns : results (table<string, table>): The table with all of script's variable names as keys. Each entry has following fields: type - s , f or l , which stand for short , float , and long index - the order of occurance of the variable in the script, starting from 0 value - this can have nil value","title":"getVariableData"},{"location":"types/tes3scriptContext/#math-operations","text":"","title":"Math Operations"},{"location":"types/tes3scriptContext/#length","text":"Result type Description number Returns the total amount of variables in this tes3scriptContext. Example: An example of indexing local script variables inside tes3scriptContext objects Companions usually have a mwscript script with variable named companion set to 1. This can be used to determine if a reference is player's companion or not. --- This function returns `true` if the reference --- has a variable companion set to 1 in its script. ---@param reference tes3reference ---@return boolean local function hasCompanionShare ( reference ) -- This shows that we can read any variable inside -- `tes3scriptContext` objects as if it was normal Lua table -- (`reference.context` is of `tes3scriptContext` type) local companion = reference . context [ \"companion\" ] return companion and companion == 1 end","title":"Length (#)"},{"location":"types/tes3skill/","text":"tes3skill \u2693\ufe0e A skill object. This type inherits the following: tes3baseObject Properties \u2693\ufe0e actions \u2693\ufe0e Read-only . A table with 4 values. The amount of experience an action (use of skill) awards. Returns : result (number[]) attribute \u2693\ufe0e Read-only . Skill's governing attribute. Maps to tes3.attribute constants. Returns : result (number) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) iconPath \u2693\ufe0e Read-only . The path to the icon for the skill. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e Read-only . The player-facing name of the skill. Returns : result (string) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) specialization \u2693\ufe0e The specialization in which the skill belongs. Maps to values in the tes3.specialization table. Returns : result (number) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"Tes3skill"},{"location":"types/tes3skill/#tes3skill","text":"A skill object. This type inherits the following: tes3baseObject","title":"tes3skill"},{"location":"types/tes3skill/#properties","text":"","title":"Properties"},{"location":"types/tes3skill/#actions","text":"Read-only . A table with 4 values. The amount of experience an action (use of skill) awards. Returns : result (number[])","title":"actions"},{"location":"types/tes3skill/#attribute","text":"Read-only . Skill's governing attribute. Maps to tes3.attribute constants. Returns : result (number)","title":"attribute"},{"location":"types/tes3skill/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3skill/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3skill/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3skill/#iconpath","text":"Read-only . The path to the icon for the skill. Returns : result (string)","title":"iconPath"},{"location":"types/tes3skill/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3skill/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3skill/#name","text":"Read-only . The player-facing name of the skill. Returns : result (string)","title":"name"},{"location":"types/tes3skill/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3skill/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3skill/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3skill/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3skill/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3skill/#specialization","text":"The specialization in which the skill belongs. Maps to values in the tes3.specialization table. Returns : result (number)","title":"specialization"},{"location":"types/tes3skill/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3skill/#methods","text":"","title":"Methods"},{"location":"types/tes3skill/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3soulGemData/","text":"tes3soulGemData \u2693\ufe0e A structure that holds (sometimes redundant) information on a soul gem. Properties \u2693\ufe0e capacity \u2693\ufe0e Read-only . The capacity of the soul gem. Returns : result (number) id \u2693\ufe0e Read-only . The unique object ID. Returns : result (string) item \u2693\ufe0e Read-only . A reference back to the misc item that the soul gem represents. Returns : result ( tes3misc ) mesh \u2693\ufe0e Read-only . The path to the object's mesh. Returns : result (string) name \u2693\ufe0e Read-only . The player-facing name for the object. Returns : result (string) texture \u2693\ufe0e Read-only . The path to the object's texture. Returns : result (string) value \u2693\ufe0e Read-only . The value of the object. Returns : result (number) weight \u2693\ufe0e Read-only . The weight of the object. Returns : result (number)","title":"tes3soulGemData"},{"location":"types/tes3soulGemData/#tes3soulgemdata","text":"A structure that holds (sometimes redundant) information on a soul gem.","title":"tes3soulGemData"},{"location":"types/tes3soulGemData/#properties","text":"","title":"Properties"},{"location":"types/tes3soulGemData/#capacity","text":"Read-only . The capacity of the soul gem. Returns : result (number)","title":"capacity"},{"location":"types/tes3soulGemData/#id","text":"Read-only . The unique object ID. Returns : result (string)","title":"id"},{"location":"types/tes3soulGemData/#item","text":"Read-only . A reference back to the misc item that the soul gem represents. Returns : result ( tes3misc )","title":"item"},{"location":"types/tes3soulGemData/#mesh","text":"Read-only . The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3soulGemData/#name","text":"Read-only . The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3soulGemData/#texture","text":"Read-only . The path to the object's texture. Returns : result (string)","title":"texture"},{"location":"types/tes3soulGemData/#value","text":"Read-only . The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3soulGemData/#weight","text":"Read-only . The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3sound/","text":"tes3sound \u2693\ufe0e A sound object created in the TES3 CS. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) filename \u2693\ufe0e Read-only . Path to the sound file. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) maxDistance \u2693\ufe0e The maximum distance the sound will be played at. Defaults to 0 . If both this and minDistance are 0 , the values are ignored. Returns : result (number) minDistance \u2693\ufe0e The minimum distance the sound will be played at. Defaults to 0 . Returns : result (number) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) volume \u2693\ufe0e Direct access to sound's volume. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local result = myObject : __tojson () Returns : result (string) isLooping \u2693\ufe0e Returns true if the sound is actively looping. local result = myObject : isLooping () Returns : result (boolean) isPlaying \u2693\ufe0e Returns true if the sound is actively playing. local result = myObject : isPlaying () Returns : result (boolean) play \u2693\ufe0e This method plays the sound. myObject : play ( playbackFlags , volume , pitch , isNot3D ) Parameters : playbackFlags (number): Optional . These match low-level DirectSound flags. Most mods don't need to modify this, though a value of 1 to loop may be useful. The rest of the flags can be read in the IDirectSoundBuffer8::Play documentation: https://docs.microsoft.com/en-us/previous-versions/windows/desktop/ee418074(v=vs.85). volume (number): Optional . pitch (number): Optional . isNot3D (boolean): Optional . stop \u2693\ufe0e This stops playing the sound. myObject : stop ()","title":"Tes3sound"},{"location":"types/tes3sound/#tes3sound","text":"A sound object created in the TES3 CS. This type inherits the following: tes3baseObject","title":"tes3sound"},{"location":"types/tes3sound/#properties","text":"","title":"Properties"},{"location":"types/tes3sound/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3sound/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3sound/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3sound/#filename","text":"Read-only . Path to the sound file. Returns : result (string)","title":"filename"},{"location":"types/tes3sound/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3sound/#maxdistance","text":"The maximum distance the sound will be played at. Defaults to 0 . If both this and minDistance are 0 , the values are ignored. Returns : result (number)","title":"maxDistance"},{"location":"types/tes3sound/#mindistance","text":"The minimum distance the sound will be played at. Defaults to 0 . Returns : result (number)","title":"minDistance"},{"location":"types/tes3sound/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3sound/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3sound/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3sound/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3sound/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3sound/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3sound/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3sound/#volume","text":"Direct access to sound's volume. Returns : result (number)","title":"volume"},{"location":"types/tes3sound/#methods","text":"","title":"Methods"},{"location":"types/tes3sound/#__tojson","text":"Serializes the object to json. local result = myObject : __tojson () Returns : result (string)","title":"__tojson"},{"location":"types/tes3sound/#islooping","text":"Returns true if the sound is actively looping. local result = myObject : isLooping () Returns : result (boolean)","title":"isLooping"},{"location":"types/tes3sound/#isplaying","text":"Returns true if the sound is actively playing. local result = myObject : isPlaying () Returns : result (boolean)","title":"isPlaying"},{"location":"types/tes3sound/#play","text":"This method plays the sound. myObject : play ( playbackFlags , volume , pitch , isNot3D ) Parameters : playbackFlags (number): Optional . These match low-level DirectSound flags. Most mods don't need to modify this, though a value of 1 to loop may be useful. The rest of the flags can be read in the IDirectSoundBuffer8::Play documentation: https://docs.microsoft.com/en-us/previous-versions/windows/desktop/ee418074(v=vs.85). volume (number): Optional . pitch (number): Optional . isNot3D (boolean): Optional .","title":"play"},{"location":"types/tes3sound/#stop","text":"This stops playing the sound. myObject : stop ()","title":"stop"},{"location":"types/tes3soundGenerator/","text":"tes3soundGenerator \u2693\ufe0e A sound generator object created in the TES3 CS This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) sound \u2693\ufe0e Read-only . Sound object tied to this sound generator. Returns : result ( tes3sound ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) type \u2693\ufe0e Read-only . Maps to tes3.soundGenType constants. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local result = myObject : __tojson () Returns : result (string)","title":"tes3soundGenerator"},{"location":"types/tes3soundGenerator/#tes3soundgenerator","text":"A sound generator object created in the TES3 CS This type inherits the following: tes3baseObject","title":"tes3soundGenerator"},{"location":"types/tes3soundGenerator/#properties","text":"","title":"Properties"},{"location":"types/tes3soundGenerator/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3soundGenerator/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3soundGenerator/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3soundGenerator/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3soundGenerator/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3soundGenerator/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3soundGenerator/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3soundGenerator/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3soundGenerator/#sound","text":"Read-only . Sound object tied to this sound generator. Returns : result ( tes3sound )","title":"sound"},{"location":"types/tes3soundGenerator/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3soundGenerator/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3soundGenerator/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3soundGenerator/#type","text":"Read-only . Maps to tes3.soundGenType constants. Returns : result (number)","title":"type"},{"location":"types/tes3soundGenerator/#methods","text":"","title":"Methods"},{"location":"types/tes3soundGenerator/#__tojson","text":"Serializes the object to json. local result = myObject : __tojson () Returns : result (string)","title":"__tojson"},{"location":"types/tes3spell/","text":"tes3spell \u2693\ufe0e A spell game object. This type inherits the following: tes3object , tes3baseObject Properties \u2693\ufe0e alwaysSucceeds \u2693\ufe0e A flag that determines if casting the spell will always succeed. Returns : result (boolean) autoCalc \u2693\ufe0e Determines if the magicka cost for the spell is autocalculated, and if the spell may be automatically assigned to NPCs if they are skillful enough to cast it. Returns : result (boolean) basePurchaseCost \u2693\ufe0e Calculates the base cost to purchase the spell. This value is not adjusted by mercantile skills. Returns : result (number) blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) castType \u2693\ufe0e The spell's cast type. Maps to tes3.spellType constants. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) effects \u2693\ufe0e Read-only . An array-style table of the tes3effect data on the object. Returns : result ( tes3effect []) Example: Determining if a spell is hostile The following function returns true if the spell contains at least one hostile effect. This criterion can be considered subjective, but that rule is also used by the game to determine if a use of the spell on an NPC is considered an offense. --- @param magicSource tes3spell|tes3enchantment|tes3alchemy local function isSpellHostile ( magicSource ) for _ , effect in ipairs ( magicSource . effects ) do if ( effect . object . isHarmful ) then -- If one of the spell's effects is harmful, then -- `true` is returned and function ends here. return true end end -- If no harmful effect was found then return `false`. return false end flags \u2693\ufe0e A bit field for the spell's flags. Returns : result (number) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isActiveCast \u2693\ufe0e Read-only . True if the spell is actively cast. If false, the spell's effects are always passively affecting the owner. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) magickaCost \u2693\ufe0e No description yet available. Returns : result (number) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The name of the spell. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) playerStart \u2693\ufe0e A flag that determines if the spell may be assigned to the player at character generation if the player has enough skill to cast it. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) value \u2693\ufe0e Read-only . The calculated base price of the spell. This is the magickaCost of the spell multiplied by the fSpellValueMult GMST. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) calculateCastChance \u2693\ufe0e Calculates the chance that a caster can cast a given spell. local result = myObject : calculateCastChance ({ checkMagicka = ..., caster = ... }) Parameters : params (table) checkMagicka (boolean): Default : true . Determines if the caster's magicka should be taken into account during the calculation. caster ( tes3reference , tes3mobileActor ): The caster to perform the calculation against. Returns : result (number) createCopy \u2693\ufe0e Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3spell ) getActiveEffectCount \u2693\ufe0e Gets the number of active effects in the spell effect table. local result = myObject : getActiveEffectCount () Returns : result (integer) getFirstIndexOfEffect \u2693\ufe0e Gets the first index of an effect ID in the spell effect table. Returns -1 if provided effect doesn't exist in the spell local result = myObject : getFirstIndexOfEffect ( effectId ) Parameters : effectId (number): A value from tes3.effect table. Returns : result (integer) getLeastProficientEffect \u2693\ufe0e Returns the effect of the spell that a given actor is least proficient with. local effect = myObject : getLeastProficientEffect ( actor ) Parameters : actor ( tes3mobileActor , tes3reference , tes3npc , tes3npcInstance ): The actor to calculate for. A mobile actor is preferred, as passing only a tes3npc will not use up to date skill information. Returns : effect ( tes3effect , nil): The least proficient effect, or nil if the spell has no valid effects. getLeastProficientSchool \u2693\ufe0e Returns the school of the least proficient effect on the spell, for a given actor. local schoolID = myObject : getLeastProficientSchool ( actor ) Parameters : actor ( tes3mobileActor , tes3reference , tes3npc , tes3npcInstance ): The actor to calculate for. A mobile actor is preferred, as passing only a tes3npc will not use up to date skill information. Returns : schoolID (number, nil): The least proficient school ID (from tes3.magicSchool table), or nil if the spell has no valid effects.","title":"Tes3spell"},{"location":"types/tes3spell/#tes3spell","text":"A spell game object. This type inherits the following: tes3object , tes3baseObject","title":"tes3spell"},{"location":"types/tes3spell/#properties","text":"","title":"Properties"},{"location":"types/tes3spell/#alwayssucceeds","text":"A flag that determines if casting the spell will always succeed. Returns : result (boolean)","title":"alwaysSucceeds"},{"location":"types/tes3spell/#autocalc","text":"Determines if the magicka cost for the spell is autocalculated, and if the spell may be automatically assigned to NPCs if they are skillful enough to cast it. Returns : result (boolean)","title":"autoCalc"},{"location":"types/tes3spell/#basepurchasecost","text":"Calculates the base cost to purchase the spell. This value is not adjusted by mercantile skills. Returns : result (number)","title":"basePurchaseCost"},{"location":"types/tes3spell/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3spell/#casttype","text":"The spell's cast type. Maps to tes3.spellType constants. Returns : result (number)","title":"castType"},{"location":"types/tes3spell/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3spell/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3spell/#effects","text":"Read-only . An array-style table of the tes3effect data on the object. Returns : result ( tes3effect []) Example: Determining if a spell is hostile The following function returns true if the spell contains at least one hostile effect. This criterion can be considered subjective, but that rule is also used by the game to determine if a use of the spell on an NPC is considered an offense. --- @param magicSource tes3spell|tes3enchantment|tes3alchemy local function isSpellHostile ( magicSource ) for _ , effect in ipairs ( magicSource . effects ) do if ( effect . object . isHarmful ) then -- If one of the spell's effects is harmful, then -- `true` is returned and function ends here. return true end end -- If no harmful effect was found then return `false`. return false end","title":"effects"},{"location":"types/tes3spell/#flags","text":"A bit field for the spell's flags. Returns : result (number)","title":"flags"},{"location":"types/tes3spell/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3spell/#isactivecast","text":"Read-only . True if the spell is actively cast. If false, the spell's effects are always passively affecting the owner. Returns : result (boolean)","title":"isActiveCast"},{"location":"types/tes3spell/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3spell/#magickacost","text":"No description yet available. Returns : result (number)","title":"magickaCost"},{"location":"types/tes3spell/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3spell/#name","text":"The name of the spell. Returns : result (string)","title":"name"},{"location":"types/tes3spell/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3spell/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3spell/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3spell/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3spell/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3spell/#playerstart","text":"A flag that determines if the spell may be assigned to the player at character generation if the player has enough skill to cast it. Returns : result (boolean)","title":"playerStart"},{"location":"types/tes3spell/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3spell/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3spell/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3spell/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3spell/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3spell/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3spell/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3spell/#value","text":"Read-only . The calculated base price of the spell. This is the magickaCost of the spell multiplied by the fSpellValueMult GMST. Returns : result (number)","title":"value"},{"location":"types/tes3spell/#methods","text":"","title":"Methods"},{"location":"types/tes3spell/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3spell/#calculatecastchance","text":"Calculates the chance that a caster can cast a given spell. local result = myObject : calculateCastChance ({ checkMagicka = ..., caster = ... }) Parameters : params (table) checkMagicka (boolean): Default : true . Determines if the caster's magicka should be taken into account during the calculation. caster ( tes3reference , tes3mobileActor ): The caster to perform the calculation against. Returns : result (number)","title":"calculateCastChance"},{"location":"types/tes3spell/#createcopy","text":"Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3spell )","title":"createCopy"},{"location":"types/tes3spell/#getactiveeffectcount","text":"Gets the number of active effects in the spell effect table. local result = myObject : getActiveEffectCount () Returns : result (integer)","title":"getActiveEffectCount"},{"location":"types/tes3spell/#getfirstindexofeffect","text":"Gets the first index of an effect ID in the spell effect table. Returns -1 if provided effect doesn't exist in the spell local result = myObject : getFirstIndexOfEffect ( effectId ) Parameters : effectId (number): A value from tes3.effect table. Returns : result (integer)","title":"getFirstIndexOfEffect"},{"location":"types/tes3spell/#getleastproficienteffect","text":"Returns the effect of the spell that a given actor is least proficient with. local effect = myObject : getLeastProficientEffect ( actor ) Parameters : actor ( tes3mobileActor , tes3reference , tes3npc , tes3npcInstance ): The actor to calculate for. A mobile actor is preferred, as passing only a tes3npc will not use up to date skill information. Returns : effect ( tes3effect , nil): The least proficient effect, or nil if the spell has no valid effects.","title":"getLeastProficientEffect"},{"location":"types/tes3spell/#getleastproficientschool","text":"Returns the school of the least proficient effect on the spell, for a given actor. local schoolID = myObject : getLeastProficientSchool ( actor ) Parameters : actor ( tes3mobileActor , tes3reference , tes3npc , tes3npcInstance ): The actor to calculate for. A mobile actor is preferred, as passing only a tes3npc will not use up to date skill information. Returns : schoolID (number, nil): The least proficient school ID (from tes3.magicSchool table), or nil if the spell has no valid effects.","title":"getLeastProficientSchool"},{"location":"types/tes3spellList/","text":"tes3spellList \u2693\ufe0e A list of spells. Used by actors, birthsigns, and races. Properties \u2693\ufe0e iterator \u2693\ufe0e Read-only . Deprecated. Use for index, spell in pairs(spellList) to iterate over spells. Direct access to the spells in this list. Returns : result ( tes3spell []) Methods \u2693\ufe0e add \u2693\ufe0e Adds a spell to the list. local result = myObject : add ( spell ) Parameters : spell (string, tes3spell ): The spell. Returns : result (boolean) contains \u2693\ufe0e Checks if the specified spell is contained in the spell list. local result = myObject : contains ( spell ) Parameters : spell (string, tes3spell ): The spell. Returns : result (boolean) containsType \u2693\ufe0e Finds the first spell with the type provided. local result = myObject : containsType ( spellType ) Parameters : spellType (number): A value from tes3.spellType enumeration. Returns : result ( tes3spell ) getCheapest \u2693\ufe0e Finds the castable spell in the list with the lowest casting cost. local result = myObject : getCheapest () Returns : result ( tes3spell ) remove \u2693\ufe0e Removes a spell from the list. local result = myObject : remove ( spell ) Parameters : spell (string, tes3spell ): The spell. Returns : result (boolean)","title":"tes3spellList"},{"location":"types/tes3spellList/#tes3spelllist","text":"A list of spells. Used by actors, birthsigns, and races.","title":"tes3spellList"},{"location":"types/tes3spellList/#properties","text":"","title":"Properties"},{"location":"types/tes3spellList/#iterator","text":"Read-only . Deprecated. Use for index, spell in pairs(spellList) to iterate over spells. Direct access to the spells in this list. Returns : result ( tes3spell [])","title":"iterator"},{"location":"types/tes3spellList/#methods","text":"","title":"Methods"},{"location":"types/tes3spellList/#add","text":"Adds a spell to the list. local result = myObject : add ( spell ) Parameters : spell (string, tes3spell ): The spell. Returns : result (boolean)","title":"add"},{"location":"types/tes3spellList/#contains","text":"Checks if the specified spell is contained in the spell list. local result = myObject : contains ( spell ) Parameters : spell (string, tes3spell ): The spell. Returns : result (boolean)","title":"contains"},{"location":"types/tes3spellList/#containstype","text":"Finds the first spell with the type provided. local result = myObject : containsType ( spellType ) Parameters : spellType (number): A value from tes3.spellType enumeration. Returns : result ( tes3spell )","title":"containsType"},{"location":"types/tes3spellList/#getcheapest","text":"Finds the castable spell in the list with the lowest casting cost. local result = myObject : getCheapest () Returns : result ( tes3spell )","title":"getCheapest"},{"location":"types/tes3spellList/#remove","text":"Removes a spell from the list. local result = myObject : remove ( spell ) Parameters : spell (string, tes3spell ): The spell. Returns : result (boolean)","title":"remove"},{"location":"types/tes3splashController/","text":"tes3splashController \u2693\ufe0e A core game controller responsible for controlling temporary graphics. Properties \u2693\ufe0e activeSplashes \u2693\ufe0e Read-only . A list of tes3splashControllerActiveSplash objects. Returns : result ( tes3splashControllerActiveSplash []) bloodMeshCount \u2693\ufe0e Read-only . The number of loaded blood meshes. Returns : result (number) bloodMeshes \u2693\ufe0e Read-only . A list of loaded blood meshes. Returns : result ( niNode []) bloodSplashDurations \u2693\ufe0e Read-only . A list of blood splash durations, measured in seconds. Returns : result (number[]) bloodTextureCount \u2693\ufe0e Read-only . The number of loaded blood textures. Returns : result (number) bloodTextureProperties \u2693\ufe0e Read-only . A list of loaded blood texturing properties. Returns : result ( niTexturingProperty []) bloodTextures \u2693\ufe0e Read-only . A list of blood splash textures. Returns : result ( niSourceTexture [])","title":"tes3splashController"},{"location":"types/tes3splashController/#tes3splashcontroller","text":"A core game controller responsible for controlling temporary graphics.","title":"tes3splashController"},{"location":"types/tes3splashController/#properties","text":"","title":"Properties"},{"location":"types/tes3splashController/#activesplashes","text":"Read-only . A list of tes3splashControllerActiveSplash objects. Returns : result ( tes3splashControllerActiveSplash [])","title":"activeSplashes"},{"location":"types/tes3splashController/#bloodmeshcount","text":"Read-only . The number of loaded blood meshes. Returns : result (number)","title":"bloodMeshCount"},{"location":"types/tes3splashController/#bloodmeshes","text":"Read-only . A list of loaded blood meshes. Returns : result ( niNode [])","title":"bloodMeshes"},{"location":"types/tes3splashController/#bloodsplashdurations","text":"Read-only . A list of blood splash durations, measured in seconds. Returns : result (number[])","title":"bloodSplashDurations"},{"location":"types/tes3splashController/#bloodtexturecount","text":"Read-only . The number of loaded blood textures. Returns : result (number)","title":"bloodTextureCount"},{"location":"types/tes3splashController/#bloodtextureproperties","text":"Read-only . A list of loaded blood texturing properties. Returns : result ( niTexturingProperty [])","title":"bloodTextureProperties"},{"location":"types/tes3splashController/#bloodtextures","text":"Read-only . A list of blood splash textures. Returns : result ( niSourceTexture [])","title":"bloodTextures"},{"location":"types/tes3splashControllerActiveSplash/","text":"tes3splashControllerActiveSplash \u2693\ufe0e An object representing an active splash, such as a blood particle. Properties \u2693\ufe0e age \u2693\ufe0e The splash's current age, measured in seconds. Returns : result (number) maxAge \u2693\ufe0e The splash's maximum age, measured in seconds. Returns : result (number) node \u2693\ufe0e Read-only . The splash's node. Returns : result ( niNode )","title":"tes3splashControllerActiveSplash"},{"location":"types/tes3splashControllerActiveSplash/#tes3splashcontrolleractivesplash","text":"An object representing an active splash, such as a blood particle.","title":"tes3splashControllerActiveSplash"},{"location":"types/tes3splashControllerActiveSplash/#properties","text":"","title":"Properties"},{"location":"types/tes3splashControllerActiveSplash/#age","text":"The splash's current age, measured in seconds. Returns : result (number)","title":"age"},{"location":"types/tes3splashControllerActiveSplash/#maxage","text":"The splash's maximum age, measured in seconds. Returns : result (number)","title":"maxAge"},{"location":"types/tes3splashControllerActiveSplash/#node","text":"Read-only . The splash's node. Returns : result ( niNode )","title":"node"},{"location":"types/tes3startScript/","text":"tes3startScript \u2693\ufe0e An object representing a script which autostarts at the game load. This type inherits the following: tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) script \u2693\ufe0e Read-only . A script which is set to start at game start with this tes3startScript object. Returns : result ( tes3script ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"tes3startScript"},{"location":"types/tes3startScript/#tes3startscript","text":"An object representing a script which autostarts at the game load. This type inherits the following: tes3baseObject","title":"tes3startScript"},{"location":"types/tes3startScript/#properties","text":"","title":"Properties"},{"location":"types/tes3startScript/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3startScript/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3startScript/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3startScript/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3startScript/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3startScript/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3startScript/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3startScript/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3startScript/#script","text":"Read-only . A script which is set to start at game start with this tes3startScript object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3startScript/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3startScript/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3startScript/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3startScript/#methods","text":"","title":"Methods"},{"location":"types/tes3startScript/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3static/","text":"tes3static \u2693\ufe0e A static game object. A non-animated object like a building or rock. There are special-case marker statics used for gameplay purposes, such as travel and intervention. Use the object.isLocationMarker property to detect these markers. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) createCopy \u2693\ufe0e Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3static )","title":"Tes3static"},{"location":"types/tes3static/#tes3static","text":"A static game object. A non-animated object like a building or rock. There are special-case marker statics used for gameplay purposes, such as travel and intervention. Use the object.isLocationMarker property to detect these markers. This type inherits the following: tes3physicalObject , tes3object , tes3baseObject","title":"tes3static"},{"location":"types/tes3static/#properties","text":"","title":"Properties"},{"location":"types/tes3static/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3static/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3static/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3static/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3static/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3static/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3static/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3static/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3static/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3static/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3static/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3static/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3static/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3static/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3static/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3static/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3static/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3static/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3static/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3static/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3static/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3static/#methods","text":"","title":"Methods"},{"location":"types/tes3static/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3static/#createcopy","text":"Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3static )","title":"createCopy"},{"location":"types/tes3statistic/","text":"tes3statistic \u2693\ufe0e A structure that holds statistical information relating to the current and base values of a statistic such as health, fatigue, magicka, or attributes. Morrowind statistics do not track buffs and debuffs separately. Instead, total buff or debuff values can be calculated with the tes3.getEffectMagnitude() function, using the appropriate buff or debuff magic effect for the statistic. Properties \u2693\ufe0e base \u2693\ufe0e The base value of the statistic. For example, for a mobile with a normal health amount of 100, fortified by 50, and having taken damage of 25, the base value would be 100, the normal health amount. Returns : result (number) baseRaw \u2693\ufe0e The base value of the statistic, as stored in memory. Prefer to use .base unless you know what you're doing. Returns : result (number) current \u2693\ufe0e The current value of the statistic. For example, for a mobile with a normal health amount of 100, fortified by 50, and having taken damage of 25, the current value would be 125, the health amount after all buffs and debuffs have been accounted for. Returns : result (number) currentRaw \u2693\ufe0e The current value of the statistic, as stored in memory. Prefer to use .current unless you know what you're doing. Returns : result (number) normalized \u2693\ufe0e The normalized value of the statistic. For example, for an account with current health of 50 and base health of 100, the normalized value would be equal to current divided by base. 50 (current) / 100 (base) = .5 (normalized). This is useful for quickly calculating percentages for statistics. Returns : result (number)","title":"Tes3statistic"},{"location":"types/tes3statistic/#tes3statistic","text":"A structure that holds statistical information relating to the current and base values of a statistic such as health, fatigue, magicka, or attributes. Morrowind statistics do not track buffs and debuffs separately. Instead, total buff or debuff values can be calculated with the tes3.getEffectMagnitude() function, using the appropriate buff or debuff magic effect for the statistic.","title":"tes3statistic"},{"location":"types/tes3statistic/#properties","text":"","title":"Properties"},{"location":"types/tes3statistic/#base","text":"The base value of the statistic. For example, for a mobile with a normal health amount of 100, fortified by 50, and having taken damage of 25, the base value would be 100, the normal health amount. Returns : result (number)","title":"base"},{"location":"types/tes3statistic/#baseraw","text":"The base value of the statistic, as stored in memory. Prefer to use .base unless you know what you're doing. Returns : result (number)","title":"baseRaw"},{"location":"types/tes3statistic/#current","text":"The current value of the statistic. For example, for a mobile with a normal health amount of 100, fortified by 50, and having taken damage of 25, the current value would be 125, the health amount after all buffs and debuffs have been accounted for. Returns : result (number)","title":"current"},{"location":"types/tes3statistic/#currentraw","text":"The current value of the statistic, as stored in memory. Prefer to use .current unless you know what you're doing. Returns : result (number)","title":"currentRaw"},{"location":"types/tes3statistic/#normalized","text":"The normalized value of the statistic. For example, for an account with current health of 50 and base health of 100, the normalized value would be equal to current divided by base. 50 (current) / 100 (base) = .5 (normalized). This is useful for quickly calculating percentages for statistics. Returns : result (number)","title":"normalized"},{"location":"types/tes3statisticSkill/","text":"tes3statisticSkill \u2693\ufe0e A structure that holds statistical information relating to the current and base values of a skill statistic. Morrowind statistics do not track buffs and debuffs separately. Instead, total buff or debuff values can be calculated with the tes3.getEffectMagnitude() function, using the appropriate buff or debuff magic effect for the statistic. This type inherits the following: tes3statistic Properties \u2693\ufe0e base \u2693\ufe0e The base value of the skill statistic. Damage, and fortify spell effects don't change base skill value. Returns : result (number) baseRaw \u2693\ufe0e The base value of the skill statistic, as stored in memory. Prefer to use .base unless you know what you're doing. Returns : result (number) current \u2693\ufe0e The current value of the skill statistic. Returns : result (number) currentRaw \u2693\ufe0e The current value of the skill statistic, as stored in memory. Prefer to use .current unless you know what you're doing. Returns : result (number) normalized \u2693\ufe0e The normalized value of the skill statistic. Returns : result (number) type \u2693\ufe0e The type of the skill, as assigned by the actor's class. Maps to values in tes3.skillType namespace. Returns : result (number)","title":"tes3statisticSkill"},{"location":"types/tes3statisticSkill/#tes3statisticskill","text":"A structure that holds statistical information relating to the current and base values of a skill statistic. Morrowind statistics do not track buffs and debuffs separately. Instead, total buff or debuff values can be calculated with the tes3.getEffectMagnitude() function, using the appropriate buff or debuff magic effect for the statistic. This type inherits the following: tes3statistic","title":"tes3statisticSkill"},{"location":"types/tes3statisticSkill/#properties","text":"","title":"Properties"},{"location":"types/tes3statisticSkill/#base","text":"The base value of the skill statistic. Damage, and fortify spell effects don't change base skill value. Returns : result (number)","title":"base"},{"location":"types/tes3statisticSkill/#baseraw","text":"The base value of the skill statistic, as stored in memory. Prefer to use .base unless you know what you're doing. Returns : result (number)","title":"baseRaw"},{"location":"types/tes3statisticSkill/#current","text":"The current value of the skill statistic. Returns : result (number)","title":"current"},{"location":"types/tes3statisticSkill/#currentraw","text":"The current value of the skill statistic, as stored in memory. Prefer to use .current unless you know what you're doing. Returns : result (number)","title":"currentRaw"},{"location":"types/tes3statisticSkill/#normalized","text":"The normalized value of the skill statistic. Returns : result (number)","title":"normalized"},{"location":"types/tes3statisticSkill/#type","text":"The type of the skill, as assigned by the actor's class. Maps to values in tes3.skillType namespace. Returns : result (number)","title":"type"},{"location":"types/tes3transform/","text":"tes3transform \u2693\ufe0e A rotation matrix, translation vector, and scale that marks an object's transformation. Properties \u2693\ufe0e rotation \u2693\ufe0e The transform's rotation matrix. Returns : result ( tes3matrix33 ) scale \u2693\ufe0e The transform's scale. Returns : result (number) translation \u2693\ufe0e The transform's translation vector. Returns : result ( tes3vector3 ) Methods \u2693\ufe0e copy \u2693\ufe0e Creates a copy of the transform. local result = myObject : copy () Returns : result ( tes3transform )","title":"Tes3transform"},{"location":"types/tes3transform/#tes3transform","text":"A rotation matrix, translation vector, and scale that marks an object's transformation.","title":"tes3transform"},{"location":"types/tes3transform/#properties","text":"","title":"Properties"},{"location":"types/tes3transform/#rotation","text":"The transform's rotation matrix. Returns : result ( tes3matrix33 )","title":"rotation"},{"location":"types/tes3transform/#scale","text":"The transform's scale. Returns : result (number)","title":"scale"},{"location":"types/tes3transform/#translation","text":"The transform's translation vector. Returns : result ( tes3vector3 )","title":"translation"},{"location":"types/tes3transform/#methods","text":"","title":"Methods"},{"location":"types/tes3transform/#copy","text":"Creates a copy of the transform. local result = myObject : copy () Returns : result ( tes3transform )","title":"copy"},{"location":"types/tes3travelDestinationNode/","text":"tes3travelDestinationNode \u2693\ufe0e An attachment-capable structure to manage a travel destination. This is either exposed as a destination attachment for a door or as part of a list of possible travel services in an actor's AI configuration. Properties \u2693\ufe0e cell \u2693\ufe0e The destination cell. Returns : result ( tes3cell ) marker \u2693\ufe0e The reference door marker that the destination places the traveling actor at. Returns : result ( tes3reference )","title":"tes3travelDestinationNode"},{"location":"types/tes3travelDestinationNode/#tes3traveldestinationnode","text":"An attachment-capable structure to manage a travel destination. This is either exposed as a destination attachment for a door or as part of a list of possible travel services in an actor's AI configuration.","title":"tes3travelDestinationNode"},{"location":"types/tes3travelDestinationNode/#properties","text":"","title":"Properties"},{"location":"types/tes3travelDestinationNode/#cell","text":"The destination cell. Returns : result ( tes3cell )","title":"cell"},{"location":"types/tes3travelDestinationNode/#marker","text":"The reference door marker that the destination places the traveling actor at. Returns : result ( tes3reference )","title":"marker"},{"location":"types/tes3uiButton/","text":"tes3uiButton \u2693\ufe0e A structure containing properties specific to buttons. This type inherits the following: tes3uiWidget Properties \u2693\ufe0e element \u2693\ufe0e Access back to the element this widget interface is for. Returns : result ( tes3uiElement ) idle \u2693\ufe0e The RGB color of the button's text when state is set to normal . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor ) idleActive \u2693\ufe0e The RGB color of the button's text when state is set to active . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor ) idleDisabled \u2693\ufe0e The RGB color of the button's text when state is set to disabled . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor ) over \u2693\ufe0e The RGB color of the button's text when the button is selected and state is set to normal . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor ) overActive \u2693\ufe0e The RGB color of the button's text when the button is selected and state is set to active . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor ) overDisabled \u2693\ufe0e The RGB color of the button's text when the button is selected and state is set to disabled . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor ) pressed \u2693\ufe0e The RGB color of the button's text when the button is pressed and state is set to normal . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor ) pressedActive \u2693\ufe0e The RGB color of the button's text when the button is pressed and state is set to active . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor ) pressedDisabled \u2693\ufe0e The RGB color of the button's text when the button is pressed and state is set to disabled . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor ) state \u2693\ufe0e The state of the button. Controls which color set to use for its text. Maps to values in tes3.uiState . Returns : result (number)","title":"tes3uiButton"},{"location":"types/tes3uiButton/#tes3uibutton","text":"A structure containing properties specific to buttons. This type inherits the following: tes3uiWidget","title":"tes3uiButton"},{"location":"types/tes3uiButton/#properties","text":"","title":"Properties"},{"location":"types/tes3uiButton/#element","text":"Access back to the element this widget interface is for. Returns : result ( tes3uiElement )","title":"element"},{"location":"types/tes3uiButton/#idle","text":"The RGB color of the button's text when state is set to normal . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor )","title":"idle"},{"location":"types/tes3uiButton/#idleactive","text":"The RGB color of the button's text when state is set to active . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor )","title":"idleActive"},{"location":"types/tes3uiButton/#idledisabled","text":"The RGB color of the button's text when state is set to disabled . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor )","title":"idleDisabled"},{"location":"types/tes3uiButton/#over","text":"The RGB color of the button's text when the button is selected and state is set to normal . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor )","title":"over"},{"location":"types/tes3uiButton/#overactive","text":"The RGB color of the button's text when the button is selected and state is set to active . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor )","title":"overActive"},{"location":"types/tes3uiButton/#overdisabled","text":"The RGB color of the button's text when the button is selected and state is set to disabled . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor )","title":"overDisabled"},{"location":"types/tes3uiButton/#pressed","text":"The RGB color of the button's text when the button is pressed and state is set to normal . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor )","title":"pressed"},{"location":"types/tes3uiButton/#pressedactive","text":"The RGB color of the button's text when the button is pressed and state is set to active . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor )","title":"pressedActive"},{"location":"types/tes3uiButton/#presseddisabled","text":"The RGB color of the button's text when the button is pressed and state is set to disabled . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor )","title":"pressedDisabled"},{"location":"types/tes3uiButton/#state","text":"The state of the button. Controls which color set to use for its text. Maps to values in tes3.uiState . Returns : result (number)","title":"state"},{"location":"types/tes3uiCycleButton/","text":"tes3uiCycleButton \u2693\ufe0e A structure containing properties specific to cycle buttons. This type inherits the following: tes3uiWidget Properties \u2693\ufe0e element \u2693\ufe0e Access back to the element this widget interface is for. Returns : result ( tes3uiElement ) index \u2693\ufe0e The current index of the widget. If this is set, the text will be updated accordingly. Returns : result (number) options \u2693\ufe0e The options available to the cycle button. Setting this value will reset the active index to 1. Returns : result ( tes3uiCycleButtonOption []) text \u2693\ufe0e The current text of the button. This will change every time the index changes. Returns : result (string) value \u2693\ufe0e The value associated with the current index. Setting this property will search for an option that has the given value, and change the active index to that option's. If the value does not exist in the available options, it will throw an error. Returns : result (any) Methods \u2693\ufe0e addOption \u2693\ufe0e Adds a new option to the cycle button. myObject : addOption ( option ) Parameters : option ( tes3uiCycleButtonOption ): The option to add to the last position. getIndexForValue \u2693\ufe0e Gets the index used by a particular value. local index = myObject : getIndexForValue ( value ) Parameters : value (any): The value to search for. Returns : index (number): The found index matching the value. getTextElement \u2693\ufe0e Gets the text element to use. local element = myObject : getTextElement () Returns : element ( tes3uiElement ): The tes3uiElement containing the button's text. next \u2693\ufe0e Cycles the button to the next option. myObject : next () previous \u2693\ufe0e Cycles the button to the previous option. myObject : previous ()","title":"tes3uiCycleButton"},{"location":"types/tes3uiCycleButton/#tes3uicyclebutton","text":"A structure containing properties specific to cycle buttons. This type inherits the following: tes3uiWidget","title":"tes3uiCycleButton"},{"location":"types/tes3uiCycleButton/#properties","text":"","title":"Properties"},{"location":"types/tes3uiCycleButton/#element","text":"Access back to the element this widget interface is for. Returns : result ( tes3uiElement )","title":"element"},{"location":"types/tes3uiCycleButton/#index","text":"The current index of the widget. If this is set, the text will be updated accordingly. Returns : result (number)","title":"index"},{"location":"types/tes3uiCycleButton/#options","text":"The options available to the cycle button. Setting this value will reset the active index to 1. Returns : result ( tes3uiCycleButtonOption [])","title":"options"},{"location":"types/tes3uiCycleButton/#text","text":"The current text of the button. This will change every time the index changes. Returns : result (string)","title":"text"},{"location":"types/tes3uiCycleButton/#value","text":"The value associated with the current index. Setting this property will search for an option that has the given value, and change the active index to that option's. If the value does not exist in the available options, it will throw an error. Returns : result (any)","title":"value"},{"location":"types/tes3uiCycleButton/#methods","text":"","title":"Methods"},{"location":"types/tes3uiCycleButton/#addoption","text":"Adds a new option to the cycle button. myObject : addOption ( option ) Parameters : option ( tes3uiCycleButtonOption ): The option to add to the last position.","title":"addOption"},{"location":"types/tes3uiCycleButton/#getindexforvalue","text":"Gets the index used by a particular value. local index = myObject : getIndexForValue ( value ) Parameters : value (any): The value to search for. Returns : index (number): The found index matching the value.","title":"getIndexForValue"},{"location":"types/tes3uiCycleButton/#gettextelement","text":"Gets the text element to use. local element = myObject : getTextElement () Returns : element ( tes3uiElement ): The tes3uiElement containing the button's text.","title":"getTextElement"},{"location":"types/tes3uiCycleButton/#next","text":"Cycles the button to the next option. myObject : next ()","title":"next"},{"location":"types/tes3uiCycleButton/#previous","text":"Cycles the button to the previous option. myObject : previous ()","title":"previous"},{"location":"types/tes3uiCycleButtonOption/","text":"tes3uiCycleButtonOption \u2693\ufe0e This table defines an option available for a tes3uiCycleButton. This must at minimum contain text , though it can also contain a value or any arbitrary other data. Properties \u2693\ufe0e text \u2693\ufe0e The text to use when this option is active. Returns : result (string) value \u2693\ufe0e An optional value associated with this option. Returns : result (any)","title":"tes3uiCycleButtonOption"},{"location":"types/tes3uiCycleButtonOption/#tes3uicyclebuttonoption","text":"This table defines an option available for a tes3uiCycleButton. This must at minimum contain text , though it can also contain a value or any arbitrary other data.","title":"tes3uiCycleButtonOption"},{"location":"types/tes3uiCycleButtonOption/#properties","text":"","title":"Properties"},{"location":"types/tes3uiCycleButtonOption/#text","text":"The text to use when this option is active. Returns : result (string)","title":"text"},{"location":"types/tes3uiCycleButtonOption/#value","text":"An optional value associated with this option. Returns : result (any)","title":"value"},{"location":"types/tes3uiElement/","text":"tes3uiElement \u2693\ufe0e A UI element, the main building block of the UI system. All elements are created with methods on a parent Element. Elements are very configurable, and have many HTML-like layout features. All layout properties can be set to nil to reset them to the default value, which will deactivate any related layout mode. Elements can have custom data attached using their Property _ key-value store, and specific Elements have specific element.widget accessors to control behaviour. Properties \u2693\ufe0e absolutePosAlignX \u2693\ufe0e The horizontal alignment of the element relative to it's parent element. Can be nil . If nil , deactivates behaviour associated with this property. Valid values range from 0.0 to 1.0 . Sets the element's positionX to a point relative to the parent element. A value of 0.0 is equal to the parent element's left content edge, whereas a value of 1.0 is equal to the parent element's right content edge. The positioning is absolute, which frees the element from the standard flow layout and allows overlapping elements. Incompatible with and will change the value of ignoreLayoutX . Elements may not respond to widthProportional sizing after this property is set. If you need to use both you should consider testing if it works first. Returns : result (number) absolutePosAlignY \u2693\ufe0e The vertical alignment of the element relative to it's parent element. Can be nil . If nil , deactivates behaviour associated with this property. Valid values range from 0.0 to 1.0 . Sets the element's positionY to a point relative to the parent element. A value of 0.0 is equal to the parent element's top content edge, whereas a value of 1.0 is equal to the parent element's bottom content edge. The positioning is absolute, which frees the element from the standard flow layout and allows overlapping elements. Incompatible with and will change the value of ignoreLayoutY . Elements may not respond to heightProportional sizing after this property is set. If you need to use both you should consider testing if it works first. Returns : result (number) alpha \u2693\ufe0e The element's alpha color. Valid values range from 0.0 to 1.0 . Used to composite elements. If you wish to hide an element completely, use disable instead. Returns : result (number) autoHeight \u2693\ufe0e If true , automatically expands element dimensions to fit child elements. Ignores child elements that have ignoreLayoutY set to true . Dimensions are restricted by minWidth , minHeight , maxWidth and maxHeight properties. Returns : result (boolean) autoWidth \u2693\ufe0e If true , automatically expands element dimensions to fit child elements. Ignores child elements that have ignoreLayoutX set to true . Dimensions are restricted by minWidth , minHeight , maxWidth and maxHeight properties. Returns : result (boolean) borderAllSides \u2693\ufe0e The border size in pixels. Border is the extra empty space around an element. Individual border sizes default to using the borderAllSides setting. Returns : result (integer) borderBottom \u2693\ufe0e The bottom border size in pixels. When this is set to -1 , the borderAllSides setting is used for this side instead. Returns : result (integer) borderLeft \u2693\ufe0e The left border size in pixels. When this is set to -1 , the borderAllSides setting is used for this side instead. Returns : result (integer) borderRight \u2693\ufe0e The left border size in pixels. When this is set to -1 , the borderAllSides setting is used for this side instead. Returns : result (integer) borderTop \u2693\ufe0e The top border size in pixels. When this is set to -1 , the borderAllSides setting is used for this side instead. Returns : result (integer) childAlignX \u2693\ufe0e Sets alignment of child elements inside its parent, though it only works in specific conditions. 0.0 = left/top edge touches left/top edge of parent, 0.5 = centred, 1.0 = right/bottom edge touches right/bottom edge of parent. For negative values, there is a special case behaviour: all children but the last will be left-aligned/top-aligned, the last child will be right-aligned/bottom-aligned. Important Child alignment only works if the element has proportional sizing (using widthProportional/heightProportional) and all children use non-proportional sizing (widthProportional and heightProportional are nil). Returns : result (number) childAlignY \u2693\ufe0e See childAlignX. Returns : result (number) childOffsetX \u2693\ufe0e The view offset in pixels, applied to the position of child nodes. Used in scroll panes. Returns : result (integer) childOffsetY \u2693\ufe0e See childOffsetX. Returns : result (number) children \u2693\ufe0e Read-only . The child elements of this element. This is a copy that does not track changes. Returns : result ( tes3uiElement []) color \u2693\ufe0e The RGB color of the element. An array of 3 numbers with values ranging from 0.0 to 1.0 . For menus and rects, it sets the background color. For text, it sets the text color. For images, it multiplies the image by the color. Returns : result (number[]) consumeMouseEvents \u2693\ufe0e When true , mouse events over this element are sent to event handlers, or discarded if there is no handler. When false , mouse events go upwards to the first ancestor that can consume mouse events. Useful to set on widget sub-elements. true by default. Returns : result (boolean) contentPath \u2693\ufe0e The file path to the image or model content of this element. Only used if contentType is set to tes3.contentType.image or tes3.contentType.model . Returns : result (string) contentType \u2693\ufe0e Read-only . The type of content this tes3uiElement represents. Maps to values in the tes3.contentType table. Returns : result (string) disabled \u2693\ufe0e Disables user actions on this element. Widgets may stop accepting mouse and keyboard input while disabled. Returns : result (boolean) flowDirection \u2693\ufe0e Can have values \"left_to_right\" or \"top_to_bottom\" . These values are available as tes3.flowDirection enumeration. Indicates which direction child elements are laid out. Returns : result (string) font \u2693\ufe0e Index of font to use for text. 0 - Magic Cards (default) 1 - Century Sans 2 - Daedric Returns : result (number) height \u2693\ufe0e The element's height in pixels. Returns : result (integer) heightProportional \u2693\ufe0e Sets element dimensions using a proportional sizer. The sizer starts with the parent dimension in the flow direction, subtracts any fixed dimension children leaving the proportional sizer space. Each proportionally sized element then gets an equal division of the space, multiplied by this member. Values above 1.0 are permissible. Bug If widthProportional is used without heightProportional, an element may not respond to changes in parent size. It is recommended to set heightProportional, or have a fixed size sibling element if dynamic reflow is required. Overrides fixed, minimum and maximum sizes unless this value is nil (default). Returns : result (number) id \u2693\ufe0e Read-only . The element's ID. The element can be later accessed by ancestor:findChild(id) . Note that multiple elements may have the same ID, such as subparts of a widget, or list items. Therefore, you may think of ids as an element class identifier. Returns : result (number) ignoreLayoutX \u2693\ufe0e If true , the element's positionX can be modified and will not be affected by any layout restrictions imposed by the parent element. Incompatible with and will change the value of absolutePosAlignX . Elements that bypass parent layout will be ignored when automatically determing the parent's width. See autoWidth for more information. Returns : result (boolean) ignoreLayoutY \u2693\ufe0e If true , the element's positionY can be modified and will not be affected by any layout restrictions imposed by the parent element. Incompatible with and will change the value of absolutePosAlignY . Elements that bypass parent layout will be ignored when automatically determing the parent's height. See autoHeight for more information. Returns : result (boolean) imageScaleX \u2693\ufe0e Image scaling multipliers. Only applies to image elements. Returns : result (number) imageScaleY \u2693\ufe0e Image scaling multipliers. Only applies to image elements. Returns : result (number) justifyText \u2693\ufe0e Can have values \"left\" , \"center\" , or \"right\" . Controls text justification. Maps to values in the tes3.justifyText table. To work correctly for center/right justification, wrapText must be true . Returns : result (string) maxHeight \u2693\ufe0e The maximum height for auto-size layout and resizable frames. Returns : result (integer) maxWidth \u2693\ufe0e The maximum width for auto-size layout and resizable frames. Returns : result (integer) minHeight \u2693\ufe0e The minimum height for auto-size layout and resizable frames. Returns : result (integer) minWidth \u2693\ufe0e The minimum width for auto-size layout and resizable frames. Returns : result (integer) name \u2693\ufe0e Read-only . The element's name, taken from the name registered for the ID. Returns : result (string) paddingAllSides \u2693\ufe0e The padding size in pixels. Padding is the blank space between the edge of an element and its contents. Individual padding sizes default to -1 , making it use the paddingAllSides setting. Returns : result (integer) paddingBottom \u2693\ufe0e The bottom padding size in pixels. When this is set to -1 , the paddingAllSides setting is used for this side instead. Returns : result (integer) paddingLeft \u2693\ufe0e The left padding size in pixels. When this is set to -1 , the paddingAllSides setting is used for this side instead. Returns : result (integer) paddingRight \u2693\ufe0e Integer number. Right padding size in pixels. When this is set to -1 , the paddingAllSides setting is used for this side instead. Returns : result (number) paddingTop \u2693\ufe0e The top padding size in pixels. When this is set to -1 , the paddingAllSides setting is used for this side instead. Returns : result (integer) parent \u2693\ufe0e Read-only . A reference to the parent element. Returns : result ( tes3uiElement ) positionX \u2693\ufe0e The element's horizontal position relative to its parent's top-left content area. For top-level menus, the position will be relative to the the centre of the screen. Modifying this value will not have any effect on most elements due to child element's positions being controlled by the layout and positioning settings of their parent elements, unless ignoreLayoutX is true . Returns : result (integer) positionY \u2693\ufe0e The element's vertical position relative to its parent's top-left content area. For top-level menus, the position will be relative to the the centre of the screen. Modifying this value will not have any effect on most elements due to child element's positions being controlled by the layout and positioning settings of their parent elements, unless ignoreLayoutY is true . Returns : result (integer) rawText \u2693\ufe0e The raw value of the element's text. This, unlike the normal text property, will not directly read widget information or handle the removal of the positional cursor. Returns : result (string) repeatKeys \u2693\ufe0e Controls if there is repeating text input when keys are held down. true by default. Returns : result (boolean) scaleMode \u2693\ufe0e When set to true on image and NIF elements, they are scaled to fit width and height . Returns : result (boolean) sceneNode \u2693\ufe0e Read-only . Underlying access to the scene graph responsible for this element. Returns : result ( niNode ) text \u2693\ufe0e The element's text. Text input can be read by accessing this property. Tip If your element's text is a number, you need to manually convert it to string using tostring() . Returns : result (string) texture \u2693\ufe0e The underlying texture for the element. This assumes that the element is of an element type. Setting this value will change the element to an image type. Returns : result ( niSourceTexture ) type \u2693\ufe0e Read-only . The type of content this tes3uiElement represents. This is an expanded set of the options available from the contentType property. Maps to values in tes3.uiElementType . Returns : result (string) visible \u2693\ufe0e Controls if the element is visible. Returns : result (boolean) widget \u2693\ufe0e Access to element specific properties. This will be nil if there are no element specific properties. See the return types and the create* functions for more details. Returns : result ( tes3uiWidget , nil) width \u2693\ufe0e The element's width in pixels. Returns : result (integer) widthProportional \u2693\ufe0e Sets element dimensions using a proportional sizer. The sizer starts with the parent dimension in the flow direction, subtracts any fixed dimension children leaving the proportional sizer space. Each proportionally sized element then gets an equal division of the space, multiplied by this member. Values above 1.0 are permissible. Bug If widthProportional is used without heightProportional, an element may not respond to changes in parent size. It is recommended to set heightProportional, or have a fixed size sibling element if dynamic reflow is required. Overrides fixed, minimum and maximum sizes unless this value is nil (default). Returns : result (number) wrapText \u2693\ufe0e Controls text wrapping. Setting this to true will also set heightProportional to 1.0 , which is required for wrapping text to adjust to its container size. Returns : result (boolean) Methods \u2693\ufe0e copy \u2693\ufe0e Copies this element to a new parent. This function can have unintended consequences. The specifics of what exact elements are being copied is important. local copy = myObject : copy ({ to = ..., copyChildren = ..., copyProperties = ... }) Parameters : params (table) to ( tes3uiElement ): The element to create the copy in. Will be the parent of the newly created element. copyChildren (boolean): Default : true . If true , all children will also be copied to the newly created element. copyProperties (boolean): Default : true . If true , all properties will be copied to the newly created element. Returns : copy ( tes3uiElement ): The created copy. createBlock \u2693\ufe0e Creates an empty block container inside the element. Used to group and layout elements. local result = myObject : createBlock ({ id = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. Returns : result ( tes3uiElement ) createButton \u2693\ufe0e Creates a clickable button. Register the mouseClick event to capture a button press. Button specific properties can be accessed through the widget property. The widget type for buttons is tes3uiButton . local result = myObject : createButton ({ id = ..., text = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. text (string): Optional . The text to add to the button. It will highlight on mouseover like a text select widget. Returns : result ( tes3uiElement ) createCycleButton \u2693\ufe0e Creates a clickable button, whose text changes linearly through options as it is clicked. Register the valueChanged event for when the option is cycled or changed via script. Button specific properties can be accessed through the widget property. The widget type for buttons is tes3uiCycleButton . local result = myObject : createCycleButton ({ id = ..., options = ..., index = ... }) Parameters : params (table) id (string, number): Optional . An identifier to help find this element later. options ( tes3uiCycleButtonOption []): An array of options for the button to cycle through. At minimum the option must have a text property defined, to show on the button. If a value is provided, it can be accessed through the .widget 's .value property. index (number): Optional . The index selected by default. Returns : result ( tes3uiElement ) createDivider \u2693\ufe0e Creates a textured horizontal divider line, as used in the magic and stat menus. Scales automatically to the container width. local result = myObject : createDivider ({ id = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. Returns : result ( tes3uiElement ) createFillBar \u2693\ufe0e Creates a horizontal quantity indicator bar. Fillbar specific properties can be accessed through the widget property. The widget type for fillbars is tes3uiFillBar . local result = myObject : createFillBar ({ id = ..., current = ..., max = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. current (number): Optional . The current value of the fillbar. max (number): Optional . The maximum value of the fillbar. Returns : result ( tes3uiElement ) createHorizontalScrollPane \u2693\ufe0e Creates a horizontally scrolling pane. Scroll pane specific properties can be accessed through the widget property. The widget type for scroll panes is tes3uiScrollPane . local result = myObject : createHorizontalScrollPane ({ id = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. Returns : result ( tes3uiElement ) createHyperlink \u2693\ufe0e Creates a clickable text, colored as a link. When the link is clicked, a URL is opened in the player's browser. If the confirm property is set, a confirmation prompt is opened first. Hyperlink-specific properties can be accessed through the widget property. The widget type for hyperlinks is tes3uiHyperlink . local element = myObject : createHyperlink ({ id = ..., text = ..., url = ..., confirm = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. text (string): The text to add to the hyperlink. url (string): The URL to open when the text is clicked. confirm (boolean): Default : true . If true, a confirmation prompt will be shown before any URL is opened. Returns : element ( tes3uiElement ) createHypertext \u2693\ufe0e Creates a text area with clickable words as links. Usage is still under research. local result = myObject : createHypertext ({ id = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. Returns : result ( tes3uiElement ) createImage \u2693\ufe0e Creates an image element from a texture file. The texture must have power-of-2 dimensions (i.e. 16, 32, 64, 128, 256, 512, 1024); the final display size can be trimmed by setting width and height. local result = myObject : createImage ({ id = ..., path = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. path (string): Optional . An image path. This path is relative to Data Files . Returns : result ( tes3uiElement ) createImageButton \u2693\ufe0e Creates an interactive button composed of images for the idle , over , and pressed states. The texture must have power-of-2 dimensions (i.e. 16, 32, 64, 128, 256, 512, 1024); the final display size can be trimmed by setting width and height. local result = myObject : createImageButton ({ id = ..., idle = ..., over = ..., pressed = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. idle (string): The path to the idle image. This path is relative to Data Files . over (string): The path to the mouse hover image. This path is relative to Data Files . pressed (string): The path to the mouse pressed image. This path is relative to Data Files . Returns : result ( tes3uiElement ) createLabel \u2693\ufe0e Creates a text label. It defaults to displaying all text on a single line. To get a multi-line label, set wrapText to true . The element is created with autoWidth and autoHeight turned on. local result = myObject : createLabel ({ id = ..., text = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. text (string): Default : (nil) . The text to display. Returns : result ( tes3uiElement ) createNif \u2693\ufe0e Creates a NIF model from a file. Still under research. local result = myObject : createNif ({ id = ..., text = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. text (string): A model path. This path is relative to Data Files . Returns : result ( tes3uiElement ) createParagraphInput \u2693\ufe0e Creates a multi-line text input element, with line wrapping on. To receive input the keyboard must be captured with tes3ui.acquireTextInput(element) . Read the input with the text property. Write an initial value to edit by setting the text property. Paragraph input specific properties can be accessed through the widget property. The widget type for paragraph inputs is tes3uiParagraphInput . local result = myObject : createParagraphInput ({ id = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. Returns : result ( tes3uiElement ) createRect \u2693\ufe0e Creates a filled rectangle. The rectangle is displayed as filled with the element's color. It supports alpha compositing. local result = myObject : createRect ({ id = ..., color = ..., randomizeColor = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. color ( tes3vector3 , table): Optional . The fill color for the element. randomizeColor (boolean): Default : false . If true, the creation color will be randomized. Returns : result ( tes3uiElement ) createSlider \u2693\ufe0e Creates a horizontal slider. Slider specific properties can be accessed through the widget property. The widget type for sliders is tes3uiSlider . local result = myObject : createSlider ({ id = ..., current = ..., max = ..., step = ..., jump = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. current (number): The current value of the slider. max (number): The maximum value of the slider. step (number): Default : 1 . The change in value when clicking the left and right arrow buttons. jump (number): Default : 5 . The change in value when clicking into the empty areas next to the slider handle. Returns : result ( tes3uiElement ) createSliderVertical \u2693\ufe0e Creates a vertical slider. Slider specific properties can be accessed through the widget property. The widget type for sliders is tes3uiSlider . local result = myObject : createSliderVertical ({ id = ..., current = ..., max = ..., step = ..., jump = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. current (number): The current value of the slider. max (number): The maximum value of the slider. step (number): Default : 1 . The change in value when clicking the left and right arrow buttons. jump (number): Default : 5 . The change in value when clicking into the empty areas next to the slider handle. Returns : result ( tes3uiElement ) createTextInput \u2693\ufe0e Creates a single line text input element. To receive input the keyboard must be captured with tes3ui.acquireTextInput(element) . Read the input with the text property. Write an initial value to display by setting the text property; that value will be cleared on the first keypress. Text input specific properties can be accessed through the widget property. The widget type for text inputs is tes3uiTextInput . local result = myObject : createTextInput ({ id = ..., text = ..., placeholderText = ..., numeric = ..., autoFocus = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. text (string): Optional . The initial text to use for the input. placeholderText (string): Optional . Placeholder text for the input. If the element is ever made empty, this will be displayed instead in the disabled text color. numeric (boolean): Default : false . If true, only numbers can be put into the input. The text value of the element will still be a string, and need to be converted using tonumber . autoFocus (boolean): Default : false . If true, the input will be automatically focused after creation. Returns : result ( tes3uiElement ) createTextSelect \u2693\ufe0e Creates a selectable line of text, with configurable hover, click, and disabled colors. Can be used to create a list box by placing them in a ScrollPane. Text select specific properties can be accessed through the widget property. The widget type for text selects is tes3uiTextSelect . local result = myObject : createTextSelect ({ id = ..., text = ..., state = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. text (string): Optional . The text to display. state (number): Default : tes3.uiState.normal . The initial interaction state. Returns : result ( tes3uiElement ) createThinBorder \u2693\ufe0e Creates a styled thin border element. Any content should be created as children of this border. local result = myObject : createThinBorder ({ id = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. Returns : result ( tes3uiElement ) createVerticalScrollPane \u2693\ufe0e Creates a vertically scrolling pane. Useful as a list box. Scroll pane specific properties can be accessed through the widget property. The widget type for scroll panes is tes3uiScrollPane . local result = myObject : createVerticalScrollPane ({ id = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. Returns : result ( tes3uiElement ) destroy \u2693\ufe0e Deletes an element and all its child elements. If any element is bound to text input by tes3ui.acquireTextInput _, the input is automatically released. myObject : destroy () destroyChildren \u2693\ufe0e Deletes all the child elements of this element. If any element is bound to text input by tes3ui.acquireTextInput _, the input is automatically released. myObject : destroyChildren () findChild \u2693\ufe0e Finds a child element matching the id argument. Searches children recursively. Returns the first child element with a matching id, or nil if no match found. local result = myObject : findChild ( id ) Parameters : id (string, number): The id to search for. Returns : result ( tes3uiElement ) forwardEvent \u2693\ufe0e Forwards an event to the original Morrowind event handler, using this element as a source. This may be optionally called at any point in a callback. Note that handler may or may not destroy the event widget or the menu, so you should know how it behaves before accessing any elements after a callback. myObject : forwardEvent ( id ) Parameters : id (tes3uiEvent): The original UI event. getContentElement \u2693\ufe0e Returns the descendant element that creation functions used on this element will place children into, or the calling element if there is no specific descendant for children. Some widgets like ScrollPanes are built of multiple layers of elements. When an element is created in a complex widget, it is automatically placed as a child of a content element, but other functions do not access this content element directly. This function finds this content container for any element, so that changing layout and accessing children is possible. For simple elements, the calling element will be returned so that there is always a valid container element. local result = myObject : getContentElement () Returns : result ( tes3uiElement ) getLuaData \u2693\ufe0e Gets an arbitrary lua value from the UI element. Each element has the capability to store keyed lua data, as if it were a table, using this function and setLuaData . local result = myObject : getLuaData ( key ) Parameters : key (string): The key for the lua data. Returns : result (any) getPropertyBool \u2693\ufe0e Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function gets a property as a boolean value, defaulting to false if the property was not set. local value = myObject : getPropertyBool ( property ) Parameters : property (number, string): The property to get. Returns : value (boolean): The value of the property, defaulting to false if the property was not set. getPropertyCallback \u2693\ufe0e Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function gets a property as a number value, defaulting to 0 if the property was not set. This function can be dangerous to use, and can lead to crashes if not properly understood. local value = myObject : getPropertyCallback ( property ) Parameters : property (number, string): The property to get. Returns : value (number): The value of the property, defaulting to 0 if the property was not set. getPropertyFloat \u2693\ufe0e Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function gets a property as a floating-point value, defaulting to 0 if the property was not set. local value = myObject : getPropertyFloat ( property ) Parameters : property (number, string): The property to get. Returns : value (number): The value of the property, defaulting to 0 if the property was not set. getPropertyInt \u2693\ufe0e Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function gets a property as an integer value, defaulting to 0 if the property was not set. local value = myObject : getPropertyInt ( property ) Parameters : property (number, string): The property to get. Returns : value (integer): The value of the property, defaulting to 0 if the property was not set. getPropertyObject \u2693\ufe0e Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function gets a property as an object value, defaulting to nil if the property was not set. This function can be dangerous to use, and can lead to crashes if not properly understood. local value = myObject : getPropertyObject ( property , typeCast ) Parameters : property (number, string): The property to get. typeCast (string, nil): Default : \"tes3baseObject\" . The casting of the property to get. Returns : value (number): The value of the property, defaulting to nil if the property was not set. getPropertyProperty \u2693\ufe0e Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function gets a property whose value is, itself, a property, defaulting to 0 if the property was not set. local value = myObject : getPropertyProperty ( property ) Parameters : property (number, string): The property to get. Returns : value (number): The value of the property, defaulting to 0 if the property was not set. getTopLevelMenu \u2693\ufe0e Finds the parent menu containing the element. Useful for finding the correct menu to run layout updates on. local result = myObject : getTopLevelMenu () Returns : result ( tes3uiElement ) loadMenuPosition \u2693\ufe0e Restores the menu's position and size information from the Morrowind.ini file. This may only be called on top-level parents. myObject : loadMenuPosition () move \u2693\ufe0e Copies this element to a new parent, then destroys this element. This function can have unintended consequences. The specifics of what exact elements are being copied is important. local copy = myObject : move ( to ) Parameters : to ( tes3uiElement ): Where to create the copy. Returns : copy ( tes3uiElement ): The created copy. register \u2693\ufe0e Sets an event handler, which can add or override an existing event handler. The use of registerBefore or registerAfter is recommended if you do not want to replace the existing event handler. The eventID can be a standard event name, or an event specific to an element class. These can be accessed through tes3.uiEvent for convenience. The callback receives an argument with the event data. See below for details. The original Morrowind callback is captured and can be invoked with the forwardEvent method on the event argument. If there is an existing Lua callback, it is replaced. Standard events: **mouseLeave** Mouse cursor moving outside an element. Triggers once. **mouseOver** Mouse cursor moving over an element. Triggers once. **mouseDown** Left mouse button down over an element. **mouseClick** Left mouse button up over an element, after a mouseDown over the element. **mouseScrollUp** .. **mouseScrollDown** Mouse wheel scrolling. **mouseDoubleClick** Standard double-click. **mouseStillIdle** Mouse cursor positioned outside an element. Triggers every frame. **mouseStillOver** Mouse cursor positioned over an element. Triggers every frame. **mouseStillPressed** Mouse cursor positioned over an element, after a mouseDown over the element. Triggers every frame. **mouseStillPressedOutside** Apparently not working in the engine. Mouse cursor positioned outside an element, after a mouseDown over the element. Triggers every frame. **mouseRelease** Left mouse button up over an element. **keyPress** A raw key press. **keyEnter** The Return key is pressed. **help** On mouseover, but also marking the element as having a tooltip. Create a tooltip within the callback using the `tes3ui.createTooltipMenu` function. **focus** When a menu is clicked on, and moved on top of other menus. **unfocus** Just before another menu is clicked on, or a widget in that menu receives an event, or when the menu mode is toggled off. You may return false from this event to prevent the menu from being deselected, and to prevent leaving menu mode. **preUpdate** Before the menu layout is updated. **update** After the menu layout is updated. **destroy** When the UI element is destroyed, before any data or children are destroyed. Widget-specific events: Slider: **PartScrollBar_changed** Triggers on value change; moving the slider is not enough if the value is the same. Event forwarding \u2693\ufe0e The original Morrowind event handler is saved when you first register an event. It may be optionally invoked with the forwardEvent method. Note that handler may or may not destroy the event widget or the menu, so you should know how it behaves before accessing any elements after a callback. Example local function onClick ( e ) -- pre-event code e . source : forwardEvent ( e ) -- post-event code end local button = menu : findChild ( \"MenuExample_Ok\" ) button : register ( \"mouseClick\" , onClick ) Event handler \u2693\ufe0e The standard type signature for events. `boolean`_ eventHandler(**EventData** e) Returns: `optional` Returning `false` may cancel an interaction for certain events. e.g. unfocus EventData: **source** (`Element`_) The source element of the event. **id** (`number`_) The numeric id of the event type. **widget** (`Element`_) The widget element that the source belongs to, if the element is a sub-part of a widget. May not be accurate if the element is not a sub-part. **data0** (`number`_) .. **data1** (`number`_) Event-specific raw data values. For mouse events, these are the screen X and Y coordinates of the pointer. For keyboard events, data0 is the `scan code`_. **relativeX** (`number`_) .. **relativeY** (`number`_) For mouse events only. X and Y coordinates of the pointer relative to the top-left of the element. myObject : register ( eventID , callback ) Parameters : eventID (string): The event id. Maps to values in tes3.uiEvent . callback (function): The callback function. registerAfter \u2693\ufe0e Sets an event handler to run after any existing event handler on the element. Can be any event usable with register . The callback receives an argument with the event data. See register for details. myObject : registerAfter ( eventID , callback ) Parameters : eventID (string): The event id. callback (function): The callback function. registerBefore \u2693\ufe0e Sets an event handler to run before any existing event handler on the element. Can be any event usable with register . The callback receives an argument with the event data. See register for details. myObject : registerBefore ( eventID , callback ) Parameters : eventID (string): The event id. callback (function): The callback function. reorderChildren \u2693\ufe0e Moves the layout order of the children of this element. count elements are taken from starting child Element or index (0-based) moveFrom , and moved before the child Element or index (0-based) insertBefore . If count is -1, all children after moveFrom are moved. If any index is a negative number, then the index represents a distance from the end of the child list. Returns true if the operation succeeded, or false if at least one argument was invalid. local result = myObject : reorderChildren ( insertBefore , moveFrom , count ) Parameters : insertBefore ( tes3uiElement , number): The insertion point (or its 0-based child index). moveFrom ( tes3uiElement , number): The first child (or 0-based child index) to be moved. count (number): The number of child elements to move. Returns : result (boolean) saveMenuPosition \u2693\ufe0e Saves the menu's position and size information to the Morrowind.ini file. This may only be called on top-level parents. Note that most menus save their position automatically. myObject : saveMenuPosition () setLuaData \u2693\ufe0e Sets an arbitrary lua value for the UI element. Each element has the capability to store keyed lua data, as if it were a table, using this function and getLuaData . myObject : setLuaData ( key , value ) Parameters : key (string): The key for the lua data. value (any): The value to set. setPropertyBool \u2693\ufe0e Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function sets a property to a boolean value. myObject : setPropertyBool ( property , value ) Parameters : property (number, string): The property to set. value (boolean): The value to set. setPropertyCallback \u2693\ufe0e Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function sets a property to a callback value, represented as a number. This function can be dangerous to use, and can lead to crashes if not properly understood. myObject : setPropertyCallback ( property , value ) Parameters : property (number, string): The property to set. value (number): The value to set. setPropertyFloat \u2693\ufe0e Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function sets a property to a floating-point value. myObject : setPropertyFloat ( property , value ) Parameters : property (number, string): The property to set. value (number): The value to set. setPropertyInt \u2693\ufe0e Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function sets a property to an integer value. myObject : setPropertyInt ( property , value ) Parameters : property (number, string): The property to set. value (number): The value to set. setPropertyObject \u2693\ufe0e Sets a property value with prop as the property key. Properties are named variables attached to an element. Gets a property value with propName as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. myObject : setPropertyObject ( property , value ) Parameters : property (number, string): The property to get. value (object): The value to set. setPropertyProperty \u2693\ufe0e Properties are named variables attached to an element. Sets a property value with property as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. This function sets a property whose value is, itself, a property. myObject : setPropertyProperty ( property , value ) Parameters : property (number, string): The property to get. value (number, string): The value to set. sortChildren \u2693\ufe0e Reorders the element's children given a sorting function. myObject : sortChildren ( sortFunction ) Parameters : sortFunction (function): The function to sort with. Like most sorting functions, this is given two arguments to compare. triggerEvent \u2693\ufe0e Triggers a UI event on an element, either using supplied event data, or by constructing new event data using eventName . eventName is the same as used in register . myObject : triggerEvent ( eventID ) Parameters : eventID (tes3uiEvent, string): The event, or event ID. unregister \u2693\ufe0e Unregisters an event handler. local wasUnregistered = myObject : unregister ( eventID ) Parameters : eventID (string): The event id. Returns : wasUnregistered (boolean) unregisterAfter \u2693\ufe0e Unregisters a function previously registered using :registerAfter . local wasUnregistered = myObject : unregisterAfter ( eventID , callback ) Parameters : eventID (string): The event id. callback (function): The callback function. Returns : wasUnregistered (boolean) unregisterBefore \u2693\ufe0e Unregisters a function previously registered using :registerBefore . local wasUnregistered = myObject : unregisterBefore ( eventID , callback ) Parameters : eventID (string): The event id. callback (function): The callback function. Returns : wasUnregistered (boolean) updateLayout \u2693\ufe0e Updates a menu's element layout and all child elements. Needs to be called on a top level menu when any elements contained in it are added, moved or resized. myObject : updateLayout ()","title":"tes3uiElement"},{"location":"types/tes3uiElement/#tes3uielement","text":"A UI element, the main building block of the UI system. All elements are created with methods on a parent Element. Elements are very configurable, and have many HTML-like layout features. All layout properties can be set to nil to reset them to the default value, which will deactivate any related layout mode. Elements can have custom data attached using their Property _ key-value store, and specific Elements have specific element.widget accessors to control behaviour.","title":"tes3uiElement"},{"location":"types/tes3uiElement/#properties","text":"","title":"Properties"},{"location":"types/tes3uiElement/#absoluteposalignx","text":"The horizontal alignment of the element relative to it's parent element. Can be nil . If nil , deactivates behaviour associated with this property. Valid values range from 0.0 to 1.0 . Sets the element's positionX to a point relative to the parent element. A value of 0.0 is equal to the parent element's left content edge, whereas a value of 1.0 is equal to the parent element's right content edge. The positioning is absolute, which frees the element from the standard flow layout and allows overlapping elements. Incompatible with and will change the value of ignoreLayoutX . Elements may not respond to widthProportional sizing after this property is set. If you need to use both you should consider testing if it works first. Returns : result (number)","title":"absolutePosAlignX"},{"location":"types/tes3uiElement/#absoluteposaligny","text":"The vertical alignment of the element relative to it's parent element. Can be nil . If nil , deactivates behaviour associated with this property. Valid values range from 0.0 to 1.0 . Sets the element's positionY to a point relative to the parent element. A value of 0.0 is equal to the parent element's top content edge, whereas a value of 1.0 is equal to the parent element's bottom content edge. The positioning is absolute, which frees the element from the standard flow layout and allows overlapping elements. Incompatible with and will change the value of ignoreLayoutY . Elements may not respond to heightProportional sizing after this property is set. If you need to use both you should consider testing if it works first. Returns : result (number)","title":"absolutePosAlignY"},{"location":"types/tes3uiElement/#alpha","text":"The element's alpha color. Valid values range from 0.0 to 1.0 . Used to composite elements. If you wish to hide an element completely, use disable instead. Returns : result (number)","title":"alpha"},{"location":"types/tes3uiElement/#autoheight","text":"If true , automatically expands element dimensions to fit child elements. Ignores child elements that have ignoreLayoutY set to true . Dimensions are restricted by minWidth , minHeight , maxWidth and maxHeight properties. Returns : result (boolean)","title":"autoHeight"},{"location":"types/tes3uiElement/#autowidth","text":"If true , automatically expands element dimensions to fit child elements. Ignores child elements that have ignoreLayoutX set to true . Dimensions are restricted by minWidth , minHeight , maxWidth and maxHeight properties. Returns : result (boolean)","title":"autoWidth"},{"location":"types/tes3uiElement/#borderallsides","text":"The border size in pixels. Border is the extra empty space around an element. Individual border sizes default to using the borderAllSides setting. Returns : result (integer)","title":"borderAllSides"},{"location":"types/tes3uiElement/#borderbottom","text":"The bottom border size in pixels. When this is set to -1 , the borderAllSides setting is used for this side instead. Returns : result (integer)","title":"borderBottom"},{"location":"types/tes3uiElement/#borderleft","text":"The left border size in pixels. When this is set to -1 , the borderAllSides setting is used for this side instead. Returns : result (integer)","title":"borderLeft"},{"location":"types/tes3uiElement/#borderright","text":"The left border size in pixels. When this is set to -1 , the borderAllSides setting is used for this side instead. Returns : result (integer)","title":"borderRight"},{"location":"types/tes3uiElement/#bordertop","text":"The top border size in pixels. When this is set to -1 , the borderAllSides setting is used for this side instead. Returns : result (integer)","title":"borderTop"},{"location":"types/tes3uiElement/#childalignx","text":"Sets alignment of child elements inside its parent, though it only works in specific conditions. 0.0 = left/top edge touches left/top edge of parent, 0.5 = centred, 1.0 = right/bottom edge touches right/bottom edge of parent. For negative values, there is a special case behaviour: all children but the last will be left-aligned/top-aligned, the last child will be right-aligned/bottom-aligned. Important Child alignment only works if the element has proportional sizing (using widthProportional/heightProportional) and all children use non-proportional sizing (widthProportional and heightProportional are nil). Returns : result (number)","title":"childAlignX"},{"location":"types/tes3uiElement/#childaligny","text":"See childAlignX. Returns : result (number)","title":"childAlignY"},{"location":"types/tes3uiElement/#childoffsetx","text":"The view offset in pixels, applied to the position of child nodes. Used in scroll panes. Returns : result (integer)","title":"childOffsetX"},{"location":"types/tes3uiElement/#childoffsety","text":"See childOffsetX. Returns : result (number)","title":"childOffsetY"},{"location":"types/tes3uiElement/#children","text":"Read-only . The child elements of this element. This is a copy that does not track changes. Returns : result ( tes3uiElement [])","title":"children"},{"location":"types/tes3uiElement/#color","text":"The RGB color of the element. An array of 3 numbers with values ranging from 0.0 to 1.0 . For menus and rects, it sets the background color. For text, it sets the text color. For images, it multiplies the image by the color. Returns : result (number[])","title":"color"},{"location":"types/tes3uiElement/#consumemouseevents","text":"When true , mouse events over this element are sent to event handlers, or discarded if there is no handler. When false , mouse events go upwards to the first ancestor that can consume mouse events. Useful to set on widget sub-elements. true by default. Returns : result (boolean)","title":"consumeMouseEvents"},{"location":"types/tes3uiElement/#contentpath","text":"The file path to the image or model content of this element. Only used if contentType is set to tes3.contentType.image or tes3.contentType.model . Returns : result (string)","title":"contentPath"},{"location":"types/tes3uiElement/#contenttype","text":"Read-only . The type of content this tes3uiElement represents. Maps to values in the tes3.contentType table. Returns : result (string)","title":"contentType"},{"location":"types/tes3uiElement/#disabled","text":"Disables user actions on this element. Widgets may stop accepting mouse and keyboard input while disabled. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3uiElement/#flowdirection","text":"Can have values \"left_to_right\" or \"top_to_bottom\" . These values are available as tes3.flowDirection enumeration. Indicates which direction child elements are laid out. Returns : result (string)","title":"flowDirection"},{"location":"types/tes3uiElement/#font","text":"Index of font to use for text. 0 - Magic Cards (default) 1 - Century Sans 2 - Daedric Returns : result (number)","title":"font"},{"location":"types/tes3uiElement/#height","text":"The element's height in pixels. Returns : result (integer)","title":"height"},{"location":"types/tes3uiElement/#heightproportional","text":"Sets element dimensions using a proportional sizer. The sizer starts with the parent dimension in the flow direction, subtracts any fixed dimension children leaving the proportional sizer space. Each proportionally sized element then gets an equal division of the space, multiplied by this member. Values above 1.0 are permissible. Bug If widthProportional is used without heightProportional, an element may not respond to changes in parent size. It is recommended to set heightProportional, or have a fixed size sibling element if dynamic reflow is required. Overrides fixed, minimum and maximum sizes unless this value is nil (default). Returns : result (number)","title":"heightProportional"},{"location":"types/tes3uiElement/#id","text":"Read-only . The element's ID. The element can be later accessed by ancestor:findChild(id) . Note that multiple elements may have the same ID, such as subparts of a widget, or list items. Therefore, you may think of ids as an element class identifier. Returns : result (number)","title":"id"},{"location":"types/tes3uiElement/#ignorelayoutx","text":"If true , the element's positionX can be modified and will not be affected by any layout restrictions imposed by the parent element. Incompatible with and will change the value of absolutePosAlignX . Elements that bypass parent layout will be ignored when automatically determing the parent's width. See autoWidth for more information. Returns : result (boolean)","title":"ignoreLayoutX"},{"location":"types/tes3uiElement/#ignorelayouty","text":"If true , the element's positionY can be modified and will not be affected by any layout restrictions imposed by the parent element. Incompatible with and will change the value of absolutePosAlignY . Elements that bypass parent layout will be ignored when automatically determing the parent's height. See autoHeight for more information. Returns : result (boolean)","title":"ignoreLayoutY"},{"location":"types/tes3uiElement/#imagescalex","text":"Image scaling multipliers. Only applies to image elements. Returns : result (number)","title":"imageScaleX"},{"location":"types/tes3uiElement/#imagescaley","text":"Image scaling multipliers. Only applies to image elements. Returns : result (number)","title":"imageScaleY"},{"location":"types/tes3uiElement/#justifytext","text":"Can have values \"left\" , \"center\" , or \"right\" . Controls text justification. Maps to values in the tes3.justifyText table. To work correctly for center/right justification, wrapText must be true . Returns : result (string)","title":"justifyText"},{"location":"types/tes3uiElement/#maxheight","text":"The maximum height for auto-size layout and resizable frames. Returns : result (integer)","title":"maxHeight"},{"location":"types/tes3uiElement/#maxwidth","text":"The maximum width for auto-size layout and resizable frames. Returns : result (integer)","title":"maxWidth"},{"location":"types/tes3uiElement/#minheight","text":"The minimum height for auto-size layout and resizable frames. Returns : result (integer)","title":"minHeight"},{"location":"types/tes3uiElement/#minwidth","text":"The minimum width for auto-size layout and resizable frames. Returns : result (integer)","title":"minWidth"},{"location":"types/tes3uiElement/#name","text":"Read-only . The element's name, taken from the name registered for the ID. Returns : result (string)","title":"name"},{"location":"types/tes3uiElement/#paddingallsides","text":"The padding size in pixels. Padding is the blank space between the edge of an element and its contents. Individual padding sizes default to -1 , making it use the paddingAllSides setting. Returns : result (integer)","title":"paddingAllSides"},{"location":"types/tes3uiElement/#paddingbottom","text":"The bottom padding size in pixels. When this is set to -1 , the paddingAllSides setting is used for this side instead. Returns : result (integer)","title":"paddingBottom"},{"location":"types/tes3uiElement/#paddingleft","text":"The left padding size in pixels. When this is set to -1 , the paddingAllSides setting is used for this side instead. Returns : result (integer)","title":"paddingLeft"},{"location":"types/tes3uiElement/#paddingright","text":"Integer number. Right padding size in pixels. When this is set to -1 , the paddingAllSides setting is used for this side instead. Returns : result (number)","title":"paddingRight"},{"location":"types/tes3uiElement/#paddingtop","text":"The top padding size in pixels. When this is set to -1 , the paddingAllSides setting is used for this side instead. Returns : result (integer)","title":"paddingTop"},{"location":"types/tes3uiElement/#parent","text":"Read-only . A reference to the parent element. Returns : result ( tes3uiElement )","title":"parent"},{"location":"types/tes3uiElement/#positionx","text":"The element's horizontal position relative to its parent's top-left content area. For top-level menus, the position will be relative to the the centre of the screen. Modifying this value will not have any effect on most elements due to child element's positions being controlled by the layout and positioning settings of their parent elements, unless ignoreLayoutX is true . Returns : result (integer)","title":"positionX"},{"location":"types/tes3uiElement/#positiony","text":"The element's vertical position relative to its parent's top-left content area. For top-level menus, the position will be relative to the the centre of the screen. Modifying this value will not have any effect on most elements due to child element's positions being controlled by the layout and positioning settings of their parent elements, unless ignoreLayoutY is true . Returns : result (integer)","title":"positionY"},{"location":"types/tes3uiElement/#rawtext","text":"The raw value of the element's text. This, unlike the normal text property, will not directly read widget information or handle the removal of the positional cursor. Returns : result (string)","title":"rawText"},{"location":"types/tes3uiElement/#repeatkeys","text":"Controls if there is repeating text input when keys are held down. true by default. Returns : result (boolean)","title":"repeatKeys"},{"location":"types/tes3uiElement/#scalemode","text":"When set to true on image and NIF elements, they are scaled to fit width and height . Returns : result (boolean)","title":"scaleMode"},{"location":"types/tes3uiElement/#scenenode","text":"Read-only . Underlying access to the scene graph responsible for this element. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3uiElement/#text","text":"The element's text. Text input can be read by accessing this property. Tip If your element's text is a number, you need to manually convert it to string using tostring() . Returns : result (string)","title":"text"},{"location":"types/tes3uiElement/#texture","text":"The underlying texture for the element. This assumes that the element is of an element type. Setting this value will change the element to an image type. Returns : result ( niSourceTexture )","title":"texture"},{"location":"types/tes3uiElement/#type","text":"Read-only . The type of content this tes3uiElement represents. This is an expanded set of the options available from the contentType property. Maps to values in tes3.uiElementType . Returns : result (string)","title":"type"},{"location":"types/tes3uiElement/#visible","text":"Controls if the element is visible. Returns : result (boolean)","title":"visible"},{"location":"types/tes3uiElement/#widget","text":"Access to element specific properties. This will be nil if there are no element specific properties. See the return types and the create* functions for more details. Returns : result ( tes3uiWidget , nil)","title":"widget"},{"location":"types/tes3uiElement/#width","text":"The element's width in pixels. Returns : result (integer)","title":"width"},{"location":"types/tes3uiElement/#widthproportional","text":"Sets element dimensions using a proportional sizer. The sizer starts with the parent dimension in the flow direction, subtracts any fixed dimension children leaving the proportional sizer space. Each proportionally sized element then gets an equal division of the space, multiplied by this member. Values above 1.0 are permissible. Bug If widthProportional is used without heightProportional, an element may not respond to changes in parent size. It is recommended to set heightProportional, or have a fixed size sibling element if dynamic reflow is required. Overrides fixed, minimum and maximum sizes unless this value is nil (default). Returns : result (number)","title":"widthProportional"},{"location":"types/tes3uiElement/#wraptext","text":"Controls text wrapping. Setting this to true will also set heightProportional to 1.0 , which is required for wrapping text to adjust to its container size. Returns : result (boolean)","title":"wrapText"},{"location":"types/tes3uiElement/#methods","text":"","title":"Methods"},{"location":"types/tes3uiElement/#copy","text":"Copies this element to a new parent. This function can have unintended consequences. The specifics of what exact elements are being copied is important. local copy = myObject : copy ({ to = ..., copyChildren = ..., copyProperties = ... }) Parameters : params (table) to ( tes3uiElement ): The element to create the copy in. Will be the parent of the newly created element. copyChildren (boolean): Default : true . If true , all children will also be copied to the newly created element. copyProperties (boolean): Default : true . If true , all properties will be copied to the newly created element. Returns : copy ( tes3uiElement ): The created copy.","title":"copy"},{"location":"types/tes3uiElement/#createblock","text":"Creates an empty block container inside the element. Used to group and layout elements. local result = myObject : createBlock ({ id = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. Returns : result ( tes3uiElement )","title":"createBlock"},{"location":"types/tes3uiElement/#createbutton","text":"Creates a clickable button. Register the mouseClick event to capture a button press. Button specific properties can be accessed through the widget property. The widget type for buttons is tes3uiButton . local result = myObject : createButton ({ id = ..., text = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. text (string): Optional . The text to add to the button. It will highlight on mouseover like a text select widget. Returns : result ( tes3uiElement )","title":"createButton"},{"location":"types/tes3uiElement/#createcyclebutton","text":"Creates a clickable button, whose text changes linearly through options as it is clicked. Register the valueChanged event for when the option is cycled or changed via script. Button specific properties can be accessed through the widget property. The widget type for buttons is tes3uiCycleButton . local result = myObject : createCycleButton ({ id = ..., options = ..., index = ... }) Parameters : params (table) id (string, number): Optional . An identifier to help find this element later. options ( tes3uiCycleButtonOption []): An array of options for the button to cycle through. At minimum the option must have a text property defined, to show on the button. If a value is provided, it can be accessed through the .widget 's .value property. index (number): Optional . The index selected by default. Returns : result ( tes3uiElement )","title":"createCycleButton"},{"location":"types/tes3uiElement/#createdivider","text":"Creates a textured horizontal divider line, as used in the magic and stat menus. Scales automatically to the container width. local result = myObject : createDivider ({ id = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. Returns : result ( tes3uiElement )","title":"createDivider"},{"location":"types/tes3uiElement/#createfillbar","text":"Creates a horizontal quantity indicator bar. Fillbar specific properties can be accessed through the widget property. The widget type for fillbars is tes3uiFillBar . local result = myObject : createFillBar ({ id = ..., current = ..., max = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. current (number): Optional . The current value of the fillbar. max (number): Optional . The maximum value of the fillbar. Returns : result ( tes3uiElement )","title":"createFillBar"},{"location":"types/tes3uiElement/#createhorizontalscrollpane","text":"Creates a horizontally scrolling pane. Scroll pane specific properties can be accessed through the widget property. The widget type for scroll panes is tes3uiScrollPane . local result = myObject : createHorizontalScrollPane ({ id = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. Returns : result ( tes3uiElement )","title":"createHorizontalScrollPane"},{"location":"types/tes3uiElement/#createhyperlink","text":"Creates a clickable text, colored as a link. When the link is clicked, a URL is opened in the player's browser. If the confirm property is set, a confirmation prompt is opened first. Hyperlink-specific properties can be accessed through the widget property. The widget type for hyperlinks is tes3uiHyperlink . local element = myObject : createHyperlink ({ id = ..., text = ..., url = ..., confirm = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. text (string): The text to add to the hyperlink. url (string): The URL to open when the text is clicked. confirm (boolean): Default : true . If true, a confirmation prompt will be shown before any URL is opened. Returns : element ( tes3uiElement )","title":"createHyperlink"},{"location":"types/tes3uiElement/#createhypertext","text":"Creates a text area with clickable words as links. Usage is still under research. local result = myObject : createHypertext ({ id = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. Returns : result ( tes3uiElement )","title":"createHypertext"},{"location":"types/tes3uiElement/#createimage","text":"Creates an image element from a texture file. The texture must have power-of-2 dimensions (i.e. 16, 32, 64, 128, 256, 512, 1024); the final display size can be trimmed by setting width and height. local result = myObject : createImage ({ id = ..., path = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. path (string): Optional . An image path. This path is relative to Data Files . Returns : result ( tes3uiElement )","title":"createImage"},{"location":"types/tes3uiElement/#createimagebutton","text":"Creates an interactive button composed of images for the idle , over , and pressed states. The texture must have power-of-2 dimensions (i.e. 16, 32, 64, 128, 256, 512, 1024); the final display size can be trimmed by setting width and height. local result = myObject : createImageButton ({ id = ..., idle = ..., over = ..., pressed = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. idle (string): The path to the idle image. This path is relative to Data Files . over (string): The path to the mouse hover image. This path is relative to Data Files . pressed (string): The path to the mouse pressed image. This path is relative to Data Files . Returns : result ( tes3uiElement )","title":"createImageButton"},{"location":"types/tes3uiElement/#createlabel","text":"Creates a text label. It defaults to displaying all text on a single line. To get a multi-line label, set wrapText to true . The element is created with autoWidth and autoHeight turned on. local result = myObject : createLabel ({ id = ..., text = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. text (string): Default : (nil) . The text to display. Returns : result ( tes3uiElement )","title":"createLabel"},{"location":"types/tes3uiElement/#createnif","text":"Creates a NIF model from a file. Still under research. local result = myObject : createNif ({ id = ..., text = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. text (string): A model path. This path is relative to Data Files . Returns : result ( tes3uiElement )","title":"createNif"},{"location":"types/tes3uiElement/#createparagraphinput","text":"Creates a multi-line text input element, with line wrapping on. To receive input the keyboard must be captured with tes3ui.acquireTextInput(element) . Read the input with the text property. Write an initial value to edit by setting the text property. Paragraph input specific properties can be accessed through the widget property. The widget type for paragraph inputs is tes3uiParagraphInput . local result = myObject : createParagraphInput ({ id = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. Returns : result ( tes3uiElement )","title":"createParagraphInput"},{"location":"types/tes3uiElement/#createrect","text":"Creates a filled rectangle. The rectangle is displayed as filled with the element's color. It supports alpha compositing. local result = myObject : createRect ({ id = ..., color = ..., randomizeColor = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. color ( tes3vector3 , table): Optional . The fill color for the element. randomizeColor (boolean): Default : false . If true, the creation color will be randomized. Returns : result ( tes3uiElement )","title":"createRect"},{"location":"types/tes3uiElement/#createslider","text":"Creates a horizontal slider. Slider specific properties can be accessed through the widget property. The widget type for sliders is tes3uiSlider . local result = myObject : createSlider ({ id = ..., current = ..., max = ..., step = ..., jump = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. current (number): The current value of the slider. max (number): The maximum value of the slider. step (number): Default : 1 . The change in value when clicking the left and right arrow buttons. jump (number): Default : 5 . The change in value when clicking into the empty areas next to the slider handle. Returns : result ( tes3uiElement )","title":"createSlider"},{"location":"types/tes3uiElement/#createslidervertical","text":"Creates a vertical slider. Slider specific properties can be accessed through the widget property. The widget type for sliders is tes3uiSlider . local result = myObject : createSliderVertical ({ id = ..., current = ..., max = ..., step = ..., jump = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. current (number): The current value of the slider. max (number): The maximum value of the slider. step (number): Default : 1 . The change in value when clicking the left and right arrow buttons. jump (number): Default : 5 . The change in value when clicking into the empty areas next to the slider handle. Returns : result ( tes3uiElement )","title":"createSliderVertical"},{"location":"types/tes3uiElement/#createtextinput","text":"Creates a single line text input element. To receive input the keyboard must be captured with tes3ui.acquireTextInput(element) . Read the input with the text property. Write an initial value to display by setting the text property; that value will be cleared on the first keypress. Text input specific properties can be accessed through the widget property. The widget type for text inputs is tes3uiTextInput . local result = myObject : createTextInput ({ id = ..., text = ..., placeholderText = ..., numeric = ..., autoFocus = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. text (string): Optional . The initial text to use for the input. placeholderText (string): Optional . Placeholder text for the input. If the element is ever made empty, this will be displayed instead in the disabled text color. numeric (boolean): Default : false . If true, only numbers can be put into the input. The text value of the element will still be a string, and need to be converted using tonumber . autoFocus (boolean): Default : false . If true, the input will be automatically focused after creation. Returns : result ( tes3uiElement )","title":"createTextInput"},{"location":"types/tes3uiElement/#createtextselect","text":"Creates a selectable line of text, with configurable hover, click, and disabled colors. Can be used to create a list box by placing them in a ScrollPane. Text select specific properties can be accessed through the widget property. The widget type for text selects is tes3uiTextSelect . local result = myObject : createTextSelect ({ id = ..., text = ..., state = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. text (string): Optional . The text to display. state (number): Default : tes3.uiState.normal . The initial interaction state. Returns : result ( tes3uiElement )","title":"createTextSelect"},{"location":"types/tes3uiElement/#createthinborder","text":"Creates a styled thin border element. Any content should be created as children of this border. local result = myObject : createThinBorder ({ id = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. Returns : result ( tes3uiElement )","title":"createThinBorder"},{"location":"types/tes3uiElement/#createverticalscrollpane","text":"Creates a vertically scrolling pane. Useful as a list box. Scroll pane specific properties can be accessed through the widget property. The widget type for scroll panes is tes3uiScrollPane . local result = myObject : createVerticalScrollPane ({ id = ... }) Parameters : params (table): Optional . id (string, number): Optional . An identifier to help find this element later. Returns : result ( tes3uiElement )","title":"createVerticalScrollPane"},{"location":"types/tes3uiElement/#destroy","text":"Deletes an element and all its child elements. If any element is bound to text input by tes3ui.acquireTextInput _, the input is automatically released. myObject : destroy ()","title":"destroy"},{"location":"types/tes3uiElement/#destroychildren","text":"Deletes all the child elements of this element. If any element is bound to text input by tes3ui.acquireTextInput _, the input is automatically released. myObject : destroyChildren ()","title":"destroyChildren"},{"location":"types/tes3uiElement/#findchild","text":"Finds a child element matching the id argument. Searches children recursively. Returns the first child element with a matching id, or nil if no match found. local result = myObject : findChild ( id ) Parameters : id (string, number): The id to search for. Returns : result ( tes3uiElement )","title":"findChild"},{"location":"types/tes3uiElement/#forwardevent","text":"Forwards an event to the original Morrowind event handler, using this element as a source. This may be optionally called at any point in a callback. Note that handler may or may not destroy the event widget or the menu, so you should know how it behaves before accessing any elements after a callback. myObject : forwardEvent ( id ) Parameters : id (tes3uiEvent): The original UI event.","title":"forwardEvent"},{"location":"types/tes3uiElement/#getcontentelement","text":"Returns the descendant element that creation functions used on this element will place children into, or the calling element if there is no specific descendant for children. Some widgets like ScrollPanes are built of multiple layers of elements. When an element is created in a complex widget, it is automatically placed as a child of a content element, but other functions do not access this content element directly. This function finds this content container for any element, so that changing layout and accessing children is possible. For simple elements, the calling element will be returned so that there is always a valid container element. local result = myObject : getContentElement () Returns : result ( tes3uiElement )","title":"getContentElement"},{"location":"types/tes3uiElement/#getluadata","text":"Gets an arbitrary lua value from the UI element. Each element has the capability to store keyed lua data, as if it were a table, using this function and setLuaData . local result = myObject : getLuaData ( key ) Parameters : key (string): The key for the lua data. Returns : result (any)","title":"getLuaData"},{"location":"types/tes3uiElement/#getpropertybool","text":"Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function gets a property as a boolean value, defaulting to false if the property was not set. local value = myObject : getPropertyBool ( property ) Parameters : property (number, string): The property to get. Returns : value (boolean): The value of the property, defaulting to false if the property was not set.","title":"getPropertyBool"},{"location":"types/tes3uiElement/#getpropertycallback","text":"Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function gets a property as a number value, defaulting to 0 if the property was not set. This function can be dangerous to use, and can lead to crashes if not properly understood. local value = myObject : getPropertyCallback ( property ) Parameters : property (number, string): The property to get. Returns : value (number): The value of the property, defaulting to 0 if the property was not set.","title":"getPropertyCallback"},{"location":"types/tes3uiElement/#getpropertyfloat","text":"Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function gets a property as a floating-point value, defaulting to 0 if the property was not set. local value = myObject : getPropertyFloat ( property ) Parameters : property (number, string): The property to get. Returns : value (number): The value of the property, defaulting to 0 if the property was not set.","title":"getPropertyFloat"},{"location":"types/tes3uiElement/#getpropertyint","text":"Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function gets a property as an integer value, defaulting to 0 if the property was not set. local value = myObject : getPropertyInt ( property ) Parameters : property (number, string): The property to get. Returns : value (integer): The value of the property, defaulting to 0 if the property was not set.","title":"getPropertyInt"},{"location":"types/tes3uiElement/#getpropertyobject","text":"Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function gets a property as an object value, defaulting to nil if the property was not set. This function can be dangerous to use, and can lead to crashes if not properly understood. local value = myObject : getPropertyObject ( property , typeCast ) Parameters : property (number, string): The property to get. typeCast (string, nil): Default : \"tes3baseObject\" . The casting of the property to get. Returns : value (number): The value of the property, defaulting to nil if the property was not set.","title":"getPropertyObject"},{"location":"types/tes3uiElement/#getpropertyproperty","text":"Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function gets a property whose value is, itself, a property, defaulting to 0 if the property was not set. local value = myObject : getPropertyProperty ( property ) Parameters : property (number, string): The property to get. Returns : value (number): The value of the property, defaulting to 0 if the property was not set.","title":"getPropertyProperty"},{"location":"types/tes3uiElement/#gettoplevelmenu","text":"Finds the parent menu containing the element. Useful for finding the correct menu to run layout updates on. local result = myObject : getTopLevelMenu () Returns : result ( tes3uiElement )","title":"getTopLevelMenu"},{"location":"types/tes3uiElement/#loadmenuposition","text":"Restores the menu's position and size information from the Morrowind.ini file. This may only be called on top-level parents. myObject : loadMenuPosition ()","title":"loadMenuPosition"},{"location":"types/tes3uiElement/#move","text":"Copies this element to a new parent, then destroys this element. This function can have unintended consequences. The specifics of what exact elements are being copied is important. local copy = myObject : move ( to ) Parameters : to ( tes3uiElement ): Where to create the copy. Returns : copy ( tes3uiElement ): The created copy.","title":"move"},{"location":"types/tes3uiElement/#register","text":"Sets an event handler, which can add or override an existing event handler. The use of registerBefore or registerAfter is recommended if you do not want to replace the existing event handler. The eventID can be a standard event name, or an event specific to an element class. These can be accessed through tes3.uiEvent for convenience. The callback receives an argument with the event data. See below for details. The original Morrowind callback is captured and can be invoked with the forwardEvent method on the event argument. If there is an existing Lua callback, it is replaced. Standard events: **mouseLeave** Mouse cursor moving outside an element. Triggers once. **mouseOver** Mouse cursor moving over an element. Triggers once. **mouseDown** Left mouse button down over an element. **mouseClick** Left mouse button up over an element, after a mouseDown over the element. **mouseScrollUp** .. **mouseScrollDown** Mouse wheel scrolling. **mouseDoubleClick** Standard double-click. **mouseStillIdle** Mouse cursor positioned outside an element. Triggers every frame. **mouseStillOver** Mouse cursor positioned over an element. Triggers every frame. **mouseStillPressed** Mouse cursor positioned over an element, after a mouseDown over the element. Triggers every frame. **mouseStillPressedOutside** Apparently not working in the engine. Mouse cursor positioned outside an element, after a mouseDown over the element. Triggers every frame. **mouseRelease** Left mouse button up over an element. **keyPress** A raw key press. **keyEnter** The Return key is pressed. **help** On mouseover, but also marking the element as having a tooltip. Create a tooltip within the callback using the `tes3ui.createTooltipMenu` function. **focus** When a menu is clicked on, and moved on top of other menus. **unfocus** Just before another menu is clicked on, or a widget in that menu receives an event, or when the menu mode is toggled off. You may return false from this event to prevent the menu from being deselected, and to prevent leaving menu mode. **preUpdate** Before the menu layout is updated. **update** After the menu layout is updated. **destroy** When the UI element is destroyed, before any data or children are destroyed. Widget-specific events: Slider: **PartScrollBar_changed** Triggers on value change; moving the slider is not enough if the value is the same.","title":"register"},{"location":"types/tes3uiElement/#event-forwarding","text":"The original Morrowind event handler is saved when you first register an event. It may be optionally invoked with the forwardEvent method. Note that handler may or may not destroy the event widget or the menu, so you should know how it behaves before accessing any elements after a callback. Example local function onClick ( e ) -- pre-event code e . source : forwardEvent ( e ) -- post-event code end local button = menu : findChild ( \"MenuExample_Ok\" ) button : register ( \"mouseClick\" , onClick )","title":"Event forwarding"},{"location":"types/tes3uiElement/#event-handler","text":"The standard type signature for events. `boolean`_ eventHandler(**EventData** e) Returns: `optional` Returning `false` may cancel an interaction for certain events. e.g. unfocus EventData: **source** (`Element`_) The source element of the event. **id** (`number`_) The numeric id of the event type. **widget** (`Element`_) The widget element that the source belongs to, if the element is a sub-part of a widget. May not be accurate if the element is not a sub-part. **data0** (`number`_) .. **data1** (`number`_) Event-specific raw data values. For mouse events, these are the screen X and Y coordinates of the pointer. For keyboard events, data0 is the `scan code`_. **relativeX** (`number`_) .. **relativeY** (`number`_) For mouse events only. X and Y coordinates of the pointer relative to the top-left of the element. myObject : register ( eventID , callback ) Parameters : eventID (string): The event id. Maps to values in tes3.uiEvent . callback (function): The callback function.","title":"Event handler"},{"location":"types/tes3uiElement/#registerafter","text":"Sets an event handler to run after any existing event handler on the element. Can be any event usable with register . The callback receives an argument with the event data. See register for details. myObject : registerAfter ( eventID , callback ) Parameters : eventID (string): The event id. callback (function): The callback function.","title":"registerAfter"},{"location":"types/tes3uiElement/#registerbefore","text":"Sets an event handler to run before any existing event handler on the element. Can be any event usable with register . The callback receives an argument with the event data. See register for details. myObject : registerBefore ( eventID , callback ) Parameters : eventID (string): The event id. callback (function): The callback function.","title":"registerBefore"},{"location":"types/tes3uiElement/#reorderchildren","text":"Moves the layout order of the children of this element. count elements are taken from starting child Element or index (0-based) moveFrom , and moved before the child Element or index (0-based) insertBefore . If count is -1, all children after moveFrom are moved. If any index is a negative number, then the index represents a distance from the end of the child list. Returns true if the operation succeeded, or false if at least one argument was invalid. local result = myObject : reorderChildren ( insertBefore , moveFrom , count ) Parameters : insertBefore ( tes3uiElement , number): The insertion point (or its 0-based child index). moveFrom ( tes3uiElement , number): The first child (or 0-based child index) to be moved. count (number): The number of child elements to move. Returns : result (boolean)","title":"reorderChildren"},{"location":"types/tes3uiElement/#savemenuposition","text":"Saves the menu's position and size information to the Morrowind.ini file. This may only be called on top-level parents. Note that most menus save their position automatically. myObject : saveMenuPosition ()","title":"saveMenuPosition"},{"location":"types/tes3uiElement/#setluadata","text":"Sets an arbitrary lua value for the UI element. Each element has the capability to store keyed lua data, as if it were a table, using this function and getLuaData . myObject : setLuaData ( key , value ) Parameters : key (string): The key for the lua data. value (any): The value to set.","title":"setLuaData"},{"location":"types/tes3uiElement/#setpropertybool","text":"Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function sets a property to a boolean value. myObject : setPropertyBool ( property , value ) Parameters : property (number, string): The property to set. value (boolean): The value to set.","title":"setPropertyBool"},{"location":"types/tes3uiElement/#setpropertycallback","text":"Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function sets a property to a callback value, represented as a number. This function can be dangerous to use, and can lead to crashes if not properly understood. myObject : setPropertyCallback ( property , value ) Parameters : property (number, string): The property to set. value (number): The value to set.","title":"setPropertyCallback"},{"location":"types/tes3uiElement/#setpropertyfloat","text":"Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function sets a property to a floating-point value. myObject : setPropertyFloat ( property , value ) Parameters : property (number, string): The property to set. value (number): The value to set.","title":"setPropertyFloat"},{"location":"types/tes3uiElement/#setpropertyint","text":"Properties are extra variables attached to an element. Morrowind uses these to bind variables to the UI, and they can be useful for element class-specific properties. This function sets a property to an integer value. myObject : setPropertyInt ( property , value ) Parameters : property (number, string): The property to set. value (number): The value to set.","title":"setPropertyInt"},{"location":"types/tes3uiElement/#setpropertyobject","text":"Sets a property value with prop as the property key. Properties are named variables attached to an element. Gets a property value with propName as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. myObject : setPropertyObject ( property , value ) Parameters : property (number, string): The property to get. value (object): The value to set.","title":"setPropertyObject"},{"location":"types/tes3uiElement/#setpropertyproperty","text":"Properties are named variables attached to an element. Sets a property value with property as the property key. Morrowind uses these to bind variables to the UI. Useful for element class-specific properties. This function sets a property whose value is, itself, a property. myObject : setPropertyProperty ( property , value ) Parameters : property (number, string): The property to get. value (number, string): The value to set.","title":"setPropertyProperty"},{"location":"types/tes3uiElement/#sortchildren","text":"Reorders the element's children given a sorting function. myObject : sortChildren ( sortFunction ) Parameters : sortFunction (function): The function to sort with. Like most sorting functions, this is given two arguments to compare.","title":"sortChildren"},{"location":"types/tes3uiElement/#triggerevent","text":"Triggers a UI event on an element, either using supplied event data, or by constructing new event data using eventName . eventName is the same as used in register . myObject : triggerEvent ( eventID ) Parameters : eventID (tes3uiEvent, string): The event, or event ID.","title":"triggerEvent"},{"location":"types/tes3uiElement/#unregister","text":"Unregisters an event handler. local wasUnregistered = myObject : unregister ( eventID ) Parameters : eventID (string): The event id. Returns : wasUnregistered (boolean)","title":"unregister"},{"location":"types/tes3uiElement/#unregisterafter","text":"Unregisters a function previously registered using :registerAfter . local wasUnregistered = myObject : unregisterAfter ( eventID , callback ) Parameters : eventID (string): The event id. callback (function): The callback function. Returns : wasUnregistered (boolean)","title":"unregisterAfter"},{"location":"types/tes3uiElement/#unregisterbefore","text":"Unregisters a function previously registered using :registerBefore . local wasUnregistered = myObject : unregisterBefore ( eventID , callback ) Parameters : eventID (string): The event id. callback (function): The callback function. Returns : wasUnregistered (boolean)","title":"unregisterBefore"},{"location":"types/tes3uiElement/#updatelayout","text":"Updates a menu's element layout and all child elements. Needs to be called on a top level menu when any elements contained in it are added, moved or resized. myObject : updateLayout ()","title":"updateLayout"},{"location":"types/tes3uiEventData/","text":"tes3uiEventData \u2693\ufe0e Contains information from a standard UI callback. This is the parameter passed to callbacks when using :register , :registerBefore , or :registerAfter . Properties \u2693\ufe0e forwardSource \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3uiElement ) id \u2693\ufe0e Read-only . The ID of the event that is being triggered. Returns : result (number) relativeX \u2693\ufe0e Read-only . For mouse-related events, this is the relative horizontal position for the current element. Returns : result (number, nil) relativeY \u2693\ufe0e Read-only . For mouse-related events, this is the relative vertical position for the current element. Returns : result (number, nil) source \u2693\ufe0e Read-only . The element that owns the event. Returns : result ( tes3uiElement ) widget \u2693\ufe0e Read-only . No description yet available. Returns : result ( tes3uiElement )","title":"tes3uiEventData"},{"location":"types/tes3uiEventData/#tes3uieventdata","text":"Contains information from a standard UI callback. This is the parameter passed to callbacks when using :register , :registerBefore , or :registerAfter .","title":"tes3uiEventData"},{"location":"types/tes3uiEventData/#properties","text":"","title":"Properties"},{"location":"types/tes3uiEventData/#forwardsource","text":"Read-only . No description yet available. Returns : result ( tes3uiElement )","title":"forwardSource"},{"location":"types/tes3uiEventData/#id","text":"Read-only . The ID of the event that is being triggered. Returns : result (number)","title":"id"},{"location":"types/tes3uiEventData/#relativex","text":"Read-only . For mouse-related events, this is the relative horizontal position for the current element. Returns : result (number, nil)","title":"relativeX"},{"location":"types/tes3uiEventData/#relativey","text":"Read-only . For mouse-related events, this is the relative vertical position for the current element. Returns : result (number, nil)","title":"relativeY"},{"location":"types/tes3uiEventData/#source","text":"Read-only . The element that owns the event. Returns : result ( tes3uiElement )","title":"source"},{"location":"types/tes3uiEventData/#widget","text":"Read-only . No description yet available. Returns : result ( tes3uiElement )","title":"widget"},{"location":"types/tes3uiFillBar/","text":"tes3uiFillBar \u2693\ufe0e A structure containing properties specific to fillbars. This type inherits the following: tes3uiWidget Properties \u2693\ufe0e current \u2693\ufe0e The current value. The size of the filled portion is determined by dividing current by max . Returns : result (number) element \u2693\ufe0e Access back to the element this widget interface is for. Returns : result ( tes3uiElement ) fillAlpha \u2693\ufe0e The alpha value of fillColor . Setting this will also set the alpha value of fillColor . Returns : result (number) fillColor \u2693\ufe0e The RGB color of the filled portion. An array of 3 floats with value range [0.0, 1.0]. Does not affect the background or the border. Returns : result ( niColor ) max \u2693\ufe0e The maximum value. The size of the filled portion is determined by dividing current by max . Returns : result (number) normalized \u2693\ufe0e The current value in range [0.0, 1.0]. Returns : result (number) showText \u2693\ufe0e If true , shows a centered text with the format current/max inside the fillbar. Returns : result (boolean)","title":"tes3uiFillBar"},{"location":"types/tes3uiFillBar/#tes3uifillbar","text":"A structure containing properties specific to fillbars. This type inherits the following: tes3uiWidget","title":"tes3uiFillBar"},{"location":"types/tes3uiFillBar/#properties","text":"","title":"Properties"},{"location":"types/tes3uiFillBar/#current","text":"The current value. The size of the filled portion is determined by dividing current by max . Returns : result (number)","title":"current"},{"location":"types/tes3uiFillBar/#element","text":"Access back to the element this widget interface is for. Returns : result ( tes3uiElement )","title":"element"},{"location":"types/tes3uiFillBar/#fillalpha","text":"The alpha value of fillColor . Setting this will also set the alpha value of fillColor . Returns : result (number)","title":"fillAlpha"},{"location":"types/tes3uiFillBar/#fillcolor","text":"The RGB color of the filled portion. An array of 3 floats with value range [0.0, 1.0]. Does not affect the background or the border. Returns : result ( niColor )","title":"fillColor"},{"location":"types/tes3uiFillBar/#max","text":"The maximum value. The size of the filled portion is determined by dividing current by max . Returns : result (number)","title":"max"},{"location":"types/tes3uiFillBar/#normalized","text":"The current value in range [0.0, 1.0]. Returns : result (number)","title":"normalized"},{"location":"types/tes3uiFillBar/#showtext","text":"If true , shows a centered text with the format current/max inside the fillbar. Returns : result (boolean)","title":"showText"},{"location":"types/tes3uiFontColor/","text":"tes3uiFontColor \u2693\ufe0e Contains color information of a font. Properties \u2693\ufe0e b \u2693\ufe0e Blue color value, in range [0.0, 1.0]. Returns : result (number) g \u2693\ufe0e Green color value, in range [0.0, 1.0]. Returns : result (number) r \u2693\ufe0e Red color value, in range [0.0, 1.0]. Returns : result (number)","title":"tes3uiFontColor"},{"location":"types/tes3uiFontColor/#tes3uifontcolor","text":"Contains color information of a font.","title":"tes3uiFontColor"},{"location":"types/tes3uiFontColor/#properties","text":"","title":"Properties"},{"location":"types/tes3uiFontColor/#b","text":"Blue color value, in range [0.0, 1.0]. Returns : result (number)","title":"b"},{"location":"types/tes3uiFontColor/#g","text":"Green color value, in range [0.0, 1.0]. Returns : result (number)","title":"g"},{"location":"types/tes3uiFontColor/#r","text":"Red color value, in range [0.0, 1.0]. Returns : result (number)","title":"r"},{"location":"types/tes3uiHyperlink/","text":"tes3uiHyperlink \u2693\ufe0e A structure containing properties specific to hyperlinks. This type inherits the following: tes3uiWidget Properties \u2693\ufe0e confirm \u2693\ufe0e If true, a confirmation prompt will be shown before any URLs are opened. Returns : result (boolean) element \u2693\ufe0e Access back to the element this widget interface is for. Returns : result ( tes3uiElement ) url \u2693\ufe0e The URL to open if the element is clicked. Returns : result (string) Methods \u2693\ufe0e openURL \u2693\ufe0e Opens a contained URL. If the confirm property is set, a modal prompt will be given to confirm the user wants to open the URL. myObject : openURL ()","title":"tes3uiHyperlink"},{"location":"types/tes3uiHyperlink/#tes3uihyperlink","text":"A structure containing properties specific to hyperlinks. This type inherits the following: tes3uiWidget","title":"tes3uiHyperlink"},{"location":"types/tes3uiHyperlink/#properties","text":"","title":"Properties"},{"location":"types/tes3uiHyperlink/#confirm","text":"If true, a confirmation prompt will be shown before any URLs are opened. Returns : result (boolean)","title":"confirm"},{"location":"types/tes3uiHyperlink/#element","text":"Access back to the element this widget interface is for. Returns : result ( tes3uiElement )","title":"element"},{"location":"types/tes3uiHyperlink/#url","text":"The URL to open if the element is clicked. Returns : result (string)","title":"url"},{"location":"types/tes3uiHyperlink/#methods","text":"","title":"Methods"},{"location":"types/tes3uiHyperlink/#openurl","text":"Opens a contained URL. If the confirm property is set, a modal prompt will be given to confirm the user wants to open the URL. myObject : openURL ()","title":"openURL"},{"location":"types/tes3uiMenuController/","text":"tes3uiMenuController \u2693\ufe0e The controller responsible for the menu system. Properties \u2693\ufe0e fogOfWarDisabled \u2693\ufe0e A flag that controls whether the local map menu renders fog of war. Returns : result (boolean) fontColors \u2693\ufe0e Read-only . A 1-indexed table with 49 tes3uiFontColor objects for all different in-game uses for fonts. Namely: normal , normal_over , normal_pressed , active , active_over , active_pressed , disabled , disabled_over , disabled_pressed , link , link_over , link_pressed , journal , journal_over , journal_pressed , journal_topic , journal_topic_over , journal_topic_pressed , journal_finished_quest_topic , journal_finished_quest_topic_over , journal_finished_quest_topic_pressed , answer , answer_over , answer_pressed , header , notify , big_normal , big_normal_over , big_normal_pressed , big_link , big_link_over , big_link_pressed , big_answer , big_answer_over , big_answer_pressed , big_header , big_notify , background , focus , npc_health , health , magic , fatigue , misc , weapon_fill , magic_fill , positive , negative , count . Returns : result ( tes3uiFontColor []) helpDelay \u2693\ufe0e Read-only . Delay in seconds before help tooltip appears. Corresponds to the Menu Help Delay slider in Options menu. Returns : result (number) helpRoot \u2693\ufe0e Read-only . The root element of the help UI layer. The help UI layer will always be drawn after the main UI layer and therefore all elements on it will be shown in front of elements of the main UI layer. This element contains top level menus like tooltips, message boxes and more as direct children. Prefer using the tes3ui.findHelpLayerMenu() function to find one of this element's direct children. Returns : result ( tes3uiElement ) inputController \u2693\ufe0e Read-only . Access to tes3uiMenuInputController . Returns : result ( tes3uiMenuInputController ) inventoryMenuEnabled \u2693\ufe0e A flag that controls whether the inventory menu is enabled or disabled. Returns : result (boolean) magicMenuEnabled \u2693\ufe0e A flag that controls whether the magic menu is enabled or disabled. Magic menu is the menu used to select a spell for casting from available spells, scrolls and enchantments. Returns : result (boolean) mainRoot \u2693\ufe0e Read-only . The root element of the main UI layer. This element contains top level menus like the inventory menu, magic menu, status menu, map menu, the HUD and more as direct children. Prefer using the tes3ui.findMenu() function to find one of this element's direct children. Returns : result ( tes3uiElement ) mapMenuEnabled \u2693\ufe0e A flag that controls whether the map menu is enabled or disabled. Returns : result (boolean) scriptCompiler \u2693\ufe0e Read-only . Access to tes3scriptCompiler object. Returns : result (tes3scriptCompiler) statsMenuEnabled \u2693\ufe0e A flag that controls whether the stats menu is enabled or disabled. Stats menu lists all of the player's current skill and attribute values, level, race, class, health, magicka and fatigue. Returns : result (boolean)","title":"tes3uiMenuController"},{"location":"types/tes3uiMenuController/#tes3uimenucontroller","text":"The controller responsible for the menu system.","title":"tes3uiMenuController"},{"location":"types/tes3uiMenuController/#properties","text":"","title":"Properties"},{"location":"types/tes3uiMenuController/#fogofwardisabled","text":"A flag that controls whether the local map menu renders fog of war. Returns : result (boolean)","title":"fogOfWarDisabled"},{"location":"types/tes3uiMenuController/#fontcolors","text":"Read-only . A 1-indexed table with 49 tes3uiFontColor objects for all different in-game uses for fonts. Namely: normal , normal_over , normal_pressed , active , active_over , active_pressed , disabled , disabled_over , disabled_pressed , link , link_over , link_pressed , journal , journal_over , journal_pressed , journal_topic , journal_topic_over , journal_topic_pressed , journal_finished_quest_topic , journal_finished_quest_topic_over , journal_finished_quest_topic_pressed , answer , answer_over , answer_pressed , header , notify , big_normal , big_normal_over , big_normal_pressed , big_link , big_link_over , big_link_pressed , big_answer , big_answer_over , big_answer_pressed , big_header , big_notify , background , focus , npc_health , health , magic , fatigue , misc , weapon_fill , magic_fill , positive , negative , count . Returns : result ( tes3uiFontColor [])","title":"fontColors"},{"location":"types/tes3uiMenuController/#helpdelay","text":"Read-only . Delay in seconds before help tooltip appears. Corresponds to the Menu Help Delay slider in Options menu. Returns : result (number)","title":"helpDelay"},{"location":"types/tes3uiMenuController/#helproot","text":"Read-only . The root element of the help UI layer. The help UI layer will always be drawn after the main UI layer and therefore all elements on it will be shown in front of elements of the main UI layer. This element contains top level menus like tooltips, message boxes and more as direct children. Prefer using the tes3ui.findHelpLayerMenu() function to find one of this element's direct children. Returns : result ( tes3uiElement )","title":"helpRoot"},{"location":"types/tes3uiMenuController/#inputcontroller","text":"Read-only . Access to tes3uiMenuInputController . Returns : result ( tes3uiMenuInputController )","title":"inputController"},{"location":"types/tes3uiMenuController/#inventorymenuenabled","text":"A flag that controls whether the inventory menu is enabled or disabled. Returns : result (boolean)","title":"inventoryMenuEnabled"},{"location":"types/tes3uiMenuController/#magicmenuenabled","text":"A flag that controls whether the magic menu is enabled or disabled. Magic menu is the menu used to select a spell for casting from available spells, scrolls and enchantments. Returns : result (boolean)","title":"magicMenuEnabled"},{"location":"types/tes3uiMenuController/#mainroot","text":"Read-only . The root element of the main UI layer. This element contains top level menus like the inventory menu, magic menu, status menu, map menu, the HUD and more as direct children. Prefer using the tes3ui.findMenu() function to find one of this element's direct children. Returns : result ( tes3uiElement )","title":"mainRoot"},{"location":"types/tes3uiMenuController/#mapmenuenabled","text":"A flag that controls whether the map menu is enabled or disabled. Returns : result (boolean)","title":"mapMenuEnabled"},{"location":"types/tes3uiMenuController/#scriptcompiler","text":"Read-only . Access to tes3scriptCompiler object. Returns : result (tes3scriptCompiler)","title":"scriptCompiler"},{"location":"types/tes3uiMenuController/#statsmenuenabled","text":"A flag that controls whether the stats menu is enabled or disabled. Stats menu lists all of the player's current skill and attribute values, level, race, class, health, magicka and fatigue. Returns : result (boolean)","title":"statsMenuEnabled"},{"location":"types/tes3uiMenuInputController/","text":"tes3uiMenuInputController \u2693\ufe0e A core came structure responsible for managing the input around menu elements. Properties \u2693\ufe0e lastInputTime \u2693\ufe0e The amount of seconds that have passed since the last time the input was updated. Returns : result (number) menuController \u2693\ufe0e A handle back to the main menu controller. Returns : result ( tes3uiMenuController ) textInputFocus \u2693\ufe0e The element that is currently focused for text input. Returns : result ( tes3uiElement ) Methods \u2693\ufe0e flushBufferedTextEvents \u2693\ufe0e Clears the current text input. If no text has been passed to the current text focus, this will prevent it from doing so. myObject : flushBufferedTextEvents ()","title":"tes3uiMenuInputController"},{"location":"types/tes3uiMenuInputController/#tes3uimenuinputcontroller","text":"A core came structure responsible for managing the input around menu elements.","title":"tes3uiMenuInputController"},{"location":"types/tes3uiMenuInputController/#properties","text":"","title":"Properties"},{"location":"types/tes3uiMenuInputController/#lastinputtime","text":"The amount of seconds that have passed since the last time the input was updated. Returns : result (number)","title":"lastInputTime"},{"location":"types/tes3uiMenuInputController/#menucontroller","text":"A handle back to the main menu controller. Returns : result ( tes3uiMenuController )","title":"menuController"},{"location":"types/tes3uiMenuInputController/#textinputfocus","text":"The element that is currently focused for text input. Returns : result ( tes3uiElement )","title":"textInputFocus"},{"location":"types/tes3uiMenuInputController/#methods","text":"","title":"Methods"},{"location":"types/tes3uiMenuInputController/#flushbufferedtextevents","text":"Clears the current text input. If no text has been passed to the current text focus, this will prevent it from doing so. myObject : flushBufferedTextEvents ()","title":"flushBufferedTextEvents"},{"location":"types/tes3uiParagraphInput/","text":"tes3uiParagraphInput \u2693\ufe0e A structure containing properties specific to paragraph inputs. This type inherits the following: tes3uiWidget Properties \u2693\ufe0e element \u2693\ufe0e Access back to the element this widget interface is for. Returns : result ( tes3uiElement ) lengthLimit \u2693\ufe0e Default : 1023 . The character limit. Inputting additional characters will not be possible if this limit has been reached. Returns : result (number)","title":"tes3uiParagraphInput"},{"location":"types/tes3uiParagraphInput/#tes3uiparagraphinput","text":"A structure containing properties specific to paragraph inputs. This type inherits the following: tes3uiWidget","title":"tes3uiParagraphInput"},{"location":"types/tes3uiParagraphInput/#properties","text":"","title":"Properties"},{"location":"types/tes3uiParagraphInput/#element","text":"Access back to the element this widget interface is for. Returns : result ( tes3uiElement )","title":"element"},{"location":"types/tes3uiParagraphInput/#lengthlimit","text":"Default : 1023 . The character limit. Inputting additional characters will not be possible if this limit has been reached. Returns : result (number)","title":"lengthLimit"},{"location":"types/tes3uiProperty/","text":"tes3uiProperty \u2693\ufe0e Properties \u2693\ufe0e id \u2693\ufe0e UI property's unique ID. Returns : result (string) name \u2693\ufe0e Read-only . The name of this UI property. Returns : result (string) type \u2693\ufe0e Read-only . The type of this UI property. Returns : result (number, property) value \u2693\ufe0e Read-only . The value of this UI property. Returns : result (number, boolean, property)","title":"tes3uiProperty"},{"location":"types/tes3uiProperty/#tes3uiproperty","text":"","title":"tes3uiProperty"},{"location":"types/tes3uiProperty/#properties","text":"","title":"Properties"},{"location":"types/tes3uiProperty/#id","text":"UI property's unique ID. Returns : result (string)","title":"id"},{"location":"types/tes3uiProperty/#name","text":"Read-only . The name of this UI property. Returns : result (string)","title":"name"},{"location":"types/tes3uiProperty/#type","text":"Read-only . The type of this UI property. Returns : result (number, property)","title":"type"},{"location":"types/tes3uiProperty/#value","text":"Read-only . The value of this UI property. Returns : result (number, boolean, property)","title":"value"},{"location":"types/tes3uiScrollPane/","text":"tes3uiScrollPane \u2693\ufe0e A structure containing properties specific to scroll panes. This type inherits the following: tes3uiWidget Properties \u2693\ufe0e contentPane \u2693\ufe0e Read-only . The content element of this pane. Returns : result ( tes3uiElement ) element \u2693\ufe0e Access back to the element this widget interface is for. Returns : result ( tes3uiElement ) positionX \u2693\ufe0e The horizontal scroll offset in pixels. Returns : result (number) positionY \u2693\ufe0e The vertical scroll offset in pixels. Returns : result (number) scrollbarVisible \u2693\ufe0e If true , the scrollbar will be visible. Returns : result (boolean) Methods \u2693\ufe0e contentsChanged \u2693\ufe0e Updates the scrollbar slider and scrollbar limits after adding or removing elements to the content container. Because content size depends on layout, this must be run after calling updateLayout on the widget element. Only required if the content size changes. myObject : contentsChanged ()","title":"tes3uiScrollPane"},{"location":"types/tes3uiScrollPane/#tes3uiscrollpane","text":"A structure containing properties specific to scroll panes. This type inherits the following: tes3uiWidget","title":"tes3uiScrollPane"},{"location":"types/tes3uiScrollPane/#properties","text":"","title":"Properties"},{"location":"types/tes3uiScrollPane/#contentpane","text":"Read-only . The content element of this pane. Returns : result ( tes3uiElement )","title":"contentPane"},{"location":"types/tes3uiScrollPane/#element","text":"Access back to the element this widget interface is for. Returns : result ( tes3uiElement )","title":"element"},{"location":"types/tes3uiScrollPane/#positionx","text":"The horizontal scroll offset in pixels. Returns : result (number)","title":"positionX"},{"location":"types/tes3uiScrollPane/#positiony","text":"The vertical scroll offset in pixels. Returns : result (number)","title":"positionY"},{"location":"types/tes3uiScrollPane/#scrollbarvisible","text":"If true , the scrollbar will be visible. Returns : result (boolean)","title":"scrollbarVisible"},{"location":"types/tes3uiScrollPane/#methods","text":"","title":"Methods"},{"location":"types/tes3uiScrollPane/#contentschanged","text":"Updates the scrollbar slider and scrollbar limits after adding or removing elements to the content container. Because content size depends on layout, this must be run after calling updateLayout on the widget element. Only required if the content size changes. myObject : contentsChanged ()","title":"contentsChanged"},{"location":"types/tes3uiSlider/","text":"tes3uiSlider \u2693\ufe0e A structure containing properties specific to sliders. This type inherits the following: tes3uiWidget Properties \u2693\ufe0e current \u2693\ufe0e The current value. The position of the slider handle is determined by dividing current by max . Returns : result (number) element \u2693\ufe0e Access back to the element this widget interface is for. Returns : result ( tes3uiElement ) jump \u2693\ufe0e The change in value when clicking into the empty areas next to the slider handle. Returns : result (number) max \u2693\ufe0e The maximum value. The position of the slider handle is determined by dividing current by max . Returns : result (number) step \u2693\ufe0e The change in value when clicking the left and right arrow buttons. Returns : result (number)","title":"tes3uiSlider"},{"location":"types/tes3uiSlider/#tes3uislider","text":"A structure containing properties specific to sliders. This type inherits the following: tes3uiWidget","title":"tes3uiSlider"},{"location":"types/tes3uiSlider/#properties","text":"","title":"Properties"},{"location":"types/tes3uiSlider/#current","text":"The current value. The position of the slider handle is determined by dividing current by max . Returns : result (number)","title":"current"},{"location":"types/tes3uiSlider/#element","text":"Access back to the element this widget interface is for. Returns : result ( tes3uiElement )","title":"element"},{"location":"types/tes3uiSlider/#jump","text":"The change in value when clicking into the empty areas next to the slider handle. Returns : result (number)","title":"jump"},{"location":"types/tes3uiSlider/#max","text":"The maximum value. The position of the slider handle is determined by dividing current by max . Returns : result (number)","title":"max"},{"location":"types/tes3uiSlider/#step","text":"The change in value when clicking the left and right arrow buttons. Returns : result (number)","title":"step"},{"location":"types/tes3uiTextInput/","text":"tes3uiTextInput \u2693\ufe0e A structure containing properties specific to text inputs. This type inherits the following: tes3uiWidget Properties \u2693\ufe0e element \u2693\ufe0e Access back to the element this widget interface is for. Returns : result ( tes3uiElement ) eraseOnFirstKey \u2693\ufe0e Default : true . If true , clears the initial value if the first keypress is not an edit action. Returns : result (boolean) lengthLimit \u2693\ufe0e The character limit. Inputting additional characters will not be possible if this limit has been reached. Setting this to nil will remove the limit. Returns : result (number)","title":"tes3uiTextInput"},{"location":"types/tes3uiTextInput/#tes3uitextinput","text":"A structure containing properties specific to text inputs. This type inherits the following: tes3uiWidget","title":"tes3uiTextInput"},{"location":"types/tes3uiTextInput/#properties","text":"","title":"Properties"},{"location":"types/tes3uiTextInput/#element","text":"Access back to the element this widget interface is for. Returns : result ( tes3uiElement )","title":"element"},{"location":"types/tes3uiTextInput/#eraseonfirstkey","text":"Default : true . If true , clears the initial value if the first keypress is not an edit action. Returns : result (boolean)","title":"eraseOnFirstKey"},{"location":"types/tes3uiTextInput/#lengthlimit","text":"The character limit. Inputting additional characters will not be possible if this limit has been reached. Setting this to nil will remove the limit. Returns : result (number)","title":"lengthLimit"},{"location":"types/tes3uiTextSelect/","text":"tes3uiTextSelect \u2693\ufe0e A structure containing properties specific to text selects. This type inherits the following: tes3uiWidget Properties \u2693\ufe0e element \u2693\ufe0e Access back to the element this widget interface is for. Returns : result ( tes3uiElement ) idle \u2693\ufe0e The RGB color of the text when state is set to normal . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor ) idleActive \u2693\ufe0e The RGB color of the text when state is set to active . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor ) idleDisabled \u2693\ufe0e The RGB color of the text when state is set to disabled . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor ) over \u2693\ufe0e The RGB color of the text when the text select is selected and state is set to normal . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor ) overActive \u2693\ufe0e The RGB color of the text when the text select is selected and state is set to active . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor ) overDisabled \u2693\ufe0e The RGB color of the text when the text select is selected and state is set to disabled . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor ) pressed \u2693\ufe0e The RGB color of the text when the text select is pressed and state is set to normal . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor ) pressedActive \u2693\ufe0e The RGB color of the text when the text select is pressed and state is set to active . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor ) pressedDisabled \u2693\ufe0e The RGB color of the text when the text select is pressed and state is set to disabled . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor ) state \u2693\ufe0e The state of the text select. Controls which color set to use for text. Maps to values in tes3.uiState . Returns : result (number)","title":"tes3uiTextSelect"},{"location":"types/tes3uiTextSelect/#tes3uitextselect","text":"A structure containing properties specific to text selects. This type inherits the following: tes3uiWidget","title":"tes3uiTextSelect"},{"location":"types/tes3uiTextSelect/#properties","text":"","title":"Properties"},{"location":"types/tes3uiTextSelect/#element","text":"Access back to the element this widget interface is for. Returns : result ( tes3uiElement )","title":"element"},{"location":"types/tes3uiTextSelect/#idle","text":"The RGB color of the text when state is set to normal . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor )","title":"idle"},{"location":"types/tes3uiTextSelect/#idleactive","text":"The RGB color of the text when state is set to active . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor )","title":"idleActive"},{"location":"types/tes3uiTextSelect/#idledisabled","text":"The RGB color of the text when state is set to disabled . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor )","title":"idleDisabled"},{"location":"types/tes3uiTextSelect/#over","text":"The RGB color of the text when the text select is selected and state is set to normal . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor )","title":"over"},{"location":"types/tes3uiTextSelect/#overactive","text":"The RGB color of the text when the text select is selected and state is set to active . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor )","title":"overActive"},{"location":"types/tes3uiTextSelect/#overdisabled","text":"The RGB color of the text when the text select is selected and state is set to disabled . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor )","title":"overDisabled"},{"location":"types/tes3uiTextSelect/#pressed","text":"The RGB color of the text when the text select is pressed and state is set to normal . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor )","title":"pressed"},{"location":"types/tes3uiTextSelect/#pressedactive","text":"The RGB color of the text when the text select is pressed and state is set to active . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor )","title":"pressedActive"},{"location":"types/tes3uiTextSelect/#presseddisabled","text":"The RGB color of the text when the text select is pressed and state is set to disabled . An array of 3 floats with values ranging from 0.0 to 1.0 . Returns : result ( niColor )","title":"pressedDisabled"},{"location":"types/tes3uiTextSelect/#state","text":"The state of the text select. Controls which color set to use for text. Maps to values in tes3.uiState . Returns : result (number)","title":"state"},{"location":"types/tes3uiWidget/","text":"tes3uiWidget \u2693\ufe0e A UI widget is a special interface to an element that offers functionality in a more friendly way. Some core widget interfaces offered by MWSE include: * tes3uiButton * tes3uiFillBar * tes3uiParagraphInput * tes3uiScrollPane * tes3uiSlider * tes3uiTextInput * tes3uiTextSelect Properties \u2693\ufe0e element \u2693\ufe0e Access back to the element this widget interface is for. Returns : result ( tes3uiElement )","title":"tes3uiWidget"},{"location":"types/tes3uiWidget/#tes3uiwidget","text":"A UI widget is a special interface to an element that offers functionality in a more friendly way. Some core widget interfaces offered by MWSE include: * tes3uiButton * tes3uiFillBar * tes3uiParagraphInput * tes3uiScrollPane * tes3uiSlider * tes3uiTextInput * tes3uiTextSelect","title":"tes3uiWidget"},{"location":"types/tes3uiWidget/#properties","text":"","title":"Properties"},{"location":"types/tes3uiWidget/#element","text":"Access back to the element this widget interface is for. Returns : result ( tes3uiElement )","title":"element"},{"location":"types/tes3vector2/","text":"tes3vector2 \u2693\ufe0e A simple pair of floating-point numbers. Properties \u2693\ufe0e x \u2693\ufe0e The first value in the vector. Returns : result (number) y \u2693\ufe0e The second value in the vector. Returns : result (number) Methods \u2693\ufe0e copy \u2693\ufe0e Creates a copy of the vector. local result = myObject : copy () Returns : result ( tes3vector2 ) length \u2693\ufe0e Calculates the length of the vector. local result = myObject : length () Returns : result (number) normalize \u2693\ufe0e Normalize the vector in-place, or set its components to zero if normalization is not possible. Returns true if the vector was successfully normalized. local result = myObject : normalize () Returns : result (boolean) normalized \u2693\ufe0e Get a normalized copy of the vector. local result = myObject : normalized () Returns : result ( tes3vector2 ) Functions \u2693\ufe0e new \u2693\ufe0e Creates a new vector. If no parameters are provided, an empty set will be constructed. local vector = tes3vector2 . new ( x , y ) Parameters : x (number): Default : 0 . y (number): Default : 0 . Returns : vector ( tes3vector2 ) Math Operations \u2693\ufe0e Addition ( + ) \u2693\ufe0e Left operand type Right operand type Result type Description tes3vector2 tes3vector2 tes3vector2 Standard vector addition. Division ( / ) \u2693\ufe0e Left operand type Right operand type Result type Description tes3vector2 number tes3vector2 Divides the vector by a scalar. Multiplication ( * ) \u2693\ufe0e Left operand type Right operand type Result type Description tes3vector2 tes3vector2 tes3vector2 The per-element multiplication of two vectors. tes3vector2 number tes3vector2 Multiplies the vector by a scalar. Subtraction ( - ) \u2693\ufe0e Left operand type Right operand type Result type Description tes3vector2 tes3vector2 tes3vector2 Standard vector subtraction.","title":"Tes3vector2"},{"location":"types/tes3vector2/#tes3vector2","text":"A simple pair of floating-point numbers.","title":"tes3vector2"},{"location":"types/tes3vector2/#properties","text":"","title":"Properties"},{"location":"types/tes3vector2/#x","text":"The first value in the vector. Returns : result (number)","title":"x"},{"location":"types/tes3vector2/#y","text":"The second value in the vector. Returns : result (number)","title":"y"},{"location":"types/tes3vector2/#methods","text":"","title":"Methods"},{"location":"types/tes3vector2/#copy","text":"Creates a copy of the vector. local result = myObject : copy () Returns : result ( tes3vector2 )","title":"copy"},{"location":"types/tes3vector2/#length","text":"Calculates the length of the vector. local result = myObject : length () Returns : result (number)","title":"length"},{"location":"types/tes3vector2/#normalize","text":"Normalize the vector in-place, or set its components to zero if normalization is not possible. Returns true if the vector was successfully normalized. local result = myObject : normalize () Returns : result (boolean)","title":"normalize"},{"location":"types/tes3vector2/#normalized","text":"Get a normalized copy of the vector. local result = myObject : normalized () Returns : result ( tes3vector2 )","title":"normalized"},{"location":"types/tes3vector2/#functions","text":"","title":"Functions"},{"location":"types/tes3vector2/#new","text":"Creates a new vector. If no parameters are provided, an empty set will be constructed. local vector = tes3vector2 . new ( x , y ) Parameters : x (number): Default : 0 . y (number): Default : 0 . Returns : vector ( tes3vector2 )","title":"new"},{"location":"types/tes3vector2/#math-operations","text":"","title":"Math Operations"},{"location":"types/tes3vector2/#addition","text":"Left operand type Right operand type Result type Description tes3vector2 tes3vector2 tes3vector2 Standard vector addition.","title":"Addition (+)"},{"location":"types/tes3vector2/#division","text":"Left operand type Right operand type Result type Description tes3vector2 number tes3vector2 Divides the vector by a scalar.","title":"Division (/)"},{"location":"types/tes3vector2/#multiplication","text":"Left operand type Right operand type Result type Description tes3vector2 tes3vector2 tes3vector2 The per-element multiplication of two vectors. tes3vector2 number tes3vector2 Multiplies the vector by a scalar.","title":"Multiplication (*)"},{"location":"types/tes3vector2/#subtraction-","text":"Left operand type Right operand type Result type Description tes3vector2 tes3vector2 tes3vector2 Standard vector subtraction.","title":"Subtraction (-)"},{"location":"types/tes3vector3/","text":"tes3vector3 \u2693\ufe0e A simple trio of floating-point numbers. Properties \u2693\ufe0e angle \u2693\ufe0e The angle between the vector and the water plane. Returns : result (number) b \u2693\ufe0e The third value in the vector. An alias for z . Returns : result (number) g \u2693\ufe0e The second value in the vector. An alias for y . Returns : result (number) r \u2693\ufe0e The first value in the vector. An alias for x . Returns : result (number) x \u2693\ufe0e The first value in the vector. Returns : result (number) y \u2693\ufe0e The second value in the vector. Returns : result (number) z \u2693\ufe0e The third value in the vector. Returns : result (number) Methods \u2693\ufe0e copy \u2693\ufe0e Creates a copy of the vector. local result = myObject : copy () Returns : result ( tes3vector3 ) cross \u2693\ufe0e Calculates the cross product with another vector. local result = myObject : cross ( vec ) Parameters : vec ( tes3vector3 ) Returns : result ( tes3vector3 ) distance \u2693\ufe0e Calculates the distance to another vector. local result = myObject : distance ( vec ) Parameters : vec ( tes3vector3 ) Returns : result (number) dot \u2693\ufe0e Calculates the dot product with another vector. local result = myObject : dot ( vec ) Parameters : vec ( tes3vector3 ) Returns : result (number) heightDifference \u2693\ufe0e Calculates the vertical distance to another vector. local result = myObject : heightDifference ( vec ) Parameters : vec ( tes3vector3 ) Returns : result (number) interpolate \u2693\ufe0e Calculates the interpolated position against the target vector using the distance parameter. local result = myObject : interpolate ( targetPoint , distance ) Parameters : targetPoint ( tes3vector3 ) distance (number) Returns : result ( tes3vector3 ) length \u2693\ufe0e Calculates the length of the vector. local result = myObject : length () Returns : result (number) lerp \u2693\ufe0e Calculates the interpolated vector between this vector and another, given a transition. local lerpedVector = myObject : lerp ( toVector , transition ) Parameters : toVector ( tes3vector3 ): The vector to interpolate towards. transition (number): The interpolation value. Must be between 0.0 (closer to this vector) and 1.0 (closer to the other vector). Returns : lerpedVector ( tes3vector3 ): The calculated value. negate \u2693\ufe0e Negates all values in the vector. myObject : negate () normalize \u2693\ufe0e Normalize the vector in-place, or set its components to zero if normalization is not possible. Returns true if the vector was successfully normalized. local result = myObject : normalize () Returns : result (boolean) normalized \u2693\ufe0e Get a normalized copy of the vector. local result = myObject : normalized () Returns : result ( tes3vector3 ) outerProduct \u2693\ufe0e Calculates the outer product with another vector. local result = myObject : outerProduct ( vec ) Parameters : vec ( tes3vector3 ) Returns : result ( tes3matrix33 ) toColor \u2693\ufe0e Converts the vector to niColor object. local result = myObject : toColor () Returns : result ( niColor ) Functions \u2693\ufe0e new \u2693\ufe0e Creates a new vector. If no parameters are provided, an empty set will be constructed. local vector = tes3vector3 . new ( x , y , z ) Parameters : x (number): Default : 0 . y (number): Default : 0 . z (number): Default : 0 . Returns : vector ( tes3vector3 ) Math Operations \u2693\ufe0e Addition ( + ) \u2693\ufe0e Left operand type Right operand type Result type Description tes3vector3 tes3vector3 tes3vector3 Standard vector addition. Division ( / ) \u2693\ufe0e Left operand type Right operand type Result type Description tes3vector3 number tes3vector3 Divides the vector by a scalar. Length ( # ) \u2693\ufe0e Result type Description number Evaluates to the vector's length in game units . Multiplication ( * ) \u2693\ufe0e Left operand type Right operand type Result type Description tes3vector3 tes3vector3 tes3vector3 The per-element multiplication of two vectors. tes3vector3 number tes3vector3 Multiplies the vector by a scalar. Subtraction ( - ) \u2693\ufe0e Left operand type Right operand type Result type Description tes3vector3 tes3vector3 tes3vector3 Standard vector subtraction.","title":"Tes3vector3"},{"location":"types/tes3vector3/#tes3vector3","text":"A simple trio of floating-point numbers.","title":"tes3vector3"},{"location":"types/tes3vector3/#properties","text":"","title":"Properties"},{"location":"types/tes3vector3/#angle","text":"The angle between the vector and the water plane. Returns : result (number)","title":"angle"},{"location":"types/tes3vector3/#b","text":"The third value in the vector. An alias for z . Returns : result (number)","title":"b"},{"location":"types/tes3vector3/#g","text":"The second value in the vector. An alias for y . Returns : result (number)","title":"g"},{"location":"types/tes3vector3/#r","text":"The first value in the vector. An alias for x . Returns : result (number)","title":"r"},{"location":"types/tes3vector3/#x","text":"The first value in the vector. Returns : result (number)","title":"x"},{"location":"types/tes3vector3/#y","text":"The second value in the vector. Returns : result (number)","title":"y"},{"location":"types/tes3vector3/#z","text":"The third value in the vector. Returns : result (number)","title":"z"},{"location":"types/tes3vector3/#methods","text":"","title":"Methods"},{"location":"types/tes3vector3/#copy","text":"Creates a copy of the vector. local result = myObject : copy () Returns : result ( tes3vector3 )","title":"copy"},{"location":"types/tes3vector3/#cross","text":"Calculates the cross product with another vector. local result = myObject : cross ( vec ) Parameters : vec ( tes3vector3 ) Returns : result ( tes3vector3 )","title":"cross"},{"location":"types/tes3vector3/#distance","text":"Calculates the distance to another vector. local result = myObject : distance ( vec ) Parameters : vec ( tes3vector3 ) Returns : result (number)","title":"distance"},{"location":"types/tes3vector3/#dot","text":"Calculates the dot product with another vector. local result = myObject : dot ( vec ) Parameters : vec ( tes3vector3 ) Returns : result (number)","title":"dot"},{"location":"types/tes3vector3/#heightdifference","text":"Calculates the vertical distance to another vector. local result = myObject : heightDifference ( vec ) Parameters : vec ( tes3vector3 ) Returns : result (number)","title":"heightDifference"},{"location":"types/tes3vector3/#interpolate","text":"Calculates the interpolated position against the target vector using the distance parameter. local result = myObject : interpolate ( targetPoint , distance ) Parameters : targetPoint ( tes3vector3 ) distance (number) Returns : result ( tes3vector3 )","title":"interpolate"},{"location":"types/tes3vector3/#length","text":"Calculates the length of the vector. local result = myObject : length () Returns : result (number)","title":"length"},{"location":"types/tes3vector3/#lerp","text":"Calculates the interpolated vector between this vector and another, given a transition. local lerpedVector = myObject : lerp ( toVector , transition ) Parameters : toVector ( tes3vector3 ): The vector to interpolate towards. transition (number): The interpolation value. Must be between 0.0 (closer to this vector) and 1.0 (closer to the other vector). Returns : lerpedVector ( tes3vector3 ): The calculated value.","title":"lerp"},{"location":"types/tes3vector3/#negate","text":"Negates all values in the vector. myObject : negate ()","title":"negate"},{"location":"types/tes3vector3/#normalize","text":"Normalize the vector in-place, or set its components to zero if normalization is not possible. Returns true if the vector was successfully normalized. local result = myObject : normalize () Returns : result (boolean)","title":"normalize"},{"location":"types/tes3vector3/#normalized","text":"Get a normalized copy of the vector. local result = myObject : normalized () Returns : result ( tes3vector3 )","title":"normalized"},{"location":"types/tes3vector3/#outerproduct","text":"Calculates the outer product with another vector. local result = myObject : outerProduct ( vec ) Parameters : vec ( tes3vector3 ) Returns : result ( tes3matrix33 )","title":"outerProduct"},{"location":"types/tes3vector3/#tocolor","text":"Converts the vector to niColor object. local result = myObject : toColor () Returns : result ( niColor )","title":"toColor"},{"location":"types/tes3vector3/#functions","text":"","title":"Functions"},{"location":"types/tes3vector3/#new","text":"Creates a new vector. If no parameters are provided, an empty set will be constructed. local vector = tes3vector3 . new ( x , y , z ) Parameters : x (number): Default : 0 . y (number): Default : 0 . z (number): Default : 0 . Returns : vector ( tes3vector3 )","title":"new"},{"location":"types/tes3vector3/#math-operations","text":"","title":"Math Operations"},{"location":"types/tes3vector3/#addition","text":"Left operand type Right operand type Result type Description tes3vector3 tes3vector3 tes3vector3 Standard vector addition.","title":"Addition (+)"},{"location":"types/tes3vector3/#division","text":"Left operand type Right operand type Result type Description tes3vector3 number tes3vector3 Divides the vector by a scalar.","title":"Division (/)"},{"location":"types/tes3vector3/#length_1","text":"Result type Description number Evaluates to the vector's length in game units .","title":"Length (#)"},{"location":"types/tes3vector3/#multiplication","text":"Left operand type Right operand type Result type Description tes3vector3 tes3vector3 tes3vector3 The per-element multiplication of two vectors. tes3vector3 number tes3vector3 Multiplies the vector by a scalar.","title":"Multiplication (*)"},{"location":"types/tes3vector3/#subtraction-","text":"Left operand type Right operand type Result type Description tes3vector3 tes3vector3 tes3vector3 Standard vector subtraction.","title":"Subtraction (-)"},{"location":"types/tes3vector4/","text":"tes3vector4 \u2693\ufe0e A set of 4 floating-point numbers. Properties \u2693\ufe0e w \u2693\ufe0e The 1st value in the vector. Returns : result (number) x \u2693\ufe0e The 2nd value in the vector. Returns : result (number) y \u2693\ufe0e The 3rd value in the vector. Returns : result (number) z \u2693\ufe0e The 4th value in the vector. Returns : result (number) Methods \u2693\ufe0e copy \u2693\ufe0e Creates a copy of the vector. local result = myObject : copy () Returns : result ( tes3vector4 ) length \u2693\ufe0e Calculates the length of the vector. local result = myObject : length () Returns : result (number) Functions \u2693\ufe0e new \u2693\ufe0e Creates a new vector. If no parameters are provided, an empty set will be constructed. local vector = tes3vector4 . new ( x , y , z , w ) Parameters : x (number): Default : 0 . y (number): Default : 0 . z (number): Default : 0 . w (number): Default : 0 . Returns : vector ( tes3vector4 ) Math Operations \u2693\ufe0e Addition ( + ) \u2693\ufe0e Left operand type Right operand type Result type Description tes3vector4 tes3vector4 tes3vector4 Standard vector addition. Division ( / ) \u2693\ufe0e Left operand type Right operand type Result type Description tes3vector4 number tes3vector4 Divides the vector by a scalar. Length ( # ) \u2693\ufe0e Result type Description number Evaluates to the vector's length in game units . Multiplication ( * ) \u2693\ufe0e Left operand type Right operand type Result type Description tes3vector4 tes3vector4 tes3vector4 The per-element multiplication of two vectors. tes3vector4 number tes3vector4 Multiplies the vector by a scalar. Subtraction ( - ) \u2693\ufe0e Left operand type Right operand type Result type Description tes3vector4 tes3vector4 tes3vector4 Standard vector subtraction.","title":"Tes3vector4"},{"location":"types/tes3vector4/#tes3vector4","text":"A set of 4 floating-point numbers.","title":"tes3vector4"},{"location":"types/tes3vector4/#properties","text":"","title":"Properties"},{"location":"types/tes3vector4/#w","text":"The 1st value in the vector. Returns : result (number)","title":"w"},{"location":"types/tes3vector4/#x","text":"The 2nd value in the vector. Returns : result (number)","title":"x"},{"location":"types/tes3vector4/#y","text":"The 3rd value in the vector. Returns : result (number)","title":"y"},{"location":"types/tes3vector4/#z","text":"The 4th value in the vector. Returns : result (number)","title":"z"},{"location":"types/tes3vector4/#methods","text":"","title":"Methods"},{"location":"types/tes3vector4/#copy","text":"Creates a copy of the vector. local result = myObject : copy () Returns : result ( tes3vector4 )","title":"copy"},{"location":"types/tes3vector4/#length","text":"Calculates the length of the vector. local result = myObject : length () Returns : result (number)","title":"length"},{"location":"types/tes3vector4/#functions","text":"","title":"Functions"},{"location":"types/tes3vector4/#new","text":"Creates a new vector. If no parameters are provided, an empty set will be constructed. local vector = tes3vector4 . new ( x , y , z , w ) Parameters : x (number): Default : 0 . y (number): Default : 0 . z (number): Default : 0 . w (number): Default : 0 . Returns : vector ( tes3vector4 )","title":"new"},{"location":"types/tes3vector4/#math-operations","text":"","title":"Math Operations"},{"location":"types/tes3vector4/#addition","text":"Left operand type Right operand type Result type Description tes3vector4 tes3vector4 tes3vector4 Standard vector addition.","title":"Addition (+)"},{"location":"types/tes3vector4/#division","text":"Left operand type Right operand type Result type Description tes3vector4 number tes3vector4 Divides the vector by a scalar.","title":"Division (/)"},{"location":"types/tes3vector4/#length_1","text":"Result type Description number Evaluates to the vector's length in game units .","title":"Length (#)"},{"location":"types/tes3vector4/#multiplication","text":"Left operand type Right operand type Result type Description tes3vector4 tes3vector4 tes3vector4 The per-element multiplication of two vectors. tes3vector4 number tes3vector4 Multiplies the vector by a scalar.","title":"Multiplication (*)"},{"location":"types/tes3vector4/#subtraction-","text":"Left operand type Right operand type Result type Description tes3vector4 tes3vector4 tes3vector4 Standard vector subtraction.","title":"Subtraction (-)"},{"location":"types/tes3vfx/","text":"tes3vfx \u2693\ufe0e A managed visual effect, attached to position, reference, or arbitrary node. These can be created through script with tes3.createVisualEffect and destroyed with tes3.removeVisualEffect . Properties \u2693\ufe0e age \u2693\ufe0e The VFX's current age, in seconds. Returns : result (number) attachNode \u2693\ufe0e The node the VFX was created to attach to, if it was created for node attachment. Returns : result ( niNode , nil) beginKeyTime \u2693\ufe0e The start of the VFX's keyframe timing. This is fetched from the creating effect's time controller at the time of the VFX's creation. Returns : result (number) effectNode \u2693\ufe0e The cloned node of the associated effectObject . Returns : result ( niNode ) effectObject \u2693\ufe0e The object responsible for this VFX's appearance. Its scene node is cloned into effectNode . Returns : result ( tes3physicalObject ) endKeyTime \u2693\ufe0e The end of the VFX's keyframe timing. This is fetched from the creating effect's time controller at the time of the VFX's creation. Returns : result (number) expired \u2693\ufe0e A flag controlling if the effect is expired. This can be set to cause the effect to remove itself on the next update. Returns : result (boolean) id \u2693\ufe0e Read-only . The unique numberic identifier for this visual effect. Returns : result (number) keyTime \u2693\ufe0e The VFX's current keyframe timing. When this value exceeds the endKeyTime , the effect will either loop back to beginKeyTime or the effect will expire. Returns : result (number) maxAge \u2693\ufe0e The VFX's maximum age, in seconds. Returns : result (number) position \u2693\ufe0e The position the VFX was created at. Returns : result ( tes3vector3 ) sourceInstance \u2693\ufe0e Read-only . The the associated magic source instance. Returns : result ( tes3magicSourceInstance ) sourceInstanceSerial \u2693\ufe0e Read-only . The serial number of the associated source instance. Returns : result (number) target \u2693\ufe0e The reference the target is associated with, if any. Returns : result ( tes3reference ) verticalOffset \u2693\ufe0e The VFX's vertical offset, at the time of creation. Changing this value will not automatically readjust the VFX's visual node. Returns : result (number)","title":"Tes3vfx"},{"location":"types/tes3vfx/#tes3vfx","text":"A managed visual effect, attached to position, reference, or arbitrary node. These can be created through script with tes3.createVisualEffect and destroyed with tes3.removeVisualEffect .","title":"tes3vfx"},{"location":"types/tes3vfx/#properties","text":"","title":"Properties"},{"location":"types/tes3vfx/#age","text":"The VFX's current age, in seconds. Returns : result (number)","title":"age"},{"location":"types/tes3vfx/#attachnode","text":"The node the VFX was created to attach to, if it was created for node attachment. Returns : result ( niNode , nil)","title":"attachNode"},{"location":"types/tes3vfx/#beginkeytime","text":"The start of the VFX's keyframe timing. This is fetched from the creating effect's time controller at the time of the VFX's creation. Returns : result (number)","title":"beginKeyTime"},{"location":"types/tes3vfx/#effectnode","text":"The cloned node of the associated effectObject . Returns : result ( niNode )","title":"effectNode"},{"location":"types/tes3vfx/#effectobject","text":"The object responsible for this VFX's appearance. Its scene node is cloned into effectNode . Returns : result ( tes3physicalObject )","title":"effectObject"},{"location":"types/tes3vfx/#endkeytime","text":"The end of the VFX's keyframe timing. This is fetched from the creating effect's time controller at the time of the VFX's creation. Returns : result (number)","title":"endKeyTime"},{"location":"types/tes3vfx/#expired","text":"A flag controlling if the effect is expired. This can be set to cause the effect to remove itself on the next update. Returns : result (boolean)","title":"expired"},{"location":"types/tes3vfx/#id","text":"Read-only . The unique numberic identifier for this visual effect. Returns : result (number)","title":"id"},{"location":"types/tes3vfx/#keytime","text":"The VFX's current keyframe timing. When this value exceeds the endKeyTime , the effect will either loop back to beginKeyTime or the effect will expire. Returns : result (number)","title":"keyTime"},{"location":"types/tes3vfx/#maxage","text":"The VFX's maximum age, in seconds. Returns : result (number)","title":"maxAge"},{"location":"types/tes3vfx/#position","text":"The position the VFX was created at. Returns : result ( tes3vector3 )","title":"position"},{"location":"types/tes3vfx/#sourceinstance","text":"Read-only . The the associated magic source instance. Returns : result ( tes3magicSourceInstance )","title":"sourceInstance"},{"location":"types/tes3vfx/#sourceinstanceserial","text":"Read-only . The serial number of the associated source instance. Returns : result (number)","title":"sourceInstanceSerial"},{"location":"types/tes3vfx/#target","text":"The reference the target is associated with, if any. Returns : result ( tes3reference )","title":"target"},{"location":"types/tes3vfx/#verticaloffset","text":"The VFX's vertical offset, at the time of creation. Changing this value will not automatically readjust the VFX's visual node. Returns : result (number)","title":"verticalOffset"},{"location":"types/tes3vfxManager/","text":"tes3vfxManager \u2693\ufe0e A manager for VFX lifetime and rendering. VFXs can be created through script with tes3.createVisualEffect and destroyed with tes3.removeVisualEffect . Properties \u2693\ufe0e data \u2693\ufe0e A collection of active managed visual effects. Returns : result ( tes3vfx []) worldVFXRoot \u2693\ufe0e The root node that general VFXs are attached to. Returns : result ( niNode )","title":"tes3vfxManager"},{"location":"types/tes3vfxManager/#tes3vfxmanager","text":"A manager for VFX lifetime and rendering. VFXs can be created through script with tes3.createVisualEffect and destroyed with tes3.removeVisualEffect .","title":"tes3vfxManager"},{"location":"types/tes3vfxManager/#properties","text":"","title":"Properties"},{"location":"types/tes3vfxManager/#data","text":"A collection of active managed visual effects. Returns : result ( tes3vfx [])","title":"data"},{"location":"types/tes3vfxManager/#worldvfxroot","text":"The root node that general VFXs are attached to. Returns : result ( niNode )","title":"worldVFXRoot"},{"location":"types/tes3weapon/","text":"tes3weapon \u2693\ufe0e A weapon game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject Properties \u2693\ufe0e blocked \u2693\ufe0e The blocked state of the object. Returns : result (boolean) boundingBox \u2693\ufe0e The bounding box for the object. Returns : result ( tes3boundingBox ) chopMax \u2693\ufe0e Chop damage inflicted at maximum weapon swing. Returns : result (number) chopMin \u2693\ufe0e Chop damage inflicted at minimum weapon swing. Returns : result (number) deleted \u2693\ufe0e Read-only . The deleted state of the object. Returns : result (boolean) disabled \u2693\ufe0e Read-only . The disabled state of the object. Returns : result (boolean) enchantCapacity \u2693\ufe0e The object's enchantment capacity. Returns : result (number) enchantment \u2693\ufe0e The enchantment used by the object. Returns : result ( tes3enchantment ) flags \u2693\ufe0e Access to the weapon flag bitfield. Known flags can be accessed via other weapon properties. Returns : result (number) hasDurability \u2693\ufe0e Read-only . Whether the weapon type has durability. Thrown weapons and ammunition are used once fired, and therefore do not use durability. Returns : result (boolean) icon \u2693\ufe0e The path to the object's icon. Returns : result (string) id \u2693\ufe0e Read-only . The unique identifier for the object. Returns : result (string) ignoresNormalWeaponResistance \u2693\ufe0e Access to the flag that controls if this weapon bypasses the \"Resist normal weapons\" magic effect. Returns : result (boolean) isAmmo \u2693\ufe0e Read-only . If true, the weapon is a type of ammunition. Returns : result (boolean) isLocationMarker \u2693\ufe0e True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean) isMelee \u2693\ufe0e Read-only . If true, the weapon has a melee weapon type. Returns : result (boolean) isOneHanded \u2693\ufe0e Read-only . If true, the weapon is a one-handed weapon. Returns : result (boolean) isProjectile \u2693\ufe0e Read-only . If true, the weapon is a projectile. Returns : result (boolean) isRanged \u2693\ufe0e Read-only . If true, the weapon is a ranged weapon. Returns : result (boolean) isSilver \u2693\ufe0e If true, the weapon has a silver material flag. Silver weapons deal double damage to the Undead and Werewolf creatures. Returns : result (boolean) isTwoHanded \u2693\ufe0e Read-only . If true, the weapon is a two-handed melee weapon. Returns : result (boolean) maxCondition \u2693\ufe0e The object's maximum condition. Returns : result (number) mesh \u2693\ufe0e The path to the object's mesh. Returns : result (string) modified \u2693\ufe0e The modification state of the object since the last save. Returns : result (boolean) name \u2693\ufe0e The player-facing name for the object. Returns : result (string) nextInCollection \u2693\ufe0e The next object in parent collection's list. Returns : result ( tes3object ) objectFlags \u2693\ufe0e Read-only . The raw flags of the object. Returns : result (number) objectType \u2693\ufe0e Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number) owningCollection \u2693\ufe0e The collection responsible for holding this object. Returns : result ( tes3referenceList ) persistent \u2693\ufe0e The persistent flag of the object. Returns : result (boolean) previousInCollection \u2693\ufe0e The previous object in parent collection's list. Returns : result ( tes3object ) reach \u2693\ufe0e The weapon's relative reach. A value of 1.0 is the standard reach. It is multiplied by the GMST fCombatDistance to find the attack reach in world units. Returns : result (number) scale \u2693\ufe0e The object's scale. The value range is (0, 10). Returns : result (number) sceneCollisionRoot \u2693\ufe0e The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode ) sceneNode \u2693\ufe0e The scene graph node for this object. Returns : result ( niNode ) script \u2693\ufe0e Read-only . The script that runs on the object. Returns : result ( tes3script ) skill \u2693\ufe0e Gets the skill data for the attack skill used by the weapon. Returns : result ( tes3skill ) skillId \u2693\ufe0e Gets the skill ID for the attack skill used by the weapon. Maps to values in tes3.skill namespace. Returns : result (number) Example: Print the name of the skill the attacker's weapon uses local function showMessage ( e ) if e . mobile . readiedWeapon then local id = e . mobile . readiedWeapon . object . skillId local name = tes3 . getSkillName ( id ) tes3 . messageBox ( name ) end end event . register ( tes3 . event . attackStart , showMessage ) slashMax \u2693\ufe0e Slash damage inflicted at maximum weapon swing. Returns : result (number) slashMin \u2693\ufe0e Slash damage inflicted at minimum weapon swing. Returns : result (number) sourceless \u2693\ufe0e The soruceless flag of the object. Returns : result (boolean) sourceMod \u2693\ufe0e Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string) speed \u2693\ufe0e The relative attack speed of the weapon. Controls attack timing and animation speed. Standard speed is 1.0 . Returns : result (number) stolenList \u2693\ufe0e A list of actors that the object has been stolen from. Returns : result ( tes3baseObject []) supportsLuaData \u2693\ufe0e If true, references of this object can store temporary or persistent lua data. Returns : result (boolean) thrustMax \u2693\ufe0e Thrust damage inflicted at maximum weapon swing. Returns : result (number) thrustMin \u2693\ufe0e Thrust damage inflicted at minimum weapon swing. Returns : result (number) type \u2693\ufe0e Read-only . A number representing the weapon type. Matches values from the tes3.weaponType table. Returns : result (number) typeName \u2693\ufe0e Read-only . The player-facing name for the weapon type. Returns : result (string) value \u2693\ufe0e The value of the object. Returns : result (number) weight \u2693\ufe0e The weight of the object. Returns : result (number) Methods \u2693\ufe0e __tojson \u2693\ufe0e Serializes the object to json. local string = myObject : __tojson () Returns : string (string) createCopy \u2693\ufe0e Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3weapon ) getMaterialFlag \u2693\ufe0e Access to the material flag bitfield. Known material flags can be accessed via other weapon properties. local result = myObject : getMaterialFlag ( flagBit ) Parameters : flagBit (integer): 0 corresponds to the ignoresNormalWeaponResistance field, 1 corresponds to the isSilver . Returns : result (boolean) setMaterialFlag \u2693\ufe0e Access to the material flag bitfield. Known material flags can be accessed via other weapon properties. myObject : setMaterialFlag ( flagBit , value ) Parameters : flagBit (integer): 0 corresponds to the ignoresNormalWeaponResistance field, 1 corresponds to the isSilver . value (boolean)","title":"Tes3weapon"},{"location":"types/tes3weapon/#tes3weapon","text":"A weapon game object. This type inherits the following: tes3item , tes3physicalObject , tes3object , tes3baseObject","title":"tes3weapon"},{"location":"types/tes3weapon/#properties","text":"","title":"Properties"},{"location":"types/tes3weapon/#blocked","text":"The blocked state of the object. Returns : result (boolean)","title":"blocked"},{"location":"types/tes3weapon/#boundingbox","text":"The bounding box for the object. Returns : result ( tes3boundingBox )","title":"boundingBox"},{"location":"types/tes3weapon/#chopmax","text":"Chop damage inflicted at maximum weapon swing. Returns : result (number)","title":"chopMax"},{"location":"types/tes3weapon/#chopmin","text":"Chop damage inflicted at minimum weapon swing. Returns : result (number)","title":"chopMin"},{"location":"types/tes3weapon/#deleted","text":"Read-only . The deleted state of the object. Returns : result (boolean)","title":"deleted"},{"location":"types/tes3weapon/#disabled","text":"Read-only . The disabled state of the object. Returns : result (boolean)","title":"disabled"},{"location":"types/tes3weapon/#enchantcapacity","text":"The object's enchantment capacity. Returns : result (number)","title":"enchantCapacity"},{"location":"types/tes3weapon/#enchantment","text":"The enchantment used by the object. Returns : result ( tes3enchantment )","title":"enchantment"},{"location":"types/tes3weapon/#flags","text":"Access to the weapon flag bitfield. Known flags can be accessed via other weapon properties. Returns : result (number)","title":"flags"},{"location":"types/tes3weapon/#hasdurability","text":"Read-only . Whether the weapon type has durability. Thrown weapons and ammunition are used once fired, and therefore do not use durability. Returns : result (boolean)","title":"hasDurability"},{"location":"types/tes3weapon/#icon","text":"The path to the object's icon. Returns : result (string)","title":"icon"},{"location":"types/tes3weapon/#id","text":"Read-only . The unique identifier for the object. Returns : result (string)","title":"id"},{"location":"types/tes3weapon/#ignoresnormalweaponresistance","text":"Access to the flag that controls if this weapon bypasses the \"Resist normal weapons\" magic effect. Returns : result (boolean)","title":"ignoresNormalWeaponResistance"},{"location":"types/tes3weapon/#isammo","text":"Read-only . If true, the weapon is a type of ammunition. Returns : result (boolean)","title":"isAmmo"},{"location":"types/tes3weapon/#islocationmarker","text":"True if this object is an editor marker for a gameplay location. These include travel, intervention, prison, door, and interior north markers. Markers are invisible in-game. Returns : result (boolean)","title":"isLocationMarker"},{"location":"types/tes3weapon/#ismelee","text":"Read-only . If true, the weapon has a melee weapon type. Returns : result (boolean)","title":"isMelee"},{"location":"types/tes3weapon/#isonehanded","text":"Read-only . If true, the weapon is a one-handed weapon. Returns : result (boolean)","title":"isOneHanded"},{"location":"types/tes3weapon/#isprojectile","text":"Read-only . If true, the weapon is a projectile. Returns : result (boolean)","title":"isProjectile"},{"location":"types/tes3weapon/#isranged","text":"Read-only . If true, the weapon is a ranged weapon. Returns : result (boolean)","title":"isRanged"},{"location":"types/tes3weapon/#issilver","text":"If true, the weapon has a silver material flag. Silver weapons deal double damage to the Undead and Werewolf creatures. Returns : result (boolean)","title":"isSilver"},{"location":"types/tes3weapon/#istwohanded","text":"Read-only . If true, the weapon is a two-handed melee weapon. Returns : result (boolean)","title":"isTwoHanded"},{"location":"types/tes3weapon/#maxcondition","text":"The object's maximum condition. Returns : result (number)","title":"maxCondition"},{"location":"types/tes3weapon/#mesh","text":"The path to the object's mesh. Returns : result (string)","title":"mesh"},{"location":"types/tes3weapon/#modified","text":"The modification state of the object since the last save. Returns : result (boolean)","title":"modified"},{"location":"types/tes3weapon/#name","text":"The player-facing name for the object. Returns : result (string)","title":"name"},{"location":"types/tes3weapon/#nextincollection","text":"The next object in parent collection's list. Returns : result ( tes3object )","title":"nextInCollection"},{"location":"types/tes3weapon/#objectflags","text":"Read-only . The raw flags of the object. Returns : result (number)","title":"objectFlags"},{"location":"types/tes3weapon/#objecttype","text":"Read-only . The type of object. Maps to values in tes3.objectType . Returns : result (number)","title":"objectType"},{"location":"types/tes3weapon/#owningcollection","text":"The collection responsible for holding this object. Returns : result ( tes3referenceList )","title":"owningCollection"},{"location":"types/tes3weapon/#persistent","text":"The persistent flag of the object. Returns : result (boolean)","title":"persistent"},{"location":"types/tes3weapon/#previousincollection","text":"The previous object in parent collection's list. Returns : result ( tes3object )","title":"previousInCollection"},{"location":"types/tes3weapon/#reach","text":"The weapon's relative reach. A value of 1.0 is the standard reach. It is multiplied by the GMST fCombatDistance to find the attack reach in world units. Returns : result (number)","title":"reach"},{"location":"types/tes3weapon/#scale","text":"The object's scale. The value range is (0, 10). Returns : result (number)","title":"scale"},{"location":"types/tes3weapon/#scenecollisionroot","text":"The scene graph node for this object's physics collision, if its mesh has a root collision node. Returns : result ( niNode )","title":"sceneCollisionRoot"},{"location":"types/tes3weapon/#scenenode","text":"The scene graph node for this object. Returns : result ( niNode )","title":"sceneNode"},{"location":"types/tes3weapon/#script","text":"Read-only . The script that runs on the object. Returns : result ( tes3script )","title":"script"},{"location":"types/tes3weapon/#skill","text":"Gets the skill data for the attack skill used by the weapon. Returns : result ( tes3skill )","title":"skill"},{"location":"types/tes3weapon/#skillid","text":"Gets the skill ID for the attack skill used by the weapon. Maps to values in tes3.skill namespace. Returns : result (number) Example: Print the name of the skill the attacker's weapon uses local function showMessage ( e ) if e . mobile . readiedWeapon then local id = e . mobile . readiedWeapon . object . skillId local name = tes3 . getSkillName ( id ) tes3 . messageBox ( name ) end end event . register ( tes3 . event . attackStart , showMessage )","title":"skillId"},{"location":"types/tes3weapon/#slashmax","text":"Slash damage inflicted at maximum weapon swing. Returns : result (number)","title":"slashMax"},{"location":"types/tes3weapon/#slashmin","text":"Slash damage inflicted at minimum weapon swing. Returns : result (number)","title":"slashMin"},{"location":"types/tes3weapon/#sourceless","text":"The soruceless flag of the object. Returns : result (boolean)","title":"sourceless"},{"location":"types/tes3weapon/#sourcemod","text":"Read-only . The filename (including the extension) of the mod that owns this object. It has nil value if the object was anything other than loaded from an ESP or ESM file. Returns : result (string)","title":"sourceMod"},{"location":"types/tes3weapon/#speed","text":"The relative attack speed of the weapon. Controls attack timing and animation speed. Standard speed is 1.0 . Returns : result (number)","title":"speed"},{"location":"types/tes3weapon/#stolenlist","text":"A list of actors that the object has been stolen from. Returns : result ( tes3baseObject [])","title":"stolenList"},{"location":"types/tes3weapon/#supportsluadata","text":"If true, references of this object can store temporary or persistent lua data. Returns : result (boolean)","title":"supportsLuaData"},{"location":"types/tes3weapon/#thrustmax","text":"Thrust damage inflicted at maximum weapon swing. Returns : result (number)","title":"thrustMax"},{"location":"types/tes3weapon/#thrustmin","text":"Thrust damage inflicted at minimum weapon swing. Returns : result (number)","title":"thrustMin"},{"location":"types/tes3weapon/#type","text":"Read-only . A number representing the weapon type. Matches values from the tes3.weaponType table. Returns : result (number)","title":"type"},{"location":"types/tes3weapon/#typename","text":"Read-only . The player-facing name for the weapon type. Returns : result (string)","title":"typeName"},{"location":"types/tes3weapon/#value","text":"The value of the object. Returns : result (number)","title":"value"},{"location":"types/tes3weapon/#weight","text":"The weight of the object. Returns : result (number)","title":"weight"},{"location":"types/tes3weapon/#methods","text":"","title":"Methods"},{"location":"types/tes3weapon/#__tojson","text":"Serializes the object to json. local string = myObject : __tojson () Returns : string (string)","title":"__tojson"},{"location":"types/tes3weapon/#createcopy","text":"Creates a copy of this object. local newObject = myObject : createCopy ({ id = ..., addToObjectList = ..., sourceless = ... }) Parameters : params (table) id (string): Optional . The new object's ID. If one is not provided, a randomly generated one will be used. addToObjectList (boolean): Default : true . If true, the object will be added to the data handler. If this is false, the new object may not have a randomly generated ID. Do not use this without knowing the implications. sourceless (boolean): Default : false . If true, the object will be made sourceless, and will not be serialized to the save game. If the object is copied outside of a save game, the object will always be sourceless. Returns : newObject ( tes3weapon )","title":"createCopy"},{"location":"types/tes3weapon/#getmaterialflag","text":"Access to the material flag bitfield. Known material flags can be accessed via other weapon properties. local result = myObject : getMaterialFlag ( flagBit ) Parameters : flagBit (integer): 0 corresponds to the ignoresNormalWeaponResistance field, 1 corresponds to the isSilver . Returns : result (boolean)","title":"getMaterialFlag"},{"location":"types/tes3weapon/#setmaterialflag","text":"Access to the material flag bitfield. Known material flags can be accessed via other weapon properties. myObject : setMaterialFlag ( flagBit , value ) Parameters : flagBit (integer): 0 corresponds to the ignoresNormalWeaponResistance field, 1 corresponds to the isSilver . value (boolean)","title":"setMaterialFlag"},{"location":"types/tes3wearablePart/","text":"tes3wearablePart \u2693\ufe0e A container class that maps a body part id to its male and female body parts. Properties \u2693\ufe0e female \u2693\ufe0e The body part object used for female actors. Returns : result ( tes3bodyPart ) male \u2693\ufe0e The body part object used for male actors. Returns : result ( tes3bodyPart ) type \u2693\ufe0e The type of the wearable part. Maps to tes3.activeBodyPart namespace. Returns : result (number)","title":"tes3wearablePart"},{"location":"types/tes3wearablePart/#tes3wearablepart","text":"A container class that maps a body part id to its male and female body parts.","title":"tes3wearablePart"},{"location":"types/tes3wearablePart/#properties","text":"","title":"Properties"},{"location":"types/tes3wearablePart/#female","text":"The body part object used for female actors. Returns : result ( tes3bodyPart )","title":"female"},{"location":"types/tes3wearablePart/#male","text":"The body part object used for male actors. Returns : result ( tes3bodyPart )","title":"male"},{"location":"types/tes3wearablePart/#type","text":"The type of the wearable part. Maps to tes3.activeBodyPart namespace. Returns : result (number)","title":"type"},{"location":"types/tes3weather/","text":"tes3weather \u2693\ufe0e A structure that contains base weather information shared by inheriting weather structures. Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) name \u2693\ufe0e Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"Tes3weather"},{"location":"types/tes3weather/#tes3weather","text":"A structure that contains base weather information shared by inheriting weather structures.","title":"tes3weather"},{"location":"types/tes3weather/#properties","text":"","title":"Properties"},{"location":"types/tes3weather/#ambientdaycolor","text":"Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weather/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weather/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weather/#ambientnightcolor","text":"Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weather/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weather/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weather/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weather/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weather/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weather/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weather/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weather/#fogdaycolor","text":"Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weather/#fognightcolor","text":"Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weather/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weather/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weather/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weather/#index","text":"Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number)","title":"index"},{"location":"types/tes3weather/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weather/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weather/#name","text":"Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string)","title":"name"},{"location":"types/tes3weather/#skydaycolor","text":"Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weather/#skynightcolor","text":"Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weather/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weather/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weather/#sundaycolor","text":"Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weather/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weather/#sunnightcolor","text":"Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weather/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weather/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weather/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weather/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weather/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherAsh/","text":"tes3weatherAsh \u2693\ufe0e A structure that contains weather information for the ashstorm weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) name \u2693\ufe0e Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) threshold \u2693\ufe0e The weather's threshold value. Returns : result (number) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherAsh"},{"location":"types/tes3weatherAsh/#tes3weatherash","text":"A structure that contains weather information for the ashstorm weather type. This type inherits the following: tes3weather","title":"tes3weatherAsh"},{"location":"types/tes3weatherAsh/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherAsh/#ambientdaycolor","text":"Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherAsh/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherAsh/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherAsh/#ambientnightcolor","text":"Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherAsh/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherAsh/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherAsh/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherAsh/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherAsh/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherAsh/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherAsh/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherAsh/#fogdaycolor","text":"Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherAsh/#fognightcolor","text":"Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherAsh/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherAsh/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherAsh/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherAsh/#index","text":"Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number)","title":"index"},{"location":"types/tes3weatherAsh/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherAsh/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherAsh/#name","text":"Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string)","title":"name"},{"location":"types/tes3weatherAsh/#skydaycolor","text":"Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherAsh/#skynightcolor","text":"Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherAsh/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherAsh/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherAsh/#sundaycolor","text":"Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherAsh/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherAsh/#sunnightcolor","text":"Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherAsh/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherAsh/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherAsh/#threshold","text":"The weather's threshold value. Returns : result (number)","title":"threshold"},{"location":"types/tes3weatherAsh/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherAsh/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherAsh/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherBlight/","text":"tes3weatherBlight \u2693\ufe0e A structure that contains weather information for the blightstorm weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) blightDiseaseChance \u2693\ufe0e The weather's blight chance value. Returns : result (number) blightDiseases \u2693\ufe0e Read-only . The weather's blight diseases, provided as a table of tes3spell objects. Returns : result ( tes3spell []) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) name \u2693\ufe0e Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) threshold \u2693\ufe0e The weather's threshold value. Returns : result (number) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherBlight"},{"location":"types/tes3weatherBlight/#tes3weatherblight","text":"A structure that contains weather information for the blightstorm weather type. This type inherits the following: tes3weather","title":"tes3weatherBlight"},{"location":"types/tes3weatherBlight/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherBlight/#ambientdaycolor","text":"Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherBlight/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherBlight/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherBlight/#ambientnightcolor","text":"Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherBlight/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherBlight/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherBlight/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherBlight/#blightdiseasechance","text":"The weather's blight chance value. Returns : result (number)","title":"blightDiseaseChance"},{"location":"types/tes3weatherBlight/#blightdiseases","text":"Read-only . The weather's blight diseases, provided as a table of tes3spell objects. Returns : result ( tes3spell [])","title":"blightDiseases"},{"location":"types/tes3weatherBlight/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherBlight/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherBlight/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherBlight/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherBlight/#fogdaycolor","text":"Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherBlight/#fognightcolor","text":"Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherBlight/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherBlight/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherBlight/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherBlight/#index","text":"Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number)","title":"index"},{"location":"types/tes3weatherBlight/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherBlight/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherBlight/#name","text":"Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string)","title":"name"},{"location":"types/tes3weatherBlight/#skydaycolor","text":"Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherBlight/#skynightcolor","text":"Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherBlight/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherBlight/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherBlight/#sundaycolor","text":"Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherBlight/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherBlight/#sunnightcolor","text":"Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherBlight/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherBlight/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherBlight/#threshold","text":"The weather's threshold value. Returns : result (number)","title":"threshold"},{"location":"types/tes3weatherBlight/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherBlight/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherBlight/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherBlizzard/","text":"tes3weatherBlizzard \u2693\ufe0e A structure that contains weather information for the blizzard weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) name \u2693\ufe0e Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) threshold \u2693\ufe0e The weather's threshold value. Returns : result (number) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherBlizzard"},{"location":"types/tes3weatherBlizzard/#tes3weatherblizzard","text":"A structure that contains weather information for the blizzard weather type. This type inherits the following: tes3weather","title":"tes3weatherBlizzard"},{"location":"types/tes3weatherBlizzard/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherBlizzard/#ambientdaycolor","text":"Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherBlizzard/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherBlizzard/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherBlizzard/#ambientnightcolor","text":"Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherBlizzard/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherBlizzard/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherBlizzard/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherBlizzard/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherBlizzard/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherBlizzard/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherBlizzard/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherBlizzard/#fogdaycolor","text":"Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherBlizzard/#fognightcolor","text":"Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherBlizzard/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherBlizzard/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherBlizzard/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherBlizzard/#index","text":"Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number)","title":"index"},{"location":"types/tes3weatherBlizzard/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherBlizzard/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherBlizzard/#name","text":"Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string)","title":"name"},{"location":"types/tes3weatherBlizzard/#skydaycolor","text":"Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherBlizzard/#skynightcolor","text":"Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherBlizzard/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherBlizzard/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherBlizzard/#sundaycolor","text":"Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherBlizzard/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherBlizzard/#sunnightcolor","text":"Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherBlizzard/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherBlizzard/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherBlizzard/#threshold","text":"The weather's threshold value. Returns : result (number)","title":"threshold"},{"location":"types/tes3weatherBlizzard/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherBlizzard/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherBlizzard/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherClear/","text":"tes3weatherClear \u2693\ufe0e A structure that contains weather information for the clear skies weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) name \u2693\ufe0e Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherClear"},{"location":"types/tes3weatherClear/#tes3weatherclear","text":"A structure that contains weather information for the clear skies weather type. This type inherits the following: tes3weather","title":"tes3weatherClear"},{"location":"types/tes3weatherClear/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherClear/#ambientdaycolor","text":"Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherClear/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherClear/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherClear/#ambientnightcolor","text":"Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherClear/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherClear/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherClear/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherClear/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherClear/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherClear/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherClear/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherClear/#fogdaycolor","text":"Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherClear/#fognightcolor","text":"Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherClear/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherClear/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherClear/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherClear/#index","text":"Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number)","title":"index"},{"location":"types/tes3weatherClear/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherClear/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherClear/#name","text":"Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string)","title":"name"},{"location":"types/tes3weatherClear/#skydaycolor","text":"Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherClear/#skynightcolor","text":"Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherClear/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherClear/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherClear/#sundaycolor","text":"Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherClear/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherClear/#sunnightcolor","text":"Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherClear/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherClear/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherClear/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherClear/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherClear/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherCloudy/","text":"tes3weatherCloudy \u2693\ufe0e A structure that contains weather information for the cloudy weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) name \u2693\ufe0e Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherCloudy"},{"location":"types/tes3weatherCloudy/#tes3weathercloudy","text":"A structure that contains weather information for the cloudy weather type. This type inherits the following: tes3weather","title":"tes3weatherCloudy"},{"location":"types/tes3weatherCloudy/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherCloudy/#ambientdaycolor","text":"Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherCloudy/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherCloudy/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherCloudy/#ambientnightcolor","text":"Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherCloudy/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherCloudy/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherCloudy/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherCloudy/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherCloudy/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherCloudy/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherCloudy/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherCloudy/#fogdaycolor","text":"Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherCloudy/#fognightcolor","text":"Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherCloudy/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherCloudy/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherCloudy/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherCloudy/#index","text":"Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number)","title":"index"},{"location":"types/tes3weatherCloudy/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherCloudy/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherCloudy/#name","text":"Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string)","title":"name"},{"location":"types/tes3weatherCloudy/#skydaycolor","text":"Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherCloudy/#skynightcolor","text":"Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherCloudy/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherCloudy/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherCloudy/#sundaycolor","text":"Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherCloudy/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherCloudy/#sunnightcolor","text":"Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherCloudy/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherCloudy/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherCloudy/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherCloudy/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherCloudy/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherController/","text":"tes3weatherController \u2693\ufe0e A data structure that handles the weather. Properties \u2693\ufe0e ambientPostSunriseTime \u2693\ufe0e Each weather's ambiental color has one color for day and night states each. The day color will be used when the game hour is between ambientPostSunriseTime and ambientPreSunsetTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) ambientPostSunsetTime \u2693\ufe0e Each weather's ambiental color has one color for day and night states each. The night color will be used when the game hour is between ambientPostSunsetTime and ambientPreSunriseTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) ambientPreSunriseTime \u2693\ufe0e Each weather's ambiental color has one color for day and night states each. The night color will be used when the game hour is between ambientPostSunsetTime and ambientPreSunriseTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) ambientPreSunsetTime \u2693\ufe0e Each weather's ambiental color has one color for day and night states each. The day color will be used when the game hour is between ambientPostSunriseTime and ambientPreSunsetTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) currentFogColor \u2693\ufe0e The current fog color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) currentSkyColor \u2693\ufe0e The current sky color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) currentWeather \u2693\ufe0e Read-only . The current weather. Returns : result ( tes3weather ) daysRemaining \u2693\ufe0e The days remaining for the current weather. Returns : result (number) fogDepthChangeSpeed \u2693\ufe0e Controls the speed of how fast the fog comes in. This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) fogPostSunriseTime \u2693\ufe0e Each weather's fog color has one color for day and night states each. The day color will be used when the game hour is between fogPostSunriseTime and fogPreSunsetTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) fogPostSunsetTime \u2693\ufe0e Each weather's fog color has one color for day and night states each. The night color will be used when the game hour is between fogPostSunsetTime and fogPreSunriseTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) fogPreSunriseTime \u2693\ufe0e Each weather's fog color has one color for day and night states each. The night color will be used when the game hour is between fogPostSunsetTime and fogPreSunriseTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) fogPreSunsetTime \u2693\ufe0e Each weather's fog color has one color for day and night states each. The day color will be used when the game hour is between fogPostSunriseTime and fogPreSunsetTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) hoursBetweenWeatherChanges \u2693\ufe0e The hours between weather changes. Stored as a float value. Returns : result (number) hoursRemaining \u2693\ufe0e The hours remaining. Returns : result (number) lastActiveRegion \u2693\ufe0e Read-only . Provides read-only access to last active region object. Returns : result ( tes3region ) masser \u2693\ufe0e Read-only . Provides read-only access to the Masser moon object. Returns : result ( tes3moon ) nextWeather \u2693\ufe0e Read-only . The next weather. Returns : result ( tes3weather ) particlesActive \u2693\ufe0e Read-only . Provides a list of active weather particles. Returns : result ( tes3weatherControllerParticle []) particlesInactive \u2693\ufe0e Read-only . Provides a list of inactive weather particles. Returns : result ( tes3weatherControllerParticle []) sceneRainRoot \u2693\ufe0e Read-only . Provides read-only access to the scene rain root NiNode. Returns : result ( niNode ) sceneSkyLight \u2693\ufe0e Read-only . Provides read-only access to the scene sky light directional light. Returns : result ( niDirectionalLight ) sceneSkyRoot \u2693\ufe0e Read-only . Provides read-only access to the scene sky root NiNode. Returns : result ( niNode ) sceneSnowRoot \u2693\ufe0e Read-only . Provides read-only access to the scene snow root NiNode. Returns : result ( niNode ) sceneStormRoot \u2693\ufe0e Read-only . Provides read-only access to the scene storm root NiNode. Returns : result ( niNode ) sceneSunBase \u2693\ufe0e Read-only . Provides read-only access to the scenesun base NiNode. Returns : result ( niNode ) sceneSunGlare \u2693\ufe0e Read-only . Provides read-only access to the scene sun glare NiNode. Returns : result ( niNode ) sceneSunVis \u2693\ufe0e Read-only . Provides read-only access to the scene sun vis NiNode. Returns : result ( niNode ) secunda \u2693\ufe0e Read-only . Provides read-only access to the Secunda moon object. Returns : result ( tes3moon ) skyPostSunriseTime \u2693\ufe0e The sky has one color for day and night states each. The day color will be used when the game hour is between skyPostSunriseTime and skyPreSunsetTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) skyPostSunsetTime \u2693\ufe0e The sky has one color for day and night states each. The night color will be used when the game hour is between skyPostSunsetTime and skyPreSunriseTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) skyPreSunriseTime \u2693\ufe0e The sky has one color for day and night states each. The night color will be used when the game hour is between skyPostSunsetTime and skyPreSunriseTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) skyPreSunsetTime \u2693\ufe0e The sky has one color for day and night states each. The day color will be used when the game hour is between skyPostSunriseTime and skyPreSunsetTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) starsFadingDuration \u2693\ufe0e The stars will fade in starsPostSunsetStart hours after the sunset. They fade out starsPreSunriseFinish hours before sunrise. This value represents the duration of the fading. This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) starsPostSunsetStart \u2693\ufe0e The stars will start to fade in (appear) starsPostSunsetStart hours before sunrise. This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) starsPreSunriseFinish \u2693\ufe0e The stars will start to fade out (disappear) starsPreSunriseFinish hours before sunrise. This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) sunglareFaderAngleMax \u2693\ufe0e The sunglare fader maximum angle. Returns : result (number) sunglareFaderColor \u2693\ufe0e The sunglare fader color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunglareFaderMax \u2693\ufe0e The sunglare fader maximum. Returns : result (number) sunPostSunriseTime \u2693\ufe0e The Sun has one color for day and night states each. The day color will be used when the game hour is between sunPostSunriseTime and sunPreSunsetTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) sunPostSunsetTime \u2693\ufe0e The Sun has one color for day and night states each. The night color will be used when the game hour is between sunPostSunsetTime and sunPreSunriseTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) sunPreSunriseTime \u2693\ufe0e The Sun has one color for day and night states each. The night color will be used when the game hour is between sunPostSunsetTime and sunPreSunriseTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) sunPreSunsetTime \u2693\ufe0e The Sun has one color for day and night states each. The day color will be used when the game hour is between sunPostSunriseTime and sunPreSunsetTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number) sunriseDuration \u2693\ufe0e The sunrise duration. Returns : result (number) sunriseHour \u2693\ufe0e The sunrise hour. Returns : result (number) sunsetDuration \u2693\ufe0e The sunset duration. Returns : result (number) sunsetHour \u2693\ufe0e The sunset hour. Returns : result (number) timescaleClouds \u2693\ufe0e The timescale for clouds. Returns : result (string) transitionScalar \u2693\ufe0e The scalar transition. Returns : result (number) underwaterColor \u2693\ufe0e The underwater color, represented as a vector. The values can range from 0 to 1. Returns : result ( tes3vector3 ) underwaterColorWeight \u2693\ufe0e The underwater color weight. Returns : result (number) underwaterDayFog \u2693\ufe0e The underwater day fog value. Returns : result (number) underwaterIndoorFog \u2693\ufe0e The underwater indoor fog value. Returns : result (number) underwaterNightFog \u2693\ufe0e The underwater night fog value. Returns : result (number) underwaterSunriseFog \u2693\ufe0e The underwater sunrise fog value. Returns : result (number) underwaterSunsetFog \u2693\ufe0e The underwater sunset fog value. Returns : result (number) weathers \u2693\ufe0e Read-only . Array-style table for the different weather types. Each object in the table is a tes3weather . The indices in the table map to the values in the tes3.weather table. Returns : result ( tes3weather []) windVelocityCurrWeather \u2693\ufe0e The wind velocity for the current weather. Returns : result ( tes3vector3 ) windVelocityNextWeather \u2693\ufe0e The wind velocity for the next weather. Returns : result ( tes3vector3 ) Methods \u2693\ufe0e calcSunDamageScalar \u2693\ufe0e Calculates the sun damage based on the current weather. local result = myObject : calcSunDamageScalar () Parameters : Returns : result (number) switchImmediate \u2693\ufe0e Immediately switches the weather to the provided weather parameter. myObject : switchImmediate ( weatherId ) Parameters : weatherId (number): Maps to values in the tes3.weather table. switchTransition \u2693\ufe0e Transitions the weather to the provided weather parameter based on the weather controller settings. myObject : switchTransition ( weatherId ) Parameters : weatherId (number): Maps to values in the tes3.weather table. updateVisuals \u2693\ufe0e Updates the weather controller visuals. This should be called after any weather transitions. myObject : updateVisuals () Parameters :","title":"tes3weatherController"},{"location":"types/tes3weatherController/#tes3weathercontroller","text":"A data structure that handles the weather.","title":"tes3weatherController"},{"location":"types/tes3weatherController/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherController/#ambientpostsunrisetime","text":"Each weather's ambiental color has one color for day and night states each. The day color will be used when the game hour is between ambientPostSunriseTime and ambientPreSunsetTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"ambientPostSunriseTime"},{"location":"types/tes3weatherController/#ambientpostsunsettime","text":"Each weather's ambiental color has one color for day and night states each. The night color will be used when the game hour is between ambientPostSunsetTime and ambientPreSunriseTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"ambientPostSunsetTime"},{"location":"types/tes3weatherController/#ambientpresunrisetime","text":"Each weather's ambiental color has one color for day and night states each. The night color will be used when the game hour is between ambientPostSunsetTime and ambientPreSunriseTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"ambientPreSunriseTime"},{"location":"types/tes3weatherController/#ambientpresunsettime","text":"Each weather's ambiental color has one color for day and night states each. The day color will be used when the game hour is between ambientPostSunriseTime and ambientPreSunsetTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"ambientPreSunsetTime"},{"location":"types/tes3weatherController/#currentfogcolor","text":"The current fog color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"currentFogColor"},{"location":"types/tes3weatherController/#currentskycolor","text":"The current sky color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"currentSkyColor"},{"location":"types/tes3weatherController/#currentweather","text":"Read-only . The current weather. Returns : result ( tes3weather )","title":"currentWeather"},{"location":"types/tes3weatherController/#daysremaining","text":"The days remaining for the current weather. Returns : result (number)","title":"daysRemaining"},{"location":"types/tes3weatherController/#fogdepthchangespeed","text":"Controls the speed of how fast the fog comes in. This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"fogDepthChangeSpeed"},{"location":"types/tes3weatherController/#fogpostsunrisetime","text":"Each weather's fog color has one color for day and night states each. The day color will be used when the game hour is between fogPostSunriseTime and fogPreSunsetTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"fogPostSunriseTime"},{"location":"types/tes3weatherController/#fogpostsunsettime","text":"Each weather's fog color has one color for day and night states each. The night color will be used when the game hour is between fogPostSunsetTime and fogPreSunriseTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"fogPostSunsetTime"},{"location":"types/tes3weatherController/#fogpresunrisetime","text":"Each weather's fog color has one color for day and night states each. The night color will be used when the game hour is between fogPostSunsetTime and fogPreSunriseTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"fogPreSunriseTime"},{"location":"types/tes3weatherController/#fogpresunsettime","text":"Each weather's fog color has one color for day and night states each. The day color will be used when the game hour is between fogPostSunriseTime and fogPreSunsetTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"fogPreSunsetTime"},{"location":"types/tes3weatherController/#hoursbetweenweatherchanges","text":"The hours between weather changes. Stored as a float value. Returns : result (number)","title":"hoursBetweenWeatherChanges"},{"location":"types/tes3weatherController/#hoursremaining","text":"The hours remaining. Returns : result (number)","title":"hoursRemaining"},{"location":"types/tes3weatherController/#lastactiveregion","text":"Read-only . Provides read-only access to last active region object. Returns : result ( tes3region )","title":"lastActiveRegion"},{"location":"types/tes3weatherController/#masser","text":"Read-only . Provides read-only access to the Masser moon object. Returns : result ( tes3moon )","title":"masser"},{"location":"types/tes3weatherController/#nextweather","text":"Read-only . The next weather. Returns : result ( tes3weather )","title":"nextWeather"},{"location":"types/tes3weatherController/#particlesactive","text":"Read-only . Provides a list of active weather particles. Returns : result ( tes3weatherControllerParticle [])","title":"particlesActive"},{"location":"types/tes3weatherController/#particlesinactive","text":"Read-only . Provides a list of inactive weather particles. Returns : result ( tes3weatherControllerParticle [])","title":"particlesInactive"},{"location":"types/tes3weatherController/#scenerainroot","text":"Read-only . Provides read-only access to the scene rain root NiNode. Returns : result ( niNode )","title":"sceneRainRoot"},{"location":"types/tes3weatherController/#sceneskylight","text":"Read-only . Provides read-only access to the scene sky light directional light. Returns : result ( niDirectionalLight )","title":"sceneSkyLight"},{"location":"types/tes3weatherController/#sceneskyroot","text":"Read-only . Provides read-only access to the scene sky root NiNode. Returns : result ( niNode )","title":"sceneSkyRoot"},{"location":"types/tes3weatherController/#scenesnowroot","text":"Read-only . Provides read-only access to the scene snow root NiNode. Returns : result ( niNode )","title":"sceneSnowRoot"},{"location":"types/tes3weatherController/#scenestormroot","text":"Read-only . Provides read-only access to the scene storm root NiNode. Returns : result ( niNode )","title":"sceneStormRoot"},{"location":"types/tes3weatherController/#scenesunbase","text":"Read-only . Provides read-only access to the scenesun base NiNode. Returns : result ( niNode )","title":"sceneSunBase"},{"location":"types/tes3weatherController/#scenesunglare","text":"Read-only . Provides read-only access to the scene sun glare NiNode. Returns : result ( niNode )","title":"sceneSunGlare"},{"location":"types/tes3weatherController/#scenesunvis","text":"Read-only . Provides read-only access to the scene sun vis NiNode. Returns : result ( niNode )","title":"sceneSunVis"},{"location":"types/tes3weatherController/#secunda","text":"Read-only . Provides read-only access to the Secunda moon object. Returns : result ( tes3moon )","title":"secunda"},{"location":"types/tes3weatherController/#skypostsunrisetime","text":"The sky has one color for day and night states each. The day color will be used when the game hour is between skyPostSunriseTime and skyPreSunsetTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"skyPostSunriseTime"},{"location":"types/tes3weatherController/#skypostsunsettime","text":"The sky has one color for day and night states each. The night color will be used when the game hour is between skyPostSunsetTime and skyPreSunriseTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"skyPostSunsetTime"},{"location":"types/tes3weatherController/#skypresunrisetime","text":"The sky has one color for day and night states each. The night color will be used when the game hour is between skyPostSunsetTime and skyPreSunriseTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"skyPreSunriseTime"},{"location":"types/tes3weatherController/#skypresunsettime","text":"The sky has one color for day and night states each. The day color will be used when the game hour is between skyPostSunriseTime and skyPreSunsetTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"skyPreSunsetTime"},{"location":"types/tes3weatherController/#starsfadingduration","text":"The stars will fade in starsPostSunsetStart hours after the sunset. They fade out starsPreSunriseFinish hours before sunrise. This value represents the duration of the fading. This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"starsFadingDuration"},{"location":"types/tes3weatherController/#starspostsunsetstart","text":"The stars will start to fade in (appear) starsPostSunsetStart hours before sunrise. This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"starsPostSunsetStart"},{"location":"types/tes3weatherController/#starspresunrisefinish","text":"The stars will start to fade out (disappear) starsPreSunriseFinish hours before sunrise. This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"starsPreSunriseFinish"},{"location":"types/tes3weatherController/#sunglarefaderanglemax","text":"The sunglare fader maximum angle. Returns : result (number)","title":"sunglareFaderAngleMax"},{"location":"types/tes3weatherController/#sunglarefadercolor","text":"The sunglare fader color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunglareFaderColor"},{"location":"types/tes3weatherController/#sunglarefadermax","text":"The sunglare fader maximum. Returns : result (number)","title":"sunglareFaderMax"},{"location":"types/tes3weatherController/#sunpostsunrisetime","text":"The Sun has one color for day and night states each. The day color will be used when the game hour is between sunPostSunriseTime and sunPreSunsetTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"sunPostSunriseTime"},{"location":"types/tes3weatherController/#sunpostsunsettime","text":"The Sun has one color for day and night states each. The night color will be used when the game hour is between sunPostSunsetTime and sunPreSunriseTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"sunPostSunsetTime"},{"location":"types/tes3weatherController/#sunpresunrisetime","text":"The Sun has one color for day and night states each. The night color will be used when the game hour is between sunPostSunsetTime and sunPreSunriseTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"sunPreSunriseTime"},{"location":"types/tes3weatherController/#sunpresunsettime","text":"The Sun has one color for day and night states each. The day color will be used when the game hour is between sunPostSunriseTime and sunPreSunsetTime . This corresponds to the setting of the same name in Morrowind.ini file. Returns : result (number)","title":"sunPreSunsetTime"},{"location":"types/tes3weatherController/#sunriseduration","text":"The sunrise duration. Returns : result (number)","title":"sunriseDuration"},{"location":"types/tes3weatherController/#sunrisehour","text":"The sunrise hour. Returns : result (number)","title":"sunriseHour"},{"location":"types/tes3weatherController/#sunsetduration","text":"The sunset duration. Returns : result (number)","title":"sunsetDuration"},{"location":"types/tes3weatherController/#sunsethour","text":"The sunset hour. Returns : result (number)","title":"sunsetHour"},{"location":"types/tes3weatherController/#timescaleclouds","text":"The timescale for clouds. Returns : result (string)","title":"timescaleClouds"},{"location":"types/tes3weatherController/#transitionscalar","text":"The scalar transition. Returns : result (number)","title":"transitionScalar"},{"location":"types/tes3weatherController/#underwatercolor","text":"The underwater color, represented as a vector. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"underwaterColor"},{"location":"types/tes3weatherController/#underwatercolorweight","text":"The underwater color weight. Returns : result (number)","title":"underwaterColorWeight"},{"location":"types/tes3weatherController/#underwaterdayfog","text":"The underwater day fog value. Returns : result (number)","title":"underwaterDayFog"},{"location":"types/tes3weatherController/#underwaterindoorfog","text":"The underwater indoor fog value. Returns : result (number)","title":"underwaterIndoorFog"},{"location":"types/tes3weatherController/#underwaternightfog","text":"The underwater night fog value. Returns : result (number)","title":"underwaterNightFog"},{"location":"types/tes3weatherController/#underwatersunrisefog","text":"The underwater sunrise fog value. Returns : result (number)","title":"underwaterSunriseFog"},{"location":"types/tes3weatherController/#underwatersunsetfog","text":"The underwater sunset fog value. Returns : result (number)","title":"underwaterSunsetFog"},{"location":"types/tes3weatherController/#weathers","text":"Read-only . Array-style table for the different weather types. Each object in the table is a tes3weather . The indices in the table map to the values in the tes3.weather table. Returns : result ( tes3weather [])","title":"weathers"},{"location":"types/tes3weatherController/#windvelocitycurrweather","text":"The wind velocity for the current weather. Returns : result ( tes3vector3 )","title":"windVelocityCurrWeather"},{"location":"types/tes3weatherController/#windvelocitynextweather","text":"The wind velocity for the next weather. Returns : result ( tes3vector3 )","title":"windVelocityNextWeather"},{"location":"types/tes3weatherController/#methods","text":"","title":"Methods"},{"location":"types/tes3weatherController/#calcsundamagescalar","text":"Calculates the sun damage based on the current weather. local result = myObject : calcSunDamageScalar () Parameters : Returns : result (number)","title":"calcSunDamageScalar"},{"location":"types/tes3weatherController/#switchimmediate","text":"Immediately switches the weather to the provided weather parameter. myObject : switchImmediate ( weatherId ) Parameters : weatherId (number): Maps to values in the tes3.weather table.","title":"switchImmediate"},{"location":"types/tes3weatherController/#switchtransition","text":"Transitions the weather to the provided weather parameter based on the weather controller settings. myObject : switchTransition ( weatherId ) Parameters : weatherId (number): Maps to values in the tes3.weather table.","title":"switchTransition"},{"location":"types/tes3weatherController/#updatevisuals","text":"Updates the weather controller visuals. This should be called after any weather transitions. myObject : updateVisuals () Parameters :","title":"updateVisuals"},{"location":"types/tes3weatherControllerParticle/","text":"tes3weatherControllerParticle \u2693\ufe0e A data structure that represents a weather particle, such as a rain drop or snow flake. Properties \u2693\ufe0e diameter \u2693\ufe0e The diameter of the particle. Returns : result (number) object \u2693\ufe0e The visual used for the particle. Returns : result ( niAVObject ) rainRoot \u2693\ufe0e Read-only . A shortcut to the root rain node. Returns : result ( niNode ) remainingLifetime \u2693\ufe0e The remaining time before the particle becomes inactive. Returns : result (number) velocity \u2693\ufe0e The velocity of the particle. Returns : result ( tes3vector3 ) weatherController \u2693\ufe0e Read-only . A shortcut to the weather controller. Returns : result ( tes3weatherController )","title":"tes3weatherControllerParticle"},{"location":"types/tes3weatherControllerParticle/#tes3weathercontrollerparticle","text":"A data structure that represents a weather particle, such as a rain drop or snow flake.","title":"tes3weatherControllerParticle"},{"location":"types/tes3weatherControllerParticle/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherControllerParticle/#diameter","text":"The diameter of the particle. Returns : result (number)","title":"diameter"},{"location":"types/tes3weatherControllerParticle/#object","text":"The visual used for the particle. Returns : result ( niAVObject )","title":"object"},{"location":"types/tes3weatherControllerParticle/#rainroot","text":"Read-only . A shortcut to the root rain node. Returns : result ( niNode )","title":"rainRoot"},{"location":"types/tes3weatherControllerParticle/#remaininglifetime","text":"The remaining time before the particle becomes inactive. Returns : result (number)","title":"remainingLifetime"},{"location":"types/tes3weatherControllerParticle/#velocity","text":"The velocity of the particle. Returns : result ( tes3vector3 )","title":"velocity"},{"location":"types/tes3weatherControllerParticle/#weathercontroller","text":"Read-only . A shortcut to the weather controller. Returns : result ( tes3weatherController )","title":"weatherController"},{"location":"types/tes3weatherFoggy/","text":"tes3weatherFoggy \u2693\ufe0e A structure that contains weather information for the foggy weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) name \u2693\ufe0e Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherFoggy"},{"location":"types/tes3weatherFoggy/#tes3weatherfoggy","text":"A structure that contains weather information for the foggy weather type. This type inherits the following: tes3weather","title":"tes3weatherFoggy"},{"location":"types/tes3weatherFoggy/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherFoggy/#ambientdaycolor","text":"Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherFoggy/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherFoggy/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherFoggy/#ambientnightcolor","text":"Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherFoggy/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherFoggy/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherFoggy/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherFoggy/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherFoggy/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherFoggy/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherFoggy/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherFoggy/#fogdaycolor","text":"Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherFoggy/#fognightcolor","text":"Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherFoggy/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherFoggy/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherFoggy/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherFoggy/#index","text":"Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number)","title":"index"},{"location":"types/tes3weatherFoggy/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherFoggy/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherFoggy/#name","text":"Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string)","title":"name"},{"location":"types/tes3weatherFoggy/#skydaycolor","text":"Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherFoggy/#skynightcolor","text":"Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherFoggy/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherFoggy/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherFoggy/#sundaycolor","text":"Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherFoggy/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherFoggy/#sunnightcolor","text":"Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherFoggy/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherFoggy/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherFoggy/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherFoggy/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherFoggy/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherOvercast/","text":"tes3weatherOvercast \u2693\ufe0e A structure that contains weather information for the overcast weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) name \u2693\ufe0e Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherOvercast"},{"location":"types/tes3weatherOvercast/#tes3weatherovercast","text":"A structure that contains weather information for the overcast weather type. This type inherits the following: tes3weather","title":"tes3weatherOvercast"},{"location":"types/tes3weatherOvercast/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherOvercast/#ambientdaycolor","text":"Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherOvercast/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherOvercast/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherOvercast/#ambientnightcolor","text":"Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherOvercast/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherOvercast/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherOvercast/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherOvercast/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherOvercast/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherOvercast/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherOvercast/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherOvercast/#fogdaycolor","text":"Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherOvercast/#fognightcolor","text":"Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherOvercast/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherOvercast/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherOvercast/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherOvercast/#index","text":"Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number)","title":"index"},{"location":"types/tes3weatherOvercast/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherOvercast/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherOvercast/#name","text":"Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string)","title":"name"},{"location":"types/tes3weatherOvercast/#skydaycolor","text":"Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherOvercast/#skynightcolor","text":"Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherOvercast/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherOvercast/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherOvercast/#sundaycolor","text":"Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherOvercast/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherOvercast/#sunnightcolor","text":"Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherOvercast/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherOvercast/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherOvercast/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherOvercast/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherOvercast/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherRain/","text":"tes3weatherRain \u2693\ufe0e A structure that contains weather information for the rain weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) maxParticles \u2693\ufe0e The weather's maximum particles. Returns : result (number) name \u2693\ufe0e Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string) particleEntranceSpeed \u2693\ufe0e The weather's particle entrance speed. Returns : result (number) particleHeightMax \u2693\ufe0e The weather's particle maximum height. Returns : result (number) particleHeightMin \u2693\ufe0e The weather's particle minimum height. Returns : result (number) particleRadius \u2693\ufe0e The weather's particle radius. Returns : result (number) rainActive \u2693\ufe0e Read-only . The weather's active rain flag. Returns : result (boolean) rainLoopSound \u2693\ufe0e Read-only . The weather's rain loop sound object. Returns : result ( tes3sound ) rainLoopSoundId \u2693\ufe0e The weather's rain loop sound ID. Returns : result (string) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) threshold \u2693\ufe0e The weather's threshold value. Returns : result (number) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherRain"},{"location":"types/tes3weatherRain/#tes3weatherrain","text":"A structure that contains weather information for the rain weather type. This type inherits the following: tes3weather","title":"tes3weatherRain"},{"location":"types/tes3weatherRain/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherRain/#ambientdaycolor","text":"Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherRain/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherRain/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherRain/#ambientnightcolor","text":"Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherRain/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherRain/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherRain/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherRain/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherRain/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherRain/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherRain/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherRain/#fogdaycolor","text":"Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherRain/#fognightcolor","text":"Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherRain/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherRain/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherRain/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherRain/#index","text":"Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number)","title":"index"},{"location":"types/tes3weatherRain/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherRain/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherRain/#maxparticles","text":"The weather's maximum particles. Returns : result (number)","title":"maxParticles"},{"location":"types/tes3weatherRain/#name","text":"Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string)","title":"name"},{"location":"types/tes3weatherRain/#particleentrancespeed","text":"The weather's particle entrance speed. Returns : result (number)","title":"particleEntranceSpeed"},{"location":"types/tes3weatherRain/#particleheightmax","text":"The weather's particle maximum height. Returns : result (number)","title":"particleHeightMax"},{"location":"types/tes3weatherRain/#particleheightmin","text":"The weather's particle minimum height. Returns : result (number)","title":"particleHeightMin"},{"location":"types/tes3weatherRain/#particleradius","text":"The weather's particle radius. Returns : result (number)","title":"particleRadius"},{"location":"types/tes3weatherRain/#rainactive","text":"Read-only . The weather's active rain flag. Returns : result (boolean)","title":"rainActive"},{"location":"types/tes3weatherRain/#rainloopsound","text":"Read-only . The weather's rain loop sound object. Returns : result ( tes3sound )","title":"rainLoopSound"},{"location":"types/tes3weatherRain/#rainloopsoundid","text":"The weather's rain loop sound ID. Returns : result (string)","title":"rainLoopSoundId"},{"location":"types/tes3weatherRain/#skydaycolor","text":"Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherRain/#skynightcolor","text":"Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherRain/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherRain/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherRain/#sundaycolor","text":"Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherRain/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherRain/#sunnightcolor","text":"Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherRain/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherRain/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherRain/#threshold","text":"The weather's threshold value. Returns : result (number)","title":"threshold"},{"location":"types/tes3weatherRain/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherRain/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherRain/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherSnow/","text":"tes3weatherSnow \u2693\ufe0e A structure that contains weather information for the snow weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) maxParticles \u2693\ufe0e The weather's maximum particles. Returns : result (number) name \u2693\ufe0e Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string) particleEntranceSpeed \u2693\ufe0e The weather's particle entrance speed. Returns : result (number) particleHeightMax \u2693\ufe0e The weather's particle maximum height. Returns : result (number) particleHeightMin \u2693\ufe0e The weather's particle minimum height. Returns : result (number) particleRadius \u2693\ufe0e The weather's particle radius. Returns : result (number) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) threshold \u2693\ufe0e The weather's threshold value. Returns : result (number) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherSnow"},{"location":"types/tes3weatherSnow/#tes3weathersnow","text":"A structure that contains weather information for the snow weather type. This type inherits the following: tes3weather","title":"tes3weatherSnow"},{"location":"types/tes3weatherSnow/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherSnow/#ambientdaycolor","text":"Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherSnow/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherSnow/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherSnow/#ambientnightcolor","text":"Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherSnow/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherSnow/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherSnow/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherSnow/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherSnow/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherSnow/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherSnow/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherSnow/#fogdaycolor","text":"Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherSnow/#fognightcolor","text":"Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherSnow/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherSnow/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherSnow/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherSnow/#index","text":"Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number)","title":"index"},{"location":"types/tes3weatherSnow/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherSnow/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherSnow/#maxparticles","text":"The weather's maximum particles. Returns : result (number)","title":"maxParticles"},{"location":"types/tes3weatherSnow/#name","text":"Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string)","title":"name"},{"location":"types/tes3weatherSnow/#particleentrancespeed","text":"The weather's particle entrance speed. Returns : result (number)","title":"particleEntranceSpeed"},{"location":"types/tes3weatherSnow/#particleheightmax","text":"The weather's particle maximum height. Returns : result (number)","title":"particleHeightMax"},{"location":"types/tes3weatherSnow/#particleheightmin","text":"The weather's particle minimum height. Returns : result (number)","title":"particleHeightMin"},{"location":"types/tes3weatherSnow/#particleradius","text":"The weather's particle radius. Returns : result (number)","title":"particleRadius"},{"location":"types/tes3weatherSnow/#skydaycolor","text":"Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherSnow/#skynightcolor","text":"Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherSnow/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherSnow/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherSnow/#sundaycolor","text":"Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherSnow/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherSnow/#sunnightcolor","text":"Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherSnow/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherSnow/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherSnow/#threshold","text":"The weather's threshold value. Returns : result (number)","title":"threshold"},{"location":"types/tes3weatherSnow/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherSnow/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherSnow/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3weatherThunder/","text":"tes3weatherThunder \u2693\ufe0e A structure that contains weather information for the thunder weather type. This type inherits the following: tes3weather Properties \u2693\ufe0e ambientDayColor \u2693\ufe0e Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientLoopSound \u2693\ufe0e Read-only . The weather's ambient looping sound. Returns : result ( tes3sound ) ambientLoopSoundId \u2693\ufe0e The weather's ambient looping sound ID. Returns : result (string) ambientNightColor \u2693\ufe0e Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientPlaying \u2693\ufe0e Read-only . The weather's ambient playing flag. Returns : result (boolean) ambientSunriseColor \u2693\ufe0e Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) ambientSunsetColor \u2693\ufe0e Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) cloudsMaxPercent \u2693\ufe0e The weather's cloud maximum percentage. Returns : result (number) cloudsSpeed \u2693\ufe0e The weather's cloud speed. Returns : result (number) cloudTexture \u2693\ufe0e The weather's cloud texture path. Returns : result (string) controller \u2693\ufe0e Read-only . The weather's weather controller. Returns : result ( tes3weatherController ) flashDecrement \u2693\ufe0e The weather's flash decrement value. Returns : result (number) fogDayColor \u2693\ufe0e Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogNightColor \u2693\ufe0e Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunriseColor \u2693\ufe0e Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) fogSunsetColor \u2693\ufe0e Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) glareView \u2693\ufe0e The weather's glare view. Returns : result (number) index \u2693\ufe0e Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number) landFogDayDepth \u2693\ufe0e The weather's land fog day depth value. Returns : result (number) landFogNightDepth \u2693\ufe0e The weather's land fog night depth value. Returns : result (number) maxParticles \u2693\ufe0e The weather's maximum particles. Returns : result (number) name \u2693\ufe0e Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string) particleEntranceSpeed \u2693\ufe0e The weather's particle entrance speed. Returns : result (number) particleHeightMax \u2693\ufe0e The weather's particle maximum height. Returns : result (number) particleHeightMin \u2693\ufe0e The weather's particle minimum height. Returns : result (number) particleRadius \u2693\ufe0e The weather's particle radius. Returns : result (number) rainActive \u2693\ufe0e Read-only . The weather's active rain flag. Returns : result (boolean) rainLoopSound \u2693\ufe0e Read-only . The weather's rain loop sound object. Returns : result ( tes3sound ) rainLoopSoundId \u2693\ufe0e The weather's rain loop sound ID. Returns : result (string) skyDayColor \u2693\ufe0e Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skyNightColor \u2693\ufe0e Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunriseColor \u2693\ufe0e Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) skySunsetColor \u2693\ufe0e Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunDayColor \u2693\ufe0e Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sundiscSunsetColor \u2693\ufe0e Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunNightColor \u2693\ufe0e Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunriseColor \u2693\ufe0e Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) sunSunsetColor \u2693\ufe0e Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 ) threshold \u2693\ufe0e The weather's threshold value. Returns : result (number) thunderFrequency \u2693\ufe0e The weather's thunder frequency. Returns : result (number) thunderSound1 \u2693\ufe0e Read-only . The weather's thunder sound 1 object. Returns : result ( tes3sound ) thunderSound1Id \u2693\ufe0e The weather's thunder sound 1 ID. Returns : result (string) thunderSound2 \u2693\ufe0e Read-only . The weather's thunder sound 2 object. Returns : result ( tes3sound ) thunderSound2Id \u2693\ufe0e The weather's thunder sound 2 ID. Returns : result (string) thunderSound3 \u2693\ufe0e Read-only . The weather's thunder sound 3 object. Returns : result ( tes3sound ) thunderSound3Id \u2693\ufe0e The weather's thunder sound 3 ID. Returns : result (string) thunderSound4 \u2693\ufe0e Read-only . The weather's thunder sound 4 object. Returns : result ( tes3sound ) thunderSound4Id \u2693\ufe0e The weather's thunder sound 4 ID. Returns : result (string) thunderSoundCount \u2693\ufe0e The weather's thunder sound count. Returns : result (number) thunderThreshold \u2693\ufe0e The weather's thunder threshold. Returns : result (number) transitionDelta \u2693\ufe0e The weather's transition delta. Returns : result (number) underwaterSoundState \u2693\ufe0e Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean) windSpeed \u2693\ufe0e The weather's wind speed. Returns : result (number)","title":"tes3weatherThunder"},{"location":"types/tes3weatherThunder/#tes3weatherthunder","text":"A structure that contains weather information for the thunder weather type. This type inherits the following: tes3weather","title":"tes3weatherThunder"},{"location":"types/tes3weatherThunder/#properties","text":"","title":"Properties"},{"location":"types/tes3weatherThunder/#ambientdaycolor","text":"Read-only . The weather's ambient day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientDayColor"},{"location":"types/tes3weatherThunder/#ambientloopsound","text":"Read-only . The weather's ambient looping sound. Returns : result ( tes3sound )","title":"ambientLoopSound"},{"location":"types/tes3weatherThunder/#ambientloopsoundid","text":"The weather's ambient looping sound ID. Returns : result (string)","title":"ambientLoopSoundId"},{"location":"types/tes3weatherThunder/#ambientnightcolor","text":"Read-only . The weather's ambient night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientNightColor"},{"location":"types/tes3weatherThunder/#ambientplaying","text":"Read-only . The weather's ambient playing flag. Returns : result (boolean)","title":"ambientPlaying"},{"location":"types/tes3weatherThunder/#ambientsunrisecolor","text":"Read-only . The weather's ambient sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunriseColor"},{"location":"types/tes3weatherThunder/#ambientsunsetcolor","text":"Read-only . The weather's ambient sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"ambientSunsetColor"},{"location":"types/tes3weatherThunder/#cloudsmaxpercent","text":"The weather's cloud maximum percentage. Returns : result (number)","title":"cloudsMaxPercent"},{"location":"types/tes3weatherThunder/#cloudsspeed","text":"The weather's cloud speed. Returns : result (number)","title":"cloudsSpeed"},{"location":"types/tes3weatherThunder/#cloudtexture","text":"The weather's cloud texture path. Returns : result (string)","title":"cloudTexture"},{"location":"types/tes3weatherThunder/#controller","text":"Read-only . The weather's weather controller. Returns : result ( tes3weatherController )","title":"controller"},{"location":"types/tes3weatherThunder/#flashdecrement","text":"The weather's flash decrement value. Returns : result (number)","title":"flashDecrement"},{"location":"types/tes3weatherThunder/#fogdaycolor","text":"Read-only . The weather's fog day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogDayColor"},{"location":"types/tes3weatherThunder/#fognightcolor","text":"Read-only . The weather's fog night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogNightColor"},{"location":"types/tes3weatherThunder/#fogsunrisecolor","text":"Read-only . The weather's fog sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunriseColor"},{"location":"types/tes3weatherThunder/#fogsunsetcolor","text":"Read-only . The weather's fog sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"fogSunsetColor"},{"location":"types/tes3weatherThunder/#glareview","text":"The weather's glare view. Returns : result (number)","title":"glareView"},{"location":"types/tes3weatherThunder/#index","text":"Read-only . The weather's index ID. Maps to values in the tes3.weather table. Returns : result (number)","title":"index"},{"location":"types/tes3weatherThunder/#landfogdaydepth","text":"The weather's land fog day depth value. Returns : result (number)","title":"landFogDayDepth"},{"location":"types/tes3weatherThunder/#landfognightdepth","text":"The weather's land fog night depth value. Returns : result (number)","title":"landFogNightDepth"},{"location":"types/tes3weatherThunder/#maxparticles","text":"The weather's maximum particles. Returns : result (number)","title":"maxParticles"},{"location":"types/tes3weatherThunder/#name","text":"Read-only . The weather's user-friendly name, hardcoded in English to match the INI settings name. These values can be \"Ashstorm\" , \"Blight\" , \"Blizzard\" , \"Clear\" , \"Cloudy\" , \"Foggy\" , \"Overcast\" , \"Rain\" , \"Snow\" , or \"Thunderstorm\" as appropriate. Returns : result (string)","title":"name"},{"location":"types/tes3weatherThunder/#particleentrancespeed","text":"The weather's particle entrance speed. Returns : result (number)","title":"particleEntranceSpeed"},{"location":"types/tes3weatherThunder/#particleheightmax","text":"The weather's particle maximum height. Returns : result (number)","title":"particleHeightMax"},{"location":"types/tes3weatherThunder/#particleheightmin","text":"The weather's particle minimum height. Returns : result (number)","title":"particleHeightMin"},{"location":"types/tes3weatherThunder/#particleradius","text":"The weather's particle radius. Returns : result (number)","title":"particleRadius"},{"location":"types/tes3weatherThunder/#rainactive","text":"Read-only . The weather's active rain flag. Returns : result (boolean)","title":"rainActive"},{"location":"types/tes3weatherThunder/#rainloopsound","text":"Read-only . The weather's rain loop sound object. Returns : result ( tes3sound )","title":"rainLoopSound"},{"location":"types/tes3weatherThunder/#rainloopsoundid","text":"The weather's rain loop sound ID. Returns : result (string)","title":"rainLoopSoundId"},{"location":"types/tes3weatherThunder/#skydaycolor","text":"Read-only . The weather's sky day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyDayColor"},{"location":"types/tes3weatherThunder/#skynightcolor","text":"Read-only . The weather's sky night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skyNightColor"},{"location":"types/tes3weatherThunder/#skysunrisecolor","text":"Read-only . The weather's sky sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunriseColor"},{"location":"types/tes3weatherThunder/#skysunsetcolor","text":"Read-only . The weather's sky sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"skySunsetColor"},{"location":"types/tes3weatherThunder/#sundaycolor","text":"Read-only . The weather's sun day color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunDayColor"},{"location":"types/tes3weatherThunder/#sundiscsunsetcolor","text":"Read-only . The weather's sundisc sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sundiscSunsetColor"},{"location":"types/tes3weatherThunder/#sunnightcolor","text":"Read-only . The weather's sun night color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunNightColor"},{"location":"types/tes3weatherThunder/#sunsunrisecolor","text":"Read-only . The weather's sun sunrise color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunriseColor"},{"location":"types/tes3weatherThunder/#sunsunsetcolor","text":"Read-only . The weather's sun sunset color. The values can range from 0 to 1. Returns : result ( tes3vector3 )","title":"sunSunsetColor"},{"location":"types/tes3weatherThunder/#threshold","text":"The weather's threshold value. Returns : result (number)","title":"threshold"},{"location":"types/tes3weatherThunder/#thunderfrequency","text":"The weather's thunder frequency. Returns : result (number)","title":"thunderFrequency"},{"location":"types/tes3weatherThunder/#thundersound1","text":"Read-only . The weather's thunder sound 1 object. Returns : result ( tes3sound )","title":"thunderSound1"},{"location":"types/tes3weatherThunder/#thundersound1id","text":"The weather's thunder sound 1 ID. Returns : result (string)","title":"thunderSound1Id"},{"location":"types/tes3weatherThunder/#thundersound2","text":"Read-only . The weather's thunder sound 2 object. Returns : result ( tes3sound )","title":"thunderSound2"},{"location":"types/tes3weatherThunder/#thundersound2id","text":"The weather's thunder sound 2 ID. Returns : result (string)","title":"thunderSound2Id"},{"location":"types/tes3weatherThunder/#thundersound3","text":"Read-only . The weather's thunder sound 3 object. Returns : result ( tes3sound )","title":"thunderSound3"},{"location":"types/tes3weatherThunder/#thundersound3id","text":"The weather's thunder sound 3 ID. Returns : result (string)","title":"thunderSound3Id"},{"location":"types/tes3weatherThunder/#thundersound4","text":"Read-only . The weather's thunder sound 4 object. Returns : result ( tes3sound )","title":"thunderSound4"},{"location":"types/tes3weatherThunder/#thundersound4id","text":"The weather's thunder sound 4 ID. Returns : result (string)","title":"thunderSound4Id"},{"location":"types/tes3weatherThunder/#thundersoundcount","text":"The weather's thunder sound count. Returns : result (number)","title":"thunderSoundCount"},{"location":"types/tes3weatherThunder/#thunderthreshold","text":"The weather's thunder threshold. Returns : result (number)","title":"thunderThreshold"},{"location":"types/tes3weatherThunder/#transitiondelta","text":"The weather's transition delta. Returns : result (number)","title":"transitionDelta"},{"location":"types/tes3weatherThunder/#underwatersoundstate","text":"Read-only . The weather's underwater sound state flag. This value will be true , while the player is underwater. Returns : result (boolean)","title":"underwaterSoundState"},{"location":"types/tes3weatherThunder/#windspeed","text":"The weather's wind speed. Returns : result (number)","title":"windSpeed"},{"location":"types/tes3worldController/","text":"tes3worldController \u2693\ufe0e A core game object used for storing world simulation data. Properties \u2693\ufe0e aiDistanceScale \u2693\ufe0e A value in the range [0, 1]. The (relative) maximum distance setting for AI simulation. Corresponds to the AI distance option in the Options menu. Returns : result (number) allMobileActors \u2693\ufe0e Read-only . The list of all active mobile actors. Mobile actors expire after 72 hours if they have not been in a loaded cell. Returns : result ( tes3mobileActor []) armCamera \u2693\ufe0e Read-only . The access to the first person arms camera. Returns : result ( tes3worldControllerRenderCamera ) audioController \u2693\ufe0e Read-only . The audio controller. Returns : result ( tes3audioController ) blindnessFader \u2693\ufe0e Read-only . Screen overlay fader for the blind effect. Returns : result ( tes3fader ) characterRenderTarget \u2693\ufe0e Read-only . Returns : result (tes3worldControllerRenderTarget) charGenState \u2693\ufe0e Read-only . The charGenState global variable. Indicates progress through character generation. Has a value of -1 when chargen is complete. Returns : result ( tes3globalVariable ) countMusicTracksBattle \u2693\ufe0e Read-only . The number of available battle music tracks. Returns : result (number) countMusicTracksExplore \u2693\ufe0e Read-only . The number of available explore music tracks. Returns : result (number) criticalDamageSound \u2693\ufe0e The sound played when an actor takes damage from a critical hit. It plays instead of the normal health damage sound. Returns : result ( tes3sound ) cursorOff \u2693\ufe0e If the target crosshair is disabled. Corresponds to the \"Crosshair\" option in the Options menu. Returns : result (boolean) day \u2693\ufe0e Read-only . The Day global variable, indicating the current day. Day numbering starts at 1 for the first day of a month. Returns : result ( tes3globalVariable ) daysPassed \u2693\ufe0e Read-only . The DaysPassed global variable, indicating the days passed since the game started for this character. Returns : result ( tes3globalVariable ) deadFloatScale \u2693\ufe0e Returns : result (number) defaultLandSound \u2693\ufe0e This it the default sound played when the player lands, after a jump or a fall. Returns : result ( tes3sound ) defaultLandWaterSound \u2693\ufe0e This it the default sound played when the player lands in the water, after a jump or a fall. Returns : result ( tes3sound ) deltaTime \u2693\ufe0e The time interval (in seconds) between this frame and the last frame. Useful for calculations that involve movement or damage over a period of time. Returns : result (number) difficulty \u2693\ufe0e A number in the range [-1, 1]. Corresponds to the \"Difficulty\" option in the Options menu. Returns : result (number) drowningDamageSound \u2693\ufe0e The sound played when an actor takes health damage while drowning. It plays instead of the normal health damage sound. Returns : result ( tes3sound ) drownSound \u2693\ufe0e The sound played when an actor is losing health by drowning. Returns : result ( tes3sound ) enchantedItemEffect \u2693\ufe0e Read-only . The animated texture effect that is applied onto equipped enchanted items. Returns : result ( niTextureEffect ) enchantedItemEffectCreated \u2693\ufe0e Read-only . If the enchantedItemEffect is available. Returns : result (boolean) enchantedItemEffectTextures \u2693\ufe0e Read-only . An array of textures used for the enchanted item effect, 32 elements long. Returns : result ( niSourceTexture []) flagLevitationDisabled \u2693\ufe0e If levitation is disabled. Returns : result (boolean) flagTeleportingDisabled \u2693\ufe0e If teleporting is disabled. Returns : result (boolean) globalScripts \u2693\ufe0e Read-only . A list of active global scripts. Returns : result ( tes3globalScript []) handToHandHit2Sound \u2693\ufe0e A sound played when a hand to hand attack hits. For each attack, handToHandHitSound or handToHandHitSound2 are randomly chosen. Returns : result ( tes3sound ) handToHandHitSound \u2693\ufe0e A sound played when a hand to hand attack hits. For each attack, handToHandHitSound or handToHandHitSound2 are randomly chosen. Returns : result ( tes3sound ) healthDamageSound \u2693\ufe0e The sound played when health damage is taken. Returns : result ( tes3sound ) heavyArmorHitSound \u2693\ufe0e The sound played when a heavy armor piece is hit. Returns : result ( tes3sound ) helpDelay \u2693\ufe0e A number in the range [0, 2]. The delay in seconds before a tooltip appears. Corresponds to the \"Menu help delay\" option in the Options menu. Returns : result (number) hitFader \u2693\ufe0e Read-only . Screen overlay fader that pulses when damage is taken. Returns : result ( tes3fader ) hour \u2693\ufe0e Read-only . The GameHour global variable, indicating the time of day. Returns : result ( tes3globalVariable ) hudStyle \u2693\ufe0e No known effect. Returns : result (number) inputController \u2693\ufe0e Read-only . The controller responsible for player input. Returns : result ( tes3inputController ) instance \u2693\ufe0e Read-only . Returns : result (HINSTANCE) itemRepairSound \u2693\ufe0e The sound played when an item is repaired. Returns : result ( tes3sound ) lastFrameTime \u2693\ufe0e Read-only . The value of tes3.worldController.systemTime at the start of the previous frame. Measured in milliseconds since the program was started. Returns : result (number) lightArmorHitSound \u2693\ufe0e The sound played when a light armor piece is hit. Returns : result ( tes3sound ) mapController \u2693\ufe0e Read-only . The controller responsible for the world and local maps. Returns : result (tes3mapController) maxFPS \u2693\ufe0e Maximum framerate target for the engine's FPS limiter. Returns : result (number) mediumArmorHitSound \u2693\ufe0e The sound played when a medium armor piece is hit. Returns : result ( tes3sound ) menuAlpha \u2693\ufe0e A value in the range [0, 1]. The alpha value of the black background of menus. Corresponds to the \"Menu transparency\" option in the Options menu. Returns : result (number) menuCamera \u2693\ufe0e Read-only . The access to the camera used to render menus. Returns : result ( tes3worldControllerRenderCamera ) menuClickSound \u2693\ufe0e The sound played when a UI button or other control is clicked. Returns : result ( tes3sound ) menuController \u2693\ufe0e Read-only . The controller responsible for the menu system. Returns : result ( tes3uiMenuController ) menuSizeSound \u2693\ufe0e Unused sound. Not used when a menu is resized. Returns : result ( tes3sound ) missSound \u2693\ufe0e The sound played when a weapon fails its to-hit check. Returns : result ( tes3sound ) mobManager \u2693\ufe0e Read-only . The manager responsible for mobile objects and collision. Returns : result ( tes3mobManager ) month \u2693\ufe0e Read-only . The Month global variable, indicating the current month. Month numbering starts at 0 for the first month, Morning Star. Returns : result ( tes3globalVariable ) monthsToRespawn \u2693\ufe0e Read-only . The monthsToRespawn global variable, used by the game to count the time left until containers are respawned. This is decremented at the end of a month (or end of a day with the appropriate MCP option). When it reaches 0 , containers are respawned. Returns : result ( tes3globalVariable ) mouseSensitivityX \u2693\ufe0e The horizontal camera rotation sensitivity. Corresponds to the \"Horizontal sensitivity\" option in the Options menu. Returns : result (number) mouseSensitivityY \u2693\ufe0e The vertical camera rotation sensitivity. Corresponds to the \"Vertical sensitivity\" option in the Options menu. Returns : result (number) musicSituation \u2693\ufe0e The kind of music being played. Only updates when music is not muted. 0 Explore music 1 Combat music 2 Main menu music Note: These values are available as tes3.musicSituation constants Returns : result (number) nodeCursor \u2693\ufe0e Read-only . The scenegraph node for the target crosshair. Returns : result ( niNode ) parentWindowHandle \u2693\ufe0e Read-only . Handle to the parent window. Returns : result (HWND) projectionDistance \u2693\ufe0e Returns : result (number) quests \u2693\ufe0e Read-only . A list of all available quest objects. Returns : result ( tes3quest []) quickSaveWhenResting \u2693\ufe0e Controls if auto-save on resting or waiting is enabled. Corresponds to the \"Auto-save when rest\" option in the Options menu. Returns : result (boolean) rechargingItems \u2693\ufe0e Read-only . A list of enchanted items that are recharging. Items in the list may not all belong to the player. Returns : result ( tes3rechargingItem []) shaderWaterReflectTerrain \u2693\ufe0e If pixel shader water reflection includes terrain. Not functional with MGE enabled. Returns : result (boolean) shaderWaterReflectUpdate \u2693\ufe0e Period between reflection updates for pixel shader water. Not functional with MGE enabled. Returns : result (number) shadowCamera \u2693\ufe0e Read-only . The access to the camera used for shadows rendering. Returns : result ( tes3worldControllerRenderCamera ) shadows \u2693\ufe0e An integer in the range of 0 to 6 . Controls the amount of actor shadows drawn. Corresponds to the \"Real-time shadows\" option in the Options menu. Returns : result (integer) showSubtitles \u2693\ufe0e If subtitles are shown. Corresponds to the \"Subtitles\" option in the Options menu. Returns : result (boolean) simulationTimeScalar \u2693\ufe0e A scalar used for simulation time. At the start of every frame, the deltaTime is multiplied by this value. Doing this here is safer than doing it in another event. Returns : result (number) splashController \u2693\ufe0e Read-only . Access to the splash controller. Returns : result ( tes3splashController ) splashscreenCamera \u2693\ufe0e Read-only . The access to the camera used to render splashscreens. Returns : result ( tes3worldControllerRenderCamera ) stopGameLoop \u2693\ufe0e When true, the game simulation loop will stop. Not normally used, and may have other unknown effects. Returns : result (boolean) sunglareFader \u2693\ufe0e Read-only . Screen overlay fader for sunglare. Returns : result ( tes3fader ) systemTime \u2693\ufe0e Read-only . Time in milliseconds since the program was started. Returns : result (number) timescale \u2693\ufe0e Read-only . The timescale global variable. Used to convert real time to in-game time. Returns : result ( tes3globalVariable ) transitionFader \u2693\ufe0e Read-only . Screen overlay fader for cell transitions. Returns : result ( tes3fader ) useBestAttack \u2693\ufe0e Automatically choose the best attack direction for attacks. Corresponds to the \"Always use best attack\" option in the Options menu. Returns : result (boolean) vfxManager \u2693\ufe0e Read-only . Access to the VFX manager. Returns : result ( tes3vfxManager ) viewHeight \u2693\ufe0e Read-only . The height of the UI viewport in pixels. Affected by UI scaling. For screen resolution, use tes3.getViewportSize() . Returns : result (number) viewWidth \u2693\ufe0e Read-only . The width of the UI viewport in pixels. Affected by UI scaling. For screen resolution, use tes3.getViewportSize() . Returns : result (number) weaponSwishSound \u2693\ufe0e The sound played when an attack with a melee weapon is performed. It always plays when a melee attack is released, irrespective of hit or miss. Returns : result ( tes3sound ) weatherController \u2693\ufe0e Read-only . The weather controller. Returns : result ( tes3weatherController ) werewolfFader \u2693\ufe0e Read-only . Screen overlay fader for werewolf vision. Returns : result ( tes3fader ) werewolfFOV \u2693\ufe0e The camera FOV when the player is a werewolf. Returns : result (number) worldCamera \u2693\ufe0e Read-only . The access to the world camera. Returns : result ( tes3worldControllerRenderCamera ) year \u2693\ufe0e Read-only . The Year global variable, indicating the current year. Returns : result ( tes3globalVariable ) Methods \u2693\ufe0e applyEnchantEffect \u2693\ufe0e This method applies an enchantment's effects to a scene node. local result = myObject : applyEnchantEffect ( node , enchantment ) Parameters : node ( niNode ): A scene node to which to apply the enchantment's effects. enchantment ( tes3enchantment ): The enchantment's effects to apply. Returns : result (boolean)","title":"tes3worldController"},{"location":"types/tes3worldController/#tes3worldcontroller","text":"A core game object used for storing world simulation data.","title":"tes3worldController"},{"location":"types/tes3worldController/#properties","text":"","title":"Properties"},{"location":"types/tes3worldController/#aidistancescale","text":"A value in the range [0, 1]. The (relative) maximum distance setting for AI simulation. Corresponds to the AI distance option in the Options menu. Returns : result (number)","title":"aiDistanceScale"},{"location":"types/tes3worldController/#allmobileactors","text":"Read-only . The list of all active mobile actors. Mobile actors expire after 72 hours if they have not been in a loaded cell. Returns : result ( tes3mobileActor [])","title":"allMobileActors"},{"location":"types/tes3worldController/#armcamera","text":"Read-only . The access to the first person arms camera. Returns : result ( tes3worldControllerRenderCamera )","title":"armCamera"},{"location":"types/tes3worldController/#audiocontroller","text":"Read-only . The audio controller. Returns : result ( tes3audioController )","title":"audioController"},{"location":"types/tes3worldController/#blindnessfader","text":"Read-only . Screen overlay fader for the blind effect. Returns : result ( tes3fader )","title":"blindnessFader"},{"location":"types/tes3worldController/#characterrendertarget","text":"Read-only . Returns : result (tes3worldControllerRenderTarget)","title":"characterRenderTarget"},{"location":"types/tes3worldController/#chargenstate","text":"Read-only . The charGenState global variable. Indicates progress through character generation. Has a value of -1 when chargen is complete. Returns : result ( tes3globalVariable )","title":"charGenState"},{"location":"types/tes3worldController/#countmusictracksbattle","text":"Read-only . The number of available battle music tracks. Returns : result (number)","title":"countMusicTracksBattle"},{"location":"types/tes3worldController/#countmusictracksexplore","text":"Read-only . The number of available explore music tracks. Returns : result (number)","title":"countMusicTracksExplore"},{"location":"types/tes3worldController/#criticaldamagesound","text":"The sound played when an actor takes damage from a critical hit. It plays instead of the normal health damage sound. Returns : result ( tes3sound )","title":"criticalDamageSound"},{"location":"types/tes3worldController/#cursoroff","text":"If the target crosshair is disabled. Corresponds to the \"Crosshair\" option in the Options menu. Returns : result (boolean)","title":"cursorOff"},{"location":"types/tes3worldController/#day","text":"Read-only . The Day global variable, indicating the current day. Day numbering starts at 1 for the first day of a month. Returns : result ( tes3globalVariable )","title":"day"},{"location":"types/tes3worldController/#dayspassed","text":"Read-only . The DaysPassed global variable, indicating the days passed since the game started for this character. Returns : result ( tes3globalVariable )","title":"daysPassed"},{"location":"types/tes3worldController/#deadfloatscale","text":"Returns : result (number)","title":"deadFloatScale"},{"location":"types/tes3worldController/#defaultlandsound","text":"This it the default sound played when the player lands, after a jump or a fall. Returns : result ( tes3sound )","title":"defaultLandSound"},{"location":"types/tes3worldController/#defaultlandwatersound","text":"This it the default sound played when the player lands in the water, after a jump or a fall. Returns : result ( tes3sound )","title":"defaultLandWaterSound"},{"location":"types/tes3worldController/#deltatime","text":"The time interval (in seconds) between this frame and the last frame. Useful for calculations that involve movement or damage over a period of time. Returns : result (number)","title":"deltaTime"},{"location":"types/tes3worldController/#difficulty","text":"A number in the range [-1, 1]. Corresponds to the \"Difficulty\" option in the Options menu. Returns : result (number)","title":"difficulty"},{"location":"types/tes3worldController/#drowningdamagesound","text":"The sound played when an actor takes health damage while drowning. It plays instead of the normal health damage sound. Returns : result ( tes3sound )","title":"drowningDamageSound"},{"location":"types/tes3worldController/#drownsound","text":"The sound played when an actor is losing health by drowning. Returns : result ( tes3sound )","title":"drownSound"},{"location":"types/tes3worldController/#enchanteditemeffect","text":"Read-only . The animated texture effect that is applied onto equipped enchanted items. Returns : result ( niTextureEffect )","title":"enchantedItemEffect"},{"location":"types/tes3worldController/#enchanteditemeffectcreated","text":"Read-only . If the enchantedItemEffect is available. Returns : result (boolean)","title":"enchantedItemEffectCreated"},{"location":"types/tes3worldController/#enchanteditemeffecttextures","text":"Read-only . An array of textures used for the enchanted item effect, 32 elements long. Returns : result ( niSourceTexture [])","title":"enchantedItemEffectTextures"},{"location":"types/tes3worldController/#flaglevitationdisabled","text":"If levitation is disabled. Returns : result (boolean)","title":"flagLevitationDisabled"},{"location":"types/tes3worldController/#flagteleportingdisabled","text":"If teleporting is disabled. Returns : result (boolean)","title":"flagTeleportingDisabled"},{"location":"types/tes3worldController/#globalscripts","text":"Read-only . A list of active global scripts. Returns : result ( tes3globalScript [])","title":"globalScripts"},{"location":"types/tes3worldController/#handtohandhit2sound","text":"A sound played when a hand to hand attack hits. For each attack, handToHandHitSound or handToHandHitSound2 are randomly chosen. Returns : result ( tes3sound )","title":"handToHandHit2Sound"},{"location":"types/tes3worldController/#handtohandhitsound","text":"A sound played when a hand to hand attack hits. For each attack, handToHandHitSound or handToHandHitSound2 are randomly chosen. Returns : result ( tes3sound )","title":"handToHandHitSound"},{"location":"types/tes3worldController/#healthdamagesound","text":"The sound played when health damage is taken. Returns : result ( tes3sound )","title":"healthDamageSound"},{"location":"types/tes3worldController/#heavyarmorhitsound","text":"The sound played when a heavy armor piece is hit. Returns : result ( tes3sound )","title":"heavyArmorHitSound"},{"location":"types/tes3worldController/#helpdelay","text":"A number in the range [0, 2]. The delay in seconds before a tooltip appears. Corresponds to the \"Menu help delay\" option in the Options menu. Returns : result (number)","title":"helpDelay"},{"location":"types/tes3worldController/#hitfader","text":"Read-only . Screen overlay fader that pulses when damage is taken. Returns : result ( tes3fader )","title":"hitFader"},{"location":"types/tes3worldController/#hour","text":"Read-only . The GameHour global variable, indicating the time of day. Returns : result ( tes3globalVariable )","title":"hour"},{"location":"types/tes3worldController/#hudstyle","text":"No known effect. Returns : result (number)","title":"hudStyle"},{"location":"types/tes3worldController/#inputcontroller","text":"Read-only . The controller responsible for player input. Returns : result ( tes3inputController )","title":"inputController"},{"location":"types/tes3worldController/#instance","text":"Read-only . Returns : result (HINSTANCE)","title":"instance"},{"location":"types/tes3worldController/#itemrepairsound","text":"The sound played when an item is repaired. Returns : result ( tes3sound )","title":"itemRepairSound"},{"location":"types/tes3worldController/#lastframetime","text":"Read-only . The value of tes3.worldController.systemTime at the start of the previous frame. Measured in milliseconds since the program was started. Returns : result (number)","title":"lastFrameTime"},{"location":"types/tes3worldController/#lightarmorhitsound","text":"The sound played when a light armor piece is hit. Returns : result ( tes3sound )","title":"lightArmorHitSound"},{"location":"types/tes3worldController/#mapcontroller","text":"Read-only . The controller responsible for the world and local maps. Returns : result (tes3mapController)","title":"mapController"},{"location":"types/tes3worldController/#maxfps","text":"Maximum framerate target for the engine's FPS limiter. Returns : result (number)","title":"maxFPS"},{"location":"types/tes3worldController/#mediumarmorhitsound","text":"The sound played when a medium armor piece is hit. Returns : result ( tes3sound )","title":"mediumArmorHitSound"},{"location":"types/tes3worldController/#menualpha","text":"A value in the range [0, 1]. The alpha value of the black background of menus. Corresponds to the \"Menu transparency\" option in the Options menu. Returns : result (number)","title":"menuAlpha"},{"location":"types/tes3worldController/#menucamera","text":"Read-only . The access to the camera used to render menus. Returns : result ( tes3worldControllerRenderCamera )","title":"menuCamera"},{"location":"types/tes3worldController/#menuclicksound","text":"The sound played when a UI button or other control is clicked. Returns : result ( tes3sound )","title":"menuClickSound"},{"location":"types/tes3worldController/#menucontroller","text":"Read-only . The controller responsible for the menu system. Returns : result ( tes3uiMenuController )","title":"menuController"},{"location":"types/tes3worldController/#menusizesound","text":"Unused sound. Not used when a menu is resized. Returns : result ( tes3sound )","title":"menuSizeSound"},{"location":"types/tes3worldController/#misssound","text":"The sound played when a weapon fails its to-hit check. Returns : result ( tes3sound )","title":"missSound"},{"location":"types/tes3worldController/#mobmanager","text":"Read-only . The manager responsible for mobile objects and collision. Returns : result ( tes3mobManager )","title":"mobManager"},{"location":"types/tes3worldController/#month","text":"Read-only . The Month global variable, indicating the current month. Month numbering starts at 0 for the first month, Morning Star. Returns : result ( tes3globalVariable )","title":"month"},{"location":"types/tes3worldController/#monthstorespawn","text":"Read-only . The monthsToRespawn global variable, used by the game to count the time left until containers are respawned. This is decremented at the end of a month (or end of a day with the appropriate MCP option). When it reaches 0 , containers are respawned. Returns : result ( tes3globalVariable )","title":"monthsToRespawn"},{"location":"types/tes3worldController/#mousesensitivityx","text":"The horizontal camera rotation sensitivity. Corresponds to the \"Horizontal sensitivity\" option in the Options menu. Returns : result (number)","title":"mouseSensitivityX"},{"location":"types/tes3worldController/#mousesensitivityy","text":"The vertical camera rotation sensitivity. Corresponds to the \"Vertical sensitivity\" option in the Options menu. Returns : result (number)","title":"mouseSensitivityY"},{"location":"types/tes3worldController/#musicsituation","text":"The kind of music being played. Only updates when music is not muted. 0 Explore music 1 Combat music 2 Main menu music Note: These values are available as tes3.musicSituation constants Returns : result (number)","title":"musicSituation"},{"location":"types/tes3worldController/#nodecursor","text":"Read-only . The scenegraph node for the target crosshair. Returns : result ( niNode )","title":"nodeCursor"},{"location":"types/tes3worldController/#parentwindowhandle","text":"Read-only . Handle to the parent window. Returns : result (HWND)","title":"parentWindowHandle"},{"location":"types/tes3worldController/#projectiondistance","text":"Returns : result (number)","title":"projectionDistance"},{"location":"types/tes3worldController/#quests","text":"Read-only . A list of all available quest objects. Returns : result ( tes3quest [])","title":"quests"},{"location":"types/tes3worldController/#quicksavewhenresting","text":"Controls if auto-save on resting or waiting is enabled. Corresponds to the \"Auto-save when rest\" option in the Options menu. Returns : result (boolean)","title":"quickSaveWhenResting"},{"location":"types/tes3worldController/#rechargingitems","text":"Read-only . A list of enchanted items that are recharging. Items in the list may not all belong to the player. Returns : result ( tes3rechargingItem [])","title":"rechargingItems"},{"location":"types/tes3worldController/#shaderwaterreflectterrain","text":"If pixel shader water reflection includes terrain. Not functional with MGE enabled. Returns : result (boolean)","title":"shaderWaterReflectTerrain"},{"location":"types/tes3worldController/#shaderwaterreflectupdate","text":"Period between reflection updates for pixel shader water. Not functional with MGE enabled. Returns : result (number)","title":"shaderWaterReflectUpdate"},{"location":"types/tes3worldController/#shadowcamera","text":"Read-only . The access to the camera used for shadows rendering. Returns : result ( tes3worldControllerRenderCamera )","title":"shadowCamera"},{"location":"types/tes3worldController/#shadows","text":"An integer in the range of 0 to 6 . Controls the amount of actor shadows drawn. Corresponds to the \"Real-time shadows\" option in the Options menu. Returns : result (integer)","title":"shadows"},{"location":"types/tes3worldController/#showsubtitles","text":"If subtitles are shown. Corresponds to the \"Subtitles\" option in the Options menu. Returns : result (boolean)","title":"showSubtitles"},{"location":"types/tes3worldController/#simulationtimescalar","text":"A scalar used for simulation time. At the start of every frame, the deltaTime is multiplied by this value. Doing this here is safer than doing it in another event. Returns : result (number)","title":"simulationTimeScalar"},{"location":"types/tes3worldController/#splashcontroller","text":"Read-only . Access to the splash controller. Returns : result ( tes3splashController )","title":"splashController"},{"location":"types/tes3worldController/#splashscreencamera","text":"Read-only . The access to the camera used to render splashscreens. Returns : result ( tes3worldControllerRenderCamera )","title":"splashscreenCamera"},{"location":"types/tes3worldController/#stopgameloop","text":"When true, the game simulation loop will stop. Not normally used, and may have other unknown effects. Returns : result (boolean)","title":"stopGameLoop"},{"location":"types/tes3worldController/#sunglarefader","text":"Read-only . Screen overlay fader for sunglare. Returns : result ( tes3fader )","title":"sunglareFader"},{"location":"types/tes3worldController/#systemtime","text":"Read-only . Time in milliseconds since the program was started. Returns : result (number)","title":"systemTime"},{"location":"types/tes3worldController/#timescale","text":"Read-only . The timescale global variable. Used to convert real time to in-game time. Returns : result ( tes3globalVariable )","title":"timescale"},{"location":"types/tes3worldController/#transitionfader","text":"Read-only . Screen overlay fader for cell transitions. Returns : result ( tes3fader )","title":"transitionFader"},{"location":"types/tes3worldController/#usebestattack","text":"Automatically choose the best attack direction for attacks. Corresponds to the \"Always use best attack\" option in the Options menu. Returns : result (boolean)","title":"useBestAttack"},{"location":"types/tes3worldController/#vfxmanager","text":"Read-only . Access to the VFX manager. Returns : result ( tes3vfxManager )","title":"vfxManager"},{"location":"types/tes3worldController/#viewheight","text":"Read-only . The height of the UI viewport in pixels. Affected by UI scaling. For screen resolution, use tes3.getViewportSize() . Returns : result (number)","title":"viewHeight"},{"location":"types/tes3worldController/#viewwidth","text":"Read-only . The width of the UI viewport in pixels. Affected by UI scaling. For screen resolution, use tes3.getViewportSize() . Returns : result (number)","title":"viewWidth"},{"location":"types/tes3worldController/#weaponswishsound","text":"The sound played when an attack with a melee weapon is performed. It always plays when a melee attack is released, irrespective of hit or miss. Returns : result ( tes3sound )","title":"weaponSwishSound"},{"location":"types/tes3worldController/#weathercontroller","text":"Read-only . The weather controller. Returns : result ( tes3weatherController )","title":"weatherController"},{"location":"types/tes3worldController/#werewolffader","text":"Read-only . Screen overlay fader for werewolf vision. Returns : result ( tes3fader )","title":"werewolfFader"},{"location":"types/tes3worldController/#werewolffov","text":"The camera FOV when the player is a werewolf. Returns : result (number)","title":"werewolfFOV"},{"location":"types/tes3worldController/#worldcamera","text":"Read-only . The access to the world camera. Returns : result ( tes3worldControllerRenderCamera )","title":"worldCamera"},{"location":"types/tes3worldController/#year","text":"Read-only . The Year global variable, indicating the current year. Returns : result ( tes3globalVariable )","title":"year"},{"location":"types/tes3worldController/#methods","text":"","title":"Methods"},{"location":"types/tes3worldController/#applyenchanteffect","text":"This method applies an enchantment's effects to a scene node. local result = myObject : applyEnchantEffect ( node , enchantment ) Parameters : node ( niNode ): A scene node to which to apply the enchantment's effects. enchantment ( tes3enchantment ): The enchantment's effects to apply. Returns : result (boolean)","title":"applyEnchantEffect"},{"location":"types/tes3worldControllerRenderCamera/","text":"tes3worldControllerRenderCamera \u2693\ufe0e A core game object used for storing camera objects. Properties \u2693\ufe0e cameraData \u2693\ufe0e Read-only . The additional data of the camera. Returns : result ( tes3worldControllerRenderCameraData ) cameraRoot \u2693\ufe0e Read-only . The root scene node of the camera. Returns : result ( niNode ) renderer \u2693\ufe0e Read-only . The renderer of the camera. Returns : result (niRenderer) root \u2693\ufe0e Read-only . Returns : result ( niNode )","title":"tes3worldControllerRenderCamera"},{"location":"types/tes3worldControllerRenderCamera/#tes3worldcontrollerrendercamera","text":"A core game object used for storing camera objects.","title":"tes3worldControllerRenderCamera"},{"location":"types/tes3worldControllerRenderCamera/#properties","text":"","title":"Properties"},{"location":"types/tes3worldControllerRenderCamera/#cameradata","text":"Read-only . The additional data of the camera. Returns : result ( tes3worldControllerRenderCameraData )","title":"cameraData"},{"location":"types/tes3worldControllerRenderCamera/#cameraroot","text":"Read-only . The root scene node of the camera. Returns : result ( niNode )","title":"cameraRoot"},{"location":"types/tes3worldControllerRenderCamera/#renderer","text":"Read-only . The renderer of the camera. Returns : result (niRenderer)","title":"renderer"},{"location":"types/tes3worldControllerRenderCamera/#root","text":"Read-only . Returns : result ( niNode )","title":"root"},{"location":"types/tes3worldControllerRenderCameraData/","text":"tes3worldControllerRenderCameraData \u2693\ufe0e A core game object used for storing additional data for camera objects. Properties \u2693\ufe0e camera \u2693\ufe0e The camera scene node. Returns : result ( niCamera ) farPlaneDistance \u2693\ufe0e The distance of the camera's far plane. Returns : result (number) fov \u2693\ufe0e The camera's Field of View. Returns : result (number) nearPlaneDistance \u2693\ufe0e The distance of the camera's near plane. Returns : result (number) viewportHeight \u2693\ufe0e The viewport height. Returns : result (number) viewportWidth \u2693\ufe0e The viewport width. Returns : result (number)","title":"tes3worldControllerRenderCameraData"},{"location":"types/tes3worldControllerRenderCameraData/#tes3worldcontrollerrendercameradata","text":"A core game object used for storing additional data for camera objects.","title":"tes3worldControllerRenderCameraData"},{"location":"types/tes3worldControllerRenderCameraData/#properties","text":"","title":"Properties"},{"location":"types/tes3worldControllerRenderCameraData/#camera","text":"The camera scene node. Returns : result ( niCamera )","title":"camera"},{"location":"types/tes3worldControllerRenderCameraData/#farplanedistance","text":"The distance of the camera's far plane. Returns : result (number)","title":"farPlaneDistance"},{"location":"types/tes3worldControllerRenderCameraData/#fov","text":"The camera's Field of View. Returns : result (number)","title":"fov"},{"location":"types/tes3worldControllerRenderCameraData/#nearplanedistance","text":"The distance of the camera's near plane. Returns : result (number)","title":"nearPlaneDistance"},{"location":"types/tes3worldControllerRenderCameraData/#viewportheight","text":"The viewport height. Returns : result (number)","title":"viewportHeight"},{"location":"types/tes3worldControllerRenderCameraData/#viewportwidth","text":"The viewport width. Returns : result (number)","title":"viewportWidth"}]}