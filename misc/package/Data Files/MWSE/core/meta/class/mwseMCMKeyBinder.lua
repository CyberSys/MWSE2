-- This file is autogenerated. Do not edit this file manually. Your changes will be ignored.
-- More information: https://github.com/MWSE/MWSE/tree/master/docs

--- @meta
--- This button allows the player to bind a key combination for use with hotkeys.
--- 
--- The player presses the hotkey button, a prompt asks them to press a key (or key combination using Shift, Ctrl or Alt), and the current key combo is displayed in the popup until they press “Okay” to confirm.
--- 
--- Key combos are stored in the following format ([mwseKeyCombo](../types/mwseKeyCombo.md)):
--- 
--- ```lua
--- {
--- 	keyCode = tes3.scanCode.{key},
--- 	isShiftDown = true,
--- 	isAltDown = false,
--- 	isControlDown = false,
--- },
--- ```
--- 	
--- @class mwseMCMKeyBinder : mwseMCMButton, mwseMCMSetting, mwseMCMComponent
--- @field allowCombinations boolean If true, the keybinder will let the user use modification keys: Shift, Ctrl, and Alt when rebinding.
--- @field currentCombo mwseKeyCombo|mwseKeyMouseCombo The current key combo, used while the rebind prompt messageBox is visible. The key combo is stored in `variable` field.
--- @field messageDoRebind string The text shown in a messageBox when a new key combo is bound. The default text is a localized version of: "Key binding changed to '%s'.", with the new combo string formatted in.
--- @field messageRebinded string The text shown in a messageBox when a new key combo is bound. The default text is a localized version of: "Key binding changed to '%s'.", with the new combo string formatted in.
--- @field sNotChanged string The text shown in a messageBox when the new key combo is the same as the current one. The default text is a localized version of: "Key binding not changed.".
--- @field sOkay string The text on the button in the rebind prompt messageBox. Clicking this button will change the stored key combo with the new one. The default text is a localized version of: "Rebind".
mwseMCMKeyBinder = {}

--- Stores the value of the `currentCombo` to the variable if needed. Notifies the user of the result.
--- @param e tes3messageBoxCallbackData Only changes the variable's value if "Rebind" button was pressed.
function mwseMCMKeyBinder:bindKey(e) end

--- Returns a string representing given `keyCombo`. For example, "Ctrl-C".
--- @param keyCombo mwseKeyCombo|mwseKeyMouseCombo No description yet available.
--- @return string result No description yet available.
function mwseMCMKeyBinder:getComboString(keyCombo) end

--- Returns the letter the provided `keyCode` represents.
--- @param keyCode integer|nil No description yet available.
--- @return string|nil letter No description yet available.
function mwseMCMKeyBinder:getLetter(keyCode) end

--- Returns a string representing the key combo currently store in `variable`. For example, "Ctrl-C".
--- @return string result No description yet available.
function mwseMCMKeyBinder:getText() end

--- Changes the `currentCombo` to the result of [keyDown](https://mwse.github.io/MWSE/events/keyDown) event.
--- @param e keyDownEventData No description yet available.
function mwseMCMKeyBinder:keySelected(e) end

--- Creates a new KeyBinder.
--- @param data mwseMCMKeyBinder.new.data? This table accepts the following values:
--- 
--- `label`: string? — *Optional*. Text shown next to the button.
--- 
--- `description`: string? — *Optional*. If in a [Sidebar Page](../types/mwseMCMSideBarPage.md), the description will be shown on mouseover.
--- 
--- `allowCombinations `: boolean? — *Default*: `true`. If true, the keybinder will let the user use modification keys: Shift, Ctrl, and Alt when rebinding.
--- 
--- `leftSide `: boolean? — *Default*: `true`. If true, the button will be created on the left and label on the right.
--- 
--- `variable`: mwseMCMConfigVariable|mwseMCMCustomVariable|mwseMCMGlobal|mwseMCMGlobalBoolean|mwseMCMPlayerData|mwseMCMTableVariable|mwseMCMVariable|mwseMCMSettingNewVariable|nil — *Optional*. A variable for this KeyBinder.
--- 
--- `defaultSetting`: mwseKeyCombo|mwseKeyMouseCombo|nil — *Optional*. If `defaultSetting` wasn't passed in the `variable` table, can be passed here. The new variable will be initialized to this value.
--- 
--- `callback`: nil|fun(self: mwseMCMKeyBinder) — *Optional*. The custom function called when the player interacts with this KeyBinder.
--- 
--- `inGameOnly`: boolean? — *Default*: `false`. If true, the setting is disabled while the game is on main menu.
--- 
--- `restartRequired`: boolean? — *Default*: `false`. If true, updating this Setting will notify the player to restart the game.
--- 
--- `restartRequiredMessage`: string? — *Optional*. The message shown if restartRequired is triggered. The default text is a localized version of: "The game must be restarted before this change will come into effect."
--- 
--- `indent`: integer? — *Default*: `12`. The left padding size in pixels. Only used if the `childIndent` isn't set on the parent component.
--- 
--- `childIndent`: integer? — *Optional*. The left padding size in pixels. Used on all the child components.
--- 
--- `paddingBottom`: integer? — *Default*: `4`. The bottom border size in pixels. Only used if the `childSpacing` is unset on the parent component.
--- 
--- `childSpacing`: integer? — *Optional*. The bottom border size in pixels. Used on all the child components.
--- 
--- `postCreate`: nil|fun(self: mwseMCMKeyBinder) — *Optional*. Can define a custom formatting function to make adjustments to any element saved in `self.elements`.
--- 
--- `class`: string? — *Optional*. No description yet available.
--- 
--- `componentType`: string? — *Optional*. No description yet available.
--- 
--- `parentComponent`: mwseMCMActiveInfo|mwseMCMButton|mwseMCMCategory|mwseMCMComponent|mwseMCMDecimalSlider|mwseMCMDropdown|mwseMCMExclusionsPage|mwseMCMFilterPage|mwseMCMHyperlink|mwseMCMInfo|mwseMCMKeyBinder|mwseMCMKeyMouseBinder|mwseMCMMouseOverInfo|mwseMCMMouseOverPage|mwseMCMOnOffButton|mwseMCMPage|mwseMCMParagraphField|mwseMCMSetting|mwseMCMSideBarPage|mwseMCMSideBySideBlock|mwseMCMSlider|mwseMCMTemplate|mwseMCMTextField|mwseMCMYesNoButton|nil — *Optional*. No description yet available.
--- @return mwseMCMKeyBinder button No description yet available.
function mwseMCMKeyBinder:new(data) end

---Table parameter definitions for `mwseMCMKeyBinder.new`.
--- @class mwseMCMKeyBinder.new.data
--- @field label string? *Optional*. Text shown next to the button.
--- @field description string? *Optional*. If in a [Sidebar Page](../types/mwseMCMSideBarPage.md), the description will be shown on mouseover.
--- @field allowCombinations  boolean? *Default*: `true`. If true, the keybinder will let the user use modification keys: Shift, Ctrl, and Alt when rebinding.
--- @field leftSide  boolean? *Default*: `true`. If true, the button will be created on the left and label on the right.
--- @field variable mwseMCMConfigVariable|mwseMCMCustomVariable|mwseMCMGlobal|mwseMCMGlobalBoolean|mwseMCMPlayerData|mwseMCMTableVariable|mwseMCMVariable|mwseMCMSettingNewVariable|nil *Optional*. A variable for this KeyBinder.
--- @field defaultSetting mwseKeyCombo|mwseKeyMouseCombo|nil *Optional*. If `defaultSetting` wasn't passed in the `variable` table, can be passed here. The new variable will be initialized to this value.
--- @field callback nil|fun(self: mwseMCMKeyBinder) *Optional*. The custom function called when the player interacts with this KeyBinder.
--- @field inGameOnly boolean? *Default*: `false`. If true, the setting is disabled while the game is on main menu.
--- @field restartRequired boolean? *Default*: `false`. If true, updating this Setting will notify the player to restart the game.
--- @field restartRequiredMessage string? *Optional*. The message shown if restartRequired is triggered. The default text is a localized version of: "The game must be restarted before this change will come into effect."
--- @field indent integer? *Default*: `12`. The left padding size in pixels. Only used if the `childIndent` isn't set on the parent component.
--- @field childIndent integer? *Optional*. The left padding size in pixels. Used on all the child components.
--- @field paddingBottom integer? *Default*: `4`. The bottom border size in pixels. Only used if the `childSpacing` is unset on the parent component.
--- @field childSpacing integer? *Optional*. The bottom border size in pixels. Used on all the child components.
--- @field postCreate nil|fun(self: mwseMCMKeyBinder) *Optional*. Can define a custom formatting function to make adjustments to any element saved in `self.elements`.
--- @field class string? *Optional*. No description yet available.
--- @field componentType string? *Optional*. No description yet available.
--- @field parentComponent mwseMCMActiveInfo|mwseMCMButton|mwseMCMCategory|mwseMCMComponent|mwseMCMDecimalSlider|mwseMCMDropdown|mwseMCMExclusionsPage|mwseMCMFilterPage|mwseMCMHyperlink|mwseMCMInfo|mwseMCMKeyBinder|mwseMCMKeyMouseBinder|mwseMCMMouseOverInfo|mwseMCMMouseOverPage|mwseMCMOnOffButton|mwseMCMPage|mwseMCMParagraphField|mwseMCMSetting|mwseMCMSideBarPage|mwseMCMSideBySideBlock|mwseMCMSlider|mwseMCMTemplate|mwseMCMTextField|mwseMCMYesNoButton|nil *Optional*. No description yet available.

--- Shows the rebind prompt messageBox. This messageBox shows the current key combo and allows changing it.
--- @param keyCombo mwseKeyCombo|mwseKeyMouseCombo No description yet available.
function mwseMCMKeyBinder:showKeyBindMessage(keyCombo) end

--- Sets the `currentCombo` to the value stored in the `variable` and calls `showKeyBindMessage`.
function mwseMCMKeyBinder:update() end

